{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u8ba1\u7b97\u673a\u7cfb\u5b66\u751f\u79d1\u534f\u6280\u80fd\u5f15\u5bfc\u6587\u6863 \u00b6 \u672c\u6280\u80fd\u5f15\u5bfc\u6587\u6863\u7531\u6e05\u534e\u5927\u5b66\u8ba1\u7b97\u673a\u7cfb\u5b66\u751f\u79d1\u534f\u7ef4\u62a4\uff0c\u76ee\u6807\u5728\u4e8e\u8ba9\u8ba1\u7b97\u673a\u7c7b\u4e0e\u8ba1\u7b97\u673a\u7cfb\u7684\u5b66\u751f\u80fd\u591f\u5feb\u901f\u5730\u638c\u63e1\u67d0\u4e9b\u7279\u5b9a\u7684\u6280\u80fd\uff0c\u5e76\u4e14\u901a\u8fc7\u7ed9\u51fa\u8fd9\u4e9b\u6280\u80fd\u5728\u8bfe\u7a0b\u3001\u79d1\u7814\u4e0e\u5b9e\u4e60\u4e2d\u53ef\u80fd\u8fd0\u7528\u7684\u65b9\u5f0f\uff0c\u8282\u7701\u540c\u5b66\u4eec\u6536\u96c6\u76f8\u5173\u8d44\u6599\u7684\u65f6\u95f4\uff0c\u540c\u65f6\u63d0\u5347\u540c\u5b66\u4eec\u5b66\u4e60\u65b0\u6280\u80fd\u7684\u80fd\u529b\u3002 But I can only show you the door. You have to walk through it. \u6211\u4eec\u53ea\u4f1a\u4ecb\u7ecd\u4e00\u79cd\u4e3b\u9898\u6700\u57fa\u672c\u7684\u5165\u95e8\u5185\u5bb9\uff0c\u5e76\u4f1a\u5c31\u540e\u7eed\u7684\u6269\u5c55\u5b66\u4e60\u7ed9\u51fa\u4e00\u4e9b\u76f8\u5e94\u7684\u6307\u5bfc\u3002\u4e0d\u8fc7\uff0c\u4fdd\u6301\u81ea\u8eab\u5bf9\u77e5\u8bc6\u7684\u8ffd\u6c42\uff0c\u4e0d\u65ad\u953b\u70bc\u81ea\u5df1\u5229\u7528\u641c\u7d22\u5f15\u64ce\u89e3\u51b3\u95ee\u9898\u7684\u80fd\u529b\uff0c\u662f\u975e\u5e38\u6709\u5fc5\u8981\u7684\u3002 \u4f7f\u7528\u672c\u6587\u6863\u4e4b\u524d\uff0c\u53ef\u4ee5\u9605\u8bfb \u8bfb\u8005\u987b\u77e5 \uff0c\u4e86\u89e3\u6211\u4eec\u5e0c\u671b\u8bfb\u8005\u5982\u4f55\u5229\u7528\u597d\u8fd9\u4efd\u6587\u6863\uff0c\u4ee5\u53ca\u5982\u4f55\u5411\u6211\u4eec\u53cd\u9988\u95ee\u9898\u3002 \u5f53\u7136\uff0c\u6211\u4eec\u4e5f\u6b22\u8fce\u5c4f\u5e55\u524d\u7684\u60a8\u5bf9\u6211\u4eec\u7684\u6587\u6863\u8fdb\u884c\u8d21\u732e\u3002\u8bf7\u5728\u4ed4\u7ec6\u9605\u8bfb \u7f16\u8f91\u8005\u987b\u77e5 \u540e\uff0c\u4e3a\u6280\u80fd\u5f15\u5bfc\u6587\u6863\u7684\u5efa\u8bbe\u6dfb\u7816\u52a0\u74e6\u3002 \u6587\u6863\u67b6\u6784 \u00b6 \u6587\u6863\u76ee\u524d\u7531\u8bfe\u7a0b\u6307\u5f15\u3001\u57fa\u672c\u6280\u80fd\u3001\u7f16\u7a0b\u8bed\u8a00\u3001\u524d\u7aef\u6846\u67b6\u3001\u540e\u7aef\u6846\u67b6\u3001\u4eba\u5de5\u667a\u80fd & \u673a\u5668\u5b66\u4e60\u3001\u8d44\u6e90\u94fe\u63a5\u51e0\u4e2a\u9886\u57df\u7ec4\u6210\u3002\u6bcf\u4e2a\u9886\u57df\u4e0b\u6709\u591a\u4e2a\u76f8\u5e94\u7684\u4e3b\u9898\uff0c\u8fd9\u91cc\u4e0d\u518d\u4e00\u4e00\u5217\u4e3e\u3002 \u5bf9\u4e8e PC \u7aef\u8bfb\u8005\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u9875\u9762\u4e0a\u65b9\u7684 Navbar \u9009\u62e9\u76f8\u5e94\u9886\u57df\uff0c\u9875\u9762\u5de6\u4fa7\u7684 Sidebar \u9009\u62e9\u76f8\u5e94\u4e3b\u9898\u8fdb\u884c\u9605\u8bfb\u3002 \u5bf9\u4e8e\u79fb\u52a8\u7aef\u8bfb\u8005\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u70b9\u51fb\u9875\u9762\u5de6\u4e0a\u89d2\u7684\u76ee\u5f55 Icon\uff0c\u8fdb\u800c\u70b9\u51fb\u8fd4\u56de Icon\uff0c\u7136\u540e\u9009\u62e9\u76f8\u5e94\u7684\u9886\u57df\uff0c\u8fdb\u800c\u9009\u62e9\u76f8\u5e94\u4e3b\u9898\u8fdb\u884c\u9605\u8bfb\u3002 \u81f4\u8c22 \u00b6 \u611f\u8c22\u4e3a\u8fd9\u4e00\u4efd\u6587\u6863\u505a\u51fa\u8d21\u732e\u7684\u5404\u4f4d\u3002 \u8d21\u732e\u8005 \u8d21\u732e\u5185\u5bb9 Ashitemaru JavaScript\u3001TypeScript \u6587\u6863\u7ef4\u62a4 c7w Git\u3001Linux\u3001Python \u57fa\u7840 \u6587\u6863\u7ef4\u62a4 xmh Markdown \u6587\u6863\u7ef4\u62a4 ayf Python \u722c\u866b\u3001Python \u5305\u7ba1\u7406\u3001Node.js ChrisZhang Rust livingshade \u5bf9\u6297\u641c\u7d22 lys Swift\u3001Swift UI zcy0 C++ OOP","title":"\u8ba1\u7b97\u673a\u7cfb\u5b66\u751f\u79d1\u534f\u6280\u80fd\u5f15\u5bfc\u6587\u6863"},{"location":"#_1","text":"\u672c\u6280\u80fd\u5f15\u5bfc\u6587\u6863\u7531\u6e05\u534e\u5927\u5b66\u8ba1\u7b97\u673a\u7cfb\u5b66\u751f\u79d1\u534f\u7ef4\u62a4\uff0c\u76ee\u6807\u5728\u4e8e\u8ba9\u8ba1\u7b97\u673a\u7c7b\u4e0e\u8ba1\u7b97\u673a\u7cfb\u7684\u5b66\u751f\u80fd\u591f\u5feb\u901f\u5730\u638c\u63e1\u67d0\u4e9b\u7279\u5b9a\u7684\u6280\u80fd\uff0c\u5e76\u4e14\u901a\u8fc7\u7ed9\u51fa\u8fd9\u4e9b\u6280\u80fd\u5728\u8bfe\u7a0b\u3001\u79d1\u7814\u4e0e\u5b9e\u4e60\u4e2d\u53ef\u80fd\u8fd0\u7528\u7684\u65b9\u5f0f\uff0c\u8282\u7701\u540c\u5b66\u4eec\u6536\u96c6\u76f8\u5173\u8d44\u6599\u7684\u65f6\u95f4\uff0c\u540c\u65f6\u63d0\u5347\u540c\u5b66\u4eec\u5b66\u4e60\u65b0\u6280\u80fd\u7684\u80fd\u529b\u3002 But I can only show you the door. You have to walk through it. \u6211\u4eec\u53ea\u4f1a\u4ecb\u7ecd\u4e00\u79cd\u4e3b\u9898\u6700\u57fa\u672c\u7684\u5165\u95e8\u5185\u5bb9\uff0c\u5e76\u4f1a\u5c31\u540e\u7eed\u7684\u6269\u5c55\u5b66\u4e60\u7ed9\u51fa\u4e00\u4e9b\u76f8\u5e94\u7684\u6307\u5bfc\u3002\u4e0d\u8fc7\uff0c\u4fdd\u6301\u81ea\u8eab\u5bf9\u77e5\u8bc6\u7684\u8ffd\u6c42\uff0c\u4e0d\u65ad\u953b\u70bc\u81ea\u5df1\u5229\u7528\u641c\u7d22\u5f15\u64ce\u89e3\u51b3\u95ee\u9898\u7684\u80fd\u529b\uff0c\u662f\u975e\u5e38\u6709\u5fc5\u8981\u7684\u3002 \u4f7f\u7528\u672c\u6587\u6863\u4e4b\u524d\uff0c\u53ef\u4ee5\u9605\u8bfb \u8bfb\u8005\u987b\u77e5 \uff0c\u4e86\u89e3\u6211\u4eec\u5e0c\u671b\u8bfb\u8005\u5982\u4f55\u5229\u7528\u597d\u8fd9\u4efd\u6587\u6863\uff0c\u4ee5\u53ca\u5982\u4f55\u5411\u6211\u4eec\u53cd\u9988\u95ee\u9898\u3002 \u5f53\u7136\uff0c\u6211\u4eec\u4e5f\u6b22\u8fce\u5c4f\u5e55\u524d\u7684\u60a8\u5bf9\u6211\u4eec\u7684\u6587\u6863\u8fdb\u884c\u8d21\u732e\u3002\u8bf7\u5728\u4ed4\u7ec6\u9605\u8bfb \u7f16\u8f91\u8005\u987b\u77e5 \u540e\uff0c\u4e3a\u6280\u80fd\u5f15\u5bfc\u6587\u6863\u7684\u5efa\u8bbe\u6dfb\u7816\u52a0\u74e6\u3002","title":"\u8ba1\u7b97\u673a\u7cfb\u5b66\u751f\u79d1\u534f\u6280\u80fd\u5f15\u5bfc\u6587\u6863"},{"location":"#_2","text":"\u6587\u6863\u76ee\u524d\u7531\u8bfe\u7a0b\u6307\u5f15\u3001\u57fa\u672c\u6280\u80fd\u3001\u7f16\u7a0b\u8bed\u8a00\u3001\u524d\u7aef\u6846\u67b6\u3001\u540e\u7aef\u6846\u67b6\u3001\u4eba\u5de5\u667a\u80fd & \u673a\u5668\u5b66\u4e60\u3001\u8d44\u6e90\u94fe\u63a5\u51e0\u4e2a\u9886\u57df\u7ec4\u6210\u3002\u6bcf\u4e2a\u9886\u57df\u4e0b\u6709\u591a\u4e2a\u76f8\u5e94\u7684\u4e3b\u9898\uff0c\u8fd9\u91cc\u4e0d\u518d\u4e00\u4e00\u5217\u4e3e\u3002 \u5bf9\u4e8e PC \u7aef\u8bfb\u8005\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u9875\u9762\u4e0a\u65b9\u7684 Navbar \u9009\u62e9\u76f8\u5e94\u9886\u57df\uff0c\u9875\u9762\u5de6\u4fa7\u7684 Sidebar \u9009\u62e9\u76f8\u5e94\u4e3b\u9898\u8fdb\u884c\u9605\u8bfb\u3002 \u5bf9\u4e8e\u79fb\u52a8\u7aef\u8bfb\u8005\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u70b9\u51fb\u9875\u9762\u5de6\u4e0a\u89d2\u7684\u76ee\u5f55 Icon\uff0c\u8fdb\u800c\u70b9\u51fb\u8fd4\u56de Icon\uff0c\u7136\u540e\u9009\u62e9\u76f8\u5e94\u7684\u9886\u57df\uff0c\u8fdb\u800c\u9009\u62e9\u76f8\u5e94\u4e3b\u9898\u8fdb\u884c\u9605\u8bfb\u3002","title":"\u6587\u6863\u67b6\u6784"},{"location":"#_3","text":"\u611f\u8c22\u4e3a\u8fd9\u4e00\u4efd\u6587\u6863\u505a\u51fa\u8d21\u732e\u7684\u5404\u4f4d\u3002 \u8d21\u732e\u8005 \u8d21\u732e\u5185\u5bb9 Ashitemaru JavaScript\u3001TypeScript \u6587\u6863\u7ef4\u62a4 c7w Git\u3001Linux\u3001Python \u57fa\u7840 \u6587\u6863\u7ef4\u62a4 xmh Markdown \u6587\u6863\u7ef4\u62a4 ayf Python \u722c\u866b\u3001Python \u5305\u7ba1\u7406\u3001Node.js ChrisZhang Rust livingshade \u5bf9\u6297\u641c\u7d22 lys Swift\u3001Swift UI zcy0 C++ OOP","title":"\u81f4\u8c22"},{"location":"ai-ml/","text":"\u4eba\u5de5\u667a\u80fd & \u673a\u5668\u5b66\u4e60 \u00b6 \u672c\u90e8\u5206\u4e3b\u8981\u4ecb\u7ecd\u4eba\u5de5\u667a\u80fd\u9886\u57df\u76f8\u5173\u77e5\u8bc6\u4ee5\u53ca\u53ef\u80fd\u4f7f\u7528\u5230\u7684\u6846\u67b6\u3001\u5de5\u5177\u3002 \u4e0d\u5b8c\u5584\u7684\u6761\u76ee \u6211\u4eec\u5e0c\u671b\u6709\u66f4\u591a\u7684\u7f16\u5199\u8005\u4e3a\u8fd9\u4e00\u90e8\u5206\u7f16\u5199\u6587\u6863\uff0c\u5c24\u5176\u662f Pytorch \u76f8\u5173\u3002","title":"\u4eba\u5de5\u667a\u80fd & \u673a\u5668\u5b66\u4e60"},{"location":"ai-ml/#_1","text":"\u672c\u90e8\u5206\u4e3b\u8981\u4ecb\u7ecd\u4eba\u5de5\u667a\u80fd\u9886\u57df\u76f8\u5173\u77e5\u8bc6\u4ee5\u53ca\u53ef\u80fd\u4f7f\u7528\u5230\u7684\u6846\u67b6\u3001\u5de5\u5177\u3002 \u4e0d\u5b8c\u5584\u7684\u6761\u76ee \u6211\u4eec\u5e0c\u671b\u6709\u66f4\u591a\u7684\u7f16\u5199\u8005\u4e3a\u8fd9\u4e00\u90e8\u5206\u7f16\u5199\u6587\u6863\uff0c\u5c24\u5176\u662f Pytorch \u76f8\u5173\u3002","title":"\u4eba\u5de5\u667a\u80fd &amp; \u673a\u5668\u5b66\u4e60"},{"location":"ai-ml/adversarial-search/","text":"\u5bf9\u6297\u641c\u7d22\u7b80\u4ecb \u00b6 \u524d\u7f6e\u77e5\u8bc6 \u00b6 \u5177\u6709\u6700\u57fa\u672c\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u601d\u60f3\uff0c\u5bf9\u4e8e\u6df1\u5ea6\u4f18\u5148\u641c\u7d20\u3001\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u7b49\u6700\u57fa\u672c\u7684\u641c\u7d22\u7b97\u6cd5\u6709\u7740\u4e00\u5b9a\u7684\u4e86\u89e3\u3002 \u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d Snake Go \u4f1a\u4f5c\u4e3a\u4f8b\u5b50\u51fa\u73b0\uff0c\u5176\u5177\u4f53\u89c4\u5219\u8bf7\u53c2\u7167 Saiblo \u6e38\u620f\u94fe\u63a5 \u3002 \u6982\u8ff0 \u00b6 \u5bf9\u6297\u641c\u7d22\uff08\u82f1\u8bed\uff1aAdversarial search\uff09\u662f\u4e00\u4e2a\u5728\u535a\u5f08\u4e2d\u9009\u53d6\u51b3\u7b56\u7684\u65b9\u6cd5\uff0c\u5b83\u4e0e\u535a\u5f08\u8bba\u5bc6\u5207\u76f8\u5173\u3002\u4f46\u662f\u5728\u672c\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u4ec5\u8ba8\u8bba\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5\u4e0b\u7684\u6e38\u620f\uff0c\u5b83\u5177\u6709\u4ee5\u4e0b\u7279\u5f81\uff1a \u6e38\u620f\u6709\u4e14\u4ec5\u6709\u4e24\u4e2a\u73a9\u5bb6\u53c2\u4e0e\uff0c\u5206\u8f6e\u8fdb\u884c\uff0c\u53cc\u65b9\u8f6e\u6d41\u505a\u51fa\u51b3\u7b56\u3002 (Fair) \u53cc\u65b9\u5747\u77e5\u9053\u6e38\u620f\u7684\u4e00\u5207\u5b8c\u6574\u4fe1\u606f\u3002 (Markov) \u4efb\u610f\u4e00\u4e2a\u6e38\u620f\u8005\u5728\u67d0\u4e00\u8f6e\u53ef\u4ee5\u505a\u51fa\u7684\u51b3\u7b56\u53ea\u4e0e\u5f53\u524d\u8f6e\u7684\u6e38\u620f\u72b6\u6001\u6709\u5173\uff0c\u4e0e\u4e4b\u524d\u6216\u8005\u4e4b\u540e\u7684\u51b3\u7b56\u65e0\u5173\u3002 (Finite) \u6e38\u620f\u4e00\u5b9a\u4f1a\u5728\u6709\u9650\u8f6e\u5185\u7ed3\u675f\u3002 (Zero-Sum) \u6e38\u620f\u7ed3\u675f\u65f6\u4e00\u5b9a\u6709\u4e00\u65b9\u80dc\u5229\uff0c\u53e6\u4e00\u65b9\u5931\u8d25\uff0c\u4e0d\u5b58\u5728\u5e73\u5c40\u3002 \u6211\u4eec\u79f0\u67d0\u65b9\u80dc\u5229\u4e86\uff0c\u5f53\u4e14\u4ec5\u5f53\u5728\u67d0\u4e00\u8f6e\u4e2d\u8f6e\u5230\u5bf9\u65b9\u884c\u52a8\uff0c\u4f46\u5bf9\u65b9\u6ca1\u6709\u5408\u6cd5\u7684\u51b3\u7b56\u3002 \u503c\u5f97\u7279\u522b\u6307\u51fa\u7684\u662f\uff0c\u6709\u4e9b\u6e38\u620f\u53ef\u80fd\u4e0d\u6ee1\u8db3\u4ee5\u4e0a\u8981\u6c42\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7\u5c06\u5176\u8fdb\u884c\u7b49\u4ef7\u8f6c\u5316\u6765\u5f97\u5230\u3002 \u6bd4\u5982\u6e38\u620f Snake Go\uff0c\u5b83\u5e76\u4e0d\u6ee1\u8db3\u6700\u540e\u4e00\u6761\u3002\u4f46\u82e5\u5c06\u72b6\u6001\u5b9a\u4e49\u4e3a (\\mathrm{turn}, \\mathrm{player}, \\mathrm{context}) (\\mathrm{turn}, \\mathrm{player}, \\mathrm{context}) \uff0c\u8fd9\u4e09\u5143\u7ec4\u5206\u522b\u8868\u793a\u8f6e\u6570\uff0c\u5f53\u524d\u73a9\u5bb6\u4ee5\u53ca\u6e38\u620f\u7684\u4e0a\u4e0b\u6587\u3002\u5e76\u4e14\u4e3a\u73a9\u5bb6\u6dfb\u52a0\u4e00\u4e2a\u51b3\u7b56 \\mathrm{pass} \\mathrm{pass} \uff0c\u5f53\u4e14\u4ec5\u5f53\u8be5\u73a9\u5bb6\u6ca1\u6709\u86c7\u65f6\u53ef\u7528\u3002\u4e3a\u73a9\u5bb6\u6dfb\u52a0\u4e00\u4e2a\u51b3\u7b56 \\mathrm{win} \\mathrm{win} \uff0c\u5f53\u4e14\u4ec5\u5f53\u8fbe\u5230\u56de\u5408\u4e0a\u9650\u65f6\u5206\u6570\u8f83\u591a\uff08\u76f8\u7b49\u65f6\u540e\u624b\uff09\u8005\u53ef\u7528\u3002\u5219\u6539\u53d8\u540e\u7684\u6e38\u620f\u6ee1\u8db3\u4ee5\u4e0a\u89c4\u5219\uff0c\u5e76\u4e14\u4e0e\u6211\u4eec\u8ba8\u8bba\u7684 Snake Go \u7b49\u4ef7\u3002 \u5bf9\u6297\u641c\u7d22\u662f\u4e00\u79cd\u641c\u7d22\u7b97\u6cd5\uff0c\u5b83\u89e3\u51b3\u7684\u662f\u8fd9\u6837\u7684\u95ee\u9898\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u6e38\u620f\u5728\u67d0\u4e00\u8f6e\u7684\u72b6\u6001\uff0c\u5728\u4e00\u5b9a\u7684\u65f6\u95f4\u548c\u7a7a\u95f4\u9650\u5236\u4e0b\uff0c\u4e3a\u5f53\u524d\u884c\u52a8\u7684\u73a9\u5bb6\u63d0\u4f9b\u4e00\u4e2a\u51b3\u7b56\uff0c\u4f7f\u5f97\u73a9\u5bb6\u4e4b\u540e\u66f4\u6709\u53ef\u80fd\u80dc\u5229\u3002 SG \u641c\u7d22 \u00b6 \u6211\u4eec\u9996\u5148\u8ba8\u8bba\u6700\u7b80\u5355\u7684\u60c5\u51b5\uff0c\u5982\u679c\u6211\u4eec\u6709\u5145\u8db3\u7684\u65f6\u95f4\u548c\u7a7a\u95f4\uff0c\u7531\u4e8e\u6e38\u620f\u672c\u8eab\u662f\u6709\u9650\u7684\uff0c\u5e76\u4e14\u6e38\u620f\u662f\u516c\u5e73\u7684\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u7ed9\u5b9a\u7684\u72b6\u6001\uff0c\u5176\u80dc\u8005\u662f\u786e\u5b9a\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u6211\u4eec\u904d\u5386\u4e86\u8fd9\u4e2a\u72b6\u6001\u53ef\u80fd\u62d3\u5c55\u51fa\u7684\u6240\u6709\u72b6\u6001\uff0c\u5c31\u53ef\u80fd\u63a8\u65ad\u51fa\u8fd9\u4e2a\u72b6\u6001\u7684\u80dc\u8005\u3002 \u4e3a\u4e86\u7b80\u5316\u63cf\u8ff0\uff0c\u6211\u4eec\u7ed9\u51fa\u4e00\u4e9b\u5f62\u5f0f\u5316\u7684\u7b26\u53f7\u5b9a\u4e49\uff1a s s \u8868\u793a\u6e38\u620f\u7684\u4e00\u4e2a\u72b6\u6001\uff0c\u5b83\u901a\u5e38\u662f (\\mathrm{turn}, \\mathrm{player}, \\mathrm{context}) (\\mathrm{turn}, \\mathrm{player}, \\mathrm{context}) \u7684\u4e09\u5143\u7ec4\uff0c\u5373\u6e38\u620f\u7684\u8f6e\u6570\u3001\u8be5\u8f6e\u5e94\u5f53\u884c\u52a8\u7684\u73a9\u5bb6\u4ee5\u53ca\u6e38\u620f\u7684\u5176\u4ed6\u4fe1\u606f\u3002 \u6211\u4eec\u7528 \\mathrm{player} = 0, 1 \\mathrm{player} = 0, 1 \u6765\u5206\u522b\u8868\u793a\u4e24\u540d\u73a9\u5bb6\u3002\u4e3a\u4e86\u7b80\u5316\u63cf\u8ff0\uff0c\u6211\u4eec\u79f0 \\mathrm{player} \\mathrm{player} \u4e3a\u72b6\u6001 s s \u7684\u5148\u624b\uff0c\u5bf9\u5e94\u5730 \\mathrm{player} \\oplus 1 \\mathrm{player} \\oplus 1 \u4e3a\u72b6\u6001 s s \u7684\u540e\u624b\u3002\u8fd9\u91cc \\oplus \\oplus \u8868\u793a\u5f02\u6216\u3002 \\mathrm{action}(s) = \\{a_1, a_2, \\cdots, a_m\\} \\mathrm{action}(s) = \\{a_1, a_2, \\cdots, a_m\\} \u662f\u4e00\u4e2a\u96c6\u5408\uff0c\u7ed9\u51fa\u4e86 s s \u72b6\u6001\u4e0b\u6240\u6709\u53ef\u80fd\u7684\u51b3\u7b56\u3002\u5982\u679c \\mathrm{action}(s) = \\varnothing \\mathrm{action}(s) = \\varnothing \u5219\u8bf4\u660e s s \u662f\u7ec8\u6001\uff0c\u7528 s \\in V_T s \\in V_T \u8868\u793a\uff0c\u6b64\u65f6\u6e38\u620f\u5df2\u7ecf\u7ed3\u675f\u5e76\u4e14 \\mathrm{player} \\mathrm{player} \u5931\u8d25\u4e86\u3002 \\delta(s, a)=s' \\delta(s, a)=s' \u662f\u8f6c\u79fb\u51fd\u6570\uff0c\u5b83\u8868\u793a\u5728\u72b6\u6001 s s \u91c7\u53d6\u51b3\u7b56 a a \u540e\u8f6c\u79fb\u5230\u7684\u72b6\u6001\u4e3a s' s' \u3002 \u7279\u522b\u5730\uff0c\u6211\u4eec\u5b9a\u4e49 S_0 S_0 \u4e3a\u6700\u521d\u7ed9\u5b9a\u7684\u72b6\u6001\uff0c\u5373\u521d\u6001\u3002 \u5982\u679c\u4e00\u4e2a\u72b6\u6001 s = (\\mathrm{turn}, \\mathrm{player}, \\mathrm{context}) s = (\\mathrm{turn}, \\mathrm{player}, \\mathrm{context}) \u662f\u80dc\u8005\u662f \\rm{player} \\rm{player} \uff0c\u90a3\u4e48\u79f0\u5176\u662f\u5148\u624b\u5fc5\u80dc\u7684\uff0c\u5426\u5219\u79f0\u5b83\u662f\u5148\u624b\u5fc5\u8d25\u7684\u3002 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u7b97\u6cd5\u6765\u786e\u5b9a\u4efb\u4f55\u4e00\u4e2a\u72b6\u6001\u7684\u80dc\u8d1f\u6027\uff1a \u5982\u679c s \\in V_T s \\in V_T \uff0c\u5219 s s \u662f\u5148\u624b\u5fc5\u8d25\u7684\uff0c\u5426\u5219\u8003\u8651 s s \u80fd\u591f\u8f6c\u79fb\u5230\u7684\u6240\u6709\u96c6\u5408\uff1a $$ \\mathrm{ch}[s] = \\{s' \\mid \\delta(s, a) = s', \\forall a \\in \\mathrm{action}(s)\\} $$ \u5982\u679c \\forall t, t\\in \\mathrm{ch}[s] \\forall t, t\\in \\mathrm{ch}[s] \uff0c t t \u662f\u5148\u624b\u5fc5\u80dc\u7684\uff0c\u90a3\u4e48 s s \u662f\u5148\u624b\u5fc5\u8d25\u7684\u3002 \u5982\u679c \\exists t, t\\in \\mathrm{ch}[s] \\exists t, t\\in \\mathrm{ch}[s] \uff0c t t \u662f\u5148\u624b\u5fc5\u8d25\u7684\uff0c\u90a3\u4e48 s s \u662f\u5148\u624b\u5fc5\u80dc\u7684\u3002 \u8be5\u7b97\u6cd5\u4ece\u76f4\u89c2\u4e0a\u4e0d\u96be\u7406\u89e3\uff1a\u8003\u8651\u5230\u7ecf\u8fc7\u4e00\u8f6e\u540e\u5148\u540e\u624b\u53d1\u751f\u6539\u53d8\uff0c\u6240\u4ee5\u5f53\u524d\u7684\u73a9\u5bb6\u53ea\u8981\u6709\u4e00\u4e2a\u51b3\u7b56\u80fd\u591f\u8f6c\u79fb\u5230\u5148\u624b\u5fc5\u8d25\u7684\u72b6\u6001\uff0c\u90a3\u4e48\u5b83\u5c31\u53ef\u4ee5\u9009\u62e9\u8fd9\u4e2a\u51b3\u7b56\u8ba9\u5bf9\u65b9\u5fc5\u8d25\uff0c\u4ece\u800c\u8fbe\u5230\u81ea\u5df1\u5fc5\u80dc\u3002\u53cd\u4e4b\u4ea6\u7136\u3002 \u4f8b\u5b50\uff1aNim \u6e38\u620f \u00b6 \u6709 n n \u5806\u77f3\u5b50\uff0c\u6bcf\u5806\u6709 a_i > 0 a_i > 0 \u4e2a\u77f3\u5b50\u3002\u53cc\u65b9\u8f6e\u6d41\u53d6\u4e00\u5806\u77f3\u5b50\u4e2d\u4efb\u610f\u6570\u91cf\u7684\u77f3\u5b50\uff0c\u4f46\u4e0d\u80fd\u4e0d\u53d6\u3002\u4e0d\u80fd\u884c\u52a8\u8005\u5931\u8d25\u3002 \u7b80\u5355\u8d77\u89c1\uff0c\u5047\u8bbe n = 3 n = 3 \u5e76\u5047\u8bbe\u77f3\u5b50\u6570\u91cf\u4e3a (1, 2, 1) (1, 2, 1) \uff0c\u8fd9\u91cc \\rm{turn} \\rm{turn} \u548c \\rm{player} \\rm{player} \u5e76\u4e0d\u91cd\u8981\uff0c\u6211\u4eec\u5c06\u5176\u4ece\u72b6\u6001\u8868\u793a\u4e2d\u7701\u7565\u3002 \u4f7f\u7528\u4e4b\u524d\u7684\u65b9\u6cd5\u786e\u5b9a\u72b6\u6001\u7684\u80dc\u8d1f\u6027\uff1a \u57fa\u7840\uff1a (0,0,0) (0,0,0) \u662f\u5148\u624b\u5fc5\u8d25\u72b6\u6001\u3002 (1,0,0),(0,1,0),(0,0,1),(0,2,0) (1,0,0),(0,1,0),(0,0,1),(0,2,0) \u662f\u5148\u624b\u5fc5\u80dc\u72b6\u6001\uff0c\u56e0\u4e3a\u53ef\u4ee5\u8f6c\u79fb\u5230 (0,0,0) (0,0,0) \u3002 (1,1,0),(0,1,1),(1,0,1) (1,1,0),(0,1,1),(1,0,1) \u662f\u5148\u624b\u5fc5\u8d25\u72b6\u6001\uff0c\u56e0\u4e3a\u53ea\u80fd\u8f6c\u79fb\u5230\u4e0a\u4e00\u884c\u7684\u72b6\u6001\u4e2d\u3002 (1,1,1),(1,2,0),(0,2,1) (1,1,1),(1,2,0),(0,2,1) \u662f\u5148\u624b\u5fc5\u80dc\u72b6\u6001\uff0c\u56e0\u4e3a\u53ef\u4ee5\u8f6c\u79fb\u5230\u4e0a\u4e00\u884c\u7684\u72b6\u6001\u4e2d\u3002 (1,2,1) (1,2,1) \u662f\u5148\u624b\u5fc5\u80dc\u72b6\u6001\uff0c\u56e0\u4e3a\u53ef\u4ee5\u8f6c\u79fb\u5230 (1,0,1) (1,0,1) \u3002 \u8fd9\u6837\uff0c\u5982\u679c\u6211\u4eec\u8bbe\u72b6\u6001 (a_1, a_2, \\cdots, a_n) = 1 (a_1, a_2, \\cdots, a_n) = 1 \u8868\u793a\u5148\u624b\u5fc5\u80dc\uff0c = 0 = 0 \u8868\u793a\u5148\u624b\u5fc5\u8d25\u3002\u5219\u53ef\u4ee5\u7528\u4ee5\u4e0b\u4f2a\u4ee3\u7801\u8fdb\u884c\u641c\u7d22\u3002 1 2 3 4 5 6 7 8 9 10 int sg ( int a [], int n ) { int ret = 0 for ( int i = 0 ; i < n ; ++ i ) { if ( a [ i ] > 0 ) for ( int j = 1 ; j < a [ i ] + 1 ; ++ j ) b [] = a [], b [ i ] = a [ i ] - j ret |= ! sg ( b , n ) } return ret } \u8fd9\u6837\uff0c\u4f7f\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\uff0c\u53ef\u4ee5\u5728 O\\left(\\prod a_i\\right) O\\left(\\prod a_i\\right) \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u5f97\u5230\u7b54\u6848\u3002 \u6ce8\uff1a\u5229\u7528\u535a\u5f08\u8bba\u7684\u77e5\u8bc6\uff0cNim \u6e38\u620f\u53ef\u4ee5\u5728 O(n) O(n) \u7684\u65f6\u95f4\u5185\u901a\u8fc7\u8ba1\u7b97\u5f02\u6216\u548c\u5f97\u5230\u7b54\u6848\u3002\u4f46\u8fd9\u8d85\u51fa\u4e86\u672c\u7bc7\u6587\u7ae0\u7684\u8303\u56f4\u3002\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u53c2\u8003 OI Wiki \u4e2d\u5173\u4e8e\u535a\u5f08\u8bba\u7684\u8d44\u6599\u3002 Min-Max \u641c\u7d22 \u00b6 SG \u641c\u7d22\u56fa\u7136\u786e\u5b9a\u5730\u5f97\u5230\u6b63\u786e\u7b54\u6848\uff0c\u4f46\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u4e0e\u72b6\u6001\u6570\u76f8\u5173\u3002\u5bf9\u4e8e\u66f4\u590d\u6742\u7684\u95ee\u9898\uff0c\u7531\u4e8e\u5404\u79cd\u9650\u5236\u6211\u4eec\u5f80\u5f80\u4e0d\u80fd\u904d\u5386\u6240\u6709\u53ef\u80fd\u72b6\u6001\uff0c\u56e0\u6b64\u6211\u4eec\u6216\u8bb8\u53ef\u4ee5\u901a\u8fc7\u727a\u7272\u6b63\u786e\u6027\u6765\u6362\u53d6\u53ef\u884c\u6027\u3002 \u4e00\u4e2a\u7b80\u5355\u7684\u60f3\u6cd5\u662f\u5f15\u5165\u4f30\u4ef7\u51fd\u6570\uff08\u82f1\u8bed\uff1autility function, power function, heuristic function\uff09 f: S\\to \\mathbb{R} f: S\\to \\mathbb{R} \u7ed9\u51fa\u5bf9\u4e8e\u67d0\u4e2a\u72b6\u6001\u7684\u8bc4\u4f30\u3002\u6211\u4eec\u4eba\u4e3a\u7684\u89c4\u5b9a\u5bf9\u4e8e\u5c40\u9762 s' = \\delta(s, a) s' = \\delta(s, a) \uff0c f(s') f(s') \u7ed9\u51fa\u76f8\u5bf9\u4e8e\u72b6\u6001 s s \u5148\u624b\u7684\u4f30\u503c\uff08\u6ce8\u610f\u4e0d\u662f s' s' \uff09\uff0c\u8fd9\u4e2a\u503c\u8d8a\u5927\u5219\u8ba4\u4e3a\u5c40\u9762\u8d8a\u201c\u4f18\u201d\u3002\u7279\u522b\u7684\uff0c\u5982\u679c\u5c40\u9762 s' s' \u662f\u5148\u624b\u5fc5\u8d25\u7684\uff08\u8fd9\u610f\u5473\u7740\u5bf9\u4e8e s s \u800c\u8a00\u662f\u5148\u624b\u5fc5\u80dc\u7684\uff09\uff0c\u5219\u5176\u4f30\u503c\u53ef\u4ee5\u8bbe\u4e3a +\\infty +\\infty \u3002 \u5728\u6211\u4eec\u8fd9\u79cd\u5b9a\u4e49\u4e0b\uff0c\u5148\u624b\u4f1a\u627e\u5230\u4f30\u4ef7\u51fd\u6570\u503c\u6700\u5927\u7684\u72b6\u6001\uff0c\u7136\u540e\u9009\u62e9\u80fd\u591f\u8f6c\u79fb\u5230\u8fd9\u4e2a\u72b6\u6001\u7684\u51b3\u7b56\u3002\u5f53\u7136\uff0c\u8fd9\u79cd\u65b9\u6cd5\u7684\u6709\u6548\u6027\u6781\u5927\u7684\u4f9d\u8d56\u4e8e\u4f30\u4ef7\u51fd\u6570\u662f\u5426\u5408\u7406\u3002 \u6211\u4eec\u5c06\u8fd9\u79cd\u60f3\u6cd5\u4e00\u822c\u5316\uff0c\u5982\u679c\u641c\u7d22\u591a\u5c42\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5bf9\u72b6\u6001\u6240\u6784\u6210\u7684\u641c\u7d22\u6811\u5b9e\u65bd\u7c7b\u4f3c SG \u641c\u7d22\u7684\u505a\u6cd5\uff0c\u53ea\u4e0d\u8fc7\u5c42\u4e0e\u5c42\u4e4b\u95f4\u4e0d\u518d\u662f\u5fc5\u80dc\u4e0e\u5fc5\u8d25\u5173\u7cfb\u7684\u8f6c\u79fb\uff0c\u800c\u662f\u4f30\u503c\u7684\u8f6c\u79fb\uff1a \u8bbe\u6839\u8282\u70b9 S_0 S_0 \u7684\u6df1\u5ea6\u4e3a 0 0 \uff0c\u6bcf\u8fdb\u884c\u4e00\u6b21\u641c\u7d22\u6df1\u5ea6\u52a0\u4e00\u3002 \u5bf9\u4e8e\u53f6\u8282\u70b9 l l \uff0c\u5176\u4f30\u503c w_l = f(l) w_l = f(l) \u3002 \u5bf9\u4e8e\u6df1\u5ea6\u4e3a d d \u7684\u975e\u53f6\u8282\u70b9 n n \uff1a \u5982\u679c d d \u662f\u5076\u6570\uff0c\u5219 w_n = \\max_{s\\in \\mathrm{ch}[n]}(w_s) w_n = \\max_{s\\in \\mathrm{ch}[n]}(w_s) \uff0c\u5373\u5176\u6240\u6709\u5b69\u5b50\u4f30\u503c\u7684\u6700\u5927\u503c\u3002 \u5982\u679c d d \u662f\u5947\u6570\uff0c\u5219 w_n = \\min_{s\\in \\mathrm{ch}[n]}(w_s) w_n = \\min_{s\\in \\mathrm{ch}[n]}(w_s) \uff0c\u5373\u5176\u6240\u6709\u5b69\u5b50\u4f30\u503c\u7684\u6700\u5c0f\u503c\u3002 \u76f4\u89c2\u4e0a\u7406\u89e3\u662f\u7c7b\u4f3c\u7684\uff1a\u7ecf\u8fc7\u4e00\u8f6e\u540e\u5148\u540e\u624b\u53d1\u751f\u6539\u53d8\uff0c\u800c\u6211\u4eec\u7684\u4f30\u503c\u51fd\u6570\u662f\u6839\u636e\u4e8e\u6839\u8282\u70b9 S_0 S_0 \u7684\u5148\u624b\u72b6\u6001\u786e\u5b9a\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u56e0\u4e3a\u6e38\u620f\u662f\u96f6\u548c\u7684\uff0c\u6240\u4ee5\u4e00\u4e2a\u72b6\u6001\u5bf9\u5e94\u5148\u624b\u5728\u4f30\u503c\u51fd\u6570 f f \u4e0b\u4f30\u503c\u7684\u6700\u5927\u503c\uff0c\u90a3\u4e48\u5bf9\u4e8e\u540e\u624b\u6700\u4f18\u7684\u4e5f\u5e94\u5f53\u662f f f \u4e0b\u7684\u6700\u5c0f\u503c\u3002 \u5982\u56fe\uff0c\u6b64\u65f6\u5148\u624b\u9009\u62e9\u4e86 A\\to B A\\to B \u4f5c\u4e3a\u51b3\u7b56\u3002\u56fe\u6e90\uff1a Stuart Russell, Peter Norvig: Artificial Intelligence A Modern Approach \u3002 \u8bf7\u601d\u8003\uff1a\u4e3a\u4ec0\u4e48\u8fd9\u6837\u505a\u6bd4\u76f4\u63a5\u8ba1\u7b97 f(S_0) f(S_0) \u80fd\u66f4\u51c6\u786e\u8861\u91cf\u5c40\u9762\u7684\u4ef7\u503c\u3002 Alpha-Beta \u526a\u679d \u00b6 \u5728 Min-Max \u641c\u7d22\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u8fdb\u884c\u526a\u679d\uff0c\u4f46\u8fd9\u4e0d\u662f\u672c\u6587\u7684\u91cd\u70b9\u3002\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u53c2\u8003 OI Wiki \u4e0a\u7684\u8d44\u6599\u3002 \u968f\u673a\u5316\u4f30\u503c\u51fd\u6570 \u00b6 \u6839\u636e\u524d\u6587\u7684\u8ba8\u8bba\uff0c\u4e0d\u96be\u53d1\u73b0\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u7684 AI \u7684\u597d\u574f\u4e25\u91cd\u4f9d\u8d56\u4e8e\u4f30\u503c\u51fd\u6570 f f \u7684\u6784\u9020\u3002\u5bf9\u4e8e\u8f83\u4e3a\u590d\u6742\u7684\u6e38\u620f\uff08\u5982 Snake Go\uff09\uff0c\u4eba\u5de5\u6784\u9020\u4e00\u4e2a\u4f30\u503c\u51fd\u6570\u53ef\u80fd\u662f\u8f83\u4e3a\u56f0\u96be\u7684\u3002\u57fa\u4e8e\u8fd9\u4e9b\u8003\u8651\uff0c\u6211\u4eec\u5c1d\u8bd5\u968f\u673a\u5316\u65b9\u6cd5\u3002 \u4e00\u4e2a\u8f83\u4e3a\u76f4\u63a5\u7684\u4f30\u503c\u51fd\u6570\u662f\u8fd9\u6837\u7684\uff0c\u5bf9\u4e8e\u641c\u7d22\u6811\u7684\u6240\u6709\u53f6\u8282\u70b9\u91c7\u7528\u9ed8\u8ba4\u51b3\u7b56\u6a21\u62df N N \u6b21\uff0c\u5c06\u5176\u4e2d\u76f8\u5bf9\u4e8e S_0 S_0 \u7684\u80dc\u7387\u4f5c\u4e3a\u4f30\u503c\u51fd\u6570\u3002\u8fd9\u91cc\u201c\u4ee5\u9ed8\u8ba4\u51b3\u7b56\u6a21\u62df\u201d\u6307\u7684\u662f\u4ee5\u8be5\u5c31\u53f6\u8282\u70b9\u4e3a\u65b0\u7684\u521d\u6001\uff0c\u4e0d\u65ad\u5730\u968f\u673a\u9009\u62e9\u4efb\u610f\u4e00\u4e2a\u53ef\u80fd\u7684\u51b3\u7b56\u8fdb\u884c\u8fed\u4ee3\uff0c\u76f4\u5230\u8fbe\u5230\u67d0\u4e2a\u7ec8\u6001\uff0c\u5e76\u5224\u65ad\u5176\u76f8\u5bf9\u4e8e\u53f6\u8282\u70b9\u7684\u80dc\u8d1f\u6027\u3002 \u6ce8\u610f\u5230\u6574\u4e2a\u7b97\u6cd5\u672c\u8eab\u4e0e\u524d\u6587\u7684 Min-Max \u641c\u7d22\u662f\u5b8c\u5168\u4e00\u81f4\u7684\uff0c\u6211\u4eec\u53ea\u662f\u5c06\u4f30\u503c\u51fd\u6570 f f \u6362\u6210\u4e86\u968f\u673a\u6a21\u62df\u7684\u80dc\u7387\u3002\u663e\u7136\uff0c\u8fd9\u79cd\u505a\u6cd5\u7684\u6b63\u786e\u6027\u4f9d\u8d56\u4e8e\u6982\u7387\u8bba\u4e2d\u7684\u6781\u9650\u5b9a\u7406\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6a21\u62df\u7684\u6b21\u6570 N N \u8d8a\u5927\uff0c\u6211\u4eec\u5f97\u5230\u7684\u7ed3\u679c\u8d8a\u6709\u8bf4\u670d\u529b\u3002 Monte-Carlo \u6811\u641c\u7d22 \u00b6 \u4e0a\u6587\u7684\u968f\u673a\u5316\u601d\u60f3\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u53ef\u80fd\u5e76\u4e0d\u7406\u60f3\uff0c\u8fd9\u4e3b\u8981\u662f\u56e0\u4e3a\u5b83\u9759\u6001\u7684\u5c06\u6240\u6709\u7684\u53f6\u8282\u70b9\u641c\u7d22\u51fa\u6765\uff0c\u5e76\u4e14\u628a\u5b83\u4eec\u89c6\u4e3a\u7b49\u540c\u7684\u8fdb\u884c\u6a21\u62df\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u6211\u4eec\u5e0c\u671b\u80fd\u591f\u5728\u6a21\u62df\u8fc7\u7a0b\u4e2d\u5c3d\u53ef\u80fd\u7684\u5229\u7528\u5148\u524d\u6a21\u62df\u7684\u4fe1\u606f\u4ee5\u52a0\u5feb\u6536\u655b\u7684\u901f\u5ea6\u3002 \u57fa\u4e8e\u4ee5\u4e0a\u8003\u91cf\uff0c\u6211\u4eec\u7ed9\u51fa Monte-Carol \u6811\u641c\u7d22\u7b97\u6cd5\u3002\u8be5\u7b97\u6cd5\u4ee5\u4e00\u4e2a\u521d\u59cb\u72b6\u6001 S_0 S_0 \u4f5c\u4e3a\u8f93\u5165\uff0c\u4e0d\u65ad\u7684\u8fdb\u884c\u62d3\u5c55\u6700\u521d\u53ea\u6709\u4e00\u4e2a\u6839\u8282\u70b9 S_0 S_0 \u7684\u641c\u7d22\u6811\uff0c\u641c\u7d22\u6811\u8282\u70b9\u7ef4\u62a4\u72b6\u6001\u4e3a (s, w, n) (s, w, n) \u5206\u522b\u8868\u793a\u5bf9\u5e94\u7684\u72b6\u6001\u3001\u6743\u503c\u3001\u88ab\u8bbf\u95ee\u6b21\u6570\u3002 \u5176\u4e3b\u8981\u8fc7\u7a0b\u53ef\u4ee5\u5206\u56db\u6b65\uff1a \u9009\u62e9 \u4ece S_0 S_0 \u51fa\u53d1\uff0c\u9009\u62e9\u4e00\u4e2a\u53ef\u62d3\u5c55\u7684\u8282\u70b9 s s \u5e76\u968f\u673a\u7684\u62d3\u5c55\u5176\u4e00\u4e2a\u5b50\u8282\u70b9\u3002\u4e00\u4e2a\u8282\u70b9\u662f\u53ef\u62d3\u5c55\u7684\uff0c\u5f53\u4e14\u4ec5\u5f53\u5176\u5bf9\u5e94\u7684\u72b6\u6001 s s \u4e0d\u662f\u7ec8\u6001\u5e76\u4e14\u5b58\u5728 t\\in \\mathrm{ch}[s] t\\in \\mathrm{ch}[s] \uff0c\u4e14 t t \u4e0d\u5728\u641c\u7d22\u6811\u4e2d\u3002 \u62d3\u5c55 \u5047\u8bbe\u9009\u62e9\u62d3\u5c55 t\\in \\mathrm{ch}[s] t\\in \\mathrm{ch}[s] , \u90a3\u4e48\u5728\u641c\u7d22\u6811\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u72b6\u6001\u4e3a t t \u7684\u8282\u70b9\uff0c\u5e76\u8bbe\u5176\u4e3a s s \u7684\u5b50\u8282\u70b9\u3002 \u6a21\u62df \u4ee5 t t \u4e3a\u521d\u6001\u5b9e\u65bd\u9ed8\u8ba4\u7b56\u7565\uff0c\u8ba1\u7b97\u9ed8\u8ba4\u7b56\u7565\u7684\u6743\u503c\u589e\u91cf \\Delta \\Delta \u3002 \u5982\u679c\u9ed8\u8ba4\u7b56\u7565\u4e2d\u76f8\u5bf9\u4e8e S_0 S_0 \u80dc\u5229\uff0c\u5219 \\Delta = 1 \\Delta = 1 \uff0c\u5426\u5219 \\Delta = 0 \\Delta = 0 \u3002 \u56de\u6eaf \u8bbe S_0 S_0 \u5230 t t \u7684\u8def\u5f84\u4e0a\u6240\u6709\u8282\u70b9\u4e3a s_1, s_2, \\cdots, t s_1, s_2, \\cdots, t \u4f9d\u6b21\u66f4\u65b0\u5176\u72b6\u6001\uff1a \u5982\u679c\u8282\u70b9 N N \u7684\u6df1\u5ea6\u4e0e L L \u540c\u5947\u5076\uff0c\u66f4\u65b0\u4e3a (s, w, n)\\to (s, w + \\Delta, n + 1) (s, w, n)\\to (s, w + \\Delta, n + 1) \u3002 \u5982\u679c\u8282\u70b9 N N \u7684\u6df1\u5ea6\u4e0e L L \u4e0d\u540c\u5947\u5076\uff0c\u66f4\u65b0\u4e3a (s, w, n)\\to (s, w + 1 - \\Delta, n + 1) (s, w, n)\\to (s, w + 1 - \\Delta, n + 1) \u3002 \u5982\u679c\u65f6\u95f4\u8db3\u591f\uff0c\u56de\u5230\u201c\u9009\u62e9\u201d\u90e8\u5206\u91cd\u590d\u3002 \u6700\u540e\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684\u4f30\u503c\u5373\u4e3a\u80dc\u7387 p = \\dfrac{w}{n} p = \\dfrac{w}{n} \uff0c\u6839\u8282\u70b9\u9009\u62e9\u4f30\u503c\u6700\u5927\u7684\u8282\u70b9\u5bf9\u5e94\u7684\u51b3\u7b56\u3002 \u4e0a\u56fe\u8f83\u4e3a\u5f62\u8c61\u7684\u8868\u793a\u4e86 Monte-Carlo \u6811\u641c\u7d22\u7684\u56db\u6b65\u6d41\u7a0b\u3002 \u7f6e\u4fe1\u4e0a\u754c\u6811 \u00b6 \u5148\u524d\u7b97\u6cd5\u5b58\u5728\u4e24\u4e2a\u4e0d\u8db3\u4e4b\u5904\uff1a \u5728 Min-Max \u641c\u7d22\u4e2d\uff0c\u6211\u4eec\u6700\u7ec8\u53ea\u4f1a\u9009\u62e9\u6bcf\u5c42\u8282\u70b9\u4e2d\u6700\u5927\u6216\u6700\u5c0f\u7684\u8282\u70b9\u8fdb\u884c\u51b3\u7b56\uff0c\u56e0\u6b64\u5bf9\u4e8e\u5176\u201c\u5e73\u5eb8\u201d\u7684\u5144\u5f1f\u5e76\u4e0d\u5173\u5fc3\uff0c\u800c\u6734\u7d20\u7684\u7b97\u6cd5\u662f\u8fdb\u884c\u7b49\u6982\u7387\u7684\u968f\u673a\u9009\u62e9\u3002 \u6211\u4eec\u9700\u8981\u8003\u8651\u6a21\u62df\u6b21\u6570\u5bf9\u4e8e\u4f30\u503c\u7684\u5f71\u54cd\uff0c\u4e00\u4e2a\u6a21\u62df 1 \u6b21\u80dc\u7387\u4e3a 0% \u7684\u8282\u70b9\uff0c\u4e0d\u4e00\u5b9a\u6bd4\u6a21\u62df 100 \u6b21\u80dc\u7387\u4e3a 10% \u7684\u8282\u70b9\u5dee\u3002 \u6211\u4eec\u91c7\u53d6\u6240\u8c13\u7684\u7f6e\u4fe1\u4e0a\u754c\u7b97\u6cd5\uff08\u82f1\u8bed\uff1aUpper Confidence Bounds\uff09\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002 UCB \u7684\u60f3\u6cd5\u662f\u6539\u5584\u9009\u62e9\u62d3\u5c55\u8282\u70b9\u7684\u65b9\u6848\uff0c\u8fd9\u4e2a\u65b9\u6848\u5e94\u8be5\u5177\u6709\u4e24\u65b9\u9762\u7684\u5355\u8c03\u6027\uff1a\u76f8\u540c\u6a21\u62df\u6b21\u6570\u4e0b\uff0c\u80dc\u7387\u9ad8\u7684\u8282\u70b9\u5e94\u8be5\u66f4\u591a\u7684\u88ab\u8bbf\u95ee\uff1b\u76f8\u540c\u80dc\u7387\u4e0b\uff0c\u6a21\u62df\u6b21\u6570\u5c11\u7684\u4f30\u503c\u5e94\u5f53\u66f4\u591a\u7684\u88ab\u8bbf\u95ee\u3002 \u8003\u8651\u5230\u8fd9\u4e9b\u6761\u4ef6\uff0c\u7ecf\u8fc7\u4e00\u4e9b\u6570\u5b66\u63a8\u5bfc\uff0c\u8bbe\u6839\u8282\u70b9\u4e3a (S_0, w_0, N) (S_0, w_0, N) \u6211\u4eec\u5b9a\u4e49\u8282\u70b9 (s, w, n) (s, w, n) \u7684\u7f6e\u4fe1\u4e0a\u754c I(s) I(s) \uff1a I(s) = \\frac{w}{n} + C\\sqrt{\\frac{2\\ln(N)}{n}} I(s) = \\frac{w}{n} + C\\sqrt{\\frac{2\\ln(N)}{n}} \u5176\u4e2d C C \u662f\u53ef\u4ee5\u8c03\u8282\u7684\u5e38\u6570\u3002 \u6539\u8fdb\u540e\u7684\u7b97\u6cd5\u88ab\u79f0\u4e3a\u7f6e\u4fe1\u4e0a\u754c\u6811\uff08UCT\uff09\u7b97\u6cd5\uff0c\u6211\u4eec\u6b64\u65f6\u4e0d\u518d\u968f\u673a\u9009\u62e9\u62d3\u5c55\u7684\u8282\u70b9\uff0c\u800c\u662f\u9009\u62e9\u5176\u7f6e\u4fe1\u4e0a\u754c\u6700\u5927\u7684\u8fdb\u884c\u62d3\u5c55\u3002 \u5728\u6700\u7ec8\u51b3\u7b56\u65f6\uff0c\u4ee5\u7f6e\u4fe1\u4e0a\u754c\u6700\u5927\uff08\u80dc\u7387\u6700\u9ad8\u3001\u6700\u591a\u8bbf\u95ee\u6b21\u6570\u7b49\u6307\u6807\u5747\u53ef\uff09\u7684\u8282\u70b9\u4f5c\u4e3a\u51b3\u7b56\uff0c\u7b97\u6cd5\u7684\u7ec6\u8282\u89c1\u4e0b\u65b9 Python \u4f2a\u4ee3\u7801\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 \"\"\" UCT_search algorithm \"\"\" C = some configurable value def getinfo ( v ) # \u8f93\u5165\u4e00\u4e2a\u8282\u70b9 v\uff0c\u8fd4\u56de\u8282\u70b9\u5bf9\u5e94\u7684 (s, w, n) def update ( v , dw ) # \u66f4\u65b0\u8282\u70b9\u7684 v \u5bf9\u5e94\u7684\u72b6\u6001 w = w + dw, n = n + 1 def UCT_search ( S0 ): root = create_tree ( S0 ) while \u65f6\u95f4\u8db3\u591f : v = select ( v0 ) dw = default_policy ( v ) back_propagate ( v , dw ) return best_child ( root ) def select ( u ): while u \u4e0d\u662f\u7ec8\u6b62\u8282\u70b9 : if u \u662f\u53ef\u62d3\u5c55\u7684 : return expand ( u ) else : u = best_child ( u ) return u def expand ( u ): s , _ , _ = getinfo ( u ) for t in ch [ s ]: if t \u672a\u88ab\u52a0\u5165\u6811\u4e2d : return t def best_child ( u ): _ , _ , N = getinfo ( u ) I_max = - inf r = None for v in u . children : _ , w , n = getinfo ( v ) I = w / n + sqrt ( 2 * ln ( N ) / n ) if I > I_max : I_max = I r = v return r def default_policy ( u ): s , _ , _ = getinfo ( u ) while s \u4e0d\u662f\u7ec8\u6001 : a = \u968f\u673a\u9009\u53d6\u4e00\u4e2a\u884c\u52a8 s = delta ( s , a ) if u \u4e0e root \u6df1\u5ea6\u540c\u5947\u5076 : return 1 else : return 0 def back_propagate ( u , dw ): while u != root : update ( u , dw ) dw = 1 - dw u = u . parent \u5b9e\u73b0\u6280\u5de7 \u00b6 \u7ec8\u5c40\u7279\u5224 \u5728\u9ed8\u8ba4\u51b3\u7b56\u4e0b\u80dc\u7387\u9ad8\u5e76\u4e0d\u4e00\u5b9a\u610f\u5473\u7740\u8fd9\u4e2a\u5c40\u9762\u4e00\u5b9a\u662f\u5fc5\u80dc\u5c40\u9762\u3002 \u5047\u8bbe S S \u9700\u8981\u8ddd\u79bb\u5230\u8fbe\u7ec8\u5c40\u53ea\u9700\u8981\u5e38\u6570\u6b65\uff0c\u5b83\u53ef\u4ee5\u5230\u8fbe N N \u4e2a\u7ec8\u5c40\uff0c\u5176\u4e2d\u53ea\u6709 1 1 \u4e2a\u662f\u5148\u624b\u5fc5\u8d25\u6001\uff0c\u5176\u4f59\u5168\u662f\u5148\u624b\u5fc5\u80dc\u6001\u3002\u90a3\u4e48\u5b9e\u9645\u4e0a S S \u662f\u5148\u624b\u5fc5\u80dc\u6001\uff0c\u4e00\u4e2a\u51c6\u786e\u7684\u4f30\u503c\u5e94\u8be5\u5f88\u5927\u3002\u4f46\u662f\u6211\u4eec\u7684\u9ed8\u8ba4\u7b56\u7565\u662f\u968f\u673a\u51b3\u7b56\uff0c\u90a3\u4e48\u6700\u540e\u8282\u70b9\u7684\u80dc\u7387\u4ece\u7406\u8bba\u4e0a\u5e94\u5f53\u5728 1/N 1/N \u9644\u8fd1\u3002\u5f53 N N \u8f83\u5927\u65f6\u6211\u4eec\u7684\u9ed8\u8ba4\u51b3\u7b56\u5f97\u4e0d\u5230\u597d\u7684\u7ed3\u679c\u3002\u4e00\u4e2a\u89e3\u51b3\u529e\u6cd5\u662f\uff0c\u5bf9\u4e8e\u63a5\u8fd1\u7ec8\u5c40\u7684\u60c5\u51b5\u4e0d\u518d\u8fdb\u884c\u6a21\u62df\uff0c\u800c\u662f\u76f4\u63a5\u5168\u90e8\u641c\u7d22\u3002\u8fd9\u6837\u5f97\u5230\u7684\u7ed3\u679c\u66f4\u52a0\u51c6\u786e\uff0c\u4f46\u6b65\u6570\u8d8a\u591a\uff0c\u65f6\u95f4\u6d88\u8017\u4e5f\u8d8a\u5927\u3002\u56e0\u6b64\u8981\u8fdb\u884c\u6743\u8861\u3002 \u5bf9\u4e8e Snake Go \u800c\u8a00\uff0c\u4e00\u4e2a\u5bf9\u5e94\u7684\u7b80\u5355\u4f18\u5316\u5c31\u662f\u5728\u9ed8\u8ba4\u7b56\u7565\u65f6\uff0c\u5982\u679c\u67d0\u4e2a\u7b56\u7565\u5bfc\u81f4\u4e86\u81ea\u5df1\u7684\u86c7\u81ea\u6740\u6d88\u5931\uff0c\u90a3\u4e48\u663e\u7136\u662f\u4e0d\u4f1a\u9009\u7684\uff0c\u6240\u4ee5\u5e94\u5f53\u5c06\u5176\u5254\u9664\u3002 \u540e\u7eed\u62d3\u5c55 \u00b6 \u5bf9\u6297\u641c\u7d22\u662f\u5728\u7528\u201c\u4eba\u5de5\u667a\u80fd\u201d\u7684\u601d\u60f3\u53bb\u89e3\u51b3\u535a\u5f08\u8bba\u95ee\u9898\u3002\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u53bb\u4e86\u89e3\u5bf9\u5e94\u7684\u77e5\u8bc6\u3002 \u4e0e\u5bf9\u6297\u641c\u7d22\u76f8\u5173\u7684\u8bfe\u7a0b\uff1a \u4eba\u5de5\u667a\u80fd\u5bfc\u8bba \u53c2\u8003\u8d44\u6599 \u00b6 OI Wiki \u4e2d\u5173\u4e8e\u535a\u5f08\u8bba\u7684\u76f8\u5173\u4ecb\u7ecd https://oi-wiki.org/math/game-theory/impartial-game/","title":"\u5bf9\u6297\u641c\u7d22"},{"location":"ai-ml/adversarial-search/#_1","text":"","title":"\u5bf9\u6297\u641c\u7d22\u7b80\u4ecb"},{"location":"ai-ml/adversarial-search/#_2","text":"\u5177\u6709\u6700\u57fa\u672c\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u601d\u60f3\uff0c\u5bf9\u4e8e\u6df1\u5ea6\u4f18\u5148\u641c\u7d20\u3001\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u7b49\u6700\u57fa\u672c\u7684\u641c\u7d22\u7b97\u6cd5\u6709\u7740\u4e00\u5b9a\u7684\u4e86\u89e3\u3002 \u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d Snake Go \u4f1a\u4f5c\u4e3a\u4f8b\u5b50\u51fa\u73b0\uff0c\u5176\u5177\u4f53\u89c4\u5219\u8bf7\u53c2\u7167 Saiblo \u6e38\u620f\u94fe\u63a5 \u3002","title":"\u524d\u7f6e\u77e5\u8bc6"},{"location":"ai-ml/adversarial-search/#_3","text":"\u5bf9\u6297\u641c\u7d22\uff08\u82f1\u8bed\uff1aAdversarial search\uff09\u662f\u4e00\u4e2a\u5728\u535a\u5f08\u4e2d\u9009\u53d6\u51b3\u7b56\u7684\u65b9\u6cd5\uff0c\u5b83\u4e0e\u535a\u5f08\u8bba\u5bc6\u5207\u76f8\u5173\u3002\u4f46\u662f\u5728\u672c\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u4ec5\u8ba8\u8bba\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5\u4e0b\u7684\u6e38\u620f\uff0c\u5b83\u5177\u6709\u4ee5\u4e0b\u7279\u5f81\uff1a \u6e38\u620f\u6709\u4e14\u4ec5\u6709\u4e24\u4e2a\u73a9\u5bb6\u53c2\u4e0e\uff0c\u5206\u8f6e\u8fdb\u884c\uff0c\u53cc\u65b9\u8f6e\u6d41\u505a\u51fa\u51b3\u7b56\u3002 (Fair) \u53cc\u65b9\u5747\u77e5\u9053\u6e38\u620f\u7684\u4e00\u5207\u5b8c\u6574\u4fe1\u606f\u3002 (Markov) \u4efb\u610f\u4e00\u4e2a\u6e38\u620f\u8005\u5728\u67d0\u4e00\u8f6e\u53ef\u4ee5\u505a\u51fa\u7684\u51b3\u7b56\u53ea\u4e0e\u5f53\u524d\u8f6e\u7684\u6e38\u620f\u72b6\u6001\u6709\u5173\uff0c\u4e0e\u4e4b\u524d\u6216\u8005\u4e4b\u540e\u7684\u51b3\u7b56\u65e0\u5173\u3002 (Finite) \u6e38\u620f\u4e00\u5b9a\u4f1a\u5728\u6709\u9650\u8f6e\u5185\u7ed3\u675f\u3002 (Zero-Sum) \u6e38\u620f\u7ed3\u675f\u65f6\u4e00\u5b9a\u6709\u4e00\u65b9\u80dc\u5229\uff0c\u53e6\u4e00\u65b9\u5931\u8d25\uff0c\u4e0d\u5b58\u5728\u5e73\u5c40\u3002 \u6211\u4eec\u79f0\u67d0\u65b9\u80dc\u5229\u4e86\uff0c\u5f53\u4e14\u4ec5\u5f53\u5728\u67d0\u4e00\u8f6e\u4e2d\u8f6e\u5230\u5bf9\u65b9\u884c\u52a8\uff0c\u4f46\u5bf9\u65b9\u6ca1\u6709\u5408\u6cd5\u7684\u51b3\u7b56\u3002 \u503c\u5f97\u7279\u522b\u6307\u51fa\u7684\u662f\uff0c\u6709\u4e9b\u6e38\u620f\u53ef\u80fd\u4e0d\u6ee1\u8db3\u4ee5\u4e0a\u8981\u6c42\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7\u5c06\u5176\u8fdb\u884c\u7b49\u4ef7\u8f6c\u5316\u6765\u5f97\u5230\u3002 \u6bd4\u5982\u6e38\u620f Snake Go\uff0c\u5b83\u5e76\u4e0d\u6ee1\u8db3\u6700\u540e\u4e00\u6761\u3002\u4f46\u82e5\u5c06\u72b6\u6001\u5b9a\u4e49\u4e3a (\\mathrm{turn}, \\mathrm{player}, \\mathrm{context}) (\\mathrm{turn}, \\mathrm{player}, \\mathrm{context}) \uff0c\u8fd9\u4e09\u5143\u7ec4\u5206\u522b\u8868\u793a\u8f6e\u6570\uff0c\u5f53\u524d\u73a9\u5bb6\u4ee5\u53ca\u6e38\u620f\u7684\u4e0a\u4e0b\u6587\u3002\u5e76\u4e14\u4e3a\u73a9\u5bb6\u6dfb\u52a0\u4e00\u4e2a\u51b3\u7b56 \\mathrm{pass} \\mathrm{pass} \uff0c\u5f53\u4e14\u4ec5\u5f53\u8be5\u73a9\u5bb6\u6ca1\u6709\u86c7\u65f6\u53ef\u7528\u3002\u4e3a\u73a9\u5bb6\u6dfb\u52a0\u4e00\u4e2a\u51b3\u7b56 \\mathrm{win} \\mathrm{win} \uff0c\u5f53\u4e14\u4ec5\u5f53\u8fbe\u5230\u56de\u5408\u4e0a\u9650\u65f6\u5206\u6570\u8f83\u591a\uff08\u76f8\u7b49\u65f6\u540e\u624b\uff09\u8005\u53ef\u7528\u3002\u5219\u6539\u53d8\u540e\u7684\u6e38\u620f\u6ee1\u8db3\u4ee5\u4e0a\u89c4\u5219\uff0c\u5e76\u4e14\u4e0e\u6211\u4eec\u8ba8\u8bba\u7684 Snake Go \u7b49\u4ef7\u3002 \u5bf9\u6297\u641c\u7d22\u662f\u4e00\u79cd\u641c\u7d22\u7b97\u6cd5\uff0c\u5b83\u89e3\u51b3\u7684\u662f\u8fd9\u6837\u7684\u95ee\u9898\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u6e38\u620f\u5728\u67d0\u4e00\u8f6e\u7684\u72b6\u6001\uff0c\u5728\u4e00\u5b9a\u7684\u65f6\u95f4\u548c\u7a7a\u95f4\u9650\u5236\u4e0b\uff0c\u4e3a\u5f53\u524d\u884c\u52a8\u7684\u73a9\u5bb6\u63d0\u4f9b\u4e00\u4e2a\u51b3\u7b56\uff0c\u4f7f\u5f97\u73a9\u5bb6\u4e4b\u540e\u66f4\u6709\u53ef\u80fd\u80dc\u5229\u3002","title":"\u6982\u8ff0"},{"location":"ai-ml/adversarial-search/#sg","text":"\u6211\u4eec\u9996\u5148\u8ba8\u8bba\u6700\u7b80\u5355\u7684\u60c5\u51b5\uff0c\u5982\u679c\u6211\u4eec\u6709\u5145\u8db3\u7684\u65f6\u95f4\u548c\u7a7a\u95f4\uff0c\u7531\u4e8e\u6e38\u620f\u672c\u8eab\u662f\u6709\u9650\u7684\uff0c\u5e76\u4e14\u6e38\u620f\u662f\u516c\u5e73\u7684\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u7ed9\u5b9a\u7684\u72b6\u6001\uff0c\u5176\u80dc\u8005\u662f\u786e\u5b9a\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u6211\u4eec\u904d\u5386\u4e86\u8fd9\u4e2a\u72b6\u6001\u53ef\u80fd\u62d3\u5c55\u51fa\u7684\u6240\u6709\u72b6\u6001\uff0c\u5c31\u53ef\u80fd\u63a8\u65ad\u51fa\u8fd9\u4e2a\u72b6\u6001\u7684\u80dc\u8005\u3002 \u4e3a\u4e86\u7b80\u5316\u63cf\u8ff0\uff0c\u6211\u4eec\u7ed9\u51fa\u4e00\u4e9b\u5f62\u5f0f\u5316\u7684\u7b26\u53f7\u5b9a\u4e49\uff1a s s \u8868\u793a\u6e38\u620f\u7684\u4e00\u4e2a\u72b6\u6001\uff0c\u5b83\u901a\u5e38\u662f (\\mathrm{turn}, \\mathrm{player}, \\mathrm{context}) (\\mathrm{turn}, \\mathrm{player}, \\mathrm{context}) \u7684\u4e09\u5143\u7ec4\uff0c\u5373\u6e38\u620f\u7684\u8f6e\u6570\u3001\u8be5\u8f6e\u5e94\u5f53\u884c\u52a8\u7684\u73a9\u5bb6\u4ee5\u53ca\u6e38\u620f\u7684\u5176\u4ed6\u4fe1\u606f\u3002 \u6211\u4eec\u7528 \\mathrm{player} = 0, 1 \\mathrm{player} = 0, 1 \u6765\u5206\u522b\u8868\u793a\u4e24\u540d\u73a9\u5bb6\u3002\u4e3a\u4e86\u7b80\u5316\u63cf\u8ff0\uff0c\u6211\u4eec\u79f0 \\mathrm{player} \\mathrm{player} \u4e3a\u72b6\u6001 s s \u7684\u5148\u624b\uff0c\u5bf9\u5e94\u5730 \\mathrm{player} \\oplus 1 \\mathrm{player} \\oplus 1 \u4e3a\u72b6\u6001 s s \u7684\u540e\u624b\u3002\u8fd9\u91cc \\oplus \\oplus \u8868\u793a\u5f02\u6216\u3002 \\mathrm{action}(s) = \\{a_1, a_2, \\cdots, a_m\\} \\mathrm{action}(s) = \\{a_1, a_2, \\cdots, a_m\\} \u662f\u4e00\u4e2a\u96c6\u5408\uff0c\u7ed9\u51fa\u4e86 s s \u72b6\u6001\u4e0b\u6240\u6709\u53ef\u80fd\u7684\u51b3\u7b56\u3002\u5982\u679c \\mathrm{action}(s) = \\varnothing \\mathrm{action}(s) = \\varnothing \u5219\u8bf4\u660e s s \u662f\u7ec8\u6001\uff0c\u7528 s \\in V_T s \\in V_T \u8868\u793a\uff0c\u6b64\u65f6\u6e38\u620f\u5df2\u7ecf\u7ed3\u675f\u5e76\u4e14 \\mathrm{player} \\mathrm{player} \u5931\u8d25\u4e86\u3002 \\delta(s, a)=s' \\delta(s, a)=s' \u662f\u8f6c\u79fb\u51fd\u6570\uff0c\u5b83\u8868\u793a\u5728\u72b6\u6001 s s \u91c7\u53d6\u51b3\u7b56 a a \u540e\u8f6c\u79fb\u5230\u7684\u72b6\u6001\u4e3a s' s' \u3002 \u7279\u522b\u5730\uff0c\u6211\u4eec\u5b9a\u4e49 S_0 S_0 \u4e3a\u6700\u521d\u7ed9\u5b9a\u7684\u72b6\u6001\uff0c\u5373\u521d\u6001\u3002 \u5982\u679c\u4e00\u4e2a\u72b6\u6001 s = (\\mathrm{turn}, \\mathrm{player}, \\mathrm{context}) s = (\\mathrm{turn}, \\mathrm{player}, \\mathrm{context}) \u662f\u80dc\u8005\u662f \\rm{player} \\rm{player} \uff0c\u90a3\u4e48\u79f0\u5176\u662f\u5148\u624b\u5fc5\u80dc\u7684\uff0c\u5426\u5219\u79f0\u5b83\u662f\u5148\u624b\u5fc5\u8d25\u7684\u3002 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u7b97\u6cd5\u6765\u786e\u5b9a\u4efb\u4f55\u4e00\u4e2a\u72b6\u6001\u7684\u80dc\u8d1f\u6027\uff1a \u5982\u679c s \\in V_T s \\in V_T \uff0c\u5219 s s \u662f\u5148\u624b\u5fc5\u8d25\u7684\uff0c\u5426\u5219\u8003\u8651 s s \u80fd\u591f\u8f6c\u79fb\u5230\u7684\u6240\u6709\u96c6\u5408\uff1a $$ \\mathrm{ch}[s] = \\{s' \\mid \\delta(s, a) = s', \\forall a \\in \\mathrm{action}(s)\\} $$ \u5982\u679c \\forall t, t\\in \\mathrm{ch}[s] \\forall t, t\\in \\mathrm{ch}[s] \uff0c t t \u662f\u5148\u624b\u5fc5\u80dc\u7684\uff0c\u90a3\u4e48 s s \u662f\u5148\u624b\u5fc5\u8d25\u7684\u3002 \u5982\u679c \\exists t, t\\in \\mathrm{ch}[s] \\exists t, t\\in \\mathrm{ch}[s] \uff0c t t \u662f\u5148\u624b\u5fc5\u8d25\u7684\uff0c\u90a3\u4e48 s s \u662f\u5148\u624b\u5fc5\u80dc\u7684\u3002 \u8be5\u7b97\u6cd5\u4ece\u76f4\u89c2\u4e0a\u4e0d\u96be\u7406\u89e3\uff1a\u8003\u8651\u5230\u7ecf\u8fc7\u4e00\u8f6e\u540e\u5148\u540e\u624b\u53d1\u751f\u6539\u53d8\uff0c\u6240\u4ee5\u5f53\u524d\u7684\u73a9\u5bb6\u53ea\u8981\u6709\u4e00\u4e2a\u51b3\u7b56\u80fd\u591f\u8f6c\u79fb\u5230\u5148\u624b\u5fc5\u8d25\u7684\u72b6\u6001\uff0c\u90a3\u4e48\u5b83\u5c31\u53ef\u4ee5\u9009\u62e9\u8fd9\u4e2a\u51b3\u7b56\u8ba9\u5bf9\u65b9\u5fc5\u8d25\uff0c\u4ece\u800c\u8fbe\u5230\u81ea\u5df1\u5fc5\u80dc\u3002\u53cd\u4e4b\u4ea6\u7136\u3002","title":"SG \u641c\u7d22"},{"location":"ai-ml/adversarial-search/#nim","text":"\u6709 n n \u5806\u77f3\u5b50\uff0c\u6bcf\u5806\u6709 a_i > 0 a_i > 0 \u4e2a\u77f3\u5b50\u3002\u53cc\u65b9\u8f6e\u6d41\u53d6\u4e00\u5806\u77f3\u5b50\u4e2d\u4efb\u610f\u6570\u91cf\u7684\u77f3\u5b50\uff0c\u4f46\u4e0d\u80fd\u4e0d\u53d6\u3002\u4e0d\u80fd\u884c\u52a8\u8005\u5931\u8d25\u3002 \u7b80\u5355\u8d77\u89c1\uff0c\u5047\u8bbe n = 3 n = 3 \u5e76\u5047\u8bbe\u77f3\u5b50\u6570\u91cf\u4e3a (1, 2, 1) (1, 2, 1) \uff0c\u8fd9\u91cc \\rm{turn} \\rm{turn} \u548c \\rm{player} \\rm{player} \u5e76\u4e0d\u91cd\u8981\uff0c\u6211\u4eec\u5c06\u5176\u4ece\u72b6\u6001\u8868\u793a\u4e2d\u7701\u7565\u3002 \u4f7f\u7528\u4e4b\u524d\u7684\u65b9\u6cd5\u786e\u5b9a\u72b6\u6001\u7684\u80dc\u8d1f\u6027\uff1a \u57fa\u7840\uff1a (0,0,0) (0,0,0) \u662f\u5148\u624b\u5fc5\u8d25\u72b6\u6001\u3002 (1,0,0),(0,1,0),(0,0,1),(0,2,0) (1,0,0),(0,1,0),(0,0,1),(0,2,0) \u662f\u5148\u624b\u5fc5\u80dc\u72b6\u6001\uff0c\u56e0\u4e3a\u53ef\u4ee5\u8f6c\u79fb\u5230 (0,0,0) (0,0,0) \u3002 (1,1,0),(0,1,1),(1,0,1) (1,1,0),(0,1,1),(1,0,1) \u662f\u5148\u624b\u5fc5\u8d25\u72b6\u6001\uff0c\u56e0\u4e3a\u53ea\u80fd\u8f6c\u79fb\u5230\u4e0a\u4e00\u884c\u7684\u72b6\u6001\u4e2d\u3002 (1,1,1),(1,2,0),(0,2,1) (1,1,1),(1,2,0),(0,2,1) \u662f\u5148\u624b\u5fc5\u80dc\u72b6\u6001\uff0c\u56e0\u4e3a\u53ef\u4ee5\u8f6c\u79fb\u5230\u4e0a\u4e00\u884c\u7684\u72b6\u6001\u4e2d\u3002 (1,2,1) (1,2,1) \u662f\u5148\u624b\u5fc5\u80dc\u72b6\u6001\uff0c\u56e0\u4e3a\u53ef\u4ee5\u8f6c\u79fb\u5230 (1,0,1) (1,0,1) \u3002 \u8fd9\u6837\uff0c\u5982\u679c\u6211\u4eec\u8bbe\u72b6\u6001 (a_1, a_2, \\cdots, a_n) = 1 (a_1, a_2, \\cdots, a_n) = 1 \u8868\u793a\u5148\u624b\u5fc5\u80dc\uff0c = 0 = 0 \u8868\u793a\u5148\u624b\u5fc5\u8d25\u3002\u5219\u53ef\u4ee5\u7528\u4ee5\u4e0b\u4f2a\u4ee3\u7801\u8fdb\u884c\u641c\u7d22\u3002 1 2 3 4 5 6 7 8 9 10 int sg ( int a [], int n ) { int ret = 0 for ( int i = 0 ; i < n ; ++ i ) { if ( a [ i ] > 0 ) for ( int j = 1 ; j < a [ i ] + 1 ; ++ j ) b [] = a [], b [ i ] = a [ i ] - j ret |= ! sg ( b , n ) } return ret } \u8fd9\u6837\uff0c\u4f7f\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\uff0c\u53ef\u4ee5\u5728 O\\left(\\prod a_i\\right) O\\left(\\prod a_i\\right) \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u5f97\u5230\u7b54\u6848\u3002 \u6ce8\uff1a\u5229\u7528\u535a\u5f08\u8bba\u7684\u77e5\u8bc6\uff0cNim \u6e38\u620f\u53ef\u4ee5\u5728 O(n) O(n) \u7684\u65f6\u95f4\u5185\u901a\u8fc7\u8ba1\u7b97\u5f02\u6216\u548c\u5f97\u5230\u7b54\u6848\u3002\u4f46\u8fd9\u8d85\u51fa\u4e86\u672c\u7bc7\u6587\u7ae0\u7684\u8303\u56f4\u3002\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u53c2\u8003 OI Wiki \u4e2d\u5173\u4e8e\u535a\u5f08\u8bba\u7684\u8d44\u6599\u3002","title":"\u4f8b\u5b50\uff1aNim \u6e38\u620f"},{"location":"ai-ml/adversarial-search/#min-max","text":"SG \u641c\u7d22\u56fa\u7136\u786e\u5b9a\u5730\u5f97\u5230\u6b63\u786e\u7b54\u6848\uff0c\u4f46\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u4e0e\u72b6\u6001\u6570\u76f8\u5173\u3002\u5bf9\u4e8e\u66f4\u590d\u6742\u7684\u95ee\u9898\uff0c\u7531\u4e8e\u5404\u79cd\u9650\u5236\u6211\u4eec\u5f80\u5f80\u4e0d\u80fd\u904d\u5386\u6240\u6709\u53ef\u80fd\u72b6\u6001\uff0c\u56e0\u6b64\u6211\u4eec\u6216\u8bb8\u53ef\u4ee5\u901a\u8fc7\u727a\u7272\u6b63\u786e\u6027\u6765\u6362\u53d6\u53ef\u884c\u6027\u3002 \u4e00\u4e2a\u7b80\u5355\u7684\u60f3\u6cd5\u662f\u5f15\u5165\u4f30\u4ef7\u51fd\u6570\uff08\u82f1\u8bed\uff1autility function, power function, heuristic function\uff09 f: S\\to \\mathbb{R} f: S\\to \\mathbb{R} \u7ed9\u51fa\u5bf9\u4e8e\u67d0\u4e2a\u72b6\u6001\u7684\u8bc4\u4f30\u3002\u6211\u4eec\u4eba\u4e3a\u7684\u89c4\u5b9a\u5bf9\u4e8e\u5c40\u9762 s' = \\delta(s, a) s' = \\delta(s, a) \uff0c f(s') f(s') \u7ed9\u51fa\u76f8\u5bf9\u4e8e\u72b6\u6001 s s \u5148\u624b\u7684\u4f30\u503c\uff08\u6ce8\u610f\u4e0d\u662f s' s' \uff09\uff0c\u8fd9\u4e2a\u503c\u8d8a\u5927\u5219\u8ba4\u4e3a\u5c40\u9762\u8d8a\u201c\u4f18\u201d\u3002\u7279\u522b\u7684\uff0c\u5982\u679c\u5c40\u9762 s' s' \u662f\u5148\u624b\u5fc5\u8d25\u7684\uff08\u8fd9\u610f\u5473\u7740\u5bf9\u4e8e s s \u800c\u8a00\u662f\u5148\u624b\u5fc5\u80dc\u7684\uff09\uff0c\u5219\u5176\u4f30\u503c\u53ef\u4ee5\u8bbe\u4e3a +\\infty +\\infty \u3002 \u5728\u6211\u4eec\u8fd9\u79cd\u5b9a\u4e49\u4e0b\uff0c\u5148\u624b\u4f1a\u627e\u5230\u4f30\u4ef7\u51fd\u6570\u503c\u6700\u5927\u7684\u72b6\u6001\uff0c\u7136\u540e\u9009\u62e9\u80fd\u591f\u8f6c\u79fb\u5230\u8fd9\u4e2a\u72b6\u6001\u7684\u51b3\u7b56\u3002\u5f53\u7136\uff0c\u8fd9\u79cd\u65b9\u6cd5\u7684\u6709\u6548\u6027\u6781\u5927\u7684\u4f9d\u8d56\u4e8e\u4f30\u4ef7\u51fd\u6570\u662f\u5426\u5408\u7406\u3002 \u6211\u4eec\u5c06\u8fd9\u79cd\u60f3\u6cd5\u4e00\u822c\u5316\uff0c\u5982\u679c\u641c\u7d22\u591a\u5c42\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5bf9\u72b6\u6001\u6240\u6784\u6210\u7684\u641c\u7d22\u6811\u5b9e\u65bd\u7c7b\u4f3c SG \u641c\u7d22\u7684\u505a\u6cd5\uff0c\u53ea\u4e0d\u8fc7\u5c42\u4e0e\u5c42\u4e4b\u95f4\u4e0d\u518d\u662f\u5fc5\u80dc\u4e0e\u5fc5\u8d25\u5173\u7cfb\u7684\u8f6c\u79fb\uff0c\u800c\u662f\u4f30\u503c\u7684\u8f6c\u79fb\uff1a \u8bbe\u6839\u8282\u70b9 S_0 S_0 \u7684\u6df1\u5ea6\u4e3a 0 0 \uff0c\u6bcf\u8fdb\u884c\u4e00\u6b21\u641c\u7d22\u6df1\u5ea6\u52a0\u4e00\u3002 \u5bf9\u4e8e\u53f6\u8282\u70b9 l l \uff0c\u5176\u4f30\u503c w_l = f(l) w_l = f(l) \u3002 \u5bf9\u4e8e\u6df1\u5ea6\u4e3a d d \u7684\u975e\u53f6\u8282\u70b9 n n \uff1a \u5982\u679c d d \u662f\u5076\u6570\uff0c\u5219 w_n = \\max_{s\\in \\mathrm{ch}[n]}(w_s) w_n = \\max_{s\\in \\mathrm{ch}[n]}(w_s) \uff0c\u5373\u5176\u6240\u6709\u5b69\u5b50\u4f30\u503c\u7684\u6700\u5927\u503c\u3002 \u5982\u679c d d \u662f\u5947\u6570\uff0c\u5219 w_n = \\min_{s\\in \\mathrm{ch}[n]}(w_s) w_n = \\min_{s\\in \\mathrm{ch}[n]}(w_s) \uff0c\u5373\u5176\u6240\u6709\u5b69\u5b50\u4f30\u503c\u7684\u6700\u5c0f\u503c\u3002 \u76f4\u89c2\u4e0a\u7406\u89e3\u662f\u7c7b\u4f3c\u7684\uff1a\u7ecf\u8fc7\u4e00\u8f6e\u540e\u5148\u540e\u624b\u53d1\u751f\u6539\u53d8\uff0c\u800c\u6211\u4eec\u7684\u4f30\u503c\u51fd\u6570\u662f\u6839\u636e\u4e8e\u6839\u8282\u70b9 S_0 S_0 \u7684\u5148\u624b\u72b6\u6001\u786e\u5b9a\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u56e0\u4e3a\u6e38\u620f\u662f\u96f6\u548c\u7684\uff0c\u6240\u4ee5\u4e00\u4e2a\u72b6\u6001\u5bf9\u5e94\u5148\u624b\u5728\u4f30\u503c\u51fd\u6570 f f \u4e0b\u4f30\u503c\u7684\u6700\u5927\u503c\uff0c\u90a3\u4e48\u5bf9\u4e8e\u540e\u624b\u6700\u4f18\u7684\u4e5f\u5e94\u5f53\u662f f f \u4e0b\u7684\u6700\u5c0f\u503c\u3002 \u5982\u56fe\uff0c\u6b64\u65f6\u5148\u624b\u9009\u62e9\u4e86 A\\to B A\\to B \u4f5c\u4e3a\u51b3\u7b56\u3002\u56fe\u6e90\uff1a Stuart Russell, Peter Norvig: Artificial Intelligence A Modern Approach \u3002 \u8bf7\u601d\u8003\uff1a\u4e3a\u4ec0\u4e48\u8fd9\u6837\u505a\u6bd4\u76f4\u63a5\u8ba1\u7b97 f(S_0) f(S_0) \u80fd\u66f4\u51c6\u786e\u8861\u91cf\u5c40\u9762\u7684\u4ef7\u503c\u3002","title":"Min-Max \u641c\u7d22"},{"location":"ai-ml/adversarial-search/#alpha-beta","text":"\u5728 Min-Max \u641c\u7d22\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u8fdb\u884c\u526a\u679d\uff0c\u4f46\u8fd9\u4e0d\u662f\u672c\u6587\u7684\u91cd\u70b9\u3002\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u53c2\u8003 OI Wiki \u4e0a\u7684\u8d44\u6599\u3002","title":"Alpha-Beta \u526a\u679d"},{"location":"ai-ml/adversarial-search/#_4","text":"\u6839\u636e\u524d\u6587\u7684\u8ba8\u8bba\uff0c\u4e0d\u96be\u53d1\u73b0\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u7684 AI \u7684\u597d\u574f\u4e25\u91cd\u4f9d\u8d56\u4e8e\u4f30\u503c\u51fd\u6570 f f \u7684\u6784\u9020\u3002\u5bf9\u4e8e\u8f83\u4e3a\u590d\u6742\u7684\u6e38\u620f\uff08\u5982 Snake Go\uff09\uff0c\u4eba\u5de5\u6784\u9020\u4e00\u4e2a\u4f30\u503c\u51fd\u6570\u53ef\u80fd\u662f\u8f83\u4e3a\u56f0\u96be\u7684\u3002\u57fa\u4e8e\u8fd9\u4e9b\u8003\u8651\uff0c\u6211\u4eec\u5c1d\u8bd5\u968f\u673a\u5316\u65b9\u6cd5\u3002 \u4e00\u4e2a\u8f83\u4e3a\u76f4\u63a5\u7684\u4f30\u503c\u51fd\u6570\u662f\u8fd9\u6837\u7684\uff0c\u5bf9\u4e8e\u641c\u7d22\u6811\u7684\u6240\u6709\u53f6\u8282\u70b9\u91c7\u7528\u9ed8\u8ba4\u51b3\u7b56\u6a21\u62df N N \u6b21\uff0c\u5c06\u5176\u4e2d\u76f8\u5bf9\u4e8e S_0 S_0 \u7684\u80dc\u7387\u4f5c\u4e3a\u4f30\u503c\u51fd\u6570\u3002\u8fd9\u91cc\u201c\u4ee5\u9ed8\u8ba4\u51b3\u7b56\u6a21\u62df\u201d\u6307\u7684\u662f\u4ee5\u8be5\u5c31\u53f6\u8282\u70b9\u4e3a\u65b0\u7684\u521d\u6001\uff0c\u4e0d\u65ad\u5730\u968f\u673a\u9009\u62e9\u4efb\u610f\u4e00\u4e2a\u53ef\u80fd\u7684\u51b3\u7b56\u8fdb\u884c\u8fed\u4ee3\uff0c\u76f4\u5230\u8fbe\u5230\u67d0\u4e2a\u7ec8\u6001\uff0c\u5e76\u5224\u65ad\u5176\u76f8\u5bf9\u4e8e\u53f6\u8282\u70b9\u7684\u80dc\u8d1f\u6027\u3002 \u6ce8\u610f\u5230\u6574\u4e2a\u7b97\u6cd5\u672c\u8eab\u4e0e\u524d\u6587\u7684 Min-Max \u641c\u7d22\u662f\u5b8c\u5168\u4e00\u81f4\u7684\uff0c\u6211\u4eec\u53ea\u662f\u5c06\u4f30\u503c\u51fd\u6570 f f \u6362\u6210\u4e86\u968f\u673a\u6a21\u62df\u7684\u80dc\u7387\u3002\u663e\u7136\uff0c\u8fd9\u79cd\u505a\u6cd5\u7684\u6b63\u786e\u6027\u4f9d\u8d56\u4e8e\u6982\u7387\u8bba\u4e2d\u7684\u6781\u9650\u5b9a\u7406\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6a21\u62df\u7684\u6b21\u6570 N N \u8d8a\u5927\uff0c\u6211\u4eec\u5f97\u5230\u7684\u7ed3\u679c\u8d8a\u6709\u8bf4\u670d\u529b\u3002","title":"\u968f\u673a\u5316\u4f30\u503c\u51fd\u6570"},{"location":"ai-ml/adversarial-search/#monte-carlo","text":"\u4e0a\u6587\u7684\u968f\u673a\u5316\u601d\u60f3\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u53ef\u80fd\u5e76\u4e0d\u7406\u60f3\uff0c\u8fd9\u4e3b\u8981\u662f\u56e0\u4e3a\u5b83\u9759\u6001\u7684\u5c06\u6240\u6709\u7684\u53f6\u8282\u70b9\u641c\u7d22\u51fa\u6765\uff0c\u5e76\u4e14\u628a\u5b83\u4eec\u89c6\u4e3a\u7b49\u540c\u7684\u8fdb\u884c\u6a21\u62df\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u6211\u4eec\u5e0c\u671b\u80fd\u591f\u5728\u6a21\u62df\u8fc7\u7a0b\u4e2d\u5c3d\u53ef\u80fd\u7684\u5229\u7528\u5148\u524d\u6a21\u62df\u7684\u4fe1\u606f\u4ee5\u52a0\u5feb\u6536\u655b\u7684\u901f\u5ea6\u3002 \u57fa\u4e8e\u4ee5\u4e0a\u8003\u91cf\uff0c\u6211\u4eec\u7ed9\u51fa Monte-Carol \u6811\u641c\u7d22\u7b97\u6cd5\u3002\u8be5\u7b97\u6cd5\u4ee5\u4e00\u4e2a\u521d\u59cb\u72b6\u6001 S_0 S_0 \u4f5c\u4e3a\u8f93\u5165\uff0c\u4e0d\u65ad\u7684\u8fdb\u884c\u62d3\u5c55\u6700\u521d\u53ea\u6709\u4e00\u4e2a\u6839\u8282\u70b9 S_0 S_0 \u7684\u641c\u7d22\u6811\uff0c\u641c\u7d22\u6811\u8282\u70b9\u7ef4\u62a4\u72b6\u6001\u4e3a (s, w, n) (s, w, n) \u5206\u522b\u8868\u793a\u5bf9\u5e94\u7684\u72b6\u6001\u3001\u6743\u503c\u3001\u88ab\u8bbf\u95ee\u6b21\u6570\u3002 \u5176\u4e3b\u8981\u8fc7\u7a0b\u53ef\u4ee5\u5206\u56db\u6b65\uff1a \u9009\u62e9 \u4ece S_0 S_0 \u51fa\u53d1\uff0c\u9009\u62e9\u4e00\u4e2a\u53ef\u62d3\u5c55\u7684\u8282\u70b9 s s \u5e76\u968f\u673a\u7684\u62d3\u5c55\u5176\u4e00\u4e2a\u5b50\u8282\u70b9\u3002\u4e00\u4e2a\u8282\u70b9\u662f\u53ef\u62d3\u5c55\u7684\uff0c\u5f53\u4e14\u4ec5\u5f53\u5176\u5bf9\u5e94\u7684\u72b6\u6001 s s \u4e0d\u662f\u7ec8\u6001\u5e76\u4e14\u5b58\u5728 t\\in \\mathrm{ch}[s] t\\in \\mathrm{ch}[s] \uff0c\u4e14 t t \u4e0d\u5728\u641c\u7d22\u6811\u4e2d\u3002 \u62d3\u5c55 \u5047\u8bbe\u9009\u62e9\u62d3\u5c55 t\\in \\mathrm{ch}[s] t\\in \\mathrm{ch}[s] , \u90a3\u4e48\u5728\u641c\u7d22\u6811\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u72b6\u6001\u4e3a t t \u7684\u8282\u70b9\uff0c\u5e76\u8bbe\u5176\u4e3a s s \u7684\u5b50\u8282\u70b9\u3002 \u6a21\u62df \u4ee5 t t \u4e3a\u521d\u6001\u5b9e\u65bd\u9ed8\u8ba4\u7b56\u7565\uff0c\u8ba1\u7b97\u9ed8\u8ba4\u7b56\u7565\u7684\u6743\u503c\u589e\u91cf \\Delta \\Delta \u3002 \u5982\u679c\u9ed8\u8ba4\u7b56\u7565\u4e2d\u76f8\u5bf9\u4e8e S_0 S_0 \u80dc\u5229\uff0c\u5219 \\Delta = 1 \\Delta = 1 \uff0c\u5426\u5219 \\Delta = 0 \\Delta = 0 \u3002 \u56de\u6eaf \u8bbe S_0 S_0 \u5230 t t \u7684\u8def\u5f84\u4e0a\u6240\u6709\u8282\u70b9\u4e3a s_1, s_2, \\cdots, t s_1, s_2, \\cdots, t \u4f9d\u6b21\u66f4\u65b0\u5176\u72b6\u6001\uff1a \u5982\u679c\u8282\u70b9 N N \u7684\u6df1\u5ea6\u4e0e L L \u540c\u5947\u5076\uff0c\u66f4\u65b0\u4e3a (s, w, n)\\to (s, w + \\Delta, n + 1) (s, w, n)\\to (s, w + \\Delta, n + 1) \u3002 \u5982\u679c\u8282\u70b9 N N \u7684\u6df1\u5ea6\u4e0e L L \u4e0d\u540c\u5947\u5076\uff0c\u66f4\u65b0\u4e3a (s, w, n)\\to (s, w + 1 - \\Delta, n + 1) (s, w, n)\\to (s, w + 1 - \\Delta, n + 1) \u3002 \u5982\u679c\u65f6\u95f4\u8db3\u591f\uff0c\u56de\u5230\u201c\u9009\u62e9\u201d\u90e8\u5206\u91cd\u590d\u3002 \u6700\u540e\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684\u4f30\u503c\u5373\u4e3a\u80dc\u7387 p = \\dfrac{w}{n} p = \\dfrac{w}{n} \uff0c\u6839\u8282\u70b9\u9009\u62e9\u4f30\u503c\u6700\u5927\u7684\u8282\u70b9\u5bf9\u5e94\u7684\u51b3\u7b56\u3002 \u4e0a\u56fe\u8f83\u4e3a\u5f62\u8c61\u7684\u8868\u793a\u4e86 Monte-Carlo \u6811\u641c\u7d22\u7684\u56db\u6b65\u6d41\u7a0b\u3002","title":"Monte-Carlo \u6811\u641c\u7d22"},{"location":"ai-ml/adversarial-search/#_5","text":"\u5148\u524d\u7b97\u6cd5\u5b58\u5728\u4e24\u4e2a\u4e0d\u8db3\u4e4b\u5904\uff1a \u5728 Min-Max \u641c\u7d22\u4e2d\uff0c\u6211\u4eec\u6700\u7ec8\u53ea\u4f1a\u9009\u62e9\u6bcf\u5c42\u8282\u70b9\u4e2d\u6700\u5927\u6216\u6700\u5c0f\u7684\u8282\u70b9\u8fdb\u884c\u51b3\u7b56\uff0c\u56e0\u6b64\u5bf9\u4e8e\u5176\u201c\u5e73\u5eb8\u201d\u7684\u5144\u5f1f\u5e76\u4e0d\u5173\u5fc3\uff0c\u800c\u6734\u7d20\u7684\u7b97\u6cd5\u662f\u8fdb\u884c\u7b49\u6982\u7387\u7684\u968f\u673a\u9009\u62e9\u3002 \u6211\u4eec\u9700\u8981\u8003\u8651\u6a21\u62df\u6b21\u6570\u5bf9\u4e8e\u4f30\u503c\u7684\u5f71\u54cd\uff0c\u4e00\u4e2a\u6a21\u62df 1 \u6b21\u80dc\u7387\u4e3a 0% \u7684\u8282\u70b9\uff0c\u4e0d\u4e00\u5b9a\u6bd4\u6a21\u62df 100 \u6b21\u80dc\u7387\u4e3a 10% \u7684\u8282\u70b9\u5dee\u3002 \u6211\u4eec\u91c7\u53d6\u6240\u8c13\u7684\u7f6e\u4fe1\u4e0a\u754c\u7b97\u6cd5\uff08\u82f1\u8bed\uff1aUpper Confidence Bounds\uff09\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002 UCB \u7684\u60f3\u6cd5\u662f\u6539\u5584\u9009\u62e9\u62d3\u5c55\u8282\u70b9\u7684\u65b9\u6848\uff0c\u8fd9\u4e2a\u65b9\u6848\u5e94\u8be5\u5177\u6709\u4e24\u65b9\u9762\u7684\u5355\u8c03\u6027\uff1a\u76f8\u540c\u6a21\u62df\u6b21\u6570\u4e0b\uff0c\u80dc\u7387\u9ad8\u7684\u8282\u70b9\u5e94\u8be5\u66f4\u591a\u7684\u88ab\u8bbf\u95ee\uff1b\u76f8\u540c\u80dc\u7387\u4e0b\uff0c\u6a21\u62df\u6b21\u6570\u5c11\u7684\u4f30\u503c\u5e94\u5f53\u66f4\u591a\u7684\u88ab\u8bbf\u95ee\u3002 \u8003\u8651\u5230\u8fd9\u4e9b\u6761\u4ef6\uff0c\u7ecf\u8fc7\u4e00\u4e9b\u6570\u5b66\u63a8\u5bfc\uff0c\u8bbe\u6839\u8282\u70b9\u4e3a (S_0, w_0, N) (S_0, w_0, N) \u6211\u4eec\u5b9a\u4e49\u8282\u70b9 (s, w, n) (s, w, n) \u7684\u7f6e\u4fe1\u4e0a\u754c I(s) I(s) \uff1a I(s) = \\frac{w}{n} + C\\sqrt{\\frac{2\\ln(N)}{n}} I(s) = \\frac{w}{n} + C\\sqrt{\\frac{2\\ln(N)}{n}} \u5176\u4e2d C C \u662f\u53ef\u4ee5\u8c03\u8282\u7684\u5e38\u6570\u3002 \u6539\u8fdb\u540e\u7684\u7b97\u6cd5\u88ab\u79f0\u4e3a\u7f6e\u4fe1\u4e0a\u754c\u6811\uff08UCT\uff09\u7b97\u6cd5\uff0c\u6211\u4eec\u6b64\u65f6\u4e0d\u518d\u968f\u673a\u9009\u62e9\u62d3\u5c55\u7684\u8282\u70b9\uff0c\u800c\u662f\u9009\u62e9\u5176\u7f6e\u4fe1\u4e0a\u754c\u6700\u5927\u7684\u8fdb\u884c\u62d3\u5c55\u3002 \u5728\u6700\u7ec8\u51b3\u7b56\u65f6\uff0c\u4ee5\u7f6e\u4fe1\u4e0a\u754c\u6700\u5927\uff08\u80dc\u7387\u6700\u9ad8\u3001\u6700\u591a\u8bbf\u95ee\u6b21\u6570\u7b49\u6307\u6807\u5747\u53ef\uff09\u7684\u8282\u70b9\u4f5c\u4e3a\u51b3\u7b56\uff0c\u7b97\u6cd5\u7684\u7ec6\u8282\u89c1\u4e0b\u65b9 Python \u4f2a\u4ee3\u7801\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 \"\"\" UCT_search algorithm \"\"\" C = some configurable value def getinfo ( v ) # \u8f93\u5165\u4e00\u4e2a\u8282\u70b9 v\uff0c\u8fd4\u56de\u8282\u70b9\u5bf9\u5e94\u7684 (s, w, n) def update ( v , dw ) # \u66f4\u65b0\u8282\u70b9\u7684 v \u5bf9\u5e94\u7684\u72b6\u6001 w = w + dw, n = n + 1 def UCT_search ( S0 ): root = create_tree ( S0 ) while \u65f6\u95f4\u8db3\u591f : v = select ( v0 ) dw = default_policy ( v ) back_propagate ( v , dw ) return best_child ( root ) def select ( u ): while u \u4e0d\u662f\u7ec8\u6b62\u8282\u70b9 : if u \u662f\u53ef\u62d3\u5c55\u7684 : return expand ( u ) else : u = best_child ( u ) return u def expand ( u ): s , _ , _ = getinfo ( u ) for t in ch [ s ]: if t \u672a\u88ab\u52a0\u5165\u6811\u4e2d : return t def best_child ( u ): _ , _ , N = getinfo ( u ) I_max = - inf r = None for v in u . children : _ , w , n = getinfo ( v ) I = w / n + sqrt ( 2 * ln ( N ) / n ) if I > I_max : I_max = I r = v return r def default_policy ( u ): s , _ , _ = getinfo ( u ) while s \u4e0d\u662f\u7ec8\u6001 : a = \u968f\u673a\u9009\u53d6\u4e00\u4e2a\u884c\u52a8 s = delta ( s , a ) if u \u4e0e root \u6df1\u5ea6\u540c\u5947\u5076 : return 1 else : return 0 def back_propagate ( u , dw ): while u != root : update ( u , dw ) dw = 1 - dw u = u . parent","title":"\u7f6e\u4fe1\u4e0a\u754c\u6811"},{"location":"ai-ml/adversarial-search/#_6","text":"\u7ec8\u5c40\u7279\u5224 \u5728\u9ed8\u8ba4\u51b3\u7b56\u4e0b\u80dc\u7387\u9ad8\u5e76\u4e0d\u4e00\u5b9a\u610f\u5473\u7740\u8fd9\u4e2a\u5c40\u9762\u4e00\u5b9a\u662f\u5fc5\u80dc\u5c40\u9762\u3002 \u5047\u8bbe S S \u9700\u8981\u8ddd\u79bb\u5230\u8fbe\u7ec8\u5c40\u53ea\u9700\u8981\u5e38\u6570\u6b65\uff0c\u5b83\u53ef\u4ee5\u5230\u8fbe N N \u4e2a\u7ec8\u5c40\uff0c\u5176\u4e2d\u53ea\u6709 1 1 \u4e2a\u662f\u5148\u624b\u5fc5\u8d25\u6001\uff0c\u5176\u4f59\u5168\u662f\u5148\u624b\u5fc5\u80dc\u6001\u3002\u90a3\u4e48\u5b9e\u9645\u4e0a S S \u662f\u5148\u624b\u5fc5\u80dc\u6001\uff0c\u4e00\u4e2a\u51c6\u786e\u7684\u4f30\u503c\u5e94\u8be5\u5f88\u5927\u3002\u4f46\u662f\u6211\u4eec\u7684\u9ed8\u8ba4\u7b56\u7565\u662f\u968f\u673a\u51b3\u7b56\uff0c\u90a3\u4e48\u6700\u540e\u8282\u70b9\u7684\u80dc\u7387\u4ece\u7406\u8bba\u4e0a\u5e94\u5f53\u5728 1/N 1/N \u9644\u8fd1\u3002\u5f53 N N \u8f83\u5927\u65f6\u6211\u4eec\u7684\u9ed8\u8ba4\u51b3\u7b56\u5f97\u4e0d\u5230\u597d\u7684\u7ed3\u679c\u3002\u4e00\u4e2a\u89e3\u51b3\u529e\u6cd5\u662f\uff0c\u5bf9\u4e8e\u63a5\u8fd1\u7ec8\u5c40\u7684\u60c5\u51b5\u4e0d\u518d\u8fdb\u884c\u6a21\u62df\uff0c\u800c\u662f\u76f4\u63a5\u5168\u90e8\u641c\u7d22\u3002\u8fd9\u6837\u5f97\u5230\u7684\u7ed3\u679c\u66f4\u52a0\u51c6\u786e\uff0c\u4f46\u6b65\u6570\u8d8a\u591a\uff0c\u65f6\u95f4\u6d88\u8017\u4e5f\u8d8a\u5927\u3002\u56e0\u6b64\u8981\u8fdb\u884c\u6743\u8861\u3002 \u5bf9\u4e8e Snake Go \u800c\u8a00\uff0c\u4e00\u4e2a\u5bf9\u5e94\u7684\u7b80\u5355\u4f18\u5316\u5c31\u662f\u5728\u9ed8\u8ba4\u7b56\u7565\u65f6\uff0c\u5982\u679c\u67d0\u4e2a\u7b56\u7565\u5bfc\u81f4\u4e86\u81ea\u5df1\u7684\u86c7\u81ea\u6740\u6d88\u5931\uff0c\u90a3\u4e48\u663e\u7136\u662f\u4e0d\u4f1a\u9009\u7684\uff0c\u6240\u4ee5\u5e94\u5f53\u5c06\u5176\u5254\u9664\u3002","title":"\u5b9e\u73b0\u6280\u5de7"},{"location":"ai-ml/adversarial-search/#_7","text":"\u5bf9\u6297\u641c\u7d22\u662f\u5728\u7528\u201c\u4eba\u5de5\u667a\u80fd\u201d\u7684\u601d\u60f3\u53bb\u89e3\u51b3\u535a\u5f08\u8bba\u95ee\u9898\u3002\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u53bb\u4e86\u89e3\u5bf9\u5e94\u7684\u77e5\u8bc6\u3002 \u4e0e\u5bf9\u6297\u641c\u7d22\u76f8\u5173\u7684\u8bfe\u7a0b\uff1a \u4eba\u5de5\u667a\u80fd\u5bfc\u8bba","title":"\u540e\u7eed\u62d3\u5c55"},{"location":"ai-ml/adversarial-search/#_8","text":"OI Wiki \u4e2d\u5173\u4e8e\u535a\u5f08\u8bba\u7684\u76f8\u5173\u4ecb\u7ecd https://oi-wiki.org/math/game-theory/impartial-game/","title":"\u53c2\u8003\u8d44\u6599"},{"location":"ai-ml/pytorch/","text":"\u7f16\u8f91\u8005\u62db\u52df \u6211\u4eec\u6b63\u5728\u5bfb\u627e\u8fd9\u4e00\u7bc7\u6587\u6863\u7684\u7f16\u8f91\u8005\u3002 \u53ef\u7528\u94fe\u63a5 \u00b6 \u8bfb\u8005\u53ef\u4ee5\u5c1d\u8bd5\u9605\u8bfb\u4e0b\u5217\u6587\u6863\u5b66\u4e60 Pytorch \u6846\u67b6\uff1a https://zh-v2.d2l.ai/","title":"Pytorch \u5165\u95e8"},{"location":"ai-ml/pytorch/#_1","text":"\u8bfb\u8005\u53ef\u4ee5\u5c1d\u8bd5\u9605\u8bfb\u4e0b\u5217\u6587\u6863\u5b66\u4e60 Pytorch \u6846\u67b6\uff1a https://zh-v2.d2l.ai/","title":"\u53ef\u7528\u94fe\u63a5"},{"location":"backend/","text":"\u540e\u7aef\u6846\u67b6 \u00b6 \u672c\u90e8\u5206\u4e3b\u8981\u4ecb\u7ecd\u540e\u7aef\u5f00\u53d1\u65f6\u53ef\u80fd\u4f7f\u7528\u5230\u7684\u5404\u7c7b\u6846\u67b6\u3002","title":"\u540e\u7aef\u6846\u67b6"},{"location":"backend/#_1","text":"\u672c\u90e8\u5206\u4e3b\u8981\u4ecb\u7ecd\u540e\u7aef\u5f00\u53d1\u65f6\u53ef\u80fd\u4f7f\u7528\u5230\u7684\u5404\u7c7b\u6846\u67b6\u3002","title":"\u540e\u7aef\u6846\u67b6"},{"location":"backend/expressjs/express-js/","text":"ExpressJS \u00b6 Express \u662f\u4e00\u4e2a\u7b80\u6d01\u800c\u7075\u6d3b\u7684 Node.js Web \u5e94\u7528\u6846\u67b6, \u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u5f3a\u5927\u7279\u6027\u5e2e\u52a9\u4f60\u521b\u5efa\u5404\u79cd Web \u5e94\u7528\uff0c\u548c\u4e30\u5bcc\u7684 HTTP \u5de5\u5177\u3002 \u4f7f\u7528 Express \u53ef\u4ee5\u5feb\u901f\u5730\u642d\u5efa\u4e00\u4e2a\u5b8c\u6574\u529f\u80fd\u7684\u7f51\u7ad9\uff0c\u4f46\u662f\uff0c\u6211\u4eec\u4e00\u822c\u66f4\u503e\u5411\u4e8e\u4f7f\u7528 Express \u6765\u5feb\u901f\u642d\u5efa \u7f51\u7ad9\u540e\u7aef \u3002 \u670d\u52a1\u5668\u7aef\u6e32\u67d3\u4e0e\u5ba2\u6237\u7aef\u6e32\u67d3 \u6ce8\u610f\uff0c\u8fd9\u91cc\u6211\u4eec\u5c06\u7f51\u7ad9\u5206\u4e3a\u524d\u7aef\u548c\u540e\u7aef\uff0c\u4e8b\u5b9e\u4e0a\u4e0e\u6211\u4eec\u5728\u300a\u7a0b\u5e8f\u8bbe\u8ba1\u8bad\u7ec3\u300b\u8bfe\u7a0b\u4e2d\u5bf9\u4e8e\u4f7f\u7528 Django \u6765\u642d\u5efa\u7f51\u7ad9\u7684\u65b9\u5f0f\u4e0d\u540c\u3002Django \u7684\u9875\u9762\u6e32\u67d3\u662f \u670d\u52a1\u5668\u7aef\u6e32\u67d3 \uff08Server-side Rendering\uff09\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u6536\u5230\u7528\u6237\u53d1\u6765\u7684\u8bf7\u6c42\u540e\uff0c\u670d\u52a1\u5668\u7aef\u6309\u7167\u8bbe\u8ba1\u7684\u903b\u8f91\u8bfb\u53d6\u76f8\u5e94\u7684\u9875\u9762\u6a21\u677f\uff0c\u5728\u5b8c\u6210\u9875\u9762\u6e32\u67d3\uff08\u4e5f\u5c31\u662f\u5728\u9875\u9762\u6a21\u677f\u7684\u5bf9\u5e94\u5904\u586b\u5145\u5bf9\u5e94\u5b57\u6bb5\uff09\u540e\uff0c\u5c06\u6e32\u67d3\u540e\u7684 HTML \u9875\u9762\u76f4\u63a5\u53d1\u7ed9\u7528\u6237\u3002 \u800c\u8fd9\u91cc\u6211\u4eec\u5c06\u7f51\u7ad9\u5206\u4e3a\u201c\u524d\u7aef\u201d\u548c\u201c\u540e\u7aef\u201d\uff0c\u8fd9\u79cd\u8bbe\u8ba1\u6a21\u5f0f\u548c\u4e0a\u8ff0\u670d\u52a1\u5668\u7aef\u6e32\u67d3\u6709\u672c\u8d28\u7684\u533a\u522b\uff0c\u6211\u4eec\u4e00\u822c\u79f0\u4e3a \u5ba2\u6237\u7aef\u6e32\u67d3 \uff08Client-side Rendering\uff09\u3002\u5176\u8fd0\u4f5c\u6a21\u5f0f\u662f\uff0c\u7f51\u7ad9\u63d0\u4f9b\u670d\u52a1\u5668\u76f4\u63a5\u5c06\u672a\u6e32\u67d3\u7684 HTML \u6a21\u677f\uff08\u6211\u4eec\u79f0\u4e3a\u201c\u524d\u7aef\u4ee3\u7801\u201d\uff09\u53d1\u9001\u7ed9\u7528\u6237\uff0c\u800c\u8fd9\u6a21\u677f\u4e2d\u5305\u542b\u4e86\u7c7b\u4f3c\u4e8e fetch \u7684\u51fd\u6570\uff0c\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u5c06\u5176\u6e32\u67d3\u65f6\u5411\u6211\u4eec\u7684\u201c\u540e\u7aef\u201d\u53d1\u9001\u8bf7\u6c42\u3002\u201c\u540e\u7aef\u201d\u5728\u6536\u5230\u8bf7\u6c42\u540e\uff0c\u4e00\u822c\u4ee5 Json \u683c\u5f0f\u8fd4\u56de\u6240\u8bf7\u6c42\u7684\u6570\u636e\uff0c\u524d\u7aef\u518d\u901a\u8fc7 Javascript \u811a\u672c\u5c06\u6536\u5230\u7684\u6570\u636e\u6e32\u67d3\u5728\u9875\u9762\u4e0a\u3002 \u5728\u300a\u8f6f\u4ef6\u5de5\u7a0b\u300b\u8bfe\u7a0b\u4e2d\u6211\u4eec\u63a8\u8350\u4f7f\u7528\u540e\u8005\u8fd9\u79cd\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u5373\u8fdb\u884c\u524d\u540e\u7aef\u5206\u79bb\u3002\u867d\u7136\u6211\u4eec\u4e5f\u53ef\u4ee5\u7ee7\u7eed\u5229\u7528 Django \u6765\u4f5c\u4e3a\u540e\u7aef\uff0c\u4f46\u662f\u6211\u4eec\u8fd9\u91cc\u7ed9\u5927\u5bb6\u63d0\u4f9b\u4e00\u79cd\u4e1a\u754c\u4e5f\u5f88\u5e38\u7528\u7684\u9009\u9879 \u2014\u2014 Express\u3002\u5176\u4f18\u70b9\u5728\u4e8e\uff0c\u76f8\u6bd4\u4e8e Django \u800c\u8a00\uff0c\u5176\u7f16\u5199\u8d77\u6765\u66f4\u52a0\u65b9\u4fbf\uff0c\u4e5f\u66f4\u52a0\u5feb\u6377\u3002 \u800c\u4e14\uff0c\u540e\u7aef\u66f4\u52a0\u9760\u8fd1 npm \u8fd9\u4e2a\u8f6e\u5b50\u5de5\u5382\uff0c\u5bf9\u4e8e\u6211\u4eec\u8fdb\u884c\u5927\u8c03\u5e93\u4e5f\u66f4\u52a0\u7684\u65b9\u4fbf\u3002\u5f53\u7136\uff0c\u56e0\u4e3a Javascript \u4ee4\u4eba**\u7684\u8bbe\u8ba1\uff0c\u4e5f\u4f1a\u6536\u83b7\u66f4\u52a0\u9178\u723d\u7684 Debug \u4f53\u9a8c\u3002 \u672c\u6587\u6211\u4eec\u4fa7\u91cd\u4ecb\u7ecd\u5982\u4f55\u914d\u7f6e\u4e00\u4e2a Express \u9879\u76ee\uff0c\u5e76\u5b8c\u6210\u4e00\u4e2a\u6700\u57fa\u672c\u7684\u4e0e\u540e\u7aef\u6570\u636e\u5e93\u901a\u4fe1\u7684\u589e\u5220\u67e5\u6539\u529f\u80fd. \u524d\u7f6e\u77e5\u8bc6 \u00b6 JavaScript \u8bed\u8a00 Node.js \u76f8\u5173\u77e5\u8bc6\uff0c\u5305\u62ec npm / yarn \u7684\u4f7f\u7528 RESTful API \u7684\u6709\u5173\u77e5\u8bc6\uff08\u4e8b\u5b9e\u4e0a\u540e\u6587\u4e5f\u6709\u4ecb\u7ecd\uff09 https://www.runoob.com/nodejs/nodejs-restful-api.html \uff08\u81f3\u5c11\u4e00\u79cd\uff09\u6570\u636e\u5e93\u7684\u4f7f\u7528\u64cd\u4f5c \u53ef\u4ee5\u662f\u76f4\u63a5\u4f7f\u7528 SQL \u8bed\u53e5\u64cd\u4f5c \u53ef\u4ee5\u662f\u4f7f\u7528 ORM \u6765\u64cd\u4f5c \u521d\u59cb\u5316\u9879\u76ee \u00b6 \u641c\u7d22\u7ed3\u679c\u53ef\u4ee5\u627e\u5230\u7684\u5927\u591a\u6570\u7f16\u5199\u6559\u7a0b\u5747\u662f\u57fa\u4e8e CommonJS \u89c4\u8303\uff08\u4ee5 require \u548c define \u4e3a\u7279\u70b9\uff09\uff0c\u800c Node.js \u5219\u63a8\u51fa\u4e86\u57fa\u4e8e\u8bed\u8a00\u5c42\u9762\u652f\u6301\u7684 ES6 Module \u89c4\u8303\uff08\u4ee5 import \u548c export \u4e3a\u7279\u70b9\uff09\u3002\u540e\u8005\u5fc5\u5c06\u6210\u4e3a\u4eca\u540e\u8f83\u4e3a\u5e38\u7528\u7684\u7f16\u5199\u89c4\u8303\u3002\u5982\u679c\u60f3\u4e86\u89e3\u66f4\u591a\u5173\u4e8e Javascript \u6a21\u5757\u5316\u5f00\u53d1\u7684\u6709\u5173\u77e5\u8bc6\uff0c\u53ef\u4ee5\u53c2\u8003\u672c\u6587\u521d\u7a3f\u4f5c\u8005\u7684 \u8fd9\u7bc7\u535a\u5ba2 \u3002 \u540c\u6837\uff0c\u8fd9\u91cc\u6211\u4eec\u91c7\u7528\u66f4\u4e3a\u5e7f\u6cdb\u4f7f\u7528\u7684 yarn \u6765\u8fdb\u884c\u5305\u7ba1\u7406\u3002\u5176\u5b89\u88c5\u5728 Node.js \u7b80\u4ecb\u53ca npm \u7684\u4ecb\u7ecd\u4e2d\u5df2\u7ed9\u51fa\uff0c\u8fd9\u91cc\u6211\u4eec\u4e0d\u518d\u8d58\u8ff0\u3002 \u9996\u5148\u6211\u4eec\u5148\u65b0\u5efa\u4e00\u4e2a\u9879\u76ee\u3002\uff08\u8fd9\u91cc\u91c7\u7528 Windows \u7684 CMD \u8fdb\u884c\u64cd\u4f5c\uff0cLinux \u7684\u64cd\u4f5c\u7c7b\u4f3c\uff0c\u4e0b\u540c\uff09 1 2 3 4 5 6 7 8 9 10 11 12 13 14 D: \\C oding>cd D: \\C oding \\M yDashBoardBackend D: \\C oding \\M yDashBoardBackend>yarn init yarn init v1.22.17 question name ( MyDashBoardBackend ) : question version ( 1 .0.0 ) : question description: A sample backend project. question entry point ( index.js ) : question repository url: question author: question license ( MIT ) : question private: success Saved package.json Done in 20 .93s. \u7136\u540e\u6211\u4eec\u5b89\u88c5 express \u6a21\u5757\uff1a 1 yarn add express \u4e3a\u4e86\u4f7f\u7528 ES6 Module \u89c4\u8303\uff0c\u6211\u4eec\u914d\u7f6e package.json \uff0c\u5728\u5176\u4e2d\u52a0\u5165 \"type\": \"module\" \u5b57\u6bb5\uff1a 1 2 3 4 5 6 7 8 9 10 11 { \"name\" : \"MyDashBoardBackend\" , \"version\" : \"1.0.0\" , \"type\" : \"module\" , \"description\" : \"A sample backend project.\" , \"main\" : \"index.js\" , \"license\" : \"MIT\" , \"dependencies\" : { \"express\" : \"^4.17.2\" } } \u7136\u540e\uff0c\u6211\u4eec\u5728\u6839\u76ee\u5f55\u65b0\u5efa index.js \uff0c\u5199\u5165\u5982\u4e0b\u5185\u5bb9\uff1a 1 2 3 4 5 6 7 8 import express from \"express\" ; const app = express () app . get ( '/' , ( req , res ) => { res . send ( 'Hello, baka c7w!' ) }) app . listen ( 3000 ); \u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u8fd0\u884c node index.js \uff0c\u7136\u540e\u524d\u5f80\u6d4f\u89c8\u5668\u8bbf\u95ee http://localhost:3000/ \uff0c\u4fbf\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u8f93\u51fa\u7684\u6b22\u8fce\u4fe1\u606f\u3002 \u82e5\u662f\u611f\u89c9\u5982\u6b64\u903c\u683c\u8fd8\u4e0d\u591f\u9ad8\uff0c\u4e0d\u8981\u7d27\uff0c\u6211\u4eec\u53ef\u4ee5\u7ee7\u7eed\u8fdb\u884c\u4e00\u4e9b\u914d\u7f6e\uff1a \u6211\u4eec\u53ef\u4ee5\u7ee7\u7eed\u4fee\u6539 package.json \uff0c\u5411\u5176\u4e2d\u52a0\u5165\u4f7f\u7528 yarn start \u5f00\u542f\u670d\u52a1\u7aef\u7684\u914d\u7f6e\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 { \"name\" : \"MyDashBoardBackend\" , \"version\" : \"1.0.0\" , \"type\" : \"module\" , \"scripts\" : { \"start\" : \"node index.js\" }, \"description\" : \"A sample backend project.\" , \"main\" : \"index.js\" , \"license\" : \"MIT\" , \"dependencies\" : { \"express\" : \"^4.17.2\" } } \u4e4b\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528 yarn start \u6765\u5f00\u542f\u670d\u52a1\u7aef\u4e86\u3002 \u8def\u7531 Routing \u00b6 \u6ca1\u9519\uff0c\u76f8\u4fe1\u4f60\u5df2\u7ecf\u731c\u5230\u4e86\uff0c\u6211\u4eec\u540e\u7aef\u7f51\u7ad9\u7684\u8def\u7531\u4fbf\u662f\u4e3b\u8981\u901a\u8fc7 app.get \u548c app.post \u4e24\u4e2a\u65b9\u6cd5\u6765\u5b9a\u4e49\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u4f60\u5bf9 HTTP \u8bf7\u6c42\u65b9\u6cd5\u4e86\u89e3\u7684\u66f4\u591a\u4e9b\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u65b9\u6cd5\uff1a app.get() app.post() app.put() app.delete() \u4e8b\u5b9e\u4e0a\u8fd8\u6709\u66f4\u591a\uff0c\u8fd9\u91cc\u6211\u4eec\u4e0d\u518d\u4e00\u4e00\u5217\u51fa\uff0c\u5982\u6b32\u4e86\u89e3\u53ef\u4ee5\u501f\u52a9 \u5b98\u65b9\u7684 Docs \u3002 \u6211\u4eec\u8fd9\u91cc\u7ed9\u51fa\u4e00\u4e9b\u793a\u4f8b\u5199\u6cd5\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 import express from \"express\" ; const app = express () app . get ( '/' , ( req , res ) => { res . send ( 'Hello, baka c7w!' ); }) app . get ( '/item' , ( req , res ) => { res . send ( 'GET method to /item' ); }) app . post ( '/item' , ( req , res ) => { res . send ( 'POST method to /item' ); }) // Regular Expression! app . get ( '/item/*' , ( req , res ) => { console . debug ( req . path ); // `/item/1` console . debug ( req . params ); // undefined res . send ( \"Item/*\" ) }) // Variables! app . get ( '/item2/:item/' , ( req , res ) => { console . debug ( req . path ); // `/item2/1` console . debug ( req . params ); // { item: '1' } res . send ( \"Item/*\" ) }) // Even ReExp + Variables! app . get ( \"/item3/:item(\\\\d+)\" , ( req , res ) => { console . debug ( req . path ); // `/item3/1` console . debug ( req . params ); // { item: '1' } res . send ( \"Item/*\" ) }) app . listen ( 3000 ); Route Handler \u00b6 \u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u8003\u8651\u4ee5\u4e0b\u60c5\u666f\uff1a\u6211\u4eec\u8981\u6839\u636e\u7528\u6237\u8eab\u4efd\uff08\u8fd9\u91cc\u505a\u7b80\u8981\u7b80\u5316\uff0c\u5047\u8bbe\u7528\u6237\u8eab\u4efd\u901a\u8fc7 Routing \u4f20\u5165\uff09\uff0c\u5206\u522b\u5c55\u793a\u4e0d\u540c\u7684\u9875\u9762\u3002\u4e8b\u5b9e\u4e0a\u8fd9\u79cd\u60c5\u666f\u5f88\u5e38\u89c1\uff0c\u6bd4\u5982\u4e00\u4e2a\u7f51\u7ad9\u7684\u7ba1\u7406\u5458\u767b\u5165\u535a\u5ba2\u770b\u5230\u7684\u5e94\u8be5\u662f\u7ba1\u7406\u9875\u9762\uff0c\u800c\u767b\u5f55\u4f5c\u8005\u770b\u5230\u7684\u5e94\u8be5\u662f\u5199\u4f5c\u9875\u9762\uff0c\u666e\u901a\u7528\u6237\u770b\u5230\u7684\u5c31\u662f\u6d4f\u89c8\u9875\u9762\u3002\u4f46\u662f\u8fd9\u4e9b\u9875\u9762\u4e2d\u53c8\u4f1a\u6709\u4e00\u4e9b\u8026\u5408\u7684\u5143\u7d20\u3002\u4e8e\u662f\uff0c\u6211\u4eec\u80fd\u4e0d\u80fd\u91c7\u7528 OOP \u8bfe\u7a0b\u4e2d\u7b56\u7565\u6a21\u5f0f\u7684\u601d\u60f3\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5462\uff1f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 const logger = ( req , res , next ) => { // Logger \u90e8\u4ef6\uff0c\u8bb0\u5f55\u7528 console . debug ( req . params . user + ' tried to visit...' ); next (); } const main = ( req , res , next ) => { if ( req . params . user == \"c7w\" ) { res . result = \"Welcome!<br />\" ; next (); } else { res . send ( \"Permission Denied\" ) } } const footer = ( req , res ) => { res . result += ( '<br /><br />' + new Date ()); res . send ( res . result ) } app . get ( \"/user/:user\" , [ logger , main , footer ]) \u4e8b\u5b9e\u4e0a\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u8fd9\u79cd Handler \u201c\u6570\u7ec4\u201d\u6765\u5b9a\u4e49\u5904\u7406\u4e00\u4e2a\u8bf7\u6c42\u7684\u5148\u540e\u987a\u5e8f\u3002\u5982\u679c\u5728\u524d\u9762\u7684\u67d0\u4e2a Handler \u8c03\u7528\u4e86 next() \uff0c\u90a3\u4e48\u4fbf\u4f1a\u6267\u884c\u4e0b\u4e00\u4e2a Handler \u3002 req \u4e0e res \u00b6 \u8fd9\u91cc\u6211\u4eec\u4ecb\u7ecd\u4e0b req \u548c res \u4e24\u4e2a\u53c2\u6570\u7684\u4e3b\u8981\u5c5e\u6027\u548c\u65b9\u6cd5\u3002 req \u00b6 Property Description req.query \u5728\u8bf7\u6c42\u540e\u4ee5 ? \u548c & \u8fde\u63a5\u7684\u952e\u503c\u5bf9 req.body \u8bf7\u6c42\u4f53\u7684\u5185\u5bb9 req.cookies Cookies \u4e2d\u7684\u5185\u5bb9 \u66f4\u591a\u8be6\u89c1\uff1a https://expressjs.com/en/4x/api.html#req res \u00b6 Method Description res.download() Prompt a file to be downloaded. res.end() End the response process. res.json() Send a JSON response. res.redirect() Redirect a request. res.render() Render a view template. res.send() Send a response of various types. res.sendFile() Send a file as an octet stream. res.sendStatus() Set the response status code and send its string representation as the response body. \u66f4\u591a\u8be6\u89c1\uff1a https://expressjs.com/en/4x/api.html#res Middleware \u00b6 Middleware\uff08\u4e2d\u95f4\u4ef6\u51fd\u6570\uff09\u7684\u6982\u5ff5\u5176\u5b9e\u5f88\u597d\u7406\u89e3\u3002\u5c31\u50cf\u662f\u6211\u4eec\u4e0a\u9762\u4e3e\u7684\u90a3\u4e2a\u4f8b\u5b50\uff0c logger \u548c main \u5c31\u53ef\u4ee5\u7406\u89e3\u6210\u662f Middleware functions\u3002\u4e2d\u95f4\u4ef6\u51fd\u6570\u662f\u5e26\u6709\u4e86 req, res, next \u4e3a\u7b7e\u540d\u7684\u51fd\u6570\uff0c\u5728 Express \u5904\u7406\u8bf7\u6c42\u7684\u65f6\u5019\uff0c\u4e8b\u5b9e\u4e0a\u4f1a\u5c06\u67d0\u4e2a\u5730\u5740\u5bf9\u5e94\u7684\u8def\u7531\u7684\u6240\u6709\u4e2d\u95f4\u4ef6\u7ec4\u7ec7\u6210\u4e00\u4e2a\u7c7b\u4f3c\u94fe\u8868\u7684\u7ed3\u6784\uff0c\u968f\u7740 next() \u7684\u8c03\u7528\u5728\u4e2d\u95f4\u4ef6\u95f4\u987a\u5e8f\u6267\u884c\u3002\u800c\u4e14\uff0c\u4e2d\u95f4\u4ef6\u90fd\u662f\u6709\u4fee\u6539 req \u548c res \u7684\u6240\u6709\u5c5e\u6027\u7684\u80fd\u529b\u7684\u3002 \u4e00\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u70b9\u662f\uff0c\u5982\u679c\u4e2d\u95f4\u4ef6\u51fd\u6570\u6ca1\u6709\u4f7f\u7528\u7c7b\u4f3c\u4e8e res.send() \u7684\u65b9\u6cd5\u5c06\u4e00\u4e2a\u8bf7\u6c42\u8fd4\u56de\u7684\u8bdd\uff0c\u5fc5\u987b\u8981\u8c03\u7528 next() \u51fd\u6570\uff0c\u4e0d\u7136\u5373\u4f7f\u8fd9\u4e2a\u4e2d\u95f4\u4ef6\u51fd\u6570\u6267\u884c\u5230\u672b\u5c3e\uff0c\u4e5f\u4e0d\u4f1a\u81ea\u52a8\u8df3\u8f6c\u3002\u8fd9\u5c31\u4f1a\u5bfc\u81f4\u8bf7\u6c42\u201c\u5047\u6b7b\u201d\u7684\u73b0\u8c61\u3002 \u5168\u5c40 Middleware \u00b6 \u4f7f\u7528 app.use([path], <middleware function>) \u6211\u4eec\u53ef\u4ee5\u6dfb\u52a0\u4f9b\u5168\u5c40\u4f7f\u7528\u7684 Middleware \u51fd\u6570\uff08Application-level middleware\uff09\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 import express from \"express\" ; const app = express () const logger = ( req , res , next ) => { // Logger \u90e8\u4ef6\uff0c\u8bb0\u5f55\u7528 console . debug ( `[ ${ new Date () } ] ${ req . method } ${ req . originalUrl } ` ); next (); } app . get ( '/' , ( req , res ) => { res . send ( 'Hello, baka c7w!' ); }) app . get ( '/item' , ( req , res ) => { res . send ( 'GET method to /item' ); }) app . post ( '/item' , ( req , res ) => { res . send ( 'POST method to /item' ); }) app . get ( '/item/*' , ( req , res ) => { console . debug ( req . path ); // `/item/1` console . debug ( req . params ); // undefined res . send ( \"Item/*\" ) }) app . get ( '/item2/:item/' , ( req , res ) => { console . debug ( req . path ); // `/item2/1` console . debug ( req . params ); // { item: '1' } res . send ( \"Item/*\" ) }) app . get ( \"/item3/:item(\\\\d+)\" , ( req , res ) => { console . debug ( req . path ); // `/item3/1` console . debug ( req . params ); // { item: '1' } res . send ( \"Item/*\" ) }) app . use ( logger ) app . listen ( 3000 ); 1 2 3 [ Tue Feb 08 2022 22 :16:18 GMT+0800 ( China Standard Time )] GET /user/123 [ Tue Feb 08 2022 22 :16:20 GMT+0800 ( China Standard Time )] GET /user/123 [ Tue Feb 08 2022 22 :16:22 GMT+0800 ( China Standard Time )] GET /user/123/123 \u5f02\u5e38\u5904\u7406 Middleware \u00b6 \u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u5904\u7406\u5f02\u5e38\u7684\u4e2d\u95f4\u4ef6\u51fd\u6570\uff0c\u65b9\u6cd5\u5982\u4e0b\uff1a 1 2 3 4 app . use ( function ( err , req , res , next ) { console . error ( err . stack ) res . status ( 500 ). send ( 'Sorry, but fatal error occurred meanwhile.' ) }) \u5185\u7f6e Middleware \u00b6 Express \u5185\u7f6e\u4e86\u4ee5\u4e0b\u4e2d\u95f4\u4ef6\uff1a express.static \u7528\u4e8e\u63d0\u4f9b\u9759\u6001\u6587\u4ef6\uff0c\u6bd4\u5982\u56fe\u7247\uff0c\u6587\u4ef6\u7b49\u7b49 express.json \u5c06 req.body \u5904\u7406\u4e3a json (Available with Express 4.16.0+) express.urlencoded \u5bf9\u4e8e POST \u8bf7\u6c42\uff0c\u6211\u4eec\u63a8\u8350\u4f7f\u7528\u540e\u4e24\u4e2a\u4e2d\u95f4\u4ef6\u3002 CRUD \u7684\u5b9e\u73b0 \u00b6 RESTful API \u9996\u5148\u6211\u4eec\u5148\u7b80\u5355\u5730\u4ecb\u7ecd\u4e00\u4e0b RESTful API \u662f\u4ec0\u4e48\u3002 RESTful API \u662f\u76ee\u524d\u6bd4\u8f83\u6210\u719f\u7684\u4e00\u5957\u4e92\u8054\u7f51\u5e94\u7528\u7a0b\u5e8f\u7684 API \u8bbe\u8ba1\u7406\u8bba\u3002\u53ef\u4ee5\u53c2\u8003 https://www.ruanyifeng.com/blog/2014/05/restful_api.html \u3002 TL; DR: \u6309\u7167\u4e00\u5b9a\u7ea6\u5b9a\u4fd7\u6210\u7684\u8bbe\u8ba1\uff0c\u5bf9\u4e8e\u6211\u4eec\u6240\u5173\u5fc3\u7684\u6d89\u53ca\u7684\u8d44\u6e90\uff0c\u8fdb\u884c\u589e\u5220\u67e5\u6539\u7684\u64cd\u4f5c\u3002RESTful API \u66f4\u591a\u7684\u662f\u5173\u6ce8\u5728\u201c\u8bbe\u8ba1\u201d\u8fd9\u4e00\u5c42\u9762\u3002 \u4f5c\u4e3a\u4eca\u5929\u7684\u6559\u7a0b\uff0c\u6211\u4eec\u53ea\u8981\u7406\u89e3\uff0c\u6211\u4eec\u8bbe\u8ba1\u51fa\u4e00\u4e2a\u540e\u7aef\uff0c\u80fd\u8ba9\u5b83\u548c\u6211\u4eec\u7684\u6570\u636e\u5e93\u8fde\u63a5\uff0c\u5b8c\u6210\u589e\u5220\u67e5\u6539\uff08Create, Read, Update, Delete\uff09\u5c31\u53ef\u4ee5\u4e86\u3002 \u4f5c\u4e3a\u8f6e\u5b50\u5de5\u5382\uff0c\u6211\u4eec\u7ecf\u8fc7\u7b80\u5355\u7684\u641c\u7d22\u5c31\u80fd\u627e\u5230 JavaScript \u4e0e mysql \u8fde\u63a5\u7684\u5de5\u5177\uff0c\u5176\u4f7f\u7528\u6559\u7a0b\u53ef\u4ee5 \u89c1\u6b64 \u3002 ORM \u76f4\u63a5\u64b0\u5199 SQL \u8bed\u53e5\u56fa\u7136\u5728\u5e94\u7528\u4e0a\u662f\u9ad8\u6548\u7684\uff0c\u4f46\u662f\u5207\u6362\u7f16\u7a0b\u8bed\u8a00\u6216\u8005\u627e\u4e00\u4e9b\u81ea\u52a8\u751f\u6210 SQL \u67e5\u8be2\u8bed\u53e5\u7684\u5de5\u5177\u4e5f\u4f1a\u964d\u4f4e\u6211\u4eec\u7684\u7f16\u7a0b\u6548\u7387\u3002\u5728\u6211\u4eec \u5e76\u4e0d\u662f\u5f88\u5728\u610f\u67e5\u8be2\u6548\u7387\u7684\u524d\u63d0\u4e0b \uff0c\u6211\u4eec\u4e0d\u7981\u56de\u5fc6\u8d77 Django \u4e2d\u7528\u7c7b\u64b0\u5199 Model \u7684\u6a21\u5f0f\uff0c\u5f53\u65f6\u53ef\u662f\u5341\u5206\u8282\u7701\u6211\u4eec\u7684\u529b\u6c14\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4e5f\u662f\u4e00\u79cd\u5341\u5206\u5e38\u89c1\u7684\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u53eb\u505a ORM\uff08Object\u2013relational mapping\uff09\u3002\u4e4b\u524d\u6211\u4eec\u53ef\u4ee5\u5c06\u5173\u7cfb\u578b\u6570\u636e\u5e93\u4e2d\u7684\u4e00\u4e2a\u8868\u770b\u505a\u662f\u4e00\u5f20 Excel \u8868\uff0c\u800c\u8868\u5934\u89c4\u5b9a\u4e86\u8fd9\u4e2a\u8868\u7684\u6bcf\u884c\u8bb0\u5f55\u6240\u5e94\u8be5\u6709\u7684\u5c5e\u6027\u3002\u800c\u5982\u679c\u6211\u4eec\u628a\u8fd9\u5f20\u8868\u4e2d\u7684\u8868\u5934\uff0c\u89c6\u4e3a\u662f\u4e00\u4e2a\u7c7b\u5728\u89c4\u5b9a\u5b83\u5e94\u8be5\u5177\u6709\u7684\u5c5e\u6027\u7684\u8bdd\uff0c\u90a3\u4e48\u8fd9\u5f20\u8868\u7684\u6bcf\u884c\u8bb0\u5f55\uff0c\u4e8b\u5b9e\u4e0a\u5c31\u662f\u8fd9\u4e2a\u7c7b\u6240\u5b9e\u4f8b\u5316\u51fa\u6765\u7684\u5bf9\u8c61\u3002\u8fd9\u6b63\u662f Django \u7684 db.models \u6240\u91c7\u7528\u7684\u8bbe\u8ba1\u6a21\u5f0f\u3002 \u518d\u4e00\u6b21\uff0c\u4f5c\u4e3a\u8f6e\u5b50\u5de5\u5382\uff0c\u53ea\u9700\u8981\u7b80\u5355\u7684\u641c\u7d22\uff0c\u6211\u4eec\u4fbf\u80fd\u627e\u5230\u5b9e\u73b0\u4e0e\u6570\u636e\u5e93\u4e4b\u95f4 ORM \u8bbe\u8ba1\u7684\u5e93\uff0c\u8fd9\u91cc\u6211\u4eec\u4ee5 Sequelize \u4e3a\u4f8b\u3002\u8fd9\u91cc\u6211\u4eec\u91c7\u7528\u4fbf\u643a\u7684 sqlite3 \u4f5c\u4e3a\u6211\u4eec\u7684\u6570\u636e\u5e93\u3002 \u5b9e\u73b0\u540e\u7684\u7b80\u5355\u9879\u76ee\u5f52\u6863\u4e8e\uff1a https://github.com/c7w/MyDashboardBackend \u540e\u7eed\u62d3\u5c55 \u00b6 \u4e86\u89e3\u66f4\u591a ExpressJS \u7684\u4e2d\u95f4\u4ef6 \u4e86\u89e3 ExpressJS \u7684\u6a21\u677f\u6e32\u67d3\u673a\u5236 \u6362\u7528\u5176\u4ed6\u6570\u636e\u5e93\u5c1d\u8bd5\uff0c\u5305\u62ec fs\uff08\u672c\u5730\u5b58\u50a8\uff09\uff0cMySQL\uff0c\u4ee5\u53ca\u975e\u5173\u7cfb\u578b\u6570\u636e\u5e93 PostgreSQL \u53ef\u4ee5\u5e94\u7528 ExpressJS \u7684\u8bfe\u7a0b\uff1a \u300a\u8f6f\u4ef6\u5de5\u7a0b\u300b \u8d44\u6e90\u94fe\u63a5 \u00b6 ExpressJS \u5b98\u7f51 https://expressjs.com/ ExpressJS \u4e2d\u6587\u7f51 https://expressjs.com/zh-cn/ \u83dc\u9e1f\u6559\u7a0b https://www.runoob.com/nodejs/nodejs-express-framework.html MDN \u6559\u7a0b https://developer.mozilla.org/zh-CN/docs/Learn/Server-side/Express_Nodejs/skeleton_website","title":"ExpressJS"},{"location":"backend/expressjs/express-js/#expressjs","text":"Express \u662f\u4e00\u4e2a\u7b80\u6d01\u800c\u7075\u6d3b\u7684 Node.js Web \u5e94\u7528\u6846\u67b6, \u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u5f3a\u5927\u7279\u6027\u5e2e\u52a9\u4f60\u521b\u5efa\u5404\u79cd Web \u5e94\u7528\uff0c\u548c\u4e30\u5bcc\u7684 HTTP \u5de5\u5177\u3002 \u4f7f\u7528 Express \u53ef\u4ee5\u5feb\u901f\u5730\u642d\u5efa\u4e00\u4e2a\u5b8c\u6574\u529f\u80fd\u7684\u7f51\u7ad9\uff0c\u4f46\u662f\uff0c\u6211\u4eec\u4e00\u822c\u66f4\u503e\u5411\u4e8e\u4f7f\u7528 Express \u6765\u5feb\u901f\u642d\u5efa \u7f51\u7ad9\u540e\u7aef \u3002 \u670d\u52a1\u5668\u7aef\u6e32\u67d3\u4e0e\u5ba2\u6237\u7aef\u6e32\u67d3 \u6ce8\u610f\uff0c\u8fd9\u91cc\u6211\u4eec\u5c06\u7f51\u7ad9\u5206\u4e3a\u524d\u7aef\u548c\u540e\u7aef\uff0c\u4e8b\u5b9e\u4e0a\u4e0e\u6211\u4eec\u5728\u300a\u7a0b\u5e8f\u8bbe\u8ba1\u8bad\u7ec3\u300b\u8bfe\u7a0b\u4e2d\u5bf9\u4e8e\u4f7f\u7528 Django \u6765\u642d\u5efa\u7f51\u7ad9\u7684\u65b9\u5f0f\u4e0d\u540c\u3002Django \u7684\u9875\u9762\u6e32\u67d3\u662f \u670d\u52a1\u5668\u7aef\u6e32\u67d3 \uff08Server-side Rendering\uff09\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u6536\u5230\u7528\u6237\u53d1\u6765\u7684\u8bf7\u6c42\u540e\uff0c\u670d\u52a1\u5668\u7aef\u6309\u7167\u8bbe\u8ba1\u7684\u903b\u8f91\u8bfb\u53d6\u76f8\u5e94\u7684\u9875\u9762\u6a21\u677f\uff0c\u5728\u5b8c\u6210\u9875\u9762\u6e32\u67d3\uff08\u4e5f\u5c31\u662f\u5728\u9875\u9762\u6a21\u677f\u7684\u5bf9\u5e94\u5904\u586b\u5145\u5bf9\u5e94\u5b57\u6bb5\uff09\u540e\uff0c\u5c06\u6e32\u67d3\u540e\u7684 HTML \u9875\u9762\u76f4\u63a5\u53d1\u7ed9\u7528\u6237\u3002 \u800c\u8fd9\u91cc\u6211\u4eec\u5c06\u7f51\u7ad9\u5206\u4e3a\u201c\u524d\u7aef\u201d\u548c\u201c\u540e\u7aef\u201d\uff0c\u8fd9\u79cd\u8bbe\u8ba1\u6a21\u5f0f\u548c\u4e0a\u8ff0\u670d\u52a1\u5668\u7aef\u6e32\u67d3\u6709\u672c\u8d28\u7684\u533a\u522b\uff0c\u6211\u4eec\u4e00\u822c\u79f0\u4e3a \u5ba2\u6237\u7aef\u6e32\u67d3 \uff08Client-side Rendering\uff09\u3002\u5176\u8fd0\u4f5c\u6a21\u5f0f\u662f\uff0c\u7f51\u7ad9\u63d0\u4f9b\u670d\u52a1\u5668\u76f4\u63a5\u5c06\u672a\u6e32\u67d3\u7684 HTML \u6a21\u677f\uff08\u6211\u4eec\u79f0\u4e3a\u201c\u524d\u7aef\u4ee3\u7801\u201d\uff09\u53d1\u9001\u7ed9\u7528\u6237\uff0c\u800c\u8fd9\u6a21\u677f\u4e2d\u5305\u542b\u4e86\u7c7b\u4f3c\u4e8e fetch \u7684\u51fd\u6570\uff0c\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u5c06\u5176\u6e32\u67d3\u65f6\u5411\u6211\u4eec\u7684\u201c\u540e\u7aef\u201d\u53d1\u9001\u8bf7\u6c42\u3002\u201c\u540e\u7aef\u201d\u5728\u6536\u5230\u8bf7\u6c42\u540e\uff0c\u4e00\u822c\u4ee5 Json \u683c\u5f0f\u8fd4\u56de\u6240\u8bf7\u6c42\u7684\u6570\u636e\uff0c\u524d\u7aef\u518d\u901a\u8fc7 Javascript \u811a\u672c\u5c06\u6536\u5230\u7684\u6570\u636e\u6e32\u67d3\u5728\u9875\u9762\u4e0a\u3002 \u5728\u300a\u8f6f\u4ef6\u5de5\u7a0b\u300b\u8bfe\u7a0b\u4e2d\u6211\u4eec\u63a8\u8350\u4f7f\u7528\u540e\u8005\u8fd9\u79cd\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u5373\u8fdb\u884c\u524d\u540e\u7aef\u5206\u79bb\u3002\u867d\u7136\u6211\u4eec\u4e5f\u53ef\u4ee5\u7ee7\u7eed\u5229\u7528 Django \u6765\u4f5c\u4e3a\u540e\u7aef\uff0c\u4f46\u662f\u6211\u4eec\u8fd9\u91cc\u7ed9\u5927\u5bb6\u63d0\u4f9b\u4e00\u79cd\u4e1a\u754c\u4e5f\u5f88\u5e38\u7528\u7684\u9009\u9879 \u2014\u2014 Express\u3002\u5176\u4f18\u70b9\u5728\u4e8e\uff0c\u76f8\u6bd4\u4e8e Django \u800c\u8a00\uff0c\u5176\u7f16\u5199\u8d77\u6765\u66f4\u52a0\u65b9\u4fbf\uff0c\u4e5f\u66f4\u52a0\u5feb\u6377\u3002 \u800c\u4e14\uff0c\u540e\u7aef\u66f4\u52a0\u9760\u8fd1 npm \u8fd9\u4e2a\u8f6e\u5b50\u5de5\u5382\uff0c\u5bf9\u4e8e\u6211\u4eec\u8fdb\u884c\u5927\u8c03\u5e93\u4e5f\u66f4\u52a0\u7684\u65b9\u4fbf\u3002\u5f53\u7136\uff0c\u56e0\u4e3a Javascript \u4ee4\u4eba**\u7684\u8bbe\u8ba1\uff0c\u4e5f\u4f1a\u6536\u83b7\u66f4\u52a0\u9178\u723d\u7684 Debug \u4f53\u9a8c\u3002 \u672c\u6587\u6211\u4eec\u4fa7\u91cd\u4ecb\u7ecd\u5982\u4f55\u914d\u7f6e\u4e00\u4e2a Express \u9879\u76ee\uff0c\u5e76\u5b8c\u6210\u4e00\u4e2a\u6700\u57fa\u672c\u7684\u4e0e\u540e\u7aef\u6570\u636e\u5e93\u901a\u4fe1\u7684\u589e\u5220\u67e5\u6539\u529f\u80fd.","title":"ExpressJS"},{"location":"backend/expressjs/express-js/#_1","text":"JavaScript \u8bed\u8a00 Node.js \u76f8\u5173\u77e5\u8bc6\uff0c\u5305\u62ec npm / yarn \u7684\u4f7f\u7528 RESTful API \u7684\u6709\u5173\u77e5\u8bc6\uff08\u4e8b\u5b9e\u4e0a\u540e\u6587\u4e5f\u6709\u4ecb\u7ecd\uff09 https://www.runoob.com/nodejs/nodejs-restful-api.html \uff08\u81f3\u5c11\u4e00\u79cd\uff09\u6570\u636e\u5e93\u7684\u4f7f\u7528\u64cd\u4f5c \u53ef\u4ee5\u662f\u76f4\u63a5\u4f7f\u7528 SQL \u8bed\u53e5\u64cd\u4f5c \u53ef\u4ee5\u662f\u4f7f\u7528 ORM \u6765\u64cd\u4f5c","title":"\u524d\u7f6e\u77e5\u8bc6"},{"location":"backend/expressjs/express-js/#_2","text":"\u641c\u7d22\u7ed3\u679c\u53ef\u4ee5\u627e\u5230\u7684\u5927\u591a\u6570\u7f16\u5199\u6559\u7a0b\u5747\u662f\u57fa\u4e8e CommonJS \u89c4\u8303\uff08\u4ee5 require \u548c define \u4e3a\u7279\u70b9\uff09\uff0c\u800c Node.js \u5219\u63a8\u51fa\u4e86\u57fa\u4e8e\u8bed\u8a00\u5c42\u9762\u652f\u6301\u7684 ES6 Module \u89c4\u8303\uff08\u4ee5 import \u548c export \u4e3a\u7279\u70b9\uff09\u3002\u540e\u8005\u5fc5\u5c06\u6210\u4e3a\u4eca\u540e\u8f83\u4e3a\u5e38\u7528\u7684\u7f16\u5199\u89c4\u8303\u3002\u5982\u679c\u60f3\u4e86\u89e3\u66f4\u591a\u5173\u4e8e Javascript \u6a21\u5757\u5316\u5f00\u53d1\u7684\u6709\u5173\u77e5\u8bc6\uff0c\u53ef\u4ee5\u53c2\u8003\u672c\u6587\u521d\u7a3f\u4f5c\u8005\u7684 \u8fd9\u7bc7\u535a\u5ba2 \u3002 \u540c\u6837\uff0c\u8fd9\u91cc\u6211\u4eec\u91c7\u7528\u66f4\u4e3a\u5e7f\u6cdb\u4f7f\u7528\u7684 yarn \u6765\u8fdb\u884c\u5305\u7ba1\u7406\u3002\u5176\u5b89\u88c5\u5728 Node.js \u7b80\u4ecb\u53ca npm \u7684\u4ecb\u7ecd\u4e2d\u5df2\u7ed9\u51fa\uff0c\u8fd9\u91cc\u6211\u4eec\u4e0d\u518d\u8d58\u8ff0\u3002 \u9996\u5148\u6211\u4eec\u5148\u65b0\u5efa\u4e00\u4e2a\u9879\u76ee\u3002\uff08\u8fd9\u91cc\u91c7\u7528 Windows \u7684 CMD \u8fdb\u884c\u64cd\u4f5c\uff0cLinux \u7684\u64cd\u4f5c\u7c7b\u4f3c\uff0c\u4e0b\u540c\uff09 1 2 3 4 5 6 7 8 9 10 11 12 13 14 D: \\C oding>cd D: \\C oding \\M yDashBoardBackend D: \\C oding \\M yDashBoardBackend>yarn init yarn init v1.22.17 question name ( MyDashBoardBackend ) : question version ( 1 .0.0 ) : question description: A sample backend project. question entry point ( index.js ) : question repository url: question author: question license ( MIT ) : question private: success Saved package.json Done in 20 .93s. \u7136\u540e\u6211\u4eec\u5b89\u88c5 express \u6a21\u5757\uff1a 1 yarn add express \u4e3a\u4e86\u4f7f\u7528 ES6 Module \u89c4\u8303\uff0c\u6211\u4eec\u914d\u7f6e package.json \uff0c\u5728\u5176\u4e2d\u52a0\u5165 \"type\": \"module\" \u5b57\u6bb5\uff1a 1 2 3 4 5 6 7 8 9 10 11 { \"name\" : \"MyDashBoardBackend\" , \"version\" : \"1.0.0\" , \"type\" : \"module\" , \"description\" : \"A sample backend project.\" , \"main\" : \"index.js\" , \"license\" : \"MIT\" , \"dependencies\" : { \"express\" : \"^4.17.2\" } } \u7136\u540e\uff0c\u6211\u4eec\u5728\u6839\u76ee\u5f55\u65b0\u5efa index.js \uff0c\u5199\u5165\u5982\u4e0b\u5185\u5bb9\uff1a 1 2 3 4 5 6 7 8 import express from \"express\" ; const app = express () app . get ( '/' , ( req , res ) => { res . send ( 'Hello, baka c7w!' ) }) app . listen ( 3000 ); \u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u8fd0\u884c node index.js \uff0c\u7136\u540e\u524d\u5f80\u6d4f\u89c8\u5668\u8bbf\u95ee http://localhost:3000/ \uff0c\u4fbf\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u8f93\u51fa\u7684\u6b22\u8fce\u4fe1\u606f\u3002 \u82e5\u662f\u611f\u89c9\u5982\u6b64\u903c\u683c\u8fd8\u4e0d\u591f\u9ad8\uff0c\u4e0d\u8981\u7d27\uff0c\u6211\u4eec\u53ef\u4ee5\u7ee7\u7eed\u8fdb\u884c\u4e00\u4e9b\u914d\u7f6e\uff1a \u6211\u4eec\u53ef\u4ee5\u7ee7\u7eed\u4fee\u6539 package.json \uff0c\u5411\u5176\u4e2d\u52a0\u5165\u4f7f\u7528 yarn start \u5f00\u542f\u670d\u52a1\u7aef\u7684\u914d\u7f6e\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 { \"name\" : \"MyDashBoardBackend\" , \"version\" : \"1.0.0\" , \"type\" : \"module\" , \"scripts\" : { \"start\" : \"node index.js\" }, \"description\" : \"A sample backend project.\" , \"main\" : \"index.js\" , \"license\" : \"MIT\" , \"dependencies\" : { \"express\" : \"^4.17.2\" } } \u4e4b\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528 yarn start \u6765\u5f00\u542f\u670d\u52a1\u7aef\u4e86\u3002","title":"\u521d\u59cb\u5316\u9879\u76ee"},{"location":"backend/expressjs/express-js/#routing","text":"\u6ca1\u9519\uff0c\u76f8\u4fe1\u4f60\u5df2\u7ecf\u731c\u5230\u4e86\uff0c\u6211\u4eec\u540e\u7aef\u7f51\u7ad9\u7684\u8def\u7531\u4fbf\u662f\u4e3b\u8981\u901a\u8fc7 app.get \u548c app.post \u4e24\u4e2a\u65b9\u6cd5\u6765\u5b9a\u4e49\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u4f60\u5bf9 HTTP \u8bf7\u6c42\u65b9\u6cd5\u4e86\u89e3\u7684\u66f4\u591a\u4e9b\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u65b9\u6cd5\uff1a app.get() app.post() app.put() app.delete() \u4e8b\u5b9e\u4e0a\u8fd8\u6709\u66f4\u591a\uff0c\u8fd9\u91cc\u6211\u4eec\u4e0d\u518d\u4e00\u4e00\u5217\u51fa\uff0c\u5982\u6b32\u4e86\u89e3\u53ef\u4ee5\u501f\u52a9 \u5b98\u65b9\u7684 Docs \u3002 \u6211\u4eec\u8fd9\u91cc\u7ed9\u51fa\u4e00\u4e9b\u793a\u4f8b\u5199\u6cd5\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 import express from \"express\" ; const app = express () app . get ( '/' , ( req , res ) => { res . send ( 'Hello, baka c7w!' ); }) app . get ( '/item' , ( req , res ) => { res . send ( 'GET method to /item' ); }) app . post ( '/item' , ( req , res ) => { res . send ( 'POST method to /item' ); }) // Regular Expression! app . get ( '/item/*' , ( req , res ) => { console . debug ( req . path ); // `/item/1` console . debug ( req . params ); // undefined res . send ( \"Item/*\" ) }) // Variables! app . get ( '/item2/:item/' , ( req , res ) => { console . debug ( req . path ); // `/item2/1` console . debug ( req . params ); // { item: '1' } res . send ( \"Item/*\" ) }) // Even ReExp + Variables! app . get ( \"/item3/:item(\\\\d+)\" , ( req , res ) => { console . debug ( req . path ); // `/item3/1` console . debug ( req . params ); // { item: '1' } res . send ( \"Item/*\" ) }) app . listen ( 3000 );","title":"\u8def\u7531 Routing"},{"location":"backend/expressjs/express-js/#route-handler","text":"\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u8003\u8651\u4ee5\u4e0b\u60c5\u666f\uff1a\u6211\u4eec\u8981\u6839\u636e\u7528\u6237\u8eab\u4efd\uff08\u8fd9\u91cc\u505a\u7b80\u8981\u7b80\u5316\uff0c\u5047\u8bbe\u7528\u6237\u8eab\u4efd\u901a\u8fc7 Routing \u4f20\u5165\uff09\uff0c\u5206\u522b\u5c55\u793a\u4e0d\u540c\u7684\u9875\u9762\u3002\u4e8b\u5b9e\u4e0a\u8fd9\u79cd\u60c5\u666f\u5f88\u5e38\u89c1\uff0c\u6bd4\u5982\u4e00\u4e2a\u7f51\u7ad9\u7684\u7ba1\u7406\u5458\u767b\u5165\u535a\u5ba2\u770b\u5230\u7684\u5e94\u8be5\u662f\u7ba1\u7406\u9875\u9762\uff0c\u800c\u767b\u5f55\u4f5c\u8005\u770b\u5230\u7684\u5e94\u8be5\u662f\u5199\u4f5c\u9875\u9762\uff0c\u666e\u901a\u7528\u6237\u770b\u5230\u7684\u5c31\u662f\u6d4f\u89c8\u9875\u9762\u3002\u4f46\u662f\u8fd9\u4e9b\u9875\u9762\u4e2d\u53c8\u4f1a\u6709\u4e00\u4e9b\u8026\u5408\u7684\u5143\u7d20\u3002\u4e8e\u662f\uff0c\u6211\u4eec\u80fd\u4e0d\u80fd\u91c7\u7528 OOP \u8bfe\u7a0b\u4e2d\u7b56\u7565\u6a21\u5f0f\u7684\u601d\u60f3\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5462\uff1f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 const logger = ( req , res , next ) => { // Logger \u90e8\u4ef6\uff0c\u8bb0\u5f55\u7528 console . debug ( req . params . user + ' tried to visit...' ); next (); } const main = ( req , res , next ) => { if ( req . params . user == \"c7w\" ) { res . result = \"Welcome!<br />\" ; next (); } else { res . send ( \"Permission Denied\" ) } } const footer = ( req , res ) => { res . result += ( '<br /><br />' + new Date ()); res . send ( res . result ) } app . get ( \"/user/:user\" , [ logger , main , footer ]) \u4e8b\u5b9e\u4e0a\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u8fd9\u79cd Handler \u201c\u6570\u7ec4\u201d\u6765\u5b9a\u4e49\u5904\u7406\u4e00\u4e2a\u8bf7\u6c42\u7684\u5148\u540e\u987a\u5e8f\u3002\u5982\u679c\u5728\u524d\u9762\u7684\u67d0\u4e2a Handler \u8c03\u7528\u4e86 next() \uff0c\u90a3\u4e48\u4fbf\u4f1a\u6267\u884c\u4e0b\u4e00\u4e2a Handler \u3002","title":"Route Handler"},{"location":"backend/expressjs/express-js/#req-res","text":"\u8fd9\u91cc\u6211\u4eec\u4ecb\u7ecd\u4e0b req \u548c res \u4e24\u4e2a\u53c2\u6570\u7684\u4e3b\u8981\u5c5e\u6027\u548c\u65b9\u6cd5\u3002","title":"req \u4e0e res"},{"location":"backend/expressjs/express-js/#req","text":"Property Description req.query \u5728\u8bf7\u6c42\u540e\u4ee5 ? \u548c & \u8fde\u63a5\u7684\u952e\u503c\u5bf9 req.body \u8bf7\u6c42\u4f53\u7684\u5185\u5bb9 req.cookies Cookies \u4e2d\u7684\u5185\u5bb9 \u66f4\u591a\u8be6\u89c1\uff1a https://expressjs.com/en/4x/api.html#req","title":"req"},{"location":"backend/expressjs/express-js/#res","text":"Method Description res.download() Prompt a file to be downloaded. res.end() End the response process. res.json() Send a JSON response. res.redirect() Redirect a request. res.render() Render a view template. res.send() Send a response of various types. res.sendFile() Send a file as an octet stream. res.sendStatus() Set the response status code and send its string representation as the response body. \u66f4\u591a\u8be6\u89c1\uff1a https://expressjs.com/en/4x/api.html#res","title":"res"},{"location":"backend/expressjs/express-js/#middleware","text":"Middleware\uff08\u4e2d\u95f4\u4ef6\u51fd\u6570\uff09\u7684\u6982\u5ff5\u5176\u5b9e\u5f88\u597d\u7406\u89e3\u3002\u5c31\u50cf\u662f\u6211\u4eec\u4e0a\u9762\u4e3e\u7684\u90a3\u4e2a\u4f8b\u5b50\uff0c logger \u548c main \u5c31\u53ef\u4ee5\u7406\u89e3\u6210\u662f Middleware functions\u3002\u4e2d\u95f4\u4ef6\u51fd\u6570\u662f\u5e26\u6709\u4e86 req, res, next \u4e3a\u7b7e\u540d\u7684\u51fd\u6570\uff0c\u5728 Express \u5904\u7406\u8bf7\u6c42\u7684\u65f6\u5019\uff0c\u4e8b\u5b9e\u4e0a\u4f1a\u5c06\u67d0\u4e2a\u5730\u5740\u5bf9\u5e94\u7684\u8def\u7531\u7684\u6240\u6709\u4e2d\u95f4\u4ef6\u7ec4\u7ec7\u6210\u4e00\u4e2a\u7c7b\u4f3c\u94fe\u8868\u7684\u7ed3\u6784\uff0c\u968f\u7740 next() \u7684\u8c03\u7528\u5728\u4e2d\u95f4\u4ef6\u95f4\u987a\u5e8f\u6267\u884c\u3002\u800c\u4e14\uff0c\u4e2d\u95f4\u4ef6\u90fd\u662f\u6709\u4fee\u6539 req \u548c res \u7684\u6240\u6709\u5c5e\u6027\u7684\u80fd\u529b\u7684\u3002 \u4e00\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u70b9\u662f\uff0c\u5982\u679c\u4e2d\u95f4\u4ef6\u51fd\u6570\u6ca1\u6709\u4f7f\u7528\u7c7b\u4f3c\u4e8e res.send() \u7684\u65b9\u6cd5\u5c06\u4e00\u4e2a\u8bf7\u6c42\u8fd4\u56de\u7684\u8bdd\uff0c\u5fc5\u987b\u8981\u8c03\u7528 next() \u51fd\u6570\uff0c\u4e0d\u7136\u5373\u4f7f\u8fd9\u4e2a\u4e2d\u95f4\u4ef6\u51fd\u6570\u6267\u884c\u5230\u672b\u5c3e\uff0c\u4e5f\u4e0d\u4f1a\u81ea\u52a8\u8df3\u8f6c\u3002\u8fd9\u5c31\u4f1a\u5bfc\u81f4\u8bf7\u6c42\u201c\u5047\u6b7b\u201d\u7684\u73b0\u8c61\u3002","title":"Middleware"},{"location":"backend/expressjs/express-js/#middleware_1","text":"\u4f7f\u7528 app.use([path], <middleware function>) \u6211\u4eec\u53ef\u4ee5\u6dfb\u52a0\u4f9b\u5168\u5c40\u4f7f\u7528\u7684 Middleware \u51fd\u6570\uff08Application-level middleware\uff09\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 import express from \"express\" ; const app = express () const logger = ( req , res , next ) => { // Logger \u90e8\u4ef6\uff0c\u8bb0\u5f55\u7528 console . debug ( `[ ${ new Date () } ] ${ req . method } ${ req . originalUrl } ` ); next (); } app . get ( '/' , ( req , res ) => { res . send ( 'Hello, baka c7w!' ); }) app . get ( '/item' , ( req , res ) => { res . send ( 'GET method to /item' ); }) app . post ( '/item' , ( req , res ) => { res . send ( 'POST method to /item' ); }) app . get ( '/item/*' , ( req , res ) => { console . debug ( req . path ); // `/item/1` console . debug ( req . params ); // undefined res . send ( \"Item/*\" ) }) app . get ( '/item2/:item/' , ( req , res ) => { console . debug ( req . path ); // `/item2/1` console . debug ( req . params ); // { item: '1' } res . send ( \"Item/*\" ) }) app . get ( \"/item3/:item(\\\\d+)\" , ( req , res ) => { console . debug ( req . path ); // `/item3/1` console . debug ( req . params ); // { item: '1' } res . send ( \"Item/*\" ) }) app . use ( logger ) app . listen ( 3000 ); 1 2 3 [ Tue Feb 08 2022 22 :16:18 GMT+0800 ( China Standard Time )] GET /user/123 [ Tue Feb 08 2022 22 :16:20 GMT+0800 ( China Standard Time )] GET /user/123 [ Tue Feb 08 2022 22 :16:22 GMT+0800 ( China Standard Time )] GET /user/123/123","title":"\u5168\u5c40 Middleware"},{"location":"backend/expressjs/express-js/#middleware_2","text":"\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u5904\u7406\u5f02\u5e38\u7684\u4e2d\u95f4\u4ef6\u51fd\u6570\uff0c\u65b9\u6cd5\u5982\u4e0b\uff1a 1 2 3 4 app . use ( function ( err , req , res , next ) { console . error ( err . stack ) res . status ( 500 ). send ( 'Sorry, but fatal error occurred meanwhile.' ) })","title":"\u5f02\u5e38\u5904\u7406 Middleware"},{"location":"backend/expressjs/express-js/#middleware_3","text":"Express \u5185\u7f6e\u4e86\u4ee5\u4e0b\u4e2d\u95f4\u4ef6\uff1a express.static \u7528\u4e8e\u63d0\u4f9b\u9759\u6001\u6587\u4ef6\uff0c\u6bd4\u5982\u56fe\u7247\uff0c\u6587\u4ef6\u7b49\u7b49 express.json \u5c06 req.body \u5904\u7406\u4e3a json (Available with Express 4.16.0+) express.urlencoded \u5bf9\u4e8e POST \u8bf7\u6c42\uff0c\u6211\u4eec\u63a8\u8350\u4f7f\u7528\u540e\u4e24\u4e2a\u4e2d\u95f4\u4ef6\u3002","title":"\u5185\u7f6e Middleware"},{"location":"backend/expressjs/express-js/#crud","text":"RESTful API \u9996\u5148\u6211\u4eec\u5148\u7b80\u5355\u5730\u4ecb\u7ecd\u4e00\u4e0b RESTful API \u662f\u4ec0\u4e48\u3002 RESTful API \u662f\u76ee\u524d\u6bd4\u8f83\u6210\u719f\u7684\u4e00\u5957\u4e92\u8054\u7f51\u5e94\u7528\u7a0b\u5e8f\u7684 API \u8bbe\u8ba1\u7406\u8bba\u3002\u53ef\u4ee5\u53c2\u8003 https://www.ruanyifeng.com/blog/2014/05/restful_api.html \u3002 TL; DR: \u6309\u7167\u4e00\u5b9a\u7ea6\u5b9a\u4fd7\u6210\u7684\u8bbe\u8ba1\uff0c\u5bf9\u4e8e\u6211\u4eec\u6240\u5173\u5fc3\u7684\u6d89\u53ca\u7684\u8d44\u6e90\uff0c\u8fdb\u884c\u589e\u5220\u67e5\u6539\u7684\u64cd\u4f5c\u3002RESTful API \u66f4\u591a\u7684\u662f\u5173\u6ce8\u5728\u201c\u8bbe\u8ba1\u201d\u8fd9\u4e00\u5c42\u9762\u3002 \u4f5c\u4e3a\u4eca\u5929\u7684\u6559\u7a0b\uff0c\u6211\u4eec\u53ea\u8981\u7406\u89e3\uff0c\u6211\u4eec\u8bbe\u8ba1\u51fa\u4e00\u4e2a\u540e\u7aef\uff0c\u80fd\u8ba9\u5b83\u548c\u6211\u4eec\u7684\u6570\u636e\u5e93\u8fde\u63a5\uff0c\u5b8c\u6210\u589e\u5220\u67e5\u6539\uff08Create, Read, Update, Delete\uff09\u5c31\u53ef\u4ee5\u4e86\u3002 \u4f5c\u4e3a\u8f6e\u5b50\u5de5\u5382\uff0c\u6211\u4eec\u7ecf\u8fc7\u7b80\u5355\u7684\u641c\u7d22\u5c31\u80fd\u627e\u5230 JavaScript \u4e0e mysql \u8fde\u63a5\u7684\u5de5\u5177\uff0c\u5176\u4f7f\u7528\u6559\u7a0b\u53ef\u4ee5 \u89c1\u6b64 \u3002 ORM \u76f4\u63a5\u64b0\u5199 SQL \u8bed\u53e5\u56fa\u7136\u5728\u5e94\u7528\u4e0a\u662f\u9ad8\u6548\u7684\uff0c\u4f46\u662f\u5207\u6362\u7f16\u7a0b\u8bed\u8a00\u6216\u8005\u627e\u4e00\u4e9b\u81ea\u52a8\u751f\u6210 SQL \u67e5\u8be2\u8bed\u53e5\u7684\u5de5\u5177\u4e5f\u4f1a\u964d\u4f4e\u6211\u4eec\u7684\u7f16\u7a0b\u6548\u7387\u3002\u5728\u6211\u4eec \u5e76\u4e0d\u662f\u5f88\u5728\u610f\u67e5\u8be2\u6548\u7387\u7684\u524d\u63d0\u4e0b \uff0c\u6211\u4eec\u4e0d\u7981\u56de\u5fc6\u8d77 Django \u4e2d\u7528\u7c7b\u64b0\u5199 Model \u7684\u6a21\u5f0f\uff0c\u5f53\u65f6\u53ef\u662f\u5341\u5206\u8282\u7701\u6211\u4eec\u7684\u529b\u6c14\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4e5f\u662f\u4e00\u79cd\u5341\u5206\u5e38\u89c1\u7684\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u53eb\u505a ORM\uff08Object\u2013relational mapping\uff09\u3002\u4e4b\u524d\u6211\u4eec\u53ef\u4ee5\u5c06\u5173\u7cfb\u578b\u6570\u636e\u5e93\u4e2d\u7684\u4e00\u4e2a\u8868\u770b\u505a\u662f\u4e00\u5f20 Excel \u8868\uff0c\u800c\u8868\u5934\u89c4\u5b9a\u4e86\u8fd9\u4e2a\u8868\u7684\u6bcf\u884c\u8bb0\u5f55\u6240\u5e94\u8be5\u6709\u7684\u5c5e\u6027\u3002\u800c\u5982\u679c\u6211\u4eec\u628a\u8fd9\u5f20\u8868\u4e2d\u7684\u8868\u5934\uff0c\u89c6\u4e3a\u662f\u4e00\u4e2a\u7c7b\u5728\u89c4\u5b9a\u5b83\u5e94\u8be5\u5177\u6709\u7684\u5c5e\u6027\u7684\u8bdd\uff0c\u90a3\u4e48\u8fd9\u5f20\u8868\u7684\u6bcf\u884c\u8bb0\u5f55\uff0c\u4e8b\u5b9e\u4e0a\u5c31\u662f\u8fd9\u4e2a\u7c7b\u6240\u5b9e\u4f8b\u5316\u51fa\u6765\u7684\u5bf9\u8c61\u3002\u8fd9\u6b63\u662f Django \u7684 db.models \u6240\u91c7\u7528\u7684\u8bbe\u8ba1\u6a21\u5f0f\u3002 \u518d\u4e00\u6b21\uff0c\u4f5c\u4e3a\u8f6e\u5b50\u5de5\u5382\uff0c\u53ea\u9700\u8981\u7b80\u5355\u7684\u641c\u7d22\uff0c\u6211\u4eec\u4fbf\u80fd\u627e\u5230\u5b9e\u73b0\u4e0e\u6570\u636e\u5e93\u4e4b\u95f4 ORM \u8bbe\u8ba1\u7684\u5e93\uff0c\u8fd9\u91cc\u6211\u4eec\u4ee5 Sequelize \u4e3a\u4f8b\u3002\u8fd9\u91cc\u6211\u4eec\u91c7\u7528\u4fbf\u643a\u7684 sqlite3 \u4f5c\u4e3a\u6211\u4eec\u7684\u6570\u636e\u5e93\u3002 \u5b9e\u73b0\u540e\u7684\u7b80\u5355\u9879\u76ee\u5f52\u6863\u4e8e\uff1a https://github.com/c7w/MyDashboardBackend","title":"CRUD \u7684\u5b9e\u73b0"},{"location":"backend/expressjs/express-js/#_3","text":"\u4e86\u89e3\u66f4\u591a ExpressJS \u7684\u4e2d\u95f4\u4ef6 \u4e86\u89e3 ExpressJS \u7684\u6a21\u677f\u6e32\u67d3\u673a\u5236 \u6362\u7528\u5176\u4ed6\u6570\u636e\u5e93\u5c1d\u8bd5\uff0c\u5305\u62ec fs\uff08\u672c\u5730\u5b58\u50a8\uff09\uff0cMySQL\uff0c\u4ee5\u53ca\u975e\u5173\u7cfb\u578b\u6570\u636e\u5e93 PostgreSQL \u53ef\u4ee5\u5e94\u7528 ExpressJS \u7684\u8bfe\u7a0b\uff1a \u300a\u8f6f\u4ef6\u5de5\u7a0b\u300b","title":"\u540e\u7eed\u62d3\u5c55"},{"location":"backend/expressjs/express-js/#_4","text":"ExpressJS \u5b98\u7f51 https://expressjs.com/ ExpressJS \u4e2d\u6587\u7f51 https://expressjs.com/zh-cn/ \u83dc\u9e1f\u6559\u7a0b https://www.runoob.com/nodejs/nodejs-express-framework.html MDN \u6559\u7a0b https://developer.mozilla.org/zh-CN/docs/Learn/Server-side/Express_Nodejs/skeleton_website","title":"\u8d44\u6e90\u94fe\u63a5"},{"location":"basic/","text":"\u57fa\u672c\u6280\u80fd \u00b6 \u8fdb\u5165\u8ba1\u7b97\u673a\u9886\u57df\u7684\u4e00\u4e9b\u57fa\u672c\u7684\u5b66\u4e60\u6280\u80fd\u548c\u5b66\u4e60\u5de5\u5177\uff0c\u4ece\u5982\u4f55\u8bb0\u7b14\u8bb0\u3001\u7801\u4ee3\u7801\uff0c\u5230\u5982\u4f55\u4f7f\u7528\u597d\u4f60\u7684\u7535\u8111\u3001\u5982\u4f55\u7ba1\u7406\u4f60\u7684\u4ee3\u7801\uff0c\u6211\u4eec\u5e0c\u671b\u8fd9\u91cc\u7684\u6587\u6863\u80fd\u63d0\u4f9b\u4e00\u4e9b\u5e2e\u52a9\u3002 \u4e0d\u5b8c\u5584\u7684\u6761\u76ee \u6211\u4eec\u5e0c\u671b\u6709\u66f4\u591a\u7684\u7f16\u5199\u8005\u4e3a\u8fd9\u4e00\u90e8\u5206\u7f16\u5199\u6587\u6863\u3002","title":"\u57fa\u672c\u6280\u80fd"},{"location":"basic/#_1","text":"\u8fdb\u5165\u8ba1\u7b97\u673a\u9886\u57df\u7684\u4e00\u4e9b\u57fa\u672c\u7684\u5b66\u4e60\u6280\u80fd\u548c\u5b66\u4e60\u5de5\u5177\uff0c\u4ece\u5982\u4f55\u8bb0\u7b14\u8bb0\u3001\u7801\u4ee3\u7801\uff0c\u5230\u5982\u4f55\u4f7f\u7528\u597d\u4f60\u7684\u7535\u8111\u3001\u5982\u4f55\u7ba1\u7406\u4f60\u7684\u4ee3\u7801\uff0c\u6211\u4eec\u5e0c\u671b\u8fd9\u91cc\u7684\u6587\u6863\u80fd\u63d0\u4f9b\u4e00\u4e9b\u5e2e\u52a9\u3002 \u4e0d\u5b8c\u5584\u7684\u6761\u76ee \u6211\u4eec\u5e0c\u671b\u6709\u66f4\u591a\u7684\u7f16\u5199\u8005\u4e3a\u8fd9\u4e00\u90e8\u5206\u7f16\u5199\u6587\u6863\u3002","title":"\u57fa\u672c\u6280\u80fd"},{"location":"basic/git/","text":"Git\uff1a\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u8f6f\u4ef6 \u00b6 \u4ec0\u4e48\u662f\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u8f6f\u4ef6 \u5728\u4ee3\u7801\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u603b\u4f1a\u9047\u5230\u4e00\u4e9b\u95ee\u9898\u3002\u4ee3\u7801\u4e0d\u77e5\u9053\u6539\u4e86\u54ea\u91cc\u4e0d\u80fd\u8fd0\u884c\u4e86\uff0c\u60f3\u8981\u56de\u9000\u600e\u4e48\u529e\uff1f\u591a\u4e2a\u4eba\u540c\u65f6\u60f3\u5bf9\u4ee3\u7801\u8fdb\u884c\u4fee\u6539\uff08\u5e76\u884c\u5f00\u53d1\uff09\uff0c\u5f00\u53d1\u5b8c\u540e\u600e\u4e48\u5408\u5e76\uff1f\u663e\u7136\uff0c\u6709\u4e00\u4e2a\u80fd\u5e2e\u52a9\u6211\u4eec\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u7684\u5de5\u5177\u5c06\u6781\u5927\u7684\u52a0\u5feb\u6211\u4eec\u5f00\u53d1\u7684\u901f\u5ea6\u3002\u800c\u8fd9\u79cd\u5de5\u5177\uff0c\u4fbf\u662f\u7248\u672c\u63a7\u5236\u8f6f\u4ef6\u3002 \u7248\u672c\u63a7\u5236\u8f6f\u4ef6\u5e2e\u52a9\u4f7f\u7528\u8005\u627e\u51fa\uff1a \u4e0d\u540c\u7248\u672c\u4e4b\u95f4\u7684\u5dee\u5f02 \u8c01\u505a\u51fa\u4e86\u8fd9\u4e2a\u4fee\u6539 \u4ec0\u4e48\u65f6\u5019\u505a\u51fa\u4e86\u8fd9\u4e2a\u4fee\u6539 \u505a\u51fa\u4fee\u6539\u7684\u4eba\u7ed9\u51fa\u7684\u4fee\u6539\u7406\u7531 \u90a3\u4e48\uff0c\u4ec0\u4e48\u662f\u5206\u5e03\u5f0f\u7684\u7248\u672c\u63a7\u5236\u8f6f\u4ef6\u5462\uff1f\u4e3a\u4e86\u4e86\u89e3\u6e05\u695a\uff0c\u6211\u4eec\u9700\u8981\u533a\u5206 \u4e2d\u592e\u7248\u672c\u63a7\u5236\u7cfb\u7edf \u548c \u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf \u7684\u533a\u522b\u3002 \u4e2d\u592e\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u5fc5\u987b\u540c\u65f6\u5b58\u5728\u670d\u52a1\u7aef\u548c\u5ba2\u6237\u7aef\u3002\u5f53\u8fdb\u884c\u4ee3\u7801\u5907\u4efd\u65f6\uff0c\u5ba2\u6237\u7aef\u4f1a\u5411\u670d\u52a1\u7aef\u53d1\u51fa\u8bf7\u6c42\uff0c\u5e76\u5c06\u6b64\u6b21\u4fee\u6539\u7684\u5185\u5bb9\u53d1\u9001\u5230\u670d\u52a1\u5668\u5f53\u4e2d\u53bb\uff0c\u670d\u52a1\u7aef\u6536\u5230\u8bf7\u6c42\u540e\uff0c\u4f1a\u5c06\u4ee3\u7801\u5b58\u50a8\u5728\u670d\u52a1\u5668\u5f53\u4e2d\uff1b\u540c\u6837\u5f53\u5ba2\u6237\u7aef\u60f3\u67e5\u770b\u67d0\u4e00\u4e2a\u7248\u672c\u7684\u4fee\u6539\u5185\u5bb9\u6216\u8005\u60f3\u6062\u590d\u5230\u67d0\u4e00\u4e2a\u7248\u672c\u4e4b\u65f6\uff0c\u5ba2\u6237\u7aef\u4e5f\u4f1a\u53d1\u9001\u8bf7\u6c42\u5230\u670d\u52a1\u7aef\uff0c\u670d\u52a1\u5728\u7aef\u63a5\u6536\u5230\u8bf7\u6c42\u4e4b\u540e\u4f1a\u505a\u51fa\u76f8\u5e94\u7684\u5904\u7406\u5e76\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u4e1a\u52a1\u6d41\u7a0b\u8fc7\u7a0b\u4e2d\uff0c\u670d\u52a1\u7aef\u5fc5\u987b\u5b58\u5728\uff0c \u6240\u6709\u8bf7\u6c42\u5fc5\u987b\u7ecf\u8fc7\u670d\u52a1\u7aef\u7684\u5904\u7406 \u3002 \u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u5668\uff0c\u4e3b\u8981\u662f\u5c06\u5907\u4efd\u7684\u4ee3\u7801\u4ee5\u53ca\u8bb0\u5f55 \u5b8c\u5168\u72ec\u7acb\u5728\u672c\u5730\u5b58\u50a8 \u3002\u6bd4\u5982\u8bf4\u5f53\u4f60\u60f3\u5c06\u4ee3\u7801\u6062\u590d\u5230\u67d0\u4e00\u4e2a\u7248\u672c\u7684\u65f6\u5019\uff0c\u672c\u5730\u7248\u672c\u63a7\u5236\u5668 \u4e0d\u9700\u8981\u4f9d\u8d56\u7f51\u7edc \u4fbf\u53ef\u4ee5\u5b8c\u6210\u6b64\u64cd\u4f5c\uff0c\u56e0\u4e3a\u672c\u5730\u7248\u672c\u63a7\u5236\u5668\u62e5\u6709 \u5b8c\u6574\u72ec\u7acb\u7684\u4e00\u5957\u63a7\u5236\u7cfb\u7edf \u3002 Excerpted from https://www.imooc.com/read/51/article/1008 . \u4ec0\u4e48\u662f Git Git \u662f Linux\uff08\u4e00\u79cd\u7a0b\u5e8f\u5458\u70ed\u7231\u7684\u64cd\u4f5c\u7cfb\u7edf\uff09\u4e4b\u7236 Linus Torvalds \u4e3a\u5f00\u53d1 Linux \u5185\u6838\u800c\u5efa\u7acb\u7684\u4e00\u4e2a \u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u8f6f\u4ef6 \u3002 Git \u9664\u4e86\u7248\u672c\u63a7\u5236\u8f6f\u4ef6\u672c\u8eab\u7684\u4f18\u52bf\u4ee5\u5916\uff0c\u8fd8\u53ef\u4ee5\uff1a \u901a\u8fc7\u67e5\u770b git history \uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u770b\u5230\u4e00\u4e2a\u9879\u76ee\u5f00\u53d1\u7684\u65f6\u95f4\u7ebf \u901a\u8fc7 git branch \uff08\u5206\u652f\uff09\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u5728\u4e0d\u7528\u62c5\u5fc3\u5f71\u54cd\u4e3b\u4ee3\u7801\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u5f00\u53d1 \u524d\u7f6e\u77e5\u8bc6 \u00b6 \u547d\u4ee4\u884c\u547d\u4ee4\u7684\u4f7f\u7528\u64cd\u4f5c \u613f\u610f \u52a8\u624b\u5b9e\u8df5 \u7684\u51b3\u5fc3\uff08\u591a\u5c1d\u8bd5\uff09 \u505a\u597d\u7b14\u8bb0\u6574\u7406\u4e0e\u603b\u7ed3\u7684\u80fd\u529b\uff08\u9057\u5fd8\u540e\u4fbf\u4e8e\u5feb\u901f\u56de\u5fc6\uff09 \u4ece\u5b89\u88c5\u4e0e\u914d\u7f6e\u5f00\u59cb \u00b6 Windows \u00b6 \u7f16\u8f91\u5668 Git \u9700\u8981\u7ed1\u5b9a\u6587\u672c\u7f16\u8f91\u5668\u4f7f\u7528\uff0c\u81ea\u5e26\u652f\u6301\u4ee5\u4e0b\u7f16\u8f91\u5668\uff1a Nano Vim Notepad++ VS Code Sublime Atom VS Codium \u5982\u679c\u4f60\u6ca1\u6709\u5b89\u88c5\u4e0a\u8ff0\u6587\u672c\u7f16\u8f91\u5668\uff0c\u90a3\u4e48\u4f60\u4f7f\u7528\u7684\u5f88\u53ef\u80fd\u662f\u2edb\u8bc4\u5e76\u4e0d\u597d\u7684\u8bb0\u4e8b\u672c\uff08\u82f1\u6587\uff1aNotepad\uff09\uff0c\u4e0d\u5efa\u8bae\u62ff\u5b83\u4f5c\u4e3a Git \u7684\u7ed1\u5b9a\u7f16\u8f91\u5668\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5efa\u8bae\u4f7f\u7528 Notepad++\uff0c\u5b83\u7684\u64cd\u4f5c\u4e0e\u754c\u9762\u53ef\u4ee5\u548c\u8bb0\u4e8b\u672c\u5b9e\u73b0\u5f88\u597d\u7684\u8fc7\u6e21\u3002\u53ef\u4ee5\u4f7f\u7528 \u79d1\u534f\u4e91\u76d8\u4e0b\u8f7d\u94fe\u63a5 \u4e0b\u8f7d\uff0c\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u5168\u90e8\u70b9\u201c\u4e0b\u4e00\u6b65\u201d\uff08\u6216\u540c\u4f4d\u7f6e\u7684\u6309\u94ae\uff09\u5373\u53ef\u3002\u5b8c\u6210\u4e4b\u540e\u4f60\u5c06\u548c\u8bb0\u4e8b\u672c\u6c38\u8fdc\u544a\u522b\uff0c\u6253\u5f00\u6587\u672c\u6587\u4ef6\u7684\u9ed8\u8ba4\u65b9\u5f0f\u4f1a\u53d8\u6210 Notepad++\u3002 \u4e0b\u8f7d \u5b89\u88c5\u5305\u4e0b\u8f7d\u5730\u5740\uff1a https://gitforwindows.org/ \u56fd\u5185\u955c\u50cf\uff1a https://npm.taobao.org/mirrors/git-for-windows/ \u6e05\u534e\u955c\u50cf\uff08\u6821\u5185\u8bbf\u95ee\u8f83\u5feb\uff09\uff1a https://mirrors.tuna.tsinghua.edu.cn/github-release/git-for-windows/git/ \u5b89\u88c5 \u4e0b\u9762\u5185\u5bb9\u82f1\u6587\u5927\u4f6c\u6216\u8005\u719f\u7ec3\u638c\u63e1\u4e86 git config \u6307\u4ee4\uff08\u4e43\u81f3\u4f1a\u76f4\u63a5\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\uff09\u7684\u540c\u5b66\u53ef\u4ee5\u5ffd\u7565\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u5927\u90e8\u5206\u9009\u9879\uff0c\u76f4\u63a5\u70b9 Next \u5373\u53ef\u3002\u4f46\u662f\u6709\u4e24\u4e2a\u5730\u65b9\u9700\u8981\u6ce8\u610f\uff1a\u7f16\u8f91\u5668\u548c\u6362\u884c\u7b26\u3002 \u7f16\u8f91\u5668\u9ed8\u8ba4\u9009\u9879\u662f Vim\uff0c\u5982\u679c\u6ca1\u6709 Vim \u7ecf\u9a8c\u7684\u540c\u5b66\uff0c\u8bf7\u9009\u62e9\u5176\u4ed6\u719f\u6089\u7684\u7f16\u8f91\u5668\uff08\u5982\u4e0a\u9762\u63d0\u5230\u7684 NotePad++\uff09\u3002 \u5bf9\u4e8e\u6362\u884c\u7b26\uff0c\u5728 Windows \u4e2d\uff0c\u9ed8\u8ba4\u7684\u6362\u884c\u662f CRLF\uff0c\u4f46\u5b9e\u9645\u5f00\u53d1\u65f6\uff0c\u901a\u5e38\u4f1a\u53d1\u73b0\u5927\u5bb6\u4e00\u81f4\u4f7f\u7528 LF\u3002\u5173\u4e8e CRLF \u548c LF \u7684\u533a\u522b\u6211\u4eec\u5728\u8fd9\u91cc\u4e0d\u518d\u8be6\u7ec6\u4ecb\u7ecd\uff0c\u56e0\u4e3a\u8bfb\u8005\u5728\u300a\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u300b\u8bfe\u7a0b\u4e2d\u5df2\u4e86\u89e3\u8fc7\u76f8\u5173\u5185\u5bb9\u3002 \u5bf9\u4e8e\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u6362\u884c\u7b26\u7684\u914d\u7f6e\uff0c\u8fd9\u91cc Checkout \u8868\u793a\u4ece\u4ed3\u5e93\u4e2d\u62c9\u53d6\u7684\u4ee3\u7801\u662f\u4ee5\u4ec0\u4e48\u6362\u884c\u7b26\u7ed3\u5c3e\uff0cCommit \u8868\u793a\u4f60\u63d0\u4ea4\u7684\u4ee3\u7801\u662f\u4ee5\u4ec0\u4e48\u6362\u884c\u7b26\u7ed3\u5c3e\uff0cas-is \u662f\u8bf4\u6362\u884c\u7b26\u4fdd\u6301\u539f\u6837\u3002 \u6211\u4eec\u63a8\u8350\u7684\u9009\u9879\u662f\u6839\u636e\u4eca\u540e\u7684\u5e94\u7528\u573a\u666f\u6765\u9009\u62e9\u3002\u5982\u679c\u56e2\u961f\u4e2d\u65e2\u6709 Windows \u9009\u624b\u53c8\u6709 Linux \u9009\u624b\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u7b2c\u4e09\u9879\uff08\u5373\u6539\u52a8\u6700\u5c0f\u539f\u5219\uff0c\u6211\u4eec\u5e76\u4e0d\u60f3\u56e0\u4e3a Commit \u65f6\u6362\u884c\u7b26\u7684\u95ee\u9898\u8986\u76d6\u6389\u5176\u4ed6\u5f00\u53d1\u8005\u7684\u8d21\u732e\uff09\u3002\u5f53\u7136\u5982\u679c\u56e2\u961f\u4e2d\u7684\u5404\u4f4d\u505a\u8fc7\u7ea6\u5b9a\uff0c\u5927\u5bb6\u7edf\u4e00\u4ee5 LF \u4e3a\u6362\u884c\u7b26\u4e3a\u7ed3\u5c3e\u5f00\u53d1\uff0c\u63d0\u4ea4\u7684\u4ee3\u7801\u4e5f\u53ea\u80fd\u662f LF \u7ed3\u5c3e\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u9009\u62e9\u7b2c\u4e00\u9879\u6216\u8005\u7b2c\u4e8c\u9879\u3002 \u6ce8\u610f\uff0c\u8fd9\u4e2a\u8bbe\u7f6e\u6211\u4eec\u63a8\u8350\u9ed8\u8ba4\u9009\u62e9\u7b2c\u4e09\u9879\uff0c\u7136\u540e\u5bf9\u4e8e\u6709\u9700\u8981\u7684\u9879\u76ee\u5206\u522b\u914d\u7f6e\uff1a 1 git config core.autocrlf true/input/false \u5176\u4e2d true , input , false \u5206\u522b\u5bf9\u5e94\u7b2c\u4e00\uff0c\u7b2c\u4e8c\uff0c\u7b2c\u4e09\u9879\u3002 Debian/Ubuntu \u00b6 1 2 apt-get install libcurl4-gnutls-dev libexpat1-dev gettext apt-get install git Centos/RedHat \u00b6 1 2 yum install curl-devel expat-devel gettext-devel yum install git-core Mac \u00b6 \u4e00\u822c Mac \u5e73\u53f0\u662f\u81ea\u5e26 Git \u7684\u3002 \u5982\u679c\u5b9e\u5728\u6ca1\u6709\u5728 Mac \u5e73\u53f0\u4e0a\u5b89\u88c5 Git \u6700\u5bb9\u6613\u7684\u5f53\u5c5e\u4f7f\u7528\u56fe\u5f62\u5316\u7684 Git \u5b89\u88c5\u5de5\u5177\uff0c\u4e0b\u8f7d\u5730\u5740\u4e3a http://sourceforge.net/projects/git-osx-installer/ \u3002 \u6709 Homebrew \u7684\u540c\u5b66\u4e5f\u53ef\u4ee5\u7528 brew install git \u5b89\u88c5\uff08\u6216\u8005\u81ea\u5b66\u600e\u4e48\u5b89\u88c5 Homebrew\uff09\u3002 \u914d\u7f6e Git \u00b6 \u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u53ef\u4ee5\u914d\u7f6e\u81ea\u5df1\u5728 git \u4e2d\u7684\u7528\u6237\u540d\u548c\u90ae\u7bb1\uff0c\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7 git config \u547d\u4ee4\u6309\u81ea\u5df1\u7684\u559c\u597d\u914d\u7f6e\u66f4\u591a\u4e1c\u897f\u3002 1 2 git config --global user.name <name> git config --global user.email <email-address> \u57fa\u7840\u64cd\u4f5c \u00b6 Repo(sitory) \u7b80\u4ecb \u5305\u542b\u4e86\u4e00\u4e2a\u9879\u76ee\u7684\u6240\u6709\u6587\u4ef6\u3001\u6587\u4ef6\u5939\u3002\u6bcf\u4e2a\u6587\u4ef6\u7684\u4fee\u6539\u3001\u5220\u9664\uff0cGit \u90fd\u80fd\u8ddf\u8e2a\uff0c\u4ee5\u4fbf\u4efb\u4f55\u65f6\u523b\u90fd\u53ef\u4ee5\u8ffd\u8e2a\u5386\u53f2\uff0c\u6216\u8005\u5728\u5c06\u6765\u67d0\u4e2a\u65f6\u523b\u53ef\u4ee5\u201c\u8fd8\u539f\u201d\u3002\uff08\u53ef\u4ee5\u7406\u89e3\u6210\u4ee3\u7801\u7684\u6587\u4ef6\u6839\u76ee\u5f55\uff09 \u521b\u5efa\u4ed3\u5e93 \u521b\u5efa\u4e00\u4e2a\u65b0\u6587\u4ef6\u5939\u4f5c\u4e3a\u4f60\u7684\u7b2c\u4e00\u4e2a Repo\uff0c\u5728\u547d\u4ee4\u884c\u4e2d\u8fdb\u5165\u8be5\u6587\u4ef6\u5939\uff0c\u8f93\u5165 git init \uff0c\u4ee5\u4f7f\u7528 Git \u6765\u7ba1\u7406\u8fd9\u4e2a\u6587\u4ef6\u5939\u3002\uff08\u521d\u59cb\u5316 Repo \u4ed3\u5e93\uff09 \u6dfb\u52a0\u6587\u4ef6 \u5728\u8fd9\u4e2a\u6587\u4ef6\u5939\u4e2d\u6dfb\u52a0\u6587\u4ef6\uff08\u4f8b\u5982\u6211\u4eec\u5199\u4e86\u4e00\u4e2a test.py \uff09\uff0c\u4f7f\u7528 git add test.py \u5c06\u6587\u4ef6\u5230\u76ee\u524d\u4e3a\u6b62\u7684\u4fee\u6539\u653e\u5165 Git \u7684\u6682\u5b58\u533a\u3002 \u4e00\u6b21\u6027\u6dfb\u52a0\u5de5\u4f5c\u73af\u5883\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\uff0c\u4f7f\u7528 git add . \u3002 \u8bb0\u5f55\u4fee\u6539 \u5f53\u6240\u6709\u7684\u4fee\u6539\u90fd\u7528 git add \u52a0\u5165\u5230\u6682\u5b58\u533a\u540e\uff0c\u5c31\u4f7f\u7528 git commit \u2013m \"...\" \u5c06\u6240\u6709\u7684\u6682\u5b58\u533a\u91cc\u7684\u4fee\u6539\u63d0\u4ea4\u81f3\u672c\u5730\u4ed3\u5e93\uff0c\u7701\u7565\u53f7\u5904\u586b\u5199\u8fd9\u6b21\u7248\u672c\u8fed\u4ee3\u90fd\u5e72\u4e86\u4ec0\u4e48\u3002 \u7248\u672c\u8fed\u4ee3 \u4e3a\u4e86\u5c55\u793a Git \u7684\u4f5c\u7528\uff0c\u6211\u4eec\u5728 test.py \u4e2d\u968f\u4fbf\u8f93\u5165\u4e86\u4e00\u4e9b\u5185\u5bb9\u3002 \u7136\u540e\u518d\u6b21\u6267\u884c git add test.py \u3001 git commit \u2013m \"...\" \u63d0\u4ea4\u66f4\u6539\u3002 \u67e5\u770b\u5386\u53f2 \u901a\u8fc7 git log \uff0c\u6211\u4eec\u53ef\u4ee5\u67e5\u770b\u4e4b\u524d\u7684 Commit \u8bb0\u5f55\uff0c\u4ee5\u53ca\u5bf9\u5e94\u7684 SHA \u7f16\u7801\u3002 \u7248\u672c\u56de\u9000 \u9996\u5148\uff0c\u6211\u4eec\u5fc5\u987b\u6307\u5b9a\u8981\u56de\u9000\u5230\u7684\u7248\u672c\u3002\u800c\u6307\u5b9a\u7248\u672c\u6709\u4e24\u79cd\u65b9\u5f0f\u3002 \u76f8\u5bf9\u5bfb\u5740\u3002\u5728 Git \u4e2d\uff0c\u7528 HEAD \u8868\u793a\u5f53\u524d\u7248\u672c\uff0c\u4e5f\u5c31\u662f\u6700\u65b0\u7684\u63d0\u4ea4 1aada331... \uff08\u6ce8\u610f\u4e0d\u540c\u5de5\u7a0b\uff0c\u4e0d\u540c\u6b21 Commit \u7684\u7248\u672c ID \u80af\u5b9a\u4e0d\u540c\uff09\uff0c\u4e0a\u4e00\u4e2a\u7248\u672c\u5c31\u662f HEAD^ \uff0c\u4e0a\u4e0a\u4e00\u4e2a\u7248\u672c\u5c31\u662f HEAD^^ \uff0c\u5f53\u7136\u5f80\u4e0a 100 \u4e2a\u7248\u672c\u5199 100 \u4e2a ^ \u6bd4\u8f83\u5bb9\u6613\u6570\u4e0d\u8fc7\u6765\uff0c\u6240\u4ee5\u5199\u6210 HEAD~100 \u3002 ID \u5bfb\u5740\u3002\u5982\u4e0a\u8ff0 \"modify test.py\" \u8fd9\u4e2a\u7248\u672c\uff0c\u53ef\u4ee5\u7528\u7248\u672c SHA ID \u7684\u524d\u51e0\u4e2a\u5b57\u7b26\u6765\u8868\u793a\uff08\u53ea\u8981\u6ca1\u6709\u6b67\u4e49\u5373\u53ef\uff09\uff0c\u6bd4\u5982 c9df5e \u3002 \u800c\u4e86\u89e3\u4e86\u600e\u6837\u6307\u5b9a\u7248\u672c\u540e\uff0c\u6211\u4eec\u4fbf\u53ef\u4ee5\u4f7f\u7528 git reset --hard <Version> \u6765\u6062\u590d\u5230\u4e4b\u524d\u7684\u7248\u672c\u4e86\u3002 \u5de5\u4f5c\u533a\uff0c\u6682\u5b58\u533a\u4e0e\u5206\u652f\u7684\u6982\u5ff5 \u5de5\u4f5c\u533a\uff08\u82f1\u6587\uff1aWorking Directory\uff09\u6307\u4f60\u7535\u8111\u4e0a\u5b58\u50a8\u7684\u5f53\u524d\u9879\u76ee\u6587\u4ef6\uff08\u6700\u65b0\uff09\uff0c\u7248\u672c\u5e93\uff08\u82f1\u6587\uff1aRepository\uff09\u4e2d\u5b58\u4e86\u5f88\u591a\u4e1c\u897f\uff0c\u5176\u4e2d\u6700\u91cd\u8981\u7684\u5c31\u662f\u6682\u5b58\u533a\uff0c\u8fd8\u6709 Git \u4e3a\u6211\u4eec\u81ea\u52a8\u521b\u5efa\u7684\u7b2c\u4e00\u4e2a\u5206\u652f\uff08\u82f1\u6587\uff1aBranch\uff09 master \uff0c\u4ee5\u53ca\u6307\u5411 master \u7684\u4e00\u4e2a\u6307\u9488\u53eb HEAD \u3002 git add \u547d\u4ee4\u5b9e\u9645\u4e0a\u5c31\u662f\u628a\u8981\u63d0\u4ea4\u7684\u6240\u6709\u4fee\u6539\u653e\u5230\u6682\u5b58\u533a\uff08\u82f1\u6587\uff1aStage\uff09\uff0c\u7136\u540e\uff0c\u6267\u884c git commit \u5c31\u53ef\u4ee5\u4e00\u6b21\u6027\u628a\u6682\u5b58\u533a\u7684\u6240\u6709\u4fee\u6539\u63d0\u4ea4\u5230\u5206\u652f\u3002 \u540c\u6b65\u5f00\u53d1 \u00b6 \u5206\u652f\u7684\u7b80\u4ecb \u00b6 \u5206\u652f\uff08\u82f1\u6587\uff1aBranching\uff09\u5c31\u662f\u79d1\u5e7b\u7535\u5f71\u91cc\u9762\u7684\u5e73\u884c\u5b87\u5b99\uff0c\u5f53\u4f60\u6b63\u5728\u7535\u8111\u524d\u52aa\u529b\u5b66\u4e60 Git \u7684\u65f6\u5019\uff0c\u53e6\u4e00\u4e2a\u4f60\u6b63\u5728\u53e6\u4e00\u4e2a\u5e73\u884c\u5b87\u5b99\u91cc\u52aa\u529b\u5b66\u4e60 SVN\u3002\u5982\u679c\u4e24\u4e2a\u5e73\u884c\u5b87\u5b99\u4e92\u4e0d\u5e72\u6270\uff0c\u90a3\u5bf9\u73b0\u5728\u7684\u4f60\u4e5f\u6ca1\u5565\u5f71\u54cd\u3002\u4e0d\u8fc7\uff0c\u5728\u67d0\u4e2a\u65f6\u95f4\u70b9\uff0c\u4e24\u4e2a\u5e73\u884c\u5b87\u5b99\u5408\u5e76\u4e86\uff0c\u7ed3\u679c\uff0c\u4f60\u65e2\u5b66\u4f1a\u4e86 Git \u53c8\u5b66\u4f1a\u4e86 SVN\uff01 \u5206\u652f\u5728\u5b9e\u9645\u4e2d\u6709\u4ec0\u4e48\u7528\u5462\uff1f\u5047\u8bbe\u4f60\u51c6\u5907\u5f00\u53d1\u4e00\u4e2a\u65b0\u529f\u80fd\uff0c\u4f46\u662f\u9700\u8981\u4e24\u5468\u624d\u80fd\u5b8c\u6210\uff0c\u7b2c\u4e00\u5468\u4f60\u5199\u4e86 50% \u7684\u4ee3\u7801\uff0c\u5982\u679c\u7acb\u523b\u63d0\u4ea4\uff0c\u7531\u4e8e\u4ee3\u7801\u8fd8\u6ca1\u5199\u5b8c\uff0c\u4e0d\u5b8c\u6574\u7684\u4ee3\u7801\u5e93\u4f1a\u5bfc\u81f4\u522b\u4eba\u4e0d\u80fd\u5e72\u6d3b\u4e86\u3002\u5982\u679c\u7b49\u4ee3\u7801\u5168\u90e8\u5199\u5b8c\u518d\u4e00\u6b21\u63d0\u4ea4\uff0c\u53c8\u5b58\u5728\u4e22\u5931\u6bcf\u5929\u8fdb\u5ea6\u7684\u5de8\u5927\u98ce\u9669\u3002 \u73b0\u5728\u6709\u4e86\u5206\u652f\uff0c\u5c31\u4e0d\u7528\u6015\u4e86\u3002\u4f60\u521b\u5efa\u4e86\u4e00\u4e2a\u5c5e\u4e8e\u4f60\u81ea\u5df1\u7684\u5206\u652f\uff0c\u522b\u4eba\u770b\u4e0d\u5230\uff0c\u8fd8\u7ee7\u7eed\u5728\u539f\u6765\u7684\u5206\u652f\u4e0a\u6b63\u5e38\u5de5\u4f5c\uff0c\u800c\u4f60\u5728\u81ea\u5df1\u7684\u5206\u652f\u4e0a\u5e72\u6d3b\uff0c\u60f3\u63d0\u4ea4\u5c31\u63d0\u4ea4\uff0c\u76f4\u5230\u5f00\u53d1\u5b8c\u6bd5\u540e\uff0c\u518d\u4e00\u6b21\u6027\u5408\u5e76\u5230\u539f\u6765\u7684\u5206\u652f\u4e0a\uff0c\u8fd9\u6837\uff0c\u65e2\u5b89\u5168\uff0c\u53c8\u4e0d\u5f71\u54cd\u522b\u4eba\u5de5\u4f5c\u3002 \u5f15\u7528\u81ea \u5ed6\u96ea\u5cf0\u300a\u5206\u652f\u7684\u4ecb\u7ecd\u300b \u3002 \u521b\u5efa\u4e0e\u5408\u5e76\u5206\u652f \u00b6 \u6211\u4eec\u53ef\u4ee5\u5c06\u9879\u76ee\u7684\u8fdb\u5c55\u7406\u89e3\u6210\u4e00\u6761\u65f6\u95f4\u7ebf\uff0c\u8fd9\u6761\u65f6\u95f4\u7ebf\u5c31\u662f\u4e00\u4e2a\u5206\u652f\uff0c\u800c\u9879\u76ee\u7684\u4e3b\u8fdb\u7a0b\u7ebf\uff0c\u5219\u662f master \u5206\u652f\u3002\u6211\u4eec\u4e4b\u524d\u63d0\u5230\u7684\u6307\u9488 HEAD \uff0c\u4e8b\u5b9e\u4e0a\u662f\u6307\u5411\u5f53\u524d\u5206\u652f\u5934\u90e8\u7684\u6307\u9488\u3002 \u6b63\u5982\u8fd9\u4e00\u5c0f\u8282\u7684\u6807\u9898\u6240\u8bf4\uff0c\u6211\u4eec\u60f3\u8981\u521b\u5efa\u65b0\u5206\u652f\u4e0e\u5408\u5e76\u5206\u652f\u3002 \u6bd4\u5982\u6211\u4eec\u53ef\u4ee5\u4e3e\u4e2a\u4f8b\u5b50\u3002\uff08\u5f15\u81ea \u5ed6\u96ea\u5cf0\u300a\u521b\u5efa\u4e0e\u5408\u5e76\u5206\u652f\u300b \uff09 \u4e00\u5f00\u59cb\u7684\u65f6\u5019\uff0c master \u5206\u652f\u662f\u4e00\u6761\u7ebf\uff0cGit \u7528 master \u6307\u5411\u6700\u65b0\u7684\u63d0\u4ea4\uff0c\u518d\u7528 HEAD \u6307\u5411 master \uff0c\u5c31\u80fd\u786e\u5b9a\u5f53\u524d\u5206\u652f\uff0c\u4ee5\u53ca\u5f53\u524d\u5206\u652f\u7684\u63d0\u4ea4\u70b9\uff1a \u6bcf\u6b21\u63d0\u4ea4\uff0c master \u5206\u652f\u90fd\u4f1a\u5411\u524d\u79fb\u52a8\u4e00\u6b65\uff0c\u8fd9\u6837\uff0c\u968f\u7740\u4f60\u4e0d\u65ad\u63d0\u4ea4\uff0c master \u5206\u652f\u7684\u7ebf\u4e5f\u8d8a\u6765\u8d8a\u957f\u3002 \u73b0\u5728\u6211\u4eec\u4f7f\u7528\u547d\u4ee4\u521b\u5efa\u65b0\u7684\u5206\u652f dev \u5e76\u5207\u6362\u8fc7\u53bb\uff0c\u4f7f\u7528 git checkout -b dev \u3002Git \u65b0\u5efa\u4e86\u4e00\u4e2a\u6307\u9488\u53eb dev \uff0c\u6307\u5411 master \u76f8\u540c\u7684\u63d0\u4ea4\uff0c\u518d\u628a HEAD \u6307\u5411 dev \uff0c\u5c31\u8868\u793a\u5f53\u524d\u5206\u652f\u5728 dev \u4e0a\uff1a \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 git branch \u547d\u4ee4\u6765\u67e5\u770b\u6240\u6709\u5206\u652f\uff0c\u5728\u7ed3\u679c\u4e2d\uff0c\u5f53\u524d\u5206\u652f\u524d\u9762\u4f1a\u591a\u51fa\u4e00\u4e2a * \u53f7\u3002 \u4ece\u73b0\u5728\u5f00\u59cb\uff0c\u5bf9\u5de5\u4f5c\u533a\u7684\u4fee\u6539\u548c\u63d0\u4ea4\u5c31\u662f\u9488\u5bf9 dev \u5206\u652f\u4e86\uff0c\u6bd4\u5982\u65b0\u63d0\u4ea4\u4e00\u6b21\u540e\uff0c dev \u6307\u9488\u5f80\u524d\u79fb\u52a8\u4e00\u6b65\uff0c\u800c master \u6307\u9488\u4e0d\u53d8\uff1a \u5047\u5982\u6211\u4eec\u5728 dev \u4e0a\u7684\u5de5\u4f5c\u5b8c\u6210\u4e86\uff0c\u5c31\u53ef\u4ee5\u628a dev \u5408\u5e76\u5230 master \u4e0a\u3002\u600e\u4e48\u5408\u5e76\u5462\uff1f\u9996\u5148\u6211\u4eec\u8981\u641e\u6e05\u695a\uff0c\u662f\u8c01\u8981\u5408\u5e76\u8c01\u3002\u8fd9\u91cc\u6211\u4eec\u5e94\u8be5\u7406\u89e3\u6210\uff0c master \u8981\u5403\u6389\u65b0\u5efa\u7684 dev \u5206\u652f\uff0c\u6210\u4e3a\u65b0\u7684 master \u3002\u4e8e\u662f\uff0c\u9996\u5148\u6211\u4eec\u5e94\u8be5\u5207\u6362\u56de master \u5206\u652f\uff0c\u4f7f\u7528\u547d\u4ee4 git checkout master \uff0c\u4ee5\u8868\u660e\u8fd9\u662f master \u5206\u652f\u7684\u64cd\u4f5c\u3002\u7136\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 git merge dev \uff0c\u8fdb\u884c\u5206\u652f\u5408\u5e76\u3002\u6700\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 git branch -d dev \uff0c\u5c06 dev \u5206\u652f\u5220\u9664\u3002 \u89e3\u51b3\u51b2\u7a81 \u00b6 \u5047\u8bbe\u6211\u4eec\u8bbe\u60f3\u51fa\u73b0\u8fd9\u4e48\u4e00\u79cd\u60c5\u51b5\uff0c master \u5206\u652f\u548c\u65b0\u5efa\u7684 feature1 \u5206\u652f\u5747\u63d0\u4ea4\u4e86\u65b0\u7684\u66f4\u6539\uff0c\u90a3\u4e48\u6211\u4eec\u8be5\u600e\u4e48\u5c06\u5176 Merge \u5462\uff1f \u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5c1d\u8bd5\u7528 master \u53bb Merge feature1 \u7684\u65f6\u5019\uff0c\u63a7\u5236\u53f0\u4fbf\u4f1a\u63d0\u9192\u6211\u4eec\u4ea7\u751f\u5408\u5e76\u51b2\u7a81\u3002\u5fc5\u987b\u624b\u52a8\u89e3\u51b3\u51b2\u7a81\u540e\u518d\u63d0\u4ea4\u3002\u800c\u6211\u4eec\u6839\u636e\u63d0\u793a\u4fe1\u606f\u53bb\u5bfb\u627e\u5bf9\u5e94\u7684\u51b2\u7a81\u6587\u4ef6\uff0c\u5728\u51b2\u7a81\u5904 Git \u4e5f\u4f1a\u5c06\u5176\u663e\u8457\u7684\u6807\u51fa\uff0c\u4f8b\u5982\uff1a 1 2 3 4 5 6 7 8 9 Git is a distributed version control system. Git is free software distributed under the GPL. Git has a mutable index called stage. Git tracks changes of files. <<<<<<< HEAD Creating a new branch is quick & simple. ======= Creating a new branch is quick AND simple. >>>>>>> feature1 \u5728\u8fd9\u91cc\u6211\u4eec\u624b\u52a8\u4fee\u6539\u540e\uff0c\u518d\u91cd\u65b0\u4f7f\u7528 git add \u548c git commit \u5c31\u53ef\u4ee5\u6210\u529f\u5c06\u4e24\u4e2a\u5206\u652f\u5408\u5e76\u4e86\u3002 \u7279\u522b\u7684\uff0c\u5728\u5206\u652f\u5408\u5e76\u4e4b\u540e\uff0c\u4f7f\u7528 git log --graph \u53ef\u4ee5\u770b\u5230\u5206\u652f\u5408\u5e76\u56fe\u3002 Rebase \u00b6 \u611f\u89c9\u7248\u672c\u6811\u56e0\u4e3a\u5408\u5e76\u51b2\u7a81\uff0c\u4ea7\u751f\u4e86\u73af\u5f62\u7ed3\u6784\uff0c\u4e8e\u662f\u5f88\u4e0d\u723d\uff1f git rebase \u53ef\u4ee5\u5e2e\u52a9\u4f60\u5c06\u7248\u672c\u6811\u6062\u590d\u7ebf\u6027\u3002 \u5728\u8fd9\u91cc\u6211\u4eec\u7ed9\u51fa\u6559\u7a0b\u94fe\u63a5\uff0c\u63a8\u8350\u5927\u5bb6\u81ea\u884c\u9605\u8bfb\u3002 \u9644\uff1a https://www.liaoxuefeng.com/wiki/896043488029600/1216289527823648 \u3002 \u8fdc\u7a0b Git \u4ed3\u5e93 \u00b6 \u663e\u7136\uff0c\u5927\u5bb6\u4e0d\u4f1a\u90fd\u6324\u5728\u4f60\u7684\u7535\u8111\u4e0a\u5f00\u53d1\u3002\u6211\u4eec\u8bb0\u5f97\uff0cGit \u662f\u5206\u5e03\u5f0f\u7684\u7248\u672c\u63a7\u5236\u8f6f\u4ef6\u3002\u4e8e\u662f\uff0c\u6211\u4eec\u9700\u8981\u4e00\u79cd\u65b9\u5f0f\u8fdb\u884c\u540c\u6b65\u3002\u4f8b\u5982\uff0c\u628a Git \u4ed3\u5e93\u653e\u5728\u7f51\u4e0a\u3002 \u5728\u8fd9\u91cc\u6211\u4eec\u4ecb\u7ecd\u51e0\u79cd\u8fdc\u7a0b\u7684 Git \u4ed3\u5e93\uff1a GitHub\uff1a \u5168\u7403\u6700\u5927\u540c\u6027\u4ea4\u6d41\u7f51\u7ad9 \u3002\u4e00\u4e2a\u57fa\u4e8eGit\u7684\u4ee3\u7801\u6258\u7ba1\u670d\u52a1\u5e73\u53f0\uff0c\u5f00\u6e90\u793e\u533a\u4ea4\u6d41\u4ee3\u7801\u7684\u91cd\u8981\u7f51\u7ad9\u3002\u7f51\u5740 https://www.github.com/ GitLab\uff1a\u7c7b\u4f3cGithub\uff0c\u4f46\u4e3b\u8981\u9762\u5411\u4f01\u4e1a\u3001\u7ec4\u7ec7\u7b49\u5185\u90e8\u5408\u4f5c\u3002\u7f51\u5740 https://www.gitlab.com/ Tsinghua Git\uff1a\u6e05\u534e\u5927\u5b66\u57fa\u4e8e GitLab \u642d\u5efa\u7684\u5927\u5b66\u5185\u90e8\u7684 Git\uff0c\u9002\u7528\u4e8e\u8bfe\u7a0b\u5c0f\u7ec4\u5185\u90e8\u6216\u8005\u5b66\u751f\u7ec4\u7ec7\u5185\u90e8\u7684\u5408\u4f5c\u3002\u7f51\u5740 https://git.tsinghua.edu.cn/ \u4e0b\u9762\u6211\u4eec\u4ecb\u7ecd\u4e00\u4e9b\u5728\u8fdc\u7a0b\u4ed3\u5e93\u63a7\u5236\u65f6\u7684\u57fa\u672c\u64cd\u4f5c\uff1a \u514b\u9686\u4ed3\u5e93\u5230\u672c\u5730 \u6bd4\u5982\uff0c\u4ee5 \u672c\u6280\u80fd\u5f15\u5bfc\u6587\u6863 \u6240\u5728\u7684 Git \u4ed3\u5e93\u4e3a\u4f8b\u3002\u6211\u4eec\u4f7f\u7528 git clone git@github.com:SAST-skill-docers/sast-skill-docs.git \uff0c\u8fd9\u6837\u4fbf\u628a\u8fdc\u7a0b\u4ed3\u5e93\u4e2d\u7684\u5185\u5bb9\u53d6\u5230\u4e86\u672c\u5730\uff0c\u5e76\u521b\u5efa\u4e86\u5de5\u4f5c\u533a\u3002 \u6dfb\u52a0\u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740 \u6709\u65f6\uff0c\u6211\u4eec\u7684\u9879\u76ee\u662f\u4f7f\u7528 git init \u6765\u521b\u5efa\u7684\uff0c\u5e76\u4e0d\u662f\u4ece GitHub \u4e0a\u76f4\u63a5 Clone \u7684\u522b\u4eba\u7684\u4ee3\u7801\u3002\u8fd9\u65f6\u6211\u4eec\u8981\u9996\u5148\u5728 GitHub/GitLab/Tsinghua Git \u4e0a\u65b0\u5efa\u4e00\u4e2a Repo\uff0c\u7136\u540e\u6309\u7167\u63d0\u793a\uff0c\u4f7f\u7528 git remote add origin <\u4f60\u7684 Repo \u7684 HTTP/SSH \u5730\u5740> \u3002\u8fd9\u6837\u4fbf\u662f\u544a\u8bc9\u672c\u5730\u7684 Git \u7ba1\u7406\u5668\uff0c\u8fd9\u4e2a\u5730\u5740\u8d77\u4e00\u4e2a\u7b80\u4fbf\u7684\u540d\u5b57\u53eb\u505a origin \uff0c\u65b9\u4fbf\u4eca\u540e\u4f7f\u7528\u3002 \u63a8\u9001\u66f4\u6539 \u6211\u4eec\u5c06\u6240\u6709\u7684\u66f4\u6539\u6682\u5b58\uff08\u82f1\u6587\uff1aAdd\uff09\u548c\u63d0\u4ea4\uff08\u82f1\u6587\uff1aCommit\uff09\u540e\uff0c\u4fbf\u53ef\u4ee5\u4f7f\u7528 git push origin master \u7533\u8bf7\u5411\u8fdc\u7aef origin \u7684 master \u5206\u652f\u540c\u6b65\u63d0\u4ea4\u8bb0\u5f55\u3002 \u62c9\u53d6\u66f4\u6539 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4 git pull origin master \u6765\u4ece\u8fdc\u7aef origin \u7684 master \u83b7\u53d6\u5176\u6700\u65b0\u7684\u6570\u636e\uff08\u53ef\u80fd\u662f\u522b\u4eba\u66f4\u65b0\u4e0a\u53bb\u7684\uff09\u3002\u6b63\u5e38\u7684\u63a8\u9001\u66f4\u6539\u6d41\u7a0b\u4e3a\uff1a\u5148 Add \u548c Commit \u672c\u5730\u4fee\u6539\uff0c\u7136\u540e\u62c9\u53d6\u8fdc\u7aef\u66f4\u6539\uff0c\u5982\u679c\u6b64\u65f6\u51fa\u73b0\u4e86\u5408\u5e76\u51b2\u7a81\uff08\u82f1\u6587\uff1aMerge Conflict\uff09\uff0c\u89e3\u51b3\u5408\u5e76\u51b2\u7a81\u3002\u7136\u540e\uff0c\u5728\u5408\u5e76\u51b2\u7a81\u89e3\u51b3\u540e\u63a8\u9001\u66f4\u6539\u3002 \u540e\u7eed\u62d3\u5c55 \u00b6 \u60f3\u8981\u5b66\u4e60\u66f4\u591a Git \u5185\u5bb9\uff1f \u4f7f\u7528\u547d\u4ee4 git help Pro Git Book https://git-scm.com/book/zh/v2 \u5b66\u4e60 Git \u5206\u652f https://learngitbranching.js.org/?locale=zh_CN \u5b66\u4e86 Git \u4e0d\u77e5\u8be5\u5982\u4f55\u5e94\u7528\uff1f \u7a0b\u8bbe\u5927\u4f5c\u4e1a \u8bd5\u7740\u53bb\u5165\u624b\u4e00\u4e9b\u8f6f\u4ef6\u5de5\u7a0b\u9879\u76ee \u53c2\u8003\u8d44\u6599 \u00b6 2021 \u6691\u57f9\u8bb2\u4e49 by tshoigyr 2020 \u6691\u57f9\u8bb2\u4e49 by rls 2021 \u6625\u5b63\u5b66\u671f\u300a\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u300b\u8bfe\u7a0b\u8bb2\u4e49 \u5ed6\u96ea\u5cf0\u7684 Git \u6559\u7a0b https://www.liaoxuefeng.com/wiki/896043488029600","title":"Git \u5165\u95e8"},{"location":"basic/git/#git","text":"\u4ec0\u4e48\u662f\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u8f6f\u4ef6 \u5728\u4ee3\u7801\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u603b\u4f1a\u9047\u5230\u4e00\u4e9b\u95ee\u9898\u3002\u4ee3\u7801\u4e0d\u77e5\u9053\u6539\u4e86\u54ea\u91cc\u4e0d\u80fd\u8fd0\u884c\u4e86\uff0c\u60f3\u8981\u56de\u9000\u600e\u4e48\u529e\uff1f\u591a\u4e2a\u4eba\u540c\u65f6\u60f3\u5bf9\u4ee3\u7801\u8fdb\u884c\u4fee\u6539\uff08\u5e76\u884c\u5f00\u53d1\uff09\uff0c\u5f00\u53d1\u5b8c\u540e\u600e\u4e48\u5408\u5e76\uff1f\u663e\u7136\uff0c\u6709\u4e00\u4e2a\u80fd\u5e2e\u52a9\u6211\u4eec\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u7684\u5de5\u5177\u5c06\u6781\u5927\u7684\u52a0\u5feb\u6211\u4eec\u5f00\u53d1\u7684\u901f\u5ea6\u3002\u800c\u8fd9\u79cd\u5de5\u5177\uff0c\u4fbf\u662f\u7248\u672c\u63a7\u5236\u8f6f\u4ef6\u3002 \u7248\u672c\u63a7\u5236\u8f6f\u4ef6\u5e2e\u52a9\u4f7f\u7528\u8005\u627e\u51fa\uff1a \u4e0d\u540c\u7248\u672c\u4e4b\u95f4\u7684\u5dee\u5f02 \u8c01\u505a\u51fa\u4e86\u8fd9\u4e2a\u4fee\u6539 \u4ec0\u4e48\u65f6\u5019\u505a\u51fa\u4e86\u8fd9\u4e2a\u4fee\u6539 \u505a\u51fa\u4fee\u6539\u7684\u4eba\u7ed9\u51fa\u7684\u4fee\u6539\u7406\u7531 \u90a3\u4e48\uff0c\u4ec0\u4e48\u662f\u5206\u5e03\u5f0f\u7684\u7248\u672c\u63a7\u5236\u8f6f\u4ef6\u5462\uff1f\u4e3a\u4e86\u4e86\u89e3\u6e05\u695a\uff0c\u6211\u4eec\u9700\u8981\u533a\u5206 \u4e2d\u592e\u7248\u672c\u63a7\u5236\u7cfb\u7edf \u548c \u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf \u7684\u533a\u522b\u3002 \u4e2d\u592e\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u5fc5\u987b\u540c\u65f6\u5b58\u5728\u670d\u52a1\u7aef\u548c\u5ba2\u6237\u7aef\u3002\u5f53\u8fdb\u884c\u4ee3\u7801\u5907\u4efd\u65f6\uff0c\u5ba2\u6237\u7aef\u4f1a\u5411\u670d\u52a1\u7aef\u53d1\u51fa\u8bf7\u6c42\uff0c\u5e76\u5c06\u6b64\u6b21\u4fee\u6539\u7684\u5185\u5bb9\u53d1\u9001\u5230\u670d\u52a1\u5668\u5f53\u4e2d\u53bb\uff0c\u670d\u52a1\u7aef\u6536\u5230\u8bf7\u6c42\u540e\uff0c\u4f1a\u5c06\u4ee3\u7801\u5b58\u50a8\u5728\u670d\u52a1\u5668\u5f53\u4e2d\uff1b\u540c\u6837\u5f53\u5ba2\u6237\u7aef\u60f3\u67e5\u770b\u67d0\u4e00\u4e2a\u7248\u672c\u7684\u4fee\u6539\u5185\u5bb9\u6216\u8005\u60f3\u6062\u590d\u5230\u67d0\u4e00\u4e2a\u7248\u672c\u4e4b\u65f6\uff0c\u5ba2\u6237\u7aef\u4e5f\u4f1a\u53d1\u9001\u8bf7\u6c42\u5230\u670d\u52a1\u7aef\uff0c\u670d\u52a1\u5728\u7aef\u63a5\u6536\u5230\u8bf7\u6c42\u4e4b\u540e\u4f1a\u505a\u51fa\u76f8\u5e94\u7684\u5904\u7406\u5e76\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u4e1a\u52a1\u6d41\u7a0b\u8fc7\u7a0b\u4e2d\uff0c\u670d\u52a1\u7aef\u5fc5\u987b\u5b58\u5728\uff0c \u6240\u6709\u8bf7\u6c42\u5fc5\u987b\u7ecf\u8fc7\u670d\u52a1\u7aef\u7684\u5904\u7406 \u3002 \u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u5668\uff0c\u4e3b\u8981\u662f\u5c06\u5907\u4efd\u7684\u4ee3\u7801\u4ee5\u53ca\u8bb0\u5f55 \u5b8c\u5168\u72ec\u7acb\u5728\u672c\u5730\u5b58\u50a8 \u3002\u6bd4\u5982\u8bf4\u5f53\u4f60\u60f3\u5c06\u4ee3\u7801\u6062\u590d\u5230\u67d0\u4e00\u4e2a\u7248\u672c\u7684\u65f6\u5019\uff0c\u672c\u5730\u7248\u672c\u63a7\u5236\u5668 \u4e0d\u9700\u8981\u4f9d\u8d56\u7f51\u7edc \u4fbf\u53ef\u4ee5\u5b8c\u6210\u6b64\u64cd\u4f5c\uff0c\u56e0\u4e3a\u672c\u5730\u7248\u672c\u63a7\u5236\u5668\u62e5\u6709 \u5b8c\u6574\u72ec\u7acb\u7684\u4e00\u5957\u63a7\u5236\u7cfb\u7edf \u3002 Excerpted from https://www.imooc.com/read/51/article/1008 . \u4ec0\u4e48\u662f Git Git \u662f Linux\uff08\u4e00\u79cd\u7a0b\u5e8f\u5458\u70ed\u7231\u7684\u64cd\u4f5c\u7cfb\u7edf\uff09\u4e4b\u7236 Linus Torvalds \u4e3a\u5f00\u53d1 Linux \u5185\u6838\u800c\u5efa\u7acb\u7684\u4e00\u4e2a \u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u8f6f\u4ef6 \u3002 Git \u9664\u4e86\u7248\u672c\u63a7\u5236\u8f6f\u4ef6\u672c\u8eab\u7684\u4f18\u52bf\u4ee5\u5916\uff0c\u8fd8\u53ef\u4ee5\uff1a \u901a\u8fc7\u67e5\u770b git history \uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u770b\u5230\u4e00\u4e2a\u9879\u76ee\u5f00\u53d1\u7684\u65f6\u95f4\u7ebf \u901a\u8fc7 git branch \uff08\u5206\u652f\uff09\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u5728\u4e0d\u7528\u62c5\u5fc3\u5f71\u54cd\u4e3b\u4ee3\u7801\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u5f00\u53d1","title":"Git\uff1a\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u8f6f\u4ef6"},{"location":"basic/git/#_1","text":"\u547d\u4ee4\u884c\u547d\u4ee4\u7684\u4f7f\u7528\u64cd\u4f5c \u613f\u610f \u52a8\u624b\u5b9e\u8df5 \u7684\u51b3\u5fc3\uff08\u591a\u5c1d\u8bd5\uff09 \u505a\u597d\u7b14\u8bb0\u6574\u7406\u4e0e\u603b\u7ed3\u7684\u80fd\u529b\uff08\u9057\u5fd8\u540e\u4fbf\u4e8e\u5feb\u901f\u56de\u5fc6\uff09","title":"\u524d\u7f6e\u77e5\u8bc6"},{"location":"basic/git/#_2","text":"","title":"\u4ece\u5b89\u88c5\u4e0e\u914d\u7f6e\u5f00\u59cb"},{"location":"basic/git/#windows","text":"\u7f16\u8f91\u5668 Git \u9700\u8981\u7ed1\u5b9a\u6587\u672c\u7f16\u8f91\u5668\u4f7f\u7528\uff0c\u81ea\u5e26\u652f\u6301\u4ee5\u4e0b\u7f16\u8f91\u5668\uff1a Nano Vim Notepad++ VS Code Sublime Atom VS Codium \u5982\u679c\u4f60\u6ca1\u6709\u5b89\u88c5\u4e0a\u8ff0\u6587\u672c\u7f16\u8f91\u5668\uff0c\u90a3\u4e48\u4f60\u4f7f\u7528\u7684\u5f88\u53ef\u80fd\u662f\u2edb\u8bc4\u5e76\u4e0d\u597d\u7684\u8bb0\u4e8b\u672c\uff08\u82f1\u6587\uff1aNotepad\uff09\uff0c\u4e0d\u5efa\u8bae\u62ff\u5b83\u4f5c\u4e3a Git \u7684\u7ed1\u5b9a\u7f16\u8f91\u5668\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5efa\u8bae\u4f7f\u7528 Notepad++\uff0c\u5b83\u7684\u64cd\u4f5c\u4e0e\u754c\u9762\u53ef\u4ee5\u548c\u8bb0\u4e8b\u672c\u5b9e\u73b0\u5f88\u597d\u7684\u8fc7\u6e21\u3002\u53ef\u4ee5\u4f7f\u7528 \u79d1\u534f\u4e91\u76d8\u4e0b\u8f7d\u94fe\u63a5 \u4e0b\u8f7d\uff0c\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u5168\u90e8\u70b9\u201c\u4e0b\u4e00\u6b65\u201d\uff08\u6216\u540c\u4f4d\u7f6e\u7684\u6309\u94ae\uff09\u5373\u53ef\u3002\u5b8c\u6210\u4e4b\u540e\u4f60\u5c06\u548c\u8bb0\u4e8b\u672c\u6c38\u8fdc\u544a\u522b\uff0c\u6253\u5f00\u6587\u672c\u6587\u4ef6\u7684\u9ed8\u8ba4\u65b9\u5f0f\u4f1a\u53d8\u6210 Notepad++\u3002 \u4e0b\u8f7d \u5b89\u88c5\u5305\u4e0b\u8f7d\u5730\u5740\uff1a https://gitforwindows.org/ \u56fd\u5185\u955c\u50cf\uff1a https://npm.taobao.org/mirrors/git-for-windows/ \u6e05\u534e\u955c\u50cf\uff08\u6821\u5185\u8bbf\u95ee\u8f83\u5feb\uff09\uff1a https://mirrors.tuna.tsinghua.edu.cn/github-release/git-for-windows/git/ \u5b89\u88c5 \u4e0b\u9762\u5185\u5bb9\u82f1\u6587\u5927\u4f6c\u6216\u8005\u719f\u7ec3\u638c\u63e1\u4e86 git config \u6307\u4ee4\uff08\u4e43\u81f3\u4f1a\u76f4\u63a5\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\uff09\u7684\u540c\u5b66\u53ef\u4ee5\u5ffd\u7565\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u5927\u90e8\u5206\u9009\u9879\uff0c\u76f4\u63a5\u70b9 Next \u5373\u53ef\u3002\u4f46\u662f\u6709\u4e24\u4e2a\u5730\u65b9\u9700\u8981\u6ce8\u610f\uff1a\u7f16\u8f91\u5668\u548c\u6362\u884c\u7b26\u3002 \u7f16\u8f91\u5668\u9ed8\u8ba4\u9009\u9879\u662f Vim\uff0c\u5982\u679c\u6ca1\u6709 Vim \u7ecf\u9a8c\u7684\u540c\u5b66\uff0c\u8bf7\u9009\u62e9\u5176\u4ed6\u719f\u6089\u7684\u7f16\u8f91\u5668\uff08\u5982\u4e0a\u9762\u63d0\u5230\u7684 NotePad++\uff09\u3002 \u5bf9\u4e8e\u6362\u884c\u7b26\uff0c\u5728 Windows \u4e2d\uff0c\u9ed8\u8ba4\u7684\u6362\u884c\u662f CRLF\uff0c\u4f46\u5b9e\u9645\u5f00\u53d1\u65f6\uff0c\u901a\u5e38\u4f1a\u53d1\u73b0\u5927\u5bb6\u4e00\u81f4\u4f7f\u7528 LF\u3002\u5173\u4e8e CRLF \u548c LF \u7684\u533a\u522b\u6211\u4eec\u5728\u8fd9\u91cc\u4e0d\u518d\u8be6\u7ec6\u4ecb\u7ecd\uff0c\u56e0\u4e3a\u8bfb\u8005\u5728\u300a\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u300b\u8bfe\u7a0b\u4e2d\u5df2\u4e86\u89e3\u8fc7\u76f8\u5173\u5185\u5bb9\u3002 \u5bf9\u4e8e\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u6362\u884c\u7b26\u7684\u914d\u7f6e\uff0c\u8fd9\u91cc Checkout \u8868\u793a\u4ece\u4ed3\u5e93\u4e2d\u62c9\u53d6\u7684\u4ee3\u7801\u662f\u4ee5\u4ec0\u4e48\u6362\u884c\u7b26\u7ed3\u5c3e\uff0cCommit \u8868\u793a\u4f60\u63d0\u4ea4\u7684\u4ee3\u7801\u662f\u4ee5\u4ec0\u4e48\u6362\u884c\u7b26\u7ed3\u5c3e\uff0cas-is \u662f\u8bf4\u6362\u884c\u7b26\u4fdd\u6301\u539f\u6837\u3002 \u6211\u4eec\u63a8\u8350\u7684\u9009\u9879\u662f\u6839\u636e\u4eca\u540e\u7684\u5e94\u7528\u573a\u666f\u6765\u9009\u62e9\u3002\u5982\u679c\u56e2\u961f\u4e2d\u65e2\u6709 Windows \u9009\u624b\u53c8\u6709 Linux \u9009\u624b\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u7b2c\u4e09\u9879\uff08\u5373\u6539\u52a8\u6700\u5c0f\u539f\u5219\uff0c\u6211\u4eec\u5e76\u4e0d\u60f3\u56e0\u4e3a Commit \u65f6\u6362\u884c\u7b26\u7684\u95ee\u9898\u8986\u76d6\u6389\u5176\u4ed6\u5f00\u53d1\u8005\u7684\u8d21\u732e\uff09\u3002\u5f53\u7136\u5982\u679c\u56e2\u961f\u4e2d\u7684\u5404\u4f4d\u505a\u8fc7\u7ea6\u5b9a\uff0c\u5927\u5bb6\u7edf\u4e00\u4ee5 LF \u4e3a\u6362\u884c\u7b26\u4e3a\u7ed3\u5c3e\u5f00\u53d1\uff0c\u63d0\u4ea4\u7684\u4ee3\u7801\u4e5f\u53ea\u80fd\u662f LF \u7ed3\u5c3e\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u9009\u62e9\u7b2c\u4e00\u9879\u6216\u8005\u7b2c\u4e8c\u9879\u3002 \u6ce8\u610f\uff0c\u8fd9\u4e2a\u8bbe\u7f6e\u6211\u4eec\u63a8\u8350\u9ed8\u8ba4\u9009\u62e9\u7b2c\u4e09\u9879\uff0c\u7136\u540e\u5bf9\u4e8e\u6709\u9700\u8981\u7684\u9879\u76ee\u5206\u522b\u914d\u7f6e\uff1a 1 git config core.autocrlf true/input/false \u5176\u4e2d true , input , false \u5206\u522b\u5bf9\u5e94\u7b2c\u4e00\uff0c\u7b2c\u4e8c\uff0c\u7b2c\u4e09\u9879\u3002","title":"Windows"},{"location":"basic/git/#debianubuntu","text":"1 2 apt-get install libcurl4-gnutls-dev libexpat1-dev gettext apt-get install git","title":"Debian/Ubuntu"},{"location":"basic/git/#centosredhat","text":"1 2 yum install curl-devel expat-devel gettext-devel yum install git-core","title":"Centos/RedHat"},{"location":"basic/git/#mac","text":"\u4e00\u822c Mac \u5e73\u53f0\u662f\u81ea\u5e26 Git \u7684\u3002 \u5982\u679c\u5b9e\u5728\u6ca1\u6709\u5728 Mac \u5e73\u53f0\u4e0a\u5b89\u88c5 Git \u6700\u5bb9\u6613\u7684\u5f53\u5c5e\u4f7f\u7528\u56fe\u5f62\u5316\u7684 Git \u5b89\u88c5\u5de5\u5177\uff0c\u4e0b\u8f7d\u5730\u5740\u4e3a http://sourceforge.net/projects/git-osx-installer/ \u3002 \u6709 Homebrew \u7684\u540c\u5b66\u4e5f\u53ef\u4ee5\u7528 brew install git \u5b89\u88c5\uff08\u6216\u8005\u81ea\u5b66\u600e\u4e48\u5b89\u88c5 Homebrew\uff09\u3002","title":"Mac"},{"location":"basic/git/#git_1","text":"\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u53ef\u4ee5\u914d\u7f6e\u81ea\u5df1\u5728 git \u4e2d\u7684\u7528\u6237\u540d\u548c\u90ae\u7bb1\uff0c\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7 git config \u547d\u4ee4\u6309\u81ea\u5df1\u7684\u559c\u597d\u914d\u7f6e\u66f4\u591a\u4e1c\u897f\u3002 1 2 git config --global user.name <name> git config --global user.email <email-address>","title":"\u914d\u7f6e Git"},{"location":"basic/git/#_3","text":"Repo(sitory) \u7b80\u4ecb \u5305\u542b\u4e86\u4e00\u4e2a\u9879\u76ee\u7684\u6240\u6709\u6587\u4ef6\u3001\u6587\u4ef6\u5939\u3002\u6bcf\u4e2a\u6587\u4ef6\u7684\u4fee\u6539\u3001\u5220\u9664\uff0cGit \u90fd\u80fd\u8ddf\u8e2a\uff0c\u4ee5\u4fbf\u4efb\u4f55\u65f6\u523b\u90fd\u53ef\u4ee5\u8ffd\u8e2a\u5386\u53f2\uff0c\u6216\u8005\u5728\u5c06\u6765\u67d0\u4e2a\u65f6\u523b\u53ef\u4ee5\u201c\u8fd8\u539f\u201d\u3002\uff08\u53ef\u4ee5\u7406\u89e3\u6210\u4ee3\u7801\u7684\u6587\u4ef6\u6839\u76ee\u5f55\uff09 \u521b\u5efa\u4ed3\u5e93 \u521b\u5efa\u4e00\u4e2a\u65b0\u6587\u4ef6\u5939\u4f5c\u4e3a\u4f60\u7684\u7b2c\u4e00\u4e2a Repo\uff0c\u5728\u547d\u4ee4\u884c\u4e2d\u8fdb\u5165\u8be5\u6587\u4ef6\u5939\uff0c\u8f93\u5165 git init \uff0c\u4ee5\u4f7f\u7528 Git \u6765\u7ba1\u7406\u8fd9\u4e2a\u6587\u4ef6\u5939\u3002\uff08\u521d\u59cb\u5316 Repo \u4ed3\u5e93\uff09 \u6dfb\u52a0\u6587\u4ef6 \u5728\u8fd9\u4e2a\u6587\u4ef6\u5939\u4e2d\u6dfb\u52a0\u6587\u4ef6\uff08\u4f8b\u5982\u6211\u4eec\u5199\u4e86\u4e00\u4e2a test.py \uff09\uff0c\u4f7f\u7528 git add test.py \u5c06\u6587\u4ef6\u5230\u76ee\u524d\u4e3a\u6b62\u7684\u4fee\u6539\u653e\u5165 Git \u7684\u6682\u5b58\u533a\u3002 \u4e00\u6b21\u6027\u6dfb\u52a0\u5de5\u4f5c\u73af\u5883\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\uff0c\u4f7f\u7528 git add . \u3002 \u8bb0\u5f55\u4fee\u6539 \u5f53\u6240\u6709\u7684\u4fee\u6539\u90fd\u7528 git add \u52a0\u5165\u5230\u6682\u5b58\u533a\u540e\uff0c\u5c31\u4f7f\u7528 git commit \u2013m \"...\" \u5c06\u6240\u6709\u7684\u6682\u5b58\u533a\u91cc\u7684\u4fee\u6539\u63d0\u4ea4\u81f3\u672c\u5730\u4ed3\u5e93\uff0c\u7701\u7565\u53f7\u5904\u586b\u5199\u8fd9\u6b21\u7248\u672c\u8fed\u4ee3\u90fd\u5e72\u4e86\u4ec0\u4e48\u3002 \u7248\u672c\u8fed\u4ee3 \u4e3a\u4e86\u5c55\u793a Git \u7684\u4f5c\u7528\uff0c\u6211\u4eec\u5728 test.py \u4e2d\u968f\u4fbf\u8f93\u5165\u4e86\u4e00\u4e9b\u5185\u5bb9\u3002 \u7136\u540e\u518d\u6b21\u6267\u884c git add test.py \u3001 git commit \u2013m \"...\" \u63d0\u4ea4\u66f4\u6539\u3002 \u67e5\u770b\u5386\u53f2 \u901a\u8fc7 git log \uff0c\u6211\u4eec\u53ef\u4ee5\u67e5\u770b\u4e4b\u524d\u7684 Commit \u8bb0\u5f55\uff0c\u4ee5\u53ca\u5bf9\u5e94\u7684 SHA \u7f16\u7801\u3002 \u7248\u672c\u56de\u9000 \u9996\u5148\uff0c\u6211\u4eec\u5fc5\u987b\u6307\u5b9a\u8981\u56de\u9000\u5230\u7684\u7248\u672c\u3002\u800c\u6307\u5b9a\u7248\u672c\u6709\u4e24\u79cd\u65b9\u5f0f\u3002 \u76f8\u5bf9\u5bfb\u5740\u3002\u5728 Git \u4e2d\uff0c\u7528 HEAD \u8868\u793a\u5f53\u524d\u7248\u672c\uff0c\u4e5f\u5c31\u662f\u6700\u65b0\u7684\u63d0\u4ea4 1aada331... \uff08\u6ce8\u610f\u4e0d\u540c\u5de5\u7a0b\uff0c\u4e0d\u540c\u6b21 Commit \u7684\u7248\u672c ID \u80af\u5b9a\u4e0d\u540c\uff09\uff0c\u4e0a\u4e00\u4e2a\u7248\u672c\u5c31\u662f HEAD^ \uff0c\u4e0a\u4e0a\u4e00\u4e2a\u7248\u672c\u5c31\u662f HEAD^^ \uff0c\u5f53\u7136\u5f80\u4e0a 100 \u4e2a\u7248\u672c\u5199 100 \u4e2a ^ \u6bd4\u8f83\u5bb9\u6613\u6570\u4e0d\u8fc7\u6765\uff0c\u6240\u4ee5\u5199\u6210 HEAD~100 \u3002 ID \u5bfb\u5740\u3002\u5982\u4e0a\u8ff0 \"modify test.py\" \u8fd9\u4e2a\u7248\u672c\uff0c\u53ef\u4ee5\u7528\u7248\u672c SHA ID \u7684\u524d\u51e0\u4e2a\u5b57\u7b26\u6765\u8868\u793a\uff08\u53ea\u8981\u6ca1\u6709\u6b67\u4e49\u5373\u53ef\uff09\uff0c\u6bd4\u5982 c9df5e \u3002 \u800c\u4e86\u89e3\u4e86\u600e\u6837\u6307\u5b9a\u7248\u672c\u540e\uff0c\u6211\u4eec\u4fbf\u53ef\u4ee5\u4f7f\u7528 git reset --hard <Version> \u6765\u6062\u590d\u5230\u4e4b\u524d\u7684\u7248\u672c\u4e86\u3002 \u5de5\u4f5c\u533a\uff0c\u6682\u5b58\u533a\u4e0e\u5206\u652f\u7684\u6982\u5ff5 \u5de5\u4f5c\u533a\uff08\u82f1\u6587\uff1aWorking Directory\uff09\u6307\u4f60\u7535\u8111\u4e0a\u5b58\u50a8\u7684\u5f53\u524d\u9879\u76ee\u6587\u4ef6\uff08\u6700\u65b0\uff09\uff0c\u7248\u672c\u5e93\uff08\u82f1\u6587\uff1aRepository\uff09\u4e2d\u5b58\u4e86\u5f88\u591a\u4e1c\u897f\uff0c\u5176\u4e2d\u6700\u91cd\u8981\u7684\u5c31\u662f\u6682\u5b58\u533a\uff0c\u8fd8\u6709 Git \u4e3a\u6211\u4eec\u81ea\u52a8\u521b\u5efa\u7684\u7b2c\u4e00\u4e2a\u5206\u652f\uff08\u82f1\u6587\uff1aBranch\uff09 master \uff0c\u4ee5\u53ca\u6307\u5411 master \u7684\u4e00\u4e2a\u6307\u9488\u53eb HEAD \u3002 git add \u547d\u4ee4\u5b9e\u9645\u4e0a\u5c31\u662f\u628a\u8981\u63d0\u4ea4\u7684\u6240\u6709\u4fee\u6539\u653e\u5230\u6682\u5b58\u533a\uff08\u82f1\u6587\uff1aStage\uff09\uff0c\u7136\u540e\uff0c\u6267\u884c git commit \u5c31\u53ef\u4ee5\u4e00\u6b21\u6027\u628a\u6682\u5b58\u533a\u7684\u6240\u6709\u4fee\u6539\u63d0\u4ea4\u5230\u5206\u652f\u3002","title":"\u57fa\u7840\u64cd\u4f5c"},{"location":"basic/git/#_4","text":"","title":"\u540c\u6b65\u5f00\u53d1"},{"location":"basic/git/#_5","text":"\u5206\u652f\uff08\u82f1\u6587\uff1aBranching\uff09\u5c31\u662f\u79d1\u5e7b\u7535\u5f71\u91cc\u9762\u7684\u5e73\u884c\u5b87\u5b99\uff0c\u5f53\u4f60\u6b63\u5728\u7535\u8111\u524d\u52aa\u529b\u5b66\u4e60 Git \u7684\u65f6\u5019\uff0c\u53e6\u4e00\u4e2a\u4f60\u6b63\u5728\u53e6\u4e00\u4e2a\u5e73\u884c\u5b87\u5b99\u91cc\u52aa\u529b\u5b66\u4e60 SVN\u3002\u5982\u679c\u4e24\u4e2a\u5e73\u884c\u5b87\u5b99\u4e92\u4e0d\u5e72\u6270\uff0c\u90a3\u5bf9\u73b0\u5728\u7684\u4f60\u4e5f\u6ca1\u5565\u5f71\u54cd\u3002\u4e0d\u8fc7\uff0c\u5728\u67d0\u4e2a\u65f6\u95f4\u70b9\uff0c\u4e24\u4e2a\u5e73\u884c\u5b87\u5b99\u5408\u5e76\u4e86\uff0c\u7ed3\u679c\uff0c\u4f60\u65e2\u5b66\u4f1a\u4e86 Git \u53c8\u5b66\u4f1a\u4e86 SVN\uff01 \u5206\u652f\u5728\u5b9e\u9645\u4e2d\u6709\u4ec0\u4e48\u7528\u5462\uff1f\u5047\u8bbe\u4f60\u51c6\u5907\u5f00\u53d1\u4e00\u4e2a\u65b0\u529f\u80fd\uff0c\u4f46\u662f\u9700\u8981\u4e24\u5468\u624d\u80fd\u5b8c\u6210\uff0c\u7b2c\u4e00\u5468\u4f60\u5199\u4e86 50% \u7684\u4ee3\u7801\uff0c\u5982\u679c\u7acb\u523b\u63d0\u4ea4\uff0c\u7531\u4e8e\u4ee3\u7801\u8fd8\u6ca1\u5199\u5b8c\uff0c\u4e0d\u5b8c\u6574\u7684\u4ee3\u7801\u5e93\u4f1a\u5bfc\u81f4\u522b\u4eba\u4e0d\u80fd\u5e72\u6d3b\u4e86\u3002\u5982\u679c\u7b49\u4ee3\u7801\u5168\u90e8\u5199\u5b8c\u518d\u4e00\u6b21\u63d0\u4ea4\uff0c\u53c8\u5b58\u5728\u4e22\u5931\u6bcf\u5929\u8fdb\u5ea6\u7684\u5de8\u5927\u98ce\u9669\u3002 \u73b0\u5728\u6709\u4e86\u5206\u652f\uff0c\u5c31\u4e0d\u7528\u6015\u4e86\u3002\u4f60\u521b\u5efa\u4e86\u4e00\u4e2a\u5c5e\u4e8e\u4f60\u81ea\u5df1\u7684\u5206\u652f\uff0c\u522b\u4eba\u770b\u4e0d\u5230\uff0c\u8fd8\u7ee7\u7eed\u5728\u539f\u6765\u7684\u5206\u652f\u4e0a\u6b63\u5e38\u5de5\u4f5c\uff0c\u800c\u4f60\u5728\u81ea\u5df1\u7684\u5206\u652f\u4e0a\u5e72\u6d3b\uff0c\u60f3\u63d0\u4ea4\u5c31\u63d0\u4ea4\uff0c\u76f4\u5230\u5f00\u53d1\u5b8c\u6bd5\u540e\uff0c\u518d\u4e00\u6b21\u6027\u5408\u5e76\u5230\u539f\u6765\u7684\u5206\u652f\u4e0a\uff0c\u8fd9\u6837\uff0c\u65e2\u5b89\u5168\uff0c\u53c8\u4e0d\u5f71\u54cd\u522b\u4eba\u5de5\u4f5c\u3002 \u5f15\u7528\u81ea \u5ed6\u96ea\u5cf0\u300a\u5206\u652f\u7684\u4ecb\u7ecd\u300b \u3002","title":"\u5206\u652f\u7684\u7b80\u4ecb"},{"location":"basic/git/#_6","text":"\u6211\u4eec\u53ef\u4ee5\u5c06\u9879\u76ee\u7684\u8fdb\u5c55\u7406\u89e3\u6210\u4e00\u6761\u65f6\u95f4\u7ebf\uff0c\u8fd9\u6761\u65f6\u95f4\u7ebf\u5c31\u662f\u4e00\u4e2a\u5206\u652f\uff0c\u800c\u9879\u76ee\u7684\u4e3b\u8fdb\u7a0b\u7ebf\uff0c\u5219\u662f master \u5206\u652f\u3002\u6211\u4eec\u4e4b\u524d\u63d0\u5230\u7684\u6307\u9488 HEAD \uff0c\u4e8b\u5b9e\u4e0a\u662f\u6307\u5411\u5f53\u524d\u5206\u652f\u5934\u90e8\u7684\u6307\u9488\u3002 \u6b63\u5982\u8fd9\u4e00\u5c0f\u8282\u7684\u6807\u9898\u6240\u8bf4\uff0c\u6211\u4eec\u60f3\u8981\u521b\u5efa\u65b0\u5206\u652f\u4e0e\u5408\u5e76\u5206\u652f\u3002 \u6bd4\u5982\u6211\u4eec\u53ef\u4ee5\u4e3e\u4e2a\u4f8b\u5b50\u3002\uff08\u5f15\u81ea \u5ed6\u96ea\u5cf0\u300a\u521b\u5efa\u4e0e\u5408\u5e76\u5206\u652f\u300b \uff09 \u4e00\u5f00\u59cb\u7684\u65f6\u5019\uff0c master \u5206\u652f\u662f\u4e00\u6761\u7ebf\uff0cGit \u7528 master \u6307\u5411\u6700\u65b0\u7684\u63d0\u4ea4\uff0c\u518d\u7528 HEAD \u6307\u5411 master \uff0c\u5c31\u80fd\u786e\u5b9a\u5f53\u524d\u5206\u652f\uff0c\u4ee5\u53ca\u5f53\u524d\u5206\u652f\u7684\u63d0\u4ea4\u70b9\uff1a \u6bcf\u6b21\u63d0\u4ea4\uff0c master \u5206\u652f\u90fd\u4f1a\u5411\u524d\u79fb\u52a8\u4e00\u6b65\uff0c\u8fd9\u6837\uff0c\u968f\u7740\u4f60\u4e0d\u65ad\u63d0\u4ea4\uff0c master \u5206\u652f\u7684\u7ebf\u4e5f\u8d8a\u6765\u8d8a\u957f\u3002 \u73b0\u5728\u6211\u4eec\u4f7f\u7528\u547d\u4ee4\u521b\u5efa\u65b0\u7684\u5206\u652f dev \u5e76\u5207\u6362\u8fc7\u53bb\uff0c\u4f7f\u7528 git checkout -b dev \u3002Git \u65b0\u5efa\u4e86\u4e00\u4e2a\u6307\u9488\u53eb dev \uff0c\u6307\u5411 master \u76f8\u540c\u7684\u63d0\u4ea4\uff0c\u518d\u628a HEAD \u6307\u5411 dev \uff0c\u5c31\u8868\u793a\u5f53\u524d\u5206\u652f\u5728 dev \u4e0a\uff1a \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 git branch \u547d\u4ee4\u6765\u67e5\u770b\u6240\u6709\u5206\u652f\uff0c\u5728\u7ed3\u679c\u4e2d\uff0c\u5f53\u524d\u5206\u652f\u524d\u9762\u4f1a\u591a\u51fa\u4e00\u4e2a * \u53f7\u3002 \u4ece\u73b0\u5728\u5f00\u59cb\uff0c\u5bf9\u5de5\u4f5c\u533a\u7684\u4fee\u6539\u548c\u63d0\u4ea4\u5c31\u662f\u9488\u5bf9 dev \u5206\u652f\u4e86\uff0c\u6bd4\u5982\u65b0\u63d0\u4ea4\u4e00\u6b21\u540e\uff0c dev \u6307\u9488\u5f80\u524d\u79fb\u52a8\u4e00\u6b65\uff0c\u800c master \u6307\u9488\u4e0d\u53d8\uff1a \u5047\u5982\u6211\u4eec\u5728 dev \u4e0a\u7684\u5de5\u4f5c\u5b8c\u6210\u4e86\uff0c\u5c31\u53ef\u4ee5\u628a dev \u5408\u5e76\u5230 master \u4e0a\u3002\u600e\u4e48\u5408\u5e76\u5462\uff1f\u9996\u5148\u6211\u4eec\u8981\u641e\u6e05\u695a\uff0c\u662f\u8c01\u8981\u5408\u5e76\u8c01\u3002\u8fd9\u91cc\u6211\u4eec\u5e94\u8be5\u7406\u89e3\u6210\uff0c master \u8981\u5403\u6389\u65b0\u5efa\u7684 dev \u5206\u652f\uff0c\u6210\u4e3a\u65b0\u7684 master \u3002\u4e8e\u662f\uff0c\u9996\u5148\u6211\u4eec\u5e94\u8be5\u5207\u6362\u56de master \u5206\u652f\uff0c\u4f7f\u7528\u547d\u4ee4 git checkout master \uff0c\u4ee5\u8868\u660e\u8fd9\u662f master \u5206\u652f\u7684\u64cd\u4f5c\u3002\u7136\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 git merge dev \uff0c\u8fdb\u884c\u5206\u652f\u5408\u5e76\u3002\u6700\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 git branch -d dev \uff0c\u5c06 dev \u5206\u652f\u5220\u9664\u3002","title":"\u521b\u5efa\u4e0e\u5408\u5e76\u5206\u652f"},{"location":"basic/git/#_7","text":"\u5047\u8bbe\u6211\u4eec\u8bbe\u60f3\u51fa\u73b0\u8fd9\u4e48\u4e00\u79cd\u60c5\u51b5\uff0c master \u5206\u652f\u548c\u65b0\u5efa\u7684 feature1 \u5206\u652f\u5747\u63d0\u4ea4\u4e86\u65b0\u7684\u66f4\u6539\uff0c\u90a3\u4e48\u6211\u4eec\u8be5\u600e\u4e48\u5c06\u5176 Merge \u5462\uff1f \u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5c1d\u8bd5\u7528 master \u53bb Merge feature1 \u7684\u65f6\u5019\uff0c\u63a7\u5236\u53f0\u4fbf\u4f1a\u63d0\u9192\u6211\u4eec\u4ea7\u751f\u5408\u5e76\u51b2\u7a81\u3002\u5fc5\u987b\u624b\u52a8\u89e3\u51b3\u51b2\u7a81\u540e\u518d\u63d0\u4ea4\u3002\u800c\u6211\u4eec\u6839\u636e\u63d0\u793a\u4fe1\u606f\u53bb\u5bfb\u627e\u5bf9\u5e94\u7684\u51b2\u7a81\u6587\u4ef6\uff0c\u5728\u51b2\u7a81\u5904 Git \u4e5f\u4f1a\u5c06\u5176\u663e\u8457\u7684\u6807\u51fa\uff0c\u4f8b\u5982\uff1a 1 2 3 4 5 6 7 8 9 Git is a distributed version control system. Git is free software distributed under the GPL. Git has a mutable index called stage. Git tracks changes of files. <<<<<<< HEAD Creating a new branch is quick & simple. ======= Creating a new branch is quick AND simple. >>>>>>> feature1 \u5728\u8fd9\u91cc\u6211\u4eec\u624b\u52a8\u4fee\u6539\u540e\uff0c\u518d\u91cd\u65b0\u4f7f\u7528 git add \u548c git commit \u5c31\u53ef\u4ee5\u6210\u529f\u5c06\u4e24\u4e2a\u5206\u652f\u5408\u5e76\u4e86\u3002 \u7279\u522b\u7684\uff0c\u5728\u5206\u652f\u5408\u5e76\u4e4b\u540e\uff0c\u4f7f\u7528 git log --graph \u53ef\u4ee5\u770b\u5230\u5206\u652f\u5408\u5e76\u56fe\u3002","title":"\u89e3\u51b3\u51b2\u7a81"},{"location":"basic/git/#rebase","text":"\u611f\u89c9\u7248\u672c\u6811\u56e0\u4e3a\u5408\u5e76\u51b2\u7a81\uff0c\u4ea7\u751f\u4e86\u73af\u5f62\u7ed3\u6784\uff0c\u4e8e\u662f\u5f88\u4e0d\u723d\uff1f git rebase \u53ef\u4ee5\u5e2e\u52a9\u4f60\u5c06\u7248\u672c\u6811\u6062\u590d\u7ebf\u6027\u3002 \u5728\u8fd9\u91cc\u6211\u4eec\u7ed9\u51fa\u6559\u7a0b\u94fe\u63a5\uff0c\u63a8\u8350\u5927\u5bb6\u81ea\u884c\u9605\u8bfb\u3002 \u9644\uff1a https://www.liaoxuefeng.com/wiki/896043488029600/1216289527823648 \u3002","title":"Rebase"},{"location":"basic/git/#git_2","text":"\u663e\u7136\uff0c\u5927\u5bb6\u4e0d\u4f1a\u90fd\u6324\u5728\u4f60\u7684\u7535\u8111\u4e0a\u5f00\u53d1\u3002\u6211\u4eec\u8bb0\u5f97\uff0cGit \u662f\u5206\u5e03\u5f0f\u7684\u7248\u672c\u63a7\u5236\u8f6f\u4ef6\u3002\u4e8e\u662f\uff0c\u6211\u4eec\u9700\u8981\u4e00\u79cd\u65b9\u5f0f\u8fdb\u884c\u540c\u6b65\u3002\u4f8b\u5982\uff0c\u628a Git \u4ed3\u5e93\u653e\u5728\u7f51\u4e0a\u3002 \u5728\u8fd9\u91cc\u6211\u4eec\u4ecb\u7ecd\u51e0\u79cd\u8fdc\u7a0b\u7684 Git \u4ed3\u5e93\uff1a GitHub\uff1a \u5168\u7403\u6700\u5927\u540c\u6027\u4ea4\u6d41\u7f51\u7ad9 \u3002\u4e00\u4e2a\u57fa\u4e8eGit\u7684\u4ee3\u7801\u6258\u7ba1\u670d\u52a1\u5e73\u53f0\uff0c\u5f00\u6e90\u793e\u533a\u4ea4\u6d41\u4ee3\u7801\u7684\u91cd\u8981\u7f51\u7ad9\u3002\u7f51\u5740 https://www.github.com/ GitLab\uff1a\u7c7b\u4f3cGithub\uff0c\u4f46\u4e3b\u8981\u9762\u5411\u4f01\u4e1a\u3001\u7ec4\u7ec7\u7b49\u5185\u90e8\u5408\u4f5c\u3002\u7f51\u5740 https://www.gitlab.com/ Tsinghua Git\uff1a\u6e05\u534e\u5927\u5b66\u57fa\u4e8e GitLab \u642d\u5efa\u7684\u5927\u5b66\u5185\u90e8\u7684 Git\uff0c\u9002\u7528\u4e8e\u8bfe\u7a0b\u5c0f\u7ec4\u5185\u90e8\u6216\u8005\u5b66\u751f\u7ec4\u7ec7\u5185\u90e8\u7684\u5408\u4f5c\u3002\u7f51\u5740 https://git.tsinghua.edu.cn/ \u4e0b\u9762\u6211\u4eec\u4ecb\u7ecd\u4e00\u4e9b\u5728\u8fdc\u7a0b\u4ed3\u5e93\u63a7\u5236\u65f6\u7684\u57fa\u672c\u64cd\u4f5c\uff1a \u514b\u9686\u4ed3\u5e93\u5230\u672c\u5730 \u6bd4\u5982\uff0c\u4ee5 \u672c\u6280\u80fd\u5f15\u5bfc\u6587\u6863 \u6240\u5728\u7684 Git \u4ed3\u5e93\u4e3a\u4f8b\u3002\u6211\u4eec\u4f7f\u7528 git clone git@github.com:SAST-skill-docers/sast-skill-docs.git \uff0c\u8fd9\u6837\u4fbf\u628a\u8fdc\u7a0b\u4ed3\u5e93\u4e2d\u7684\u5185\u5bb9\u53d6\u5230\u4e86\u672c\u5730\uff0c\u5e76\u521b\u5efa\u4e86\u5de5\u4f5c\u533a\u3002 \u6dfb\u52a0\u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740 \u6709\u65f6\uff0c\u6211\u4eec\u7684\u9879\u76ee\u662f\u4f7f\u7528 git init \u6765\u521b\u5efa\u7684\uff0c\u5e76\u4e0d\u662f\u4ece GitHub \u4e0a\u76f4\u63a5 Clone \u7684\u522b\u4eba\u7684\u4ee3\u7801\u3002\u8fd9\u65f6\u6211\u4eec\u8981\u9996\u5148\u5728 GitHub/GitLab/Tsinghua Git \u4e0a\u65b0\u5efa\u4e00\u4e2a Repo\uff0c\u7136\u540e\u6309\u7167\u63d0\u793a\uff0c\u4f7f\u7528 git remote add origin <\u4f60\u7684 Repo \u7684 HTTP/SSH \u5730\u5740> \u3002\u8fd9\u6837\u4fbf\u662f\u544a\u8bc9\u672c\u5730\u7684 Git \u7ba1\u7406\u5668\uff0c\u8fd9\u4e2a\u5730\u5740\u8d77\u4e00\u4e2a\u7b80\u4fbf\u7684\u540d\u5b57\u53eb\u505a origin \uff0c\u65b9\u4fbf\u4eca\u540e\u4f7f\u7528\u3002 \u63a8\u9001\u66f4\u6539 \u6211\u4eec\u5c06\u6240\u6709\u7684\u66f4\u6539\u6682\u5b58\uff08\u82f1\u6587\uff1aAdd\uff09\u548c\u63d0\u4ea4\uff08\u82f1\u6587\uff1aCommit\uff09\u540e\uff0c\u4fbf\u53ef\u4ee5\u4f7f\u7528 git push origin master \u7533\u8bf7\u5411\u8fdc\u7aef origin \u7684 master \u5206\u652f\u540c\u6b65\u63d0\u4ea4\u8bb0\u5f55\u3002 \u62c9\u53d6\u66f4\u6539 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4 git pull origin master \u6765\u4ece\u8fdc\u7aef origin \u7684 master \u83b7\u53d6\u5176\u6700\u65b0\u7684\u6570\u636e\uff08\u53ef\u80fd\u662f\u522b\u4eba\u66f4\u65b0\u4e0a\u53bb\u7684\uff09\u3002\u6b63\u5e38\u7684\u63a8\u9001\u66f4\u6539\u6d41\u7a0b\u4e3a\uff1a\u5148 Add \u548c Commit \u672c\u5730\u4fee\u6539\uff0c\u7136\u540e\u62c9\u53d6\u8fdc\u7aef\u66f4\u6539\uff0c\u5982\u679c\u6b64\u65f6\u51fa\u73b0\u4e86\u5408\u5e76\u51b2\u7a81\uff08\u82f1\u6587\uff1aMerge Conflict\uff09\uff0c\u89e3\u51b3\u5408\u5e76\u51b2\u7a81\u3002\u7136\u540e\uff0c\u5728\u5408\u5e76\u51b2\u7a81\u89e3\u51b3\u540e\u63a8\u9001\u66f4\u6539\u3002","title":"\u8fdc\u7a0b Git \u4ed3\u5e93"},{"location":"basic/git/#_8","text":"\u60f3\u8981\u5b66\u4e60\u66f4\u591a Git \u5185\u5bb9\uff1f \u4f7f\u7528\u547d\u4ee4 git help Pro Git Book https://git-scm.com/book/zh/v2 \u5b66\u4e60 Git \u5206\u652f https://learngitbranching.js.org/?locale=zh_CN \u5b66\u4e86 Git \u4e0d\u77e5\u8be5\u5982\u4f55\u5e94\u7528\uff1f \u7a0b\u8bbe\u5927\u4f5c\u4e1a \u8bd5\u7740\u53bb\u5165\u624b\u4e00\u4e9b\u8f6f\u4ef6\u5de5\u7a0b\u9879\u76ee","title":"\u540e\u7eed\u62d3\u5c55"},{"location":"basic/git/#_9","text":"2021 \u6691\u57f9\u8bb2\u4e49 by tshoigyr 2020 \u6691\u57f9\u8bb2\u4e49 by rls 2021 \u6625\u5b63\u5b66\u671f\u300a\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u300b\u8bfe\u7a0b\u8bb2\u4e49 \u5ed6\u96ea\u5cf0\u7684 Git \u6559\u7a0b https://www.liaoxuefeng.com/wiki/896043488029600","title":"\u53c2\u8003\u8d44\u6599"},{"location":"basic/latex/","text":"LaTeX \u00b6 \u867d\u7136 Markdown \u5f88\u597d\u7528\uff0c\u4f46\u662f\u751f\u6210\u7684 pdf \u6587\u6863\u770b\u8d77\u6765\u5c31\u662f \u6ca1\u6709\u8303 \u4e0d\u591f\u6b63\u5f0f\u3002\u6b64\u5916\uff0c\u4f7f\u7528 LaTeX \u4e5f\u662f\u6211\u4eec\u4e4b\u540e\u5199\u8bba\u6587\u7684\u5fc5\u5907\u6280\u80fd\u3002 \u672c\u6559\u7a0b\u4e3b\u8981\u6d89\u53ca\u5df2\u5bf9 Markdown \u8f83\u4e3a\u719f\u8bc6\u4e4b\u540e\u7684\u8fc1\u79fb\u5b66\u4e60\u3002 \u524d\u7f6e\u77e5\u8bc6 \u00b6 Markdown \u5165\u95e8 Markdown \u7f16\u5199\u6570\u5b66\u516c\u5f0f\u7684\u65b9\u6cd5 LaTeX \u7b80\u4ecb \u00b6 \u6211\u4eec\u9996\u5148\u89e3\u51b3\u4ee5\u4e0b\u51e0\u4e2a\u95ee\u9898\uff1a LaTeX \u662f\u4ec0\u4e48\uff1f LaTeX \u600e\u6837\u8fd0\u4f5c\uff1f \u6211\u8be5\u5728\u54ea\u91cc\u5199 LaTex\uff1f \u5728\u89e3\u51b3\u4e0a\u8ff0\u51e0\u4e2a\u95ee\u9898\u4e4b\u540e\uff0c\u6211\u4eec\u518d\u8be6\u7ec6\u4ecb\u7ecd\u8be5\u600e\u4e48\u5199 LaTeX \u7684\u95ee\u9898\u3002 LaTeX \u662f\u4ec0\u4e48\uff1f \u00b6 \u76f8\u4fe1\u4f60\u8bfb\u5230\u8fd9\u91cc\u5df2\u7ecf\u505a\u597d\u89c9\u609f\u8981\u88ab\u704c\u8f93\u4e00\u7cfb\u5217\u5173\u952e\u8bcd\u548c\u5176\u5bf9\u5e94\u6982\u5ff5\u4e86\u3002\u8ba9\u6211\u4eec\u5f00\u59cb\uff1a \u5386\u53f2\u56de\u6eaf\u5230 Knuth \u6559\u6388\u7684\u5de8\u8457 The Art of Computer Programming \u5c06\u8981\u51fa\u7248\u4e4b\u9645\uff0c\u5f53\u51fa\u7248\u5546\u5c06\u4ed6\u4eec\u6392\u7248\u7684\u4e66\u7a3f\u8349\u6837\u4ea4\u7ed9 Knuth \u6559\u6388\u7684\u65f6\u5019\uff0c\u4ed6\u5bf9\u4e8e\u5176\u4e2d\u590d\u6742\u6570\u5b66\u516c\u5f0f\u7684\u6392\u7248\u5904\u7406\u5341\u5206\u4e0d\u6ee1\u3002\u5176\u6392\u7248\u4e4b\u7c97\u7cd9\uff0c\u5df2\u8fbe\u5230\u4e86\u4f1a\u5f71\u54cd\u4eba\u4eec\u7406\u89e3\u539f\u4e66\u5185\u5bb9\u7684\u7a0b\u5ea6\u3002\u56e0\u6b64\uff0c\u5bf9\u4e8e\u590d\u6742\u7684\u6570\u5b66\u548c\u7269\u7406\u516c\u5f0f\uff0c\u6211\u4eec\u6025\u9700\u4e00\u79cd\u80fd\u591f\u5c06\u5176\u5728\u4e92\u8054\u7f51\u4e0a\u4f20\u8f93\u7684\u7f16\u7801\u683c\u5f0f\uff0c\u4f7f\u5f97\u4eba\u80fd\u9605\u8bfb\u7684\u516c\u5f0f\u548c\u673a\u5668\u80fd\u5b58\u50a8\u7684\u516c\u5f0f\u4e4b\u95f4\u8fbe\u5230\u4e00\u79cd\u4e92\u76f8\u8f6c\u5316\u3002 TeX \uff1a\u4e00\u79cd\u6392\u7248\u5f15\u64ce\uff0c\u4e5f\u662f\u8be5\u5f15\u64ce\u4f7f\u7528\u7684\u6807\u8bb0\u8bed\u8a00\u7684\u540d\u79f0\u3002\u5f15\u64ce\u662f\u6307\u80fd\u591f\u65ad\u884c\u3001\u5206\u9875\u7684\u7a0b\u5e8f\uff0c\u6807\u8bb0\u8bed\u8a00\u662f\u63a7\u5236\u547d\u4ee4\u548c\u6587\u672c\u7ed3\u5408\u7684\u683c\u5f0f\u3002\u53ef\u4ee5\u7c7b\u6bd4\u7406\u89e3\u6210\u4f60\u5199\u7684 C++ \u6e90\u4ee3\u7801\u6216\u8005\u66f4\u5e95\u5c42\u7684\u673a\u5668\u6307\u4ee4\u7801\uff0c\u5982\u8f93\u5165 $2^6$ \u3002 LaTeX \uff1a\u662f\u4e00\u4e2a\u57fa\u4e8e TeX \u7684\u6392\u7248\u7cfb\u7edf\uff0c\u5c06\u7528\u6237\u6309\u7167\u5b83\u7684\u683c\u5f0f\u7f16\u5199\u7684\u6587\u6863\u89e3\u91ca\u6210 TeX \u5f15\u64ce\u80fd\u7406\u89e3\u7684\u5f62\u5f0f\u5e76\u4ea4\u4ed8\u7ed9 TeX \u5f15\u64ce\u5904\u7406\uff0c\u518d\u5c06\u6700\u7ec8\u7ed3\u679c\u8fd4\u56de\u7ed9\u7528\u6237\u3002\u53ef\u4ee5\u7c7b\u6bd4\u7406\u89e3\u6210 g++ \u7f16\u8bd1\u5668\uff0c\u5c06\u4e0a\u8ff0\u4ee3\u7801\u6e32\u67d3\u4e3a 2^6 2^6 \u3002 pdfTeX \u4e0e pdfLaTeX \uff1a\u539f\u7248 TeX \u7cfb\u7edf\u751f\u6210\u7684\u6587\u4ef6\u662f dvi \u683c\u5f0f\uff0c\u800c pdfTeX \u7cfb\u7edf\u4e0b\u751f\u6210\u7684\u6587\u4ef6\u662f pdf \u683c\u5f0f\u3002 XeTeX \u4e0e XeLaTeX \uff1a\u4e0a\u8ff0 TeX \u7cfb\u7edf\u751f\u6210\u7684\u5b57\u7b26\u96c6\u53ea\u652f\u6301 ASCII \u5b57\u7b26\u3002\u5728 XeTeX \u51fa\u73b0\u4e4b\u524d\uff0c\u6211\u4eec\u66fe\u4f7f\u7528\u8fc7\u5f15\u7528\u5f15\u5165 CJK \u5b8f\u5e93\uff08\u89e3\u51b3\u4e0d\u652f\u6301\u4e2d\u65e5\u97e9\u5b57\u7b26\u95ee\u9898\u7684\u4e00\u4e2a\u5e93\uff09\u624b\u6bb5\u6765\u5904\u7406\u4e2d\u6587\u5b57\u7b26\u7684\u95ee\u9898\u3002\u4f46\u662f\u8fd9\u4e2a\u6392\u7248\u7cfb\u7edf\u5bf9\u6240\u6709 Unicode \u5b57\u7b26\u90fd\u5b9e\u73b0\u4e86\u652f\u6301\u3002 LuaTeX \u4e0e LuaLaTeX \uff1a pdfTeX \u7cfb\u7edf\u7684\u7ee7\u627f\u8005\uff0c\u652f\u6301\u4f7f\u7528\u4e00\u4e9b\u7528\u6237\u81ea\u5b9a\u4e49\u811a\u672c\u6765\u5b9e\u73b0\u4e4b\u524d\u9700\u8981\u5199\u6210 TeX \u7684\u529f\u80fd\u3002\u652f\u6301 Unicode\uff0c\u5185\u8054 lua\uff0c\u652f\u6301 OpenType\u3002 \u8fd9\u91cc\u6211\u4eec\u63a8\u8350\u4f7f\u7528 XeTeX \u7cfb\u7edf\u6765\u8fdb\u884c\u6211\u4eec\u65e5\u5e38\u7684\u5de5\u4f5c\uff0c\u6211\u4eec\u540e\u7eed\u7684\u6559\u7a0b\u4e5f\u56f4\u7ed5\u8fd9\u4e2a\u6392\u7248\u7cfb\u7edf\u5c55\u5f00\u3002\u4e3a\u4e86\u7b80\u6d01\u8d77\u89c1\uff0c\u6211\u4eec\u540e\u7eed\u4e0d\u518d\u533a\u5206\u4e0a\u8ff0\u6982\u5ff5\uff0c\u7edf\u4e00\u4f7f\u7528 TeX \uff0c LaTeX \u6765\u8868\u8ff0\u6211\u4eec\u5728\u8bf4\u7684\u8fd9\u4e2a\u8bdd\u9898\u3002 LaTeX \u600e\u6837\u8fd0\u4f5c\uff1f \u00b6 LaTeX \u6392\u7248\u7cfb\u7edf\u7684\u8f93\u5165\u662f\u542b\u6709\u6211\u4eec\u6572\u7684\u6587\u672c\u548c\u63a7\u5236\u547d\u4ee4\u7684 tex \u6587\u4ef6\uff0c\u8f93\u51fa\u662f\u4e00\u4efd pdf \u6587\u4ef6\u3002\u6211\u4eec\u53ea\u9700\u8981\u8d1f\u8d23\u5728 tex \u6587\u4ef6\u4e2d\u5199\u4e0b\u6e90\u7801\uff0c\u7136\u540e\u5269\u4e0b\u7684\u7f16\u8bd1\u548c\u751f\u6210\u5de5\u4f5c\u5168\u90e8\u4ea4\u7ed9 LaTeX \u5373\u53ef\u3002 \u6709\u65f6\u6211\u4eec\u8fd8\u53ef\u4ee5\u628a\u4e00\u4e2a LaTeX \u9879\u76ee\u7ec4\u7ec7\u6210\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u6b64\u65f6\u8fd8\u662f\u4e00\u4efd tex \u6587\u4ef6\u51b3\u5b9a\u4e00\u4e2a pdf \u7684\u751f\u6210\uff0c\u4f46\u662f\u6211\u4eec\u8fd8\u53ef\u4ee5\u5728\u8fd9\u4e2a\u6587\u4ef6\u5939\u4e2d\u5f15\u5165\u5176\u4ed6\u4e00\u4e9b\u6587\u4ef6\uff0c\u5982\u5b57\u4f53\u6587\u4ef6\uff0c\u56fe\u7247\u6587\u4ef6\uff0c .cls \u6587\u4ef6\uff08\u6587\u6863\u6a21\u677f\u7c7b\u6587\u4ef6\uff09\u7b49\u7b49\u3002\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5728\u8fd9\u4e2a\u6587\u4ef6\u5939\u4e2d\u7f16\u5199\u591a\u4e2a tex \u6587\u4ef6\uff0c\u4ee5\u5171\u4eab\u6587\u4ef6\u5939\u4e2d\u7684\u5176\u4ed6\u8d44\u6e90\u3002\u6b64\u65f6\u4e0d\u540c\u7684 tex \u6587\u4ef6\u4e4b\u95f4\u751a\u81f3\u53ef\u4ee5\u9879\u76ee\u5305\u542b\uff08\u7c7b\u6bd4\u4e8e C++ \u7684 #include \u5305\u542b\uff09\u3002 \u5728\u54ea\u91cc\u7f16\u5199 LaTeX\uff1f \u00b6 \u6211\u4eec\u6709\u79bb\u7ebf\u548c\u5728\u7ebf\u4e24\u79cd\u6a21\u5f0f\u6765\u64b0\u5199 LaTeX\u3002 \u79bb\u7ebf\u6a21\u5f0f\u5c31\u662f\u5b89\u88c5\u4e00\u4e2a LaTeX \u6392\u7248\u7cfb\u7edf\uff0c\u7c7b\u6bd4\u6211\u4eec\u60f3\u5199 Markdown \u7684\u65f6\u5019\u88c5\u4e86\u4e00\u4e2a Typora \u8f6f\u4ef6\u4e00\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u5b89\u88c5\u76f8\u5e94\u7684\u8f6f\u4ef6\u6765\u8f85\u52a9\u6211\u4eec\u5de5\u4f5c\uff0c\u5982\uff1a TeXworks TeXstudio \u800c\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u5b89\u88c5\u5e26\u6765\u7684\u95ee\u9898\u662f\u53ef\u80fd\u5b89\u88c5\u5305\u8fc7\u4e8e\u81c3\u80bf\uff0c\u4f18\u70b9\u662f\u4e0d\u7528\u53d7\u5230\u7f51\u7edc\u73af\u5883\u7b49\u7b49\u56e0\u7d20\u7684\u5e72\u6270\uff0c\u4e5f\u4e0d\u7528\u53d7\u5230\u7f51\u7edc\u73af\u5883\u5b58\u50a8\u5bb9\u91cf\u6216\u8fd0\u884c\u65f6\u73af\u5883\u7684\u9650\u5236\u3002\u5176\u5b89\u88c5\u65b9\u5f0f\u5728\u7f51\u7edc\u4e0a\u641c\u7d22\u201cLaTeX \u5165\u95e8\u201d\u4fbf\u53ef\u627e\u5230\u5806\u79ef\u5982\u5c71\u7684 \u6559\u7a0b \u3002 \u800c\u6211\u4eec\u8fd9\u91cc\u63a8\u5d07\u7684\u65b9\u5f0f\u5c31\u662f\u4f7f\u7528\u5728\u7ebf\u65b9\u5f0f\u6765\u7f16\u5199\u3002\u5982 Overleaf \u5728\u5185\u7684\u6258\u7ba1\u7f51\u7ad9\u4f1a\u5c06\u4f60\u7684\u6bcf\u4e2a TeX \u9879\u76ee\u7ec4\u7ec7\u6210\u4e00\u4e2a\u4ed3\u5e93\u7684\u5f62\u5f0f\uff0c\u5e76\u5141\u8bb8\u4f60\u5728\u5176\u4e2d\u8fdb\u884c\u5728\u7ebf\u7f16\u8f91\uff1a \u5de6\u4e0a\u89d2\u662f\u6211\u4eec\u5f53\u524d\u4ed3\u5e93\u7684\u6587\u4ef6\u6e05\u5355\uff0c\u8f83\u5de6\u4fa7\u7a97\u53e3\u662f\u7f16\u8f91\u5668\uff0c\u53f3\u4fa7\u7a97\u53e3\u662f\u5373\u65f6\u9884\u89c8\u7a97\u53e3\u3002\u7c7b\u4f3c\u4e8e Overleaf \u7684\u7f51\u7ad9\u751a\u81f3\u8fd8\u63d0\u4f9b\u4e86\u4ed3\u5e93\u6743\u9650\u7ba1\u7406\u7cfb\u7edf\uff0c\u4f60\u53ef\u4ee5\u9080\u8bf7\u5176\u4ed6\u4eba\u4e00\u8d77\u7f16\u8f91\uff0c\u6216\u662f\u5bfc\u5165\u522b\u4eba\u7f16\u8f91\u597d\u7684\u6a21\u677f\u7ee7\u7eed\u4f60\u7684\u7f16\u8f91\u7b49\u7b49\u3002\u503c\u5f97\u4e00\u63d0\u7684\u662f\u8bb8\u591a\u5b66\u672f\u4f1a\u8bae\u90fd\u4f1a\u7ed9\u51fa\u4ed6\u4eec\u63a5\u53d7\u7684\u8bba\u6587\u7684\u6a21\u677f\u3002 \u9274\u4e8e Overleaf \u9700\u8981\u79d1\u5b66\u4e0a\u7f51\u624d\u80fd\u8bbf\u95ee\uff1a \u8d35\u6821 TUNA \u534f\u4f1a\u7ef4\u62a4\u4e86\u4e00\u4efd Tsinghua Overleaf \uff0c\u9700\u8981\u4f7f\u7528\u6e05\u534e\u7edf\u4e00\u8ba4\u8bc1\u767b\u5f55; \u8d35\u6821\u8d35\u7cfb\u8d35\u534f\u7f51\u7edc\u90e8\u7ef4\u62a4\u4e86\u4e00\u4efd\u81ea\u5df1\u7684\u57fa\u4e8e Overleaf \u7684 LaTeX \u5728\u7ebf\u7f16\u8f91\u7f51\u7ad9 TeX9 \uff0c \u9700\u8981\u4f7f\u7528\u9152\u4e95 ID \u624d\u80fd\u8fdb\u884c\u767b\u5f55 \u3002 \u6211\u4eec\u63a5\u4e0b\u6765\u7684\u6f14\u793a\u4fbf\u662f\u57fa\u4e8e TeX9\u3002 LaTeX \u7f16\u5199\u57fa\u7840 \u00b6 \u8bf4\u662f\u7f16\u5199\u57fa\u7840\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u8981\u50cf\u4ecb\u7ecd Markdown \u4e00\u6837\uff0c\u5148\u7b80\u5355\u7f57\u5217\u4e00\u4e9b\u7b80\u5355\u7684\u6587\u6863\u63a7\u5236\u547d\u4ee4\u3002\u5728\u57fa\u7840\u7bc7\u4e2d\u6211\u4eec\u5148\u4ec5\u4ec5\u4ecb\u7ecd\u600e\u6837\u5b9e\u73b0\u4ece Markdown \u5230 LaTeX \u7684\u8fc1\u79fb\u3002\u5bf9\u4e8e\u5176\u4e2d\u4e00\u4e9b\u6587\u6863\u63a7\u5236\u547d\u4ee4\uff0c\u6211\u4eec\u5c06\u4f1a\u5728\u540e\u7eed\u6559\u7a0b\u8be6\u7ec6\u8bf4\u660e\u3002 \u8fd9\u91cc\u63d0\u4f9b CheatSheet \u4f9b\u67e5\u9605\uff1a Hello, World! \u00b6 \u4e0a\u8ff0\u4fbf\u662f\u4e00\u4efd tex \u6587\u4ef6\u7684\u793a\u4f8b\uff0c\u6211\u4eec\u63a8\u8350\u4f60\u65b0\u5efa\u4e00\u4e2a\u9879\u76ee\uff0c\u7136\u540e\u5c06\u4e0b\u9762\u6211\u4eec\u8981\u4ecb\u7ecd\u7684\u5185\u5bb9\u4e00\u4e00\u5c1d\u8bd5\u3002 \u652f\u6301\u4e2d\u6587\u5b57\u7b26 \u00b6 \u9996\u5148\uff0c\u6211\u4eec\u4e0a\u8ff0\u5df2\u7ecf\u4ecb\u7ecd\u8fc7\uff0c\u652f\u6301\u4e2d\u6587\u5b57\u7b26\u7684\u65b9\u5f0f\u6709\u4e8c\uff0c\u4e00\u79cd\u662f\u5f15\u5165 CJK \u5b8f\u5305\uff0c\u53e6\u4e00\u79cd\u662f\u4f7f\u7528 XeLaTeX \u7f16\u8bd1\u5668\u5e76\u5bf9\u6e90\u7801\u505a\u9002\u5f53\u4fee\u6539\u3002\u8fd9\u91cc\u6211\u4eec\u91c7\u7528\u7b2c\u4e8c\u79cd\u65b9\u5f0f\u3002 \u9996\u5148\uff0c\u6309\u4e0b\u4f60\u9879\u76ee\u5de6\u4e0a\u89d2\u7684 Menu \u6309\u94ae\uff0c\u7136\u540e\u5728 Compiler \u9009\u9879\u4e2d\u9009\u62e9 XeLaTeX \u9009\u9879\u3002 \u7136\u540e\uff0c\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9\uff1a 1 2 3 4 \\documentclass [UTF8] { ctexart } \\begin { document } \u4f60\u597d\uff0cworld! \\end { document } \u8fd9\u6837\u6211\u4eec\u5c31\u5b8c\u6210\u4e86\u4e2d\u6587\u5b57\u7b26\u7684\u5f15\u5165\u3002\u81f3\u4e8e documentclass \u662f\u4ec0\u4e48\uff0c\u6211\u4eec\u5c06\u5728\u540e\u7eed\u4ecb\u7ecd\u3002 \u5bfc\u8a00\u4e0e\u6587\u6863\u4fe1\u606f \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 \\documentclass [UTF8] { ctexart } \\title { Sample Document } \\author { c7w } \\date { \\today } \\begin { document } % \u8fd9\u6761\u63a7\u5236\u547d\u4ee4\u4f1a\u8bfb\u53d6\u5bfc\u8a00\u90e8\u5206\u7684\u6587\u6863\u76f8\u5173\u4fe1\u606f % \u5e76\u5c06\u5176\u6e32\u67d3\u5230\u6587\u6863\u4e2d % \u4e8b\u5b9e\u4e0a\u53ef\u4ee5\u53c2\u8003\u76f8\u5173\u5b8f\u5305\u7684 Doc\uff1a % http://texdoc.net/texmf-dist/doc/latex/titling/titling.pdf \\maketitle \u4f60\u597d\uff0cworld! [\u5728\u8fd9\u91cc\u4f60\u5c31\u5f00\u59cb\u5199\u4f60\u7684\u4f5c\u4e1a\u7b2c\u4e00\u9898\u4e86] \\end { document } \u7ae0\u8282\u4e0e\u6bb5\u843d \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 \\documentclass [UTF8] { ctexart } \\title { Sample Document } \\author { c7w } \\date { \\today } \\begin { document } \\maketitle \\section { \u6211\u662f Section \u6807\u9898 } \u6211\u662f Section \u4ecb\u7ecd\u3002 \\subsection { \u6211\u662f Subsection \u6807\u9898 } \u6211\u662f Subsection \u4ecb\u7ecd\u3002 \\subsubsection { \u6211\u662f Subsubsection \u6807\u9898 } \u6211\u662f Subsubsection \u4ecb\u7ecd\u3002 % \\subsubsubsection{\u4e0d\u80fd\u7ee7\u7eed\u5957 sub \u4e86\uff0c\u5230\u5e95\u4e86} \\paragraph { \u6211\u662f Paragraph \u6807\u9898 } \u6211\u662f Paragraph \u540e\u9762\u8ddf\u7740\u5199\u7684\u4e1c\u897f\u3002 \u672c\u4eba\u4e5f\u662f\u7ecf\u8fc7\u4e86\u6df1\u601d\u719f\u8651\uff0c\u5728\u6bcf\u4e2a\u65e5\u65e5\u591c\u591c\u601d\u8003\u8fd9\u4e2a\u95ee\u9898\u3002 \u6211\u4eec\u90fd\u77e5\u9053\uff0c\u53ea\u8981\u6709\u610f\u4e49\uff0c\u90a3\u4e48\u5c31\u5fc5\u987b\u614e\u91cd\u8003\u8651\u3002 \u8fd9\u79cd\u4e8b\u5b9e\u5bf9\u672c\u4eba\u6765\u8bf4\u610f\u4e49\u91cd\u5927\uff0c\u76f8\u4fe1\u5bf9\u8fd9\u4e2a\u4e16\u754c\u4e5f\u662f\u6709\u4e00\u5b9a\u610f\u4e49\u7684\u3002 \u8981\u60f3\u6e05\u695a\uff0c\u4e00\u5929\u6389\u591a\u5c11\u6839\u5934\u53d1\uff0c\u5230\u5e95\u662f\u4e00\u79cd\u600e\u4e48\u6837\u7684\u5b58\u5728\u3002 \u8d1d\u591a\u82ac\u66fe\u7ecf\u8bf4\u8fc7\uff0c\u5353\u8d8a\u7684\u4eba\u4e00\u5927\u4f18\u70b9\u662f\uff1a\u5728\u4e0d\u5229\u4e0e\u8270\u96be\u7684\u906d\u9047\u91cc\u767e\u6298\u4e0d\u9976\u3002 \\subparagraph { \u6211\u662f Subparagraph \u6807\u9898 } \u6211\u662f Subparagraph \u540e\u9762\u8ddf\u7740\u5199\u7684\u4e1c\u897f\u3002 \u8fd9\u4e0d\u7981\u4ee4\u6211\u6df1\u601d\u65e2\u7136\u5982\u4f55\uff0c\u4e00\u5929\u6389\u591a\u5c11\u6839\u5934\u53d1\u7684\u53d1\u751f\uff0c\u5230\u5e95\u9700\u8981\u5982\u4f55\u505a\u5230\uff0c\u4e0d\u4e00\u5929\u6389\u591a\u5c11\u6839\u5934\u53d1\u7684\u53d1\u751f\uff0c\u53c8\u4f1a\u5982\u4f55\u4ea7\u751f\u3002 \u603b\u7ed3\u7684\u6765\u8bf4\uff0c \u6240\u8c13\u4e00\u5929\u6389\u591a\u5c11\u6839\u5934\u53d1\uff0c\u5173\u952e\u662f\u4e00\u5929\u6389\u591a\u5c11\u6839\u5934\u53d1\u9700\u8981\u5982\u4f55\u5199\u3002 \u751f\u6d3b\u4e2d\uff0c\u82e5\u4e00\u5929\u6389\u591a\u5c11\u6839\u5934\u53d1\u51fa\u73b0\u4e86\uff0c\u6211\u4eec\u5c31\u4e0d\u5f97\u4e0d\u8003\u8651\u5b83\u51fa\u73b0\u4e86\u7684\u4e8b\u5b9e\u3002 \u90ed\u6cab\u82e5\u66fe\u7ecf\u8bf4\u8fc7\uff0c\u5f62\u6210\u5929\u624d\u7684\u51b3\u5b9a\u56e0\u7d20\u5e94\u8be5\u662f\u52e4\u594b\u3002\u8fd9\u4e0d\u7981\u4ee4\u6211\u6df1\u601d\u8fd9\u79cd\u4e8b\u5b9e\u5bf9\u672c\u4eba\u6765\u8bf4\u610f\u4e49\u91cd\u5927\uff0c\u76f8\u4fe1\u5bf9\u8fd9\u4e2a\u4e16\u754c\u4e5f\u662f\u6709\u4e00\u5b9a\u610f\u4e49\u7684\u3002 \u6211\u4eec\u4e00\u822c\u8ba4\u4e3a\uff0c\u6293\u4f4f\u4e86\u95ee\u9898\u7684\u5173\u952e\uff0c\u5176\u4ed6\u4e00\u5207\u5219\u4f1a\u8fce\u5203\u800c\u89e3\u3002 \\subsection { \u8fd9\u662f\u7b2c\u4e8c\u8282 } \\paragraph { \u7b2c\u4e8c\u8282 } \u7684\u9996\u6bb5\u3002 \\subparagraph { \u7b2c\u4e8c\u8282 } \u7684\u7b2c\u4e8c\u6bb5\u3002 \\end { document } \u5728\u6587\u6863\u7c7b article / ctexart \u4e2d\uff08\u6587\u6863\u7c7b\u7684\u6982\u5ff5\u6211\u4eec\u4f1a\u5728\u8fdb\u9636\u7bc7\u4e2d\u63d0\u4f9b\u6307\u5bfc\uff09\uff0c\u6211\u4eec\u4f7f\u7528\u8fd9\u4e9b\u63a7\u5236\u5e8f\u5217\u6765\u8c03\u6574\u884c\u6587\u7ec4\u7ec7\u7ed3\u6784\u3002\u4ed6\u4eec\u5206\u522b\u662f\uff1a \\section{\u00b7} \\subsection{\u00b7} \\subsubsection{\u00b7} \\paragraph{\u00b7} \\subparagraph{\u00b7} \u6587\u6863\u76ee\u5f55 \u00b6 \u6211\u4eec\u5c1d\u8bd5\u5728\u6e32\u67d3\u533a \\maketitle \u540e\u52a0\u5165\u5982\u4e0b\u63a7\u5236\u547d\u4ee4\uff1a 1 \\tableofcontents \u6ca1\u9519\uff0c\u6b63\u5982\u4f60\u6240\u60f3\u7684\uff0c\u8fd9\u5c31\u4f1a\u751f\u6210\u6587\u6863\u7684 TOC\uff1a \u6570\u5b66\u516c\u5f0f \u00b6 \u884c\u5185\u516c\u5f0f\u4e0e\u884c\u95f4\u516c\u5f0f \u00b6 \u9996\u5148\u5f15\u5165\u76f8\u5e94\u5305 amsmath \uff0c\u7136\u540e\u6211\u4eec\u7b80\u5355\u4ecb\u7ecd\u516c\u5f0f\u7684\u5f15\u5165\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 \\documentclass [UTF8] { ctexart } \\usepackage { amsmath } % \u6ce8\u610f\u8fd9\u91cc\u5f15\u5165\u76f8\u5e94\u5305 \\title { Sample Document } \\author { c7w } \\date { \\today } \\begin { document } \\maketitle \\tableofcontents \\section { \u6211\u662f Section \u6807\u9898 } \u6211\u662f Section \u4ecb\u7ecd\u3002 \\subsection { \u8fd9\u4e2a Section \u6211\u4eec\u4ecb\u7ecd\u6570\u5b66\u516c\u5f0f\u7684\u5199\u6cd5 } \\subsubsection { \u884c\u5185\u516c\u5f0f } % \u884c\u5185\u516c\u5f0f\u57fa\u672c\u53ef\u4ee5\u7167\u642c Markdown \u7684\u6a21\u5f0f\u3002 \u521d\u59cb\u5904\u7406 1 - 5 \u4f4d\u7684\u521d\u59cb\u5b57\u7b26\u4e32\u96c6\u5408\u9700\u8981\u5904\u7406 $ 18 + 18 ^ 2 + 18 ^ 3 + 18 ^ 4 + 18 ^ 5 = 2 * 10 ^ 6 $ \u7684\u6570\u636e\uff0c\u56e0\u6b64\u9700\u8981 $ O ( T ) $ \u7684\u65f6\u95f4\uff0c\u8fd9\u91cc $ T = 2 * 10 ^ 6 $ \u3002 \\subsubsection { \u884c\u95f4\u516c\u5f0f } % \u884c\u95f4\u516c\u5f0f\u7528 $$ $$ \u6216\u8005 \\[ \\] \u6765\u6846\u4f4f\u90fd\u53ef\u4ee5\uff0c\u4f46\u5728 LaTeX \u4e2d\u524d\u8005\u4f1a\u6539\u53d8\u884c\u6587\u7684\u9ed8\u8ba4\u884c\u95f4\u8ddd\uff0c\u56e0\u6b64\u4e0d\u63a8\u8350\u91c7\u7528\u3002 \\[ \\text {dp} [ i ] = \\text {dp} [ next [ i ]]+ 1 , next [ i ] > 0 . \\] \\end { document } \u4e0a\u4e0b\u6807\u3001\u6839\u5f0f\u4e0e\u5206\u5f0f \u00b6 \u4e0a\u4e0b\u6807\u8bf7\u4f7f\u7528 ^ \u4e0e _ \u6839\u5f0f\u4e0e\u5206\u5f0f\u8bf7\u4f7f\u7528 \\sqrt{\u00b7} \u4e0e \\frac{\u00b7}{\u00b7} \u5728\u884c\u95f4\u516c\u5f0f\u548c\u884c\u5185\u516c\u5f0f\u4e2d\uff0c\u5206\u5f0f\u7684\u8f93\u51fa\u6548\u679c\u662f\u6709\u5dee\u5f02\u7684\u3002\u5982\u679c\u8981\u5f3a\u5236\u884c\u5185\u6a21\u5f0f\u7684\u5206\u5f0f\u663e\u793a\u4e3a\u884c\u95f4\u6a21\u5f0f\u7684\u5927\u5c0f\uff0c\u53ef\u4ee5\u4f7f\u7528 \\dfrac , \u53cd\u4e4b\u53ef\u4ee5\u4f7f\u7528 \\tfrac \u8fd0\u7b97\u7b26 \u00b6 \u4e00\u4e9b\u5c0f\u7684\u8fd0\u7b97\u7b26\uff0c\u53ef\u4ee5\u5728\u6570\u5b66\u6a21\u5f0f\u4e0b\u76f4\u63a5\u8f93\u5165\uff1b\u53e6\u4e00\u4e9b\u9700\u8981\u7528\u63a7\u5236\u5e8f\u5217\u751f\u6210\uff0c\u5982 1 2 \\[ \\pm\\; \\times \\; \\div\\; \\cdot\\; \\cap\\; \\cup\\; \\geq\\; \\leq\\; \\neq\\; \\approx \\; \\equiv \\] \u8fde\u52a0\u3001\u8fde\u4e58\u3001\u6781\u9650\u3001\u79ef\u5206\u7b49\u5927\u578b\u8fd0\u7b97\u7b26\u5206\u522b\u7528 \\sum , \\prod , \\lim , \\int \u751f\u6210\u3002\u4ed6\u4eec\u7684\u4e0a\u4e0b\u6807\u5728\u884c\u5185\u516c\u5f0f\u4e2d\u88ab\u538b\u7f29\uff0c\u4ee5\u9002\u5e94\u884c\u9ad8\u3002\u6211\u4eec\u53ef\u4ee5\u7528 \\limits \u548c \\nolimits \u6765\u5f3a\u5236\u663e\u5f0f\u5730\u6307\u5b9a\u662f\u5426\u538b\u7f29\u8fd9\u4e9b\u4e0a\u4e0b\u6807\u3002\u4f8b\u5982\uff1a 1 2 3 4 $ \\sum_{i=1}^n i\\quad \\prod_{i=1}^n $ $ \\sum\\limits _{i=1}^n i\\quad \\prod\\limits _{i=1}^n $ \\[ \\lim_{x\\to0}x^2 \\quad \\int_a^b x^2 dx \\] \\[ \\lim\\nolimits _{x\\to0}x^2\\quad \\int\\nolimits_a^b x^2 dx \\] \u591a\u91cd\u79ef\u5206\u53ef\u4ee5\u4f7f\u7528 \\iint , \\iiint , \\iiiint , \\idotsint \u7b49\u547d\u4ee4\u8f93\u5165\u3002 1 \\[ \\iint\\quad \\iiint\\quad \\iiiint\\quad \\idotsint \\] \u5b9a\u754c\u7b26 \u00b6 \u5404\u79cd\u62ec\u53f7\u7528 () , [] , \\{\\} , \\langle\\rangle \u7b49\u547d\u4ee4\u8868\u793a\uff1b\u6ce8\u610f\u82b1\u62ec\u53f7\u901a\u5e38\u7528\u6765\u8f93\u5165\u547d\u4ee4\u548c\u73af\u5883\u7684\u53c2\u6570\uff0c\u6240\u4ee5\u5728\u6570\u5b66\u516c\u5f0f\u4e2d\u5b83\u4eec\u524d\u9762\u8981\u52a0 \\ \u3002 \u56e0\u4e3a LaTeX \u4e2d | \u548c \\| \u7684\u5e94\u7528\u8fc7\u4e8e\u968f\u610f\uff0camsmath \u5b8f\u5305\u63a8\u8350\u7528 \\lvert\\rvert \u548c \\lVert\\rVert \u53d6\u800c\u4ee3\u4e4b\u3002 \u4e3a\u4e86\u8c03\u6574\u8fd9\u4e9b\u5b9a\u754c\u7b26\u7684\u5927\u5c0f\uff0camsmath \u5b8f\u5305\u63a8\u8350\u4f7f\u7528 \\big , \\Big , \\bigg , \\Bigg \u7b49\u4e00\u7cfb\u5217\u547d\u4ee4\u653e\u5728\u4e0a\u8ff0\u62ec\u53f7\u524d\u9762\u8c03\u6574\u5927\u5c0f\u3002 \u7701\u7565\u53f7 \u00b6 \u7701\u7565\u53f7\u7528 \\dots , \\cdots , \\vdots , \\ddots \u7b49\u547d\u4ee4\u8868\u793a\u3002 \\dots \u548c \\cdots \u7684\u7eb5\u5411\u4f4d\u7f6e\u4e0d\u540c\uff0c\u524d\u8005\u4e00\u822c\u7528\u4e8e\u6709\u4e0b\u6807\u7684\u5e8f\u5217\u3002 \u77e9\u9635 \u00b6 amsmath \u7684 pmatrix , bmatrix , Bmatrix , vmatrix , Vmatrix \u7b49\u73af\u5883\u53ef\u4ee5\u5728\u77e9\u9635\u4e24\u8fb9\u52a0\u4e0a\u5404\u79cd\u5206\u9694\u7b26\u3002 1 2 3 4 5 \\[ \\begin{pmatrix} a&b\\\\c&d \\end{pmatrix} \\quad \\begin{bmatrix} a&b\\\\c&d \\end{bmatrix} \\quad \\begin{Bmatrix} a&b\\\\c&d \\end{Bmatrix} \\quad \\begin{vmatrix} a&b\\\\c&d \\end{vmatrix} \\quad \\begin{Vmatrix} a&b\\\\c&d \\end{Vmatrix} \\] \u591a\u884c\u516c\u5f0f \u00b6 \u53ef\u4ee5\u7528 aligned \u73af\u5883\u6765\u5b9e\u73b0\uff0c\u7528 & \u5b9e\u73b0\u4f4d\u7f6e\u5bf9\u9f50\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 \\[ \\begin {aligned} x = a + b + c + \\\\ + d + e + f + g + d + d + d + d + d + d + d + d + d + d + d + d \\\\ + h + i \\\\ + 1 \\\\ \\end {aligned} \\] \\[ \\begin {aligned} x & = a + b + c + \\\\ & + d + e + f + g + d + d + d + d + d + d + d + d + d + d + d + d \\\\ & + h + i \\\\ & + 1 \\\\ \\end {aligned} \\] \u6548\u679c\uff1a \u82e5\u60f3\u8981\u516c\u5f0f\u81ea\u5e26\u7f16\u53f7\uff0c\u53ef\u4ee5\u7528 gather \u548c align \u73af\u5883\uff0c\u5176\u4e2d gather \u73af\u5883\u5c06\u516c\u5f0f\u5206\u884c\u6e32\u67d3\uff0c align \u540c\u4e0a\u8ff0 aligned \uff0c\u53ef\u4ee5\u63a7\u5236\u5bf9\u9f50\uff1a 1 2 3 4 5 6 7 8 9 10 11 \\begin { gather } a = b+c+d \\\\ x = y+z \\\\ p = a _ 1 + a _ 2 + a _ 3 + \\dots + a _{ 200 } \\end { gather } \\begin { align } a & = b+c+d \\\\ x & = y+z \\\\ p & = a _ 1 + a _ 2 + a _ 3 + \\dots + a _{ 200 } \\end { align } \u82e5\u60f3\u4f7f\u7528\u5206\u6bb5\u51fd\u6570\uff0c\u53ef\u4ee5\u4f7f\u7528 cases \u73af\u5883\uff1a 1 2 3 4 5 6 7 \\[ y = \\begin {cases} - x, \\quad x \\leq 0 \\\\ x, \\quad x> 0 \\end {cases} \\] \u5c0f\u7ed3 \u00b6 \u6570\u5b66\u516c\u5f0f\u662f\u5728\u5f15\u5165\u4e86 amsmath \u5305\u4e4b\u540e\uff0c\u5229\u7528\u5176\u63d0\u4f9b\u7684\u5404\u79cd\u5404\u6837\u6b21\u73af\u5883\u6765\u5b9e\u73b0\u4e86\u8f83\u4e3a\u590d\u6742\u7684\u516c\u5f0f\u7684\u7f16\u8f91\u3002\u6574\u4f53\u6765\u8bf4\uff0c\u4e0e Mathjax \u7684\u98ce\u683c\u76f8\u5dee\u4e0d\u5927\uff0c\u56e0\u6b64\u8fc1\u79fb\u5b66\u4e60\u8d77\u6765\u4e5f\u5341\u5206\u65b9\u4fbf\u3002 \u8fd9\u91cc\u6211\u4eec\u518d\u63d0\u4f9b\u8f85\u52a9\u5de5\u5177\uff1a https://mathpix.com/ \u80fd\u591f OCR \u624b\u5199\u4f53\u6216\u662f\u5370\u5237\u4f53\u516c\u5f0f\uff0c\u800c\u540e\u5c06\u56fe\u7247\u4e2d\u7684\u516c\u5f0f\u8f6c\u6362\u6210 LaTeX \u6570\u5b66\u516c\u5f0f\u7684\u4ee3\u7801\u3002 \u8868\u683c \u00b6 tabular \u73af\u5883\u63d0\u4f9b\u4e86\u6700\u7b80\u5355\u7684\u8868\u683c\u529f\u80fd\u3002\u5b83\u7528 \\hline \u547d\u4ee4\u8868\u793a\u6a2a\u7ebf\uff0c\u5728\u5217\u683c\u5f0f\u4e2d\u7528 | \u8868\u793a\u7ad6\u7ebf\uff1b\u7528 & \u6765\u5206\u5217\uff0c\u7528 \\\\ \u6765\u6362\u884c\uff1b\u6bcf\u5217\u53ef\u4ee5\u91c7\u7528\u5c45\u5de6\u3001\u5c45\u4e2d\u3001\u5c45\u53f3\u7b49\u6a2a\u5411\u5bf9\u9f50\u65b9\u5f0f\uff0c\u5206\u522b\u7528 l \u3001 c \u3001 r \u6765\u8868\u793a\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 \\begin { tabular }{ |l|c|r| } \\hline \u64cd\u4f5c\u7cfb\u7edf & \u53d1\u884c\u7248 & \u7f16\u8f91\u5668 \\\\ \\hline Windows & MikTeX & TexMakerX \\\\ \\hline Unix/Linux & teTeX & Kile \\\\ \\hline Mac OS & MacTeX & TeXShop \\\\ \\hline \u901a\u7528 & TeX Live & TeXworks \\\\ \\hline \\end { tabular } \u56fe\u7247 \u00b6 \u5728 LaTeX \u4e2d\u63d2\u5165\u56fe\u7247\uff0c\u6709\u5f88\u591a\u79cd\u65b9\u5f0f\u3002\u6700\u597d\u7528\u7684\u5e94\u5f53\u5c5e\u5229\u7528 graphicx \u5b8f\u5305\u63d0\u4f9b\u7684 \\includegraphics \u547d\u4ee4\u3002\u6bd4\u5982\u4f60\u5728\u4f60\u7684 TeX \u6e90\u6587\u4ef6\u540c\u76ee\u5f55\u4e0b\uff0c\u6709\u540d\u4e3a a.jpg \u7684\u56fe\u7247\uff0c\u4f60\u53ef\u4ee5\u7528\u8fd9\u6837\u7684\u65b9\u5f0f\u5c06\u5b83\u63d2\u5165\u5230\u8f93\u51fa\u6587\u6863\u4e2d\uff1a 1 2 3 4 5 \\documentclass { article } \\usepackage { graphicx } \\begin { document } \\includegraphics { a.jpg } \\end { document } \u60f3\u8981\u4e86\u89e3\u66f4\u591a\uff0c\u53c2\u89c1 graphicx \u7684\u6587\u6863\uff1a http://texdoc.net/texmf-dist/doc/latex/graphics/graphicx.pdf \u3002 \u6d6e\u52a8\u4f53\u73af\u5883 \u4ec0\u4e48\u662f\u6d6e\u52a8\u4f53\u73af\u5883\uff1a table \u4e0e figure \uff0c\u4e24\u79cd\u6d6e\u52a8\u4f53\u73af\u5883\u53ef\u4ee5\u66ff\u4ee3\u4e0a\u8ff0\u7684\u8868\u683c\u548c\u56fe\u7247\u73af\u5883\uff0c\u5b9e\u73b0\u4e3a\u8868\u683c\u6216\u56fe\u7247\u81ea\u52a8\u5b89\u6392\u4f4d\u7f6e\u3002 \u60f3\u4e86\u89e3\u66f4\u591a\u6709\u5173\u6d6e\u52a8\u4f53\u73af\u5883\u7684\u5185\u5bb9\uff0c\u8be6\u89c1 \u8fd9\u91cc \u3002 \u9875\u9762\u8bbe\u7f6e \u00b6 \u9875\u8fb9\u8ddd \u00b6 \u8bbe\u7f6e\u9875\u8fb9\u8ddd\uff0c\u63a8\u8350\u4f7f\u7528 geometry \u5b8f\u5305\u3002\u53ef\u4ee5\u5728 \u8fd9\u91cc \u67e5\u770b\u5b83\u7684\u8bf4\u660e\u6587\u6863\u3002 \u6bd4\u5982\u6211\u5e0c\u671b\uff0c\u5c06\u7eb8\u5f20\u7684\u957f\u5ea6\u8bbe\u7f6e\u4e3a 20cm\u3001\u5bbd\u5ea6\u8bbe\u7f6e\u4e3a 15cm\u3001\u5de6\u8fb9\u8ddd 1cm\u3001\u53f3\u8fb9\u8ddd 2cm\u3001\u4e0a\u8fb9\u8ddd 3cm\u3001\u4e0b\u8fb9\u8ddd 4cm\uff0c\u53ef\u4ee5\u5728\u5bfc\u8a00\u533a\u52a0\u4e0a\u8fd9\u6837\u51e0\u884c\uff1a 1 2 3 \\usepackage{geometry} \\geometry{papersize={20cm,15cm}} \\geometry{left=1cm,right=2cm,top=3cm,bottom=4cm} \u9875\u7709\u9875\u811a \u00b6 \u8bbe\u7f6e\u9875\u7709\u9875\u811a\uff0c\u63a8\u8350\u4f7f\u7528 fancyhdr \u5b8f\u5305\u3002\u53ef\u4ee5\u5728 \u8fd9\u91cc \u67e5\u770b\u5b83\u7684\u8bf4\u660e\u6587\u6863\u3002 \u6bd4\u5982\u6211\u5e0c\u671b\uff0c\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u9875\u7709\uff1b\u9875\u811a\u7684\u6b63\u4e2d\u5199\u4e0a\u9875\u7801\uff1b\u9875\u7709\u548c\u6b63\u6587\u4e4b\u95f4\u6709\u4e00\u9053\u5bbd\u4e3a 0.4pt \u7684\u6a2a\u7ebf\u5206\u5272\uff0c\u53ef\u4ee5\u5728\u5bfc\u8a00\u533a\u52a0\u4e0a\u5982\u4e0b\u51e0\u884c\uff1a 1 2 3 4 5 6 7 8 9 10 11 \\usepackage { fancyhdr } \\pagestyle { fancy } \\lhead { \u9875\u7709\u5de6\u4fa7 } \\chead { \u9875\u7709\u4e2d\u95f4 } \\rhead { \u9875\u7709\u53f3\u4fa7 } \\lfoot {} \\cfoot { \\thepage } \\rfoot {} \\renewcommand { \\headrulewidth }{ 0.4pt } \\renewcommand { \\headwidth }{ \\textwidth } \\renewcommand { \\footrulewidth }{ 0pt } \u6bb5\u95f4\u8ddd \u00b6 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539\u957f\u5ea6 \\parskip \u7684\u503c\u6765\u8c03\u6574\u6bb5\u95f4\u8ddd\u3002\u4f8b\u5982\u5728\u5bfc\u8a00\u533a\u6dfb\u52a0\u4ee5\u4e0b\u5185\u5bb9 1 \\addtolength{\\parskip}{.4em} \u5219\u53ef\u4ee5\u5728\u539f\u6709\u7684\u57fa\u7840\u4e0a\uff0c\u589e\u52a0\u6bb5\u95f4\u8ddd 0.4em\u3002\u5982\u679c\u9700\u8981\u51cf\u5c0f\u6bb5\u95f4\u8ddd\uff0c\u53ea\u9700\u5c06\u8be5\u6570\u503c\u6539\u4e3a\u8d1f\u503c\u5373\u53ef\u3002 \u5f15\u7528\u4e0e\u5c3e\u6ce8\u811a\u6ce8 \u00b6 \u4ea4\u53c9\u5f15\u7528 \u00b6 \u4ea4\u53c9\u5f15\u7528\u8bbe\u7f6e\u65b9\u6cd5\uff1a \u7ed9\u5bf9\u8c61\u547d\u540d\uff1a \\label{name} \u5f15\u7528\u5bf9\u8c61\uff1a \\ref{name} \u6ce8\u610f\uff0c\u5728\u5f15\u7528\u5bf9\u8c61\u65f6\uff0c \\ref{name} \u4f1a\u88ab\u66ff\u6362\u4f1a\u88ab\u5f15\u7528\u5bf9\u8c61\u7684\u7f16\u53f7\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c\u88ab\u5f15\u7528\u5bf9\u8c61\u5728\u6587\u6863\u4e2d\u662f\u7b2c 5 \u4e2a\u88ab\u547d\u540d\u7684\uff0c\u90a3\u4e48\u8fd9\u91cc\u5c31\u4f1a\u88ab\u66ff\u6362\u4e3a 5. \u8981\u60f3\u907f\u514d\u56fe/\u8868/\u8bba\u6587\u7b49\u7b49\u5f15\u7528\u5728\u8ba1\u6570\u4e0a\u4e92\u76f8\u5f71\u54cd\uff0c\u4f60\u53ef\u4ee5\u5728\u547d\u540d\u65f6\u547d\u540d\u4e3a tag:name \u7684\u683c\u5f0f\uff0c\u5f15\u7528\u65f6\u4f7f\u7528 tag:name \u7684\u683c\u5f0f\u6765\u5f15\u7528\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u8fd9\u4e9b tag \u6709\uff1a Tag Description ch: chapter sec: section subsec: subsection fig: figure tab: table eq: equation lst: code listing itm: enumerated list item alg: algorithm app: appendix subsection \u5c3e\u6ce8\u811a\u6ce8 \u00b6 \u5c3e\u6ce8\u76f4\u63a5\u5728\u6700\u540e\u5199\u5c31\u884c\uff0c\u8bb0\u5f97\u8bbe\u7f6e\u5f15\u7528\u3002 \u811a\u6ce8\u53ef\u4ee5\u4f7f\u7528 \\footnote{\u89d2\u6ce8\u5185\u5bb9} \u6765\u58f0\u660e\u3002 \u60f3\u4e86\u89e3\u8be5\u5982\u4f55\u66f4\u597d\u5730\u5f15\u5165\u53c2\u8003\u6587\u732e\uff0c\u8bf7\u5b66\u4e60 BibTeX \u5b8f\u5305\u3002 https://zh.wikipedia.org/wiki/BibTeX \u5217\u8868\u4e0e\u679a\u4e3e \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 \\begin { enumerate } \\item \\LaTeX {} \u597d \u5904 \u90fd \u6709 \u5565 \\begin { description } \\item [\u597d \u7528] \u4f53 \u9a8c \u597d \u624d \u662f \u771f \u7684 \u597d \\item [\u597d \u770b] \u5f3a \u8feb \u75c7 \u7684 \u798f \u97f3 \\item [\u5f00 \u6e90] \u4f17 \u4eba \u62fe \u67f4 \u706b \u7130 \u9ad8 \\end { description } \\item \u8fd8 \u6709 \u5462? \\begin { itemize } \\item \u597d \u5904 1 \\item \u597d \u5904 2 \\end { itemize } \\end { enumerate } LaTeX \u540e\u7eed\u5b66\u4e60 \u00b6 \u66f4\u591a\u5b8f\u5305 \u00b6 \u5b8f\u5305\u4e00\u822c\u90fd\u4f1a\u63d0\u4f9b\u76f8\u5e94\u7684\u6587\u6863\u4f9b\u6211\u4eec\u9605\u8bfb\u4f7f\u7528\u3002 \u8fd9\u91cc\u63d0\u4f9b\u67e5\u8be2\u5b8f\u5305\u5bf9\u5e94\u6587\u6863\u7684\u7f51\u7ad9\uff1a https://texdoc.org/index.html \u5236\u4f5c\u81ea\u5df1\u7684\u6a21\u677f \u00b6 \u8be6\u89c1\u53c2\u8003\u8d44\u6599\u4e2d .cls \u6587\u4ef6\u8be6\u89e3\u90e8\u5206\u3002\u6211\u4eec\u540c\u65f6\u63a8\u8350\u8bfb\u8005\u53ef\u4ee5\u53bb\u591a\u8bfb\u4e00\u8bfb\u5176\u4ed6\u5df2\u5b58\u5728\u7684 Template \u7684 .cls \u5185\u5bb9\u3002 \u5236\u4f5c\u5e7b\u706f\u7247 \u00b6 \u4f7f\u7528 Beamer \u5b8f\u5305\u53ef\u4ee5\u5236\u4f5c\u5e7b\u706f\u7247\u3002\u8be6\u89c1\uff1a https://www.overleaf.com/learn/latex/Beamer \u540c\u65f6\uff0c\u6821\u5185\u4e5f\u63d0\u4f9b\u4e86\u4e00\u4e9b\u9002\u7528\u4e8e\u5404\u79cd pre \u7684 Beamer \u6a21\u677f\u3002 \u53c2\u8003\u94fe\u63a5 \u00b6 \uff08\u63a8\u8350\uff09\u4e00\u4efd\u5176\u5b9e\u5f88\u77ed\u7684 LaTeX \u5165\u95e8\u6587\u6863\uff1a https://liam.page/2014/09/08/latex-introduction/ \uff08\u63a8\u8350\uff09\u5982\u4f55\u4f7f\u7528 LaTeX \u6392\u7248\u8bba\u6587\uff1a https://github.com/tuna/thulib-latex-talk \uff08 .cls \u6587\u4ef6\u8be6\u89e3\uff09How to write a LaTeX class file and design your own CV\uff1a https://www.overleaf.com/learn/latex/How_to_write_a_LaTeX_class_file_and_design_your_own_CV_(Part_1 )","title":"LaTeX \u5165\u95e8"},{"location":"basic/latex/#latex","text":"\u867d\u7136 Markdown \u5f88\u597d\u7528\uff0c\u4f46\u662f\u751f\u6210\u7684 pdf \u6587\u6863\u770b\u8d77\u6765\u5c31\u662f \u6ca1\u6709\u8303 \u4e0d\u591f\u6b63\u5f0f\u3002\u6b64\u5916\uff0c\u4f7f\u7528 LaTeX \u4e5f\u662f\u6211\u4eec\u4e4b\u540e\u5199\u8bba\u6587\u7684\u5fc5\u5907\u6280\u80fd\u3002 \u672c\u6559\u7a0b\u4e3b\u8981\u6d89\u53ca\u5df2\u5bf9 Markdown \u8f83\u4e3a\u719f\u8bc6\u4e4b\u540e\u7684\u8fc1\u79fb\u5b66\u4e60\u3002","title":"LaTeX"},{"location":"basic/latex/#_1","text":"Markdown \u5165\u95e8 Markdown \u7f16\u5199\u6570\u5b66\u516c\u5f0f\u7684\u65b9\u6cd5","title":"\u524d\u7f6e\u77e5\u8bc6"},{"location":"basic/latex/#latex_1","text":"\u6211\u4eec\u9996\u5148\u89e3\u51b3\u4ee5\u4e0b\u51e0\u4e2a\u95ee\u9898\uff1a LaTeX \u662f\u4ec0\u4e48\uff1f LaTeX \u600e\u6837\u8fd0\u4f5c\uff1f \u6211\u8be5\u5728\u54ea\u91cc\u5199 LaTex\uff1f \u5728\u89e3\u51b3\u4e0a\u8ff0\u51e0\u4e2a\u95ee\u9898\u4e4b\u540e\uff0c\u6211\u4eec\u518d\u8be6\u7ec6\u4ecb\u7ecd\u8be5\u600e\u4e48\u5199 LaTeX \u7684\u95ee\u9898\u3002","title":"LaTeX \u7b80\u4ecb"},{"location":"basic/latex/#latex_2","text":"\u76f8\u4fe1\u4f60\u8bfb\u5230\u8fd9\u91cc\u5df2\u7ecf\u505a\u597d\u89c9\u609f\u8981\u88ab\u704c\u8f93\u4e00\u7cfb\u5217\u5173\u952e\u8bcd\u548c\u5176\u5bf9\u5e94\u6982\u5ff5\u4e86\u3002\u8ba9\u6211\u4eec\u5f00\u59cb\uff1a \u5386\u53f2\u56de\u6eaf\u5230 Knuth \u6559\u6388\u7684\u5de8\u8457 The Art of Computer Programming \u5c06\u8981\u51fa\u7248\u4e4b\u9645\uff0c\u5f53\u51fa\u7248\u5546\u5c06\u4ed6\u4eec\u6392\u7248\u7684\u4e66\u7a3f\u8349\u6837\u4ea4\u7ed9 Knuth \u6559\u6388\u7684\u65f6\u5019\uff0c\u4ed6\u5bf9\u4e8e\u5176\u4e2d\u590d\u6742\u6570\u5b66\u516c\u5f0f\u7684\u6392\u7248\u5904\u7406\u5341\u5206\u4e0d\u6ee1\u3002\u5176\u6392\u7248\u4e4b\u7c97\u7cd9\uff0c\u5df2\u8fbe\u5230\u4e86\u4f1a\u5f71\u54cd\u4eba\u4eec\u7406\u89e3\u539f\u4e66\u5185\u5bb9\u7684\u7a0b\u5ea6\u3002\u56e0\u6b64\uff0c\u5bf9\u4e8e\u590d\u6742\u7684\u6570\u5b66\u548c\u7269\u7406\u516c\u5f0f\uff0c\u6211\u4eec\u6025\u9700\u4e00\u79cd\u80fd\u591f\u5c06\u5176\u5728\u4e92\u8054\u7f51\u4e0a\u4f20\u8f93\u7684\u7f16\u7801\u683c\u5f0f\uff0c\u4f7f\u5f97\u4eba\u80fd\u9605\u8bfb\u7684\u516c\u5f0f\u548c\u673a\u5668\u80fd\u5b58\u50a8\u7684\u516c\u5f0f\u4e4b\u95f4\u8fbe\u5230\u4e00\u79cd\u4e92\u76f8\u8f6c\u5316\u3002 TeX \uff1a\u4e00\u79cd\u6392\u7248\u5f15\u64ce\uff0c\u4e5f\u662f\u8be5\u5f15\u64ce\u4f7f\u7528\u7684\u6807\u8bb0\u8bed\u8a00\u7684\u540d\u79f0\u3002\u5f15\u64ce\u662f\u6307\u80fd\u591f\u65ad\u884c\u3001\u5206\u9875\u7684\u7a0b\u5e8f\uff0c\u6807\u8bb0\u8bed\u8a00\u662f\u63a7\u5236\u547d\u4ee4\u548c\u6587\u672c\u7ed3\u5408\u7684\u683c\u5f0f\u3002\u53ef\u4ee5\u7c7b\u6bd4\u7406\u89e3\u6210\u4f60\u5199\u7684 C++ \u6e90\u4ee3\u7801\u6216\u8005\u66f4\u5e95\u5c42\u7684\u673a\u5668\u6307\u4ee4\u7801\uff0c\u5982\u8f93\u5165 $2^6$ \u3002 LaTeX \uff1a\u662f\u4e00\u4e2a\u57fa\u4e8e TeX \u7684\u6392\u7248\u7cfb\u7edf\uff0c\u5c06\u7528\u6237\u6309\u7167\u5b83\u7684\u683c\u5f0f\u7f16\u5199\u7684\u6587\u6863\u89e3\u91ca\u6210 TeX \u5f15\u64ce\u80fd\u7406\u89e3\u7684\u5f62\u5f0f\u5e76\u4ea4\u4ed8\u7ed9 TeX \u5f15\u64ce\u5904\u7406\uff0c\u518d\u5c06\u6700\u7ec8\u7ed3\u679c\u8fd4\u56de\u7ed9\u7528\u6237\u3002\u53ef\u4ee5\u7c7b\u6bd4\u7406\u89e3\u6210 g++ \u7f16\u8bd1\u5668\uff0c\u5c06\u4e0a\u8ff0\u4ee3\u7801\u6e32\u67d3\u4e3a 2^6 2^6 \u3002 pdfTeX \u4e0e pdfLaTeX \uff1a\u539f\u7248 TeX \u7cfb\u7edf\u751f\u6210\u7684\u6587\u4ef6\u662f dvi \u683c\u5f0f\uff0c\u800c pdfTeX \u7cfb\u7edf\u4e0b\u751f\u6210\u7684\u6587\u4ef6\u662f pdf \u683c\u5f0f\u3002 XeTeX \u4e0e XeLaTeX \uff1a\u4e0a\u8ff0 TeX \u7cfb\u7edf\u751f\u6210\u7684\u5b57\u7b26\u96c6\u53ea\u652f\u6301 ASCII \u5b57\u7b26\u3002\u5728 XeTeX \u51fa\u73b0\u4e4b\u524d\uff0c\u6211\u4eec\u66fe\u4f7f\u7528\u8fc7\u5f15\u7528\u5f15\u5165 CJK \u5b8f\u5e93\uff08\u89e3\u51b3\u4e0d\u652f\u6301\u4e2d\u65e5\u97e9\u5b57\u7b26\u95ee\u9898\u7684\u4e00\u4e2a\u5e93\uff09\u624b\u6bb5\u6765\u5904\u7406\u4e2d\u6587\u5b57\u7b26\u7684\u95ee\u9898\u3002\u4f46\u662f\u8fd9\u4e2a\u6392\u7248\u7cfb\u7edf\u5bf9\u6240\u6709 Unicode \u5b57\u7b26\u90fd\u5b9e\u73b0\u4e86\u652f\u6301\u3002 LuaTeX \u4e0e LuaLaTeX \uff1a pdfTeX \u7cfb\u7edf\u7684\u7ee7\u627f\u8005\uff0c\u652f\u6301\u4f7f\u7528\u4e00\u4e9b\u7528\u6237\u81ea\u5b9a\u4e49\u811a\u672c\u6765\u5b9e\u73b0\u4e4b\u524d\u9700\u8981\u5199\u6210 TeX \u7684\u529f\u80fd\u3002\u652f\u6301 Unicode\uff0c\u5185\u8054 lua\uff0c\u652f\u6301 OpenType\u3002 \u8fd9\u91cc\u6211\u4eec\u63a8\u8350\u4f7f\u7528 XeTeX \u7cfb\u7edf\u6765\u8fdb\u884c\u6211\u4eec\u65e5\u5e38\u7684\u5de5\u4f5c\uff0c\u6211\u4eec\u540e\u7eed\u7684\u6559\u7a0b\u4e5f\u56f4\u7ed5\u8fd9\u4e2a\u6392\u7248\u7cfb\u7edf\u5c55\u5f00\u3002\u4e3a\u4e86\u7b80\u6d01\u8d77\u89c1\uff0c\u6211\u4eec\u540e\u7eed\u4e0d\u518d\u533a\u5206\u4e0a\u8ff0\u6982\u5ff5\uff0c\u7edf\u4e00\u4f7f\u7528 TeX \uff0c LaTeX \u6765\u8868\u8ff0\u6211\u4eec\u5728\u8bf4\u7684\u8fd9\u4e2a\u8bdd\u9898\u3002","title":"LaTeX \u662f\u4ec0\u4e48\uff1f"},{"location":"basic/latex/#latex_3","text":"LaTeX \u6392\u7248\u7cfb\u7edf\u7684\u8f93\u5165\u662f\u542b\u6709\u6211\u4eec\u6572\u7684\u6587\u672c\u548c\u63a7\u5236\u547d\u4ee4\u7684 tex \u6587\u4ef6\uff0c\u8f93\u51fa\u662f\u4e00\u4efd pdf \u6587\u4ef6\u3002\u6211\u4eec\u53ea\u9700\u8981\u8d1f\u8d23\u5728 tex \u6587\u4ef6\u4e2d\u5199\u4e0b\u6e90\u7801\uff0c\u7136\u540e\u5269\u4e0b\u7684\u7f16\u8bd1\u548c\u751f\u6210\u5de5\u4f5c\u5168\u90e8\u4ea4\u7ed9 LaTeX \u5373\u53ef\u3002 \u6709\u65f6\u6211\u4eec\u8fd8\u53ef\u4ee5\u628a\u4e00\u4e2a LaTeX \u9879\u76ee\u7ec4\u7ec7\u6210\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u6b64\u65f6\u8fd8\u662f\u4e00\u4efd tex \u6587\u4ef6\u51b3\u5b9a\u4e00\u4e2a pdf \u7684\u751f\u6210\uff0c\u4f46\u662f\u6211\u4eec\u8fd8\u53ef\u4ee5\u5728\u8fd9\u4e2a\u6587\u4ef6\u5939\u4e2d\u5f15\u5165\u5176\u4ed6\u4e00\u4e9b\u6587\u4ef6\uff0c\u5982\u5b57\u4f53\u6587\u4ef6\uff0c\u56fe\u7247\u6587\u4ef6\uff0c .cls \u6587\u4ef6\uff08\u6587\u6863\u6a21\u677f\u7c7b\u6587\u4ef6\uff09\u7b49\u7b49\u3002\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5728\u8fd9\u4e2a\u6587\u4ef6\u5939\u4e2d\u7f16\u5199\u591a\u4e2a tex \u6587\u4ef6\uff0c\u4ee5\u5171\u4eab\u6587\u4ef6\u5939\u4e2d\u7684\u5176\u4ed6\u8d44\u6e90\u3002\u6b64\u65f6\u4e0d\u540c\u7684 tex \u6587\u4ef6\u4e4b\u95f4\u751a\u81f3\u53ef\u4ee5\u9879\u76ee\u5305\u542b\uff08\u7c7b\u6bd4\u4e8e C++ \u7684 #include \u5305\u542b\uff09\u3002","title":"LaTeX \u600e\u6837\u8fd0\u4f5c\uff1f"},{"location":"basic/latex/#latex_4","text":"\u6211\u4eec\u6709\u79bb\u7ebf\u548c\u5728\u7ebf\u4e24\u79cd\u6a21\u5f0f\u6765\u64b0\u5199 LaTeX\u3002 \u79bb\u7ebf\u6a21\u5f0f\u5c31\u662f\u5b89\u88c5\u4e00\u4e2a LaTeX \u6392\u7248\u7cfb\u7edf\uff0c\u7c7b\u6bd4\u6211\u4eec\u60f3\u5199 Markdown \u7684\u65f6\u5019\u88c5\u4e86\u4e00\u4e2a Typora \u8f6f\u4ef6\u4e00\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u5b89\u88c5\u76f8\u5e94\u7684\u8f6f\u4ef6\u6765\u8f85\u52a9\u6211\u4eec\u5de5\u4f5c\uff0c\u5982\uff1a TeXworks TeXstudio \u800c\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u5b89\u88c5\u5e26\u6765\u7684\u95ee\u9898\u662f\u53ef\u80fd\u5b89\u88c5\u5305\u8fc7\u4e8e\u81c3\u80bf\uff0c\u4f18\u70b9\u662f\u4e0d\u7528\u53d7\u5230\u7f51\u7edc\u73af\u5883\u7b49\u7b49\u56e0\u7d20\u7684\u5e72\u6270\uff0c\u4e5f\u4e0d\u7528\u53d7\u5230\u7f51\u7edc\u73af\u5883\u5b58\u50a8\u5bb9\u91cf\u6216\u8fd0\u884c\u65f6\u73af\u5883\u7684\u9650\u5236\u3002\u5176\u5b89\u88c5\u65b9\u5f0f\u5728\u7f51\u7edc\u4e0a\u641c\u7d22\u201cLaTeX \u5165\u95e8\u201d\u4fbf\u53ef\u627e\u5230\u5806\u79ef\u5982\u5c71\u7684 \u6559\u7a0b \u3002 \u800c\u6211\u4eec\u8fd9\u91cc\u63a8\u5d07\u7684\u65b9\u5f0f\u5c31\u662f\u4f7f\u7528\u5728\u7ebf\u65b9\u5f0f\u6765\u7f16\u5199\u3002\u5982 Overleaf \u5728\u5185\u7684\u6258\u7ba1\u7f51\u7ad9\u4f1a\u5c06\u4f60\u7684\u6bcf\u4e2a TeX \u9879\u76ee\u7ec4\u7ec7\u6210\u4e00\u4e2a\u4ed3\u5e93\u7684\u5f62\u5f0f\uff0c\u5e76\u5141\u8bb8\u4f60\u5728\u5176\u4e2d\u8fdb\u884c\u5728\u7ebf\u7f16\u8f91\uff1a \u5de6\u4e0a\u89d2\u662f\u6211\u4eec\u5f53\u524d\u4ed3\u5e93\u7684\u6587\u4ef6\u6e05\u5355\uff0c\u8f83\u5de6\u4fa7\u7a97\u53e3\u662f\u7f16\u8f91\u5668\uff0c\u53f3\u4fa7\u7a97\u53e3\u662f\u5373\u65f6\u9884\u89c8\u7a97\u53e3\u3002\u7c7b\u4f3c\u4e8e Overleaf \u7684\u7f51\u7ad9\u751a\u81f3\u8fd8\u63d0\u4f9b\u4e86\u4ed3\u5e93\u6743\u9650\u7ba1\u7406\u7cfb\u7edf\uff0c\u4f60\u53ef\u4ee5\u9080\u8bf7\u5176\u4ed6\u4eba\u4e00\u8d77\u7f16\u8f91\uff0c\u6216\u662f\u5bfc\u5165\u522b\u4eba\u7f16\u8f91\u597d\u7684\u6a21\u677f\u7ee7\u7eed\u4f60\u7684\u7f16\u8f91\u7b49\u7b49\u3002\u503c\u5f97\u4e00\u63d0\u7684\u662f\u8bb8\u591a\u5b66\u672f\u4f1a\u8bae\u90fd\u4f1a\u7ed9\u51fa\u4ed6\u4eec\u63a5\u53d7\u7684\u8bba\u6587\u7684\u6a21\u677f\u3002 \u9274\u4e8e Overleaf \u9700\u8981\u79d1\u5b66\u4e0a\u7f51\u624d\u80fd\u8bbf\u95ee\uff1a \u8d35\u6821 TUNA \u534f\u4f1a\u7ef4\u62a4\u4e86\u4e00\u4efd Tsinghua Overleaf \uff0c\u9700\u8981\u4f7f\u7528\u6e05\u534e\u7edf\u4e00\u8ba4\u8bc1\u767b\u5f55; \u8d35\u6821\u8d35\u7cfb\u8d35\u534f\u7f51\u7edc\u90e8\u7ef4\u62a4\u4e86\u4e00\u4efd\u81ea\u5df1\u7684\u57fa\u4e8e Overleaf \u7684 LaTeX \u5728\u7ebf\u7f16\u8f91\u7f51\u7ad9 TeX9 \uff0c \u9700\u8981\u4f7f\u7528\u9152\u4e95 ID \u624d\u80fd\u8fdb\u884c\u767b\u5f55 \u3002 \u6211\u4eec\u63a5\u4e0b\u6765\u7684\u6f14\u793a\u4fbf\u662f\u57fa\u4e8e TeX9\u3002","title":"\u5728\u54ea\u91cc\u7f16\u5199 LaTeX\uff1f"},{"location":"basic/latex/#latex_5","text":"\u8bf4\u662f\u7f16\u5199\u57fa\u7840\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u8981\u50cf\u4ecb\u7ecd Markdown \u4e00\u6837\uff0c\u5148\u7b80\u5355\u7f57\u5217\u4e00\u4e9b\u7b80\u5355\u7684\u6587\u6863\u63a7\u5236\u547d\u4ee4\u3002\u5728\u57fa\u7840\u7bc7\u4e2d\u6211\u4eec\u5148\u4ec5\u4ec5\u4ecb\u7ecd\u600e\u6837\u5b9e\u73b0\u4ece Markdown \u5230 LaTeX \u7684\u8fc1\u79fb\u3002\u5bf9\u4e8e\u5176\u4e2d\u4e00\u4e9b\u6587\u6863\u63a7\u5236\u547d\u4ee4\uff0c\u6211\u4eec\u5c06\u4f1a\u5728\u540e\u7eed\u6559\u7a0b\u8be6\u7ec6\u8bf4\u660e\u3002 \u8fd9\u91cc\u63d0\u4f9b CheatSheet \u4f9b\u67e5\u9605\uff1a","title":"LaTeX \u7f16\u5199\u57fa\u7840"},{"location":"basic/latex/#hello-world","text":"\u4e0a\u8ff0\u4fbf\u662f\u4e00\u4efd tex \u6587\u4ef6\u7684\u793a\u4f8b\uff0c\u6211\u4eec\u63a8\u8350\u4f60\u65b0\u5efa\u4e00\u4e2a\u9879\u76ee\uff0c\u7136\u540e\u5c06\u4e0b\u9762\u6211\u4eec\u8981\u4ecb\u7ecd\u7684\u5185\u5bb9\u4e00\u4e00\u5c1d\u8bd5\u3002","title":"Hello, World!"},{"location":"basic/latex/#_2","text":"\u9996\u5148\uff0c\u6211\u4eec\u4e0a\u8ff0\u5df2\u7ecf\u4ecb\u7ecd\u8fc7\uff0c\u652f\u6301\u4e2d\u6587\u5b57\u7b26\u7684\u65b9\u5f0f\u6709\u4e8c\uff0c\u4e00\u79cd\u662f\u5f15\u5165 CJK \u5b8f\u5305\uff0c\u53e6\u4e00\u79cd\u662f\u4f7f\u7528 XeLaTeX \u7f16\u8bd1\u5668\u5e76\u5bf9\u6e90\u7801\u505a\u9002\u5f53\u4fee\u6539\u3002\u8fd9\u91cc\u6211\u4eec\u91c7\u7528\u7b2c\u4e8c\u79cd\u65b9\u5f0f\u3002 \u9996\u5148\uff0c\u6309\u4e0b\u4f60\u9879\u76ee\u5de6\u4e0a\u89d2\u7684 Menu \u6309\u94ae\uff0c\u7136\u540e\u5728 Compiler \u9009\u9879\u4e2d\u9009\u62e9 XeLaTeX \u9009\u9879\u3002 \u7136\u540e\uff0c\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9\uff1a 1 2 3 4 \\documentclass [UTF8] { ctexart } \\begin { document } \u4f60\u597d\uff0cworld! \\end { document } \u8fd9\u6837\u6211\u4eec\u5c31\u5b8c\u6210\u4e86\u4e2d\u6587\u5b57\u7b26\u7684\u5f15\u5165\u3002\u81f3\u4e8e documentclass \u662f\u4ec0\u4e48\uff0c\u6211\u4eec\u5c06\u5728\u540e\u7eed\u4ecb\u7ecd\u3002","title":"\u652f\u6301\u4e2d\u6587\u5b57\u7b26"},{"location":"basic/latex/#_3","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 \\documentclass [UTF8] { ctexart } \\title { Sample Document } \\author { c7w } \\date { \\today } \\begin { document } % \u8fd9\u6761\u63a7\u5236\u547d\u4ee4\u4f1a\u8bfb\u53d6\u5bfc\u8a00\u90e8\u5206\u7684\u6587\u6863\u76f8\u5173\u4fe1\u606f % \u5e76\u5c06\u5176\u6e32\u67d3\u5230\u6587\u6863\u4e2d % \u4e8b\u5b9e\u4e0a\u53ef\u4ee5\u53c2\u8003\u76f8\u5173\u5b8f\u5305\u7684 Doc\uff1a % http://texdoc.net/texmf-dist/doc/latex/titling/titling.pdf \\maketitle \u4f60\u597d\uff0cworld! [\u5728\u8fd9\u91cc\u4f60\u5c31\u5f00\u59cb\u5199\u4f60\u7684\u4f5c\u4e1a\u7b2c\u4e00\u9898\u4e86] \\end { document }","title":"\u5bfc\u8a00\u4e0e\u6587\u6863\u4fe1\u606f"},{"location":"basic/latex/#_4","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 \\documentclass [UTF8] { ctexart } \\title { Sample Document } \\author { c7w } \\date { \\today } \\begin { document } \\maketitle \\section { \u6211\u662f Section \u6807\u9898 } \u6211\u662f Section \u4ecb\u7ecd\u3002 \\subsection { \u6211\u662f Subsection \u6807\u9898 } \u6211\u662f Subsection \u4ecb\u7ecd\u3002 \\subsubsection { \u6211\u662f Subsubsection \u6807\u9898 } \u6211\u662f Subsubsection \u4ecb\u7ecd\u3002 % \\subsubsubsection{\u4e0d\u80fd\u7ee7\u7eed\u5957 sub \u4e86\uff0c\u5230\u5e95\u4e86} \\paragraph { \u6211\u662f Paragraph \u6807\u9898 } \u6211\u662f Paragraph \u540e\u9762\u8ddf\u7740\u5199\u7684\u4e1c\u897f\u3002 \u672c\u4eba\u4e5f\u662f\u7ecf\u8fc7\u4e86\u6df1\u601d\u719f\u8651\uff0c\u5728\u6bcf\u4e2a\u65e5\u65e5\u591c\u591c\u601d\u8003\u8fd9\u4e2a\u95ee\u9898\u3002 \u6211\u4eec\u90fd\u77e5\u9053\uff0c\u53ea\u8981\u6709\u610f\u4e49\uff0c\u90a3\u4e48\u5c31\u5fc5\u987b\u614e\u91cd\u8003\u8651\u3002 \u8fd9\u79cd\u4e8b\u5b9e\u5bf9\u672c\u4eba\u6765\u8bf4\u610f\u4e49\u91cd\u5927\uff0c\u76f8\u4fe1\u5bf9\u8fd9\u4e2a\u4e16\u754c\u4e5f\u662f\u6709\u4e00\u5b9a\u610f\u4e49\u7684\u3002 \u8981\u60f3\u6e05\u695a\uff0c\u4e00\u5929\u6389\u591a\u5c11\u6839\u5934\u53d1\uff0c\u5230\u5e95\u662f\u4e00\u79cd\u600e\u4e48\u6837\u7684\u5b58\u5728\u3002 \u8d1d\u591a\u82ac\u66fe\u7ecf\u8bf4\u8fc7\uff0c\u5353\u8d8a\u7684\u4eba\u4e00\u5927\u4f18\u70b9\u662f\uff1a\u5728\u4e0d\u5229\u4e0e\u8270\u96be\u7684\u906d\u9047\u91cc\u767e\u6298\u4e0d\u9976\u3002 \\subparagraph { \u6211\u662f Subparagraph \u6807\u9898 } \u6211\u662f Subparagraph \u540e\u9762\u8ddf\u7740\u5199\u7684\u4e1c\u897f\u3002 \u8fd9\u4e0d\u7981\u4ee4\u6211\u6df1\u601d\u65e2\u7136\u5982\u4f55\uff0c\u4e00\u5929\u6389\u591a\u5c11\u6839\u5934\u53d1\u7684\u53d1\u751f\uff0c\u5230\u5e95\u9700\u8981\u5982\u4f55\u505a\u5230\uff0c\u4e0d\u4e00\u5929\u6389\u591a\u5c11\u6839\u5934\u53d1\u7684\u53d1\u751f\uff0c\u53c8\u4f1a\u5982\u4f55\u4ea7\u751f\u3002 \u603b\u7ed3\u7684\u6765\u8bf4\uff0c \u6240\u8c13\u4e00\u5929\u6389\u591a\u5c11\u6839\u5934\u53d1\uff0c\u5173\u952e\u662f\u4e00\u5929\u6389\u591a\u5c11\u6839\u5934\u53d1\u9700\u8981\u5982\u4f55\u5199\u3002 \u751f\u6d3b\u4e2d\uff0c\u82e5\u4e00\u5929\u6389\u591a\u5c11\u6839\u5934\u53d1\u51fa\u73b0\u4e86\uff0c\u6211\u4eec\u5c31\u4e0d\u5f97\u4e0d\u8003\u8651\u5b83\u51fa\u73b0\u4e86\u7684\u4e8b\u5b9e\u3002 \u90ed\u6cab\u82e5\u66fe\u7ecf\u8bf4\u8fc7\uff0c\u5f62\u6210\u5929\u624d\u7684\u51b3\u5b9a\u56e0\u7d20\u5e94\u8be5\u662f\u52e4\u594b\u3002\u8fd9\u4e0d\u7981\u4ee4\u6211\u6df1\u601d\u8fd9\u79cd\u4e8b\u5b9e\u5bf9\u672c\u4eba\u6765\u8bf4\u610f\u4e49\u91cd\u5927\uff0c\u76f8\u4fe1\u5bf9\u8fd9\u4e2a\u4e16\u754c\u4e5f\u662f\u6709\u4e00\u5b9a\u610f\u4e49\u7684\u3002 \u6211\u4eec\u4e00\u822c\u8ba4\u4e3a\uff0c\u6293\u4f4f\u4e86\u95ee\u9898\u7684\u5173\u952e\uff0c\u5176\u4ed6\u4e00\u5207\u5219\u4f1a\u8fce\u5203\u800c\u89e3\u3002 \\subsection { \u8fd9\u662f\u7b2c\u4e8c\u8282 } \\paragraph { \u7b2c\u4e8c\u8282 } \u7684\u9996\u6bb5\u3002 \\subparagraph { \u7b2c\u4e8c\u8282 } \u7684\u7b2c\u4e8c\u6bb5\u3002 \\end { document } \u5728\u6587\u6863\u7c7b article / ctexart \u4e2d\uff08\u6587\u6863\u7c7b\u7684\u6982\u5ff5\u6211\u4eec\u4f1a\u5728\u8fdb\u9636\u7bc7\u4e2d\u63d0\u4f9b\u6307\u5bfc\uff09\uff0c\u6211\u4eec\u4f7f\u7528\u8fd9\u4e9b\u63a7\u5236\u5e8f\u5217\u6765\u8c03\u6574\u884c\u6587\u7ec4\u7ec7\u7ed3\u6784\u3002\u4ed6\u4eec\u5206\u522b\u662f\uff1a \\section{\u00b7} \\subsection{\u00b7} \\subsubsection{\u00b7} \\paragraph{\u00b7} \\subparagraph{\u00b7}","title":"\u7ae0\u8282\u4e0e\u6bb5\u843d"},{"location":"basic/latex/#_5","text":"\u6211\u4eec\u5c1d\u8bd5\u5728\u6e32\u67d3\u533a \\maketitle \u540e\u52a0\u5165\u5982\u4e0b\u63a7\u5236\u547d\u4ee4\uff1a 1 \\tableofcontents \u6ca1\u9519\uff0c\u6b63\u5982\u4f60\u6240\u60f3\u7684\uff0c\u8fd9\u5c31\u4f1a\u751f\u6210\u6587\u6863\u7684 TOC\uff1a","title":"\u6587\u6863\u76ee\u5f55"},{"location":"basic/latex/#_6","text":"","title":"\u6570\u5b66\u516c\u5f0f"},{"location":"basic/latex/#_7","text":"\u9996\u5148\u5f15\u5165\u76f8\u5e94\u5305 amsmath \uff0c\u7136\u540e\u6211\u4eec\u7b80\u5355\u4ecb\u7ecd\u516c\u5f0f\u7684\u5f15\u5165\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 \\documentclass [UTF8] { ctexart } \\usepackage { amsmath } % \u6ce8\u610f\u8fd9\u91cc\u5f15\u5165\u76f8\u5e94\u5305 \\title { Sample Document } \\author { c7w } \\date { \\today } \\begin { document } \\maketitle \\tableofcontents \\section { \u6211\u662f Section \u6807\u9898 } \u6211\u662f Section \u4ecb\u7ecd\u3002 \\subsection { \u8fd9\u4e2a Section \u6211\u4eec\u4ecb\u7ecd\u6570\u5b66\u516c\u5f0f\u7684\u5199\u6cd5 } \\subsubsection { \u884c\u5185\u516c\u5f0f } % \u884c\u5185\u516c\u5f0f\u57fa\u672c\u53ef\u4ee5\u7167\u642c Markdown \u7684\u6a21\u5f0f\u3002 \u521d\u59cb\u5904\u7406 1 - 5 \u4f4d\u7684\u521d\u59cb\u5b57\u7b26\u4e32\u96c6\u5408\u9700\u8981\u5904\u7406 $ 18 + 18 ^ 2 + 18 ^ 3 + 18 ^ 4 + 18 ^ 5 = 2 * 10 ^ 6 $ \u7684\u6570\u636e\uff0c\u56e0\u6b64\u9700\u8981 $ O ( T ) $ \u7684\u65f6\u95f4\uff0c\u8fd9\u91cc $ T = 2 * 10 ^ 6 $ \u3002 \\subsubsection { \u884c\u95f4\u516c\u5f0f } % \u884c\u95f4\u516c\u5f0f\u7528 $$ $$ \u6216\u8005 \\[ \\] \u6765\u6846\u4f4f\u90fd\u53ef\u4ee5\uff0c\u4f46\u5728 LaTeX \u4e2d\u524d\u8005\u4f1a\u6539\u53d8\u884c\u6587\u7684\u9ed8\u8ba4\u884c\u95f4\u8ddd\uff0c\u56e0\u6b64\u4e0d\u63a8\u8350\u91c7\u7528\u3002 \\[ \\text {dp} [ i ] = \\text {dp} [ next [ i ]]+ 1 , next [ i ] > 0 . \\] \\end { document }","title":"\u884c\u5185\u516c\u5f0f\u4e0e\u884c\u95f4\u516c\u5f0f"},{"location":"basic/latex/#_8","text":"\u4e0a\u4e0b\u6807\u8bf7\u4f7f\u7528 ^ \u4e0e _ \u6839\u5f0f\u4e0e\u5206\u5f0f\u8bf7\u4f7f\u7528 \\sqrt{\u00b7} \u4e0e \\frac{\u00b7}{\u00b7} \u5728\u884c\u95f4\u516c\u5f0f\u548c\u884c\u5185\u516c\u5f0f\u4e2d\uff0c\u5206\u5f0f\u7684\u8f93\u51fa\u6548\u679c\u662f\u6709\u5dee\u5f02\u7684\u3002\u5982\u679c\u8981\u5f3a\u5236\u884c\u5185\u6a21\u5f0f\u7684\u5206\u5f0f\u663e\u793a\u4e3a\u884c\u95f4\u6a21\u5f0f\u7684\u5927\u5c0f\uff0c\u53ef\u4ee5\u4f7f\u7528 \\dfrac , \u53cd\u4e4b\u53ef\u4ee5\u4f7f\u7528 \\tfrac","title":"\u4e0a\u4e0b\u6807\u3001\u6839\u5f0f\u4e0e\u5206\u5f0f"},{"location":"basic/latex/#_9","text":"\u4e00\u4e9b\u5c0f\u7684\u8fd0\u7b97\u7b26\uff0c\u53ef\u4ee5\u5728\u6570\u5b66\u6a21\u5f0f\u4e0b\u76f4\u63a5\u8f93\u5165\uff1b\u53e6\u4e00\u4e9b\u9700\u8981\u7528\u63a7\u5236\u5e8f\u5217\u751f\u6210\uff0c\u5982 1 2 \\[ \\pm\\; \\times \\; \\div\\; \\cdot\\; \\cap\\; \\cup\\; \\geq\\; \\leq\\; \\neq\\; \\approx \\; \\equiv \\] \u8fde\u52a0\u3001\u8fde\u4e58\u3001\u6781\u9650\u3001\u79ef\u5206\u7b49\u5927\u578b\u8fd0\u7b97\u7b26\u5206\u522b\u7528 \\sum , \\prod , \\lim , \\int \u751f\u6210\u3002\u4ed6\u4eec\u7684\u4e0a\u4e0b\u6807\u5728\u884c\u5185\u516c\u5f0f\u4e2d\u88ab\u538b\u7f29\uff0c\u4ee5\u9002\u5e94\u884c\u9ad8\u3002\u6211\u4eec\u53ef\u4ee5\u7528 \\limits \u548c \\nolimits \u6765\u5f3a\u5236\u663e\u5f0f\u5730\u6307\u5b9a\u662f\u5426\u538b\u7f29\u8fd9\u4e9b\u4e0a\u4e0b\u6807\u3002\u4f8b\u5982\uff1a 1 2 3 4 $ \\sum_{i=1}^n i\\quad \\prod_{i=1}^n $ $ \\sum\\limits _{i=1}^n i\\quad \\prod\\limits _{i=1}^n $ \\[ \\lim_{x\\to0}x^2 \\quad \\int_a^b x^2 dx \\] \\[ \\lim\\nolimits _{x\\to0}x^2\\quad \\int\\nolimits_a^b x^2 dx \\] \u591a\u91cd\u79ef\u5206\u53ef\u4ee5\u4f7f\u7528 \\iint , \\iiint , \\iiiint , \\idotsint \u7b49\u547d\u4ee4\u8f93\u5165\u3002 1 \\[ \\iint\\quad \\iiint\\quad \\iiiint\\quad \\idotsint \\]","title":"\u8fd0\u7b97\u7b26"},{"location":"basic/latex/#_10","text":"\u5404\u79cd\u62ec\u53f7\u7528 () , [] , \\{\\} , \\langle\\rangle \u7b49\u547d\u4ee4\u8868\u793a\uff1b\u6ce8\u610f\u82b1\u62ec\u53f7\u901a\u5e38\u7528\u6765\u8f93\u5165\u547d\u4ee4\u548c\u73af\u5883\u7684\u53c2\u6570\uff0c\u6240\u4ee5\u5728\u6570\u5b66\u516c\u5f0f\u4e2d\u5b83\u4eec\u524d\u9762\u8981\u52a0 \\ \u3002 \u56e0\u4e3a LaTeX \u4e2d | \u548c \\| \u7684\u5e94\u7528\u8fc7\u4e8e\u968f\u610f\uff0camsmath \u5b8f\u5305\u63a8\u8350\u7528 \\lvert\\rvert \u548c \\lVert\\rVert \u53d6\u800c\u4ee3\u4e4b\u3002 \u4e3a\u4e86\u8c03\u6574\u8fd9\u4e9b\u5b9a\u754c\u7b26\u7684\u5927\u5c0f\uff0camsmath \u5b8f\u5305\u63a8\u8350\u4f7f\u7528 \\big , \\Big , \\bigg , \\Bigg \u7b49\u4e00\u7cfb\u5217\u547d\u4ee4\u653e\u5728\u4e0a\u8ff0\u62ec\u53f7\u524d\u9762\u8c03\u6574\u5927\u5c0f\u3002","title":"\u5b9a\u754c\u7b26"},{"location":"basic/latex/#_11","text":"\u7701\u7565\u53f7\u7528 \\dots , \\cdots , \\vdots , \\ddots \u7b49\u547d\u4ee4\u8868\u793a\u3002 \\dots \u548c \\cdots \u7684\u7eb5\u5411\u4f4d\u7f6e\u4e0d\u540c\uff0c\u524d\u8005\u4e00\u822c\u7528\u4e8e\u6709\u4e0b\u6807\u7684\u5e8f\u5217\u3002","title":"\u7701\u7565\u53f7"},{"location":"basic/latex/#_12","text":"amsmath \u7684 pmatrix , bmatrix , Bmatrix , vmatrix , Vmatrix \u7b49\u73af\u5883\u53ef\u4ee5\u5728\u77e9\u9635\u4e24\u8fb9\u52a0\u4e0a\u5404\u79cd\u5206\u9694\u7b26\u3002 1 2 3 4 5 \\[ \\begin{pmatrix} a&b\\\\c&d \\end{pmatrix} \\quad \\begin{bmatrix} a&b\\\\c&d \\end{bmatrix} \\quad \\begin{Bmatrix} a&b\\\\c&d \\end{Bmatrix} \\quad \\begin{vmatrix} a&b\\\\c&d \\end{vmatrix} \\quad \\begin{Vmatrix} a&b\\\\c&d \\end{Vmatrix} \\]","title":"\u77e9\u9635"},{"location":"basic/latex/#_13","text":"\u53ef\u4ee5\u7528 aligned \u73af\u5883\u6765\u5b9e\u73b0\uff0c\u7528 & \u5b9e\u73b0\u4f4d\u7f6e\u5bf9\u9f50\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 \\[ \\begin {aligned} x = a + b + c + \\\\ + d + e + f + g + d + d + d + d + d + d + d + d + d + d + d + d \\\\ + h + i \\\\ + 1 \\\\ \\end {aligned} \\] \\[ \\begin {aligned} x & = a + b + c + \\\\ & + d + e + f + g + d + d + d + d + d + d + d + d + d + d + d + d \\\\ & + h + i \\\\ & + 1 \\\\ \\end {aligned} \\] \u6548\u679c\uff1a \u82e5\u60f3\u8981\u516c\u5f0f\u81ea\u5e26\u7f16\u53f7\uff0c\u53ef\u4ee5\u7528 gather \u548c align \u73af\u5883\uff0c\u5176\u4e2d gather \u73af\u5883\u5c06\u516c\u5f0f\u5206\u884c\u6e32\u67d3\uff0c align \u540c\u4e0a\u8ff0 aligned \uff0c\u53ef\u4ee5\u63a7\u5236\u5bf9\u9f50\uff1a 1 2 3 4 5 6 7 8 9 10 11 \\begin { gather } a = b+c+d \\\\ x = y+z \\\\ p = a _ 1 + a _ 2 + a _ 3 + \\dots + a _{ 200 } \\end { gather } \\begin { align } a & = b+c+d \\\\ x & = y+z \\\\ p & = a _ 1 + a _ 2 + a _ 3 + \\dots + a _{ 200 } \\end { align } \u82e5\u60f3\u4f7f\u7528\u5206\u6bb5\u51fd\u6570\uff0c\u53ef\u4ee5\u4f7f\u7528 cases \u73af\u5883\uff1a 1 2 3 4 5 6 7 \\[ y = \\begin {cases} - x, \\quad x \\leq 0 \\\\ x, \\quad x> 0 \\end {cases} \\]","title":"\u591a\u884c\u516c\u5f0f"},{"location":"basic/latex/#_14","text":"\u6570\u5b66\u516c\u5f0f\u662f\u5728\u5f15\u5165\u4e86 amsmath \u5305\u4e4b\u540e\uff0c\u5229\u7528\u5176\u63d0\u4f9b\u7684\u5404\u79cd\u5404\u6837\u6b21\u73af\u5883\u6765\u5b9e\u73b0\u4e86\u8f83\u4e3a\u590d\u6742\u7684\u516c\u5f0f\u7684\u7f16\u8f91\u3002\u6574\u4f53\u6765\u8bf4\uff0c\u4e0e Mathjax \u7684\u98ce\u683c\u76f8\u5dee\u4e0d\u5927\uff0c\u56e0\u6b64\u8fc1\u79fb\u5b66\u4e60\u8d77\u6765\u4e5f\u5341\u5206\u65b9\u4fbf\u3002 \u8fd9\u91cc\u6211\u4eec\u518d\u63d0\u4f9b\u8f85\u52a9\u5de5\u5177\uff1a https://mathpix.com/ \u80fd\u591f OCR \u624b\u5199\u4f53\u6216\u662f\u5370\u5237\u4f53\u516c\u5f0f\uff0c\u800c\u540e\u5c06\u56fe\u7247\u4e2d\u7684\u516c\u5f0f\u8f6c\u6362\u6210 LaTeX \u6570\u5b66\u516c\u5f0f\u7684\u4ee3\u7801\u3002","title":"\u5c0f\u7ed3"},{"location":"basic/latex/#_15","text":"tabular \u73af\u5883\u63d0\u4f9b\u4e86\u6700\u7b80\u5355\u7684\u8868\u683c\u529f\u80fd\u3002\u5b83\u7528 \\hline \u547d\u4ee4\u8868\u793a\u6a2a\u7ebf\uff0c\u5728\u5217\u683c\u5f0f\u4e2d\u7528 | \u8868\u793a\u7ad6\u7ebf\uff1b\u7528 & \u6765\u5206\u5217\uff0c\u7528 \\\\ \u6765\u6362\u884c\uff1b\u6bcf\u5217\u53ef\u4ee5\u91c7\u7528\u5c45\u5de6\u3001\u5c45\u4e2d\u3001\u5c45\u53f3\u7b49\u6a2a\u5411\u5bf9\u9f50\u65b9\u5f0f\uff0c\u5206\u522b\u7528 l \u3001 c \u3001 r \u6765\u8868\u793a\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 \\begin { tabular }{ |l|c|r| } \\hline \u64cd\u4f5c\u7cfb\u7edf & \u53d1\u884c\u7248 & \u7f16\u8f91\u5668 \\\\ \\hline Windows & MikTeX & TexMakerX \\\\ \\hline Unix/Linux & teTeX & Kile \\\\ \\hline Mac OS & MacTeX & TeXShop \\\\ \\hline \u901a\u7528 & TeX Live & TeXworks \\\\ \\hline \\end { tabular }","title":"\u8868\u683c"},{"location":"basic/latex/#_16","text":"\u5728 LaTeX \u4e2d\u63d2\u5165\u56fe\u7247\uff0c\u6709\u5f88\u591a\u79cd\u65b9\u5f0f\u3002\u6700\u597d\u7528\u7684\u5e94\u5f53\u5c5e\u5229\u7528 graphicx \u5b8f\u5305\u63d0\u4f9b\u7684 \\includegraphics \u547d\u4ee4\u3002\u6bd4\u5982\u4f60\u5728\u4f60\u7684 TeX \u6e90\u6587\u4ef6\u540c\u76ee\u5f55\u4e0b\uff0c\u6709\u540d\u4e3a a.jpg \u7684\u56fe\u7247\uff0c\u4f60\u53ef\u4ee5\u7528\u8fd9\u6837\u7684\u65b9\u5f0f\u5c06\u5b83\u63d2\u5165\u5230\u8f93\u51fa\u6587\u6863\u4e2d\uff1a 1 2 3 4 5 \\documentclass { article } \\usepackage { graphicx } \\begin { document } \\includegraphics { a.jpg } \\end { document } \u60f3\u8981\u4e86\u89e3\u66f4\u591a\uff0c\u53c2\u89c1 graphicx \u7684\u6587\u6863\uff1a http://texdoc.net/texmf-dist/doc/latex/graphics/graphicx.pdf \u3002 \u6d6e\u52a8\u4f53\u73af\u5883 \u4ec0\u4e48\u662f\u6d6e\u52a8\u4f53\u73af\u5883\uff1a table \u4e0e figure \uff0c\u4e24\u79cd\u6d6e\u52a8\u4f53\u73af\u5883\u53ef\u4ee5\u66ff\u4ee3\u4e0a\u8ff0\u7684\u8868\u683c\u548c\u56fe\u7247\u73af\u5883\uff0c\u5b9e\u73b0\u4e3a\u8868\u683c\u6216\u56fe\u7247\u81ea\u52a8\u5b89\u6392\u4f4d\u7f6e\u3002 \u60f3\u4e86\u89e3\u66f4\u591a\u6709\u5173\u6d6e\u52a8\u4f53\u73af\u5883\u7684\u5185\u5bb9\uff0c\u8be6\u89c1 \u8fd9\u91cc \u3002","title":"\u56fe\u7247"},{"location":"basic/latex/#_17","text":"","title":"\u9875\u9762\u8bbe\u7f6e"},{"location":"basic/latex/#_18","text":"\u8bbe\u7f6e\u9875\u8fb9\u8ddd\uff0c\u63a8\u8350\u4f7f\u7528 geometry \u5b8f\u5305\u3002\u53ef\u4ee5\u5728 \u8fd9\u91cc \u67e5\u770b\u5b83\u7684\u8bf4\u660e\u6587\u6863\u3002 \u6bd4\u5982\u6211\u5e0c\u671b\uff0c\u5c06\u7eb8\u5f20\u7684\u957f\u5ea6\u8bbe\u7f6e\u4e3a 20cm\u3001\u5bbd\u5ea6\u8bbe\u7f6e\u4e3a 15cm\u3001\u5de6\u8fb9\u8ddd 1cm\u3001\u53f3\u8fb9\u8ddd 2cm\u3001\u4e0a\u8fb9\u8ddd 3cm\u3001\u4e0b\u8fb9\u8ddd 4cm\uff0c\u53ef\u4ee5\u5728\u5bfc\u8a00\u533a\u52a0\u4e0a\u8fd9\u6837\u51e0\u884c\uff1a 1 2 3 \\usepackage{geometry} \\geometry{papersize={20cm,15cm}} \\geometry{left=1cm,right=2cm,top=3cm,bottom=4cm}","title":"\u9875\u8fb9\u8ddd"},{"location":"basic/latex/#_19","text":"\u8bbe\u7f6e\u9875\u7709\u9875\u811a\uff0c\u63a8\u8350\u4f7f\u7528 fancyhdr \u5b8f\u5305\u3002\u53ef\u4ee5\u5728 \u8fd9\u91cc \u67e5\u770b\u5b83\u7684\u8bf4\u660e\u6587\u6863\u3002 \u6bd4\u5982\u6211\u5e0c\u671b\uff0c\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u9875\u7709\uff1b\u9875\u811a\u7684\u6b63\u4e2d\u5199\u4e0a\u9875\u7801\uff1b\u9875\u7709\u548c\u6b63\u6587\u4e4b\u95f4\u6709\u4e00\u9053\u5bbd\u4e3a 0.4pt \u7684\u6a2a\u7ebf\u5206\u5272\uff0c\u53ef\u4ee5\u5728\u5bfc\u8a00\u533a\u52a0\u4e0a\u5982\u4e0b\u51e0\u884c\uff1a 1 2 3 4 5 6 7 8 9 10 11 \\usepackage { fancyhdr } \\pagestyle { fancy } \\lhead { \u9875\u7709\u5de6\u4fa7 } \\chead { \u9875\u7709\u4e2d\u95f4 } \\rhead { \u9875\u7709\u53f3\u4fa7 } \\lfoot {} \\cfoot { \\thepage } \\rfoot {} \\renewcommand { \\headrulewidth }{ 0.4pt } \\renewcommand { \\headwidth }{ \\textwidth } \\renewcommand { \\footrulewidth }{ 0pt }","title":"\u9875\u7709\u9875\u811a"},{"location":"basic/latex/#_20","text":"\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539\u957f\u5ea6 \\parskip \u7684\u503c\u6765\u8c03\u6574\u6bb5\u95f4\u8ddd\u3002\u4f8b\u5982\u5728\u5bfc\u8a00\u533a\u6dfb\u52a0\u4ee5\u4e0b\u5185\u5bb9 1 \\addtolength{\\parskip}{.4em} \u5219\u53ef\u4ee5\u5728\u539f\u6709\u7684\u57fa\u7840\u4e0a\uff0c\u589e\u52a0\u6bb5\u95f4\u8ddd 0.4em\u3002\u5982\u679c\u9700\u8981\u51cf\u5c0f\u6bb5\u95f4\u8ddd\uff0c\u53ea\u9700\u5c06\u8be5\u6570\u503c\u6539\u4e3a\u8d1f\u503c\u5373\u53ef\u3002","title":"\u6bb5\u95f4\u8ddd"},{"location":"basic/latex/#_21","text":"","title":"\u5f15\u7528\u4e0e\u5c3e\u6ce8\u811a\u6ce8"},{"location":"basic/latex/#_22","text":"\u4ea4\u53c9\u5f15\u7528\u8bbe\u7f6e\u65b9\u6cd5\uff1a \u7ed9\u5bf9\u8c61\u547d\u540d\uff1a \\label{name} \u5f15\u7528\u5bf9\u8c61\uff1a \\ref{name} \u6ce8\u610f\uff0c\u5728\u5f15\u7528\u5bf9\u8c61\u65f6\uff0c \\ref{name} \u4f1a\u88ab\u66ff\u6362\u4f1a\u88ab\u5f15\u7528\u5bf9\u8c61\u7684\u7f16\u53f7\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c\u88ab\u5f15\u7528\u5bf9\u8c61\u5728\u6587\u6863\u4e2d\u662f\u7b2c 5 \u4e2a\u88ab\u547d\u540d\u7684\uff0c\u90a3\u4e48\u8fd9\u91cc\u5c31\u4f1a\u88ab\u66ff\u6362\u4e3a 5. \u8981\u60f3\u907f\u514d\u56fe/\u8868/\u8bba\u6587\u7b49\u7b49\u5f15\u7528\u5728\u8ba1\u6570\u4e0a\u4e92\u76f8\u5f71\u54cd\uff0c\u4f60\u53ef\u4ee5\u5728\u547d\u540d\u65f6\u547d\u540d\u4e3a tag:name \u7684\u683c\u5f0f\uff0c\u5f15\u7528\u65f6\u4f7f\u7528 tag:name \u7684\u683c\u5f0f\u6765\u5f15\u7528\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u8fd9\u4e9b tag \u6709\uff1a Tag Description ch: chapter sec: section subsec: subsection fig: figure tab: table eq: equation lst: code listing itm: enumerated list item alg: algorithm app: appendix subsection","title":"\u4ea4\u53c9\u5f15\u7528"},{"location":"basic/latex/#_23","text":"\u5c3e\u6ce8\u76f4\u63a5\u5728\u6700\u540e\u5199\u5c31\u884c\uff0c\u8bb0\u5f97\u8bbe\u7f6e\u5f15\u7528\u3002 \u811a\u6ce8\u53ef\u4ee5\u4f7f\u7528 \\footnote{\u89d2\u6ce8\u5185\u5bb9} \u6765\u58f0\u660e\u3002 \u60f3\u4e86\u89e3\u8be5\u5982\u4f55\u66f4\u597d\u5730\u5f15\u5165\u53c2\u8003\u6587\u732e\uff0c\u8bf7\u5b66\u4e60 BibTeX \u5b8f\u5305\u3002 https://zh.wikipedia.org/wiki/BibTeX","title":"\u5c3e\u6ce8\u811a\u6ce8"},{"location":"basic/latex/#_24","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 \\begin { enumerate } \\item \\LaTeX {} \u597d \u5904 \u90fd \u6709 \u5565 \\begin { description } \\item [\u597d \u7528] \u4f53 \u9a8c \u597d \u624d \u662f \u771f \u7684 \u597d \\item [\u597d \u770b] \u5f3a \u8feb \u75c7 \u7684 \u798f \u97f3 \\item [\u5f00 \u6e90] \u4f17 \u4eba \u62fe \u67f4 \u706b \u7130 \u9ad8 \\end { description } \\item \u8fd8 \u6709 \u5462? \\begin { itemize } \\item \u597d \u5904 1 \\item \u597d \u5904 2 \\end { itemize } \\end { enumerate }","title":"\u5217\u8868\u4e0e\u679a\u4e3e"},{"location":"basic/latex/#latex_6","text":"","title":"LaTeX \u540e\u7eed\u5b66\u4e60"},{"location":"basic/latex/#_25","text":"\u5b8f\u5305\u4e00\u822c\u90fd\u4f1a\u63d0\u4f9b\u76f8\u5e94\u7684\u6587\u6863\u4f9b\u6211\u4eec\u9605\u8bfb\u4f7f\u7528\u3002 \u8fd9\u91cc\u63d0\u4f9b\u67e5\u8be2\u5b8f\u5305\u5bf9\u5e94\u6587\u6863\u7684\u7f51\u7ad9\uff1a https://texdoc.org/index.html","title":"\u66f4\u591a\u5b8f\u5305"},{"location":"basic/latex/#_26","text":"\u8be6\u89c1\u53c2\u8003\u8d44\u6599\u4e2d .cls \u6587\u4ef6\u8be6\u89e3\u90e8\u5206\u3002\u6211\u4eec\u540c\u65f6\u63a8\u8350\u8bfb\u8005\u53ef\u4ee5\u53bb\u591a\u8bfb\u4e00\u8bfb\u5176\u4ed6\u5df2\u5b58\u5728\u7684 Template \u7684 .cls \u5185\u5bb9\u3002","title":"\u5236\u4f5c\u81ea\u5df1\u7684\u6a21\u677f"},{"location":"basic/latex/#_27","text":"\u4f7f\u7528 Beamer \u5b8f\u5305\u53ef\u4ee5\u5236\u4f5c\u5e7b\u706f\u7247\u3002\u8be6\u89c1\uff1a https://www.overleaf.com/learn/latex/Beamer \u540c\u65f6\uff0c\u6821\u5185\u4e5f\u63d0\u4f9b\u4e86\u4e00\u4e9b\u9002\u7528\u4e8e\u5404\u79cd pre \u7684 Beamer \u6a21\u677f\u3002","title":"\u5236\u4f5c\u5e7b\u706f\u7247"},{"location":"basic/latex/#_28","text":"\uff08\u63a8\u8350\uff09\u4e00\u4efd\u5176\u5b9e\u5f88\u77ed\u7684 LaTeX \u5165\u95e8\u6587\u6863\uff1a https://liam.page/2014/09/08/latex-introduction/ \uff08\u63a8\u8350\uff09\u5982\u4f55\u4f7f\u7528 LaTeX \u6392\u7248\u8bba\u6587\uff1a https://github.com/tuna/thulib-latex-talk \uff08 .cls \u6587\u4ef6\u8be6\u89e3\uff09How to write a LaTeX class file and design your own CV\uff1a https://www.overleaf.com/learn/latex/How_to_write_a_LaTeX_class_file_and_design_your_own_CV_(Part_1 )","title":"\u53c2\u8003\u94fe\u63a5"},{"location":"basic/linux/","text":"Linux \u00b6 \u524d\u7f6e\u77e5\u8bc6 \u00b6 \u6709\u4e00\u53f0\u81ea\u5df1\u7684\u7535\u8111 \u613f\u610f \u52a8\u624b\u5b9e\u8df5 \u7684\u51b3\u5fc3\uff08\u591a\u5c1d\u8bd5\uff09 \u505a\u597d\u7b14\u8bb0\u6574\u7406\u4e0e\u603b\u7ed3\u7684\u80fd\u529b\uff08\u9057\u5fd8\u540e\u4fbf\u4e8e\u5feb\u901f\u56de\u5fc6\uff09 \u5e8f\u8a00 Prologue \u00b6 What is Linux? \u00b6 Linux \u662f\u4e00\u79cd\u81ea\u7531\u548c\u5f00\u653e\u6e90\u7801\u7684\u7c7b UNIX \u64cd\u4f5c\u7cfb\u7edf\uff0c\u5176\u5185\u6838\u7531 Linus Torvalds \u5728 1991 \u5e74\u53d1\u5e03\u3002 Linux \u4e5f\u662f\u81ea\u7531\u8f6f\u4ef6\u548c\u5f00\u653e\u6e90\u4ee3\u7801\u8f6f\u4ef6\u53d1\u5c55\u4e2d\u6700\u8457\u540d\u7684\u4f8b\u5b50\uff0c\u53ea\u8981\u9075\u5faa GNU\uff0c\u4efb\u4f55\u4e2a\u4eba\u548c\u673a\u6784\u90fd\u53ef\u4ee5\u81ea\u7531\u5730\u4f7f\u7528 Linux \u7684\u6240\u6709\u5e95\u5c42\u6e90\u4ee3\u7801\uff0c\u8fd9\u4f7f\u5f97\u5b83\u5f97\u5230\u6765\u81ea\u5168\u4e16\u754c\u8f6f\u4ef6\u7231\u597d\u8005\u548c\u7ec4\u7ec7\u7684\u5f00\u53d1\u652f\u6301\u3002 Linux \u4ee5\u5404\u79cd\u5f62\u5f0f\u88ab\u5e7f\u6cdb\u5e94\u7528\u5728\u5404\u4e2a\u9886\u57df\uff0c\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\uff1a \u670d\u52a1\u5668\u3001\u4e3b\u673a\u3001\u8d85\u7ea7\u8ba1\u7b97\u673a \u5d4c\u5165\u5f0f\u7cfb\u7edf\uff08\u673a\u9876\u76d2\u3001\u79fb\u52a8\u8bbe\u5907\u7b49\uff09 \u57fa\u7840\u8bbe\u65bd\uff08\u7ea2\u7eff\u706f\u3001\u5de5\u4e1a\u4f20\u611f\u5668\uff09 Linux Distros \u00b6 \u6211\u4eec\u5e73\u65f6\u4f7f\u7528\u7684\u201cLinux\u201d\u4e25\u683c\u6765\u8bf4\u662f Linux \u53d1\u884c\u7248\u672c\uff0c\u800c Linux \u72ed\u4e49\u4e0a\u5355\u6307\u64cd\u4f5c\u7cfb\u7edf\u7684\u5185\u6838\u3002 \u53d1\u884c\u7248\u672c\u5728\u5185\u6838\u7684\u57fa\u7840\u4e0a\u8fd8\u5305\u62ec\u5b89\u88c5\u5de5\u5177\u3001\u7cfb\u7edf\u914d\u7f6e\u3001\u56fe\u5f62\u684c\u9762\u754c\u9762\u3001\u5404\u79cd GNU \u8f6f\u4ef6\u7b49\uff0c\u4f7f\u5f97\u8fd9\u4e2a\u7cfb\u7edf\u80fd\u591f\u9002\u7528\u4e8e\u5404\u79cd\u4f7f\u7528\u76ee\u7684\u3002 \u5e38\u89c1\u7684 Linux \u53d1\u884c\u7248\u6709 Debian\u3001Ubuntu\u3001Fedora\u3001CentOS\u3001Arch Linux \u7b49\u3002\u4e0d\u540c\u7684\u53d1\u884c\u7248\u4f7f\u7528\u7684\u8f6f\u4ef6\u4e0d\u540c\uff0c\u6709\u4e9b\u53d1\u884c\u7248\u672c\u662f\u8bbe\u8ba1\u6210\u4e13\u95e8\u7684\u76ee\u7684\uff08\u6bd4\u5982 Kali \u7528\u4e8e\u7f51\u5b89\uff09\u3002 \u6211\u4eec\u4e00\u822c\u4f7f\u7528\u7684\u865a\u62df\u673a\u7684\u53d1\u884c\u7248\u4e3a Ubuntu 20.04\u3002 Ways to use Linux \u00b6 \u6211\u4eec\u63a5\u89e6 Linux \u7684\u65b9\u5f0f\u901a\u5e38\u6709\u4ee5\u4e0b\u51e0\u79cd\uff1a \u5b89\u88c5 Linux \u7cfb\u7edf\uff08\u5355\u7cfb\u7edf\u3001Windows & Linux \u53cc\u7cfb\u7edf\uff09 WSL\uff08\u82f1\u8bed\uff1aWindows Subsystem for Linux\uff09 (Recommended) \u865a\u62df\u673a\uff08Virtualbox\u3001Docker\uff09 \u670d\u52a1\u5668\u8fdc\u7a0b\u8fde\u63a5\uff08SSH\u3001RDP\uff09 \u6211\u63a8\u8350\u6709\u6761\u4ef6\u7684\u540c\u5b66\u7ed9\u7535\u8111\u88c5\u4e00\u4e2aLinux\u7cfb\u7edf\u3002 \u8fd9\u6837\u4f60\u5c31\u80fd\u5728\u5404\u79cd\u914d\u7f6e\u4e2d\u5ea6\u8fc7\u4e00\u6bb5\u6f2b\u957f\u800c\u6709\u8da3\u7684\u65f6\u5149\u4e86 \u3002 Basic Concepts \u00b6 GUI \uff1aGraphical User Interface. \u56fe\u5f62\u7528\u6237\u754c\u9762\uff0c\u5982\u5176\u540d\u3002 CLI \uff1aCommand-Line Interface. \u547d\u4ee4\u884c\u754c\u9762\uff0c\u5982\u5176\u540d\u3002 Shell \uff1a\u4e00\u79cd\u8f6f\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5b83\u89c6\u4e3a\u201c\u7528\u6237\u5230\u5185\u6838\u4e4b\u95f4\u7684\u4e2d\u4ecb\u201d\uff0c\u5b83\u63a5\u53d7\u5e76\u89e3\u6790\uff08\u82f1\u8bed\uff1aParse\uff09\u7528\u6237\u8f93\u5165\u547d\u4ee4\u884c\u7684\u6307\u4ee4\uff0c\u5e76\u8c03\u7528\u5185\u6838\u6240\u63d0\u4f9b\u7684\u5bf9\u5e94\u670d\u52a1\u3002Shell \u7684\u53d1\u660e\u662f\u56e0\u4e3a\u5185\u6838\u5e76\u4e0d\u63d0\u4f9b\u4e0e\u7528\u6237\u4ea4\u4e92\u7684\u65b9\u5f0f\u3002 \u5176\u5b9e Shell \u8fd8\u5206\u4e3a\u56fe\u5f62\u754c\u9762\u548c\u547d\u4ee4\u884c\u754c\u9762\u4e24\u79cd\uff0c\u6bd4\u5982 Windows \u7684\u6587\u4ef6\u6d4f\u89c8\u5668\u3001\u7a0b\u5e8f\u7ba1\u7406\u5668\u90fd\u53ef\u4ee5\u7b97\u662f GUI Shell\uff0c\u4f46\u7528 Linux \u65f6\u6211\u4eec\u4e00\u822c\u8bf4\u7684\u90fd\u662f CLI Shell\u3002 \u5e38\u89c1\u7684 Shell \u5305\u62ec sh\u3001bash\u3001zsh\u3001fish \u7b49\u3002 Terminal \uff1a\u7ec8\u7aef\u7684\u540d\u5b57\u6765\u6e90\u4e8e\u5b83\u5728\u7528\u6237\u548c\u673a\u5668\u4ea4\u4e92\u8fc7\u7a0b\u4e2d\u6240\u5904\u7684\u4f4d\u7f6e\uff1a\u7528\u6237\u5728\u7ec8\u7aef\u8f93\u5165\u3001\u673a\u5668\u901a\u8fc7\u7ec8\u7aef\u8f93\u51fa\uff0c\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u4e0d\u518d\u9700\u8981\u4e13\u95e8\u7684\u786c\u4ef6\u5145\u5f53\u7ec8\u7aef\uff0c\u800c\u662f\u5229\u7528\u4e00\u4e2a\u7a0b\u5e8f\u6765\u6a21\u62df\u5176\u884c\u4e3a\u3002\u5f53\u6211\u4eec\u6253\u5f00\u4e00\u4e2a\u7ec8\u7aef\u6a21\u62df\u5668\uff08\u5982 Windows \u7684 cmd\uff0cLinux \u7684 Konsole\u3001gnome-terminal\uff09\u65f6\uff0c\u4e00\u4e2a Shell \u968f\u5373\u88ab\u8fd0\u884c\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a Shell \u6240\u63d0\u4f9b\u7684 CLI \u8f93\u5165\u6307\u4ee4\u4e86\u3002 \u4e00\u4e2a\u7b80\u5355\u533a\u5206\u4e0a\u8ff0\u672f\u8bed\u7684\u56de\u7b54\uff1a https://askubuntu.com/a/506880 \u3002 Shell 101 \u00b6 \u6253\u5f00\u7ec8\u7aef\uff0c\u754c\u9762\u4e0a\u4f1a\u51fa\u73b0\u7c7b\u4f3c\u4e8e\u4e0b\u9762\u6837\u5b50\u7684\u63d0\u793a\u7b26\uff1a training@SAST-Training:~$ \u3002 \u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u662f\u5f53\u524d\u8eab\u4efd training \uff0c\u4e3b\u673a\u540d SAST-Training \uff0c\u548c\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55 ~ \u4ee5\u53ca\u4e00\u4e2a\u7f8e\u5143\u7b26\u53f7\uff08fish \u4e0b\u662f > \u53f7\uff09\uff0c\u8fd9\u4e2a\u7f8e\u5143\u7b26\u53f7\u8868\u660e\u5f53\u524d\u7528\u6237\u4e0d\u662f root \u3002 \u5982\u679c\u4f60\u7528 root \u8eab\u4efd\u6253\u5f00 Shell\uff0c\u5448\u73b0\u7684\u63d0\u793a\u7b26\u5927\u6982\u662f\u8fd9\u6837 root@SAST-Training:~# \u3002\u5373 # \u7b26\u53f7\u8868\u660e\u4e86 root \u8eab\u4efd\u3002 How does shell run command? \u00b6 \u5728 Shell \u4e2d\u4f60\u6bcf\u6b21\u8f93\u5165\u4e00\u4e2a\u547d\u4ee4\uff0c\u8fd9\u4e2a\u547d\u4ee4\u88ab Shell \u89e3\u6790\u3001\u8fd0\u884c\uff0c\u5e76\u5c06\u7ed3\u679c\u8f93\u51fa\u5230\u7ec8\u7aef\u3002 1 2 training@SAST:~$ echo \"Hello SAST!\" Hello SAST! Shell \u7684\u547d\u4ee4\u7531\u7a7a\u683c\u5206\u5272\uff0c\u7b2c\u4e00\u4e2a\u662f\u8981\u8fd0\u884c\u7684\u7a0b\u5e8f\uff08\u5982\u4e0a\u4f8b echo \uff09\uff0c\u540e\u9762\u8ddf\u5b83\u7684\u53c2\u6570\uff08\u5982\u4e0a\u4f8b \"Hello World!\" \uff09\u3002 \u6ce8\u610f\u5230\u6211\u4eec\u628a\u60f3\u8f93\u51fa\u7684 Hello SAST! \u7528\u5f15\u53f7\u6269\u4e86\u8d77\u6765\uff0c\u8fd9\u6837\u672c\u6765\u7a7a\u683c\u5206\u9694\u7684\u4e24\u4e2a\u8bcd\u5c31\u5408\u5e76\u6210\u4e86\u4e00\u4e2a\u53c2\u6570\u3002\uff08\u5176\u5b9e\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u5e76\u4e0d\u9700\u8981\u5c06\u5b83\u4eec\u5408\u5e76\uff0c\u56e0\u4e3a echo \u6307\u4ee4\u53ef\u4ee5\u63a5\u53d7\u591a\u4e2a\u5b57\u7b26\u4e32\u8f93\u5165\u3002\uff09 \u53ef\u662f Shell \u600e\u4e48\u77e5\u9053 echo \u6307\u7684\u662f\u4ec0\u4e48\u5462\uff1f\u8fd9\u4e9b\u7a0b\u5e8f\u90fd\u662f Shell \u5185\u7f6e\u7684\u5417\uff1f\u5176\u5b9e\u5f53 Shell \u9047\u5230\u5b83\u4e0d\u8ba4\u8bc6\u7684\u7a0b\u5e8f\u5173\u952e\u5b57\u65f6\uff0c\u4f1a\u67e5\u8be2\u73af\u5883\u53d8\u91cf $PATH \uff0c\u5728\u91cc\u9762\u8bb0\u5f55\u7684\u8def\u5f84\u4e2d\u5bfb\u627e echo \u8fd9\u4e2a\u7a0b\u5e8f\uff0c\u5982\u679c\u627e\u5230\u4fbf\u6267\u884c\u3002\u5982\u679c\u6211\u4eec\u60f3\u77e5\u9053\u8fd9\u4e2a\u7a0b\u5e8f\u5b9e\u9645\u6240\u5728\u7684\u4f4d\u7f6e\uff0c\u53ef\u4ee5\u4f7f\u7528 which echo \u3002 1 2 3 4 5 training@SAST:~$ echo $PATH /usr/local/sbin:/usr/local/bin: /usr/sbin:/usr/bin:/sbin:/bin training@SAST:~$ which echo /usr/bin/echo \u6240\u4ee5\u5f53\u6211\u4eec\u6267\u884c echo \"Hello\" \u65f6\uff0c\u5b9e\u8d28\u4e0a\u7b49\u4ef7\u4e8e\u6267\u884c /usr/bin/echo \"Hello\" \uff0c\u540e\u8005\u660e\u786e\u6307\u5b9a\u4e86\u8981\u6267\u884c\u7a0b\u5e8f\u7684\u6240\u5728\u76ee\u5f55\u548c\u5b83\u7684\u540d\u5b57\u3002 Basic Commands \u00b6 \u63a5\u4e0b\u6765\u6211\u4eec\u770b\u4e00\u4e9b\u57fa\u672c\u6307\u4ee4\u3002 Command Description \u76ee\u5f55\u76f8\u5173 pwd \u5f53\u524d\u76ee\u5f55 cd \u5207\u6362\u76ee\u5f55 ls \u67e5\u770b\u76ee\u5f55\u5217\u8868 mkdir \u521b\u5efa\u76ee\u5f55 find \u5728\u5c42\u7ea7\u76ee\u5f55\u4e0b\u641c\u7d22\u6587\u4ef6 \u6587\u4ef6\u76f8\u5173 touch \u521b\u5efa mv \u79fb\u52a8\uff08\u53ef\u7528\u4e8e\u91cd\u547d\u540d\uff09 cp \u62f7\u8d1d rm \u5220\u9664 chmod \u66f4\u6539\u6587\u4ef6\u6743\u9650 chown \u66f4\u6539\u6587\u4ef6\u6240\u5c5e echo \u8f93\u51fa\u63d0\u4f9b\u7684\u6587\u672c file \u67e5\u770b\u6587\u4ef6\u7c7b\u578b cat \u5c06\u6587\u4ef6\u5185\u5bb9\u8f93\u51fa\u5230\u6807\u51c6\u8f93\u51fa \u7528\u6237\u548c\u7ec4\u76f8\u5173 useradd \u521b\u5efa\u7528\u6237 groupadd \u521b\u5efa\u7ec4 passwd \u66f4\u6539\u5bc6\u7801 chpasswd \u6279\u91cf\u66f4\u6539\u5bc6\u7801 su \u4e00\u822c\u7528\u4e8e\u5207\u6362\u7528\u6237 sudo \u4e00\u822c\u7528\u4e8e\u6267\u884c root \u6743\u9650\u6307\u4ee4 \u5176\u4ed6\u4e00\u4e9b\u53ef\u80fd\u7528\u5230\u7684\u6307\u4ee4\u5305\u62ec grep \u3001 ps \u3001 systemctl \u3001 ip \u7b49\u3002 File System \u00b6 \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u7528 ls \u548c cd \u6765\u7ffb\u9605\u7cfb\u7edf\u91cc\u7684\u6587\u4ef6\u4e86\uff01 \u9996\u5148\u662f\u4e00\u4e9b\u57fa\u672c\u7684\u8868\u793a\uff1a / \u8868\u793a\u6839\u8def\u5f84\uff0c ~ \u8868\u793a\u5bb6\u8def\u5f84\uff08 /home/username/ \uff0c\u5982\u679c\u662f roo t\u5219\u4e3a /root/ \uff09\uff0c . \u8868\u793a\u5f53\u524d\u76ee\u5f55\uff0c .. \u8868\u793a\u4e0a\u4e00\u7ea7\u76ee\u5f55\u3002\u8fd9\u4e9b\u8868\u793a\u7701\u53bb\u4e86\u5f88\u591a\u5199\u7edd\u5bf9\u8def\u5f84\u7684\u9ebb\u70e6\u3002\u4f60\u53ef\u4ee5\u8bd5\u8bd5 cd \u5230\u8fd9\u4e9b\u5730\u65b9\uff0c\u7136\u540e\u7528 ls \u67e5\u770b\u76ee\u5f55\u91cc\u7684\u5185\u5bb9\u3002 \u6211\u4eec\u6765\u770b\u770b\u6839\u8def\u5f84\u4e0b\u90fd\u6709\u54ea\u4e9b\u6587\u4ef6\u5939\uff1a /etc \u76ee\u5f55\u662f\u7cfb\u7edf\u6839\u8def\u5f84\u4e0b\u6700\u91cd\u8981\u7684\u76ee\u5f55\u4e4b\u4e00\uff0c\u5b83\u662f\u7528\u6765\u5b58\u50a8\u64cd\u4f5c\u7cfb\u7edf\u6587\u4ef6\u7684\u516c\u5171\u533a\u57df\uff0c\u6bd4\u5982 /etc/sudoers \u3001 /etc/passwd \u5206\u522b\u8bb0\u5f55\u4e86\u62e5\u6709 root \u6743\u9650\u7684\u7528\u6237\u3001\u7cfb\u7edf\u5185\u7684\u6240\u6709\u7528\u6237\u4fe1\u606f\u3002 /var \u76ee\u5f55\u662f\u7cfb\u7edf\u7684\u670d\u52a1\u6216\u5e94\u7528\u9891\u7e41\u5199\u5165\u7684\u5730\u65b9\uff0c\u6bd4\u5982 /var/log \u5b58\u50a8\u4e86\u7a0b\u5e8f\u7684 log \u6587\u4ef6\u3002 /tmp \u91cc\u662f\u4e00\u4e9b\u7a0b\u5e8f\u53ea\u9700\u8981\u8bbf\u95ee\u4e00\u4e24\u6b21\u7684\u6587\u4ef6\uff0c\u6bcf\u5f53\u7cfb\u7edf\u91cd\u542f\u65f6\uff0c\u8fd9\u91cc\u7684\u6587\u4ef6\u90fd\u4f1a\u88ab\u6e05\u7a7a\u3002\u6ce8\u610f\u8fd9\u4e2a\u6587\u4ef6\u5939\u9ed8\u8ba4\u53ef\u88ab\u4efb\u4f55\u7528\u6237\u5199\u5165\u3002 /home \u8fd9\u4e2a\u6587\u4ef6\u5939\u4e0b\u662f\u5404\u4e2a\u7528\u6237\u7684\u5bb6\u76ee\u5f55\u3002 /mnt \u662f\u6570\u636e\u5377\u7684\u6302\u8f7d\u70b9\uff1b\u901a\u8fc7 USB \u7b49\u63a5\u53e3\u8fde\u63a5\u7684\u5916\u90e8\u5a92\u4f53\u4e5f\u53ef\u80fd\u51fa\u73b0\u5728 /media \u6587\u4ef6\u5939\u4e2d\u3002 /srv \u5b58\u653e\u8fd9\u4e2a\u670d\u52a1\u5668\u63d0\u4f9b\u7684\u670d\u52a1\u6240\u9700\u7684\u6587\u4ef6\uff08\u5982\u7f51\u7ad9\u8d44\u6e90\uff09\u3002 Permissions \u00b6 Linux \u7cfb\u7edf\u652f\u6301\u591a\u7528\u6237\u540c\u65f6\u767b\u5f55\u5e76\u6267\u884c\u5404\u81ea\u7684\u4efb\u52a1\u3002\u4e3a\u4e86\u5bf9\u4e0d\u540c\u7528\u6237\u8fdb\u884c\u7ba1\u7406\u63a7\u5236\uff0c\u53ef\u4ee5\u5b9a\u4e49\u7528\u6237\u7ec4\uff08\u82f1\u8bed\uff1agroup\uff09\u6765\u5212\u5206\u4e0d\u540c\u7684\u8bbf\u95ee\u6743\u9650\u3002\u6211\u4eec\u901a\u8fc7\u5177\u4f53\u4f8b\u5b50\u6765\u7406\u89e3\u3002 1 2 3 4 5 training@SAST: /Documents/sast-training $ ls -l total 8 drwxrwxr-x 2 training training 4096 7\u6708 11 22 :31 folder -rw-rw-r-- 1 training training 0 7\u6708 11 20 :16 hello.txt -rwxrwxr-x 1 training training 27 7\u6708 11 22 :33 program.sh \u5bf9\u4e8e\u76ee\u5f55\u4e2d\u6bcf\u4e00\u9879\u5f00\u5934\u7684 \"-rw-rw-r--\"\uff08\u4ee5\u6587\u672c hello.txt \u4e3a\u4f8b\uff09\u5b57\u6837\uff0c\u4e0b\u56fe\u7ed9\u4e86\u4e00\u4e9b\u89e3\u91ca\uff1a \u5f00\u5934\u7b2c\u4e00\u4e2a\u5b57\u7b26\u662f\u7528\u4e8e\u7279\u6b8a\u6743\u9650\u7684 flag \uff0c\u5b83\u6765\u8868\u660e\u8be5\u6587\u4ef6\u7684\u4e00\u4e9b\u7279\u6b8a\u5c5e\u6027\u5982\u6587\u4ef6\u5939\u3001\u8fde\u63a5\u7b49\u3002 \u63a5\u4e0b\u6765\u4e5d\u4e2a flag \u6bcf\u4e09\u4e2a\u4e3a\u4e00\u7ec4\uff0c\u5206\u522b\u4ee3\u8868\u6240\u5c5e\u7528\u6237\u3001\u6240\u5c5e\u7ec4\u3001\u6240\u6709\u5176\u4ed6\u7528\u6237\u5bf9\u4e8e\u8fd9\u4e2a\u6587\u4ef6\u7684 r(read)\u3001w(write)\u3001x(execute) \u4e09\u79cd\u8bbf\u95ee\u7684\u6743\u9650\u3002 \u9664\u4e86\u7528 rwx \u5b57\u7b26\u6765\u8868\u793a\u5916\uff0c\u8fd8\u53ef\u4ee5\u7528\u4e8c\u8fdb\u5236\u7f16\u7801\u8868\u793a\uff0c\u5176\u4e2d r \u4e3a\u6700\u9ad8\u4f4d 4\uff0cw \u4e2d\u95f4\u4f4d 2\uff0cx \u6700\u4f4e\u4f4d 1\u3002\u4f8b\u5982\u53ef\u8bfb\u5199\u53ef\u6267\u884c\u7684\u6743\u9650\u7f16\u7801\u4e3a 7\uff0c\u53ef\u8bfb\u5199\u4e0d\u53ef\u6267\u884c\u4e3a 6\uff0c\u53ef\u8bfb\u53ef\u6267\u884c\u4e3a 5 \u7b49\u3002 \u5bf9\u4e8e\u4e00\u4e9b\u91cd\u8981\u6587\u4ef6\uff0c\u4f60\u5927\u6982\u4e0d\u5e0c\u671b\u7ec4\u5185\u5176\u4ed6\u7528\u6237\u6216\u8005\u4efb\u610f\u7528\u6237\u5bf9\u5b83\u6709\u8fc7\u591a\u7684\u8bbf\u95ee\u6743\u9650\uff1b\u6216\u8005\u5bf9\u4e8e\u4e00\u4e9b\u521a\u5199\u597d\u7684\u811a\u672c\u6587\u4ef6\u9ed8\u8ba4\u4e3a\u53ef\u8bfb\u5199\u4e0d\u53ef\u6267\u884c\uff0c\u4f60\u5e0c\u671b\u80fd\u591f\u83b7\u5f97\u6267\u884c\u5b83\u7684\u6743\u9650\u3002\u8fd9\u65f6\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 chmod \u6307\u4ee4\u6765\u6539\u53d8\u6587\u4ef6\u7684\u6743\u9650\u8bbe\u7f6e\u3002 1 2 3 chmod +x script.sh # \u7ed9\u811a\u672c\u6dfb\u52a0\u53ef\u6267\u884c\u6743\u9650\uff08\u9ed8\u8ba4\u5bf9\u4e8e\u4efb\u4f55\u4eba (a)\uff09 chmod 777 public.py # \u8ba9\u6587\u4ef6\u53ef\u88ab\u4efb\u4f55\u4eba\u8bfb\u5199\u6267\u884c\uff0c777 \u7b49\u4ef7\u4e8e a+rwx chmod o-rw journal.txt # \u7981\u6b62\u7ec4\u5916\u7528\u6237 (o) \u7684\u8bfb\u5199 Shell Operations \u00b6 \u4ee5\u4e0b\u662f\u4e00\u4e9b Shell \u4e2d\u80fd\u7528\u5230\u7684\u64cd\u4f5c\u7b26\u3002\u6700\u597d\u8fd8\u662f\u7ed3\u5408\u5b9e\u9645\u5e94\u7528\u6765\u638c\u63e1\u3002 Operator Description Example & \u5141\u8bb8\u547d\u4ee4\u5728\u540e\u53f0\u6267\u884c cp -r ./here ./there & && \u6267\u884c\u591a\u6761\u6307\u4ee4\uff0c\u903b\u8f91\u548c c++ \u7c7b\u4f3c wget someurl/install.sh . && ./install.sh > \u91cd\u5b9a\u5411\u8f93\u51fa echo \"Hello\" > hello.txt >> \u91cd\u5b9a\u5411\u8f93\u51fa\u5e76\u91c7\u53d6\u201c\u8ffd\u52a0\u201d\u6a21\u5f0f echo cirno >> visitors.txt | \u8fde\u63a5\u524d\u540e\u4e24\u4e2a\u7a0b\u5e8f\u7684\u8f93\u51fa\u548c\u8f93\u5165 ls ~/Documents | grep note.txt Read The Manual \u00b6 1 man <command-name> man \u6307\u4ee4\u662f\u4e86\u89e3\u5404\u79cd\u6307\u4ee4\u5177\u4f53\u7528\u6cd5\u7684\u6700\u5feb\u9014\u5f84\uff0c\u7edd\u5927\u591a\u6570\u7684\u6307\u4ee4\u548c\u8f6f\u4ef6\u90fd\u4f1a\u6709\u5bf9\u5e94\u7684 Manual \u63d0\u4f9b\u67e5\u770b\uff0c\u5728\u91cc\u9762\u4f60\u53ef\u4ee5\u770b\u5230\u6307\u4ee4\u7684\u540d\u79f0\u6765\u6e90\u3001\u4f5c\u8005\u3001\u63cf\u8ff0\u548c\u7528\u6cd5\u7b49\u7b49\u3002 man \u6240\u6253\u5f00\u7684\u754c\u9762\u652f\u6301\u591a\u79cd\u6d4f\u89c8\u65b9\u5f0f\uff0cVim \u7684 J/K\u3001\u65b9\u5411\u952e\u3001\u56de\u8f66\u952e\u3001\u7ffb\u9875\u952e\u7b49\u90fd\u53ef\u4ee5\u4f7f\u7528\uff0c\u5e76\u4e14\u652f\u6301\u641c\u7d22\u529f\u80fd\u3002 \u6bd4\u5982\u6211\u4eec\u60f3\u4e86\u89e3 ls \u7684 -h \u9009\u9879\u7684\u4f5c\u7528\uff0c\u53ef\u4ee5\u5728 man ls \u4e2d\u8f93\u5165 /-h \u5e76\u56de\u8f66\uff0c\u641c\u7d22\u5230\u7684 -h \u9009\u9879\u5c31\u4f1a\u9ad8\u4eae\u663e\u793a\uff0c\u7ee7\u7eed\u56de\u8f66\u627e\u5230\u4e0b\u4e00\u4e2a\u7ed3\u679c\u3002 / \u662f\u5411\u540e\u641c\u7d22\uff0c\u800c ? \u662f\u5411\u524d\u641c\u7d22\u3002 \u5982\u679c\u4f60\u60f3\u67e5\u770b\u5e2e\u52a9\u7684\u8f6f\u4ef6\u51d1\u5de7\u6ca1\u6709\u5bf9\u5e94\u7684 Manual\uff0c\u4f60\u603b\u53ef\u4ee5\u8bd5\u8bd5\u5728\u6307\u4ee4\u540d\u540e\u52a0\u4e0a -h / --help \u9009\u9879\uff0c\u901a\u5e38\u6765\u8bf4\u547d\u4ee4\u8f93\u51fa\u9519\u8bef\u65f6\u5b83\u5c31\u4f1a\u6709 Usage \u7684\u63d0\u793a\u3002 \u7c7b\u4f3c\u7684\u8f6f\u4ef6\u8fd8\u6709 tldr(too long; didn't read)\u3001cheat(cheatsheet)\u3001fuck \u7b49\uff0c\u5b83\u4eec\u662f\u7cbe\u7b80\u7248\u7684 man\uff0c\u63d0\u4f9b\u4e86\u6307\u4ee4\u7684\u5e38\u89c1\u7528\u6cd5\u3002 SSH \u00b6 \u73b0\u5728\u6211\u4eec\u56de\u5230 SSH \u4e0a\u6765\u3002 Executing commands \u00b6 SSH \u53ef\u4ee5\u76f4\u63a5\u8fdc\u7a0b\u6267\u884c\u547d\u4ee4\u800c\u4e0d\u9700\u8981\u8fde\u63a5\u5230\u8fdc\u7a0b\u7684 Shell \u4e2d\uff0c\u5728\u8fde\u63a5\u547d\u4ee4\u540e\u52a0\u4e0a\u9700\u8981\u6267\u884c\u7684\u547d\u4ee4\uff1a 1 ssh foobar@server [ command ] Copying Files \u00b6 scp \u6307\u4ee4\u53ef\u4ee5\u4ece\u8fdc\u7a0b\u62f7\u8d1d\u6587\u4ef6\u5230\u672c\u5730/\u4ece\u672c\u5730\u62f7\u8d1d\u6587\u4ef6\u5230\u8fdc\u7a0b\uff0c\u57fa\u672c\u683c\u5f0f\u662f scp <from> <to> \u3002\u5982\u679c\u8981\u62f7\u8d1d\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u5e94\u8be5\u4f7f\u7528 flag -r \u8868\u793a\u9012\u5f52\u6df1\u5165\u76ee\u5f55\u3002 1 2 3 4 # \u5c06\u672c\u5730\u5f53\u524d\u76ee\u5f55\u7684 test.zip \u62f7\u8d1d\u5230\u8fdc\u7a0b\u7684 ~/test.zip scp test.zip training@153.223.56.12:~/test.zip # \u5c06\u8fdc\u7a0b\u7684 data.csv \u62f7\u8d1d\u5230\u672c\u5730\u5f53\u524d\u76ee\u5f55 scp training@152.32.34.12:~/data.csv . Config File \u00b6 \u6bcf\u6b21\u8fde\u63a5\u670d\u52a1\u5668\u90fd\u8981\u8f93\u5165\u7528\u6237\u540d\u3001IP \u548c\u7aef\u53e3\u672a\u514d\u8fc7\u4e8e\u7e41\u7410\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7f16\u8f91 SSH \u914d\u7f6e\u6587\u4ef6\u6765\u7b80\u5316\u547d\u4ee4\u3002\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\u4f4d\u4e8e\u5bb6\u8def\u5f84\u7684 .ssh \u6587\u4ef6\u5939\u4e0b\uff0c\u540d\u5b57\u4e3a config \uff08\u5982\u679c\u4e0d\u5b58\u5728\u9700\u81ea\u5df1\u521b\u5efa\uff09\uff0c\u5373 ~/.ssh/config \u3002\u5bf9\u4e8e Windows \u7cfb\u7edf\u800c\u8a00\uff0c\u8fd9\u4e2a .ssh \u6587\u4ef6\u5939\u4f4d\u4e8e\u7528\u6237\u76ee\u5f55\u4e0b C:\\Users\\<username>\\.ssh\\config \u3002\u914d\u7f6e\u6587\u4ef6\u5199\u6cd5\u5982\u4e0b\uff1a 1 2 3 4 HOST sast HostName 152.136.177.53 Port 8000 (\u9ed8\u8ba422\uff0c\u6b64\u65f6\u4e0d\u9700\u8981\u6307\u5b9a) User root \u8fd9\u6837\u6bcf\u6b21\u6211\u4eec\u60f3\u8fde\u63a5\u5230 root@152.136.177.53 -p 8000 \u65f6\u53ea\u9700\u8981\u8f93\u5165 ssh sast \u5373\u53ef\u3002 \u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\u540c\u6837\u9002\u7528\u4e8e scp \u547d\u4ee4\uff1a 1 2 3 # \u524d\u4e00\u5c0f\u8282\u4f8b\u5b50\u7684\u7b80\u7565\u7248 scp test.zip sast:~/test.zip scp sast:~/data.csv . Key Authentication \u00b6 SSH \u914d\u7f6e\u6587\u4ef6\u5e76\u4e0d\u80fd\u6307\u5b9a\u767b\u5f55\u65f6\u7684\u5bc6\u7801\uff08\u663e\u7136\u8fd9\u6837\u4f1a\u5f88\u4e0d\u5b89\u5168\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u767b\u5f55\u65f6\u8fd8\u662f\u8981\u8f93\u5165\u5bc6\u7801\u3002\u80fd\u4e0d\u80fd\u8fde\u5bc6\u7801\u90fd\u4e0d\u7528\u8f93\u5165\uff1f \u5229\u7528\u5bc6\u7801\u5b66\u4e2d\u7684\u516c\u94a5-\u79c1\u94a5\u975e\u5bf9\u79f0\u52a0\u5bc6\u673a\u5236\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u670d\u52a1\u5668\u4e2d\u9884\u5b58\u597d\u81ea\u5df1\u7684\u516c\u94a5\uff0c\u5c31\u53ef\u4ee5\u5728\u767b\u5f55\u65f6\u81ea\u52a8\u5316\u9a8c\u8bc1\u6d41\u7a0b\u800c\u514d\u53bb\u5bc6\u7801\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u7684\u5173\u952e\u662f\u5411\u670d\u52a1\u5668 Alice \u8bc1\u660e\u81ea\u5df1\u662f\u6301\u6709\u79c1\u94a5\u7684\u90a3\u4e2a\u5ba2\u6237\u7aef Bob\uff1aAlice \u7528 Bob \u9884\u5b58\u7684\u516c\u94a5\u52a0\u5bc6\u4e00\u4e2a\u7528\u4e8e\u9a8c\u8bc1\u7684\u4e32\u53d1\u7ed9 Bob\uff0cBob \u7528\u79c1\u94a5\u89e3\u5bc6\u5f97\u5230\u8fd9\u4e2a\u4e32\u540e\u53d1\u7ed9 Alice\uff0c\u5c31\u80fd\u8bc1\u660e\u81ea\u5df1\u786e\u5b9e\u6301\u6709\u4e0e\u516c\u94a5\u5bf9\u5e94\u7684\u79c1\u94a5\u3002 \u79d8\u94a5\u751f\u6210 1 ssh-keygen \u6309\u7167\u547d\u4ee4\u884c\u63d0\u793a\u6d41\u7a0b\uff0c\u9ed8\u8ba4\u5728 ~/.ssh \u4e0b\u751f\u6210\u516c\u94a5 id_rsa.pub \u548c\u79c1\u94a5 id_rsa \uff0c\u540e\u8005\u9700\u8981\u59a5\u5584\u4fdd\u5b58\u3002\u901a\u8fc7 ssh-keygen -y -f ~/.ssh/id_rsa \u68c0\u9a8c\u5bc6\u94a5\u7684\u5b58\u5728\u3002 \u5728\u670d\u52a1\u5668\u4e2d\u5b58\u653e\u516c\u94a5 \u5728\u63a5\u53d7 SSH \u8fde\u63a5\u8bf7\u6c42\u65f6\uff0c\u670d\u52a1\u5668\u7684 SSH \u4f1a\u5728\u76ee\u6807\u7528\u6237\u7684 ~/.ssh/authorized_keys \u4e2d\u67e5\u627e\u516c\u94a5\u3002\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5c06\u81ea\u5df1\u7684 id_rsa.pub \u4e2d\u7684\u5185\u5bb9\u8ffd\u52a0\u5230\u670d\u52a1\u5668\u7684 authorized_keys \u4e2d\u3002 1 2 cat ~/.ssh/id_rsa.pub ` ssh training 'mkdir -p ~/.ssh && cat >> ~/.ssh/authorized_keys' # Windows \u4e0b\u8def\u5f84\u4e3a ~/.ssh/id_rsa.pub \u4e0a\u9762\u7684\u547d\u4ee4\u5b8c\u6210\u4e86\u5c06\u672c\u5730\u516c\u94a5\u4fdd\u5b58\u5230\u8fdc\u7a0b\u670d\u52a1\u5668\u7684\u8fc7\u7a0b\uff0c\u7ecf\u8fc7\u4e4b\u524d\u7684\u5b66\u4e60\uff0c\u4f60\u80fd\u7406\u89e3\u8fd9\u4e2a\u547d\u4ee4\u662f\u5982\u4f55\u6267\u884c\u7684\u5417\uff1f ssh-copy-id \u63d0\u4f9b\u4e86\u66f4\u7b80\u4fbf\u7684\u89e3\u51b3\u65b9\u6848\uff1a ssh-copy-id -i ~/.ssh/id_rsa.pub training \u3002 Basic Tools \u00b6 Package Manager \u00b6 \u8f6f\u4ef6\u5305\u7ba1\u7406\u7cfb\u7edf \u662f\u5728\u7535\u8111\u4e2d\u81ea\u52a8\u5b89\u88c5\u3001\u914d\u7f6e\u3001\u5378\u8f7d\u548c\u5347\u7ea7\u8f6f\u4ef6\u5305\u7684\u5de5\u4f5c\u7ec4\u5408\u3002\u4f7f\u7528\u8f6f\u4ef6\u5305\u7ba1\u7406\u7cfb\u7edf\u53ef\u4ee5\u5927\u5927\u7b80\u5316\u5728 Linux \u53d1\u884c\u7248\u4e2d\u5b89\u88c5\u8f6f\u4ef6\u7684\u6d41\u7a0b\u3002\u5e38\u89c1\u7684\u8f6f\u4ef6\u5305\u6709\u4e24\u79cd\u7c7b\u578b\uff1adeb \u8f6f\u4ef6\u5305\uff08\u7531 dpkg \u548c\u5b83\u7684\u524d\u7aef apt \u7ba1\u7406\uff0c\u4f7f\u7528\u4e8e Debian\u3001Ubuntu\uff09\u548c RPM \u8f6f\u4ef6\u5305\uff08\u7531 dnf\u3001yum\u3001ZYpp \u7b49\u524d\u7aef\u7ba1\u7406\uff09\u3002 \u7edd\u5927\u591a\u6570\u7684 Linux \u53d1\u884c\u7248\u90fd\u6709\u5b83\u7684\u5305\u7ba1\u7406\u5668\uff0cUbuntu \u6709 apt \uff0cArch Linx \u6709 pacman \uff0cMacOS \u6709 Homebrew \u3002 \u5305\u7ba1\u7406\u5668\u7684\u6307\u4ee4\u4e00\u822c\u90fd\u5f88\u7b26\u5408\u76f4\u89c2\uff0c\u5982\u679c\u5931\u8d25\u4e86\u53ef\u4ee5\u901a\u8fc7 man \u6216\u8005 help \u67e5\u770b\u7528\u6cd5\u3002 \u7cfb\u7edf\u4e2d\u5305\u7ba1\u7406\u5668\u6240\u4f7f\u7528\u7684\u4ed3\u5e93\u5f80\u5f80\u9ed8\u8ba4\u4f4d\u4e8e\u56fd\u5916\uff0c\u8fd9\u4f7f\u5f97\u6bcf\u6b21\u4ece\u4ed3\u5e93\u62c9\u53d6\u4e1c\u897f\u65f6\u8017\u8d39\u5f88\u957f\u65f6\u95f4\u6216\u8005\u751a\u81f3\u8fde\u4e0d\u4e0a\u3002\u597d\u5728\u6211\u4eec\u56fd\u5185\u6709\u8bb8\u591a\u7684\u955c\u50cf\u6e90\uff0c\u6bd4\u5982\u6e05\u534e\u7684 Tuna\uff0c\u8bbf\u95ee https://mirrors.tuna.tsinghua.edu.cn/help \u53ef\u4ee5\u627e\u5230 Ubuntu \u5728\u5185\u7684\u5404\u79cd\u4ed3\u5e93\u955c\u50cf\u6e90\u914d\u7f6e\u65b9\u6cd5\u3002 Homebrew \u7684\u5b89\u88c5\u65b9\u6cd5\uff1a 1 2 /bin/bash -c \\ \" $( curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh ) \" Vim \u00b6 vimtutor explains it all. vimtutor -g zh for Chinese learner. Tmux \u00b6 \u6211\u4eec\u6bcf\u6b21\u6253\u5f00\u7ec8\u7aef\u6216\u662f SSH \u767b\u5f55\u8fdc\u7a0b\u670d\u52a1\u5668\u65f6\uff0c\u90fd\u662f\u521b\u5efa\u4e86\u4e00\u4e2a\u4f1a\u8bdd\uff08\u82f1\u6587\uff1asession\uff09\u6765\u8fdb\u884c\u4e34\u65f6\u7684\u4ea4\u4e92\uff0c\u6b64\u65f6\u7a97\u53e3\uff08\u6216\u8fde\u63a5\uff09\u662f\u548c\u5b83\u5f00\u542f\u7684\u8fdb\u7a0b\uff08\u6bd4\u5982 Shell\uff09\u7ed1\u5b9a\u5728\u4e00\u8d77\u3002\u5f53\u6211\u4eec\u5173\u95ed\u7a97\u53e3\u6216\u8005\u65ad\u5f00\u8fde\u63a5\u65f6\uff0c\u5bf9\u5e94\u7684\u8fdb\u7a0b\u4e5f\u968f\u4e4b\u7ec8\u6b62\u4e86\u3002 \u4e3a\u4e86\u5728\u4f1a\u8bdd\u7ed3\u675f\u540e\u5176\u5f00\u542f\u7684\u8fdb\u7a0b\u8fd8\u80fd\u7ee7\u7eed\u8fdb\u884c\uff0c\u6211\u4eec\u9700\u8981\u5148\u8fdb\u884c\"\u89e3\u7ed1\"\uff0c\u5728\u540e\u7eed\u9700\u8981\u65f6\u518d\u91cd\u65b0\u8fdb\u884c\u7ed1\u5b9a\u3002Tmux \u5b8c\u6210\u7684\u5c31\u662f\u8fd9\u6837\u4e00\u4e2a\u4efb\u52a1\u3002 1 2 3 4 5 tmux # \u521b\u5efa\u65b0\u7684 Tmux \u4f1a\u8bdd tmux detach # \u5206\u79bb\u5f53\u524d Tmux \u4f1a\u8bdd\uff0c\u5feb\u6377\u952e Ctrl+B D tmux ls # tmux list-session tmux attach -t <session-name> # sessions are labeled by numbers by default tmux kill-session -t <session-name> \u9664\u4e86\u80fd\u591f\u8ba9\u4efb\u52a1\u6301\u7eed\u8fdb\u884c\uff0cTmux \u8fd8\u6709\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u529f\u80fd\u662f\u5206\u7a97\u53e3\u548c\u5206\u5c4f\u3002 1 2 3 4 Ctrl+B % # Split Horizontally Ctrl+B \" # Split Vertically Ctrl+B \u65b9\u5411\u952e # Switch between panes # ... \u8fd9\u4e00\u7cfb\u5217\u64cd\u4f5c\u7684\u5feb\u6377\u952e\u57fa\u672c\u4e0a\u90fd\u662f Ctrl+B xxx\uff0c\u8bf7\u81ea\u884c\u5b66\u4e60\u638c\u63e1\u3002 \u9644\uff1a https://tmuxcheatsheet.com/ \u540e\u7eed\u62d3\u5c55 \u00b6 \u60f3\u8981\u5b66\u4e60\u66f4\u591a Linux \u5185\u5bb9\uff1f TryHackMe \"Linux Fundamentals\" Series https://www.tryhackme.com Missing Semester https://missing.csail.mit.edu/ \u53c2\u8003\u8d44\u6599 \u00b6 2021 \u6691\u57f9\u8bb2\u4e49 by JuneTheRiver \u83dc\u9e1f\u6559\u7a0b https://www.runoob.com/linux/linux-tutorial.html","title":"Linux \u5165\u95e8"},{"location":"basic/linux/#linux","text":"","title":"Linux"},{"location":"basic/linux/#_1","text":"\u6709\u4e00\u53f0\u81ea\u5df1\u7684\u7535\u8111 \u613f\u610f \u52a8\u624b\u5b9e\u8df5 \u7684\u51b3\u5fc3\uff08\u591a\u5c1d\u8bd5\uff09 \u505a\u597d\u7b14\u8bb0\u6574\u7406\u4e0e\u603b\u7ed3\u7684\u80fd\u529b\uff08\u9057\u5fd8\u540e\u4fbf\u4e8e\u5feb\u901f\u56de\u5fc6\uff09","title":"\u524d\u7f6e\u77e5\u8bc6"},{"location":"basic/linux/#prologue","text":"","title":"\u5e8f\u8a00 Prologue"},{"location":"basic/linux/#what-is-linux","text":"Linux \u662f\u4e00\u79cd\u81ea\u7531\u548c\u5f00\u653e\u6e90\u7801\u7684\u7c7b UNIX \u64cd\u4f5c\u7cfb\u7edf\uff0c\u5176\u5185\u6838\u7531 Linus Torvalds \u5728 1991 \u5e74\u53d1\u5e03\u3002 Linux \u4e5f\u662f\u81ea\u7531\u8f6f\u4ef6\u548c\u5f00\u653e\u6e90\u4ee3\u7801\u8f6f\u4ef6\u53d1\u5c55\u4e2d\u6700\u8457\u540d\u7684\u4f8b\u5b50\uff0c\u53ea\u8981\u9075\u5faa GNU\uff0c\u4efb\u4f55\u4e2a\u4eba\u548c\u673a\u6784\u90fd\u53ef\u4ee5\u81ea\u7531\u5730\u4f7f\u7528 Linux \u7684\u6240\u6709\u5e95\u5c42\u6e90\u4ee3\u7801\uff0c\u8fd9\u4f7f\u5f97\u5b83\u5f97\u5230\u6765\u81ea\u5168\u4e16\u754c\u8f6f\u4ef6\u7231\u597d\u8005\u548c\u7ec4\u7ec7\u7684\u5f00\u53d1\u652f\u6301\u3002 Linux \u4ee5\u5404\u79cd\u5f62\u5f0f\u88ab\u5e7f\u6cdb\u5e94\u7528\u5728\u5404\u4e2a\u9886\u57df\uff0c\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\uff1a \u670d\u52a1\u5668\u3001\u4e3b\u673a\u3001\u8d85\u7ea7\u8ba1\u7b97\u673a \u5d4c\u5165\u5f0f\u7cfb\u7edf\uff08\u673a\u9876\u76d2\u3001\u79fb\u52a8\u8bbe\u5907\u7b49\uff09 \u57fa\u7840\u8bbe\u65bd\uff08\u7ea2\u7eff\u706f\u3001\u5de5\u4e1a\u4f20\u611f\u5668\uff09","title":"What is Linux?"},{"location":"basic/linux/#linux-distros","text":"\u6211\u4eec\u5e73\u65f6\u4f7f\u7528\u7684\u201cLinux\u201d\u4e25\u683c\u6765\u8bf4\u662f Linux \u53d1\u884c\u7248\u672c\uff0c\u800c Linux \u72ed\u4e49\u4e0a\u5355\u6307\u64cd\u4f5c\u7cfb\u7edf\u7684\u5185\u6838\u3002 \u53d1\u884c\u7248\u672c\u5728\u5185\u6838\u7684\u57fa\u7840\u4e0a\u8fd8\u5305\u62ec\u5b89\u88c5\u5de5\u5177\u3001\u7cfb\u7edf\u914d\u7f6e\u3001\u56fe\u5f62\u684c\u9762\u754c\u9762\u3001\u5404\u79cd GNU \u8f6f\u4ef6\u7b49\uff0c\u4f7f\u5f97\u8fd9\u4e2a\u7cfb\u7edf\u80fd\u591f\u9002\u7528\u4e8e\u5404\u79cd\u4f7f\u7528\u76ee\u7684\u3002 \u5e38\u89c1\u7684 Linux \u53d1\u884c\u7248\u6709 Debian\u3001Ubuntu\u3001Fedora\u3001CentOS\u3001Arch Linux \u7b49\u3002\u4e0d\u540c\u7684\u53d1\u884c\u7248\u4f7f\u7528\u7684\u8f6f\u4ef6\u4e0d\u540c\uff0c\u6709\u4e9b\u53d1\u884c\u7248\u672c\u662f\u8bbe\u8ba1\u6210\u4e13\u95e8\u7684\u76ee\u7684\uff08\u6bd4\u5982 Kali \u7528\u4e8e\u7f51\u5b89\uff09\u3002 \u6211\u4eec\u4e00\u822c\u4f7f\u7528\u7684\u865a\u62df\u673a\u7684\u53d1\u884c\u7248\u4e3a Ubuntu 20.04\u3002","title":"Linux Distros"},{"location":"basic/linux/#ways-to-use-linux","text":"\u6211\u4eec\u63a5\u89e6 Linux \u7684\u65b9\u5f0f\u901a\u5e38\u6709\u4ee5\u4e0b\u51e0\u79cd\uff1a \u5b89\u88c5 Linux \u7cfb\u7edf\uff08\u5355\u7cfb\u7edf\u3001Windows & Linux \u53cc\u7cfb\u7edf\uff09 WSL\uff08\u82f1\u8bed\uff1aWindows Subsystem for Linux\uff09 (Recommended) \u865a\u62df\u673a\uff08Virtualbox\u3001Docker\uff09 \u670d\u52a1\u5668\u8fdc\u7a0b\u8fde\u63a5\uff08SSH\u3001RDP\uff09 \u6211\u63a8\u8350\u6709\u6761\u4ef6\u7684\u540c\u5b66\u7ed9\u7535\u8111\u88c5\u4e00\u4e2aLinux\u7cfb\u7edf\u3002 \u8fd9\u6837\u4f60\u5c31\u80fd\u5728\u5404\u79cd\u914d\u7f6e\u4e2d\u5ea6\u8fc7\u4e00\u6bb5\u6f2b\u957f\u800c\u6709\u8da3\u7684\u65f6\u5149\u4e86 \u3002","title":"Ways to use Linux"},{"location":"basic/linux/#basic-concepts","text":"GUI \uff1aGraphical User Interface. \u56fe\u5f62\u7528\u6237\u754c\u9762\uff0c\u5982\u5176\u540d\u3002 CLI \uff1aCommand-Line Interface. \u547d\u4ee4\u884c\u754c\u9762\uff0c\u5982\u5176\u540d\u3002 Shell \uff1a\u4e00\u79cd\u8f6f\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5b83\u89c6\u4e3a\u201c\u7528\u6237\u5230\u5185\u6838\u4e4b\u95f4\u7684\u4e2d\u4ecb\u201d\uff0c\u5b83\u63a5\u53d7\u5e76\u89e3\u6790\uff08\u82f1\u8bed\uff1aParse\uff09\u7528\u6237\u8f93\u5165\u547d\u4ee4\u884c\u7684\u6307\u4ee4\uff0c\u5e76\u8c03\u7528\u5185\u6838\u6240\u63d0\u4f9b\u7684\u5bf9\u5e94\u670d\u52a1\u3002Shell \u7684\u53d1\u660e\u662f\u56e0\u4e3a\u5185\u6838\u5e76\u4e0d\u63d0\u4f9b\u4e0e\u7528\u6237\u4ea4\u4e92\u7684\u65b9\u5f0f\u3002 \u5176\u5b9e Shell \u8fd8\u5206\u4e3a\u56fe\u5f62\u754c\u9762\u548c\u547d\u4ee4\u884c\u754c\u9762\u4e24\u79cd\uff0c\u6bd4\u5982 Windows \u7684\u6587\u4ef6\u6d4f\u89c8\u5668\u3001\u7a0b\u5e8f\u7ba1\u7406\u5668\u90fd\u53ef\u4ee5\u7b97\u662f GUI Shell\uff0c\u4f46\u7528 Linux \u65f6\u6211\u4eec\u4e00\u822c\u8bf4\u7684\u90fd\u662f CLI Shell\u3002 \u5e38\u89c1\u7684 Shell \u5305\u62ec sh\u3001bash\u3001zsh\u3001fish \u7b49\u3002 Terminal \uff1a\u7ec8\u7aef\u7684\u540d\u5b57\u6765\u6e90\u4e8e\u5b83\u5728\u7528\u6237\u548c\u673a\u5668\u4ea4\u4e92\u8fc7\u7a0b\u4e2d\u6240\u5904\u7684\u4f4d\u7f6e\uff1a\u7528\u6237\u5728\u7ec8\u7aef\u8f93\u5165\u3001\u673a\u5668\u901a\u8fc7\u7ec8\u7aef\u8f93\u51fa\uff0c\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u4e0d\u518d\u9700\u8981\u4e13\u95e8\u7684\u786c\u4ef6\u5145\u5f53\u7ec8\u7aef\uff0c\u800c\u662f\u5229\u7528\u4e00\u4e2a\u7a0b\u5e8f\u6765\u6a21\u62df\u5176\u884c\u4e3a\u3002\u5f53\u6211\u4eec\u6253\u5f00\u4e00\u4e2a\u7ec8\u7aef\u6a21\u62df\u5668\uff08\u5982 Windows \u7684 cmd\uff0cLinux \u7684 Konsole\u3001gnome-terminal\uff09\u65f6\uff0c\u4e00\u4e2a Shell \u968f\u5373\u88ab\u8fd0\u884c\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a Shell \u6240\u63d0\u4f9b\u7684 CLI \u8f93\u5165\u6307\u4ee4\u4e86\u3002 \u4e00\u4e2a\u7b80\u5355\u533a\u5206\u4e0a\u8ff0\u672f\u8bed\u7684\u56de\u7b54\uff1a https://askubuntu.com/a/506880 \u3002","title":"Basic Concepts"},{"location":"basic/linux/#shell-101","text":"\u6253\u5f00\u7ec8\u7aef\uff0c\u754c\u9762\u4e0a\u4f1a\u51fa\u73b0\u7c7b\u4f3c\u4e8e\u4e0b\u9762\u6837\u5b50\u7684\u63d0\u793a\u7b26\uff1a training@SAST-Training:~$ \u3002 \u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u662f\u5f53\u524d\u8eab\u4efd training \uff0c\u4e3b\u673a\u540d SAST-Training \uff0c\u548c\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55 ~ \u4ee5\u53ca\u4e00\u4e2a\u7f8e\u5143\u7b26\u53f7\uff08fish \u4e0b\u662f > \u53f7\uff09\uff0c\u8fd9\u4e2a\u7f8e\u5143\u7b26\u53f7\u8868\u660e\u5f53\u524d\u7528\u6237\u4e0d\u662f root \u3002 \u5982\u679c\u4f60\u7528 root \u8eab\u4efd\u6253\u5f00 Shell\uff0c\u5448\u73b0\u7684\u63d0\u793a\u7b26\u5927\u6982\u662f\u8fd9\u6837 root@SAST-Training:~# \u3002\u5373 # \u7b26\u53f7\u8868\u660e\u4e86 root \u8eab\u4efd\u3002","title":"Shell 101"},{"location":"basic/linux/#how-does-shell-run-command","text":"\u5728 Shell \u4e2d\u4f60\u6bcf\u6b21\u8f93\u5165\u4e00\u4e2a\u547d\u4ee4\uff0c\u8fd9\u4e2a\u547d\u4ee4\u88ab Shell \u89e3\u6790\u3001\u8fd0\u884c\uff0c\u5e76\u5c06\u7ed3\u679c\u8f93\u51fa\u5230\u7ec8\u7aef\u3002 1 2 training@SAST:~$ echo \"Hello SAST!\" Hello SAST! Shell \u7684\u547d\u4ee4\u7531\u7a7a\u683c\u5206\u5272\uff0c\u7b2c\u4e00\u4e2a\u662f\u8981\u8fd0\u884c\u7684\u7a0b\u5e8f\uff08\u5982\u4e0a\u4f8b echo \uff09\uff0c\u540e\u9762\u8ddf\u5b83\u7684\u53c2\u6570\uff08\u5982\u4e0a\u4f8b \"Hello World!\" \uff09\u3002 \u6ce8\u610f\u5230\u6211\u4eec\u628a\u60f3\u8f93\u51fa\u7684 Hello SAST! \u7528\u5f15\u53f7\u6269\u4e86\u8d77\u6765\uff0c\u8fd9\u6837\u672c\u6765\u7a7a\u683c\u5206\u9694\u7684\u4e24\u4e2a\u8bcd\u5c31\u5408\u5e76\u6210\u4e86\u4e00\u4e2a\u53c2\u6570\u3002\uff08\u5176\u5b9e\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u5e76\u4e0d\u9700\u8981\u5c06\u5b83\u4eec\u5408\u5e76\uff0c\u56e0\u4e3a echo \u6307\u4ee4\u53ef\u4ee5\u63a5\u53d7\u591a\u4e2a\u5b57\u7b26\u4e32\u8f93\u5165\u3002\uff09 \u53ef\u662f Shell \u600e\u4e48\u77e5\u9053 echo \u6307\u7684\u662f\u4ec0\u4e48\u5462\uff1f\u8fd9\u4e9b\u7a0b\u5e8f\u90fd\u662f Shell \u5185\u7f6e\u7684\u5417\uff1f\u5176\u5b9e\u5f53 Shell \u9047\u5230\u5b83\u4e0d\u8ba4\u8bc6\u7684\u7a0b\u5e8f\u5173\u952e\u5b57\u65f6\uff0c\u4f1a\u67e5\u8be2\u73af\u5883\u53d8\u91cf $PATH \uff0c\u5728\u91cc\u9762\u8bb0\u5f55\u7684\u8def\u5f84\u4e2d\u5bfb\u627e echo \u8fd9\u4e2a\u7a0b\u5e8f\uff0c\u5982\u679c\u627e\u5230\u4fbf\u6267\u884c\u3002\u5982\u679c\u6211\u4eec\u60f3\u77e5\u9053\u8fd9\u4e2a\u7a0b\u5e8f\u5b9e\u9645\u6240\u5728\u7684\u4f4d\u7f6e\uff0c\u53ef\u4ee5\u4f7f\u7528 which echo \u3002 1 2 3 4 5 training@SAST:~$ echo $PATH /usr/local/sbin:/usr/local/bin: /usr/sbin:/usr/bin:/sbin:/bin training@SAST:~$ which echo /usr/bin/echo \u6240\u4ee5\u5f53\u6211\u4eec\u6267\u884c echo \"Hello\" \u65f6\uff0c\u5b9e\u8d28\u4e0a\u7b49\u4ef7\u4e8e\u6267\u884c /usr/bin/echo \"Hello\" \uff0c\u540e\u8005\u660e\u786e\u6307\u5b9a\u4e86\u8981\u6267\u884c\u7a0b\u5e8f\u7684\u6240\u5728\u76ee\u5f55\u548c\u5b83\u7684\u540d\u5b57\u3002","title":"How does shell run command?"},{"location":"basic/linux/#basic-commands","text":"\u63a5\u4e0b\u6765\u6211\u4eec\u770b\u4e00\u4e9b\u57fa\u672c\u6307\u4ee4\u3002 Command Description \u76ee\u5f55\u76f8\u5173 pwd \u5f53\u524d\u76ee\u5f55 cd \u5207\u6362\u76ee\u5f55 ls \u67e5\u770b\u76ee\u5f55\u5217\u8868 mkdir \u521b\u5efa\u76ee\u5f55 find \u5728\u5c42\u7ea7\u76ee\u5f55\u4e0b\u641c\u7d22\u6587\u4ef6 \u6587\u4ef6\u76f8\u5173 touch \u521b\u5efa mv \u79fb\u52a8\uff08\u53ef\u7528\u4e8e\u91cd\u547d\u540d\uff09 cp \u62f7\u8d1d rm \u5220\u9664 chmod \u66f4\u6539\u6587\u4ef6\u6743\u9650 chown \u66f4\u6539\u6587\u4ef6\u6240\u5c5e echo \u8f93\u51fa\u63d0\u4f9b\u7684\u6587\u672c file \u67e5\u770b\u6587\u4ef6\u7c7b\u578b cat \u5c06\u6587\u4ef6\u5185\u5bb9\u8f93\u51fa\u5230\u6807\u51c6\u8f93\u51fa \u7528\u6237\u548c\u7ec4\u76f8\u5173 useradd \u521b\u5efa\u7528\u6237 groupadd \u521b\u5efa\u7ec4 passwd \u66f4\u6539\u5bc6\u7801 chpasswd \u6279\u91cf\u66f4\u6539\u5bc6\u7801 su \u4e00\u822c\u7528\u4e8e\u5207\u6362\u7528\u6237 sudo \u4e00\u822c\u7528\u4e8e\u6267\u884c root \u6743\u9650\u6307\u4ee4 \u5176\u4ed6\u4e00\u4e9b\u53ef\u80fd\u7528\u5230\u7684\u6307\u4ee4\u5305\u62ec grep \u3001 ps \u3001 systemctl \u3001 ip \u7b49\u3002","title":"Basic Commands"},{"location":"basic/linux/#file-system","text":"\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u7528 ls \u548c cd \u6765\u7ffb\u9605\u7cfb\u7edf\u91cc\u7684\u6587\u4ef6\u4e86\uff01 \u9996\u5148\u662f\u4e00\u4e9b\u57fa\u672c\u7684\u8868\u793a\uff1a / \u8868\u793a\u6839\u8def\u5f84\uff0c ~ \u8868\u793a\u5bb6\u8def\u5f84\uff08 /home/username/ \uff0c\u5982\u679c\u662f roo t\u5219\u4e3a /root/ \uff09\uff0c . \u8868\u793a\u5f53\u524d\u76ee\u5f55\uff0c .. \u8868\u793a\u4e0a\u4e00\u7ea7\u76ee\u5f55\u3002\u8fd9\u4e9b\u8868\u793a\u7701\u53bb\u4e86\u5f88\u591a\u5199\u7edd\u5bf9\u8def\u5f84\u7684\u9ebb\u70e6\u3002\u4f60\u53ef\u4ee5\u8bd5\u8bd5 cd \u5230\u8fd9\u4e9b\u5730\u65b9\uff0c\u7136\u540e\u7528 ls \u67e5\u770b\u76ee\u5f55\u91cc\u7684\u5185\u5bb9\u3002 \u6211\u4eec\u6765\u770b\u770b\u6839\u8def\u5f84\u4e0b\u90fd\u6709\u54ea\u4e9b\u6587\u4ef6\u5939\uff1a /etc \u76ee\u5f55\u662f\u7cfb\u7edf\u6839\u8def\u5f84\u4e0b\u6700\u91cd\u8981\u7684\u76ee\u5f55\u4e4b\u4e00\uff0c\u5b83\u662f\u7528\u6765\u5b58\u50a8\u64cd\u4f5c\u7cfb\u7edf\u6587\u4ef6\u7684\u516c\u5171\u533a\u57df\uff0c\u6bd4\u5982 /etc/sudoers \u3001 /etc/passwd \u5206\u522b\u8bb0\u5f55\u4e86\u62e5\u6709 root \u6743\u9650\u7684\u7528\u6237\u3001\u7cfb\u7edf\u5185\u7684\u6240\u6709\u7528\u6237\u4fe1\u606f\u3002 /var \u76ee\u5f55\u662f\u7cfb\u7edf\u7684\u670d\u52a1\u6216\u5e94\u7528\u9891\u7e41\u5199\u5165\u7684\u5730\u65b9\uff0c\u6bd4\u5982 /var/log \u5b58\u50a8\u4e86\u7a0b\u5e8f\u7684 log \u6587\u4ef6\u3002 /tmp \u91cc\u662f\u4e00\u4e9b\u7a0b\u5e8f\u53ea\u9700\u8981\u8bbf\u95ee\u4e00\u4e24\u6b21\u7684\u6587\u4ef6\uff0c\u6bcf\u5f53\u7cfb\u7edf\u91cd\u542f\u65f6\uff0c\u8fd9\u91cc\u7684\u6587\u4ef6\u90fd\u4f1a\u88ab\u6e05\u7a7a\u3002\u6ce8\u610f\u8fd9\u4e2a\u6587\u4ef6\u5939\u9ed8\u8ba4\u53ef\u88ab\u4efb\u4f55\u7528\u6237\u5199\u5165\u3002 /home \u8fd9\u4e2a\u6587\u4ef6\u5939\u4e0b\u662f\u5404\u4e2a\u7528\u6237\u7684\u5bb6\u76ee\u5f55\u3002 /mnt \u662f\u6570\u636e\u5377\u7684\u6302\u8f7d\u70b9\uff1b\u901a\u8fc7 USB \u7b49\u63a5\u53e3\u8fde\u63a5\u7684\u5916\u90e8\u5a92\u4f53\u4e5f\u53ef\u80fd\u51fa\u73b0\u5728 /media \u6587\u4ef6\u5939\u4e2d\u3002 /srv \u5b58\u653e\u8fd9\u4e2a\u670d\u52a1\u5668\u63d0\u4f9b\u7684\u670d\u52a1\u6240\u9700\u7684\u6587\u4ef6\uff08\u5982\u7f51\u7ad9\u8d44\u6e90\uff09\u3002","title":"File System"},{"location":"basic/linux/#permissions","text":"Linux \u7cfb\u7edf\u652f\u6301\u591a\u7528\u6237\u540c\u65f6\u767b\u5f55\u5e76\u6267\u884c\u5404\u81ea\u7684\u4efb\u52a1\u3002\u4e3a\u4e86\u5bf9\u4e0d\u540c\u7528\u6237\u8fdb\u884c\u7ba1\u7406\u63a7\u5236\uff0c\u53ef\u4ee5\u5b9a\u4e49\u7528\u6237\u7ec4\uff08\u82f1\u8bed\uff1agroup\uff09\u6765\u5212\u5206\u4e0d\u540c\u7684\u8bbf\u95ee\u6743\u9650\u3002\u6211\u4eec\u901a\u8fc7\u5177\u4f53\u4f8b\u5b50\u6765\u7406\u89e3\u3002 1 2 3 4 5 training@SAST: /Documents/sast-training $ ls -l total 8 drwxrwxr-x 2 training training 4096 7\u6708 11 22 :31 folder -rw-rw-r-- 1 training training 0 7\u6708 11 20 :16 hello.txt -rwxrwxr-x 1 training training 27 7\u6708 11 22 :33 program.sh \u5bf9\u4e8e\u76ee\u5f55\u4e2d\u6bcf\u4e00\u9879\u5f00\u5934\u7684 \"-rw-rw-r--\"\uff08\u4ee5\u6587\u672c hello.txt \u4e3a\u4f8b\uff09\u5b57\u6837\uff0c\u4e0b\u56fe\u7ed9\u4e86\u4e00\u4e9b\u89e3\u91ca\uff1a \u5f00\u5934\u7b2c\u4e00\u4e2a\u5b57\u7b26\u662f\u7528\u4e8e\u7279\u6b8a\u6743\u9650\u7684 flag \uff0c\u5b83\u6765\u8868\u660e\u8be5\u6587\u4ef6\u7684\u4e00\u4e9b\u7279\u6b8a\u5c5e\u6027\u5982\u6587\u4ef6\u5939\u3001\u8fde\u63a5\u7b49\u3002 \u63a5\u4e0b\u6765\u4e5d\u4e2a flag \u6bcf\u4e09\u4e2a\u4e3a\u4e00\u7ec4\uff0c\u5206\u522b\u4ee3\u8868\u6240\u5c5e\u7528\u6237\u3001\u6240\u5c5e\u7ec4\u3001\u6240\u6709\u5176\u4ed6\u7528\u6237\u5bf9\u4e8e\u8fd9\u4e2a\u6587\u4ef6\u7684 r(read)\u3001w(write)\u3001x(execute) \u4e09\u79cd\u8bbf\u95ee\u7684\u6743\u9650\u3002 \u9664\u4e86\u7528 rwx \u5b57\u7b26\u6765\u8868\u793a\u5916\uff0c\u8fd8\u53ef\u4ee5\u7528\u4e8c\u8fdb\u5236\u7f16\u7801\u8868\u793a\uff0c\u5176\u4e2d r \u4e3a\u6700\u9ad8\u4f4d 4\uff0cw \u4e2d\u95f4\u4f4d 2\uff0cx \u6700\u4f4e\u4f4d 1\u3002\u4f8b\u5982\u53ef\u8bfb\u5199\u53ef\u6267\u884c\u7684\u6743\u9650\u7f16\u7801\u4e3a 7\uff0c\u53ef\u8bfb\u5199\u4e0d\u53ef\u6267\u884c\u4e3a 6\uff0c\u53ef\u8bfb\u53ef\u6267\u884c\u4e3a 5 \u7b49\u3002 \u5bf9\u4e8e\u4e00\u4e9b\u91cd\u8981\u6587\u4ef6\uff0c\u4f60\u5927\u6982\u4e0d\u5e0c\u671b\u7ec4\u5185\u5176\u4ed6\u7528\u6237\u6216\u8005\u4efb\u610f\u7528\u6237\u5bf9\u5b83\u6709\u8fc7\u591a\u7684\u8bbf\u95ee\u6743\u9650\uff1b\u6216\u8005\u5bf9\u4e8e\u4e00\u4e9b\u521a\u5199\u597d\u7684\u811a\u672c\u6587\u4ef6\u9ed8\u8ba4\u4e3a\u53ef\u8bfb\u5199\u4e0d\u53ef\u6267\u884c\uff0c\u4f60\u5e0c\u671b\u80fd\u591f\u83b7\u5f97\u6267\u884c\u5b83\u7684\u6743\u9650\u3002\u8fd9\u65f6\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 chmod \u6307\u4ee4\u6765\u6539\u53d8\u6587\u4ef6\u7684\u6743\u9650\u8bbe\u7f6e\u3002 1 2 3 chmod +x script.sh # \u7ed9\u811a\u672c\u6dfb\u52a0\u53ef\u6267\u884c\u6743\u9650\uff08\u9ed8\u8ba4\u5bf9\u4e8e\u4efb\u4f55\u4eba (a)\uff09 chmod 777 public.py # \u8ba9\u6587\u4ef6\u53ef\u88ab\u4efb\u4f55\u4eba\u8bfb\u5199\u6267\u884c\uff0c777 \u7b49\u4ef7\u4e8e a+rwx chmod o-rw journal.txt # \u7981\u6b62\u7ec4\u5916\u7528\u6237 (o) \u7684\u8bfb\u5199","title":"Permissions"},{"location":"basic/linux/#shell-operations","text":"\u4ee5\u4e0b\u662f\u4e00\u4e9b Shell \u4e2d\u80fd\u7528\u5230\u7684\u64cd\u4f5c\u7b26\u3002\u6700\u597d\u8fd8\u662f\u7ed3\u5408\u5b9e\u9645\u5e94\u7528\u6765\u638c\u63e1\u3002 Operator Description Example & \u5141\u8bb8\u547d\u4ee4\u5728\u540e\u53f0\u6267\u884c cp -r ./here ./there & && \u6267\u884c\u591a\u6761\u6307\u4ee4\uff0c\u903b\u8f91\u548c c++ \u7c7b\u4f3c wget someurl/install.sh . && ./install.sh > \u91cd\u5b9a\u5411\u8f93\u51fa echo \"Hello\" > hello.txt >> \u91cd\u5b9a\u5411\u8f93\u51fa\u5e76\u91c7\u53d6\u201c\u8ffd\u52a0\u201d\u6a21\u5f0f echo cirno >> visitors.txt | \u8fde\u63a5\u524d\u540e\u4e24\u4e2a\u7a0b\u5e8f\u7684\u8f93\u51fa\u548c\u8f93\u5165 ls ~/Documents | grep note.txt","title":"Shell Operations"},{"location":"basic/linux/#read-the-manual","text":"1 man <command-name> man \u6307\u4ee4\u662f\u4e86\u89e3\u5404\u79cd\u6307\u4ee4\u5177\u4f53\u7528\u6cd5\u7684\u6700\u5feb\u9014\u5f84\uff0c\u7edd\u5927\u591a\u6570\u7684\u6307\u4ee4\u548c\u8f6f\u4ef6\u90fd\u4f1a\u6709\u5bf9\u5e94\u7684 Manual \u63d0\u4f9b\u67e5\u770b\uff0c\u5728\u91cc\u9762\u4f60\u53ef\u4ee5\u770b\u5230\u6307\u4ee4\u7684\u540d\u79f0\u6765\u6e90\u3001\u4f5c\u8005\u3001\u63cf\u8ff0\u548c\u7528\u6cd5\u7b49\u7b49\u3002 man \u6240\u6253\u5f00\u7684\u754c\u9762\u652f\u6301\u591a\u79cd\u6d4f\u89c8\u65b9\u5f0f\uff0cVim \u7684 J/K\u3001\u65b9\u5411\u952e\u3001\u56de\u8f66\u952e\u3001\u7ffb\u9875\u952e\u7b49\u90fd\u53ef\u4ee5\u4f7f\u7528\uff0c\u5e76\u4e14\u652f\u6301\u641c\u7d22\u529f\u80fd\u3002 \u6bd4\u5982\u6211\u4eec\u60f3\u4e86\u89e3 ls \u7684 -h \u9009\u9879\u7684\u4f5c\u7528\uff0c\u53ef\u4ee5\u5728 man ls \u4e2d\u8f93\u5165 /-h \u5e76\u56de\u8f66\uff0c\u641c\u7d22\u5230\u7684 -h \u9009\u9879\u5c31\u4f1a\u9ad8\u4eae\u663e\u793a\uff0c\u7ee7\u7eed\u56de\u8f66\u627e\u5230\u4e0b\u4e00\u4e2a\u7ed3\u679c\u3002 / \u662f\u5411\u540e\u641c\u7d22\uff0c\u800c ? \u662f\u5411\u524d\u641c\u7d22\u3002 \u5982\u679c\u4f60\u60f3\u67e5\u770b\u5e2e\u52a9\u7684\u8f6f\u4ef6\u51d1\u5de7\u6ca1\u6709\u5bf9\u5e94\u7684 Manual\uff0c\u4f60\u603b\u53ef\u4ee5\u8bd5\u8bd5\u5728\u6307\u4ee4\u540d\u540e\u52a0\u4e0a -h / --help \u9009\u9879\uff0c\u901a\u5e38\u6765\u8bf4\u547d\u4ee4\u8f93\u51fa\u9519\u8bef\u65f6\u5b83\u5c31\u4f1a\u6709 Usage \u7684\u63d0\u793a\u3002 \u7c7b\u4f3c\u7684\u8f6f\u4ef6\u8fd8\u6709 tldr(too long; didn't read)\u3001cheat(cheatsheet)\u3001fuck \u7b49\uff0c\u5b83\u4eec\u662f\u7cbe\u7b80\u7248\u7684 man\uff0c\u63d0\u4f9b\u4e86\u6307\u4ee4\u7684\u5e38\u89c1\u7528\u6cd5\u3002","title":"Read The Manual"},{"location":"basic/linux/#ssh","text":"\u73b0\u5728\u6211\u4eec\u56de\u5230 SSH \u4e0a\u6765\u3002","title":"SSH"},{"location":"basic/linux/#executing-commands","text":"SSH \u53ef\u4ee5\u76f4\u63a5\u8fdc\u7a0b\u6267\u884c\u547d\u4ee4\u800c\u4e0d\u9700\u8981\u8fde\u63a5\u5230\u8fdc\u7a0b\u7684 Shell \u4e2d\uff0c\u5728\u8fde\u63a5\u547d\u4ee4\u540e\u52a0\u4e0a\u9700\u8981\u6267\u884c\u7684\u547d\u4ee4\uff1a 1 ssh foobar@server [ command ]","title":"Executing commands"},{"location":"basic/linux/#copying-files","text":"scp \u6307\u4ee4\u53ef\u4ee5\u4ece\u8fdc\u7a0b\u62f7\u8d1d\u6587\u4ef6\u5230\u672c\u5730/\u4ece\u672c\u5730\u62f7\u8d1d\u6587\u4ef6\u5230\u8fdc\u7a0b\uff0c\u57fa\u672c\u683c\u5f0f\u662f scp <from> <to> \u3002\u5982\u679c\u8981\u62f7\u8d1d\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u5e94\u8be5\u4f7f\u7528 flag -r \u8868\u793a\u9012\u5f52\u6df1\u5165\u76ee\u5f55\u3002 1 2 3 4 # \u5c06\u672c\u5730\u5f53\u524d\u76ee\u5f55\u7684 test.zip \u62f7\u8d1d\u5230\u8fdc\u7a0b\u7684 ~/test.zip scp test.zip training@153.223.56.12:~/test.zip # \u5c06\u8fdc\u7a0b\u7684 data.csv \u62f7\u8d1d\u5230\u672c\u5730\u5f53\u524d\u76ee\u5f55 scp training@152.32.34.12:~/data.csv .","title":"Copying Files"},{"location":"basic/linux/#config-file","text":"\u6bcf\u6b21\u8fde\u63a5\u670d\u52a1\u5668\u90fd\u8981\u8f93\u5165\u7528\u6237\u540d\u3001IP \u548c\u7aef\u53e3\u672a\u514d\u8fc7\u4e8e\u7e41\u7410\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7f16\u8f91 SSH \u914d\u7f6e\u6587\u4ef6\u6765\u7b80\u5316\u547d\u4ee4\u3002\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\u4f4d\u4e8e\u5bb6\u8def\u5f84\u7684 .ssh \u6587\u4ef6\u5939\u4e0b\uff0c\u540d\u5b57\u4e3a config \uff08\u5982\u679c\u4e0d\u5b58\u5728\u9700\u81ea\u5df1\u521b\u5efa\uff09\uff0c\u5373 ~/.ssh/config \u3002\u5bf9\u4e8e Windows \u7cfb\u7edf\u800c\u8a00\uff0c\u8fd9\u4e2a .ssh \u6587\u4ef6\u5939\u4f4d\u4e8e\u7528\u6237\u76ee\u5f55\u4e0b C:\\Users\\<username>\\.ssh\\config \u3002\u914d\u7f6e\u6587\u4ef6\u5199\u6cd5\u5982\u4e0b\uff1a 1 2 3 4 HOST sast HostName 152.136.177.53 Port 8000 (\u9ed8\u8ba422\uff0c\u6b64\u65f6\u4e0d\u9700\u8981\u6307\u5b9a) User root \u8fd9\u6837\u6bcf\u6b21\u6211\u4eec\u60f3\u8fde\u63a5\u5230 root@152.136.177.53 -p 8000 \u65f6\u53ea\u9700\u8981\u8f93\u5165 ssh sast \u5373\u53ef\u3002 \u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\u540c\u6837\u9002\u7528\u4e8e scp \u547d\u4ee4\uff1a 1 2 3 # \u524d\u4e00\u5c0f\u8282\u4f8b\u5b50\u7684\u7b80\u7565\u7248 scp test.zip sast:~/test.zip scp sast:~/data.csv .","title":"Config File"},{"location":"basic/linux/#key-authentication","text":"SSH \u914d\u7f6e\u6587\u4ef6\u5e76\u4e0d\u80fd\u6307\u5b9a\u767b\u5f55\u65f6\u7684\u5bc6\u7801\uff08\u663e\u7136\u8fd9\u6837\u4f1a\u5f88\u4e0d\u5b89\u5168\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u767b\u5f55\u65f6\u8fd8\u662f\u8981\u8f93\u5165\u5bc6\u7801\u3002\u80fd\u4e0d\u80fd\u8fde\u5bc6\u7801\u90fd\u4e0d\u7528\u8f93\u5165\uff1f \u5229\u7528\u5bc6\u7801\u5b66\u4e2d\u7684\u516c\u94a5-\u79c1\u94a5\u975e\u5bf9\u79f0\u52a0\u5bc6\u673a\u5236\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u670d\u52a1\u5668\u4e2d\u9884\u5b58\u597d\u81ea\u5df1\u7684\u516c\u94a5\uff0c\u5c31\u53ef\u4ee5\u5728\u767b\u5f55\u65f6\u81ea\u52a8\u5316\u9a8c\u8bc1\u6d41\u7a0b\u800c\u514d\u53bb\u5bc6\u7801\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u7684\u5173\u952e\u662f\u5411\u670d\u52a1\u5668 Alice \u8bc1\u660e\u81ea\u5df1\u662f\u6301\u6709\u79c1\u94a5\u7684\u90a3\u4e2a\u5ba2\u6237\u7aef Bob\uff1aAlice \u7528 Bob \u9884\u5b58\u7684\u516c\u94a5\u52a0\u5bc6\u4e00\u4e2a\u7528\u4e8e\u9a8c\u8bc1\u7684\u4e32\u53d1\u7ed9 Bob\uff0cBob \u7528\u79c1\u94a5\u89e3\u5bc6\u5f97\u5230\u8fd9\u4e2a\u4e32\u540e\u53d1\u7ed9 Alice\uff0c\u5c31\u80fd\u8bc1\u660e\u81ea\u5df1\u786e\u5b9e\u6301\u6709\u4e0e\u516c\u94a5\u5bf9\u5e94\u7684\u79c1\u94a5\u3002 \u79d8\u94a5\u751f\u6210 1 ssh-keygen \u6309\u7167\u547d\u4ee4\u884c\u63d0\u793a\u6d41\u7a0b\uff0c\u9ed8\u8ba4\u5728 ~/.ssh \u4e0b\u751f\u6210\u516c\u94a5 id_rsa.pub \u548c\u79c1\u94a5 id_rsa \uff0c\u540e\u8005\u9700\u8981\u59a5\u5584\u4fdd\u5b58\u3002\u901a\u8fc7 ssh-keygen -y -f ~/.ssh/id_rsa \u68c0\u9a8c\u5bc6\u94a5\u7684\u5b58\u5728\u3002 \u5728\u670d\u52a1\u5668\u4e2d\u5b58\u653e\u516c\u94a5 \u5728\u63a5\u53d7 SSH \u8fde\u63a5\u8bf7\u6c42\u65f6\uff0c\u670d\u52a1\u5668\u7684 SSH \u4f1a\u5728\u76ee\u6807\u7528\u6237\u7684 ~/.ssh/authorized_keys \u4e2d\u67e5\u627e\u516c\u94a5\u3002\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5c06\u81ea\u5df1\u7684 id_rsa.pub \u4e2d\u7684\u5185\u5bb9\u8ffd\u52a0\u5230\u670d\u52a1\u5668\u7684 authorized_keys \u4e2d\u3002 1 2 cat ~/.ssh/id_rsa.pub ` ssh training 'mkdir -p ~/.ssh && cat >> ~/.ssh/authorized_keys' # Windows \u4e0b\u8def\u5f84\u4e3a ~/.ssh/id_rsa.pub \u4e0a\u9762\u7684\u547d\u4ee4\u5b8c\u6210\u4e86\u5c06\u672c\u5730\u516c\u94a5\u4fdd\u5b58\u5230\u8fdc\u7a0b\u670d\u52a1\u5668\u7684\u8fc7\u7a0b\uff0c\u7ecf\u8fc7\u4e4b\u524d\u7684\u5b66\u4e60\uff0c\u4f60\u80fd\u7406\u89e3\u8fd9\u4e2a\u547d\u4ee4\u662f\u5982\u4f55\u6267\u884c\u7684\u5417\uff1f ssh-copy-id \u63d0\u4f9b\u4e86\u66f4\u7b80\u4fbf\u7684\u89e3\u51b3\u65b9\u6848\uff1a ssh-copy-id -i ~/.ssh/id_rsa.pub training \u3002","title":"Key Authentication"},{"location":"basic/linux/#basic-tools","text":"","title":"Basic Tools"},{"location":"basic/linux/#package-manager","text":"\u8f6f\u4ef6\u5305\u7ba1\u7406\u7cfb\u7edf \u662f\u5728\u7535\u8111\u4e2d\u81ea\u52a8\u5b89\u88c5\u3001\u914d\u7f6e\u3001\u5378\u8f7d\u548c\u5347\u7ea7\u8f6f\u4ef6\u5305\u7684\u5de5\u4f5c\u7ec4\u5408\u3002\u4f7f\u7528\u8f6f\u4ef6\u5305\u7ba1\u7406\u7cfb\u7edf\u53ef\u4ee5\u5927\u5927\u7b80\u5316\u5728 Linux \u53d1\u884c\u7248\u4e2d\u5b89\u88c5\u8f6f\u4ef6\u7684\u6d41\u7a0b\u3002\u5e38\u89c1\u7684\u8f6f\u4ef6\u5305\u6709\u4e24\u79cd\u7c7b\u578b\uff1adeb \u8f6f\u4ef6\u5305\uff08\u7531 dpkg \u548c\u5b83\u7684\u524d\u7aef apt \u7ba1\u7406\uff0c\u4f7f\u7528\u4e8e Debian\u3001Ubuntu\uff09\u548c RPM \u8f6f\u4ef6\u5305\uff08\u7531 dnf\u3001yum\u3001ZYpp \u7b49\u524d\u7aef\u7ba1\u7406\uff09\u3002 \u7edd\u5927\u591a\u6570\u7684 Linux \u53d1\u884c\u7248\u90fd\u6709\u5b83\u7684\u5305\u7ba1\u7406\u5668\uff0cUbuntu \u6709 apt \uff0cArch Linx \u6709 pacman \uff0cMacOS \u6709 Homebrew \u3002 \u5305\u7ba1\u7406\u5668\u7684\u6307\u4ee4\u4e00\u822c\u90fd\u5f88\u7b26\u5408\u76f4\u89c2\uff0c\u5982\u679c\u5931\u8d25\u4e86\u53ef\u4ee5\u901a\u8fc7 man \u6216\u8005 help \u67e5\u770b\u7528\u6cd5\u3002 \u7cfb\u7edf\u4e2d\u5305\u7ba1\u7406\u5668\u6240\u4f7f\u7528\u7684\u4ed3\u5e93\u5f80\u5f80\u9ed8\u8ba4\u4f4d\u4e8e\u56fd\u5916\uff0c\u8fd9\u4f7f\u5f97\u6bcf\u6b21\u4ece\u4ed3\u5e93\u62c9\u53d6\u4e1c\u897f\u65f6\u8017\u8d39\u5f88\u957f\u65f6\u95f4\u6216\u8005\u751a\u81f3\u8fde\u4e0d\u4e0a\u3002\u597d\u5728\u6211\u4eec\u56fd\u5185\u6709\u8bb8\u591a\u7684\u955c\u50cf\u6e90\uff0c\u6bd4\u5982\u6e05\u534e\u7684 Tuna\uff0c\u8bbf\u95ee https://mirrors.tuna.tsinghua.edu.cn/help \u53ef\u4ee5\u627e\u5230 Ubuntu \u5728\u5185\u7684\u5404\u79cd\u4ed3\u5e93\u955c\u50cf\u6e90\u914d\u7f6e\u65b9\u6cd5\u3002 Homebrew \u7684\u5b89\u88c5\u65b9\u6cd5\uff1a 1 2 /bin/bash -c \\ \" $( curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh ) \"","title":"Package Manager"},{"location":"basic/linux/#vim","text":"vimtutor explains it all. vimtutor -g zh for Chinese learner.","title":"Vim"},{"location":"basic/linux/#tmux","text":"\u6211\u4eec\u6bcf\u6b21\u6253\u5f00\u7ec8\u7aef\u6216\u662f SSH \u767b\u5f55\u8fdc\u7a0b\u670d\u52a1\u5668\u65f6\uff0c\u90fd\u662f\u521b\u5efa\u4e86\u4e00\u4e2a\u4f1a\u8bdd\uff08\u82f1\u6587\uff1asession\uff09\u6765\u8fdb\u884c\u4e34\u65f6\u7684\u4ea4\u4e92\uff0c\u6b64\u65f6\u7a97\u53e3\uff08\u6216\u8fde\u63a5\uff09\u662f\u548c\u5b83\u5f00\u542f\u7684\u8fdb\u7a0b\uff08\u6bd4\u5982 Shell\uff09\u7ed1\u5b9a\u5728\u4e00\u8d77\u3002\u5f53\u6211\u4eec\u5173\u95ed\u7a97\u53e3\u6216\u8005\u65ad\u5f00\u8fde\u63a5\u65f6\uff0c\u5bf9\u5e94\u7684\u8fdb\u7a0b\u4e5f\u968f\u4e4b\u7ec8\u6b62\u4e86\u3002 \u4e3a\u4e86\u5728\u4f1a\u8bdd\u7ed3\u675f\u540e\u5176\u5f00\u542f\u7684\u8fdb\u7a0b\u8fd8\u80fd\u7ee7\u7eed\u8fdb\u884c\uff0c\u6211\u4eec\u9700\u8981\u5148\u8fdb\u884c\"\u89e3\u7ed1\"\uff0c\u5728\u540e\u7eed\u9700\u8981\u65f6\u518d\u91cd\u65b0\u8fdb\u884c\u7ed1\u5b9a\u3002Tmux \u5b8c\u6210\u7684\u5c31\u662f\u8fd9\u6837\u4e00\u4e2a\u4efb\u52a1\u3002 1 2 3 4 5 tmux # \u521b\u5efa\u65b0\u7684 Tmux \u4f1a\u8bdd tmux detach # \u5206\u79bb\u5f53\u524d Tmux \u4f1a\u8bdd\uff0c\u5feb\u6377\u952e Ctrl+B D tmux ls # tmux list-session tmux attach -t <session-name> # sessions are labeled by numbers by default tmux kill-session -t <session-name> \u9664\u4e86\u80fd\u591f\u8ba9\u4efb\u52a1\u6301\u7eed\u8fdb\u884c\uff0cTmux \u8fd8\u6709\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u529f\u80fd\u662f\u5206\u7a97\u53e3\u548c\u5206\u5c4f\u3002 1 2 3 4 Ctrl+B % # Split Horizontally Ctrl+B \" # Split Vertically Ctrl+B \u65b9\u5411\u952e # Switch between panes # ... \u8fd9\u4e00\u7cfb\u5217\u64cd\u4f5c\u7684\u5feb\u6377\u952e\u57fa\u672c\u4e0a\u90fd\u662f Ctrl+B xxx\uff0c\u8bf7\u81ea\u884c\u5b66\u4e60\u638c\u63e1\u3002 \u9644\uff1a https://tmuxcheatsheet.com/","title":"Tmux"},{"location":"basic/linux/#_2","text":"\u60f3\u8981\u5b66\u4e60\u66f4\u591a Linux \u5185\u5bb9\uff1f TryHackMe \"Linux Fundamentals\" Series https://www.tryhackme.com Missing Semester https://missing.csail.mit.edu/","title":"\u540e\u7eed\u62d3\u5c55"},{"location":"basic/linux/#_3","text":"2021 \u6691\u57f9\u8bb2\u4e49 by JuneTheRiver \u83dc\u9e1f\u6559\u7a0b https://www.runoob.com/linux/linux-tutorial.html","title":"\u53c2\u8003\u8d44\u6599"},{"location":"basic/markdown/","text":"Markdown \u5165\u95e8 \u00b6 \u524d\u8a00 Markdown \u662f\u4e00\u79cd\u5b66\u4e60\u6210\u672c\u8f83\u4f4e\u7684\u8f7b\u91cf\u7ea7\u6807\u8bb0\u8bed\u8a00\u3002\u5b83\u7528\u7b80\u5355\u7684\u6807\u8bb0\u8bed\u6cd5\u4ee3\u66ff\u6309\u94ae\uff0c\u56e0\u6b64\u80fd\u7701\u53bb\u9891\u7e41\u4f7f\u7528\u9f20\u6807\u8c03\u6574\u6392\u7248\u7684\u9ebb\u70e6\uff0c\u4e3a\u6587\u6863\u7f16\u5199\u8005\u63d0\u4f9b\u4fbf\u5229\u3002\u7528 Markdown \u7f16\u5199\u7684\u5185\u5bb9\u53ef\u5bfc\u51fa\u4e3a HTML\u3001Word\u3001PDF \u7b49\u591a\u79cd\u683c\u5f0f\u7684\u6587\u6863\u3002\u7531\u4e8e\u6613\u8bfb\u6613\u5199\uff0c\u5b83\u5728 GitHub\u3001\u7b80\u4e66\u7b49\u7f51\u7ad9\u4e0a\u4e5f\u6709\u5e7f\u6cdb\u7684\u5e94\u7528\u3002 \u901a\u8fc7\u9605\u8bfb\u672c\u6587\u6863\uff0c\u8bfb\u8005\u53ef\u4ee5\u5728\u4e94\u5206\u949f\u5185\u5feb\u901f\u5b66\u4e60\u5230\u5e38\u7528\u7684 Markdown \u6807\u8bb0\u3002\u66f4\u591a\u7684\u5185\u5bb9\u8bf7\u79fb\u6b65\u83dc\u9e1f\u6559\u7a0b\u3002 \u6211\u4eec\u5f3a\u70c8\u5efa\u8bae\u8ba1\u7b97\u673a\u7c7b\u7684\u540c\u5b66\u4eec\u5728\u5927\u4e00\u7684\u6625\u5b63\u5b66\u671f\u5b66\u4f1a Markdown \u6216 LaTeX \u4e8c\u8005\u4e2d\u5176\u4e2d\u4e4b\u4e00\uff0c\u56e0\u4e3a\u8fd9\u5c06\u662f\u6211\u4eec\u540e\u7eed\u5b9e\u9a8c\u62a5\u544a\u6216\u5927\u4f5c\u4e1a\u62a5\u544a\u5c06\u5229\u7528\u7684\u5e38\u7528\u5de5\u5177\u3002 \u5728\u5f00\u59cb\u5b66\u4e60 Markdown \u8bed\u6cd5\u4e4b\u524d\uff0c\u5efa\u8bae\u5148\u901a\u8fc7 Typora \u5b98\u7f51 \u5b89\u88c5\u597d Typora \u7f16\u8f91\u5668\u3002 \u8bed\u6cd5 \u00b6 \u6807\u9898 \u00b6 \u5171\u6709 1-6 \u7ea7\u6807\u9898\uff0c\u4f7f\u7528 # \u6807\u8bb0\u3002 # \u6570\u91cf\u4e0e\u6807\u9898\u7ea7\u522b\u5bf9\u5e94\u3002\u6ce8\u610f # \u4e0e\u6587\u5b57\u95f4\u7684\u7a7a\u683c\u4e0d\u53ef\u7701\u7565\u3002 1 2 3 #### \u56db\u7ea7\u6807\u9898 ##### \u4e94\u7ea7\u6807\u9898 ###### \u516d\u7ea7\u6807\u9898 \u56db\u7ea7\u6807\u9898 \u00b6 \u4e94\u7ea7\u6807\u9898 \u00b6 \u516d\u7ea7\u6807\u9898 \u00b6 \u5b57\u4f53 \u00b6 1 2 3 4 5 *\u659c\u4f53* _\u659c\u4f53_ **\u7c97\u4f53** __\u7c97\u4f53__ ***\u7c97\u659c\u4f53*** ___\u7c97\u659c\u4f53___ ~~\u5220\u9664\u7ebf~~ <u>\u4e0b\u5212\u7ebf</u> \u659c\u4f53 \u659c\u4f53 \u7c97\u4f53 \u7c97\u4f53 \u7c97\u659c\u4f53 \u7c97\u659c\u4f53 \u5220\u9664\u7ebf \u4e0b\u5212\u7ebf \u5217\u8868 \u00b6 \u65e0\u5e8f\u5217\u8868\u7528 * \u6216 + \u6216 - \u6807\u8bc6\uff0c\u6709\u5e8f\u5217\u8868\u7528\u6570\u5b57\u548c . \u6765\u6807\u8bc6\uff0c\u652f\u6301\u5217\u8868\u5d4c\u5957\u3002 1 2 3 4 5 6 * \u7b2c\u4e00\u9879 + \u7b2c\u4e8c\u9879 - \u7b2c\u4e09\u9879 1. \u5b50\u9879\u4e00 1. \u5b59\u5b50\u9879\u4e00 * \u91cd\u5b59\u5b50\u9879\u4e00 \u7b2c\u4e00\u9879 \u7b2c\u4e8c\u9879 \u7b2c\u4e09\u9879 \u5b50\u9879\u4e00 \u5b59\u5b50\u9879\u4e00 \u91cd\u5b59\u5b50\u9879\u4e00 \u5f15\u7528 \u00b6 1 > \u8fd9\u662f\u4e00\u6761\u65e0\u610f\u4e49\u7684\u5f15\u7528\u3002 \u8fd9\u662f\u4e00\u6761\u65e0\u610f\u4e49\u7684\u5f15\u7528\u3002 \u4ee3\u7801 \u00b6 1 \u52a0\u6cd5\u64cd\u4f5c\u7531 `add()` \u51fd\u6570\u5b8c\u6210 \u52a0\u6cd5\u64cd\u4f5c\u7531 add() \u51fd\u6570\u5b8c\u6210 1 2 3 4 ```Python def add ( a , b ): return a + b ``` 1 2 def add ( a , b ): return a + b \u94fe\u63a5 \u00b6 1 2 [ \u83dc\u9e1f\u6559\u7a0b ]( https://www.runoob.com/markdown/md-tutorial.html ) <https://www.runoob.com/markdown/md-tutorial.html> \u83dc\u9e1f\u6559\u7a0b https://www.runoob.com/markdown/md-tutorial.html \u56fe\u7247 \u00b6 \u63d2\u5165\u56fe\u7247\u9700\u4f9d\u7167 ![alt \u5c5e\u6027\u6587\u672c](\u56fe\u7247\u5730\u5740) \u683c\u5f0f\u3002\u6ce8\u610f\u4e0d\u8981\u4f7f\u7528\u672c\u5730\u8def\u5f84\uff0c\u53ef\u4ee5\u5c06\u56fe\u7247\u4e0a\u4f20\u5230\u6e05\u534e\u4e91\u76d8\u518d\u83b7\u53d6\u56fe\u7247\u94fe\u63a5\u3002 1 ![ \u793a\u4f8b\u56fe\u7247 ]( https://i.loli.net/2021/10/08/R3wUTtaAZHjSxEV.png ) \u5176\u4ed6 \u00b6 Markdown \u8fd8\u6709\u4e00\u4e9b\u9ad8\u7ea7\u73a9\u6cd5\uff0c\u4f8b\u5982\u8868\u683c\u3001\u516c\u5f0f\u3001HTML \u5143\u7d20\u3001\u753b\u65f6\u5e8f\u56fe\u3001\u753b\u6d41\u7a0b\u56fe\u7b49\u7b49\u3002\u7531\u4e8e\u4e0d\u662f\u5f88\u5e38\u7528\uff0c\u8fd9\u4e9b\u90fd\u7559\u7ed9\u6709\u5174\u8da3\u7684\u8bfb\u8005\u81ea\u884c\u63a2\u7d22\u3002 \u53cb\u60c5\u94fe\u63a5\uff1a \u83dc\u9e1f\u6559\u7a0b https://www.runoob.com/markdown/md-tutorial.html \uff08\u63a8\u8350\u5b66\u4e60\uff09 \u516c\u5f0f\u7f16\u8f91\u6559\u7a0b https://www.jianshu.com/p/25f0139637b7 \u7ed8\u5236\u6d41\u7a0b\u56fe\u3001\u65f6\u5e8f\u56fe\u3001\u7518\u7279\u56fe https://www.jianshu.com/p/6dbcc3aff98b","title":"Markdown \u5165\u95e8"},{"location":"basic/markdown/#markdown","text":"\u524d\u8a00 Markdown \u662f\u4e00\u79cd\u5b66\u4e60\u6210\u672c\u8f83\u4f4e\u7684\u8f7b\u91cf\u7ea7\u6807\u8bb0\u8bed\u8a00\u3002\u5b83\u7528\u7b80\u5355\u7684\u6807\u8bb0\u8bed\u6cd5\u4ee3\u66ff\u6309\u94ae\uff0c\u56e0\u6b64\u80fd\u7701\u53bb\u9891\u7e41\u4f7f\u7528\u9f20\u6807\u8c03\u6574\u6392\u7248\u7684\u9ebb\u70e6\uff0c\u4e3a\u6587\u6863\u7f16\u5199\u8005\u63d0\u4f9b\u4fbf\u5229\u3002\u7528 Markdown \u7f16\u5199\u7684\u5185\u5bb9\u53ef\u5bfc\u51fa\u4e3a HTML\u3001Word\u3001PDF \u7b49\u591a\u79cd\u683c\u5f0f\u7684\u6587\u6863\u3002\u7531\u4e8e\u6613\u8bfb\u6613\u5199\uff0c\u5b83\u5728 GitHub\u3001\u7b80\u4e66\u7b49\u7f51\u7ad9\u4e0a\u4e5f\u6709\u5e7f\u6cdb\u7684\u5e94\u7528\u3002 \u901a\u8fc7\u9605\u8bfb\u672c\u6587\u6863\uff0c\u8bfb\u8005\u53ef\u4ee5\u5728\u4e94\u5206\u949f\u5185\u5feb\u901f\u5b66\u4e60\u5230\u5e38\u7528\u7684 Markdown \u6807\u8bb0\u3002\u66f4\u591a\u7684\u5185\u5bb9\u8bf7\u79fb\u6b65\u83dc\u9e1f\u6559\u7a0b\u3002 \u6211\u4eec\u5f3a\u70c8\u5efa\u8bae\u8ba1\u7b97\u673a\u7c7b\u7684\u540c\u5b66\u4eec\u5728\u5927\u4e00\u7684\u6625\u5b63\u5b66\u671f\u5b66\u4f1a Markdown \u6216 LaTeX \u4e8c\u8005\u4e2d\u5176\u4e2d\u4e4b\u4e00\uff0c\u56e0\u4e3a\u8fd9\u5c06\u662f\u6211\u4eec\u540e\u7eed\u5b9e\u9a8c\u62a5\u544a\u6216\u5927\u4f5c\u4e1a\u62a5\u544a\u5c06\u5229\u7528\u7684\u5e38\u7528\u5de5\u5177\u3002 \u5728\u5f00\u59cb\u5b66\u4e60 Markdown \u8bed\u6cd5\u4e4b\u524d\uff0c\u5efa\u8bae\u5148\u901a\u8fc7 Typora \u5b98\u7f51 \u5b89\u88c5\u597d Typora \u7f16\u8f91\u5668\u3002","title":"Markdown \u5165\u95e8"},{"location":"basic/markdown/#_1","text":"","title":"\u8bed\u6cd5"},{"location":"basic/markdown/#_2","text":"\u5171\u6709 1-6 \u7ea7\u6807\u9898\uff0c\u4f7f\u7528 # \u6807\u8bb0\u3002 # \u6570\u91cf\u4e0e\u6807\u9898\u7ea7\u522b\u5bf9\u5e94\u3002\u6ce8\u610f # \u4e0e\u6587\u5b57\u95f4\u7684\u7a7a\u683c\u4e0d\u53ef\u7701\u7565\u3002 1 2 3 #### \u56db\u7ea7\u6807\u9898 ##### \u4e94\u7ea7\u6807\u9898 ###### \u516d\u7ea7\u6807\u9898","title":"\u6807\u9898"},{"location":"basic/markdown/#_3","text":"","title":"\u56db\u7ea7\u6807\u9898"},{"location":"basic/markdown/#_4","text":"","title":"\u4e94\u7ea7\u6807\u9898"},{"location":"basic/markdown/#_5","text":"","title":"\u516d\u7ea7\u6807\u9898"},{"location":"basic/markdown/#_6","text":"1 2 3 4 5 *\u659c\u4f53* _\u659c\u4f53_ **\u7c97\u4f53** __\u7c97\u4f53__ ***\u7c97\u659c\u4f53*** ___\u7c97\u659c\u4f53___ ~~\u5220\u9664\u7ebf~~ <u>\u4e0b\u5212\u7ebf</u> \u659c\u4f53 \u659c\u4f53 \u7c97\u4f53 \u7c97\u4f53 \u7c97\u659c\u4f53 \u7c97\u659c\u4f53 \u5220\u9664\u7ebf \u4e0b\u5212\u7ebf","title":"\u5b57\u4f53"},{"location":"basic/markdown/#_7","text":"\u65e0\u5e8f\u5217\u8868\u7528 * \u6216 + \u6216 - \u6807\u8bc6\uff0c\u6709\u5e8f\u5217\u8868\u7528\u6570\u5b57\u548c . \u6765\u6807\u8bc6\uff0c\u652f\u6301\u5217\u8868\u5d4c\u5957\u3002 1 2 3 4 5 6 * \u7b2c\u4e00\u9879 + \u7b2c\u4e8c\u9879 - \u7b2c\u4e09\u9879 1. \u5b50\u9879\u4e00 1. \u5b59\u5b50\u9879\u4e00 * \u91cd\u5b59\u5b50\u9879\u4e00 \u7b2c\u4e00\u9879 \u7b2c\u4e8c\u9879 \u7b2c\u4e09\u9879 \u5b50\u9879\u4e00 \u5b59\u5b50\u9879\u4e00 \u91cd\u5b59\u5b50\u9879\u4e00","title":"\u5217\u8868"},{"location":"basic/markdown/#_8","text":"1 > \u8fd9\u662f\u4e00\u6761\u65e0\u610f\u4e49\u7684\u5f15\u7528\u3002 \u8fd9\u662f\u4e00\u6761\u65e0\u610f\u4e49\u7684\u5f15\u7528\u3002","title":"\u5f15\u7528"},{"location":"basic/markdown/#_9","text":"1 \u52a0\u6cd5\u64cd\u4f5c\u7531 `add()` \u51fd\u6570\u5b8c\u6210 \u52a0\u6cd5\u64cd\u4f5c\u7531 add() \u51fd\u6570\u5b8c\u6210 1 2 3 4 ```Python def add ( a , b ): return a + b ``` 1 2 def add ( a , b ): return a + b","title":"\u4ee3\u7801"},{"location":"basic/markdown/#_10","text":"1 2 [ \u83dc\u9e1f\u6559\u7a0b ]( https://www.runoob.com/markdown/md-tutorial.html ) <https://www.runoob.com/markdown/md-tutorial.html> \u83dc\u9e1f\u6559\u7a0b https://www.runoob.com/markdown/md-tutorial.html","title":"\u94fe\u63a5"},{"location":"basic/markdown/#_11","text":"\u63d2\u5165\u56fe\u7247\u9700\u4f9d\u7167 ![alt \u5c5e\u6027\u6587\u672c](\u56fe\u7247\u5730\u5740) \u683c\u5f0f\u3002\u6ce8\u610f\u4e0d\u8981\u4f7f\u7528\u672c\u5730\u8def\u5f84\uff0c\u53ef\u4ee5\u5c06\u56fe\u7247\u4e0a\u4f20\u5230\u6e05\u534e\u4e91\u76d8\u518d\u83b7\u53d6\u56fe\u7247\u94fe\u63a5\u3002 1 ![ \u793a\u4f8b\u56fe\u7247 ]( https://i.loli.net/2021/10/08/R3wUTtaAZHjSxEV.png )","title":"\u56fe\u7247"},{"location":"basic/markdown/#_12","text":"Markdown \u8fd8\u6709\u4e00\u4e9b\u9ad8\u7ea7\u73a9\u6cd5\uff0c\u4f8b\u5982\u8868\u683c\u3001\u516c\u5f0f\u3001HTML \u5143\u7d20\u3001\u753b\u65f6\u5e8f\u56fe\u3001\u753b\u6d41\u7a0b\u56fe\u7b49\u7b49\u3002\u7531\u4e8e\u4e0d\u662f\u5f88\u5e38\u7528\uff0c\u8fd9\u4e9b\u90fd\u7559\u7ed9\u6709\u5174\u8da3\u7684\u8bfb\u8005\u81ea\u884c\u63a2\u7d22\u3002 \u53cb\u60c5\u94fe\u63a5\uff1a \u83dc\u9e1f\u6559\u7a0b https://www.runoob.com/markdown/md-tutorial.html \uff08\u63a8\u8350\u5b66\u4e60\uff09 \u516c\u5f0f\u7f16\u8f91\u6559\u7a0b https://www.jianshu.com/p/25f0139637b7 \u7ed8\u5236\u6d41\u7a0b\u56fe\u3001\u65f6\u5e8f\u56fe\u3001\u7518\u7279\u56fe https://www.jianshu.com/p/6dbcc3aff98b","title":"\u5176\u4ed6"},{"location":"basic/search-engine/","text":"\u7f16\u8f91\u8005\u62db\u52df \u6211\u4eec\u6b63\u5728\u5bfb\u627e\u8fd9\u4e00\u7bc7\u6587\u6863\u7684\u7f16\u8f91\u8005\u3002","title":"\u5982\u4f55\u4f7f\u7528\u641c\u7d22\u5f15\u64ce"},{"location":"basic/vscode/","text":"VSCode \u914d\u7f6e \u00b6 VSCode \u662f\u4e00\u6b3e \u8f7b\u91cf\u7ea7 \u7684 \u4ee3\u7801\u7f16\u8f91\u5668 \uff0c\u53ef\u4ee5\u901a\u8fc7\u5b89\u88c5\u5404\u79cd\u5404\u6837\u4e0d\u540c \u6269\u5c55 \u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u5f00\u53d1\u8005\u6240\u9700\u8981\u7684\u529f\u80fd\u3002 \u533a\u5206\uff1a\u4ee3\u7801\u7f16\u8f91\u5668\uff08Editor\uff09\u4e0e\u96c6\u6210\u5f00\u53d1\u73af\u5883\uff08IDE, Integrated Development Environment\uff09 \u4ee3\u7801\u7f16\u8f91\u5668\u4e8b\u5b9e\u4e0a\u6211\u4eec\u53ef\u4ee5\u770b\u6210\u662f\u4e00\u4e2a\u8bb0\u4e8b\u672c\uff08\u6ca1\u9519\uff0c\u5982\u679c\u662f Windows \u7528\u6237\uff0c\u5c31\u662f\u4f60\u6309\u4e0b Win+R \u8f93\u5165 notepad \u56de\u8f66\u4e4b\u540e\u7684\u90a3\u4e2a\u8bb0\u4e8b\u672c\uff09\uff0c\u5176\u6700\u57fa\u672c\u7684\u529f\u80fd\u662f\u6587\u6863\u7f16\u8f91\u3002\u4e0d\u8fc7\u4e4b\u6240\u4ee5\u5c06\u5176\u79f0\u4e3a\u662f \u4ee3\u7801\u7f16\u8f91\u5668 \uff0c\u662f\u56e0\u4e3a\u5b83\u867d\u7136\u7ee7\u627f\u81ea\u4e00\u822c\u7684\u6587\u6863\u7f16\u8f91\u5668\uff0c\u53c8\u5177\u5907\u4e86\u4e00\u4e9b\u4e00\u822c\u7684\u6587\u6863\u7f16\u8f91\u5668\u6240\u4e0d\u5177\u5907\u7684\u529f\u80fd\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u4f8b\u5982\u81ea\u52a8\u8bed\u6cd5\u9ad8\u4eae\uff0c\u81ea\u52a8\u8865\u5168\uff0c\u751a\u81f3\u662f\u81ea\u52a8\u4ee3\u7801\u91cd\u6784\u7b49\u7b49\u3002 \u96c6\u6210\u5f00\u53d1\u73af\u5883\uff08IDE\uff09\u662f\u4e00\u79cd\u7528\u4e8e\u6784\u5efa\u5e94\u7528\u7a0b\u5e8f\u7684\u8f6f\u4ef6\uff0c \u53ef\u5c06\u5e38\u7528\u7684\u5f00\u53d1\u4eba\u5458\u5de5\u5177\u5408\u5e76\u5230\u5355\u4e2a\u56fe\u5f62\u7528\u6237\u754c\u9762 \uff08GUI\uff09\u4e2d\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7b80\u5355\u7684\u70b9\u51fb\u6309\u94ae\uff0c\u53ef\u80fd\u5c31\u53ef\u4ee5\u5b8c\u6210\u7a0b\u5e8f\u7684\u7f16\u8bd1\u3001\u94fe\u63a5\u3001\u8fd0\u884c\u3001\u8c03\u8bd5\u7b49\u7b49\u5de5\u4f5c\u3002\u800c\u8fd9\u4e9b\u5de5\u4f5c\u5728\u6700\u521d\u90fd\u662f\u9700\u8981\u4eba\u624b\u5de5\u5728\u547d\u4ee4\u884c\u4e2d\u5b8c\u6210\u7684\u3002\u6211\u4eec\u5728\u300a\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u300b\u8bfe\u7a0b\u4e2d\u6700\u521d\u4f7f\u7528\u7684 Dev-C++ \u4fbf\u662f\u4e00\u4e2a\u96c6\u6210\u5f00\u53d1\u73af\u5883\u3002 \u6211\u4eec\u4eca\u5929\u8981\u4ecb\u7ecd\u7684 VSCode \u662f\u4e00\u6b3e\u8f7b\u91cf\u7ea7\u7684 \u4ee3\u7801\u7f16\u8f91\u5668 \u3002\u5982\u679c\u6ca1\u6709\u5404\u79cd\u6269\u5c55\u63d2\u4ef6\u7684\u652f\u6301\u7684\u8bdd\uff0c\u53ef\u80fd\u6211\u4eec\u53ea\u80fd\u628a\u5b83\u79f0\u4f5c\u662f\u5927\u53f7\u7684 Notepad++\uff0c\u800c\u6b63\u662f\u56e0\u4e3a\u793e\u533a\u4e2d\u5404\u79cd\u5404\u6837\u7684\u6269\u5c55\uff0cVSCode \u624d\u5f97\u4ee5\u5c55\u73b0\u5176\u5f3a\u5927\u3002 \u672c\u6587\u6211\u4eec\u4ecb\u7ecd VSCode \u7684\u57fa\u672c\u914d\u7f6e\uff0c\u91cd\u70b9\u5728\u4e8e\u4ecb\u7ecd\u4e00\u4e9b\u672a\u6765\u53ef\u80fd\u4f1a\u7528\u5230\u7684\u6269\u5c55\u63d2\u4ef6\u3002\u6309\u7167\u672c\u6587\u7684\u6d41\u7a0b\u5b8c\u6210\u540e\uff0c\u4f60\u5e94\u8be5\u7b49\u6548\u5730\u5b8c\u6210\u4e86\u8db3\u4ee5\u5e94\u5bf9\u300a\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u300b\u8bfe\u7a0b\u4e2d\u7684\u4ee3\u7801\u7684\u96c6\u6210\u5f00\u53d1\u73af\u5883\u7684\u914d\u7f6e\u3002\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u4f1a\u4ecb\u7ecd\u4e00\u4e9b\u57fa\u672c\u7684\u8c03\u8bd5\u65b9\u6cd5\uff0c\u800c\u8fd9\u6070\u6070\u662f VSCode \u6bd4 Dev-C++ \u5728\u73b0\u9636\u6bb5\u4e0d\u77e5\u9053\u9ad8\u5230\u54ea\u91cc\u53bb\u7684\u5730\u65b9\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u5728\u672a\u6765\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 VSCode \u914d\u7f6e Python \u5f00\u53d1\u73af\u5883\uff0c\u914d\u7f6e\u8f6f\u4ef6\u5de5\u7a0b\u8bfe\u7a0b\u4e2d\u6240\u9700\u8981\u7684\u6846\u67b6\u7684\u5f00\u53d1\u73af\u5883\uff0c\u800c\u8fd9\u4e9b\u90fd\u662f\u901a\u8fc7\u201c\u6269\u5c55\u201d\uff08Extension\uff09\u6765\u5b9e\u73b0\u7684\u3002 \u524d\u7f6e\u77e5\u8bc6 \u00b6 \u4e86\u89e3\u4e00\u4e2a C++ \u7a0b\u5e8f\u4ece\u6e90\u4ee3\u7801\u5230\u53ef\u6267\u884c\u7a0b\u5e8f\u4e2d\u53d1\u751f\u4e86\u7f16\u8bd1\u3001\u94fe\u63a5\u8fd9\u4e24\u6b65\u64cd\u4f5c\uff08\u300a\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u300b\u5927\u4f5c\u4e1a\u4e2d\u4f1a\u6709\u6b64\u90e8\u5206\u7684\u8bb2\u89e3\uff09 \u52a8\u624b\u80fd\u529b \u4e0b\u8f7d\u4e0e\u8fd0\u884c \u00b6 \u6253\u5f00 VSCode \u5b98\u7f51\uff1a https://code.visualstudio.com/ \u70b9\u51fb\u5927\u5927\u7684 Download \u6309\u94ae\uff08\u5982\u679c\u662f Windows 64 \u4f4d\u7528\u6237\u53ef\u4ee5\u70b9\u51fb\u4e0b\u62c9\u6846\u9009\u62e9 x64 \u5b89\u88c5\u5305\u7248\u672c\uff09 \u8fdb\u884c\u5b89\u88c5\u6216\u89e3\u538b\u7f29\uff08\u6ce8\u610f\u8def\u5f84\u4e2d\u4e0d\u80fd\u5b58\u5728\u4efb\u4f55\u4e2d\u6587\u5b57\u7b26\uff0c\u63a8\u8350\u4ec5\u7528\u5b57\u6bcd\u548c\u6570\u5b57\uff09 \u5230\u4f60\u5b89\u88c5 VSCode \u7684\u76ee\u5f55\u4e0b\uff0c\u65b0\u5efa data \u6587\u4ef6\u5939 \u8fd9\u91cc\u6211\u4eec\u65b0\u5efa data \u6587\u4ef6\u5939\u540e\uff0c\u4e4b\u540e VSCode \u8fd0\u884c\u65f6\u7684\u6269\u5c55\u63d2\u4ef6\u548c\u7528\u6237\u6570\u636e\u4fbf\u90fd\u4f1a\u5b58\u653e\u5728 data \u6587\u4ef6\u5939\u4e0b\uff0c\u8fd9\u6837\u53ef\u4ee5\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u907f\u514d\u7cfb\u7edf\u76d8\u5bb9\u91cf\u5360\u7528\u7684\u95ee\u9898\u3002\u5982\u679c\u4e0d\u65b0\u5efa data \u6587\u4ef6\u5939\uff0c\u90a3\u4e48 VSCode \u4f1a\u5c06\u4e0a\u8ff0\u63d2\u4ef6\u548c\u7528\u6237\u4fe1\u606f\u5b58\u653e\u5728\u7cfb\u7edf\u76d8\u7684\u7528\u6237\u76ee\u5f55\u4e0b\u3002 C++ \u76f8\u5173\u5f00\u53d1\u73af\u5883\u914d\u7f6e \u00b6 \u73af\u5883\u53d8\u91cf\u4e0e Mingw64 \u00b6 \u6211\u4eec\u53ef\u4ee5\u5148\u6253\u5f00\u7ec8\u7aef\uff08Windows \u7528\u6237\u8bf7\u4f7f\u7528 Win+R\uff0c\u8f93\u5165 cmd \uff09\uff0c\u5c1d\u8bd5\u8f93\u5165\uff1a 1 g++ --version \u5982\u679c\u4f60\u7684\u7ec8\u7aef\u8fd4\u56de\u4e86 g++ \u7684\u7248\u672c\u4fe1\u606f\uff0c\u606d\u559c\uff0c\u60a8 C++ \u7f16\u8bd1\u5668\u7684\u73af\u5883\u53d8\u91cf\u914d\u7f6e\u6b63\u786e\uff0c\u53ef\u4ee5\u8df3\u8fc7\u8fd9\u4e00\u5c0f\u8282\u3002\u5f53\u7136\uff0c\u5982\u679c\u60f3\u66f4\u52a0\u8be6\u7ec6\u5730\u4e86\u89e3\u73af\u5883\u53d8\u91cf\u662f\u4ec0\u4e48\uff0c\u53ef\u4ee5\u7ee7\u7eed\u9605\u8bfb\u8fd9\u4e00\u5c0f\u8282\u3002 \u800c\u5982\u679c\u8fd4\u56de\uff1a 1 2 'g++' \u4e0d\u662f\u5185\u90e8\u6216\u5916\u90e8\u547d\u4ee4\uff0c\u4e5f\u4e0d\u662f\u53ef\u8fd0\u884c\u7684\u7a0b\u5e8f \u6216\u6279\u5904\u7406\u6587\u4ef6\u3002 \u90a3\u4e48\u5219\u8bf4\u660e\u4f60\u7684\u7ec8\u7aef\u4e0d\u77e5\u9053 g++ \u662f\u4ec0\u4e48\u547d\u4ee4\u3002\u6211\u4eec\u63a5\u4e0b\u6765\u5c06\u9996\u5148\u8bb2\u89e3\u73af\u5883\u53d8\u91cf\u662f\u4ec0\u4e48\uff0c\u7136\u540e\u518d\u4e3a\u5927\u5bb6\u8bb2\u8ff0\u8be5\u600e\u4e48\u914d\u7f6e\u73af\u5883\u53d8\u91cf\u3002 \u4ec0\u4e48\u662f\u73af\u5883\u53d8\u91cf\uff1f \u5f53\u4f60\u7684 Shell \u5728\u6267\u884c\u547d\u4ee4\u65f6\uff0c\u4f1a\u5c1d\u8bd5\u5728 \u4e00\u7cfb\u5217\u8def\u5f84 \u4e0b\u641c\u7d22\u540c\u540d\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002\u8fd9\u4e00\u7cfb\u5217\u8def\u5f84\u6211\u4eec\u5c31\u79f0\u4f5c\u662f\u73af\u5883\u53d8\u91cf\u3002 Windows \u7528\u6237\u53ef\u4ee5\u5728\u7ec8\u7aef\u4e2d\u8f93\u5165 path \u6765\u67e5\u770b\u5f53\u524d\u73af\u5883\u53d8\u91cf\uff08\u7531\u4e8e\u6211\u8fdb\u884c\u8fc7\u4e00\u7cfb\u5217\u914d\u7f6e\uff0c\u6240\u4ee5\u5176\u8f93\u51fa\u7ed3\u679c\u53ef\u80fd\u4e0e\u4f60\u7684\u4e0d\u540c\uff09\uff1a 1 2 D: \\C oding>path PATH = D: \\A naconda ; D: \\A naconda \\L ibrary \\m ingw-w64 \\b in ; D: \\A naconda \\L ibrary \\u sr \\b in ; ...... Linux \u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 echo $PATH \u6765\u67e5\u770b\u81ea\u5df1\u7684\u73af\u5883\u53d8\u91cf\uff1a 1 2 c7w@cc7w > /mnt/d/Coding > echo $PATH /home/c7w/.local/lib/python3.8/site-packages:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/mnt/d/Anaconda:/mnt/d/Anaconda/Library/mingw-w64/bin:/mnt/d/Anaconda/Library/usr/bin:/mnt/d/Anaconda/Library/bin:/mnt/d/Anaconda/Scripts:/mnt/f/VM/bin/:/mnt/c/Program Files ( x86 ) /Common Files/Intel/Shared Libraries/redist/intel64/compiler:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:...... \u6ca1\u9519\uff0c\u5c31\u662f\u8fd9\u4e00\u7cfb\u5217\u6587\u4ef6\u5939\u3002\u56de\u5fc6\u6211\u4eec\u521a\u624d\u6267\u884c g++ --version \u547d\u4ee4\u7684\u65f6\u5019\uff0c\u6211\u4eec\u7684\u7ec8\u7aef\u4f1a\u5728\u8fd9\u4e00\u7cfb\u5217\u6587\u4ef6\u5939\u4e0b\u4e3a\u6211\u4eec\u5bfb\u627e\u53eb\u505a g++ \u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002\u5982\u679c\u627e\u5230\u4e86\u540d\u4e3a g++ \u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u6211\u4eec\u7684\u7ec8\u7aef\u5c31\u4f1a\u5c06\u53c2\u6570\u4f20\u5165\uff0c\u5c06\u5176\u6267\u884c\uff1b\u800c\u5982\u679c\u6211\u4eec\u7684\u7ec8\u7aef\u6ca1\u6709\u627e\u5230\uff0c\u90a3\u4e48\u5c31\u4f1a\u5411\u6211\u4eec\u62a5\u544a\u201c\u672a\u77e5\u547d\u4ee4\u201d\u3002 \u6211\u4eec\u521a\u521a\u5df2\u7ecf\u7406\u89e3\u4e86\u201c\u73af\u5883\u53d8\u91cf\uff08Path\uff09\u201d\u7684\u8fd0\u884c\u903b\u8f91\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u8bb2\u89e3\u5982\u4f55\u8fdb\u884c\u73af\u5883\u53d8\u91cf\u7684\u914d\u7f6e\u3002` \u5bf9\u4e8e Windows \u7528\u6237\uff0c\u8bf7\u6309\u4e0b Windows + S \u6253\u5f00\u641c\u7d22\u6846\uff0c\u5728\u5176\u4e2d\u8f93\u5165 path \uff0c\u7136\u540e\u9009\u62e9\"\u7f16\u8f91\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\"\uff0c\u8fdb\u800c\u9009\u62e9\u201c\u73af\u5883\u53d8\u91cf\u201d\uff0c\u7136\u540e\u9009\u62e9\u201c\u7cfb\u7edf\u53d8\u91cf\u201d\u4e2d\u7684 Path \u5b57\u6bb5\uff0c\u53cc\u51fb\u6253\u5f00\u540e\u5373\u53ef\u914d\u7f6e\u3002 \u5bf9\u4e8e Linux \u7528\u6237\uff0c\u73af\u5883\u53d8\u91cf\u662f\u7ed1\u5b9a\u5728\u4f60\u7684 Shell \u4e0a\u7684\uff0c\u4e0d\u540c\u7684 Shell \u6709\u4e0d\u540c\u7684\u914d\u7f6e\u65b9\u5f0f\u3002\u8fd9\u91cc\u6211\u4eec\u63d0\u4f9b\u4e00\u4e2a \u94fe\u63a5 \u5e2e\u52a9\u60a8\u4e86\u89e3\u73af\u5883\u53d8\u91cf\u7684\u76f8\u5173\u914d\u7f6e\u3002 \u4ec0\u4e48\u662f Mingw64\uff1f MinGW \u7684\u5168\u79f0\u662f\uff1aMinimalist GNU on Windows\u3002 \u5b83\u5b9e\u9645\u4e0a\u662f\u5c06\u7ecf\u5178\u7684\u5f00\u6e90 C \u8bed\u8a00\u7f16\u8bd1\u5668 GCC \u79fb\u690d\u5230\u4e86 Windows \u5e73\u53f0\u4e0b\uff0c\u5e76\u4e14\u5305\u542b\u4e86 Win32API\uff0c\u56e0\u6b64\u53ef\u4ee5\u5c06\u6e90\u4ee3\u7801\u7f16\u8bd1\u4e3a\u53ef\u5728 Windows \u4e2d\u8fd0\u884c\u7684\u53ef\u6267\u884c\u7a0b\u5e8f\u3002\u800c\u4e14\u8fd8\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b Windows \u4e0d\u5177\u5907\u7684\uff0cLinux\u5e73\u53f0\u4e0b\u7684\u5f00\u53d1\u5de5\u5177\u3002 \u4e00\u53e5\u8bdd\u6765\u6982\u62ec\uff1aMinGW \u5c31\u662f GCC \u7684 Windows \u7248\u672c\u3002\u8fd9\u662f\u5c06\u4f60\u5199\u7684 C/C++ \u8bed\u8a00\u7684\u6e90\u4ee3\u7801\u7f16\u8bd1\u6210\u6c47\u7f16\u4ee3\u7801\uff0c\u8fdb\u800c\u94fe\u63a5\u6210\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5de5\u5177\u3002\u4e4b\u524d\u6211\u4eec\u7684 Dev-C++ \u4e8b\u5b9e\u4e0a\u4e5f\u96c6\u6210\u4e86\u8fd9\u4e2a\u5de5\u5177\u3002 \u6211\u4eec\u4e0b\u8f7d\u5b98\u65b9\u7684\u5b89\u88c5\u5de5\u5177\uff08 \u94fe\u63a5 \uff09\uff0c\u4e0b\u8f7d\u5b8c\u6210\u540e\u53f3\u952e\u4ee5\u7ba1\u7406\u5458\u8eab\u4efd\u8fd0\u884c\uff0c Architecture \u4e2d i686 \u662f\u9488\u5bf9\u4e8e 32 \u4f4d\u7cfb\u7edf\uff0c x86_64 \u9488\u5bf9\u4e8e 64 \u4f4d\u7cfb\u7edf\uff0c\u5176\u4ed6\u4e0d\u7528\u4fee\u6539\uff0c\u8fdb\u5165\u4e0b\u4e00\u6b65\u9009\u62e9\u5b89\u88c5\u76ee\u5f55\u5373\u53ef\u3002\u7136\u540e\u5373\u53ef\u7b49\u5f85\u5b89\u88c5\u7a0b\u5e8f\u4e0b\u8f7d\u5e76\u8fdb\u884c\u5b89\u88c5\u3002 \u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u8fdb\u884c\u73af\u5883\u53d8\u91cf\u914d\u7f6e\u3002\u8fdb\u5165 Mingw64 \u7684\u5b89\u88c5\u8def\u5f84/mingw64/bin/ \uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230 gcc \uff0c g++ \u8fd9\u4e9b\u6211\u4eec\u719f\u6089\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002 \u7136\u540e\u6211\u4eec\u9700\u8981\u505a\u7684\u5c31\u662f\u5c06\u8fd9\u4e2a\u6587\u4ef6\u5939\u6dfb\u52a0\u81f3\u73af\u5883\u53d8\u91cf\u4e2d\u3002 \u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u6253\u5f00\u7ec8\u7aef\uff0c\u8f93\u5165 g++ \u9a8c\u8bc1\u73af\u5883\u53d8\u91cf\u662f\u5426\u914d\u7f6e\u6210\u529f\u3002\uff08\u8bf7\u6ce8\u610f\uff0c\u5728\u73af\u5883\u53d8\u91cf\u914d\u7f6e\u540e\u9700\u8981\u91cd\u542f\u7ec8\u7aef\u624d\u80fd\u751f\u6548\uff09 Make \u00b6 \u540c\u65f6\uff0c\u9488\u5bf9\u4e8e\u6211\u4eec\u4e4b\u540e\u8bfe\u4e0a\u6240\u9700\u8981\u7528\u5230\u7684 make \u547d\u4ee4\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u540c\u76ee\u5f55\u4e0b\u7684 mingw32-make.exe \u590d\u5236\u4e00\u4efd\uff0c\u6539\u540d\u4e3a make.exe \uff0c\u8fd9\u6837\u6211\u4eec\u4e5f\u80fd\u6b63\u5e38\u4f7f\u7528 make \u547d\u4ee4\u4e86\u3002 \u7531\u4e8e Linux \u5e73\u53f0\u81ea\u5e26\u4e86 gcc \u548c make \u7b49\u7b49\u7f16\u8bd1\u5de5\u5177\uff0c\u6240\u4ee5\u8fd9\u91cc\u4e0d\u9700\u8981\u8fdb\u884c\u989d\u5916\u7684\u914d\u7f6e\u3002 \u6269\u5c55\u63d2\u4ef6\u7684\u5b89\u88c5 \u00b6 \u6211\u4eec\u6253\u5f00 VSCode\uff0c\u5148\u7b80\u5355\u4ecb\u7ecd\u4e0b\u754c\u9762\u53ca\u5176\u529f\u80fd\uff1a \u7ea2\u8272\u6846\u662f\u6211\u4eec\u5f53\u524d\u9879\u76ee\uff08\u5373\u6587\u4ef6\u5939\uff09\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u6e05\u5355\uff0c\u84dd\u8272\u6846\u662f\u6211\u4eec\u7f16\u5199\u4ee3\u7801\u7684\u5730\u65b9\uff0c\u7eff\u8272\u6846\u662f\u6211\u4eec\u7684\u5e94\u7528\u5546\u5e97\u3002 \u8fd9\u91cc\u6211\u4eec\u63a8\u8350\u51e0\u4e2a\u6269\u5c55\uff0c\u5728\u5e94\u7528\u5546\u5e97\u4e2d\u641c\u7d22\u5373\u53ef\u4e0b\u8f7d\uff1a Chinese (Simplified) Language Pack for Visual Studio Code\uff1a\u8bed\u8a00 Code Runner\uff1a\u8c03\u8bd5\u7528 C/C++\uff1a\u652f\u6301\u5728 Code \u4e2d\u8c03\u8bd5 C/C++ \u7a0b\u5e8f Remote - SSH\uff1a\u4e4b\u540e\u8fdb\u884c\u8fdc\u7a0b\u5f00\u53d1\u4f1a\u7528\u5230\uff0c\u8fd9\u91cc\u4e0d\u591a\u505a\u4ecb\u7ecd \u5728\u5b89\u88c5\u4e86\u7b80\u4f53\u4e2d\u6587\u63d2\u4ef6\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u6309 Ctrl + Shift + P \uff0c\u6253\u5f00\u8f93\u5165\u6846\uff0c\u8f93\u5165 Configurate display language \uff0c\u9009\u62e9\u4e2d\u6587\u540e\u91cd\u65b0\u542f\u52a8\u5373\u53ef\u3002 \u4ee3\u7801\u8c03\u8bd5 \u00b6 \u5982\u4f55\u8fd0\u884c\u4e00\u6bb5\u4ee3\u7801\u5462\uff1f\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728 \u5bf9\u5e94\u7684\u4ee3\u7801\u754c\u9762 \u6309\u4e0b F5 \u6216\u662f\u5728\u83dc\u5355\u680f\u627e\u5230\u201c\u8fd0\u884c > \u542f\u52a8\u8c03\u8bd5\u201d\uff0c\u4fbf\u53ef\u4ee5\u542f\u52a8\u8c03\u8bd5\u6a21\u5f0f\uff1a \u5728\u914d\u7f6e\u4e2d\u9009\u62e9 C++ (GDB) \uff0c\u8fdb\u800c\u9009\u62e9 g++.exe \u3002 \u7136\u540e\u6211\u4eec\u4f1a\u53d1\u73b0\u9879\u76ee\u8def\u5f84\u4e0b\u751f\u6210\u4e86\u4e00\u4e2a .vscode \u6587\u4ef6\u5939\uff0c\u5185\u542b tasks.json \u548c launch.json \uff0c\u8fd9\u4e24\u4e2a\u6587\u4ef6\u5206\u522b\u6709\u4ec0\u4e48\u4f5c\u7528\u6211\u4eec\u5373\u5c06\u5c31\u4f1a\u8fdb\u884c\u4ecb\u7ecd\u3002 \uff08\u4f60\u7684\u754c\u9762\u6392\u7248\u53ef\u80fd\u548c\u6211\u6709\u6240\u4e0d\u540c\uff0c\u4e0d\u8fc7\u4e3b\u8981\u529f\u80fd\u662f\u5927\u540c\u5c0f\u5f02\u7684\uff0c\u5f53\u4f60\u719f\u7ec3\u8fd0\u7528\u4e86 Code \u4e4b\u540e\u4f60\u53ef\u4ee5\u81ea\u884c\u5c06\u8fd9\u51e0\u4e2a\u6846\u6846\u62d6\u6765\u62d6\u53bb\u6446\u5230\u4f60\u89c9\u5f97\u8212\u9002\u7684\u4f4d\u7f6e\uff09 \u6211\u4eec\u63a5\u4e0b\u6765\u5c06\u5206\u5355\u6587\u4ef6\u9879\u76ee\u548c\u591a\u6587\u4ef6\u9879\u76ee\u8fdb\u884c\u8ba8\u8bba\uff0c\u8bf4\u660e\u4e00\u4e9b\u5728 Code \u4e2d\u8c03\u8bd5 C++ \u4ee3\u7801\u7684\u6280\u5de7\u3002 \u5355\u6587\u4ef6\u9879\u76ee \u00b6 \u5355\u6587\u4ef6\u9879\u76ee\u6307\u53ea\u6709\u4e00\u4e2a cpp \u6587\u4ef6\u7684\u9879\u76ee\uff0c main() \u51fd\u6570\u7684\u5b9a\u4e49\u5c31\u5728\u5176\u4e2d\uff0c\u6211\u4eec\u5728\u300a\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u300b\u8bfe\u7a0b\u7684\u5927\u90e8\u5206\u5e73\u65f6\u4f5c\u4e1a\u90fd\u662f\u8fd9\u79cd\u9879\u76ee\u3002 \u8fd9\u79cd\u9879\u76ee\u6211\u4eec\u76f4\u63a5\u6309 F5 \u4fbf\u53ef\u8fdb\u884c\u8fd0\u884c\uff0c\u5176\u8f93\u51fa\u7ed3\u679c\u4f1a\u5728\u201c\u7ec8\u7aef\u201d\u9009\u9879\u5361\u4e2d\u51fa\u73b0\u3002 \u8fd9\u662f\u4e00\u6bb5\u6f14\u793a\u5355\u5411\u5e73\u65b9\u548c\u53cc\u5411\u5e73\u65b9\u63a2\u6d4b\u5728\u54c8\u5e0c\u8868\u4e2d\u53ef\u4ee5\u5360\u7528\u7684\u4f4d\u7f6e\u7684\u793a\u4f8b\u7a0b\u5e8f\uff0c\u5728\u8fd9\u91cc\u4ec5\u505a\u8bf4\u660e\u4f7f\u7528\uff0c\u5927\u5bb6\u4e0d\u5fc5\u7406\u89e3\u5176\u80cc\u540e\u7684\u539f\u7406\u3002\uff08\u4e8b\u5b9e\u4e0a\u4f60\u7ed9\u522b\u4eba\u8c03\u4ee3\u7801\u7684\u65f6\u5019\u4e0d\u90fd\u662f\u8fd9\u6837\u561b\uff0c\u5bf9\u7740\u770b\u4e0d\u61c2\u7684\u903b\u8f91\u6ee1\u8138\u9ed1\u7ebf.jpeg\uff09 \u60f3\u8981\u5728\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u8bbe\u7f6e\u65ad\u70b9\uff0c\u6211\u4eec\u53ea\u9700\u70b9\u51fb\u5bf9\u5e94\u7684\u884c\u53f7\uff1a \u5728\u8fd9\u91cc\u8bbe\u7f6e\u65ad\u70b9\uff0c\u7a0b\u5e8f\u5c06\u4f1a\u5728\u7b2c 30 \u884c\u6267\u884c\u5b8c\u6210\uff0c\u7b2c 31 \u884c\u5c06\u8981\u6267\u884c\u7684\u65f6\u5019\u89e6\u53d1\u65ad\u70b9\uff0c\u8ba9\u6211\u4eec\u770b\u4e00\u770b\uff1a \u7ea2\u6846\uff0c\u4e5f\u5c31\u662f\u201c\u7ec8\u7aef\u6846\u4e2d\uff0c\u6211\u4eec\u7684\u7a0b\u5e8f\u8f93\u51fa\u4e86\u524d\u534a\u6bb5\u8fd0\u884c\u65f6\u4ea7\u751f\u7684 cout \u4fe1\u606f\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u8bf4\u660e\u8be5\u5982\u4f55\u67e5\u770b\u4e2d\u95f4\u53d8\u91cf\uff1a \u6bd4\u5982\u7a0b\u5e8f\u5728\u547d\u4e2d\u8fd9\u4e2a\u65ad\u70b9\u65f6\uff0c\u6211\u4eec\u6709\u4ee5\u4e0b\u9014\u5f84\u83b7\u53d6\u4e2d\u95f4\u53d8\u91cf\u7684\u503c\uff1a \u5728\u9ec4\u8272\u6846\u201c\u53d8\u91cf\u201d\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u7a0b\u5e8f\u81ea\u52a8\u8ffd\u6eaf\u7684\u5c40\u90e8\u53d8\u91cf\u548c\u5bc4\u5b58\u5668\u503c\u3002\u5728\u84dd\u8272\u6846\u201c\u76d1\u89c6\u201d\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u81ea\u884c\u5b9a\u4e49\u4e00\u4e9b\u9700\u8981\u8ffd\u6eaf\u7684\u53d8\u91cf\u3002\u5728\u7ea2\u8272\u6846\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8f93\u5165\u53d8\u91cf\u540d\u6765\u67e5\u770b\u5176\u5bf9\u5e94\u7684\u503c\u3002 \u7136\u540e\uff0c\u6211\u4eec\u6765\u5c06\u76ee\u5149\u653e\u5728\u4e0a\u8ff0\u8fd9\u51e0\u4e2a\u6309\u94ae\u8eab\u4e0a\u3002 \u7ee7\u7eed\uff08F5\uff09\u6309\u94ae\u5c06\u4f1a\u4f7f\u7a0b\u5e8f\u7ee7\u7eed\u6267\u884c\uff0c\u76f4\u5230\u547d\u4e2d\u4e0b\u4e00\u4e2a\u65ad\u70b9\u6216\u662f\u5230\u7a0b\u5e8f\u7ed3\u5c3e\u3002 \u5355\u6b65\u8df3\u8fc7\uff08F10\uff09\u6309\u94ae\u5bf9\u4e8e\u7a0b\u5e8f\u6765\u8bf4\uff0c\u5982\u679c\u5c06\u8981\u6267\u884c\u7684\u884c\u8c03\u7528\u4e86\u67d0\u4e9b\u51fd\u6570\uff0c\u90a3\u4e48\u5c06\u76f4\u63a5\u5c06\u672c\u884c\u6267\u884c\u5b8c\u6bd5\uff0c\u8fdb\u5165\u4e0b\u4e00\u884c\u3002 \u5355\u6b65\u8c03\u8bd5\uff08F11\uff09\u6309\u94ae\u5bf9\u4e8e\u7a0b\u5e8f\u6765\u8bf4\uff0c\u5982\u679c\u5c06\u8981\u6267\u884c\u7684\u884c\u8c03\u7528\u4e86\u67d0\u4e9b\u51fd\u6570\uff0c\u90a3\u4e48\u5c06\u8fdb\u5165\u5c06\u8981\u6267\u884c\u7684\u51fd\u6570\u5185\u90e8\u3002 \u505c\u6b62\uff08Shift+F5\uff09\u6309\u94ae\u7ec8\u6b62\u5f53\u524d\u8c03\u8bd5\u5de5\u4f5c\u3002 \u591a\u6587\u4ef6\u9879\u76ee \u00b6 \u5bf9\u4e8e\u591a\u6587\u4ef6\u9879\u76ee\u7684\u8c03\u8bd5\u6765\u8bf4\uff0c\u6211\u4eec\u91cd\u70b9\u5173\u6ce8\u70b9\u5728\u4e8e .vscode \u4e0b\u4e24\u4e2a\u6587\u4ef6\u7684\u914d\u7f6e\u3002 \u9996\u5148\u6211\u4eec\u5c06\u6211\u4eec\u7684\u793a\u4f8b\u7a0b\u5e8f\u4fee\u6539\u4e3a\u591a\u6587\u4ef6\u9879\u76ee\uff1a \u6211\u4eec\u91c7\u7528\u6700\u7b80\u5355\u7684\u65b9\u5f0f\uff0c\u5c06\u6211\u4eec\u7684\u5355\u6587\u4ef6\u9879\u76ee\u9b54\u6539\u6210\u591a\u6587\u4ef6\u3002 \u6211\u4eec\u56de\u5fc6\u5982\u679c\u4f7f\u7528\u547d\u4ee4\u884c\uff0c\u8be5\u5982\u4f55\u5c06\u6211\u4eec\u7684\u7a0b\u5e8f\u7f16\u8bd1\uff1a 1 g++ hash.cpp another.cpp -o main \u6ca1\u9519\uff0c\u6211\u4eec\u73b0\u5728\u914d\u7f6e Code \u4f7f\u5f97\u5176\u5728\u201c\u751f\u6210\u76ee\u6807\u6587\u4ef6\u201d\u4efb\u52a1\u4e2d\u6267\u884c\u4e0a\u8ff0\u547d\u4ee4\u3002 tasks.json \u8d1f\u8d23\u53ef\u6267\u884c\u6587\u4ef6\u7684\u751f\u6210\uff0c\u6211\u4eec\u4e3b\u8981\u8fdb\u884c\u5982\u4e0b\u4fee\u6539\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 { \"tasks\" : [ { \"type\" : \"shell\" , // cppbuild -> shell \"label\" : \"C/C++: g++.exe \u751f\u6210\u6d3b\u52a8\u6587\u4ef6\" , \"command\" : \"D:\\\\Mingw\\\\mingw64\\\\bin\\\\g++.exe\" , \"args\" : [ \"-g\" , \"hash.cpp\" , // ${file} -> your source code list \"another.cpp\" , \"-o\" , \"${fileDirname}\\\\main.exe\" // main.exe ], \"options\" : { \"cwd\" : \"${fileDirname}\" }, \"problemMatcher\" : [ \"$gcc\" ], \"group\" : { \"kind\" : \"build\" , \"isDefault\" : true }, \"detail\" : \"\u8c03\u8bd5\u5668\u751f\u6210\u7684\u4efb\u52a1\u3002\" } ], \"version\" : \"2.0.0\" } launch.json \u4e3b\u8981\u8d1f\u8d23\u8c03\u8bd5\u76ee\u6807\u7a0b\u5e8f\uff0c\u6211\u4eec\u505a\u4ee5\u4e0b\u4fee\u6539\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 { // \u4f7f\u7528 IntelliSense \u4e86\u89e3\u76f8\u5173\u5c5e\u6027\u3002 // \u60ac\u505c\u4ee5\u67e5\u770b\u73b0\u6709\u5c5e\u6027\u7684\u63cf\u8ff0\u3002 // \u6b32\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95ee: https://go.microsoft.com/fwlink/?linkid=830387 \"version\" : \"0.2.0\" , \"configurations\" : [ { \"name\" : \"g++.exe - \u751f\u6210\u548c\u8c03\u8bd5\u6d3b\u52a8\u6587\u4ef6\" , \"type\" : \"cppdbg\" , \"request\" : \"launch\" , \"program\" : \"${fileDirname}\\\\main.exe\" , // main.exe \"args\" : [], \"stopAtEntry\" : false , \"cwd\" : \"${fileDirname}\" , \"environment\" : [], \"externalConsole\" : false , \"MIMode\" : \"gdb\" , \"miDebuggerPath\" : \"D:\\\\Mingw\\\\mingw64\\\\bin\\\\gdb.exe\" , \"setupCommands\" : [ { \"description\" : \"\u4e3a gdb \u542f\u7528\u6574\u9f50\u6253\u5370\" , \"text\" : \"-enable-pretty-printing\" , \"ignoreFailures\" : true } ], \"preLaunchTask\" : \"C/C++: g++.exe \u751f\u6210\u6d3b\u52a8\u6587\u4ef6\" } ] } \u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u6109\u5feb\u5730\u8c03\u8bd5\u591a\u6587\u4ef6\u9879\u76ee\u4e86\u3002 \u540e\u7eed\u5b66\u4e60 \u00b6 \u81ea\u884c\u7814\u7a76 Remote-SSH \u7684\u4f7f\u7528\u65b9\u6cd5\uff0c\u5982\u4f55\u8fde\u63a5\u5230\u5916\u90e8\u670d\u52a1\u5668\u8fdb\u884c\u5f00\u53d1 \u81ea\u884c\u7814\u7a76 Python \u914d\u7f6e\u8c03\u8bd5\u73af\u5883\u7684\u65b9\u6cd5 \u5728\u300a\u8f6f\u4ef6\u5de5\u7a0b\u300b\u8bfe\u7a0b\u4e2d\uff0c\u4f7f\u7528 Code Prettier \u63d2\u4ef6 + ESLint \u89c4\u8303\u9879\u76ee \u8d44\u6e90\u94fe\u63a5 \u00b6 https://code.visualstudio.com/ https://zhuanlan.zhihu.com/p/76613134 https://blog.csdn.net/linjf520/article/details/108559210 Tips \u914d\u7f6e\u5f00\u53d1\u73af\u5883\u5f80\u5f80\u662f\u5728\u5b66\u4e60\u7684\u8fc7\u7a0b\u4e2d\u6700\u607c\u4eba\u7684\u4e00\u4ef6\u4e8b\uff0c\u4f46\u662f\u4e0d\u7528\u5fc3\u6025\uff0c\u5e38\u8a00\u9053\u201c\u826f\u597d\u7684\u5f00\u7aef\u662f\u6210\u529f\u7684\u4e00\u534a\u201d\u3002\u5982\u679c\u5b9e\u5728\u9047\u5230\u914d\u7f6e\u95ee\u9898\uff0c\u5728\u8fdb\u884c\u641c\u7d22\u65e0\u6cd5\u89e3\u51b3\u540e\uff0c\u5efa\u8bae\u5411\u540c\u5e74\u7ea7/\u5b66\u957f/\u7b54\u7591\u574a\u8fdb\u884c\u6c42\u52a9\u3002","title":"VSCode \u914d\u7f6e"},{"location":"basic/vscode/#vscode","text":"VSCode \u662f\u4e00\u6b3e \u8f7b\u91cf\u7ea7 \u7684 \u4ee3\u7801\u7f16\u8f91\u5668 \uff0c\u53ef\u4ee5\u901a\u8fc7\u5b89\u88c5\u5404\u79cd\u5404\u6837\u4e0d\u540c \u6269\u5c55 \u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u5f00\u53d1\u8005\u6240\u9700\u8981\u7684\u529f\u80fd\u3002 \u533a\u5206\uff1a\u4ee3\u7801\u7f16\u8f91\u5668\uff08Editor\uff09\u4e0e\u96c6\u6210\u5f00\u53d1\u73af\u5883\uff08IDE, Integrated Development Environment\uff09 \u4ee3\u7801\u7f16\u8f91\u5668\u4e8b\u5b9e\u4e0a\u6211\u4eec\u53ef\u4ee5\u770b\u6210\u662f\u4e00\u4e2a\u8bb0\u4e8b\u672c\uff08\u6ca1\u9519\uff0c\u5982\u679c\u662f Windows \u7528\u6237\uff0c\u5c31\u662f\u4f60\u6309\u4e0b Win+R \u8f93\u5165 notepad \u56de\u8f66\u4e4b\u540e\u7684\u90a3\u4e2a\u8bb0\u4e8b\u672c\uff09\uff0c\u5176\u6700\u57fa\u672c\u7684\u529f\u80fd\u662f\u6587\u6863\u7f16\u8f91\u3002\u4e0d\u8fc7\u4e4b\u6240\u4ee5\u5c06\u5176\u79f0\u4e3a\u662f \u4ee3\u7801\u7f16\u8f91\u5668 \uff0c\u662f\u56e0\u4e3a\u5b83\u867d\u7136\u7ee7\u627f\u81ea\u4e00\u822c\u7684\u6587\u6863\u7f16\u8f91\u5668\uff0c\u53c8\u5177\u5907\u4e86\u4e00\u4e9b\u4e00\u822c\u7684\u6587\u6863\u7f16\u8f91\u5668\u6240\u4e0d\u5177\u5907\u7684\u529f\u80fd\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u4f8b\u5982\u81ea\u52a8\u8bed\u6cd5\u9ad8\u4eae\uff0c\u81ea\u52a8\u8865\u5168\uff0c\u751a\u81f3\u662f\u81ea\u52a8\u4ee3\u7801\u91cd\u6784\u7b49\u7b49\u3002 \u96c6\u6210\u5f00\u53d1\u73af\u5883\uff08IDE\uff09\u662f\u4e00\u79cd\u7528\u4e8e\u6784\u5efa\u5e94\u7528\u7a0b\u5e8f\u7684\u8f6f\u4ef6\uff0c \u53ef\u5c06\u5e38\u7528\u7684\u5f00\u53d1\u4eba\u5458\u5de5\u5177\u5408\u5e76\u5230\u5355\u4e2a\u56fe\u5f62\u7528\u6237\u754c\u9762 \uff08GUI\uff09\u4e2d\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7b80\u5355\u7684\u70b9\u51fb\u6309\u94ae\uff0c\u53ef\u80fd\u5c31\u53ef\u4ee5\u5b8c\u6210\u7a0b\u5e8f\u7684\u7f16\u8bd1\u3001\u94fe\u63a5\u3001\u8fd0\u884c\u3001\u8c03\u8bd5\u7b49\u7b49\u5de5\u4f5c\u3002\u800c\u8fd9\u4e9b\u5de5\u4f5c\u5728\u6700\u521d\u90fd\u662f\u9700\u8981\u4eba\u624b\u5de5\u5728\u547d\u4ee4\u884c\u4e2d\u5b8c\u6210\u7684\u3002\u6211\u4eec\u5728\u300a\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u300b\u8bfe\u7a0b\u4e2d\u6700\u521d\u4f7f\u7528\u7684 Dev-C++ \u4fbf\u662f\u4e00\u4e2a\u96c6\u6210\u5f00\u53d1\u73af\u5883\u3002 \u6211\u4eec\u4eca\u5929\u8981\u4ecb\u7ecd\u7684 VSCode \u662f\u4e00\u6b3e\u8f7b\u91cf\u7ea7\u7684 \u4ee3\u7801\u7f16\u8f91\u5668 \u3002\u5982\u679c\u6ca1\u6709\u5404\u79cd\u6269\u5c55\u63d2\u4ef6\u7684\u652f\u6301\u7684\u8bdd\uff0c\u53ef\u80fd\u6211\u4eec\u53ea\u80fd\u628a\u5b83\u79f0\u4f5c\u662f\u5927\u53f7\u7684 Notepad++\uff0c\u800c\u6b63\u662f\u56e0\u4e3a\u793e\u533a\u4e2d\u5404\u79cd\u5404\u6837\u7684\u6269\u5c55\uff0cVSCode \u624d\u5f97\u4ee5\u5c55\u73b0\u5176\u5f3a\u5927\u3002 \u672c\u6587\u6211\u4eec\u4ecb\u7ecd VSCode \u7684\u57fa\u672c\u914d\u7f6e\uff0c\u91cd\u70b9\u5728\u4e8e\u4ecb\u7ecd\u4e00\u4e9b\u672a\u6765\u53ef\u80fd\u4f1a\u7528\u5230\u7684\u6269\u5c55\u63d2\u4ef6\u3002\u6309\u7167\u672c\u6587\u7684\u6d41\u7a0b\u5b8c\u6210\u540e\uff0c\u4f60\u5e94\u8be5\u7b49\u6548\u5730\u5b8c\u6210\u4e86\u8db3\u4ee5\u5e94\u5bf9\u300a\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u300b\u8bfe\u7a0b\u4e2d\u7684\u4ee3\u7801\u7684\u96c6\u6210\u5f00\u53d1\u73af\u5883\u7684\u914d\u7f6e\u3002\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u4f1a\u4ecb\u7ecd\u4e00\u4e9b\u57fa\u672c\u7684\u8c03\u8bd5\u65b9\u6cd5\uff0c\u800c\u8fd9\u6070\u6070\u662f VSCode \u6bd4 Dev-C++ \u5728\u73b0\u9636\u6bb5\u4e0d\u77e5\u9053\u9ad8\u5230\u54ea\u91cc\u53bb\u7684\u5730\u65b9\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u5728\u672a\u6765\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 VSCode \u914d\u7f6e Python \u5f00\u53d1\u73af\u5883\uff0c\u914d\u7f6e\u8f6f\u4ef6\u5de5\u7a0b\u8bfe\u7a0b\u4e2d\u6240\u9700\u8981\u7684\u6846\u67b6\u7684\u5f00\u53d1\u73af\u5883\uff0c\u800c\u8fd9\u4e9b\u90fd\u662f\u901a\u8fc7\u201c\u6269\u5c55\u201d\uff08Extension\uff09\u6765\u5b9e\u73b0\u7684\u3002","title":"VSCode \u914d\u7f6e"},{"location":"basic/vscode/#_1","text":"\u4e86\u89e3\u4e00\u4e2a C++ \u7a0b\u5e8f\u4ece\u6e90\u4ee3\u7801\u5230\u53ef\u6267\u884c\u7a0b\u5e8f\u4e2d\u53d1\u751f\u4e86\u7f16\u8bd1\u3001\u94fe\u63a5\u8fd9\u4e24\u6b65\u64cd\u4f5c\uff08\u300a\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u300b\u5927\u4f5c\u4e1a\u4e2d\u4f1a\u6709\u6b64\u90e8\u5206\u7684\u8bb2\u89e3\uff09 \u52a8\u624b\u80fd\u529b","title":"\u524d\u7f6e\u77e5\u8bc6"},{"location":"basic/vscode/#_2","text":"\u6253\u5f00 VSCode \u5b98\u7f51\uff1a https://code.visualstudio.com/ \u70b9\u51fb\u5927\u5927\u7684 Download \u6309\u94ae\uff08\u5982\u679c\u662f Windows 64 \u4f4d\u7528\u6237\u53ef\u4ee5\u70b9\u51fb\u4e0b\u62c9\u6846\u9009\u62e9 x64 \u5b89\u88c5\u5305\u7248\u672c\uff09 \u8fdb\u884c\u5b89\u88c5\u6216\u89e3\u538b\u7f29\uff08\u6ce8\u610f\u8def\u5f84\u4e2d\u4e0d\u80fd\u5b58\u5728\u4efb\u4f55\u4e2d\u6587\u5b57\u7b26\uff0c\u63a8\u8350\u4ec5\u7528\u5b57\u6bcd\u548c\u6570\u5b57\uff09 \u5230\u4f60\u5b89\u88c5 VSCode \u7684\u76ee\u5f55\u4e0b\uff0c\u65b0\u5efa data \u6587\u4ef6\u5939 \u8fd9\u91cc\u6211\u4eec\u65b0\u5efa data \u6587\u4ef6\u5939\u540e\uff0c\u4e4b\u540e VSCode \u8fd0\u884c\u65f6\u7684\u6269\u5c55\u63d2\u4ef6\u548c\u7528\u6237\u6570\u636e\u4fbf\u90fd\u4f1a\u5b58\u653e\u5728 data \u6587\u4ef6\u5939\u4e0b\uff0c\u8fd9\u6837\u53ef\u4ee5\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u907f\u514d\u7cfb\u7edf\u76d8\u5bb9\u91cf\u5360\u7528\u7684\u95ee\u9898\u3002\u5982\u679c\u4e0d\u65b0\u5efa data \u6587\u4ef6\u5939\uff0c\u90a3\u4e48 VSCode \u4f1a\u5c06\u4e0a\u8ff0\u63d2\u4ef6\u548c\u7528\u6237\u4fe1\u606f\u5b58\u653e\u5728\u7cfb\u7edf\u76d8\u7684\u7528\u6237\u76ee\u5f55\u4e0b\u3002","title":"\u4e0b\u8f7d\u4e0e\u8fd0\u884c"},{"location":"basic/vscode/#c","text":"","title":"C++ \u76f8\u5173\u5f00\u53d1\u73af\u5883\u914d\u7f6e"},{"location":"basic/vscode/#mingw64","text":"\u6211\u4eec\u53ef\u4ee5\u5148\u6253\u5f00\u7ec8\u7aef\uff08Windows \u7528\u6237\u8bf7\u4f7f\u7528 Win+R\uff0c\u8f93\u5165 cmd \uff09\uff0c\u5c1d\u8bd5\u8f93\u5165\uff1a 1 g++ --version \u5982\u679c\u4f60\u7684\u7ec8\u7aef\u8fd4\u56de\u4e86 g++ \u7684\u7248\u672c\u4fe1\u606f\uff0c\u606d\u559c\uff0c\u60a8 C++ \u7f16\u8bd1\u5668\u7684\u73af\u5883\u53d8\u91cf\u914d\u7f6e\u6b63\u786e\uff0c\u53ef\u4ee5\u8df3\u8fc7\u8fd9\u4e00\u5c0f\u8282\u3002\u5f53\u7136\uff0c\u5982\u679c\u60f3\u66f4\u52a0\u8be6\u7ec6\u5730\u4e86\u89e3\u73af\u5883\u53d8\u91cf\u662f\u4ec0\u4e48\uff0c\u53ef\u4ee5\u7ee7\u7eed\u9605\u8bfb\u8fd9\u4e00\u5c0f\u8282\u3002 \u800c\u5982\u679c\u8fd4\u56de\uff1a 1 2 'g++' \u4e0d\u662f\u5185\u90e8\u6216\u5916\u90e8\u547d\u4ee4\uff0c\u4e5f\u4e0d\u662f\u53ef\u8fd0\u884c\u7684\u7a0b\u5e8f \u6216\u6279\u5904\u7406\u6587\u4ef6\u3002 \u90a3\u4e48\u5219\u8bf4\u660e\u4f60\u7684\u7ec8\u7aef\u4e0d\u77e5\u9053 g++ \u662f\u4ec0\u4e48\u547d\u4ee4\u3002\u6211\u4eec\u63a5\u4e0b\u6765\u5c06\u9996\u5148\u8bb2\u89e3\u73af\u5883\u53d8\u91cf\u662f\u4ec0\u4e48\uff0c\u7136\u540e\u518d\u4e3a\u5927\u5bb6\u8bb2\u8ff0\u8be5\u600e\u4e48\u914d\u7f6e\u73af\u5883\u53d8\u91cf\u3002 \u4ec0\u4e48\u662f\u73af\u5883\u53d8\u91cf\uff1f \u5f53\u4f60\u7684 Shell \u5728\u6267\u884c\u547d\u4ee4\u65f6\uff0c\u4f1a\u5c1d\u8bd5\u5728 \u4e00\u7cfb\u5217\u8def\u5f84 \u4e0b\u641c\u7d22\u540c\u540d\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002\u8fd9\u4e00\u7cfb\u5217\u8def\u5f84\u6211\u4eec\u5c31\u79f0\u4f5c\u662f\u73af\u5883\u53d8\u91cf\u3002 Windows \u7528\u6237\u53ef\u4ee5\u5728\u7ec8\u7aef\u4e2d\u8f93\u5165 path \u6765\u67e5\u770b\u5f53\u524d\u73af\u5883\u53d8\u91cf\uff08\u7531\u4e8e\u6211\u8fdb\u884c\u8fc7\u4e00\u7cfb\u5217\u914d\u7f6e\uff0c\u6240\u4ee5\u5176\u8f93\u51fa\u7ed3\u679c\u53ef\u80fd\u4e0e\u4f60\u7684\u4e0d\u540c\uff09\uff1a 1 2 D: \\C oding>path PATH = D: \\A naconda ; D: \\A naconda \\L ibrary \\m ingw-w64 \\b in ; D: \\A naconda \\L ibrary \\u sr \\b in ; ...... Linux \u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 echo $PATH \u6765\u67e5\u770b\u81ea\u5df1\u7684\u73af\u5883\u53d8\u91cf\uff1a 1 2 c7w@cc7w > /mnt/d/Coding > echo $PATH /home/c7w/.local/lib/python3.8/site-packages:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/mnt/d/Anaconda:/mnt/d/Anaconda/Library/mingw-w64/bin:/mnt/d/Anaconda/Library/usr/bin:/mnt/d/Anaconda/Library/bin:/mnt/d/Anaconda/Scripts:/mnt/f/VM/bin/:/mnt/c/Program Files ( x86 ) /Common Files/Intel/Shared Libraries/redist/intel64/compiler:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:...... \u6ca1\u9519\uff0c\u5c31\u662f\u8fd9\u4e00\u7cfb\u5217\u6587\u4ef6\u5939\u3002\u56de\u5fc6\u6211\u4eec\u521a\u624d\u6267\u884c g++ --version \u547d\u4ee4\u7684\u65f6\u5019\uff0c\u6211\u4eec\u7684\u7ec8\u7aef\u4f1a\u5728\u8fd9\u4e00\u7cfb\u5217\u6587\u4ef6\u5939\u4e0b\u4e3a\u6211\u4eec\u5bfb\u627e\u53eb\u505a g++ \u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002\u5982\u679c\u627e\u5230\u4e86\u540d\u4e3a g++ \u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u6211\u4eec\u7684\u7ec8\u7aef\u5c31\u4f1a\u5c06\u53c2\u6570\u4f20\u5165\uff0c\u5c06\u5176\u6267\u884c\uff1b\u800c\u5982\u679c\u6211\u4eec\u7684\u7ec8\u7aef\u6ca1\u6709\u627e\u5230\uff0c\u90a3\u4e48\u5c31\u4f1a\u5411\u6211\u4eec\u62a5\u544a\u201c\u672a\u77e5\u547d\u4ee4\u201d\u3002 \u6211\u4eec\u521a\u521a\u5df2\u7ecf\u7406\u89e3\u4e86\u201c\u73af\u5883\u53d8\u91cf\uff08Path\uff09\u201d\u7684\u8fd0\u884c\u903b\u8f91\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u8bb2\u89e3\u5982\u4f55\u8fdb\u884c\u73af\u5883\u53d8\u91cf\u7684\u914d\u7f6e\u3002` \u5bf9\u4e8e Windows \u7528\u6237\uff0c\u8bf7\u6309\u4e0b Windows + S \u6253\u5f00\u641c\u7d22\u6846\uff0c\u5728\u5176\u4e2d\u8f93\u5165 path \uff0c\u7136\u540e\u9009\u62e9\"\u7f16\u8f91\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\"\uff0c\u8fdb\u800c\u9009\u62e9\u201c\u73af\u5883\u53d8\u91cf\u201d\uff0c\u7136\u540e\u9009\u62e9\u201c\u7cfb\u7edf\u53d8\u91cf\u201d\u4e2d\u7684 Path \u5b57\u6bb5\uff0c\u53cc\u51fb\u6253\u5f00\u540e\u5373\u53ef\u914d\u7f6e\u3002 \u5bf9\u4e8e Linux \u7528\u6237\uff0c\u73af\u5883\u53d8\u91cf\u662f\u7ed1\u5b9a\u5728\u4f60\u7684 Shell \u4e0a\u7684\uff0c\u4e0d\u540c\u7684 Shell \u6709\u4e0d\u540c\u7684\u914d\u7f6e\u65b9\u5f0f\u3002\u8fd9\u91cc\u6211\u4eec\u63d0\u4f9b\u4e00\u4e2a \u94fe\u63a5 \u5e2e\u52a9\u60a8\u4e86\u89e3\u73af\u5883\u53d8\u91cf\u7684\u76f8\u5173\u914d\u7f6e\u3002 \u4ec0\u4e48\u662f Mingw64\uff1f MinGW \u7684\u5168\u79f0\u662f\uff1aMinimalist GNU on Windows\u3002 \u5b83\u5b9e\u9645\u4e0a\u662f\u5c06\u7ecf\u5178\u7684\u5f00\u6e90 C \u8bed\u8a00\u7f16\u8bd1\u5668 GCC \u79fb\u690d\u5230\u4e86 Windows \u5e73\u53f0\u4e0b\uff0c\u5e76\u4e14\u5305\u542b\u4e86 Win32API\uff0c\u56e0\u6b64\u53ef\u4ee5\u5c06\u6e90\u4ee3\u7801\u7f16\u8bd1\u4e3a\u53ef\u5728 Windows \u4e2d\u8fd0\u884c\u7684\u53ef\u6267\u884c\u7a0b\u5e8f\u3002\u800c\u4e14\u8fd8\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b Windows \u4e0d\u5177\u5907\u7684\uff0cLinux\u5e73\u53f0\u4e0b\u7684\u5f00\u53d1\u5de5\u5177\u3002 \u4e00\u53e5\u8bdd\u6765\u6982\u62ec\uff1aMinGW \u5c31\u662f GCC \u7684 Windows \u7248\u672c\u3002\u8fd9\u662f\u5c06\u4f60\u5199\u7684 C/C++ \u8bed\u8a00\u7684\u6e90\u4ee3\u7801\u7f16\u8bd1\u6210\u6c47\u7f16\u4ee3\u7801\uff0c\u8fdb\u800c\u94fe\u63a5\u6210\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5de5\u5177\u3002\u4e4b\u524d\u6211\u4eec\u7684 Dev-C++ \u4e8b\u5b9e\u4e0a\u4e5f\u96c6\u6210\u4e86\u8fd9\u4e2a\u5de5\u5177\u3002 \u6211\u4eec\u4e0b\u8f7d\u5b98\u65b9\u7684\u5b89\u88c5\u5de5\u5177\uff08 \u94fe\u63a5 \uff09\uff0c\u4e0b\u8f7d\u5b8c\u6210\u540e\u53f3\u952e\u4ee5\u7ba1\u7406\u5458\u8eab\u4efd\u8fd0\u884c\uff0c Architecture \u4e2d i686 \u662f\u9488\u5bf9\u4e8e 32 \u4f4d\u7cfb\u7edf\uff0c x86_64 \u9488\u5bf9\u4e8e 64 \u4f4d\u7cfb\u7edf\uff0c\u5176\u4ed6\u4e0d\u7528\u4fee\u6539\uff0c\u8fdb\u5165\u4e0b\u4e00\u6b65\u9009\u62e9\u5b89\u88c5\u76ee\u5f55\u5373\u53ef\u3002\u7136\u540e\u5373\u53ef\u7b49\u5f85\u5b89\u88c5\u7a0b\u5e8f\u4e0b\u8f7d\u5e76\u8fdb\u884c\u5b89\u88c5\u3002 \u7136\u540e\uff0c\u6211\u4eec\u9700\u8981\u8fdb\u884c\u73af\u5883\u53d8\u91cf\u914d\u7f6e\u3002\u8fdb\u5165 Mingw64 \u7684\u5b89\u88c5\u8def\u5f84/mingw64/bin/ \uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230 gcc \uff0c g++ \u8fd9\u4e9b\u6211\u4eec\u719f\u6089\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002 \u7136\u540e\u6211\u4eec\u9700\u8981\u505a\u7684\u5c31\u662f\u5c06\u8fd9\u4e2a\u6587\u4ef6\u5939\u6dfb\u52a0\u81f3\u73af\u5883\u53d8\u91cf\u4e2d\u3002 \u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u6253\u5f00\u7ec8\u7aef\uff0c\u8f93\u5165 g++ \u9a8c\u8bc1\u73af\u5883\u53d8\u91cf\u662f\u5426\u914d\u7f6e\u6210\u529f\u3002\uff08\u8bf7\u6ce8\u610f\uff0c\u5728\u73af\u5883\u53d8\u91cf\u914d\u7f6e\u540e\u9700\u8981\u91cd\u542f\u7ec8\u7aef\u624d\u80fd\u751f\u6548\uff09","title":"\u73af\u5883\u53d8\u91cf\u4e0e Mingw64"},{"location":"basic/vscode/#make","text":"\u540c\u65f6\uff0c\u9488\u5bf9\u4e8e\u6211\u4eec\u4e4b\u540e\u8bfe\u4e0a\u6240\u9700\u8981\u7528\u5230\u7684 make \u547d\u4ee4\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u540c\u76ee\u5f55\u4e0b\u7684 mingw32-make.exe \u590d\u5236\u4e00\u4efd\uff0c\u6539\u540d\u4e3a make.exe \uff0c\u8fd9\u6837\u6211\u4eec\u4e5f\u80fd\u6b63\u5e38\u4f7f\u7528 make \u547d\u4ee4\u4e86\u3002 \u7531\u4e8e Linux \u5e73\u53f0\u81ea\u5e26\u4e86 gcc \u548c make \u7b49\u7b49\u7f16\u8bd1\u5de5\u5177\uff0c\u6240\u4ee5\u8fd9\u91cc\u4e0d\u9700\u8981\u8fdb\u884c\u989d\u5916\u7684\u914d\u7f6e\u3002","title":"Make"},{"location":"basic/vscode/#_3","text":"\u6211\u4eec\u6253\u5f00 VSCode\uff0c\u5148\u7b80\u5355\u4ecb\u7ecd\u4e0b\u754c\u9762\u53ca\u5176\u529f\u80fd\uff1a \u7ea2\u8272\u6846\u662f\u6211\u4eec\u5f53\u524d\u9879\u76ee\uff08\u5373\u6587\u4ef6\u5939\uff09\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u6e05\u5355\uff0c\u84dd\u8272\u6846\u662f\u6211\u4eec\u7f16\u5199\u4ee3\u7801\u7684\u5730\u65b9\uff0c\u7eff\u8272\u6846\u662f\u6211\u4eec\u7684\u5e94\u7528\u5546\u5e97\u3002 \u8fd9\u91cc\u6211\u4eec\u63a8\u8350\u51e0\u4e2a\u6269\u5c55\uff0c\u5728\u5e94\u7528\u5546\u5e97\u4e2d\u641c\u7d22\u5373\u53ef\u4e0b\u8f7d\uff1a Chinese (Simplified) Language Pack for Visual Studio Code\uff1a\u8bed\u8a00 Code Runner\uff1a\u8c03\u8bd5\u7528 C/C++\uff1a\u652f\u6301\u5728 Code \u4e2d\u8c03\u8bd5 C/C++ \u7a0b\u5e8f Remote - SSH\uff1a\u4e4b\u540e\u8fdb\u884c\u8fdc\u7a0b\u5f00\u53d1\u4f1a\u7528\u5230\uff0c\u8fd9\u91cc\u4e0d\u591a\u505a\u4ecb\u7ecd \u5728\u5b89\u88c5\u4e86\u7b80\u4f53\u4e2d\u6587\u63d2\u4ef6\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u6309 Ctrl + Shift + P \uff0c\u6253\u5f00\u8f93\u5165\u6846\uff0c\u8f93\u5165 Configurate display language \uff0c\u9009\u62e9\u4e2d\u6587\u540e\u91cd\u65b0\u542f\u52a8\u5373\u53ef\u3002","title":"\u6269\u5c55\u63d2\u4ef6\u7684\u5b89\u88c5"},{"location":"basic/vscode/#_4","text":"\u5982\u4f55\u8fd0\u884c\u4e00\u6bb5\u4ee3\u7801\u5462\uff1f\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728 \u5bf9\u5e94\u7684\u4ee3\u7801\u754c\u9762 \u6309\u4e0b F5 \u6216\u662f\u5728\u83dc\u5355\u680f\u627e\u5230\u201c\u8fd0\u884c > \u542f\u52a8\u8c03\u8bd5\u201d\uff0c\u4fbf\u53ef\u4ee5\u542f\u52a8\u8c03\u8bd5\u6a21\u5f0f\uff1a \u5728\u914d\u7f6e\u4e2d\u9009\u62e9 C++ (GDB) \uff0c\u8fdb\u800c\u9009\u62e9 g++.exe \u3002 \u7136\u540e\u6211\u4eec\u4f1a\u53d1\u73b0\u9879\u76ee\u8def\u5f84\u4e0b\u751f\u6210\u4e86\u4e00\u4e2a .vscode \u6587\u4ef6\u5939\uff0c\u5185\u542b tasks.json \u548c launch.json \uff0c\u8fd9\u4e24\u4e2a\u6587\u4ef6\u5206\u522b\u6709\u4ec0\u4e48\u4f5c\u7528\u6211\u4eec\u5373\u5c06\u5c31\u4f1a\u8fdb\u884c\u4ecb\u7ecd\u3002 \uff08\u4f60\u7684\u754c\u9762\u6392\u7248\u53ef\u80fd\u548c\u6211\u6709\u6240\u4e0d\u540c\uff0c\u4e0d\u8fc7\u4e3b\u8981\u529f\u80fd\u662f\u5927\u540c\u5c0f\u5f02\u7684\uff0c\u5f53\u4f60\u719f\u7ec3\u8fd0\u7528\u4e86 Code \u4e4b\u540e\u4f60\u53ef\u4ee5\u81ea\u884c\u5c06\u8fd9\u51e0\u4e2a\u6846\u6846\u62d6\u6765\u62d6\u53bb\u6446\u5230\u4f60\u89c9\u5f97\u8212\u9002\u7684\u4f4d\u7f6e\uff09 \u6211\u4eec\u63a5\u4e0b\u6765\u5c06\u5206\u5355\u6587\u4ef6\u9879\u76ee\u548c\u591a\u6587\u4ef6\u9879\u76ee\u8fdb\u884c\u8ba8\u8bba\uff0c\u8bf4\u660e\u4e00\u4e9b\u5728 Code \u4e2d\u8c03\u8bd5 C++ \u4ee3\u7801\u7684\u6280\u5de7\u3002","title":"\u4ee3\u7801\u8c03\u8bd5"},{"location":"basic/vscode/#_5","text":"\u5355\u6587\u4ef6\u9879\u76ee\u6307\u53ea\u6709\u4e00\u4e2a cpp \u6587\u4ef6\u7684\u9879\u76ee\uff0c main() \u51fd\u6570\u7684\u5b9a\u4e49\u5c31\u5728\u5176\u4e2d\uff0c\u6211\u4eec\u5728\u300a\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u300b\u8bfe\u7a0b\u7684\u5927\u90e8\u5206\u5e73\u65f6\u4f5c\u4e1a\u90fd\u662f\u8fd9\u79cd\u9879\u76ee\u3002 \u8fd9\u79cd\u9879\u76ee\u6211\u4eec\u76f4\u63a5\u6309 F5 \u4fbf\u53ef\u8fdb\u884c\u8fd0\u884c\uff0c\u5176\u8f93\u51fa\u7ed3\u679c\u4f1a\u5728\u201c\u7ec8\u7aef\u201d\u9009\u9879\u5361\u4e2d\u51fa\u73b0\u3002 \u8fd9\u662f\u4e00\u6bb5\u6f14\u793a\u5355\u5411\u5e73\u65b9\u548c\u53cc\u5411\u5e73\u65b9\u63a2\u6d4b\u5728\u54c8\u5e0c\u8868\u4e2d\u53ef\u4ee5\u5360\u7528\u7684\u4f4d\u7f6e\u7684\u793a\u4f8b\u7a0b\u5e8f\uff0c\u5728\u8fd9\u91cc\u4ec5\u505a\u8bf4\u660e\u4f7f\u7528\uff0c\u5927\u5bb6\u4e0d\u5fc5\u7406\u89e3\u5176\u80cc\u540e\u7684\u539f\u7406\u3002\uff08\u4e8b\u5b9e\u4e0a\u4f60\u7ed9\u522b\u4eba\u8c03\u4ee3\u7801\u7684\u65f6\u5019\u4e0d\u90fd\u662f\u8fd9\u6837\u561b\uff0c\u5bf9\u7740\u770b\u4e0d\u61c2\u7684\u903b\u8f91\u6ee1\u8138\u9ed1\u7ebf.jpeg\uff09 \u60f3\u8981\u5728\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u8bbe\u7f6e\u65ad\u70b9\uff0c\u6211\u4eec\u53ea\u9700\u70b9\u51fb\u5bf9\u5e94\u7684\u884c\u53f7\uff1a \u5728\u8fd9\u91cc\u8bbe\u7f6e\u65ad\u70b9\uff0c\u7a0b\u5e8f\u5c06\u4f1a\u5728\u7b2c 30 \u884c\u6267\u884c\u5b8c\u6210\uff0c\u7b2c 31 \u884c\u5c06\u8981\u6267\u884c\u7684\u65f6\u5019\u89e6\u53d1\u65ad\u70b9\uff0c\u8ba9\u6211\u4eec\u770b\u4e00\u770b\uff1a \u7ea2\u6846\uff0c\u4e5f\u5c31\u662f\u201c\u7ec8\u7aef\u6846\u4e2d\uff0c\u6211\u4eec\u7684\u7a0b\u5e8f\u8f93\u51fa\u4e86\u524d\u534a\u6bb5\u8fd0\u884c\u65f6\u4ea7\u751f\u7684 cout \u4fe1\u606f\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u8bf4\u660e\u8be5\u5982\u4f55\u67e5\u770b\u4e2d\u95f4\u53d8\u91cf\uff1a \u6bd4\u5982\u7a0b\u5e8f\u5728\u547d\u4e2d\u8fd9\u4e2a\u65ad\u70b9\u65f6\uff0c\u6211\u4eec\u6709\u4ee5\u4e0b\u9014\u5f84\u83b7\u53d6\u4e2d\u95f4\u53d8\u91cf\u7684\u503c\uff1a \u5728\u9ec4\u8272\u6846\u201c\u53d8\u91cf\u201d\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u7a0b\u5e8f\u81ea\u52a8\u8ffd\u6eaf\u7684\u5c40\u90e8\u53d8\u91cf\u548c\u5bc4\u5b58\u5668\u503c\u3002\u5728\u84dd\u8272\u6846\u201c\u76d1\u89c6\u201d\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u81ea\u884c\u5b9a\u4e49\u4e00\u4e9b\u9700\u8981\u8ffd\u6eaf\u7684\u53d8\u91cf\u3002\u5728\u7ea2\u8272\u6846\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8f93\u5165\u53d8\u91cf\u540d\u6765\u67e5\u770b\u5176\u5bf9\u5e94\u7684\u503c\u3002 \u7136\u540e\uff0c\u6211\u4eec\u6765\u5c06\u76ee\u5149\u653e\u5728\u4e0a\u8ff0\u8fd9\u51e0\u4e2a\u6309\u94ae\u8eab\u4e0a\u3002 \u7ee7\u7eed\uff08F5\uff09\u6309\u94ae\u5c06\u4f1a\u4f7f\u7a0b\u5e8f\u7ee7\u7eed\u6267\u884c\uff0c\u76f4\u5230\u547d\u4e2d\u4e0b\u4e00\u4e2a\u65ad\u70b9\u6216\u662f\u5230\u7a0b\u5e8f\u7ed3\u5c3e\u3002 \u5355\u6b65\u8df3\u8fc7\uff08F10\uff09\u6309\u94ae\u5bf9\u4e8e\u7a0b\u5e8f\u6765\u8bf4\uff0c\u5982\u679c\u5c06\u8981\u6267\u884c\u7684\u884c\u8c03\u7528\u4e86\u67d0\u4e9b\u51fd\u6570\uff0c\u90a3\u4e48\u5c06\u76f4\u63a5\u5c06\u672c\u884c\u6267\u884c\u5b8c\u6bd5\uff0c\u8fdb\u5165\u4e0b\u4e00\u884c\u3002 \u5355\u6b65\u8c03\u8bd5\uff08F11\uff09\u6309\u94ae\u5bf9\u4e8e\u7a0b\u5e8f\u6765\u8bf4\uff0c\u5982\u679c\u5c06\u8981\u6267\u884c\u7684\u884c\u8c03\u7528\u4e86\u67d0\u4e9b\u51fd\u6570\uff0c\u90a3\u4e48\u5c06\u8fdb\u5165\u5c06\u8981\u6267\u884c\u7684\u51fd\u6570\u5185\u90e8\u3002 \u505c\u6b62\uff08Shift+F5\uff09\u6309\u94ae\u7ec8\u6b62\u5f53\u524d\u8c03\u8bd5\u5de5\u4f5c\u3002","title":"\u5355\u6587\u4ef6\u9879\u76ee"},{"location":"basic/vscode/#_6","text":"\u5bf9\u4e8e\u591a\u6587\u4ef6\u9879\u76ee\u7684\u8c03\u8bd5\u6765\u8bf4\uff0c\u6211\u4eec\u91cd\u70b9\u5173\u6ce8\u70b9\u5728\u4e8e .vscode \u4e0b\u4e24\u4e2a\u6587\u4ef6\u7684\u914d\u7f6e\u3002 \u9996\u5148\u6211\u4eec\u5c06\u6211\u4eec\u7684\u793a\u4f8b\u7a0b\u5e8f\u4fee\u6539\u4e3a\u591a\u6587\u4ef6\u9879\u76ee\uff1a \u6211\u4eec\u91c7\u7528\u6700\u7b80\u5355\u7684\u65b9\u5f0f\uff0c\u5c06\u6211\u4eec\u7684\u5355\u6587\u4ef6\u9879\u76ee\u9b54\u6539\u6210\u591a\u6587\u4ef6\u3002 \u6211\u4eec\u56de\u5fc6\u5982\u679c\u4f7f\u7528\u547d\u4ee4\u884c\uff0c\u8be5\u5982\u4f55\u5c06\u6211\u4eec\u7684\u7a0b\u5e8f\u7f16\u8bd1\uff1a 1 g++ hash.cpp another.cpp -o main \u6ca1\u9519\uff0c\u6211\u4eec\u73b0\u5728\u914d\u7f6e Code \u4f7f\u5f97\u5176\u5728\u201c\u751f\u6210\u76ee\u6807\u6587\u4ef6\u201d\u4efb\u52a1\u4e2d\u6267\u884c\u4e0a\u8ff0\u547d\u4ee4\u3002 tasks.json \u8d1f\u8d23\u53ef\u6267\u884c\u6587\u4ef6\u7684\u751f\u6210\uff0c\u6211\u4eec\u4e3b\u8981\u8fdb\u884c\u5982\u4e0b\u4fee\u6539\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 { \"tasks\" : [ { \"type\" : \"shell\" , // cppbuild -> shell \"label\" : \"C/C++: g++.exe \u751f\u6210\u6d3b\u52a8\u6587\u4ef6\" , \"command\" : \"D:\\\\Mingw\\\\mingw64\\\\bin\\\\g++.exe\" , \"args\" : [ \"-g\" , \"hash.cpp\" , // ${file} -> your source code list \"another.cpp\" , \"-o\" , \"${fileDirname}\\\\main.exe\" // main.exe ], \"options\" : { \"cwd\" : \"${fileDirname}\" }, \"problemMatcher\" : [ \"$gcc\" ], \"group\" : { \"kind\" : \"build\" , \"isDefault\" : true }, \"detail\" : \"\u8c03\u8bd5\u5668\u751f\u6210\u7684\u4efb\u52a1\u3002\" } ], \"version\" : \"2.0.0\" } launch.json \u4e3b\u8981\u8d1f\u8d23\u8c03\u8bd5\u76ee\u6807\u7a0b\u5e8f\uff0c\u6211\u4eec\u505a\u4ee5\u4e0b\u4fee\u6539\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 { // \u4f7f\u7528 IntelliSense \u4e86\u89e3\u76f8\u5173\u5c5e\u6027\u3002 // \u60ac\u505c\u4ee5\u67e5\u770b\u73b0\u6709\u5c5e\u6027\u7684\u63cf\u8ff0\u3002 // \u6b32\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95ee: https://go.microsoft.com/fwlink/?linkid=830387 \"version\" : \"0.2.0\" , \"configurations\" : [ { \"name\" : \"g++.exe - \u751f\u6210\u548c\u8c03\u8bd5\u6d3b\u52a8\u6587\u4ef6\" , \"type\" : \"cppdbg\" , \"request\" : \"launch\" , \"program\" : \"${fileDirname}\\\\main.exe\" , // main.exe \"args\" : [], \"stopAtEntry\" : false , \"cwd\" : \"${fileDirname}\" , \"environment\" : [], \"externalConsole\" : false , \"MIMode\" : \"gdb\" , \"miDebuggerPath\" : \"D:\\\\Mingw\\\\mingw64\\\\bin\\\\gdb.exe\" , \"setupCommands\" : [ { \"description\" : \"\u4e3a gdb \u542f\u7528\u6574\u9f50\u6253\u5370\" , \"text\" : \"-enable-pretty-printing\" , \"ignoreFailures\" : true } ], \"preLaunchTask\" : \"C/C++: g++.exe \u751f\u6210\u6d3b\u52a8\u6587\u4ef6\" } ] } \u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u6109\u5feb\u5730\u8c03\u8bd5\u591a\u6587\u4ef6\u9879\u76ee\u4e86\u3002","title":"\u591a\u6587\u4ef6\u9879\u76ee"},{"location":"basic/vscode/#_7","text":"\u81ea\u884c\u7814\u7a76 Remote-SSH \u7684\u4f7f\u7528\u65b9\u6cd5\uff0c\u5982\u4f55\u8fde\u63a5\u5230\u5916\u90e8\u670d\u52a1\u5668\u8fdb\u884c\u5f00\u53d1 \u81ea\u884c\u7814\u7a76 Python \u914d\u7f6e\u8c03\u8bd5\u73af\u5883\u7684\u65b9\u6cd5 \u5728\u300a\u8f6f\u4ef6\u5de5\u7a0b\u300b\u8bfe\u7a0b\u4e2d\uff0c\u4f7f\u7528 Code Prettier \u63d2\u4ef6 + ESLint \u89c4\u8303\u9879\u76ee","title":"\u540e\u7eed\u5b66\u4e60"},{"location":"basic/vscode/#_8","text":"https://code.visualstudio.com/ https://zhuanlan.zhihu.com/p/76613134 https://blog.csdn.net/linjf520/article/details/108559210 Tips \u914d\u7f6e\u5f00\u53d1\u73af\u5883\u5f80\u5f80\u662f\u5728\u5b66\u4e60\u7684\u8fc7\u7a0b\u4e2d\u6700\u607c\u4eba\u7684\u4e00\u4ef6\u4e8b\uff0c\u4f46\u662f\u4e0d\u7528\u5fc3\u6025\uff0c\u5e38\u8a00\u9053\u201c\u826f\u597d\u7684\u5f00\u7aef\u662f\u6210\u529f\u7684\u4e00\u534a\u201d\u3002\u5982\u679c\u5b9e\u5728\u9047\u5230\u914d\u7f6e\u95ee\u9898\uff0c\u5728\u8fdb\u884c\u641c\u7d22\u65e0\u6cd5\u89e3\u51b3\u540e\uff0c\u5efa\u8bae\u5411\u540c\u5e74\u7ea7/\u5b66\u957f/\u7b54\u7591\u574a\u8fdb\u884c\u6c42\u52a9\u3002","title":"\u8d44\u6e90\u94fe\u63a5"},{"location":"courses/","text":"\u8bfe\u7a0b\u6307\u5f15 \u00b6 \u672c\u9875\u9762\u5c06\u6839\u636e\u6e05\u534e\u5927\u5b66\u8ba1\u7b97\u673a\u79d1\u5b66\u4e0e\u6280\u672f\u7cfb\u57f9\u517b\u65b9\u6848\u4e2d\u7684\u8bfe\u7a0b\uff0c\u6307\u51fa\u5404\u4e2a\u8bfe\u7a0b\u5b66\u4e60\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u53c2\u8003\u7684\u5f15\u5bfc\u6587\u6863\u3002 \u5927\u4e00\u5e74\u7ea7 \u00b6 \u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\uff08\u79cb\u5b63\u5b66\u671f\uff09 \u00b6 \u57fa\u672c\u6280\u80fd / Linux \u5165\u95e8 \u57fa\u672c\u6280\u80fd / VSCode \u914d\u7f6e \u57fa\u672c\u6280\u80fd / \u5982\u4f55\u4f7f\u7528\u641c\u7d22\u5f15\u64ce \u7f16\u7a0b\u8bed\u8a00 / C \u8bed\u8a00\u57fa\u7840 \u7f16\u7a0b\u8bed\u8a00 / \u73b0\u4ee3 C++ \u8bed\u8a00 \u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\uff08\u6625\u5b63\u5b66\u671f\uff09 \u00b6 \u7f16\u7a0b\u8bed\u8a00 / C \u8bed\u8a00\u57fa\u7840 \u7f16\u7a0b\u8bed\u8a00 / \u73b0\u4ee3 C++ \u8bed\u8a00 \u7a0b\u5e8f\u8bbe\u8ba1\u8bad\u7ec3\uff08\u590f\u5b63\u5b66\u671f\uff09 \u00b6 \u7f16\u7a0b\u8bed\u8a00 / Python \u8bed\u8a00\u57fa\u7840 \u7f16\u7a0b\u8bed\u8a00 / Java \u8bed\u8a00\u57fa\u7840 \u7f16\u7a0b\u8bed\u8a00 / JavaScript \u8bed\u8a00\u57fa\u7840 \u5927\u4e8c\u5e74\u7ea7 \u00b6 \u6570\u636e\u7ed3\u6784\uff08\u79cb\u5b63\u5b66\u671f\uff09 \u00b6 \u5916\u90e8\u94fe\u63a5 / OI-Wiki \u4eba\u5de5\u667a\u80fd\u5bfc\u8bba\uff08\u6625\u5b63\u5b66\u671f\uff09 \u00b6 \u4eba\u5de5\u667a\u80fd & \u673a\u5668\u5b66\u4e60 / Pytorch \u5165\u95e8 \u8f6f\u4ef6\u5de5\u7a0b\uff08\u6625\u5b63\u5b66\u671f\uff09 \u00b6 \u7f16\u7a0b\u8bed\u8a00 / JavaScript \u8bed\u8a00\u57fa\u7840 \u7f16\u7a0b\u8bed\u8a00 / TypeScript \u8bed\u8a00\u57fa\u7840 \u5927\u4e09\u5e74\u7ea7 \u00b6 \u865a\u62df\u73b0\u5b9e\u6280\u672f\uff08\u79cb\u5b63\u5b66\u671f\uff09 \u00b6 \u7f16\u7a0b\u8bed\u8a00 / JavaScript \u8bed\u8a00\u57fa\u7840 \u64cd\u4f5c\u7cfb\u7edf\uff08\u6625\u5b63\u5b66\u671f\uff09 \u00b6 \u7f16\u7a0b\u8bed\u8a00 / Rust \u8bed\u8a00\u57fa\u7840","title":"\u8bfe\u7a0b\u6307\u5f15"},{"location":"courses/#_1","text":"\u672c\u9875\u9762\u5c06\u6839\u636e\u6e05\u534e\u5927\u5b66\u8ba1\u7b97\u673a\u79d1\u5b66\u4e0e\u6280\u672f\u7cfb\u57f9\u517b\u65b9\u6848\u4e2d\u7684\u8bfe\u7a0b\uff0c\u6307\u51fa\u5404\u4e2a\u8bfe\u7a0b\u5b66\u4e60\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u53c2\u8003\u7684\u5f15\u5bfc\u6587\u6863\u3002","title":"\u8bfe\u7a0b\u6307\u5f15"},{"location":"courses/#_2","text":"","title":"\u5927\u4e00\u5e74\u7ea7"},{"location":"courses/#_3","text":"\u57fa\u672c\u6280\u80fd / Linux \u5165\u95e8 \u57fa\u672c\u6280\u80fd / VSCode \u914d\u7f6e \u57fa\u672c\u6280\u80fd / \u5982\u4f55\u4f7f\u7528\u641c\u7d22\u5f15\u64ce \u7f16\u7a0b\u8bed\u8a00 / C \u8bed\u8a00\u57fa\u7840 \u7f16\u7a0b\u8bed\u8a00 / \u73b0\u4ee3 C++ \u8bed\u8a00","title":"\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\uff08\u79cb\u5b63\u5b66\u671f\uff09"},{"location":"courses/#_4","text":"\u7f16\u7a0b\u8bed\u8a00 / C \u8bed\u8a00\u57fa\u7840 \u7f16\u7a0b\u8bed\u8a00 / \u73b0\u4ee3 C++ \u8bed\u8a00","title":"\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\uff08\u6625\u5b63\u5b66\u671f\uff09"},{"location":"courses/#_5","text":"\u7f16\u7a0b\u8bed\u8a00 / Python \u8bed\u8a00\u57fa\u7840 \u7f16\u7a0b\u8bed\u8a00 / Java \u8bed\u8a00\u57fa\u7840 \u7f16\u7a0b\u8bed\u8a00 / JavaScript \u8bed\u8a00\u57fa\u7840","title":"\u7a0b\u5e8f\u8bbe\u8ba1\u8bad\u7ec3\uff08\u590f\u5b63\u5b66\u671f\uff09"},{"location":"courses/#_6","text":"","title":"\u5927\u4e8c\u5e74\u7ea7"},{"location":"courses/#_7","text":"\u5916\u90e8\u94fe\u63a5 / OI-Wiki","title":"\u6570\u636e\u7ed3\u6784\uff08\u79cb\u5b63\u5b66\u671f\uff09"},{"location":"courses/#_8","text":"\u4eba\u5de5\u667a\u80fd & \u673a\u5668\u5b66\u4e60 / Pytorch \u5165\u95e8","title":"\u4eba\u5de5\u667a\u80fd\u5bfc\u8bba\uff08\u6625\u5b63\u5b66\u671f\uff09"},{"location":"courses/#_9","text":"\u7f16\u7a0b\u8bed\u8a00 / JavaScript \u8bed\u8a00\u57fa\u7840 \u7f16\u7a0b\u8bed\u8a00 / TypeScript \u8bed\u8a00\u57fa\u7840","title":"\u8f6f\u4ef6\u5de5\u7a0b\uff08\u6625\u5b63\u5b66\u671f\uff09"},{"location":"courses/#_10","text":"","title":"\u5927\u4e09\u5e74\u7ea7"},{"location":"courses/#_11","text":"\u7f16\u7a0b\u8bed\u8a00 / JavaScript \u8bed\u8a00\u57fa\u7840","title":"\u865a\u62df\u73b0\u5b9e\u6280\u672f\uff08\u79cb\u5b63\u5b66\u671f\uff09"},{"location":"courses/#_12","text":"\u7f16\u7a0b\u8bed\u8a00 / Rust \u8bed\u8a00\u57fa\u7840","title":"\u64cd\u4f5c\u7cfb\u7edf\uff08\u6625\u5b63\u5b66\u671f\uff09"},{"location":"frontend/","text":"\u524d\u7aef\u6846\u67b6 \u00b6 \u672c\u90e8\u5206\u4e3b\u8981\u4ecb\u7ecd Web\u3001\u79fb\u52a8\u7aef\u524d\u7aef\u5f00\u53d1\u53ef\u80fd\u4f7f\u7528\u5230\u7684\u5404\u7c7b\u6846\u67b6\u3002","title":"\u524d\u7aef\u6846\u67b6"},{"location":"frontend/#_1","text":"\u672c\u90e8\u5206\u4e3b\u8981\u4ecb\u7ecd Web\u3001\u79fb\u52a8\u7aef\u524d\u7aef\u5f00\u53d1\u53ef\u80fd\u4f7f\u7528\u5230\u7684\u5404\u7c7b\u6846\u67b6\u3002","title":"\u524d\u7aef\u6846\u67b6"},{"location":"frontend/react/","text":"React \u5f00\u53d1\u5165\u95e8 \u00b6 React \u524d\u7aef\u6846\u67b6\u662f\u5f53\u4e0b\u5e38\u7528\u7684\u7f51\u9875\u524d\u7aef\u6846\u67b6\uff0c\u57fa\u4e8e JavaScript \u8bed\u8a00\uff0c\u5e76\u63d0\u4f9b\u4e86\u5bf9 TypeScript \u8bed\u8a00\u7684\u652f\u6301\u3002 \u524d\u7f6e\u77e5\u8bc6 \u00b6 \u5177\u6709 JavaScript \u4ee5\u53ca TypeScript \u8bed\u8a00\u57fa\u7840 \u7406\u89e3 HTML \u6807\u7b7e\u8bed\u6cd5\u548c CSS \u8bed\u6cd5 \u6709\u7b80\u5355\u7684\u72b6\u6001\u673a\u601d\u7ef4 \u540e\u7eed\u62d3\u5c55 \u00b6 React \u4f5c\u4e3a\u5e7f\u6cdb\u8fd0\u7528\u7684\u7f51\u9875\u524d\u7aef\u6846\u67b6\uff0c\u57fa\u672c\u4e0a\u53ef\u4ee5\u5e94\u5bf9\u5927\u90e8\u5206\u5e38\u89c1\u7684\u7f51\u9875\u524d\u7aef\u7f16\u5199\u4efb\u52a1\u3002 \u53ef\u4ee5\u5e94\u7528 React \u76f8\u5173\u77e5\u8bc6\u7684\u8bfe\u7a0b\uff1a \u8f6f\u4ef6\u5de5\u7a0b \u3010\u5176\u4ed6\u9700\u8981\u7f16\u5199\u7f51\u9875\u524d\u7aef\u7684\u8bfe\u7a0b\u3011 \u8d44\u6e90\u94fe\u63a5 \u00b6 React \u5b98\u65b9\u4e2d\u6587\u6587\u6863 https://react.docschina.org/ \u5b98\u65b9\u6587\u6863\u4e0e\u6211\u4eec\u7684\u6587\u6863 React \u5b98\u65b9\u6587\u6863\u63d0\u4f9b\u4e86\u4e24\u79cd\u5b66\u4e60\u8def\u5f84\uff0c\u5206\u522b\u662f\uff1a \u8fb9\u505a\u8fb9\u5b66\u7f16\u5199\u4e00\u4e2a\u4e95\u5b57\u68cb\u6e38\u620f https://react.docschina.org/tutorial/tutorial.html \u8bb2\u89e3\u5177\u4f53\u7684 React \u8bbe\u8ba1\u54f2\u5b66\u4e0e\u5404\u79cd\u6982\u5ff5 https://react.docschina.org/docs/hello-world.html \u672c\u6587\u6863\u7ed3\u5408\u4e86\u8fd9\u4e24\u6761\u8def\u5f84\uff0c\u63d0\u4f9b\u4e86\u5177\u4f53\u7684\u793a\u4f8b\u4e5f\u540c\u65f6\u5c1d\u8bd5\u7740\u5177\u4f53\u8bb2\u89e3\u5404\u7c7b\u6982\u5ff5\u3002","title":"React \u5f00\u53d1\u5165\u95e8"},{"location":"frontend/react/#react","text":"React \u524d\u7aef\u6846\u67b6\u662f\u5f53\u4e0b\u5e38\u7528\u7684\u7f51\u9875\u524d\u7aef\u6846\u67b6\uff0c\u57fa\u4e8e JavaScript \u8bed\u8a00\uff0c\u5e76\u63d0\u4f9b\u4e86\u5bf9 TypeScript \u8bed\u8a00\u7684\u652f\u6301\u3002","title":"React \u5f00\u53d1\u5165\u95e8"},{"location":"frontend/react/#_1","text":"\u5177\u6709 JavaScript \u4ee5\u53ca TypeScript \u8bed\u8a00\u57fa\u7840 \u7406\u89e3 HTML \u6807\u7b7e\u8bed\u6cd5\u548c CSS \u8bed\u6cd5 \u6709\u7b80\u5355\u7684\u72b6\u6001\u673a\u601d\u7ef4","title":"\u524d\u7f6e\u77e5\u8bc6"},{"location":"frontend/react/#_2","text":"React \u4f5c\u4e3a\u5e7f\u6cdb\u8fd0\u7528\u7684\u7f51\u9875\u524d\u7aef\u6846\u67b6\uff0c\u57fa\u672c\u4e0a\u53ef\u4ee5\u5e94\u5bf9\u5927\u90e8\u5206\u5e38\u89c1\u7684\u7f51\u9875\u524d\u7aef\u7f16\u5199\u4efb\u52a1\u3002 \u53ef\u4ee5\u5e94\u7528 React \u76f8\u5173\u77e5\u8bc6\u7684\u8bfe\u7a0b\uff1a \u8f6f\u4ef6\u5de5\u7a0b \u3010\u5176\u4ed6\u9700\u8981\u7f16\u5199\u7f51\u9875\u524d\u7aef\u7684\u8bfe\u7a0b\u3011","title":"\u540e\u7eed\u62d3\u5c55"},{"location":"frontend/react/#_3","text":"React \u5b98\u65b9\u4e2d\u6587\u6587\u6863 https://react.docschina.org/ \u5b98\u65b9\u6587\u6863\u4e0e\u6211\u4eec\u7684\u6587\u6863 React \u5b98\u65b9\u6587\u6863\u63d0\u4f9b\u4e86\u4e24\u79cd\u5b66\u4e60\u8def\u5f84\uff0c\u5206\u522b\u662f\uff1a \u8fb9\u505a\u8fb9\u5b66\u7f16\u5199\u4e00\u4e2a\u4e95\u5b57\u68cb\u6e38\u620f https://react.docschina.org/tutorial/tutorial.html \u8bb2\u89e3\u5177\u4f53\u7684 React \u8bbe\u8ba1\u54f2\u5b66\u4e0e\u5404\u79cd\u6982\u5ff5 https://react.docschina.org/docs/hello-world.html \u672c\u6587\u6863\u7ed3\u5408\u4e86\u8fd9\u4e24\u6761\u8def\u5f84\uff0c\u63d0\u4f9b\u4e86\u5177\u4f53\u7684\u793a\u4f8b\u4e5f\u540c\u65f6\u5c1d\u8bd5\u7740\u5177\u4f53\u8bb2\u89e3\u5404\u7c7b\u6982\u5ff5\u3002","title":"\u8d44\u6e90\u94fe\u63a5"},{"location":"frontend/react/basic/","text":"\u7ec4\u4ef6\u3001\u5c5e\u6027\u4e0e\u72b6\u6001 \u00b6 \u7ec4\u4ef6 & render \u51fd\u6570 \u00b6 React \u7684\u4e00\u4e2a\u6838\u5fc3\u6982\u5ff5\u5c31\u662f \u7ec4\u4ef6 \u3002 \u7ec4\u4ef6\u66f4\u50cf\u662f\u5c06 UI \u62c6\u5206\u5f97\u5230\u7684\u72ec\u7acb\u53ef\u590d\u7528\u7684\u5c0f\u5757\uff0c\u5176\u80fd\u591f\u63a5\u53d7\u5c5e\u6027\u7684\u4f20\u5165\uff0c\u5e76\u4e14\u8fd4\u56de\u51fa\u63cf\u8ff0\u5c4f\u5e55\u4e0a\u7684\u5c55\u793a\u5185\u5bb9\u7684 React \u5143\u7d20\u3002 \u6211\u4eec\u5c06\u4f1a\u4ece\u7c7b\u7ec4\u4ef6\u5165\u624b\u4ecb\u7ecd React \u7ec4\u4ef6\u7684\u7f16\u5199\u65b9\u5f0f\u3002\u4e00\u4e2a\u7ecf\u5178\u7684\u7c7b\u7ec4\u4ef6\u7684\u7ed3\u6784\u5982\u4e0b\uff08\u5373\u4e0b\u53d1\u6846\u67b6\u4e4b\u4e2d\u7684 App.tsx \u6587\u4ef6\u5185\u5bb9\uff09\uff1a 1 2 3 4 5 class App extends React . Component { render () : ReactElement { return < p > Hello , React ! < /p>; } } \u6bcf\u4e00\u4e2a\u7c7b\u7ec4\u4ef6\u90fd\u662f React.Component \u7c7b\u7684\u5b50\u7c7b\uff0c\u5176\u4e2d\u6211\u4eec\u9700\u8981\u91cd\u8f7d render \u51fd\u6570\u4ee5\u5b9a\u4e49\u8fd9\u4e2a\u7ec4\u4ef6\u5728\u5c4f\u5e55\u4e0a\u7684\u5c55\u793a\u65b9\u5f0f\uff08\u7528\u6237\u754c\u9762\uff09\u3002 render \u51fd\u6570\u7684\u8fd4\u56de\u503c\u4e3a\u4f7f\u7528\u6807\u7b7e\u8bed\u6cd5\u7f16\u5199\u7684 ReactElement \u3002\u6bd4\u5982\u8bf4\u4e0a\u8ff0 App \u7ec4\u4ef6\u5c31\u8fd4\u56de\u4e86\u4e00\u53e5\u95ee\u5019\u8bed\uff0c\u8fd9\u5c31\u4ee3\u8868 App \u7ec4\u4ef6\u5728\u5b9e\u4f8b\u5316\u7684\u65f6\u5019\u4f1a\u6e32\u67d3\u51fa\u8fd9\u4e00\u53e5\u95ee\u5019\u8bed\u3002 JSX \u8bed\u6cd5\u62d3\u5c55 React \u5bf9 JavaScript \u8bed\u8a00\u4f5c\u4e86\u4e00\u5b9a\u7684\u8bed\u6cd5\u62d3\u5c55\uff0c\u62d3\u5c55\u540e\u7684 JavaScript \u79f0\u4e3a JSX\u3002JSX \u548c\u539f\u751f JavaScript \u7684\u6700\u5927\u5dee\u522b\u5c31\u662f\u5f15\u5165\u4e86\u6807\u7b7e\u8bed\u6cd5\uff1a 1 const p = < p > Hello world !< /p>; \u8fd9\u7c7b\u7c7b\u4f3c\u4e8e HTML \u6807\u7b7e\u7684\u8bed\u6cd5\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5176\u7b49\u4ef7\u4e8e\u4ee5\u4e0b\u8868\u8fbe\uff1a 1 2 3 4 5 const p = React . createElement ( \"p\" , undefined , \"Hello world!\" ); JSX \u7684\u6807\u7b7e\u5bf9\u8c61\u4e2d\u5141\u8bb8\u5d4c\u5165 JavaScript \u8868\u8fbe\u5f0f\uff0c\u5176\u4f1a\u8fd0\u7b97\u51fa\u5176\u503c\u540e\u8f6c\u4e3a\u5b57\u7b26\u4e32\u5d4c\u5165\uff1a 1 2 const name = \"Adam\" ; const p = < p > Hello , { name } !< /p>; \u8f6c\u5316\u4e3a\u5b57\u7b26\u4e32\u7684\u76ee\u7684\u662f\u9632\u6b62 XSS \u653b\u51fb\u3002 \u6b64\u5916\uff0cJSX \u7684\u6807\u7b7e\u8bed\u6cd5\u548c HTML \u7c7b\u4f3c\uff0c\u5141\u8bb8\u5b9a\u4e49\u5404\u79cd\u5c5e\u6027\uff0c\u8fd9\u4e9b\u7279\u6027\u4ee5\u540e\u4f1a\u8bb2\u5230\u3002 \u53e6\u5916\uff0c\u672c\u6587\u6863\u57fa\u4e8e TypeScript \u7684\u6807\u7b7e\u5316\u62d3\u5c55 TSX \u8bed\u8a00\uff0c\u5176\u6807\u7b7e\u8bed\u6cd5\u57fa\u672c\u548c JSX \u4e00\u81f4\u3002 \u5b9e\u4f8b\u5316\u4e00\u4e2a\u7ec4\u4ef6\u4e5f\u662f\u7b80\u5355\u7684\uff0c\u7c7b\u4f3c HTML \u8bed\u6cd5\u3002\u6bd4\u5982\u4e0b\u9762\u90fd\u662f\u5408\u6cd5\u7684\u5b9e\u4f8b\u5316 App \u7ec4\u4ef6\u7684\u8bed\u53e5\uff1a 1 2 3 < App /> ; < App title = \"SAST-React\" /> ; // 'props' will be introduced later < App >< div />< /App>; index.tsx \u6587\u4ef6\u7684\u4f5c\u7528 \u6211\u4eec\u4e0b\u53d1\u7684\u6846\u67b6\u7684 src \u76ee\u5f55\u4e0b\u4ec5\u4ec5\u6709 App.tsx \u548c index.tsx \u4e24\u4e2a\u6587\u4ef6\u3002\u5176\u4e2d\u6211\u4eec\u5df2\u7ecf\u4ecb\u7ecd\u4e86 App.tsx \u6587\u4ef6\u7684\u4f5c\u7528\uff0c\u5176\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7c7b\u7ec4\u4ef6\uff0c\u5e76\u4e14\u89c4\u5b9a\u4e86\u8fd9\u4e2a\u7ec4\u5efa\u7684\u663e\u793a\u65b9\u5f0f\u3002 \u800c index.tsx \u6587\u4ef6\u7684\u4f5c\u7528\u5c31\u662f\u5c06\u5b9a\u4e49\u597d\u7684\u7c7b\u7ec4\u4ef6\u6e32\u67d3\u5230 DOM \u6811\u4e0a\u3002\u6211\u4eec\u89c2\u5bdf\u5176\u6587\u4ef6\u5185\u5bb9\uff1a 1 2 3 4 const root = ReactDOM . createRoot ( document . getElementById ( 'root' ) as HTMLElement ); root . render ( < App /> ); \u7b2c\u4e00\u4e2a\u8bed\u53e5\u7684\u542b\u4e49\u4e3a\u5728 DOM \u6811\u4e0a\u5bfb\u627e ID \u4e3a root \u7684\u5143\u7d20\uff0c\u5e76\u5c06\u5176\u8bbe\u5b9a\u4e3a React \u5e94\u7528\u7684\u6839\u5143\u7d20\u3002\u800c\u5982\u679c\u6253\u5f00 React \u5e94\u7528 public \u6587\u4ef6\u5939\u4e0b\u7684 index.html \u6587\u4ef6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u627e\u5230\u8fd9\u4e2a\u6839\u5143\u7d20\uff08\u5176\u4e00\u822c\u4f4d\u4e8e\u7b2c 31 \u884c\u5de6\u53f3\uff09\uff1a 1 < div id = \"root\" ></ div > \u800c\u7b2c\u4e8c\u4e2a\u8bed\u53e5\u5c31\u662f\u5c06 <App /> \u8fd9\u4e2a\u7ec4\u4ef6\u6e32\u67d3\u5230\u83b7\u53d6\u5230\u7684\u6839\u5143\u7d20\u4e0a\u3002 \u6240\u4ee5 index.tsx \u7684\u4f5c\u7528\u5c31\u662f\u642d\u5efa\u8d77\u4f20\u7edf HTML \u548c React TSX \u4e4b\u95f4\u7684\u6865\u6881\uff0c\u8ba9\u6211\u4eec\u53ef\u4ee5\u81ea\u7531\u5730\u4f7f\u7528 TSX \u8bed\u6cd5\u7f16\u5199\u7ec4\u4ef6\uff0c\u800c\u5c06\u8fd9\u4e9b\u7ec4\u4ef6\u8f6c\u6362\u5230 HTML \u7684\u4efb\u52a1\u5219\u4ea4\u7ed9\u4e86 React \u6846\u67b6\u3002 \u7f16\u5199\u7b2c\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7ec4\u4ef6 \u00b6 \u6211\u4eec\u8bf4\u8fc7\u7ec4\u4ef6\u662f\u72ec\u7acb\u53ef\u590d\u7528\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u53ef\u4ee5\u7f16\u5199\u81ea\u5df1\u7684\u7ec4\u4ef6\u5e76\u4f7f\u7528\u3002\u6bd4\u5982\u8bf4\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7c7b\u7ec4\u4ef6\u5199\u4e00\u4e2a\u6e32\u67d3\u4e00\u4e2a\u7ea2\u8272\u6b63\u65b9\u5f62\u7684\u7ec4\u4ef6 Square \uff08\u76f4\u63a5\u5728 App.tsx \u6587\u4ef6\u5185\u63d2\u5165\u4e0b\u8ff0\u4ee3\u7801\u5373\u53ef\uff09\uff1a 1 2 3 4 5 class Square extends React . Component { render () : ReactElement { return < div style = {{ width : 100 , height : 100 , backgroundColor : \"red\" }} /> ; } } \u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u53ef\u4ee5\u5728 App \u7ec4\u4ef6\u7684 render \u51fd\u6570\u91cc\u9762\u4f7f\u7528\u8fd9\u4e2a\u7ec4\u4ef6\u4e86\uff1a 1 2 3 4 5 6 7 8 9 // Component 'App' render () : ReactElement { return ( < div > < p > This is a square !< /p> < Square /> < /div> ); } \u7f16\u8bd1\u4e4b\u540e\u5c31\u80fd\u770b\u5230\u5c4f\u5e55\u4e0a\u7684\u4e00\u4e2a\u7ea2\u8272\u6b63\u65b9\u5f62\u3002 \u81ea\u5b9a\u4e49\u7ec4\u4ef6\u7684\u72b6\u6001\uff08\u4f20\u5165 props \uff09 \u00b6 \u521a\u521a\u7f16\u5199 Square \u7684\u65f6\u5019\u5e94\u8be5\u6ce8\u610f\u5230\u4e86\uff0c\u6b63\u65b9\u5f62\u7684\u5c3a\u5bf8\u548c\u989c\u8272\u90fd\u662f\u5199\u6b7b\u7684\uff0c\u5b9e\u9645\u4e0a\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4f20\u5165\u5c5e\u6027\u7684\u65b9\u5f0f\u5b8c\u6210\u5bf9\u7ec4\u4ef6\u5f62\u6001\u7684\u63a7\u5236\uff0c\u6b63\u5982 HTML \u6807\u7b7e\u7684\u5c5e\u6027\u3002 \u6211\u4eec\u5728\u5b9e\u4f8b\u5316 Square \u7684\u65f6\u5019\u53ef\u4ee5\u5982\u4e0b\u9762\u4ee3\u7801\u4e00\u6837\u4f20\u5165\u82e5\u5e72\u7684\u5c5e\u6027\uff1a 1 2 // Part of 'render' function in Component 'App' < Square size = { 100 } color = \"red\" /> \u90a3\u4e48\u8fd9\u4e9b\u5c5e\u6027\u6211\u4eec\u600e\u4e48\u5728\u7ec4\u4ef6\u5185\u90e8\u6355\u83b7\u5462\uff1f\u7b54\u6848\u662f\u901a\u8fc7 this.props \u53d8\u91cf\uff1a 1 2 3 4 5 6 7 8 9 10 // Component 'Square' render () : ReactElement { return < div style = {{ width : this.props.size , height : this.props.size , backgroundColor : this.props.color }} /> ; } \u4f46\u4f60\u4f1a\u53d1\u73b0\u62a5\u9519\uff0c\u57fa\u672c\u7684\u610f\u601d\u5c31\u662f props \u4e0a\u6ca1\u6709\u6210\u5458 size, color \u3002\u8fd9\u5b9e\u9645\u4e0a\u5c31\u662f TypeScript \u7684\u8981\u6c42\uff0c\u4f60\u9700\u8981\u4e3a\u7ec4\u4ef6\u6307\u5b9a\u8fd9\u4e2a\u7ec4\u4ef6\u9700\u8981\u54ea\u4e9b\u5c5e\u6027\uff0c\u54ea\u4e9b\u5c5e\u6027\u662f\u53ef\u9009\u7684\u7b49\u7b49\uff0c\u8fd9\u6837\u53ef\u4ee5\u6709\u6548\u907f\u514d\u51fa\u73b0\u96be\u4ee5\u63a2\u67e5\u7684 undefined \u7684\u95ee\u9898\u3002 \u6307\u5b9a\u7684\u65b9\u5f0f\u662f interface \uff0c\u4f60\u9700\u8981\u5728\u8fd9\u4e2a\u63a5\u53e3\u4e4b\u4e2d\u5b9a\u4e49\u8fd9\u4e2a\u7ec4\u4ef6\u63a5\u53d7\u7684\u6240\u6709\u5c5e\u6027\u3002\u6bd4\u5982\u8bf4 Square \u53ea\u9700\u8981\u63a5\u53d7\u5c3a\u5bf8\u548c\u989c\u8272\uff1a 1 2 3 4 interface SquareProps { size : number ; color : string ; } \u8fd9\u91cc\u4e5f\u53ef\u4ee5\u6307\u5b9a\u90e8\u5206\u5c5e\u6027\u662f\u53ef\u9009\u7684\uff0c\u8fd9\u6837\u7684\u8bdd\u5b9e\u4f8b\u5316\u7ec4\u4ef6\u5c31\u6ca1\u5fc5\u8981\u4f20\u5165\u8fd9\u4e00\u90e8\u5206\u5c5e\u6027\uff0c\u5e76\u4e14\u901a\u8fc7 this.props \u8bbf\u95ee\u8fd9\u4e9b\u5c5e\u6027\u4f1a\u5f97\u5230 undefined \u3002\u4f46\u662f\u8fd9\u6837\u7684\u884c\u4e3a\u663e\u7136\u66f4\u4e3a\u53ef\u63a7\u3002 \u6211\u4eec\u5728 TypeScript \u6587\u6863 \u4e2d\u63d0\u5230\u8fc7\u63a5\u53e3\u7684\u5c5e\u6027\u9664\u4e86\u53ef\u4ee5\u89c4\u5b9a\u4e3a\u53ef\u9009\u5c5e\u6027\uff0c\u8fd8\u53ef\u4ee5\u89c4\u5b9a\u4e3a\u53ea\u8bfb\u5c5e\u6027\u3002\u5b9e\u9645\u4e0a React \u4e25\u683c\u8981\u6c42\u5c5e\u6027\u662f\u4e0d\u53ef\u66f4\u6539\u7684\uff0c\u8fd9\u79cd\u8981\u6c42\u7c7b\u4f3c\u4e8e\u7eaf\u51fd\u6570\uff0c\u7eaf\u51fd\u6570\u7684\u53c2\u6570\u4f20\u5165\u4e4b\u540e\u4e0d\u53ef\u4fee\u6539\uff0c\u81f3\u5c11\u4e0d\u4f1a\u5f71\u54cd\u5230\u539f\u53d8\u91cf\u3002 \u6240\u4ee5\u5982\u679c\u4e25\u683c\u8981\u6c42\u7684\u8bdd\uff0c\u63a5\u53e3\u5b9a\u4e49\u5e94\u8be5\u5199\u4e3a\uff1a 1 2 3 4 interface SquareProps { readonly size : number ; readonly color : string ; } \u5982\u679c\u4e0d\u5199\u7684\u8bdd\u53ef\u80fd\u4f1a\u5728\u90e8\u5206\u8f83\u4e3a\u4e25\u683c\u7684\u6761\u4ef6\u4e0b\u7f16\u8bd1\u5931\u8d25\u3002 \u4e4b\u540e\u5c06\u5176\u6302\u8f7d\u5230\u7ec4\u4ef6\u7684\u5b9a\u4e49\u4e0a\uff0c\u6302\u8f7d\u7684\u8bed\u6cd5\u7c7b\u4f3c\u4e8e C++ \u7684\u6a21\u677f\u8bed\u6cd5\uff1a 1 2 3 class Square extends React . Component < SquareProps > { // Register 'props' here // ... } \u8fd9\u6837\u4f60\u5c31\u57fa\u672c\u4e86\u89e3\u4e86\u5982\u4f55\u7ed9\u7ec4\u4ef6\u4f20\u5165\u5c5e\u6027\u3002\u4e0d\u8fc7\u73b0\u5728\u4f60\u5e94\u8be5\u5df2\u7ecf\u6ce8\u610f\u5230\u4e86\u5c5e\u6027\u662f\u4ece\u7236\u7ec4\u4ef6\u5411\u5b50\u7ec4\u4ef6\u4f20\u9012\u7684\uff0c\u8fd9\u4e5f\u662f\u540e\u7eed\u4f1a\u63d0\u5230\u7684 \u7011\u5e03\u6570\u636e\u6d41 \uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e9b\u63a7\u5236\u7ec4\u4ef6\u5f62\u6001\u7684\u5c5e\u6027\u6570\u636e\u7684\u6d41\u5411\u6c38\u8fdc\u662f\u5411\u4e0b\u7684\u3002 \u5b9e\u73b0\u52a8\u6001\u7684 UI\uff08\u6dfb\u52a0\u7ec4\u4ef6\u7684 state \uff09 \u00b6 \u6211\u4eec\u5df2\u7ecf\u63d0\u5230\u4e86\u4f7f\u7528 props \u6765\u81ea\u5b9a\u4e49\u7ec4\u4ef6\u7684\u5f62\u6001\uff0c\u4f46\u6839\u636e props \u7684\u4e0d\u53ef\u53d8\u6027\u5c31\u53ef\u4ee5\u77e5\u9053\u53ea\u4f7f\u7528 props \u63a7\u5236\u7684\u7ec4\u4ef6\u7b49\u4ef7\u4e8e\u7eaf\u51fd\u6570\uff0c\u4e5f\u5c31\u662f\u8bf4\u5176\u6e32\u67d3\u7684 UI \u662f\u5b8c\u5168\u9759\u6001\u7684\uff0c\u53ea\u662f\u5355\u7eaf\u5730\u7b80\u5316\u4e86\u4e00\u4e9b\u4ee3\u7801\u5199\u6cd5\u800c\u5df2\u3002 \u4e3a\u4e86\u5b9e\u73b0\u52a8\u6001\u7684\u6548\u679c\uff0c\u6bd4\u5982\u6700\u7b80\u5355\u7684\u70b9\u51fb\u53d8\u8272\uff0c\u5c31\u9700\u8981\u8ba9\u7ec4\u4ef6\u5177\u6709\u4e00\u5b9a\u7684\u8bb0\u5fc6\u529f\u80fd\uff0c\u8ba9\u7ec4\u4ef6\u7ba1\u7406\u81ea\u5df1\u7684\u72b6\u6001\uff0c\u8fd9\u5c31\u662f state \u3002 \u5c31\u548c\u7c7b\u6210\u5458\u4e00\u6837\uff0c\u7ec4\u4ef6\u7684 state \u662f\u6bcf\u4e00\u4e2a\u5b9e\u4f8b\u5316\u7684\u5bf9\u8c61\u6240\u7ba1\u7406\u7684\u4e00\u4e9b\u53d8\u91cf\uff0c\u8fd9\u4e9b\u53d8\u91cf\u53ef\u80fd\u9700\u8981\u901a\u8fc7\u7236\u7ec4\u4ef6\u521d\u59cb\u5316\uff0c\u4f46\u662f\u8fd9\u4e4b\u540e\u8fd9\u4e9b state \u5c31\u5b8c\u5168\u53d7\u63a7\u4e8e\u7ba1\u7406\u5b83\u4eec\u7684\u7ec4\u4ef6\u672c\u8eab\u3002 \u6bd4\u5982\u8bf4\u6211\u4eec\u60f3\u8ba9\u6b63\u65b9\u5f62\u7684\u989c\u8272\u4e0d\u53d7\u63a7\u4e8e\u7236\u7ec4\u4ef6 App \uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8bbe\u7acb state \u6765\u7ba1\u7406\u3002\u7ed9\u7ec4\u4ef6\u521b\u5efa\u72b6\u6001\u7684\u65b9\u5f0f\u662f\u7b80\u5355\u7684\uff0c\u6211\u4eec\u9700\u8981\u7f16\u5199\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u6784\u9020\u51fd\u6570\uff1a 1 2 3 4 5 // Component 'Square' constructor ( props : SquareProps ) { super ( props ); // Never forget this when writing constructor! this . state = { color : \"red\" }; } \u4e4b\u540e\u5728\u6e32\u67d3\u51fd\u6570\u4e4b\u4e2d\u5c31\u53ef\u4ee5\u5c06\u5408\u9002\u7684 this.props \u66ff\u6362\u4e3a this.state \uff0c\u8fd9\u5c31\u610f\u5473\u7740\u4e00\u90e8\u5206\u6e32\u67d3\u7ed3\u679c\u7531\u7ec4\u4ef6\u672c\u8eab\u72b6\u6001\u63a5\u7ba1\uff0c\u4e0d\u53d7\u63a7\u4e8e\u7236\u7ec4\u4ef6\u4f20\u5165\u7684\u5c5e\u6027\u3002\u6bd4\u5982\u8bf4\u8fd9\u91cc\uff0c\u6b63\u65b9\u5f62\u5c3a\u5bf8\u672c\u8eab\u8fd8\u662f\u53d7\u63a7\u4e8e\u7236\u7ec4\u4ef6\uff0c\u4f46\u662f\u989c\u8272\u7531\u81ea\u8eab\u63a7\u5236\uff1a 1 2 3 4 5 6 7 8 9 10 // Component 'Square' render () : ReactElement { return < div style = {{ width : this.props.size , height : this.props.size , backgroundColor : this.state.color }} /> ; } \u53d8\u66f4\u5f53\u524d\u7ec4\u4ef6\u7684\u72b6\u6001\u4f7f\u7528\u7684\u51fd\u6570\u4e3a this.setState \uff0c\u8fd9\u4e2a\u51fd\u6570\u7531 React.Component \u5b9e\u73b0\uff0c\u53ef\u4ee5\u76f4\u63a5\u7ee7\u627f\u4f7f\u7528\u3002 \u4e00\u5b9a\u6ce8\u610f\uff0c\u4e0d\u8981\u4f7f\u7528 this.state = ... \u8fd9\u6837\u7684\u8d4b\u503c\u53e5\u6539\u53d8\u72b6\u6001\uff0c\u56e0\u4e3a this.setState \u5185\u90e8\u9664\u4e86\u4fee\u6539\u72b6\u6001\u8fd8\u5305\u62ec\u89e6\u53d1\u518d\u6b21\u6e32\u67d3\u7b49\u7b49\u8fc7\u7a0b\uff0c\u5177\u4f53\u6d41\u7a0b\u89c1\u4e0b\u9762\u7684\u8bb2\u89e3\u3002 \u4fee\u6539\u72b6\u6001\u7684\u65b9\u5f0f\u4e3a\uff1a 1 this . setState ({ ... this . state , color : \"blue\" }); \u8fd9\u4e2a\u8bed\u53e5\u5c31\u4f1a\u628a\u72b6\u6001\u4e4b\u4e2d\u7684 color \u5c5e\u6027\u4fee\u6539\u4e3a blue \u3002 \u4fee\u6539\u7ec4\u4ef6\u72b6\u6001\u7684\u65f6\u5019 React \u5728\u505a\u4ec0\u4e48 \u5982\u679c\u6211\u4eec\u4fee\u6539\u4e86\u67d0\u4e00\u4e2a\u7ec4\u4ef6\u7684\u72b6\u6001\uff0c\u5b9e\u9645\u4e0a\u5c31\u53ef\u80fd\u4f1a\u5f71\u54cd\u5230\u8fd9\u4e2a\u7ec4\u4ef6\u5728\u9875\u9762\u4e0a\u7684\u663e\u793a\uff0c\u6bd4\u5982\u8bf4\u4e0a\u8ff0\u4ee3\u7801\u53ef\u4ee5\u4fee\u6539\u6b63\u65b9\u5f62\u7684\u989c\u8272\u3002 \u90a3\u4e48\u4e3a\u4e86\u54cd\u5e94\u8fd9\u6b21\u66f4\u6539\uff0c\u6211\u4eec\u5728\u4fee\u6539\u5b8c\u7ec4\u4ef6\u72b6\u6001\u540e\u5e94\u5f53\u7acb\u523b\u6839\u636e\u65b0\u72b6\u6001\u91cd\u65b0\u6e32\u67d3\u8fd9\u4e2a\u7ec4\u4ef6\u3002\u4f46\u662f\u6211\u4eec\u6ce8\u610f\u5230\u8fd9\u4e2a\u7ec4\u4ef6\u7684\u72b6\u6001\u53ef\u80fd\u901a\u8fc7\u5c5e\u6027\u4f20\u5165\u4e86\u5b50\u7ec4\u4ef6\u4e4b\u4e2d\uff0c\u8fd9\u610f\u5473\u7740\u8be5\u7ec4\u4ef6\u7684\u5b50\u7ec4\u4ef6\u4e5f\u9700\u8981\u4fee\u6539\u3002 \u6240\u4ee5\u8bf4\u6bcf\u5f53\u6211\u4eec\u8c03\u7528 this.setState \u51fd\u6570\uff0c\u5c31\u4f1a\u89e6\u53d1\u4ee5\u8be5\u7ec4\u4ef6\u4e3a\u6839\u7684\u6240\u6709\u7ec4\u4ef6\u7684\u91cd\u65b0\u6e32\u67d3\uff0c\u8fdb\u800c\u89e6\u53d1\u9875\u9762\u7684\u5237\u65b0\u3002 \u8fd9\u4e5f\u5c31\u8bf4\u660e\u4e86\uff0c\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528 this.state = ... \u8fd9\u7c7b\u8d4b\u503c\u8bed\u53e5\u76f4\u63a5\u4fee\u6539\u72b6\u6001\uff0c\u5426\u5219\u53ef\u80fd\u5bfc\u81f4\u7ec4\u4ef6\u6570\u636e\u548c\u663e\u793a\u65b9\u5f0f\u4e0d\u4e00\u81f4\u3002 \u4e3a\u4e86\u8ba9\u7528\u6237\u53ef\u4ee5\u8c03\u7528\u5230\u8fd9\u4e2a\u51fd\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u51fd\u6570\u7ed1\u5b9a\u6210\u70b9\u51fb\u6b63\u65b9\u5f62\u65f6\u7684\u56de\u8c03\uff0c\u8fd9\u6837\u7528\u6237\u70b9\u51fb\u6b63\u65b9\u5f62\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u89e6\u53d1\u8fd9\u4e2a\u51fd\u6570\uff0c\u4fee\u6539\u6b63\u65b9\u5f62\u989c\u8272\uff1a 1 2 3 4 5 6 7 8 9 10 11 // Component 'Square' render () : ReactElement { return < div style = {{ width : this.props.size , height : this.props.size , backgroundColor : this.state.color }} onClick = {() => this . setState ({ ... this . state , color : \"blue\" })} /> ; } \u73b0\u5728\u6211\u4eec\u5e0c\u671b\u8ba9\u7528\u6237\u70b9\u51fb\u6b63\u65b9\u5f62\u7684\u65f6\u5019\uff0c\u6b63\u65b9\u5f62\u989c\u8272\u5728\u7ea2\u8272\u548c\u84dd\u8272\u4e4b\u95f4\u76f8\u4e92\u5207\u6362\u3002\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u9996\u5148\u7f16\u5199\u4e00\u4e2a\u5207\u6362\u989c\u8272\u7684\u51fd\u6570\uff0c\u5185\u90e8\u8c03\u7528 this.setState() \u65b9\u6cd5\uff1a 1 2 3 4 5 6 7 // Component 'Square' switchColor () : void { this . setState (( prev ) => ({ ... prev , color : prev.color === \"red\" ? \"blue\" : \"red\" , })); } \u8fd9\u91cc\u6ce8\u610f\uff0c\u6211\u4eec\u5728 this.setState \u51fd\u6570\u4e2d\u4f20\u5165\u4e86\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u539f\u56e0\u89c1\u4e0b\u8ff0\u89e3\u91ca\u3002 \u72b6\u6001\u7684\u65f6\u95f4\u4f9d\u8d56\u6027 \u51fa\u4e8e\u6027\u80fd\u65b9\u9762\u7684\u8003\u91cf\uff0c this.setState \u5b9e\u9645\u4e0a\u8bbe\u8ba1\u4e3a\u4e00\u4e2a\u5f02\u6b65\u51fd\u6570\uff0c\u4e5f\u5c31\u662f\u8bf4\u72b6\u6001\u7684\u4fee\u6539\u5e76\u975e\u662f\u963b\u585e\u7684\u3001\u7acb\u5373\u7684\u3002\u8fd9\u4ea7\u751f\u4e86\u4e0b\u8ff0\u7684\u95ee\u9898\uff1a \u5728 this.setState \u8c03\u7528\u540e\u7acb\u523b\u8bbf\u95ee this.state \u53ef\u80fd\u51fa\u9519 \u5982\u679c\u65b0\u72b6\u6001\u4f9d\u8d56\u4e8e\u4e0a\u4e00\u6b21\u7684\u72b6\u6001\uff0c\u4e5f\u6709\u53ef\u80fd\u51fa\u9519 \u4e0d\u8fc7\u8fd9\u4e24\u4e2a\u95ee\u9898\uff0cReact \u6846\u67b6\u90fd\u505a\u51fa\u4e86\u56de\u7b54\u3002 \u7b2c\u4e00\u4e2a\u95ee\u9898\u6709\u4e24\u4e2a\u89e3\u51b3\u65b9\u6848\uff0c\u4e00\u4e2a\u662f\u7ed9 this.setState \u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4f20\u5165\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u8be5\u56de\u8c03\u51fd\u6570\u5c06\u4f1a\u5728\u72b6\u6001\u66f4\u65b0\u5b8c\u6bd5\u540e\u6267\u884c\uff1a 1 2 3 4 5 6 this . state ({ ... this . state , data : \"*\" . repeat ( 114514 ). split ( \"*\" ), // A large array updated in setState }, () => { console . log ( \"State updated!\" ); }); \u7b2c\u4e8c\u4e2a\u65b9\u6848\u4e3a\u4f7f\u7528 componentDidUpdate \u751f\u547d\u5468\u671f\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u5c06\u4f1a\u5728\u4e0b\u4e00\u90e8\u5206\u4ecb\u7ecd\u3002 \u7b2c\u4e8c\u4e2a\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\u5219\u662f\u7ed9 this.setState \u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f20\u5165\u56de\u8c03\u51fd\u6570\uff0c\u8be5\u56de\u8c03\u51fd\u6570\u63a5\u53d7\u7684\u53c2\u6570\u4e3a\u65e7\u72b6\u6001\uff0c\u8fd4\u56de\u503c\u5c06\u4f1a\u88ab\u8bbe\u5b9a\u4e3a\u65b0\u72b6\u6001\u3002\u5728\u7c7b\u4f3c\u4e8e\u8ba1\u6570\u5668\u9012\u589e\u3001\u72b6\u6001\u673a\u5207\u6362\u72b6\u6001\u7b49\u573a\u666f\u4e2d\uff0c\u4f7f\u7528\u56de\u8c03\u51fd\u6570\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u66f4\u4e3a\u5408\u9002\u7684\u9009\u62e9\u3002\u8fd9\u91cc\u7684\u4ee3\u7801\u793a\u4f8b\u89c1\u4e0a\u8ff0 switchColor \u51fd\u6570\u3002 \u5c5e\u6027\u4e5f\u5e94\u5f53\u4f7f\u7528\u63a5\u53e3\u5b9a\u4e49\u5e76\u4e14\u5728\u7ec4\u4ef6\u5b9a\u4e49\u4e0a\u4f53\u73b0\uff0c\u5426\u5219\u53ef\u80fd\u65e0\u6cd5\u901a\u8fc7\u7f16\u8bd1\uff1a 1 2 3 4 5 interface SquareStates { readonly color : string ; } class Square extends React . Component < SquareProps , SquareStates > { /* ... */ } \u7011\u5e03\u6570\u636e\u6d41 \u7011\u5e03\u6570\u636e\u6d41\u5f62\u5bb9\u7684\u662f React \u6846\u67b6\u4e2d\u6570\u636e\u6d41\u7684\u7ba1\u7406\u65b9\u5f0f\uff0c\u63cf\u8ff0\u7684\u662f React \u7ec4\u4ef6\u95f4\u7684\u6570\u636e\u4ec5\u5b58\u5728\u4ece\u4e0a\u81f3\u4e0b\u7684\u6d41\u52a8\u3002 props \u53ef\u4ee5\u8ba4\u4e3a\u662f\u4e00\u80a1\u4ece\u4e0a\u800c\u4e0b\u7684\u6c34\u6d41\uff0c\u4e0a\u6e38\u53d1\u751f\u7684\u53d8\u5316\u4f1a\u7acb\u523b\u53cd\u6620\u5230\u4e0b\u6e38\u3002React \u4e2d\u7236\u7ec4\u4ef6\u901a\u8fc7 props \u89c4\u5b9a\u5b50\u7ec4\u4ef6\u7684\u884c\u4e3a\uff0c\u800c props \u7684\u6539\u53d8\u5c31\u610f\u5473\u7740\u5b50\u7ec4\u4ef6\u9700\u8981\u7acb\u523b\u91cd\u65b0\u6e32\u67d3\u3002 state \u53ef\u4ee5\u8ba4\u4e3a\u662f\u67d0\u5904\u7684\u53e6\u5916\u4e00\u4e2a\u6c34\u6e90\u3002React \u5141\u8bb8\u7ec4\u4ef6\u7ba1\u7406\u81ea\u8eab\u7684\u72b6\u6001\uff0c\u4e5f\u5141\u8bb8 state \u7684\u6570\u636e\u901a\u8fc7 props \u5411\u4e0b\u4f20\u9012\u3002 \u5f53\u7136\uff0c\u7011\u5e03\u6570\u636e\u6d41\u5e76\u4e0d\u662f\u7edd\u5bf9\u7684\uff0c\u6211\u4eec\u540e\u7eed\u4f1a\u63d0\u5230\u901a\u8fc7\u56de\u8c03\u51fd\u6570\u5b9e\u73b0\u6570\u636e\u7684\u5411\u4e0a\u6d41\u52a8\uff0c\u4ee5\u53ca\u4e5f\u4f1a\u7b80\u5355\u4ecb\u7ecd\u901a\u8fc7 Redux \u6765\u5b9e\u73b0\u8de8\u7ec4\u4ef6\u6570\u636e\u5171\u4eab\u7684\u65b9\u6cd5\u3002","title":"\u7ec4\u4ef6\u3001\u5c5e\u6027\u4e0e\u72b6\u6001"},{"location":"frontend/react/basic/#_1","text":"","title":"\u7ec4\u4ef6\u3001\u5c5e\u6027\u4e0e\u72b6\u6001"},{"location":"frontend/react/basic/#render","text":"React \u7684\u4e00\u4e2a\u6838\u5fc3\u6982\u5ff5\u5c31\u662f \u7ec4\u4ef6 \u3002 \u7ec4\u4ef6\u66f4\u50cf\u662f\u5c06 UI \u62c6\u5206\u5f97\u5230\u7684\u72ec\u7acb\u53ef\u590d\u7528\u7684\u5c0f\u5757\uff0c\u5176\u80fd\u591f\u63a5\u53d7\u5c5e\u6027\u7684\u4f20\u5165\uff0c\u5e76\u4e14\u8fd4\u56de\u51fa\u63cf\u8ff0\u5c4f\u5e55\u4e0a\u7684\u5c55\u793a\u5185\u5bb9\u7684 React \u5143\u7d20\u3002 \u6211\u4eec\u5c06\u4f1a\u4ece\u7c7b\u7ec4\u4ef6\u5165\u624b\u4ecb\u7ecd React \u7ec4\u4ef6\u7684\u7f16\u5199\u65b9\u5f0f\u3002\u4e00\u4e2a\u7ecf\u5178\u7684\u7c7b\u7ec4\u4ef6\u7684\u7ed3\u6784\u5982\u4e0b\uff08\u5373\u4e0b\u53d1\u6846\u67b6\u4e4b\u4e2d\u7684 App.tsx \u6587\u4ef6\u5185\u5bb9\uff09\uff1a 1 2 3 4 5 class App extends React . Component { render () : ReactElement { return < p > Hello , React ! < /p>; } } \u6bcf\u4e00\u4e2a\u7c7b\u7ec4\u4ef6\u90fd\u662f React.Component \u7c7b\u7684\u5b50\u7c7b\uff0c\u5176\u4e2d\u6211\u4eec\u9700\u8981\u91cd\u8f7d render \u51fd\u6570\u4ee5\u5b9a\u4e49\u8fd9\u4e2a\u7ec4\u4ef6\u5728\u5c4f\u5e55\u4e0a\u7684\u5c55\u793a\u65b9\u5f0f\uff08\u7528\u6237\u754c\u9762\uff09\u3002 render \u51fd\u6570\u7684\u8fd4\u56de\u503c\u4e3a\u4f7f\u7528\u6807\u7b7e\u8bed\u6cd5\u7f16\u5199\u7684 ReactElement \u3002\u6bd4\u5982\u8bf4\u4e0a\u8ff0 App \u7ec4\u4ef6\u5c31\u8fd4\u56de\u4e86\u4e00\u53e5\u95ee\u5019\u8bed\uff0c\u8fd9\u5c31\u4ee3\u8868 App \u7ec4\u4ef6\u5728\u5b9e\u4f8b\u5316\u7684\u65f6\u5019\u4f1a\u6e32\u67d3\u51fa\u8fd9\u4e00\u53e5\u95ee\u5019\u8bed\u3002 JSX \u8bed\u6cd5\u62d3\u5c55 React \u5bf9 JavaScript \u8bed\u8a00\u4f5c\u4e86\u4e00\u5b9a\u7684\u8bed\u6cd5\u62d3\u5c55\uff0c\u62d3\u5c55\u540e\u7684 JavaScript \u79f0\u4e3a JSX\u3002JSX \u548c\u539f\u751f JavaScript \u7684\u6700\u5927\u5dee\u522b\u5c31\u662f\u5f15\u5165\u4e86\u6807\u7b7e\u8bed\u6cd5\uff1a 1 const p = < p > Hello world !< /p>; \u8fd9\u7c7b\u7c7b\u4f3c\u4e8e HTML \u6807\u7b7e\u7684\u8bed\u6cd5\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5176\u7b49\u4ef7\u4e8e\u4ee5\u4e0b\u8868\u8fbe\uff1a 1 2 3 4 5 const p = React . createElement ( \"p\" , undefined , \"Hello world!\" ); JSX \u7684\u6807\u7b7e\u5bf9\u8c61\u4e2d\u5141\u8bb8\u5d4c\u5165 JavaScript \u8868\u8fbe\u5f0f\uff0c\u5176\u4f1a\u8fd0\u7b97\u51fa\u5176\u503c\u540e\u8f6c\u4e3a\u5b57\u7b26\u4e32\u5d4c\u5165\uff1a 1 2 const name = \"Adam\" ; const p = < p > Hello , { name } !< /p>; \u8f6c\u5316\u4e3a\u5b57\u7b26\u4e32\u7684\u76ee\u7684\u662f\u9632\u6b62 XSS \u653b\u51fb\u3002 \u6b64\u5916\uff0cJSX \u7684\u6807\u7b7e\u8bed\u6cd5\u548c HTML \u7c7b\u4f3c\uff0c\u5141\u8bb8\u5b9a\u4e49\u5404\u79cd\u5c5e\u6027\uff0c\u8fd9\u4e9b\u7279\u6027\u4ee5\u540e\u4f1a\u8bb2\u5230\u3002 \u53e6\u5916\uff0c\u672c\u6587\u6863\u57fa\u4e8e TypeScript \u7684\u6807\u7b7e\u5316\u62d3\u5c55 TSX \u8bed\u8a00\uff0c\u5176\u6807\u7b7e\u8bed\u6cd5\u57fa\u672c\u548c JSX \u4e00\u81f4\u3002 \u5b9e\u4f8b\u5316\u4e00\u4e2a\u7ec4\u4ef6\u4e5f\u662f\u7b80\u5355\u7684\uff0c\u7c7b\u4f3c HTML \u8bed\u6cd5\u3002\u6bd4\u5982\u4e0b\u9762\u90fd\u662f\u5408\u6cd5\u7684\u5b9e\u4f8b\u5316 App \u7ec4\u4ef6\u7684\u8bed\u53e5\uff1a 1 2 3 < App /> ; < App title = \"SAST-React\" /> ; // 'props' will be introduced later < App >< div />< /App>; index.tsx \u6587\u4ef6\u7684\u4f5c\u7528 \u6211\u4eec\u4e0b\u53d1\u7684\u6846\u67b6\u7684 src \u76ee\u5f55\u4e0b\u4ec5\u4ec5\u6709 App.tsx \u548c index.tsx \u4e24\u4e2a\u6587\u4ef6\u3002\u5176\u4e2d\u6211\u4eec\u5df2\u7ecf\u4ecb\u7ecd\u4e86 App.tsx \u6587\u4ef6\u7684\u4f5c\u7528\uff0c\u5176\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7c7b\u7ec4\u4ef6\uff0c\u5e76\u4e14\u89c4\u5b9a\u4e86\u8fd9\u4e2a\u7ec4\u5efa\u7684\u663e\u793a\u65b9\u5f0f\u3002 \u800c index.tsx \u6587\u4ef6\u7684\u4f5c\u7528\u5c31\u662f\u5c06\u5b9a\u4e49\u597d\u7684\u7c7b\u7ec4\u4ef6\u6e32\u67d3\u5230 DOM \u6811\u4e0a\u3002\u6211\u4eec\u89c2\u5bdf\u5176\u6587\u4ef6\u5185\u5bb9\uff1a 1 2 3 4 const root = ReactDOM . createRoot ( document . getElementById ( 'root' ) as HTMLElement ); root . render ( < App /> ); \u7b2c\u4e00\u4e2a\u8bed\u53e5\u7684\u542b\u4e49\u4e3a\u5728 DOM \u6811\u4e0a\u5bfb\u627e ID \u4e3a root \u7684\u5143\u7d20\uff0c\u5e76\u5c06\u5176\u8bbe\u5b9a\u4e3a React \u5e94\u7528\u7684\u6839\u5143\u7d20\u3002\u800c\u5982\u679c\u6253\u5f00 React \u5e94\u7528 public \u6587\u4ef6\u5939\u4e0b\u7684 index.html \u6587\u4ef6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u627e\u5230\u8fd9\u4e2a\u6839\u5143\u7d20\uff08\u5176\u4e00\u822c\u4f4d\u4e8e\u7b2c 31 \u884c\u5de6\u53f3\uff09\uff1a 1 < div id = \"root\" ></ div > \u800c\u7b2c\u4e8c\u4e2a\u8bed\u53e5\u5c31\u662f\u5c06 <App /> \u8fd9\u4e2a\u7ec4\u4ef6\u6e32\u67d3\u5230\u83b7\u53d6\u5230\u7684\u6839\u5143\u7d20\u4e0a\u3002 \u6240\u4ee5 index.tsx \u7684\u4f5c\u7528\u5c31\u662f\u642d\u5efa\u8d77\u4f20\u7edf HTML \u548c React TSX \u4e4b\u95f4\u7684\u6865\u6881\uff0c\u8ba9\u6211\u4eec\u53ef\u4ee5\u81ea\u7531\u5730\u4f7f\u7528 TSX \u8bed\u6cd5\u7f16\u5199\u7ec4\u4ef6\uff0c\u800c\u5c06\u8fd9\u4e9b\u7ec4\u4ef6\u8f6c\u6362\u5230 HTML \u7684\u4efb\u52a1\u5219\u4ea4\u7ed9\u4e86 React \u6846\u67b6\u3002","title":"\u7ec4\u4ef6 &amp; render \u51fd\u6570"},{"location":"frontend/react/basic/#_2","text":"\u6211\u4eec\u8bf4\u8fc7\u7ec4\u4ef6\u662f\u72ec\u7acb\u53ef\u590d\u7528\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u53ef\u4ee5\u7f16\u5199\u81ea\u5df1\u7684\u7ec4\u4ef6\u5e76\u4f7f\u7528\u3002\u6bd4\u5982\u8bf4\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7c7b\u7ec4\u4ef6\u5199\u4e00\u4e2a\u6e32\u67d3\u4e00\u4e2a\u7ea2\u8272\u6b63\u65b9\u5f62\u7684\u7ec4\u4ef6 Square \uff08\u76f4\u63a5\u5728 App.tsx \u6587\u4ef6\u5185\u63d2\u5165\u4e0b\u8ff0\u4ee3\u7801\u5373\u53ef\uff09\uff1a 1 2 3 4 5 class Square extends React . Component { render () : ReactElement { return < div style = {{ width : 100 , height : 100 , backgroundColor : \"red\" }} /> ; } } \u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u53ef\u4ee5\u5728 App \u7ec4\u4ef6\u7684 render \u51fd\u6570\u91cc\u9762\u4f7f\u7528\u8fd9\u4e2a\u7ec4\u4ef6\u4e86\uff1a 1 2 3 4 5 6 7 8 9 // Component 'App' render () : ReactElement { return ( < div > < p > This is a square !< /p> < Square /> < /div> ); } \u7f16\u8bd1\u4e4b\u540e\u5c31\u80fd\u770b\u5230\u5c4f\u5e55\u4e0a\u7684\u4e00\u4e2a\u7ea2\u8272\u6b63\u65b9\u5f62\u3002","title":"\u7f16\u5199\u7b2c\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7ec4\u4ef6"},{"location":"frontend/react/basic/#props","text":"\u521a\u521a\u7f16\u5199 Square \u7684\u65f6\u5019\u5e94\u8be5\u6ce8\u610f\u5230\u4e86\uff0c\u6b63\u65b9\u5f62\u7684\u5c3a\u5bf8\u548c\u989c\u8272\u90fd\u662f\u5199\u6b7b\u7684\uff0c\u5b9e\u9645\u4e0a\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4f20\u5165\u5c5e\u6027\u7684\u65b9\u5f0f\u5b8c\u6210\u5bf9\u7ec4\u4ef6\u5f62\u6001\u7684\u63a7\u5236\uff0c\u6b63\u5982 HTML \u6807\u7b7e\u7684\u5c5e\u6027\u3002 \u6211\u4eec\u5728\u5b9e\u4f8b\u5316 Square \u7684\u65f6\u5019\u53ef\u4ee5\u5982\u4e0b\u9762\u4ee3\u7801\u4e00\u6837\u4f20\u5165\u82e5\u5e72\u7684\u5c5e\u6027\uff1a 1 2 // Part of 'render' function in Component 'App' < Square size = { 100 } color = \"red\" /> \u90a3\u4e48\u8fd9\u4e9b\u5c5e\u6027\u6211\u4eec\u600e\u4e48\u5728\u7ec4\u4ef6\u5185\u90e8\u6355\u83b7\u5462\uff1f\u7b54\u6848\u662f\u901a\u8fc7 this.props \u53d8\u91cf\uff1a 1 2 3 4 5 6 7 8 9 10 // Component 'Square' render () : ReactElement { return < div style = {{ width : this.props.size , height : this.props.size , backgroundColor : this.props.color }} /> ; } \u4f46\u4f60\u4f1a\u53d1\u73b0\u62a5\u9519\uff0c\u57fa\u672c\u7684\u610f\u601d\u5c31\u662f props \u4e0a\u6ca1\u6709\u6210\u5458 size, color \u3002\u8fd9\u5b9e\u9645\u4e0a\u5c31\u662f TypeScript \u7684\u8981\u6c42\uff0c\u4f60\u9700\u8981\u4e3a\u7ec4\u4ef6\u6307\u5b9a\u8fd9\u4e2a\u7ec4\u4ef6\u9700\u8981\u54ea\u4e9b\u5c5e\u6027\uff0c\u54ea\u4e9b\u5c5e\u6027\u662f\u53ef\u9009\u7684\u7b49\u7b49\uff0c\u8fd9\u6837\u53ef\u4ee5\u6709\u6548\u907f\u514d\u51fa\u73b0\u96be\u4ee5\u63a2\u67e5\u7684 undefined \u7684\u95ee\u9898\u3002 \u6307\u5b9a\u7684\u65b9\u5f0f\u662f interface \uff0c\u4f60\u9700\u8981\u5728\u8fd9\u4e2a\u63a5\u53e3\u4e4b\u4e2d\u5b9a\u4e49\u8fd9\u4e2a\u7ec4\u4ef6\u63a5\u53d7\u7684\u6240\u6709\u5c5e\u6027\u3002\u6bd4\u5982\u8bf4 Square \u53ea\u9700\u8981\u63a5\u53d7\u5c3a\u5bf8\u548c\u989c\u8272\uff1a 1 2 3 4 interface SquareProps { size : number ; color : string ; } \u8fd9\u91cc\u4e5f\u53ef\u4ee5\u6307\u5b9a\u90e8\u5206\u5c5e\u6027\u662f\u53ef\u9009\u7684\uff0c\u8fd9\u6837\u7684\u8bdd\u5b9e\u4f8b\u5316\u7ec4\u4ef6\u5c31\u6ca1\u5fc5\u8981\u4f20\u5165\u8fd9\u4e00\u90e8\u5206\u5c5e\u6027\uff0c\u5e76\u4e14\u901a\u8fc7 this.props \u8bbf\u95ee\u8fd9\u4e9b\u5c5e\u6027\u4f1a\u5f97\u5230 undefined \u3002\u4f46\u662f\u8fd9\u6837\u7684\u884c\u4e3a\u663e\u7136\u66f4\u4e3a\u53ef\u63a7\u3002 \u6211\u4eec\u5728 TypeScript \u6587\u6863 \u4e2d\u63d0\u5230\u8fc7\u63a5\u53e3\u7684\u5c5e\u6027\u9664\u4e86\u53ef\u4ee5\u89c4\u5b9a\u4e3a\u53ef\u9009\u5c5e\u6027\uff0c\u8fd8\u53ef\u4ee5\u89c4\u5b9a\u4e3a\u53ea\u8bfb\u5c5e\u6027\u3002\u5b9e\u9645\u4e0a React \u4e25\u683c\u8981\u6c42\u5c5e\u6027\u662f\u4e0d\u53ef\u66f4\u6539\u7684\uff0c\u8fd9\u79cd\u8981\u6c42\u7c7b\u4f3c\u4e8e\u7eaf\u51fd\u6570\uff0c\u7eaf\u51fd\u6570\u7684\u53c2\u6570\u4f20\u5165\u4e4b\u540e\u4e0d\u53ef\u4fee\u6539\uff0c\u81f3\u5c11\u4e0d\u4f1a\u5f71\u54cd\u5230\u539f\u53d8\u91cf\u3002 \u6240\u4ee5\u5982\u679c\u4e25\u683c\u8981\u6c42\u7684\u8bdd\uff0c\u63a5\u53e3\u5b9a\u4e49\u5e94\u8be5\u5199\u4e3a\uff1a 1 2 3 4 interface SquareProps { readonly size : number ; readonly color : string ; } \u5982\u679c\u4e0d\u5199\u7684\u8bdd\u53ef\u80fd\u4f1a\u5728\u90e8\u5206\u8f83\u4e3a\u4e25\u683c\u7684\u6761\u4ef6\u4e0b\u7f16\u8bd1\u5931\u8d25\u3002 \u4e4b\u540e\u5c06\u5176\u6302\u8f7d\u5230\u7ec4\u4ef6\u7684\u5b9a\u4e49\u4e0a\uff0c\u6302\u8f7d\u7684\u8bed\u6cd5\u7c7b\u4f3c\u4e8e C++ \u7684\u6a21\u677f\u8bed\u6cd5\uff1a 1 2 3 class Square extends React . Component < SquareProps > { // Register 'props' here // ... } \u8fd9\u6837\u4f60\u5c31\u57fa\u672c\u4e86\u89e3\u4e86\u5982\u4f55\u7ed9\u7ec4\u4ef6\u4f20\u5165\u5c5e\u6027\u3002\u4e0d\u8fc7\u73b0\u5728\u4f60\u5e94\u8be5\u5df2\u7ecf\u6ce8\u610f\u5230\u4e86\u5c5e\u6027\u662f\u4ece\u7236\u7ec4\u4ef6\u5411\u5b50\u7ec4\u4ef6\u4f20\u9012\u7684\uff0c\u8fd9\u4e5f\u662f\u540e\u7eed\u4f1a\u63d0\u5230\u7684 \u7011\u5e03\u6570\u636e\u6d41 \uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e9b\u63a7\u5236\u7ec4\u4ef6\u5f62\u6001\u7684\u5c5e\u6027\u6570\u636e\u7684\u6d41\u5411\u6c38\u8fdc\u662f\u5411\u4e0b\u7684\u3002","title":"\u81ea\u5b9a\u4e49\u7ec4\u4ef6\u7684\u72b6\u6001\uff08\u4f20\u5165 props\uff09"},{"location":"frontend/react/basic/#ui-state","text":"\u6211\u4eec\u5df2\u7ecf\u63d0\u5230\u4e86\u4f7f\u7528 props \u6765\u81ea\u5b9a\u4e49\u7ec4\u4ef6\u7684\u5f62\u6001\uff0c\u4f46\u6839\u636e props \u7684\u4e0d\u53ef\u53d8\u6027\u5c31\u53ef\u4ee5\u77e5\u9053\u53ea\u4f7f\u7528 props \u63a7\u5236\u7684\u7ec4\u4ef6\u7b49\u4ef7\u4e8e\u7eaf\u51fd\u6570\uff0c\u4e5f\u5c31\u662f\u8bf4\u5176\u6e32\u67d3\u7684 UI \u662f\u5b8c\u5168\u9759\u6001\u7684\uff0c\u53ea\u662f\u5355\u7eaf\u5730\u7b80\u5316\u4e86\u4e00\u4e9b\u4ee3\u7801\u5199\u6cd5\u800c\u5df2\u3002 \u4e3a\u4e86\u5b9e\u73b0\u52a8\u6001\u7684\u6548\u679c\uff0c\u6bd4\u5982\u6700\u7b80\u5355\u7684\u70b9\u51fb\u53d8\u8272\uff0c\u5c31\u9700\u8981\u8ba9\u7ec4\u4ef6\u5177\u6709\u4e00\u5b9a\u7684\u8bb0\u5fc6\u529f\u80fd\uff0c\u8ba9\u7ec4\u4ef6\u7ba1\u7406\u81ea\u5df1\u7684\u72b6\u6001\uff0c\u8fd9\u5c31\u662f state \u3002 \u5c31\u548c\u7c7b\u6210\u5458\u4e00\u6837\uff0c\u7ec4\u4ef6\u7684 state \u662f\u6bcf\u4e00\u4e2a\u5b9e\u4f8b\u5316\u7684\u5bf9\u8c61\u6240\u7ba1\u7406\u7684\u4e00\u4e9b\u53d8\u91cf\uff0c\u8fd9\u4e9b\u53d8\u91cf\u53ef\u80fd\u9700\u8981\u901a\u8fc7\u7236\u7ec4\u4ef6\u521d\u59cb\u5316\uff0c\u4f46\u662f\u8fd9\u4e4b\u540e\u8fd9\u4e9b state \u5c31\u5b8c\u5168\u53d7\u63a7\u4e8e\u7ba1\u7406\u5b83\u4eec\u7684\u7ec4\u4ef6\u672c\u8eab\u3002 \u6bd4\u5982\u8bf4\u6211\u4eec\u60f3\u8ba9\u6b63\u65b9\u5f62\u7684\u989c\u8272\u4e0d\u53d7\u63a7\u4e8e\u7236\u7ec4\u4ef6 App \uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8bbe\u7acb state \u6765\u7ba1\u7406\u3002\u7ed9\u7ec4\u4ef6\u521b\u5efa\u72b6\u6001\u7684\u65b9\u5f0f\u662f\u7b80\u5355\u7684\uff0c\u6211\u4eec\u9700\u8981\u7f16\u5199\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u6784\u9020\u51fd\u6570\uff1a 1 2 3 4 5 // Component 'Square' constructor ( props : SquareProps ) { super ( props ); // Never forget this when writing constructor! this . state = { color : \"red\" }; } \u4e4b\u540e\u5728\u6e32\u67d3\u51fd\u6570\u4e4b\u4e2d\u5c31\u53ef\u4ee5\u5c06\u5408\u9002\u7684 this.props \u66ff\u6362\u4e3a this.state \uff0c\u8fd9\u5c31\u610f\u5473\u7740\u4e00\u90e8\u5206\u6e32\u67d3\u7ed3\u679c\u7531\u7ec4\u4ef6\u672c\u8eab\u72b6\u6001\u63a5\u7ba1\uff0c\u4e0d\u53d7\u63a7\u4e8e\u7236\u7ec4\u4ef6\u4f20\u5165\u7684\u5c5e\u6027\u3002\u6bd4\u5982\u8bf4\u8fd9\u91cc\uff0c\u6b63\u65b9\u5f62\u5c3a\u5bf8\u672c\u8eab\u8fd8\u662f\u53d7\u63a7\u4e8e\u7236\u7ec4\u4ef6\uff0c\u4f46\u662f\u989c\u8272\u7531\u81ea\u8eab\u63a7\u5236\uff1a 1 2 3 4 5 6 7 8 9 10 // Component 'Square' render () : ReactElement { return < div style = {{ width : this.props.size , height : this.props.size , backgroundColor : this.state.color }} /> ; } \u53d8\u66f4\u5f53\u524d\u7ec4\u4ef6\u7684\u72b6\u6001\u4f7f\u7528\u7684\u51fd\u6570\u4e3a this.setState \uff0c\u8fd9\u4e2a\u51fd\u6570\u7531 React.Component \u5b9e\u73b0\uff0c\u53ef\u4ee5\u76f4\u63a5\u7ee7\u627f\u4f7f\u7528\u3002 \u4e00\u5b9a\u6ce8\u610f\uff0c\u4e0d\u8981\u4f7f\u7528 this.state = ... \u8fd9\u6837\u7684\u8d4b\u503c\u53e5\u6539\u53d8\u72b6\u6001\uff0c\u56e0\u4e3a this.setState \u5185\u90e8\u9664\u4e86\u4fee\u6539\u72b6\u6001\u8fd8\u5305\u62ec\u89e6\u53d1\u518d\u6b21\u6e32\u67d3\u7b49\u7b49\u8fc7\u7a0b\uff0c\u5177\u4f53\u6d41\u7a0b\u89c1\u4e0b\u9762\u7684\u8bb2\u89e3\u3002 \u4fee\u6539\u72b6\u6001\u7684\u65b9\u5f0f\u4e3a\uff1a 1 this . setState ({ ... this . state , color : \"blue\" }); \u8fd9\u4e2a\u8bed\u53e5\u5c31\u4f1a\u628a\u72b6\u6001\u4e4b\u4e2d\u7684 color \u5c5e\u6027\u4fee\u6539\u4e3a blue \u3002 \u4fee\u6539\u7ec4\u4ef6\u72b6\u6001\u7684\u65f6\u5019 React \u5728\u505a\u4ec0\u4e48 \u5982\u679c\u6211\u4eec\u4fee\u6539\u4e86\u67d0\u4e00\u4e2a\u7ec4\u4ef6\u7684\u72b6\u6001\uff0c\u5b9e\u9645\u4e0a\u5c31\u53ef\u80fd\u4f1a\u5f71\u54cd\u5230\u8fd9\u4e2a\u7ec4\u4ef6\u5728\u9875\u9762\u4e0a\u7684\u663e\u793a\uff0c\u6bd4\u5982\u8bf4\u4e0a\u8ff0\u4ee3\u7801\u53ef\u4ee5\u4fee\u6539\u6b63\u65b9\u5f62\u7684\u989c\u8272\u3002 \u90a3\u4e48\u4e3a\u4e86\u54cd\u5e94\u8fd9\u6b21\u66f4\u6539\uff0c\u6211\u4eec\u5728\u4fee\u6539\u5b8c\u7ec4\u4ef6\u72b6\u6001\u540e\u5e94\u5f53\u7acb\u523b\u6839\u636e\u65b0\u72b6\u6001\u91cd\u65b0\u6e32\u67d3\u8fd9\u4e2a\u7ec4\u4ef6\u3002\u4f46\u662f\u6211\u4eec\u6ce8\u610f\u5230\u8fd9\u4e2a\u7ec4\u4ef6\u7684\u72b6\u6001\u53ef\u80fd\u901a\u8fc7\u5c5e\u6027\u4f20\u5165\u4e86\u5b50\u7ec4\u4ef6\u4e4b\u4e2d\uff0c\u8fd9\u610f\u5473\u7740\u8be5\u7ec4\u4ef6\u7684\u5b50\u7ec4\u4ef6\u4e5f\u9700\u8981\u4fee\u6539\u3002 \u6240\u4ee5\u8bf4\u6bcf\u5f53\u6211\u4eec\u8c03\u7528 this.setState \u51fd\u6570\uff0c\u5c31\u4f1a\u89e6\u53d1\u4ee5\u8be5\u7ec4\u4ef6\u4e3a\u6839\u7684\u6240\u6709\u7ec4\u4ef6\u7684\u91cd\u65b0\u6e32\u67d3\uff0c\u8fdb\u800c\u89e6\u53d1\u9875\u9762\u7684\u5237\u65b0\u3002 \u8fd9\u4e5f\u5c31\u8bf4\u660e\u4e86\uff0c\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528 this.state = ... \u8fd9\u7c7b\u8d4b\u503c\u8bed\u53e5\u76f4\u63a5\u4fee\u6539\u72b6\u6001\uff0c\u5426\u5219\u53ef\u80fd\u5bfc\u81f4\u7ec4\u4ef6\u6570\u636e\u548c\u663e\u793a\u65b9\u5f0f\u4e0d\u4e00\u81f4\u3002 \u4e3a\u4e86\u8ba9\u7528\u6237\u53ef\u4ee5\u8c03\u7528\u5230\u8fd9\u4e2a\u51fd\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u51fd\u6570\u7ed1\u5b9a\u6210\u70b9\u51fb\u6b63\u65b9\u5f62\u65f6\u7684\u56de\u8c03\uff0c\u8fd9\u6837\u7528\u6237\u70b9\u51fb\u6b63\u65b9\u5f62\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u89e6\u53d1\u8fd9\u4e2a\u51fd\u6570\uff0c\u4fee\u6539\u6b63\u65b9\u5f62\u989c\u8272\uff1a 1 2 3 4 5 6 7 8 9 10 11 // Component 'Square' render () : ReactElement { return < div style = {{ width : this.props.size , height : this.props.size , backgroundColor : this.state.color }} onClick = {() => this . setState ({ ... this . state , color : \"blue\" })} /> ; } \u73b0\u5728\u6211\u4eec\u5e0c\u671b\u8ba9\u7528\u6237\u70b9\u51fb\u6b63\u65b9\u5f62\u7684\u65f6\u5019\uff0c\u6b63\u65b9\u5f62\u989c\u8272\u5728\u7ea2\u8272\u548c\u84dd\u8272\u4e4b\u95f4\u76f8\u4e92\u5207\u6362\u3002\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u9996\u5148\u7f16\u5199\u4e00\u4e2a\u5207\u6362\u989c\u8272\u7684\u51fd\u6570\uff0c\u5185\u90e8\u8c03\u7528 this.setState() \u65b9\u6cd5\uff1a 1 2 3 4 5 6 7 // Component 'Square' switchColor () : void { this . setState (( prev ) => ({ ... prev , color : prev.color === \"red\" ? \"blue\" : \"red\" , })); } \u8fd9\u91cc\u6ce8\u610f\uff0c\u6211\u4eec\u5728 this.setState \u51fd\u6570\u4e2d\u4f20\u5165\u4e86\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u539f\u56e0\u89c1\u4e0b\u8ff0\u89e3\u91ca\u3002 \u72b6\u6001\u7684\u65f6\u95f4\u4f9d\u8d56\u6027 \u51fa\u4e8e\u6027\u80fd\u65b9\u9762\u7684\u8003\u91cf\uff0c this.setState \u5b9e\u9645\u4e0a\u8bbe\u8ba1\u4e3a\u4e00\u4e2a\u5f02\u6b65\u51fd\u6570\uff0c\u4e5f\u5c31\u662f\u8bf4\u72b6\u6001\u7684\u4fee\u6539\u5e76\u975e\u662f\u963b\u585e\u7684\u3001\u7acb\u5373\u7684\u3002\u8fd9\u4ea7\u751f\u4e86\u4e0b\u8ff0\u7684\u95ee\u9898\uff1a \u5728 this.setState \u8c03\u7528\u540e\u7acb\u523b\u8bbf\u95ee this.state \u53ef\u80fd\u51fa\u9519 \u5982\u679c\u65b0\u72b6\u6001\u4f9d\u8d56\u4e8e\u4e0a\u4e00\u6b21\u7684\u72b6\u6001\uff0c\u4e5f\u6709\u53ef\u80fd\u51fa\u9519 \u4e0d\u8fc7\u8fd9\u4e24\u4e2a\u95ee\u9898\uff0cReact \u6846\u67b6\u90fd\u505a\u51fa\u4e86\u56de\u7b54\u3002 \u7b2c\u4e00\u4e2a\u95ee\u9898\u6709\u4e24\u4e2a\u89e3\u51b3\u65b9\u6848\uff0c\u4e00\u4e2a\u662f\u7ed9 this.setState \u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4f20\u5165\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u8be5\u56de\u8c03\u51fd\u6570\u5c06\u4f1a\u5728\u72b6\u6001\u66f4\u65b0\u5b8c\u6bd5\u540e\u6267\u884c\uff1a 1 2 3 4 5 6 this . state ({ ... this . state , data : \"*\" . repeat ( 114514 ). split ( \"*\" ), // A large array updated in setState }, () => { console . log ( \"State updated!\" ); }); \u7b2c\u4e8c\u4e2a\u65b9\u6848\u4e3a\u4f7f\u7528 componentDidUpdate \u751f\u547d\u5468\u671f\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u5c06\u4f1a\u5728\u4e0b\u4e00\u90e8\u5206\u4ecb\u7ecd\u3002 \u7b2c\u4e8c\u4e2a\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\u5219\u662f\u7ed9 this.setState \u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f20\u5165\u56de\u8c03\u51fd\u6570\uff0c\u8be5\u56de\u8c03\u51fd\u6570\u63a5\u53d7\u7684\u53c2\u6570\u4e3a\u65e7\u72b6\u6001\uff0c\u8fd4\u56de\u503c\u5c06\u4f1a\u88ab\u8bbe\u5b9a\u4e3a\u65b0\u72b6\u6001\u3002\u5728\u7c7b\u4f3c\u4e8e\u8ba1\u6570\u5668\u9012\u589e\u3001\u72b6\u6001\u673a\u5207\u6362\u72b6\u6001\u7b49\u573a\u666f\u4e2d\uff0c\u4f7f\u7528\u56de\u8c03\u51fd\u6570\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u66f4\u4e3a\u5408\u9002\u7684\u9009\u62e9\u3002\u8fd9\u91cc\u7684\u4ee3\u7801\u793a\u4f8b\u89c1\u4e0a\u8ff0 switchColor \u51fd\u6570\u3002 \u5c5e\u6027\u4e5f\u5e94\u5f53\u4f7f\u7528\u63a5\u53e3\u5b9a\u4e49\u5e76\u4e14\u5728\u7ec4\u4ef6\u5b9a\u4e49\u4e0a\u4f53\u73b0\uff0c\u5426\u5219\u53ef\u80fd\u65e0\u6cd5\u901a\u8fc7\u7f16\u8bd1\uff1a 1 2 3 4 5 interface SquareStates { readonly color : string ; } class Square extends React . Component < SquareProps , SquareStates > { /* ... */ } \u7011\u5e03\u6570\u636e\u6d41 \u7011\u5e03\u6570\u636e\u6d41\u5f62\u5bb9\u7684\u662f React \u6846\u67b6\u4e2d\u6570\u636e\u6d41\u7684\u7ba1\u7406\u65b9\u5f0f\uff0c\u63cf\u8ff0\u7684\u662f React \u7ec4\u4ef6\u95f4\u7684\u6570\u636e\u4ec5\u5b58\u5728\u4ece\u4e0a\u81f3\u4e0b\u7684\u6d41\u52a8\u3002 props \u53ef\u4ee5\u8ba4\u4e3a\u662f\u4e00\u80a1\u4ece\u4e0a\u800c\u4e0b\u7684\u6c34\u6d41\uff0c\u4e0a\u6e38\u53d1\u751f\u7684\u53d8\u5316\u4f1a\u7acb\u523b\u53cd\u6620\u5230\u4e0b\u6e38\u3002React \u4e2d\u7236\u7ec4\u4ef6\u901a\u8fc7 props \u89c4\u5b9a\u5b50\u7ec4\u4ef6\u7684\u884c\u4e3a\uff0c\u800c props \u7684\u6539\u53d8\u5c31\u610f\u5473\u7740\u5b50\u7ec4\u4ef6\u9700\u8981\u7acb\u523b\u91cd\u65b0\u6e32\u67d3\u3002 state \u53ef\u4ee5\u8ba4\u4e3a\u662f\u67d0\u5904\u7684\u53e6\u5916\u4e00\u4e2a\u6c34\u6e90\u3002React \u5141\u8bb8\u7ec4\u4ef6\u7ba1\u7406\u81ea\u8eab\u7684\u72b6\u6001\uff0c\u4e5f\u5141\u8bb8 state \u7684\u6570\u636e\u901a\u8fc7 props \u5411\u4e0b\u4f20\u9012\u3002 \u5f53\u7136\uff0c\u7011\u5e03\u6570\u636e\u6d41\u5e76\u4e0d\u662f\u7edd\u5bf9\u7684\uff0c\u6211\u4eec\u540e\u7eed\u4f1a\u63d0\u5230\u901a\u8fc7\u56de\u8c03\u51fd\u6570\u5b9e\u73b0\u6570\u636e\u7684\u5411\u4e0a\u6d41\u52a8\uff0c\u4ee5\u53ca\u4e5f\u4f1a\u7b80\u5355\u4ecb\u7ecd\u901a\u8fc7 Redux \u6765\u5b9e\u73b0\u8de8\u7ec4\u4ef6\u6570\u636e\u5171\u4eab\u7684\u65b9\u6cd5\u3002","title":"\u5b9e\u73b0\u52a8\u6001\u7684 UI\uff08\u6dfb\u52a0\u7ec4\u4ef6\u7684 state\uff09"},{"location":"frontend/react/dataflow/","text":"\u975e\u5e38\u89c4\u6570\u636e\u6d41 \u00b6 \u6211\u4eec\u5148\u524d\u4ecb\u7ecd\u8fc7 React \u7684\u7011\u5e03\u6570\u636e\u6d41\uff0c\u4e5f\u5c31\u662f\u7236\u7ec4\u4ef6\u5411\u5b50\u7ec4\u4ef6\u4f20\u9012\u6570\u636e\u7684\u6570\u636e\u7ec4\u7ec7\u5f62\u5f0f\u3002\u4f46\u662f\u6709\u65f6\u6211\u4eec\u4f1a\u8981\u6c42\u5b50\u7ec4\u4ef6\u7684\u884c\u4e3a\u5f71\u54cd\u7236\u7ec4\u4ef6\uff0c\u6216\u8005\u591a\u4e2a\u7ec4\u4ef6\u4e4b\u95f4\u5171\u4eab\u4fe1\u606f\u3002\u672c\u90e8\u5206\u5c06\u4f1a\u7b80\u8981\u4ecb\u7ecd\u5982\u4f55\u5b9e\u73b0\u8fd9\u4e9b\u975e\u5e38\u89c4\u6570\u636e\u6d41\u3002 \u53cd\u5411\u6570\u636e\u6d41 \u00b6 \u53cd\u5411\u6570\u636e\u6d41\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u5f88\u5e38\u89c1\u7684\u9700\u6c42\uff0c\u6bd4\u5982\u8bf4 \u5206\u9875\u5668 \u3002\u5206\u9875\u5668\u5728 UI \u6784\u6210\u4e0a\u800c\u8a00\uff0c\u4ec5\u4ec5\u662f\u4e00\u4e2a\u7f51\u9875\u7684\u90e8\u5206\uff0c\u4f46\u662f\u5b83\u7684\u72b6\u6001\u5374\u51b3\u5b9a\u4e86\u6574\u4e2a\u7f51\u9875\u5e94\u5f53\u663e\u793a\u7684\u5185\u5bb9\u3002\u4ece\u800c\u6211\u4eec\u5fc5\u987b\u6784\u5efa\u4ece\u5206\u9875\u5668\u5411\u7236\u7ec4\u4ef6\u7684\u6570\u636e\u6d41\uff0c\u8ba9\u5206\u9875\u5668\u8d77\u5230\u4f5c\u7528\u3002 \u8fd9\u91cc\u6211\u4eec\u6cbf\u7528\u5148\u524d\u7684\u4ee3\u7801\uff0c\u8003\u8651\u4e00\u4e2a\u7b80\u5316\u7684\u53cd\u5411\u6570\u636e\u6d41\u9700\u6c42\u3002\u6bd4\u5982\u8bf4\u8fd9\u91cc\uff0c\u6211\u4eec\u5e0c\u671b\u8ba9\u70b9\u51fb\u6b63\u65b9\u5f62\u8fd9\u4e2a\u4e8b\u4ef6\uff0c\u4e0d\u4ec5\u4ec5\u6539\u53d8\u6b63\u65b9\u5f62\u672c\u8eab\u7684\u989c\u8272\uff0c\u8fd8\u53ef\u4ee5\u6539\u53d8\u7236\u7ec4\u4ef6 App \u5185\u90e8\u7684\u8ba1\u6570\u5668\u6765\u663e\u793a\u70b9\u51fb\u6b21\u6570\u3002 \u5220\u6389\u4e00\u4e9b\u591a\u4f59\u7684\u4ee3\u7801 \u8fd9\u91cc\u6211\u4eec\u4e0d\u6d89\u53ca\u751f\u547d\u5468\u671f\uff0c\u6545\u53ef\u4ee5\u5220\u9664\u6389 Square \u7ec4\u4ef6\u5185\u7684\u8ba1\u65f6\u5668\u4ee5\u53ca\u76f8\u5173\u7684\u751f\u547d\u5468\u671f\u4ee3\u7801\u3002 \u9996\u5148\u6211\u4eec\u9700\u8981\u5728\u7236\u7ec4\u4ef6 App \u7684\u72b6\u6001\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u8ba1\u6570\u5668\uff0c\u5e76\u4e14\u5728\u6784\u9020\u51fd\u6570\u4e2d\u521d\u59cb\u5316\u3002\u4fee\u6539\u540e\u7684 App \u7ec4\u4ef6\u4e3a\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 // Component 'App' interface AppState { readonly clickCnt : number ; } class App extends React . Component < Record < string , never > , AppState > { constructor ( props : Record < string , never > ) { super ( props ); this . state = { clickCnt : 0 }; } render () : ReactElement { return ( < div > < p > This is a square !< /p> < p > We have click it for { this . state . clickCnt } time ( s ) !< /p> < Square size = { 100 } color = \"red\" /> < /div> ); } } Record<string, never> \u662f\u4ec0\u4e48\uff1f Record<string, never> \u53ef\u4ee5\u7406\u89e3\u4e3a\u7a7a\u5bf9\u8c61 {} \u7684\u7c7b\u578b\u6807\u6ce8\uff0c\u8fd9\u91cc\u4ec5\u4ec5\u662f\u4e3a\u4e86\u901a\u8fc7 TypeScript \u7684\u7c7b\u578b\u68c0\u67e5\u3002 \u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u7f16\u5199\u4e00\u4e2a\u9012\u589e\u8ba1\u6570\u5668\u7684\u6210\u5458\u51fd\u6570\uff1a 1 2 3 4 5 6 7 // Component 'App' increaseCnter () : void { this . setState (( prev ) => ({ ... prev , clickCnt : prev.clickCnt + 1 , })); } \u73b0\u5728\u6211\u4eec\u9700\u8981\u601d\u8003\u7684\u5c31\u662f\u5982\u4f55\u8ba9\u5b50\u7ec4\u4ef6 Square \u8c03\u7528\u5230\u8fd9\u4e2a\u51fd\u6570\u3002\u6211\u4eec\u6ce8\u610f\u5230\u5728 TypeScript \u8bed\u8a00\u4e4b\u4e2d\uff0c\u51fd\u6570\u4e5f\u662f\u4e00\u79cd\u5bf9\u8c61\uff0c\u6240\u4ee5\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u901a\u8fc7\u7ec4\u4ef6\u5c5e\u6027\u5c06\u8fd9\u4e2a\u51fd\u6570\u4f20\u9012\u7ed9\u5b50\u7ec4\u4ef6\u3002\u90a3\u4e48\u6211\u4eec\u9700\u8981\u5728\u5b50\u7ec4\u4ef6\u5c5e\u6027\u63a5\u53e3\u4e0a\u589e\u6dfb\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff1a 1 2 3 4 5 interface SquareProps { readonly size : number ; readonly color : string ; readonly increaseCnter : () => void ; } \u4e4b\u540e\u901a\u8fc7\u7ec4\u4ef6\u5c5e\u6027\u5c06\u7236\u7ec4\u4ef6\u6210\u5458\u51fd\u6570\u5411\u4e0b\u4f20\u9012\uff1a 1 2 // Component 'App', Function 'render' < Square size = { 100 } color = \"red\" increaseCnter = {() => this . increaseCnter ()} /> \u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u5b50\u7ec4\u4ef6\u5185\u901a\u8fc7 this.props.increaseCnter \u6765\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u4e86\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // Component 'Square', Function 'render' render () : ReactElement { return < div style = {{ width : this.props.size , height : this.props.size , backgroundColor : this.state.color }} onClick = {() => { this . switchColor (); this . props . increaseCnter (); }} /> ; } \u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u8bb0\u5f55\u70b9\u51fb\u6b63\u65b9\u5f62\u7684\u6b21\u6570\u4e86\u3002 \u771f\u7684\u662f\u53cd\u5411\u6570\u636e\u6d41\u5417\uff1f \u6211\u4eec\u901a\u8fc7\u4f20\u9012\u56de\u8c03\u51fd\u6570\u5b9e\u73b0\u4e86\u53cd\u5411\u6570\u636e\u6d41\uff0c\u4f46\u5b9e\u9645\u4e0a\u8fd9\u6837\u7684\u64cd\u4f5c\u5e76\u6ca1\u6709\u8fdd\u53cd\u7011\u5e03\u6570\u636e\u6d41\u7684\u7ea6\u5b9a\u3002\u7236\u7ec4\u4ef6\u5411\u4e0b\u4f20\u9012\u7684\uff0c\u4ec5\u4ec5\u662f\u5b50\u7ec4\u4ef6\u5728\u7ea6\u675f\u4e0b\u64cd\u4f5c\u7236\u7ec4\u4ef6\u72b6\u6001\u7684\u6743\u9650\uff0c\u5b9e\u9645\u4e0a\u8fd8\u662f\u53ef\u4ee5\u7406\u89e3\u4e3a\u7236\u7ec4\u4ef6\u63a7\u5236\u4e86\u5b50\u7ec4\u4ef6\u7684\u884c\u4e3a\u8fb9\u754c\u3002 \u7ec4\u4ef6\u95f4\u5171\u4eab\u6570\u636e \u00b6 \u6211\u4eec\u6ce8\u610f\u5230\u5373\u4f7f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4f20\u9012\u56de\u8c03\u51fd\u6570\u7684\u65b9\u5f0f\u5b9e\u73b0\u53cd\u5411\u6570\u636e\u6d41\uff0c\u4f46\u5b9e\u9645\u4e0a\u8fd9\u79cd\u53cd\u5411\u6570\u636e\u6d41\u4f9d\u7136\u53ea\u80fd\u5728\u7236\u5b50\u4e4b\u95f4\u4f20\u9012\u3002\u5bf9\u4e8e\u66f4\u5927\u89c4\u6a21\u7684\u524d\u7aef\uff0c\u6211\u4eec\u5f80\u5f80\u9700\u8981\u8de8\u8d8a\u6587\u6863\u6811\u4f20\u9012\u4fe1\u606f\uff0c\u4e43\u81f3\u6574\u4e2a\u5e94\u7528\u90fd\u9700\u8981\u5171\u4eab\u67d0\u4e9b\u4fe1\u606f\u3002\u6b64\u65f6\u4f9d\u7136\u901a\u8fc7\u56de\u8c03\u51fd\u6570\u4f20\u9012\u5c31\u663e\u5f97\u6781\u4e3a\u5c40\u9650\uff0c\u800c\u73b0\u5728\u7684\u4e00\u79cd\u901a\u7528\u89e3\u51b3\u65b9\u6848\u4e3a Redux\u3002 \u4f46\u7531\u4e8e Redux \u4e00\u822c\u7528\u4e8e\u8f83\u5927\u578b\u7684\u5de5\u7a0b\uff0c\u8fd9\u91cc\u4f7f\u7528\u5c0f\u6b63\u65b9\u5f62\u4f5c\u4e3a DEMO \u96be\u4ee5\u8bb2\u89e3\u3002\u6240\u4ee5\u8fd9\u91cc\u63d0\u4f9b\u82e5\u5e72\u5b66\u4e60 Redux \u7684\u4e00\u4e9b\u8d44\u6599\u94fe\u63a5\uff0c\u5e0c\u671b\u8bfb\u8005\u5728\u4f7f\u7528\u5230 Redux \u7684\u65f6\u5019\u53ef\u4ee5\u53c2\u8003\uff1a Redux \u5b98\u65b9\u6587\u6863 http://cn.redux.js.org/introduction/getting-started \u962e\u4e00\u5cf0 Redux \u6559\u5b66\u6587\u6863 https://www.ruanyifeng.com/blog/2016/09/redux_tutorial_part_one_basic_usages.html \u9884\u7559\u6587\u6863 \u540e\u7eed\u53ef\u80fd\u4f1a\u7f16\u5199 Redux \u6559\u5b66\u6587\u6863\u3002","title":"\u975e\u5e38\u89c4\u6570\u636e\u6d41"},{"location":"frontend/react/dataflow/#_1","text":"\u6211\u4eec\u5148\u524d\u4ecb\u7ecd\u8fc7 React \u7684\u7011\u5e03\u6570\u636e\u6d41\uff0c\u4e5f\u5c31\u662f\u7236\u7ec4\u4ef6\u5411\u5b50\u7ec4\u4ef6\u4f20\u9012\u6570\u636e\u7684\u6570\u636e\u7ec4\u7ec7\u5f62\u5f0f\u3002\u4f46\u662f\u6709\u65f6\u6211\u4eec\u4f1a\u8981\u6c42\u5b50\u7ec4\u4ef6\u7684\u884c\u4e3a\u5f71\u54cd\u7236\u7ec4\u4ef6\uff0c\u6216\u8005\u591a\u4e2a\u7ec4\u4ef6\u4e4b\u95f4\u5171\u4eab\u4fe1\u606f\u3002\u672c\u90e8\u5206\u5c06\u4f1a\u7b80\u8981\u4ecb\u7ecd\u5982\u4f55\u5b9e\u73b0\u8fd9\u4e9b\u975e\u5e38\u89c4\u6570\u636e\u6d41\u3002","title":"\u975e\u5e38\u89c4\u6570\u636e\u6d41"},{"location":"frontend/react/dataflow/#_2","text":"\u53cd\u5411\u6570\u636e\u6d41\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u5f88\u5e38\u89c1\u7684\u9700\u6c42\uff0c\u6bd4\u5982\u8bf4 \u5206\u9875\u5668 \u3002\u5206\u9875\u5668\u5728 UI \u6784\u6210\u4e0a\u800c\u8a00\uff0c\u4ec5\u4ec5\u662f\u4e00\u4e2a\u7f51\u9875\u7684\u90e8\u5206\uff0c\u4f46\u662f\u5b83\u7684\u72b6\u6001\u5374\u51b3\u5b9a\u4e86\u6574\u4e2a\u7f51\u9875\u5e94\u5f53\u663e\u793a\u7684\u5185\u5bb9\u3002\u4ece\u800c\u6211\u4eec\u5fc5\u987b\u6784\u5efa\u4ece\u5206\u9875\u5668\u5411\u7236\u7ec4\u4ef6\u7684\u6570\u636e\u6d41\uff0c\u8ba9\u5206\u9875\u5668\u8d77\u5230\u4f5c\u7528\u3002 \u8fd9\u91cc\u6211\u4eec\u6cbf\u7528\u5148\u524d\u7684\u4ee3\u7801\uff0c\u8003\u8651\u4e00\u4e2a\u7b80\u5316\u7684\u53cd\u5411\u6570\u636e\u6d41\u9700\u6c42\u3002\u6bd4\u5982\u8bf4\u8fd9\u91cc\uff0c\u6211\u4eec\u5e0c\u671b\u8ba9\u70b9\u51fb\u6b63\u65b9\u5f62\u8fd9\u4e2a\u4e8b\u4ef6\uff0c\u4e0d\u4ec5\u4ec5\u6539\u53d8\u6b63\u65b9\u5f62\u672c\u8eab\u7684\u989c\u8272\uff0c\u8fd8\u53ef\u4ee5\u6539\u53d8\u7236\u7ec4\u4ef6 App \u5185\u90e8\u7684\u8ba1\u6570\u5668\u6765\u663e\u793a\u70b9\u51fb\u6b21\u6570\u3002 \u5220\u6389\u4e00\u4e9b\u591a\u4f59\u7684\u4ee3\u7801 \u8fd9\u91cc\u6211\u4eec\u4e0d\u6d89\u53ca\u751f\u547d\u5468\u671f\uff0c\u6545\u53ef\u4ee5\u5220\u9664\u6389 Square \u7ec4\u4ef6\u5185\u7684\u8ba1\u65f6\u5668\u4ee5\u53ca\u76f8\u5173\u7684\u751f\u547d\u5468\u671f\u4ee3\u7801\u3002 \u9996\u5148\u6211\u4eec\u9700\u8981\u5728\u7236\u7ec4\u4ef6 App \u7684\u72b6\u6001\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u8ba1\u6570\u5668\uff0c\u5e76\u4e14\u5728\u6784\u9020\u51fd\u6570\u4e2d\u521d\u59cb\u5316\u3002\u4fee\u6539\u540e\u7684 App \u7ec4\u4ef6\u4e3a\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 // Component 'App' interface AppState { readonly clickCnt : number ; } class App extends React . Component < Record < string , never > , AppState > { constructor ( props : Record < string , never > ) { super ( props ); this . state = { clickCnt : 0 }; } render () : ReactElement { return ( < div > < p > This is a square !< /p> < p > We have click it for { this . state . clickCnt } time ( s ) !< /p> < Square size = { 100 } color = \"red\" /> < /div> ); } } Record<string, never> \u662f\u4ec0\u4e48\uff1f Record<string, never> \u53ef\u4ee5\u7406\u89e3\u4e3a\u7a7a\u5bf9\u8c61 {} \u7684\u7c7b\u578b\u6807\u6ce8\uff0c\u8fd9\u91cc\u4ec5\u4ec5\u662f\u4e3a\u4e86\u901a\u8fc7 TypeScript \u7684\u7c7b\u578b\u68c0\u67e5\u3002 \u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u7f16\u5199\u4e00\u4e2a\u9012\u589e\u8ba1\u6570\u5668\u7684\u6210\u5458\u51fd\u6570\uff1a 1 2 3 4 5 6 7 // Component 'App' increaseCnter () : void { this . setState (( prev ) => ({ ... prev , clickCnt : prev.clickCnt + 1 , })); } \u73b0\u5728\u6211\u4eec\u9700\u8981\u601d\u8003\u7684\u5c31\u662f\u5982\u4f55\u8ba9\u5b50\u7ec4\u4ef6 Square \u8c03\u7528\u5230\u8fd9\u4e2a\u51fd\u6570\u3002\u6211\u4eec\u6ce8\u610f\u5230\u5728 TypeScript \u8bed\u8a00\u4e4b\u4e2d\uff0c\u51fd\u6570\u4e5f\u662f\u4e00\u79cd\u5bf9\u8c61\uff0c\u6240\u4ee5\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u901a\u8fc7\u7ec4\u4ef6\u5c5e\u6027\u5c06\u8fd9\u4e2a\u51fd\u6570\u4f20\u9012\u7ed9\u5b50\u7ec4\u4ef6\u3002\u90a3\u4e48\u6211\u4eec\u9700\u8981\u5728\u5b50\u7ec4\u4ef6\u5c5e\u6027\u63a5\u53e3\u4e0a\u589e\u6dfb\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff1a 1 2 3 4 5 interface SquareProps { readonly size : number ; readonly color : string ; readonly increaseCnter : () => void ; } \u4e4b\u540e\u901a\u8fc7\u7ec4\u4ef6\u5c5e\u6027\u5c06\u7236\u7ec4\u4ef6\u6210\u5458\u51fd\u6570\u5411\u4e0b\u4f20\u9012\uff1a 1 2 // Component 'App', Function 'render' < Square size = { 100 } color = \"red\" increaseCnter = {() => this . increaseCnter ()} /> \u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u5b50\u7ec4\u4ef6\u5185\u901a\u8fc7 this.props.increaseCnter \u6765\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u4e86\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // Component 'Square', Function 'render' render () : ReactElement { return < div style = {{ width : this.props.size , height : this.props.size , backgroundColor : this.state.color }} onClick = {() => { this . switchColor (); this . props . increaseCnter (); }} /> ; } \u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u8bb0\u5f55\u70b9\u51fb\u6b63\u65b9\u5f62\u7684\u6b21\u6570\u4e86\u3002 \u771f\u7684\u662f\u53cd\u5411\u6570\u636e\u6d41\u5417\uff1f \u6211\u4eec\u901a\u8fc7\u4f20\u9012\u56de\u8c03\u51fd\u6570\u5b9e\u73b0\u4e86\u53cd\u5411\u6570\u636e\u6d41\uff0c\u4f46\u5b9e\u9645\u4e0a\u8fd9\u6837\u7684\u64cd\u4f5c\u5e76\u6ca1\u6709\u8fdd\u53cd\u7011\u5e03\u6570\u636e\u6d41\u7684\u7ea6\u5b9a\u3002\u7236\u7ec4\u4ef6\u5411\u4e0b\u4f20\u9012\u7684\uff0c\u4ec5\u4ec5\u662f\u5b50\u7ec4\u4ef6\u5728\u7ea6\u675f\u4e0b\u64cd\u4f5c\u7236\u7ec4\u4ef6\u72b6\u6001\u7684\u6743\u9650\uff0c\u5b9e\u9645\u4e0a\u8fd8\u662f\u53ef\u4ee5\u7406\u89e3\u4e3a\u7236\u7ec4\u4ef6\u63a7\u5236\u4e86\u5b50\u7ec4\u4ef6\u7684\u884c\u4e3a\u8fb9\u754c\u3002","title":"\u53cd\u5411\u6570\u636e\u6d41"},{"location":"frontend/react/dataflow/#_3","text":"\u6211\u4eec\u6ce8\u610f\u5230\u5373\u4f7f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4f20\u9012\u56de\u8c03\u51fd\u6570\u7684\u65b9\u5f0f\u5b9e\u73b0\u53cd\u5411\u6570\u636e\u6d41\uff0c\u4f46\u5b9e\u9645\u4e0a\u8fd9\u79cd\u53cd\u5411\u6570\u636e\u6d41\u4f9d\u7136\u53ea\u80fd\u5728\u7236\u5b50\u4e4b\u95f4\u4f20\u9012\u3002\u5bf9\u4e8e\u66f4\u5927\u89c4\u6a21\u7684\u524d\u7aef\uff0c\u6211\u4eec\u5f80\u5f80\u9700\u8981\u8de8\u8d8a\u6587\u6863\u6811\u4f20\u9012\u4fe1\u606f\uff0c\u4e43\u81f3\u6574\u4e2a\u5e94\u7528\u90fd\u9700\u8981\u5171\u4eab\u67d0\u4e9b\u4fe1\u606f\u3002\u6b64\u65f6\u4f9d\u7136\u901a\u8fc7\u56de\u8c03\u51fd\u6570\u4f20\u9012\u5c31\u663e\u5f97\u6781\u4e3a\u5c40\u9650\uff0c\u800c\u73b0\u5728\u7684\u4e00\u79cd\u901a\u7528\u89e3\u51b3\u65b9\u6848\u4e3a Redux\u3002 \u4f46\u7531\u4e8e Redux \u4e00\u822c\u7528\u4e8e\u8f83\u5927\u578b\u7684\u5de5\u7a0b\uff0c\u8fd9\u91cc\u4f7f\u7528\u5c0f\u6b63\u65b9\u5f62\u4f5c\u4e3a DEMO \u96be\u4ee5\u8bb2\u89e3\u3002\u6240\u4ee5\u8fd9\u91cc\u63d0\u4f9b\u82e5\u5e72\u5b66\u4e60 Redux \u7684\u4e00\u4e9b\u8d44\u6599\u94fe\u63a5\uff0c\u5e0c\u671b\u8bfb\u8005\u5728\u4f7f\u7528\u5230 Redux \u7684\u65f6\u5019\u53ef\u4ee5\u53c2\u8003\uff1a Redux \u5b98\u65b9\u6587\u6863 http://cn.redux.js.org/introduction/getting-started \u962e\u4e00\u5cf0 Redux \u6559\u5b66\u6587\u6863 https://www.ruanyifeng.com/blog/2016/09/redux_tutorial_part_one_basic_usages.html \u9884\u7559\u6587\u6863 \u540e\u7eed\u53ef\u80fd\u4f1a\u7f16\u5199 Redux \u6559\u5b66\u6587\u6863\u3002","title":"\u7ec4\u4ef6\u95f4\u5171\u4eab\u6570\u636e"},{"location":"frontend/react/extensions/","text":"\u540e\u7eed\u62d3\u5c55 \u00b6 \u5982\u679c\u4f60\u5df2\u7ecf\u5b66\u4e60\u5b8c\u4e86\u8fd9\u4e00\u7bc7\u6587\u6863\uff0c\u7406\u89e3\u4e86\u6211\u4eec\u8bb2\u8ff0\u7684\u6240\u6709\u6982\u5ff5\uff0c\u90a3\u4e48\u4f60\u5c31\u5df2\u7ecf\u6709\u8db3\u591f\u7684\u80fd\u529b\u5b8c\u6210\u300a\u8f6f\u4ef6\u5de5\u7a0b\u300b\u8bfe\u7a0b\u7684\u5927\u4f5c\u4e1a Web \u5e94\u7528\u524d\u7aef\uff0c\u4e43\u81f3\u5f00\u53d1\u51fa\u4e00\u4e2a\u771f\u6b63\u53ef\u4ee5\u4e0a\u67b6\u7684 Web \u5e94\u7528\u4e86\uff01\u5269\u4e0b\u7684\uff0c\u4ec5\u4ec5\u662f\u591a\u591a\u7ec3\u4e60\uff0c\u5728\u7f16\u7a0b\u4e2d\u7406\u89e3\u8fd9\u4e9b\u6982\u5ff5\uff0c\u8fd0\u7528\u8fd9\u4e9b\u6982\u5ff5\u3002 \u4e0d\u8fc7\u5728\u771f\u6b63\u8e0f\u4e0a Web \u524d\u7aef\u7684\u9053\u8def\u4e4b\u524d\uff0c\u6211\u4eec\u8fd8\u6709\u4e00\u4e9b\u53ef\u4ee5\u7ed9\u51fa\u7684\u8d44\u6e90\u94fe\u63a5\u3002 Ant Design \u00b6 Ant Design \u662f\u4e00\u4e2a\u6210\u719f\u7684\u524d\u7aef\u7ec4\u4ef6\u5e93\uff0c\u5176\u4f5c\u7528\u5728\u4e8e\u514d\u53bb\u8c03\u8bd5\u4e00\u6574\u5929 CSS \u6837\u5f0f\u8868\u8fd8\u8c03\u4e0d\u51fa\u597d\u770b\u7684 Layout \u6216\u7075\u6d3b\u7684\u4ea4\u4e92\u7684\u82e6\u607c\uff0c\u8ba9\u6211\u4eec\u80fd\u66f4\u4e13\u6ce8\u4e8e\u8bbe\u8ba1\u524d\u7aef\u548c\u7528\u6237\u3001\u540e\u7aef\u3001\u6570\u636e\u5e93\u7684\u4ea4\u4e92\u903b\u8f91\u548c\u524d\u7aef\u6027\u80fd\u3002 Ant Design \u5b98\u65b9\u7f51\u5740\uff1a https://ant.design/index-cn \u3002","title":"\u540e\u7eed\u62d3\u5c55"},{"location":"frontend/react/extensions/#_1","text":"\u5982\u679c\u4f60\u5df2\u7ecf\u5b66\u4e60\u5b8c\u4e86\u8fd9\u4e00\u7bc7\u6587\u6863\uff0c\u7406\u89e3\u4e86\u6211\u4eec\u8bb2\u8ff0\u7684\u6240\u6709\u6982\u5ff5\uff0c\u90a3\u4e48\u4f60\u5c31\u5df2\u7ecf\u6709\u8db3\u591f\u7684\u80fd\u529b\u5b8c\u6210\u300a\u8f6f\u4ef6\u5de5\u7a0b\u300b\u8bfe\u7a0b\u7684\u5927\u4f5c\u4e1a Web \u5e94\u7528\u524d\u7aef\uff0c\u4e43\u81f3\u5f00\u53d1\u51fa\u4e00\u4e2a\u771f\u6b63\u53ef\u4ee5\u4e0a\u67b6\u7684 Web \u5e94\u7528\u4e86\uff01\u5269\u4e0b\u7684\uff0c\u4ec5\u4ec5\u662f\u591a\u591a\u7ec3\u4e60\uff0c\u5728\u7f16\u7a0b\u4e2d\u7406\u89e3\u8fd9\u4e9b\u6982\u5ff5\uff0c\u8fd0\u7528\u8fd9\u4e9b\u6982\u5ff5\u3002 \u4e0d\u8fc7\u5728\u771f\u6b63\u8e0f\u4e0a Web \u524d\u7aef\u7684\u9053\u8def\u4e4b\u524d\uff0c\u6211\u4eec\u8fd8\u6709\u4e00\u4e9b\u53ef\u4ee5\u7ed9\u51fa\u7684\u8d44\u6e90\u94fe\u63a5\u3002","title":"\u540e\u7eed\u62d3\u5c55"},{"location":"frontend/react/extensions/#ant-design","text":"Ant Design \u662f\u4e00\u4e2a\u6210\u719f\u7684\u524d\u7aef\u7ec4\u4ef6\u5e93\uff0c\u5176\u4f5c\u7528\u5728\u4e8e\u514d\u53bb\u8c03\u8bd5\u4e00\u6574\u5929 CSS \u6837\u5f0f\u8868\u8fd8\u8c03\u4e0d\u51fa\u597d\u770b\u7684 Layout \u6216\u7075\u6d3b\u7684\u4ea4\u4e92\u7684\u82e6\u607c\uff0c\u8ba9\u6211\u4eec\u80fd\u66f4\u4e13\u6ce8\u4e8e\u8bbe\u8ba1\u524d\u7aef\u548c\u7528\u6237\u3001\u540e\u7aef\u3001\u6570\u636e\u5e93\u7684\u4ea4\u4e92\u903b\u8f91\u548c\u524d\u7aef\u6027\u80fd\u3002 Ant Design \u5b98\u65b9\u7f51\u5740\uff1a https://ant.design/index-cn \u3002","title":"Ant Design"},{"location":"frontend/react/function-component/","text":"\u51fd\u6570\u7ec4\u4ef6 \u00b6 \u6211\u4eec\u901a\u8fc7\u7c7b\u7ec4\u4ef6\u7b80\u5355\u4ecb\u7ecd\u4e86 React \u7684\u6838\u5fc3\u6982\u5ff5\uff0c\u4f46\u662f\u7c7b\u7ec4\u4ef6\u6709\u4e0b\u8ff0\u6bd4\u8f83\u660e\u663e\u7684\u95ee\u9898\uff1a \u7f16\u7801\u7e41\u7410\uff0c\u5c24\u5176\u5728\u4f7f\u7528 TypeScript \u8bed\u8a00\u7684\u65f6\u5019 \u53ef\u80fd\u4f1a\u51fa\u73b0 this \u7684\u6307\u5411\u4e0d\u660e\u786e\u7684\u95ee\u9898 JavaScript \u8bed\u8a00\u7684\u7c7b\u8bed\u6cd5\u4ec5\u4ec5\u662f\u8bed\u6cd5\u7cd6\uff0c\u5e76\u975e\u662f\u5b8c\u5168\u7b26\u5408\u9762\u5411\u5bf9\u8c61\u601d\u8def\u7684 \u6240\u4ee5\u5728\u65b0\u7248\u672c\u7684 React \u6846\u67b6\u4e2d\uff0c\u6211\u4eec\u66f4\u4e3a\u63a8\u8350\u5927\u5bb6\u7f16\u5199\u51fd\u6570\u7ec4\u4ef6\u3002 \u51fd\u6570\u7ec4\u4ef6\u7684\u57fa\u672c\u601d\u7ef4\u662f\u5c06\u6574\u4e2a\u7ec4\u4ef6\u601d\u8003\u4e3a\u51fd\u6570\uff0c\u51fd\u6570\u7684\u53c2\u6570\u4e3a\u7ec4\u4ef6\u7684\u5c5e\u6027\uff0c\u800c\u8fd4\u56de\u503c\u5c31\u662f\u7ec4\u4ef6\u7684\u663e\u793a\u65b9\u5f0f\uff08\u5373\u7c7b\u7ec4\u4ef6\u7684 render \u51fd\u6570\u8fd4\u56de\u503c\uff09\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5c06\u7ec4\u4ef6\u89c6\u4f5c\u4e00\u79cd\u63a5\u6536\u5c5e\u6027\uff0c\u83b7\u53d6\u7ec4\u4ef6\u6e32\u67d3\u6307\u793a\u7684\u6570\u636e\u6d41\u7ba1\u9053\u66f4\u4e3a\u53ef\u884c\u3002\u8fd9\u79cd\u601d\u8def\u4e0b\u5f00\u53d1\u8005\u53ef\u4ee5\u7b80\u5355\u5730\u7ec4\u5408\u5404\u79cd\u7ba1\u9053\u6765\u5b9e\u73b0 Web \u5e94\u7528\u3002 \u6bd4\u5982\u8bf4\u4e0b\u8ff0\u6ca1\u6709\u8bbe\u7f6e\u7ec4\u4ef6\u72b6\u6001\u7684\u3001\u6ca1\u6709\u4f7f\u7528\u751f\u547d\u5468\u671f\u65b9\u6cd5\u7684\u6b63\u65b9\u5f62\u7ec4\u4ef6\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 interface SquareProps { readonly size : number ; readonly color : string ; } class Square extends React . Component < SquareProps > { render () : ReactElement { return < div style = {{ width : this.props.size , height : this.props.size , backgroundColor : this.props.color }} /> ; } } \u5c31\u53ef\u4ee5\u8f6c\u5199\u4e3a\u4e0b\u8ff0\u51fd\u6570\u7ec4\u4ef6\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 interface SquareProps { readonly size : number ; readonly color : string ; } const Square = ( props : SquareProps ) : ReactElement => { return < div style = {{ width : props.size , height : props.size , backgroundColor : props.color }} /> ; } \u8fd9\u6837\u7684\u8f6c\u5199\u5e76\u4e0d\u6539\u53d8\u7ec4\u4ef6\u7684\u672c\u8d28\uff0c\u4f7f\u7528\u8be5\u7ec4\u4ef6\u7684\u65b9\u5f0f\u4e5f\u548c\u7c7b\u7ec4\u4ef6\u4e00\u81f4\u3002 Hooks \u7b80\u8981\u4ecb\u7ecd \u00b6 \u5728\u8f6c\u5199\u4e0a\u8ff0\u7c7b\u7ec4\u4ef6\u7684\u65f6\u5019\uff0c\u6211\u4eec\u6ce8\u610f\u5230\u5982\u679c\u7ec4\u4ef6\u5177\u6709\u72b6\u6001\u6216\u8005\u4f7f\u7528\u4e86\u751f\u547d\u5468\u671f\u65b9\u6cd5\uff0c\u5219\u65e0\u6cd5\u8f6c\u5199\u3002\u8fd9\u91cc\uff0cReact \u63d0\u4f9b\u7684\u89e3\u51b3\u65b9\u5f0f\u662f\u4f7f\u7528 Hooks\u3002 \u7ba1\u7406\u7ec4\u4ef6\u72b6\u6001 \u00b6 \u6211\u4eec\u9996\u5148\u4ecb\u7ecd\u7ba1\u7406\u72b6\u6001\u9700\u8981\u4f7f\u7528\u7684 Hooks\uff0c\u5373 useState \u51fd\u6570\u3002\u6bd4\u5982\u8bf4\u6211\u4eec\u4f9d\u7136\u662f\u5c06\u6b63\u65b9\u5f62\u7684\u989c\u8272\u53d8\u4e3a\u5176\u72b6\u6001\uff0c\u7531\u7ec4\u4ef6\u81ea\u8eab\u7ba1\u7406\uff0c\u5176\u4ee3\u7801\u5927\u81f4\u4e3a\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 interface SquareProps { readonly size : number ; readonly color : string ; } const Square = ( props : SquareProps ) : ReactElement => { const [ color , setColor ] = useState ( props . color ); const switchColor = () => { setColor (( prev : string ) => prev === \"red\" ? \"blue\" : \"red\" ); }; return < div style = {{ width : props.size , height : props.size , backgroundColor : color }} onClick = { switchColor } /> ; } \u8fd9\u91cc\u9ad8\u4eae\u7684\u4e09\u884c\u8868\u73b0\u51fa\u4f7f\u7528 Hooks \u7684\u65f6\u5019\u9700\u8981\u4fee\u6539\u7684\u5730\u65b9\u3002\u9996\u5148\u6ce8\u610f\u7b2c 7 \u884c\uff0c\u8fd9\u91cc\u4f7f\u7528\u4e86 useState \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u63a5\u53d7\u7684\u662f\u9700\u8981\u8bbe\u5b9a\u7684\u72b6\u6001\u7684\u521d\u59cb\u503c\uff0c\u8fd4\u56de\u7684\u662f\u8be5\u72b6\u6001\u548c\u7528\u4e8e\u8bbe\u5b9a\u8be5\u72b6\u6001\u7684\u51fd\u6570\u3002\u8fd9\u91cc\u6211\u4eec\u8bbe\u5b9a\u7684\u72b6\u6001\u4e3a color \uff0c\u521d\u59cb\u503c\u4e3a props.color \uff0c\u800c setColor \u548c\u7c7b\u7ec4\u4ef6\u4e4b\u4e2d\u7684 setState \u7c7b\u4f3c\uff0c\u7528\u4e8e\u4fee\u6539\u72b6\u6001\u3002 \u8fd9\u91cc\u6ce8\u610f\u7b2c 10 \u884c\u5982\u4f55\u5e94\u7528 setColor \u51fd\u6570\u3002\u8be5\u51fd\u6570\u548c setState \u4e00\u6837\uff0c\u53ef\u4ee5\u63a5\u6536\u65b0\u72b6\u6001\u4f5c\u4e3a\u53c2\u6570\uff0c\u4e5f\u53ef\u4ee5\u63a5\u53d7\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u3002\u540c\u6837\u7684\uff0c\u8be5\u51fd\u6570\u4e5f\u662f\u4e00\u4e2a\u5f02\u6b65\u51fd\u6570\uff0c\u4e5f\u4f1a\u89e6\u53d1\u7ec4\u4ef6\u91cd\u65b0\u6e32\u67d3\u3002 useState Hooks \u7684\u5927\u81f4\u539f\u7406 \u5728\u51fd\u6570\u7ec4\u4ef6\u6761\u4ef6\u4e0b\uff0c\u7ec4\u4ef6\u7684\u72b6\u6001\u662f\u4ea4\u7531\u5168\u5c40\u53d8\u91cf\u7ef4\u62a4\uff0c\u4e5f\u5c31\u662f\u8bf4\u6240\u6709\u7ec4\u4ef6\u7684\u72b6\u6001\u5c06\u4f1a\u4fdd\u5b58\u5728\u4e00\u4e2a\u5168\u5c40\u7684\u6570\u7ec4\u4e4b\u4e2d\u3002\u800c\u6211\u4eec\u5728\u4f7f\u7528 useState \u521b\u5efa\u65b0\u7684\u72b6\u6001\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u5728\u8fd9\u4e2a\u6570\u7ec4\u7684\u5c3e\u90e8\u65b0\u5efa\u4e00\u4e2a\u5143\u7d20\uff0c\u5c06\u8fd9\u4e2a\u5143\u7d20\u7684\u7d22\u5f15\u5c01\u88c5\u8fdb\u5165\u95ed\u5305\uff0c\u8fd9\u4e2a\u95ed\u5305\u5c31\u662f\u7528\u4e8e\u4fee\u6539\u8fd9\u4e2a\u72b6\u6001\u7684\u51fd\u6570\u3002 \u6bd4\u5982\u8bf4 useState \u7684\u4e00\u79cd\u53ef\u80fd\u7684\u5b9e\u73b0\u4e3a\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 let states : any [] = []; let cursor : number = 0 ; const useState = < T > ( initalState : T ) : [ T , ( arg : T ) => void ] => { let state : T = ( states [ cursor ] ?? initalState ) as T ; const _cursor = cursor ; const setState = ( newState : T ) : void => { states [ _cursor ] = newState ; } cursor += 1 ; return [ state , setState ]; } \u8fd9\u91cc\uff0c\u6570\u7ec4 states \u7ba1\u7406\u4e86\u6240\u6709\u7ec4\u4ef6\u7684\u72b6\u6001\uff0c\u53e6\u5916\u6709\u4e00\u4e2a\u6307\u9488 cursor \u7528\u4e8e\u8bbf\u95ee\u8fd9\u4e2a\u6570\u7ec4\u3002\u5728\u6211\u4eec\u8c03\u7528 useState \u7684\u65f6\u5019\uff0c\u5176\u9996\u5148\u4f1a\u68c0\u6d4b\u76ee\u524d cursor \u6307\u5411\u7684\u4f4d\u7f6e\u662f\u5426\u5df2\u7ecf\u5199\u5165\u4e86\u67d0\u4e2a\u72b6\u6001\uff0c\u5982\u679c\u5df2\u7ecf\u5199\u5165\u5219\u5c06\u5176\u53d6\u51fa\u4f5c\u4e3a\u76ee\u524d\u7684\u72b6\u6001\uff0c\u5426\u5219\u4f1a\u7528\u8be5\u51fd\u6570\u63a5\u53d7\u7684\u521d\u59cb\u503c\u4f5c\u4e3a\u76ee\u524d\u7684\u72b6\u6001\u3002 \u968f\u540e\uff0c\u8be5\u51fd\u6570\u4f1a\u4fdd\u7559\u4e00\u4efd\u5f53\u524d cursor \u7684\u526f\u672c _cursor \uff0c\u5c06\u5176\u5305\u88c5\u5728\u95ed\u5305 setState \u4e2d\uff0c\u800c setState \u7684\u4f5c\u7528\u5c31\u662f\u4fee\u6539 _cursor \u6307\u5411\u7684\u90a3\u4e00\u4e2a\u72b6\u6001\u3002\u6700\u540e\u9012\u589e cursor \uff0c\u5c06\u76ee\u524d\u7684\u72b6\u6001 state \u548c\u7528\u4e8e\u4fee\u6539\u72b6\u6001\u7684\u51fd\u6570 setState \u8fd4\u56de\u5373\u53ef\u3002 \u7ba1\u7406\u7ec4\u4ef6\u526f\u4f5c\u7528\u2014\u2014\u66ff\u6362\u751f\u547d\u5468\u671f\u65b9\u6cd5 \u00b6 \u7531\u4e8e\u51fd\u6570\u7ec4\u4ef6\u5c06\u7ec4\u4ef6\u770b\u4f5c\u662f\u63a5\u6536\u7ec4\u4ef6\u5c5e\u6027\u4f20\u51fa\u7ec4\u4ef6\u663e\u793a\u65b9\u5f0f\u7684\u6570\u636e\u6d41\u7ba1\u9053\uff0c\u6240\u4ee5\u5176\u4e3b\u8981\u4f5c\u7528\u5c31\u662f\u6e32\u67d3\uff0c\u5373 render \u51fd\u6570\u8d1f\u8d23\u7684\u90e8\u5206\u3002\u90a3\u4e48\u6240\u6709\u751f\u547d\u5468\u671f\u65b9\u6cd5\u89c4\u5b9a\u7684\uff0c\u5728\u7ec4\u4ef6\u6302\u8f7d\u540e\u3001\u5378\u8f7d\u524d\u7684\u884c\u4e3a\uff0c\u5c31\u7edf\u79f0\u4e3a \u526f\u4f5c\u7528 \u3002 \u6211\u4eec\u5148\u7b80\u8981\u4ecb\u7ecd useEffect \u8fd9\u4e2a Hooks\uff0c\u5176\u539f\u578b\u4e3a\uff1a 1 useEffect ( callback , depList ); \u8fd9\u91cc callback \u5c31\u662f\u6211\u4eec\u9700\u8981\u6267\u884c\u7684\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u4e5f\u5c31\u662f\u89c4\u5b9a\u526f\u4f5c\u7528\u7684\u51fd\u6570\u3002\u800c depList \u4e3a\u526f\u4f5c\u7528\u4f9d\u8d56\u9879\u5217\u8868\uff0c\u8868\u793a\u8be5\u526f\u4f5c\u7528\u53d6\u51b3\u4e8e\u54ea\u4e9b\u53d8\u91cf\u3002 \u6240\u8c13\u4f9d\u8d56\u9879\uff0c\u5c31\u662f\u6bcf\u5f53 useEffect \u6267\u884c\u7684\u65f6\u5019\uff0c\u4f1a\u68c0\u6d4b\u6240\u6709\u4f9d\u8d56\u9879\u76f8\u8f83\u4e8e\u4e0a\u4e00\u6b21\u662f\u5426\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u5982\u679c\u53d1\u751f\u53d8\u5316\uff0c\u624d\u4f1a\u6267\u884c callback \u56de\u8c03\u51fd\u6570\u3002 \u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u63a7\u5236 depList \u6765\u63a7\u5236\u526f\u4f5c\u7528\u7684\u6267\u884c\u65f6\u673a\u3002\u4e00\u822c\u800c\u8a00\uff0c depList \u6709\u4e09\u79cd\u5199\u6cd5\u3002 \u901a\u8fc7 depList \u63a7\u5236\u526f\u4f5c\u7528\u53d1\u751f\u65f6\u673a \u00b6 depList \u7f6e undefined \u6b64\u65f6\u76f8\u5f53\u4e8e\u4e0d\u4f20\u5165\u7b2c\u4e8c\u4e2a\u53c2\u6570 depList \u3002\u6b64\u65f6\u8fd9\u4e2a Hooks \u7684\u8bed\u4e49\u53ef\u4ee5\u7406\u89e3\u4e3a\u526f\u4f5c\u7528\u4e0d\u4f9d\u8d56\u4e8e\u4efb\u4f55\u53d8\u91cf\uff0c\u59cb\u7ec8\u4f1a\u88ab\u6267\u884c\u3002\u800c useEffect \u88ab\u8c03\u7528\u7684\u65f6\u673a\u5c31\u662f\u51fd\u6570\u7ec4\u4ef6\u8c03\u7528\u7684\u65f6\u673a\uff0c\u5373\u51fd\u6570\u7ec4\u4ef6\u6e32\u67d3\u7684\u65f6\u5019\u3002\u6240\u4ee5\uff0c\u5982\u679c depList \u7f6e undefined \uff0c\u610f\u5473\u7740\u526f\u4f5c\u7528\u4f1a\u5728 \u6bcf\u4e00\u6b21\u6e32\u67d3\u540e\u6267\u884c \u3002 \u5728\u6bcf\u4e00\u6b21\u6e32\u67d3\u4e4b\u540e\u90fd\u4f1a\u6267\u884c\u7684\u526f\u4f5c\u7528\u7b49\u4ef7\u4e8e componentDidMount \u548c componentDidUpdate \u4e24\u4e2a\u751f\u547d\u5468\u671f\u65b9\u6cd5\u5408\u5e76\u3002 \u8fd9\u7c7b\u526f\u4f5c\u7528\u5f80\u5f80\u662f\u6839\u636e\u7ec4\u4ef6\u66f4\u65b0\u5b8c\u6bd5\u540e\u7684\u65b0\u72b6\u6001\u6765\u624b\u52a8\u8c03\u6574 DOM \u6811\u7ed3\u6784\u3001\u8bb0\u5f55\u65e5\u5fd7\u7b49\u884c\u4e3a\u3002\u6bd4\u5982\u8bf4\u6211\u4eec\u53ef\u4ee5\u5728\u6b63\u65b9\u5f62\u7c7b\u7ec4\u4ef6\u4e0a\u6dfb\u52a0\u4e0b\u8ff0 Hooks\uff0c\u8ba9\u5176\u88ab\u70b9\u51fb\u6b21\u6570\u80fd\u591f\u663e\u793a\u5728\u7f51\u9875\u6807\u9898\u4e0a\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 interface SquareProps { readonly size : number ; readonly color : string ; } const Square = ( props : SquareProps ) : ReactElement => { const [ clickCnt , setClickCnt ] = useState ( 0 ); useEffect (() => { document . title = `You have clicked it for ${ clickCnt } time(s).` ; }); return < div style = {{ width : props.size , height : props.size , backgroundColor : props.color }} onClick = {() => setClickCnt (( o ) => o + 1 )} /> ; } \u8fd9\u6837\uff0c\u5728\u7528\u6237\u6bcf\u6b21\u70b9\u51fb\u6b63\u65b9\u5f62\u89e6\u53d1\u91cd\u65b0\u6e32\u67d3\uff08\u5373\u51fd\u6570 Square \u91cd\u65b0\u6267\u884c\uff09\u7684\u65f6\u5019\uff0c useEffect Hooks \u63a5\u6536\u7684\u56de\u8c03\u51fd\u6570\u5c31\u4f1a\u6267\u884c\u4e00\u6b21\uff0c\u4ece\u800c\u4fee\u6539\u7f51\u9875\u6807\u9898\u5185\u5bb9\u3002 depList \u7f6e\u7a7a\u5217\u8868 [] \u533a\u522b\u4e8e\u7f6e undefined \uff0c\u7f6e\u7a7a\u5217\u8868\u8868\u793a\u8be5\u526f\u4f5c\u7528\u5e94\u5f53\u4f9d\u8d56\u4e8e\u67d0\u4e9b\u53d8\u91cf\u4f46\u662f\u6211\u4eec\u6ca1\u6709\u63d0\u4f9b\uff0c\u56e0\u800c\u9664\u4e86\u5728\u7b2c\u4e00\u6b21\u6267\u884c\u8be5 Hooks \u65f6\u4e4b\u5916\uff0c\u5176\u4f59\u65f6\u523b\u90fd\u4f1a\u7531\u4e8e depList \u4e3a\u7a7a\u800c\u5224\u5b9a\u4e3a\u4e0d\u6267\u884c\u3002\u6240\u4ee5\uff0c\u5982\u679c depList \u7f6e\u7a7a\u5217\u8868 [] \uff0c\u610f\u5473\u7740\u526f\u4f5c\u7528\u53ea\u4f1a\u5728 \u7b2c\u4e00\u6b21\u6e32\u67d3\u540e\u6267\u884c \u3002 \u53ea\u5728\u7b2c\u4e00\u6b21\u6e32\u67d3\u4e4b\u540e\u6267\u884c\u7684\u526f\u4f5c\u7528\u7b49\u4ef7\u4e8e componentDidMount \u751f\u547d\u5468\u671f\u65b9\u6cd5\u3002 \u4e0d\u592a\u76f4\u89c2\u7684\u89e3\u91ca\uff1f \u53ef\u80fd\u4f1a\u6709\u8bfb\u8005\u5728\u9605\u8bfb\u4e0a\u8ff0\u8bb2\u89e3\u540e\u8fd8\u6709\u56f0\u60d1\uff0c\u4e3a\u4f55 depList \u7f6e undefined \u662f\u8fd9\u822c\u884c\u4e3a\u800c\u7f6e\u7a7a\u5217\u8868\u53c8\u662f\u90a3\u822c\uff0c\u4e43\u81f3\u8ba4\u4e3a\u8bb2\u89e3\u5f88\u53cd\u76f4\u89c9\u3002 \u6211\u4eec\u627f\u8ba4\u4e0a\u8ff0\u8bb2\u89e3\u7684\u76ee\u7684\u4ec5\u4ec5\u662f\u8ba9\u5927\u5bb6\u5728\u4e0d\u5b66\u4e60 Hooks \u6e90\u7801\u7684\u6761\u4ef6\u4e0b\u5c31\u80fd\u4f7f\u7528 Hooks\uff0c\u4f46\u5982\u679c\u60f3\u8981\u7406\u89e3\u5176\u884c\u4e3a\u4e3a\u4f55\u5982\u6b64\uff0c\u53ef\u4ee5\u9605\u8bfb\u8fd9\u4e00\u90e8\u5206\u672b\u5c3e\u6211\u4eec\u63d0\u4f9b\u7684\u7b80\u5316\u7248 Hooks \u5b9e\u73b0\u3002 \u6bd4\u5982\u8bf4\u6211\u4eec\u5e0c\u671b\u5728\u7ec4\u4ef6\u7b2c\u4e00\u6b21\u6e32\u67d3\u7684\u65f6\u5019\u4ece\u7f51\u7edc\u83b7\u53d6\u6570\u636e\uff0c\u5c31\u53ef\u4ee5\u5982\u4e0b\u7f16\u5199\uff1a 1 2 3 4 5 6 7 8 9 // Some other components useEffect (() => { fetchData ( dataURL , /* OTHER PARAMS */ ) . then (( res ) => setData ( res )) . catch (( err ) => { writeLog ( err ); setData ( \"[ERR]\" ); }); }, []); depList \u7f6e\u975e\u7a7a\u5217\u8868 \u4f9d\u8d56\u9879\u975e\u7a7a\u5c31\u610f\u5473\u7740\u8be5\u526f\u4f5c\u7528\u4f9d\u8d56\u4e8e\u8fd9\u4e9b\u4f9d\u8d56\u9879\uff0cReact \u5f15\u64ce\u4f1a\u5728\u6bcf\u6b21\u6e32\u67d3\u7684\u65f6\u5019\u68c0\u67e5\u8fd9\u4e9b\u4f9d\u8d56\u9879\u662f\u5426\u548c\u5148\u524d\u7684\u5b58\u50a8\u4e00\u81f4\uff0c\u82e5\u4e0d\u4e00\u81f4\u5219\u4f1a\u89e6\u53d1\u526f\u4f5c\u7528\uff08\u7b2c\u4e00\u6b21\u6e32\u67d3\u59cb\u7ec8\u6267\u884c\uff09\u3002 \u526f\u4f5c\u7528\u7684\u6e05\u9664\u903b\u8f91 \u00b6 \u81f3\u6b64\u4e3a\u6b62\uff0c\u6211\u4eec\u5df2\u7ecf\u57fa\u672c\u4e0a\u4e86\u89e3\u4e86\u5982\u4f55\u901a\u8fc7 depList \u53c2\u6570\u63a7\u5236\u526f\u4f5c\u7528\u7684\u4ea7\u751f\u65f6\u673a\u3002\u4f46\u662f\u5982\u679c\u6211\u4eec\u89c2\u5bdf\u4e00\u4e0b\u4e0a\u9762\u63d0\u5230\u7684\u7684\u8fd9\u4e00\u6bb5\u793a\u4f8b\u4ee3\u7801\uff1a 1 2 3 useEffect (() => { document . title = `You have clicked it for ${ clickCnt } time(s).` ; }); \u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u91cc\u6bcf\u4e00\u6b21\u6e32\u67d3\u90fd\u4f1a\u7ed9 useEffect \u4f20\u5165\u4e00\u4e2a\u4e0d\u4e00\u6837\u7684\u51fd\u6570\uff08\u56e0\u4e3a clickCnt \u53d1\u751f\u4e86\u6539\u53d8\uff09\uff0c\u8fd9\u5176\u5b9e\u8868\u660e\u4e86 useEffect \u8fd9\u4e2a Hooks \u7684\u4e00\u4e2a\u7279\u5f81\uff0c\u5373\u6bcf\u4e00\u4e2a\u526f\u4f5c\u7528\u662f\u5c5e\u4e8e\u6bcf\u4e00\u6b21\u6e32\u67d3\u7684\u3002\u8fd9\u662f\u548c\u751f\u547d\u5468\u671f\u65b9\u6cd5\u5f88\u4e0d\u4e00\u6837\u7684\u5730\u65b9\uff0c\u56e0\u4e3a\u751f\u547d\u5468\u671f\u662f\u5c5e\u4e8e\u4e00\u4e2a\u7ec4\u4ef6\u7684\uff0c\u800c\u4e0d\u662f\u7279\u5b9a\u7684\u6bcf\u4e00\u6b21\u6e32\u67d3\u3002 \u4f46\u662f\u6211\u4eec\u8ba4\u4e3a\u5c06\u526f\u4f5c\u7528\u7ed1\u5b9a\u5230\u6bcf\u4e00\u6b21\u6e32\u67d3\u53ef\u80fd\u662f\u66f4\u597d\u7684\u9009\u62e9\uff0c\u539f\u56e0\u5728\u4e8e\u526f\u4f5c\u7528\u7684\u6e05\u9664\u903b\u8f91\u3002 \u6211\u4eec\u5148\u524d\u63d0\u5230\u8fc7\uff0c\u5982\u679c\u9700\u8981\u7ed9\u7ec4\u4ef6\u7ed1\u5b9a\u8ba1\u65f6\u5668\u3001\u4e8b\u4ef6\u76d1\u542c\u5668\u7b49\u8017\u8d39\u8d44\u6e90\u7684\u5bf9\u8c61\uff0c\u5c31\u9700\u8981\u5728\u7ec4\u4ef6\u6302\u8f7d\u540e\u5206\u914d\u8d44\u6e90\uff0c\u5728\u7ec4\u4ef6\u5378\u8f7d\u524d\u91ca\u653e\u8d44\u6e90\u3002\u5982\u679c\u9700\u8981\u5206\u914d\u7684\u662f\u7c7b\u4f3c\u8ba1\u65f6\u5668\u8fd9\u7c7b\u5728\u6574\u4e2a\u7ec4\u4ef6\u751f\u547d\u5468\u671f\u4e2d\u90fd\u4e0d\u4f1a\u53d8\u5316\u7684\u5bf9\u8c61\uff0c\u5219\u5c06\u521b\u5efa\u548c\u9500\u6bc1\u8ba1\u65f6\u5668\u7ed1\u5b9a\u5230\u4e00\u4e2a\u7ec4\u4ef6\u4e0a\u548c\u7ed1\u5b9a\u5230\u5177\u4f53\u7684\u67d0\u6b21\u6e32\u67d3\u4e0a\u5747\u53ef\u4ee5\u3002 \u4f46\u662f\u8003\u8651\u4e8b\u4ef6\u76d1\u542c\u5668\uff0c\u4e8b\u4ef6\u76d1\u542c\u5668\u76d1\u542c\u7684\u5bf9\u8c61\u53ef\u80fd\u4f1a\u5728\u7ec4\u4ef6\u66f4\u65b0\u7684\u65f6\u5019\u53d1\u751f\u53d8\u5316\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c06\u521b\u5efa\u548c\u9500\u6bc1\u76d1\u542c\u5668\u7ed1\u5b9a\u5230\u7ec4\u4ef6\u4e0a\u5c31\u4e0d\u6b63\u786e\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4ec5\u4ec5\u901a\u8fc7 componentDidMount \u548c componentWillUnmount \u751f\u547d\u5468\u671f\u65b9\u6cd5\u5e76\u4e0d\u80fd\u5b8c\u6210\u4e8b\u4ef6\u76d1\u542c\u5668\u5bf9\u8c61\u7684\u7ba1\u7406\uff0c\u8fd8\u9700\u8981\u518d\u5728 componentDidUpdate \u65b9\u6cd5\u5185\u5b9e\u73b0\u56de\u6536\u65e7\u76d1\u542c\u5668\u548c\u5206\u914d\u65b0\u76d1\u542c\u5668\u7684\u903b\u8f91\u3002 \u8fd9\u4e2a\u65f6\u5019\u663e\u7136\u5c06\u4e8b\u4ef6\u76d1\u542c\u5668\u7684\u7ba1\u7406\u548c\u5177\u4f53\u7684\u67d0\u4e00\u6b21\u6e32\u67d3\u7ed1\u5b9a\u662f\u66f4\u4e3a\u5408\u7406\u7684\uff0c\u903b\u8f91\u4e5f\u66f4\u4e3a\u7b80\u6d01\u3002\u5728\u8fd9\u6837\u7684\u6761\u4ef6\u4e0b\uff0c\u76d1\u542c\u5668\u7684\u7ba1\u7406\u903b\u8f91\u5c31\u662f\uff0c\u6bcf\u4e00\u6b21\u6e32\u67d3\u540e\uff0c\u56de\u6536\u65e7\u76d1\u542c\u5668\u5e76\u5206\u914d\u65b0\u76d1\u542c\u5668\u3002 \u6211\u4eec\u5728 useEffect Hooks \u5185\u89c4\u5b9a\u526f\u4f5c\u7528\u6e05\u9664\u903b\u8f91\u7684\u65b9\u6cd5\u4e3a\u5728 callback \u5185\u8fd4\u56de\u4e00\u4e2a\u51fd\u6570\uff0c\u5728\u8fd4\u56de\u7684\u51fd\u6570\u5185\u89c4\u5b9a\u526f\u4f5c\u7528\u6e05\u9664\u65b9\u5f0f\u3002 \u6bd4\u5982\u8bf4\u8003\u8651\u4e0b\u8ff0\u5e26\u6709\u8ba1\u65f6\u5668\uff0c\u5b9a\u65f6\u53d8\u8272\u7684 Square \uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 interface SquareProps { readonly size : number ; readonly color : string ; } interface SquareStates { readonly color : string ; } class Square extends React . Component < SquareProps , SquareStates > { timer : any ; constructor ( props : SquareProps ) { super ( props ); this . state = { color : props.color } } switchColor () : void { this . setState (( prev : SquareStates ) => ({ ... prev , color : prev.color === \"red\" ? \"blue\" : \"red\" , })); } componentDidMount () : void { this . timer = setInterval (() => this . switchColor (), 1000 ); } componentWillUnmount () : void { clearInterval ( this . timer ); } render () : ReactElement { return < div style = {{ width : this.props.size , height : this.props.size , backgroundColor : this.state.color }} /> ; } } \u53ef\u4ee5\u6539\u5199\u4e3a\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 interface SquareProps { readonly size : number ; readonly color : string ; } const Square = ( props : SquareProps ) : ReactElement => { const [ color , setColor ] = useState ( props . color ); let timer : any ; const switchColor = () => { setColor (( prev : string ) => prev === \"red\" ? \"blue\" : \"red\" ); }; useEffect (() => { timer = setInterval ( switchColor , 1000 ); return () => clearInterval ( timer ); }, []); return < div style = {{ width : props.size , height : props.size , backgroundColor : color }} /> ; } \u8fd9\u91cc\u6211\u4eec\u5728\u4f5c\u4e3a useEffect \u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u7684\u56de\u8c03\u51fd\u6570\u4e2d\u8fd4\u56de\u4e86\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u5176\u89c4\u5b9a\u4e86\u6e05\u9664\u8ba1\u65f6\u5668\u7684\u903b\u8f91\u3002 \u4ec5\u4f9b\u53c2\u8003\u7684\u5199\u6cd5 \u5982\u679c\u4f60\u4f7f\u7528\u4e86\u4e0a\u8ff0\u5199\u6cd5\uff0c\u53ef\u80fd\u4f1a\u5f97\u5230\u8fd9\u6837\u7684\u8b66\u544a\uff1a \u8fd9\u4e2a\u8b66\u544a\u544a\u8bc9\u6211\u4eec\uff0c timer \u4f5c\u4e3a\u51fd\u6570\u5185\u90e8\u53d8\u91cf\uff0c\u4f1a\u968f\u7740\u6e32\u67d3\u7ed3\u675f\uff08\u51fd\u6570\u6267\u884c\u5b8c\u6bd5\uff09\u800c\u6d88\u5931\uff0c\u5982\u679c\u9700\u8981\u5c06\u5176\u6301\u4e45\u5316\uff0c\u9700\u8981\u4f7f\u7528\u53e6\u5916\u4e00\u4e2a useRef Hooks\u3002 \u8fd9\u5176\u5b9e\u5c31\u662f\u51fd\u6570\u7ec4\u4ef6\u7684\u5c40\u9650\u6240\u5728\uff0c\u7531\u4e8e\u51fd\u6570\u7684\u751f\u547d\u5468\u671f\u4ec5\u80fd\u7ef4\u6301\u5728\u4e00\u6b21\u6e32\u67d3\u4e2d\uff0c\u6240\u4ee5\u5982\u679c\u6d89\u53ca\u5230\u9700\u8981\u6784\u9020\u548c\u7ec4\u4ef6\u751f\u547d\u5468\u671f\u4e00\u822c\u957f\u7684\u53d8\u91cf\uff0c\u5c31\u4e0d\u5f97\u4e0d\u4f7f\u7528\u5404\u79cd Hooks \u7ef4\u62a4\uff0c\u6bd4\u5982\u7ec4\u4ef6\u7684\u5404\u79cd\u72b6\u6001\uff0c\u6bd4\u5982\u8fd9\u91cc\u7684\u8ba1\u65f6\u5668\u3002 useRef Hooks \u4f1a\u6784\u5efa\u4e00\u4e2a\u548c\u7ec4\u4ef6\u751f\u547d\u5468\u671f\u4e00\u822c\u957f\u7684\u53d8\u91cf\uff0c\u5176\u521d\u59cb\u503c\u4e3a useRef \u63a5\u53d7\u7684\u53c2\u6570\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8be5 Hooks \u8fd4\u56de\u53d8\u91cf\u7684 .current \u5c5e\u6027\u83b7\u53d6\u5230\u5b9e\u9645\u7684\u53d8\u91cf\u503c\u3002\u6240\u4ee5\u8bf4\uff0c\u4e0a\u8ff0\u4ee3\u7801\u7684\u6b63\u786e\u7f16\u5199\u65b9\u5f0f\u5e94\u8be5\u4e3a\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 interface SquareProps { readonly size : number ; readonly color : string ; } const Square = ( props : SquareProps ) : ReactElement => { const [ color , setColor ] = useState ( props . color ); const timerRef = useRef < undefined | NodeJS . Timer > ( undefined ); const switchColor = () => { setColor (( prev : string ) => prev === \"red\" ? \"blue\" : \"red\" ); }; useEffect (() => { timerRef . current = setInterval ( switchColor , 1000 ); return () => { if ( timerRef . current !== undefined ) clearInterval ( timerRef . current ); } }, []); return < div style = {{ width : props.size , height : props.size , backgroundColor : color }} /> ; } useEffect Hooks \u7684\u5927\u81f4\u539f\u7406 useEffect \u91c7\u7528\u4e86\u548c useState \u7c7b\u4f3c\u7684\u8bbe\u8ba1\u601d\u8def\uff0c\u53ea\u4e0d\u8fc7\u5176\u5728\u5168\u5c40\u6570\u7ec4\u5185\u5b58\u653e\u7684\u662f\u6bcf\u4e00\u4e2a\u526f\u4f5c\u7528\u7684\u4f9d\u8d56\u5217\u8868\u3002\u6bcf\u6b21\u6267\u884c useEffect \u7684\u65f6\u5019\u90fd\u4f1a\u67e5\u627e\u4f9d\u8d56\u5217\u8868\u6765\u786e\u5b9a\u662f\u5426\u9700\u8981\u6267\u884c\u526f\u4f5c\u7528\u3002 \u5176\u53ef\u80fd\u7684\u5b9e\u73b0\u4e3a\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 let effectDeps : any [][] = []; let cursor : number = 0 ; const useEffect = ( callback : () => void , depList : any []) : void => { if ( effectDeps [ cursor ] === undefined ) { effectDeps [ cursor ] = depList ; cursor += 1 ; callback (); return ; } const depsChanged = effectDeps [ cursor ] . some (( dep : any , ind : number ) => dep !== depList [ ind ]); if ( depsChanged ) { callback (); effectDeps [ cursor ] = depList ; } cursor += 1 ; } \u8fd9\u6837\u5b9e\u9645\u4e0a\u5c31\u89e3\u91ca\u4e86\u4e3a\u4f55 depList \u7f6e undefined \u65f6\u6bcf\u6b21\u6e32\u67d3\u90fd\u4f1a\u6267\u884c\u526f\u4f5c\u7528\uff0c\u8fd9\u662f\u56e0\u4e3a effectDeps \u6570\u7ec4\u5185\u4e00\u76f4\u4fdd\u5b58\u7684\u662f undefined \uff0c\u6240\u4ee5 useEffect \u5728\u7b2c\u4e00\u4e2a if \u5904\u5c31\u4f1a\u4e00\u76f4\u5224\u771f\uff0c\u4ece\u800c\u6bcf\u6b21\u90fd\u4f1a\u6267\u884c\u526f\u4f5c\u7528\u3002 \u540c\u6837\u4e5f\u80fd\u89e3\u91ca\u4e3a\u4f55 depList \u7f6e\u7a7a\u5217\u8868\u4ec5\u4f1a\u5728\u7b2c\u4e00\u6b21\u6e32\u67d3\u6267\u884c\u526f\u4f5c\u7528\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002 Hooks \u7684\u4f7f\u7528\u89c4\u8303 \u00b6 Hooks \u7684\u4f7f\u7528\u89c4\u8303\u5927\u81f4\u53ef\u4ee5\u5f52\u7ed3\u4e3a\u4e24\u6761\uff1a \u5fc5\u987b\u5728\u7ec4\u4ef6\u6700\u9876\u90e8\u4f7f\u7528 Hooks\uff0c\u4e14 Hooks \u4e0d\u80fd\u4f4d\u4e8e\u6761\u4ef6\u3001\u5faa\u73af\u3001\u5b50\u51fd\u6570\u4e4b\u4e2d \u53ea\u80fd\u5728 React \u51fd\u6570\u7ec4\u4ef6\u4e2d\u4f7f\u7528 Hooks \u53ea\u8981\u9075\u5faa\u8fd9\u4e24\u6761\u5373\u53ef\u4fdd\u8bc1 Hooks \u7684\u6b63\u786e\u4f7f\u7528\u3002 \u4e3a\u4ec0\u4e48\u662f\u8fd9\u4e24\u6761\u89c4\u5219 \u5982\u679c\u4f60\u5df2\u7ecf\u9605\u8bfb\u8fc7 useState \u548c useEffect \u7684\u7b80\u8981\u5b9e\u73b0\uff0c\u5c31\u4f1a\u53d1\u73b0\u8fd9\u4e24\u4e2a Hooks \u90fd\u4f9d\u8d56\u4e8e\u4e00\u4e2a\u91cd\u8981\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u5373 cursor \u3002\u8fd9\u4e2a\u53d8\u91cf\u7ef4\u62a4\u4e86\u5f53\u524d Hooks \u6307\u5411\u7684\u72b6\u6001\uff08\u6216\u4f9d\u8d56\u9879\u5217\u8868\uff09\u3002\u800c cursor \u7684\u53d8\u5316\u4ec5\u4ec5\u662f\u81ea\u589e\uff0c\u8fd9\u610f\u5473\u7740\uff0c\u5982\u679c\u5404\u4e2a Hooks \u7684\u6267\u884c\u5e8f\u5217\u53d1\u751f\u53d8\u5316\uff0c\u5c31\u4f1a\u5bfc\u81f4 cursor \u504f\u79fb\uff0c\u4ece\u800c\u5bfc\u81f4 Hooks \u65e0\u6cd5\u6b63\u786e\u89e3\u6790\u72b6\u6001\uff08\u6216\u4f9d\u8d56\u9879\u5217\u8868\uff09\u3002 \u6bd4\u5982\u8bf4\u6211\u4eec\u5728\u67d0\u4e00\u4e2a\u7ec4\u4ef6\u9876\u90e8\u6309\u987a\u5e8f\u8c03\u7528\u4e0b\u8ff0 Hooks\uff1a 1 2 3 useState ( 1 ); // #1 useState ( 2 ); // #2 useState ( 3 ); // #3 \u8fd9\u91cc cursor \u5c31\u4f1a\u9012\u589e\u4e09\u6b21\uff0c\u5c06\u4e09\u4e2a\u72b6\u6001\u8fde\u7eed\u8bb0\u5f55\u5728\u5168\u5c40\u6570\u7ec4\u4e2d\u3002 \u7136\u800c\u5982\u679c\u6211\u4eec\u5c06\u67d0\u4e00\u4e2a Hooks \u653e\u7f6e\u5728\u6761\u4ef6\u8bed\u53e5\u4e2d\uff1a 1 2 3 4 5 useState ( 1 ); // #1 if ( something ) { useState ( 2 ); // #2 } useState ( 3 ); // #3 \u5c31\u53ef\u80fd\u5bfc\u81f4\u7b2c\u4e8c\u4e2a Hooks \u4e0d\u88ab\u6267\u884c\uff0c\u4ece\u800c\u5bfc\u81f4 cursor \u6ca1\u6709\u9012\u589e\u3002\u6b64\u65f6\u6267\u884c\u7b2c\u4e09\u4e2a Hooks \u7684\u65f6\u5019\uff0c cursor \u6307\u5411\u4e86\u7b2c\u4e8c\u4e2a\u72b6\u6001\uff0c\u8fd9\u5c31\u5bfc\u81f4\u4e86\u9519\u8bef\u3002","title":"\u51fd\u6570\u7ec4\u4ef6"},{"location":"frontend/react/function-component/#_1","text":"\u6211\u4eec\u901a\u8fc7\u7c7b\u7ec4\u4ef6\u7b80\u5355\u4ecb\u7ecd\u4e86 React \u7684\u6838\u5fc3\u6982\u5ff5\uff0c\u4f46\u662f\u7c7b\u7ec4\u4ef6\u6709\u4e0b\u8ff0\u6bd4\u8f83\u660e\u663e\u7684\u95ee\u9898\uff1a \u7f16\u7801\u7e41\u7410\uff0c\u5c24\u5176\u5728\u4f7f\u7528 TypeScript \u8bed\u8a00\u7684\u65f6\u5019 \u53ef\u80fd\u4f1a\u51fa\u73b0 this \u7684\u6307\u5411\u4e0d\u660e\u786e\u7684\u95ee\u9898 JavaScript \u8bed\u8a00\u7684\u7c7b\u8bed\u6cd5\u4ec5\u4ec5\u662f\u8bed\u6cd5\u7cd6\uff0c\u5e76\u975e\u662f\u5b8c\u5168\u7b26\u5408\u9762\u5411\u5bf9\u8c61\u601d\u8def\u7684 \u6240\u4ee5\u5728\u65b0\u7248\u672c\u7684 React \u6846\u67b6\u4e2d\uff0c\u6211\u4eec\u66f4\u4e3a\u63a8\u8350\u5927\u5bb6\u7f16\u5199\u51fd\u6570\u7ec4\u4ef6\u3002 \u51fd\u6570\u7ec4\u4ef6\u7684\u57fa\u672c\u601d\u7ef4\u662f\u5c06\u6574\u4e2a\u7ec4\u4ef6\u601d\u8003\u4e3a\u51fd\u6570\uff0c\u51fd\u6570\u7684\u53c2\u6570\u4e3a\u7ec4\u4ef6\u7684\u5c5e\u6027\uff0c\u800c\u8fd4\u56de\u503c\u5c31\u662f\u7ec4\u4ef6\u7684\u663e\u793a\u65b9\u5f0f\uff08\u5373\u7c7b\u7ec4\u4ef6\u7684 render \u51fd\u6570\u8fd4\u56de\u503c\uff09\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5c06\u7ec4\u4ef6\u89c6\u4f5c\u4e00\u79cd\u63a5\u6536\u5c5e\u6027\uff0c\u83b7\u53d6\u7ec4\u4ef6\u6e32\u67d3\u6307\u793a\u7684\u6570\u636e\u6d41\u7ba1\u9053\u66f4\u4e3a\u53ef\u884c\u3002\u8fd9\u79cd\u601d\u8def\u4e0b\u5f00\u53d1\u8005\u53ef\u4ee5\u7b80\u5355\u5730\u7ec4\u5408\u5404\u79cd\u7ba1\u9053\u6765\u5b9e\u73b0 Web \u5e94\u7528\u3002 \u6bd4\u5982\u8bf4\u4e0b\u8ff0\u6ca1\u6709\u8bbe\u7f6e\u7ec4\u4ef6\u72b6\u6001\u7684\u3001\u6ca1\u6709\u4f7f\u7528\u751f\u547d\u5468\u671f\u65b9\u6cd5\u7684\u6b63\u65b9\u5f62\u7ec4\u4ef6\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 interface SquareProps { readonly size : number ; readonly color : string ; } class Square extends React . Component < SquareProps > { render () : ReactElement { return < div style = {{ width : this.props.size , height : this.props.size , backgroundColor : this.props.color }} /> ; } } \u5c31\u53ef\u4ee5\u8f6c\u5199\u4e3a\u4e0b\u8ff0\u51fd\u6570\u7ec4\u4ef6\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 interface SquareProps { readonly size : number ; readonly color : string ; } const Square = ( props : SquareProps ) : ReactElement => { return < div style = {{ width : props.size , height : props.size , backgroundColor : props.color }} /> ; } \u8fd9\u6837\u7684\u8f6c\u5199\u5e76\u4e0d\u6539\u53d8\u7ec4\u4ef6\u7684\u672c\u8d28\uff0c\u4f7f\u7528\u8be5\u7ec4\u4ef6\u7684\u65b9\u5f0f\u4e5f\u548c\u7c7b\u7ec4\u4ef6\u4e00\u81f4\u3002","title":"\u51fd\u6570\u7ec4\u4ef6"},{"location":"frontend/react/function-component/#hooks","text":"\u5728\u8f6c\u5199\u4e0a\u8ff0\u7c7b\u7ec4\u4ef6\u7684\u65f6\u5019\uff0c\u6211\u4eec\u6ce8\u610f\u5230\u5982\u679c\u7ec4\u4ef6\u5177\u6709\u72b6\u6001\u6216\u8005\u4f7f\u7528\u4e86\u751f\u547d\u5468\u671f\u65b9\u6cd5\uff0c\u5219\u65e0\u6cd5\u8f6c\u5199\u3002\u8fd9\u91cc\uff0cReact \u63d0\u4f9b\u7684\u89e3\u51b3\u65b9\u5f0f\u662f\u4f7f\u7528 Hooks\u3002","title":"Hooks \u7b80\u8981\u4ecb\u7ecd"},{"location":"frontend/react/function-component/#_2","text":"\u6211\u4eec\u9996\u5148\u4ecb\u7ecd\u7ba1\u7406\u72b6\u6001\u9700\u8981\u4f7f\u7528\u7684 Hooks\uff0c\u5373 useState \u51fd\u6570\u3002\u6bd4\u5982\u8bf4\u6211\u4eec\u4f9d\u7136\u662f\u5c06\u6b63\u65b9\u5f62\u7684\u989c\u8272\u53d8\u4e3a\u5176\u72b6\u6001\uff0c\u7531\u7ec4\u4ef6\u81ea\u8eab\u7ba1\u7406\uff0c\u5176\u4ee3\u7801\u5927\u81f4\u4e3a\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 interface SquareProps { readonly size : number ; readonly color : string ; } const Square = ( props : SquareProps ) : ReactElement => { const [ color , setColor ] = useState ( props . color ); const switchColor = () => { setColor (( prev : string ) => prev === \"red\" ? \"blue\" : \"red\" ); }; return < div style = {{ width : props.size , height : props.size , backgroundColor : color }} onClick = { switchColor } /> ; } \u8fd9\u91cc\u9ad8\u4eae\u7684\u4e09\u884c\u8868\u73b0\u51fa\u4f7f\u7528 Hooks \u7684\u65f6\u5019\u9700\u8981\u4fee\u6539\u7684\u5730\u65b9\u3002\u9996\u5148\u6ce8\u610f\u7b2c 7 \u884c\uff0c\u8fd9\u91cc\u4f7f\u7528\u4e86 useState \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u63a5\u53d7\u7684\u662f\u9700\u8981\u8bbe\u5b9a\u7684\u72b6\u6001\u7684\u521d\u59cb\u503c\uff0c\u8fd4\u56de\u7684\u662f\u8be5\u72b6\u6001\u548c\u7528\u4e8e\u8bbe\u5b9a\u8be5\u72b6\u6001\u7684\u51fd\u6570\u3002\u8fd9\u91cc\u6211\u4eec\u8bbe\u5b9a\u7684\u72b6\u6001\u4e3a color \uff0c\u521d\u59cb\u503c\u4e3a props.color \uff0c\u800c setColor \u548c\u7c7b\u7ec4\u4ef6\u4e4b\u4e2d\u7684 setState \u7c7b\u4f3c\uff0c\u7528\u4e8e\u4fee\u6539\u72b6\u6001\u3002 \u8fd9\u91cc\u6ce8\u610f\u7b2c 10 \u884c\u5982\u4f55\u5e94\u7528 setColor \u51fd\u6570\u3002\u8be5\u51fd\u6570\u548c setState \u4e00\u6837\uff0c\u53ef\u4ee5\u63a5\u6536\u65b0\u72b6\u6001\u4f5c\u4e3a\u53c2\u6570\uff0c\u4e5f\u53ef\u4ee5\u63a5\u53d7\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u3002\u540c\u6837\u7684\uff0c\u8be5\u51fd\u6570\u4e5f\u662f\u4e00\u4e2a\u5f02\u6b65\u51fd\u6570\uff0c\u4e5f\u4f1a\u89e6\u53d1\u7ec4\u4ef6\u91cd\u65b0\u6e32\u67d3\u3002 useState Hooks \u7684\u5927\u81f4\u539f\u7406 \u5728\u51fd\u6570\u7ec4\u4ef6\u6761\u4ef6\u4e0b\uff0c\u7ec4\u4ef6\u7684\u72b6\u6001\u662f\u4ea4\u7531\u5168\u5c40\u53d8\u91cf\u7ef4\u62a4\uff0c\u4e5f\u5c31\u662f\u8bf4\u6240\u6709\u7ec4\u4ef6\u7684\u72b6\u6001\u5c06\u4f1a\u4fdd\u5b58\u5728\u4e00\u4e2a\u5168\u5c40\u7684\u6570\u7ec4\u4e4b\u4e2d\u3002\u800c\u6211\u4eec\u5728\u4f7f\u7528 useState \u521b\u5efa\u65b0\u7684\u72b6\u6001\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u5728\u8fd9\u4e2a\u6570\u7ec4\u7684\u5c3e\u90e8\u65b0\u5efa\u4e00\u4e2a\u5143\u7d20\uff0c\u5c06\u8fd9\u4e2a\u5143\u7d20\u7684\u7d22\u5f15\u5c01\u88c5\u8fdb\u5165\u95ed\u5305\uff0c\u8fd9\u4e2a\u95ed\u5305\u5c31\u662f\u7528\u4e8e\u4fee\u6539\u8fd9\u4e2a\u72b6\u6001\u7684\u51fd\u6570\u3002 \u6bd4\u5982\u8bf4 useState \u7684\u4e00\u79cd\u53ef\u80fd\u7684\u5b9e\u73b0\u4e3a\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 let states : any [] = []; let cursor : number = 0 ; const useState = < T > ( initalState : T ) : [ T , ( arg : T ) => void ] => { let state : T = ( states [ cursor ] ?? initalState ) as T ; const _cursor = cursor ; const setState = ( newState : T ) : void => { states [ _cursor ] = newState ; } cursor += 1 ; return [ state , setState ]; } \u8fd9\u91cc\uff0c\u6570\u7ec4 states \u7ba1\u7406\u4e86\u6240\u6709\u7ec4\u4ef6\u7684\u72b6\u6001\uff0c\u53e6\u5916\u6709\u4e00\u4e2a\u6307\u9488 cursor \u7528\u4e8e\u8bbf\u95ee\u8fd9\u4e2a\u6570\u7ec4\u3002\u5728\u6211\u4eec\u8c03\u7528 useState \u7684\u65f6\u5019\uff0c\u5176\u9996\u5148\u4f1a\u68c0\u6d4b\u76ee\u524d cursor \u6307\u5411\u7684\u4f4d\u7f6e\u662f\u5426\u5df2\u7ecf\u5199\u5165\u4e86\u67d0\u4e2a\u72b6\u6001\uff0c\u5982\u679c\u5df2\u7ecf\u5199\u5165\u5219\u5c06\u5176\u53d6\u51fa\u4f5c\u4e3a\u76ee\u524d\u7684\u72b6\u6001\uff0c\u5426\u5219\u4f1a\u7528\u8be5\u51fd\u6570\u63a5\u53d7\u7684\u521d\u59cb\u503c\u4f5c\u4e3a\u76ee\u524d\u7684\u72b6\u6001\u3002 \u968f\u540e\uff0c\u8be5\u51fd\u6570\u4f1a\u4fdd\u7559\u4e00\u4efd\u5f53\u524d cursor \u7684\u526f\u672c _cursor \uff0c\u5c06\u5176\u5305\u88c5\u5728\u95ed\u5305 setState \u4e2d\uff0c\u800c setState \u7684\u4f5c\u7528\u5c31\u662f\u4fee\u6539 _cursor \u6307\u5411\u7684\u90a3\u4e00\u4e2a\u72b6\u6001\u3002\u6700\u540e\u9012\u589e cursor \uff0c\u5c06\u76ee\u524d\u7684\u72b6\u6001 state \u548c\u7528\u4e8e\u4fee\u6539\u72b6\u6001\u7684\u51fd\u6570 setState \u8fd4\u56de\u5373\u53ef\u3002","title":"\u7ba1\u7406\u7ec4\u4ef6\u72b6\u6001"},{"location":"frontend/react/function-component/#_3","text":"\u7531\u4e8e\u51fd\u6570\u7ec4\u4ef6\u5c06\u7ec4\u4ef6\u770b\u4f5c\u662f\u63a5\u6536\u7ec4\u4ef6\u5c5e\u6027\u4f20\u51fa\u7ec4\u4ef6\u663e\u793a\u65b9\u5f0f\u7684\u6570\u636e\u6d41\u7ba1\u9053\uff0c\u6240\u4ee5\u5176\u4e3b\u8981\u4f5c\u7528\u5c31\u662f\u6e32\u67d3\uff0c\u5373 render \u51fd\u6570\u8d1f\u8d23\u7684\u90e8\u5206\u3002\u90a3\u4e48\u6240\u6709\u751f\u547d\u5468\u671f\u65b9\u6cd5\u89c4\u5b9a\u7684\uff0c\u5728\u7ec4\u4ef6\u6302\u8f7d\u540e\u3001\u5378\u8f7d\u524d\u7684\u884c\u4e3a\uff0c\u5c31\u7edf\u79f0\u4e3a \u526f\u4f5c\u7528 \u3002 \u6211\u4eec\u5148\u7b80\u8981\u4ecb\u7ecd useEffect \u8fd9\u4e2a Hooks\uff0c\u5176\u539f\u578b\u4e3a\uff1a 1 useEffect ( callback , depList ); \u8fd9\u91cc callback \u5c31\u662f\u6211\u4eec\u9700\u8981\u6267\u884c\u7684\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u4e5f\u5c31\u662f\u89c4\u5b9a\u526f\u4f5c\u7528\u7684\u51fd\u6570\u3002\u800c depList \u4e3a\u526f\u4f5c\u7528\u4f9d\u8d56\u9879\u5217\u8868\uff0c\u8868\u793a\u8be5\u526f\u4f5c\u7528\u53d6\u51b3\u4e8e\u54ea\u4e9b\u53d8\u91cf\u3002 \u6240\u8c13\u4f9d\u8d56\u9879\uff0c\u5c31\u662f\u6bcf\u5f53 useEffect \u6267\u884c\u7684\u65f6\u5019\uff0c\u4f1a\u68c0\u6d4b\u6240\u6709\u4f9d\u8d56\u9879\u76f8\u8f83\u4e8e\u4e0a\u4e00\u6b21\u662f\u5426\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u5982\u679c\u53d1\u751f\u53d8\u5316\uff0c\u624d\u4f1a\u6267\u884c callback \u56de\u8c03\u51fd\u6570\u3002 \u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u63a7\u5236 depList \u6765\u63a7\u5236\u526f\u4f5c\u7528\u7684\u6267\u884c\u65f6\u673a\u3002\u4e00\u822c\u800c\u8a00\uff0c depList \u6709\u4e09\u79cd\u5199\u6cd5\u3002","title":"\u7ba1\u7406\u7ec4\u4ef6\u526f\u4f5c\u7528\u2014\u2014\u66ff\u6362\u751f\u547d\u5468\u671f\u65b9\u6cd5"},{"location":"frontend/react/function-component/#deplist","text":"depList \u7f6e undefined \u6b64\u65f6\u76f8\u5f53\u4e8e\u4e0d\u4f20\u5165\u7b2c\u4e8c\u4e2a\u53c2\u6570 depList \u3002\u6b64\u65f6\u8fd9\u4e2a Hooks \u7684\u8bed\u4e49\u53ef\u4ee5\u7406\u89e3\u4e3a\u526f\u4f5c\u7528\u4e0d\u4f9d\u8d56\u4e8e\u4efb\u4f55\u53d8\u91cf\uff0c\u59cb\u7ec8\u4f1a\u88ab\u6267\u884c\u3002\u800c useEffect \u88ab\u8c03\u7528\u7684\u65f6\u673a\u5c31\u662f\u51fd\u6570\u7ec4\u4ef6\u8c03\u7528\u7684\u65f6\u673a\uff0c\u5373\u51fd\u6570\u7ec4\u4ef6\u6e32\u67d3\u7684\u65f6\u5019\u3002\u6240\u4ee5\uff0c\u5982\u679c depList \u7f6e undefined \uff0c\u610f\u5473\u7740\u526f\u4f5c\u7528\u4f1a\u5728 \u6bcf\u4e00\u6b21\u6e32\u67d3\u540e\u6267\u884c \u3002 \u5728\u6bcf\u4e00\u6b21\u6e32\u67d3\u4e4b\u540e\u90fd\u4f1a\u6267\u884c\u7684\u526f\u4f5c\u7528\u7b49\u4ef7\u4e8e componentDidMount \u548c componentDidUpdate \u4e24\u4e2a\u751f\u547d\u5468\u671f\u65b9\u6cd5\u5408\u5e76\u3002 \u8fd9\u7c7b\u526f\u4f5c\u7528\u5f80\u5f80\u662f\u6839\u636e\u7ec4\u4ef6\u66f4\u65b0\u5b8c\u6bd5\u540e\u7684\u65b0\u72b6\u6001\u6765\u624b\u52a8\u8c03\u6574 DOM \u6811\u7ed3\u6784\u3001\u8bb0\u5f55\u65e5\u5fd7\u7b49\u884c\u4e3a\u3002\u6bd4\u5982\u8bf4\u6211\u4eec\u53ef\u4ee5\u5728\u6b63\u65b9\u5f62\u7c7b\u7ec4\u4ef6\u4e0a\u6dfb\u52a0\u4e0b\u8ff0 Hooks\uff0c\u8ba9\u5176\u88ab\u70b9\u51fb\u6b21\u6570\u80fd\u591f\u663e\u793a\u5728\u7f51\u9875\u6807\u9898\u4e0a\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 interface SquareProps { readonly size : number ; readonly color : string ; } const Square = ( props : SquareProps ) : ReactElement => { const [ clickCnt , setClickCnt ] = useState ( 0 ); useEffect (() => { document . title = `You have clicked it for ${ clickCnt } time(s).` ; }); return < div style = {{ width : props.size , height : props.size , backgroundColor : props.color }} onClick = {() => setClickCnt (( o ) => o + 1 )} /> ; } \u8fd9\u6837\uff0c\u5728\u7528\u6237\u6bcf\u6b21\u70b9\u51fb\u6b63\u65b9\u5f62\u89e6\u53d1\u91cd\u65b0\u6e32\u67d3\uff08\u5373\u51fd\u6570 Square \u91cd\u65b0\u6267\u884c\uff09\u7684\u65f6\u5019\uff0c useEffect Hooks \u63a5\u6536\u7684\u56de\u8c03\u51fd\u6570\u5c31\u4f1a\u6267\u884c\u4e00\u6b21\uff0c\u4ece\u800c\u4fee\u6539\u7f51\u9875\u6807\u9898\u5185\u5bb9\u3002 depList \u7f6e\u7a7a\u5217\u8868 [] \u533a\u522b\u4e8e\u7f6e undefined \uff0c\u7f6e\u7a7a\u5217\u8868\u8868\u793a\u8be5\u526f\u4f5c\u7528\u5e94\u5f53\u4f9d\u8d56\u4e8e\u67d0\u4e9b\u53d8\u91cf\u4f46\u662f\u6211\u4eec\u6ca1\u6709\u63d0\u4f9b\uff0c\u56e0\u800c\u9664\u4e86\u5728\u7b2c\u4e00\u6b21\u6267\u884c\u8be5 Hooks \u65f6\u4e4b\u5916\uff0c\u5176\u4f59\u65f6\u523b\u90fd\u4f1a\u7531\u4e8e depList \u4e3a\u7a7a\u800c\u5224\u5b9a\u4e3a\u4e0d\u6267\u884c\u3002\u6240\u4ee5\uff0c\u5982\u679c depList \u7f6e\u7a7a\u5217\u8868 [] \uff0c\u610f\u5473\u7740\u526f\u4f5c\u7528\u53ea\u4f1a\u5728 \u7b2c\u4e00\u6b21\u6e32\u67d3\u540e\u6267\u884c \u3002 \u53ea\u5728\u7b2c\u4e00\u6b21\u6e32\u67d3\u4e4b\u540e\u6267\u884c\u7684\u526f\u4f5c\u7528\u7b49\u4ef7\u4e8e componentDidMount \u751f\u547d\u5468\u671f\u65b9\u6cd5\u3002 \u4e0d\u592a\u76f4\u89c2\u7684\u89e3\u91ca\uff1f \u53ef\u80fd\u4f1a\u6709\u8bfb\u8005\u5728\u9605\u8bfb\u4e0a\u8ff0\u8bb2\u89e3\u540e\u8fd8\u6709\u56f0\u60d1\uff0c\u4e3a\u4f55 depList \u7f6e undefined \u662f\u8fd9\u822c\u884c\u4e3a\u800c\u7f6e\u7a7a\u5217\u8868\u53c8\u662f\u90a3\u822c\uff0c\u4e43\u81f3\u8ba4\u4e3a\u8bb2\u89e3\u5f88\u53cd\u76f4\u89c9\u3002 \u6211\u4eec\u627f\u8ba4\u4e0a\u8ff0\u8bb2\u89e3\u7684\u76ee\u7684\u4ec5\u4ec5\u662f\u8ba9\u5927\u5bb6\u5728\u4e0d\u5b66\u4e60 Hooks \u6e90\u7801\u7684\u6761\u4ef6\u4e0b\u5c31\u80fd\u4f7f\u7528 Hooks\uff0c\u4f46\u5982\u679c\u60f3\u8981\u7406\u89e3\u5176\u884c\u4e3a\u4e3a\u4f55\u5982\u6b64\uff0c\u53ef\u4ee5\u9605\u8bfb\u8fd9\u4e00\u90e8\u5206\u672b\u5c3e\u6211\u4eec\u63d0\u4f9b\u7684\u7b80\u5316\u7248 Hooks \u5b9e\u73b0\u3002 \u6bd4\u5982\u8bf4\u6211\u4eec\u5e0c\u671b\u5728\u7ec4\u4ef6\u7b2c\u4e00\u6b21\u6e32\u67d3\u7684\u65f6\u5019\u4ece\u7f51\u7edc\u83b7\u53d6\u6570\u636e\uff0c\u5c31\u53ef\u4ee5\u5982\u4e0b\u7f16\u5199\uff1a 1 2 3 4 5 6 7 8 9 // Some other components useEffect (() => { fetchData ( dataURL , /* OTHER PARAMS */ ) . then (( res ) => setData ( res )) . catch (( err ) => { writeLog ( err ); setData ( \"[ERR]\" ); }); }, []); depList \u7f6e\u975e\u7a7a\u5217\u8868 \u4f9d\u8d56\u9879\u975e\u7a7a\u5c31\u610f\u5473\u7740\u8be5\u526f\u4f5c\u7528\u4f9d\u8d56\u4e8e\u8fd9\u4e9b\u4f9d\u8d56\u9879\uff0cReact \u5f15\u64ce\u4f1a\u5728\u6bcf\u6b21\u6e32\u67d3\u7684\u65f6\u5019\u68c0\u67e5\u8fd9\u4e9b\u4f9d\u8d56\u9879\u662f\u5426\u548c\u5148\u524d\u7684\u5b58\u50a8\u4e00\u81f4\uff0c\u82e5\u4e0d\u4e00\u81f4\u5219\u4f1a\u89e6\u53d1\u526f\u4f5c\u7528\uff08\u7b2c\u4e00\u6b21\u6e32\u67d3\u59cb\u7ec8\u6267\u884c\uff09\u3002","title":"\u901a\u8fc7 depList \u63a7\u5236\u526f\u4f5c\u7528\u53d1\u751f\u65f6\u673a"},{"location":"frontend/react/function-component/#_4","text":"\u81f3\u6b64\u4e3a\u6b62\uff0c\u6211\u4eec\u5df2\u7ecf\u57fa\u672c\u4e0a\u4e86\u89e3\u4e86\u5982\u4f55\u901a\u8fc7 depList \u53c2\u6570\u63a7\u5236\u526f\u4f5c\u7528\u7684\u4ea7\u751f\u65f6\u673a\u3002\u4f46\u662f\u5982\u679c\u6211\u4eec\u89c2\u5bdf\u4e00\u4e0b\u4e0a\u9762\u63d0\u5230\u7684\u7684\u8fd9\u4e00\u6bb5\u793a\u4f8b\u4ee3\u7801\uff1a 1 2 3 useEffect (() => { document . title = `You have clicked it for ${ clickCnt } time(s).` ; }); \u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u91cc\u6bcf\u4e00\u6b21\u6e32\u67d3\u90fd\u4f1a\u7ed9 useEffect \u4f20\u5165\u4e00\u4e2a\u4e0d\u4e00\u6837\u7684\u51fd\u6570\uff08\u56e0\u4e3a clickCnt \u53d1\u751f\u4e86\u6539\u53d8\uff09\uff0c\u8fd9\u5176\u5b9e\u8868\u660e\u4e86 useEffect \u8fd9\u4e2a Hooks \u7684\u4e00\u4e2a\u7279\u5f81\uff0c\u5373\u6bcf\u4e00\u4e2a\u526f\u4f5c\u7528\u662f\u5c5e\u4e8e\u6bcf\u4e00\u6b21\u6e32\u67d3\u7684\u3002\u8fd9\u662f\u548c\u751f\u547d\u5468\u671f\u65b9\u6cd5\u5f88\u4e0d\u4e00\u6837\u7684\u5730\u65b9\uff0c\u56e0\u4e3a\u751f\u547d\u5468\u671f\u662f\u5c5e\u4e8e\u4e00\u4e2a\u7ec4\u4ef6\u7684\uff0c\u800c\u4e0d\u662f\u7279\u5b9a\u7684\u6bcf\u4e00\u6b21\u6e32\u67d3\u3002 \u4f46\u662f\u6211\u4eec\u8ba4\u4e3a\u5c06\u526f\u4f5c\u7528\u7ed1\u5b9a\u5230\u6bcf\u4e00\u6b21\u6e32\u67d3\u53ef\u80fd\u662f\u66f4\u597d\u7684\u9009\u62e9\uff0c\u539f\u56e0\u5728\u4e8e\u526f\u4f5c\u7528\u7684\u6e05\u9664\u903b\u8f91\u3002 \u6211\u4eec\u5148\u524d\u63d0\u5230\u8fc7\uff0c\u5982\u679c\u9700\u8981\u7ed9\u7ec4\u4ef6\u7ed1\u5b9a\u8ba1\u65f6\u5668\u3001\u4e8b\u4ef6\u76d1\u542c\u5668\u7b49\u8017\u8d39\u8d44\u6e90\u7684\u5bf9\u8c61\uff0c\u5c31\u9700\u8981\u5728\u7ec4\u4ef6\u6302\u8f7d\u540e\u5206\u914d\u8d44\u6e90\uff0c\u5728\u7ec4\u4ef6\u5378\u8f7d\u524d\u91ca\u653e\u8d44\u6e90\u3002\u5982\u679c\u9700\u8981\u5206\u914d\u7684\u662f\u7c7b\u4f3c\u8ba1\u65f6\u5668\u8fd9\u7c7b\u5728\u6574\u4e2a\u7ec4\u4ef6\u751f\u547d\u5468\u671f\u4e2d\u90fd\u4e0d\u4f1a\u53d8\u5316\u7684\u5bf9\u8c61\uff0c\u5219\u5c06\u521b\u5efa\u548c\u9500\u6bc1\u8ba1\u65f6\u5668\u7ed1\u5b9a\u5230\u4e00\u4e2a\u7ec4\u4ef6\u4e0a\u548c\u7ed1\u5b9a\u5230\u5177\u4f53\u7684\u67d0\u6b21\u6e32\u67d3\u4e0a\u5747\u53ef\u4ee5\u3002 \u4f46\u662f\u8003\u8651\u4e8b\u4ef6\u76d1\u542c\u5668\uff0c\u4e8b\u4ef6\u76d1\u542c\u5668\u76d1\u542c\u7684\u5bf9\u8c61\u53ef\u80fd\u4f1a\u5728\u7ec4\u4ef6\u66f4\u65b0\u7684\u65f6\u5019\u53d1\u751f\u53d8\u5316\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c06\u521b\u5efa\u548c\u9500\u6bc1\u76d1\u542c\u5668\u7ed1\u5b9a\u5230\u7ec4\u4ef6\u4e0a\u5c31\u4e0d\u6b63\u786e\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4ec5\u4ec5\u901a\u8fc7 componentDidMount \u548c componentWillUnmount \u751f\u547d\u5468\u671f\u65b9\u6cd5\u5e76\u4e0d\u80fd\u5b8c\u6210\u4e8b\u4ef6\u76d1\u542c\u5668\u5bf9\u8c61\u7684\u7ba1\u7406\uff0c\u8fd8\u9700\u8981\u518d\u5728 componentDidUpdate \u65b9\u6cd5\u5185\u5b9e\u73b0\u56de\u6536\u65e7\u76d1\u542c\u5668\u548c\u5206\u914d\u65b0\u76d1\u542c\u5668\u7684\u903b\u8f91\u3002 \u8fd9\u4e2a\u65f6\u5019\u663e\u7136\u5c06\u4e8b\u4ef6\u76d1\u542c\u5668\u7684\u7ba1\u7406\u548c\u5177\u4f53\u7684\u67d0\u4e00\u6b21\u6e32\u67d3\u7ed1\u5b9a\u662f\u66f4\u4e3a\u5408\u7406\u7684\uff0c\u903b\u8f91\u4e5f\u66f4\u4e3a\u7b80\u6d01\u3002\u5728\u8fd9\u6837\u7684\u6761\u4ef6\u4e0b\uff0c\u76d1\u542c\u5668\u7684\u7ba1\u7406\u903b\u8f91\u5c31\u662f\uff0c\u6bcf\u4e00\u6b21\u6e32\u67d3\u540e\uff0c\u56de\u6536\u65e7\u76d1\u542c\u5668\u5e76\u5206\u914d\u65b0\u76d1\u542c\u5668\u3002 \u6211\u4eec\u5728 useEffect Hooks \u5185\u89c4\u5b9a\u526f\u4f5c\u7528\u6e05\u9664\u903b\u8f91\u7684\u65b9\u6cd5\u4e3a\u5728 callback \u5185\u8fd4\u56de\u4e00\u4e2a\u51fd\u6570\uff0c\u5728\u8fd4\u56de\u7684\u51fd\u6570\u5185\u89c4\u5b9a\u526f\u4f5c\u7528\u6e05\u9664\u65b9\u5f0f\u3002 \u6bd4\u5982\u8bf4\u8003\u8651\u4e0b\u8ff0\u5e26\u6709\u8ba1\u65f6\u5668\uff0c\u5b9a\u65f6\u53d8\u8272\u7684 Square \uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 interface SquareProps { readonly size : number ; readonly color : string ; } interface SquareStates { readonly color : string ; } class Square extends React . Component < SquareProps , SquareStates > { timer : any ; constructor ( props : SquareProps ) { super ( props ); this . state = { color : props.color } } switchColor () : void { this . setState (( prev : SquareStates ) => ({ ... prev , color : prev.color === \"red\" ? \"blue\" : \"red\" , })); } componentDidMount () : void { this . timer = setInterval (() => this . switchColor (), 1000 ); } componentWillUnmount () : void { clearInterval ( this . timer ); } render () : ReactElement { return < div style = {{ width : this.props.size , height : this.props.size , backgroundColor : this.state.color }} /> ; } } \u53ef\u4ee5\u6539\u5199\u4e3a\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 interface SquareProps { readonly size : number ; readonly color : string ; } const Square = ( props : SquareProps ) : ReactElement => { const [ color , setColor ] = useState ( props . color ); let timer : any ; const switchColor = () => { setColor (( prev : string ) => prev === \"red\" ? \"blue\" : \"red\" ); }; useEffect (() => { timer = setInterval ( switchColor , 1000 ); return () => clearInterval ( timer ); }, []); return < div style = {{ width : props.size , height : props.size , backgroundColor : color }} /> ; } \u8fd9\u91cc\u6211\u4eec\u5728\u4f5c\u4e3a useEffect \u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u7684\u56de\u8c03\u51fd\u6570\u4e2d\u8fd4\u56de\u4e86\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u5176\u89c4\u5b9a\u4e86\u6e05\u9664\u8ba1\u65f6\u5668\u7684\u903b\u8f91\u3002 \u4ec5\u4f9b\u53c2\u8003\u7684\u5199\u6cd5 \u5982\u679c\u4f60\u4f7f\u7528\u4e86\u4e0a\u8ff0\u5199\u6cd5\uff0c\u53ef\u80fd\u4f1a\u5f97\u5230\u8fd9\u6837\u7684\u8b66\u544a\uff1a \u8fd9\u4e2a\u8b66\u544a\u544a\u8bc9\u6211\u4eec\uff0c timer \u4f5c\u4e3a\u51fd\u6570\u5185\u90e8\u53d8\u91cf\uff0c\u4f1a\u968f\u7740\u6e32\u67d3\u7ed3\u675f\uff08\u51fd\u6570\u6267\u884c\u5b8c\u6bd5\uff09\u800c\u6d88\u5931\uff0c\u5982\u679c\u9700\u8981\u5c06\u5176\u6301\u4e45\u5316\uff0c\u9700\u8981\u4f7f\u7528\u53e6\u5916\u4e00\u4e2a useRef Hooks\u3002 \u8fd9\u5176\u5b9e\u5c31\u662f\u51fd\u6570\u7ec4\u4ef6\u7684\u5c40\u9650\u6240\u5728\uff0c\u7531\u4e8e\u51fd\u6570\u7684\u751f\u547d\u5468\u671f\u4ec5\u80fd\u7ef4\u6301\u5728\u4e00\u6b21\u6e32\u67d3\u4e2d\uff0c\u6240\u4ee5\u5982\u679c\u6d89\u53ca\u5230\u9700\u8981\u6784\u9020\u548c\u7ec4\u4ef6\u751f\u547d\u5468\u671f\u4e00\u822c\u957f\u7684\u53d8\u91cf\uff0c\u5c31\u4e0d\u5f97\u4e0d\u4f7f\u7528\u5404\u79cd Hooks \u7ef4\u62a4\uff0c\u6bd4\u5982\u7ec4\u4ef6\u7684\u5404\u79cd\u72b6\u6001\uff0c\u6bd4\u5982\u8fd9\u91cc\u7684\u8ba1\u65f6\u5668\u3002 useRef Hooks \u4f1a\u6784\u5efa\u4e00\u4e2a\u548c\u7ec4\u4ef6\u751f\u547d\u5468\u671f\u4e00\u822c\u957f\u7684\u53d8\u91cf\uff0c\u5176\u521d\u59cb\u503c\u4e3a useRef \u63a5\u53d7\u7684\u53c2\u6570\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8be5 Hooks \u8fd4\u56de\u53d8\u91cf\u7684 .current \u5c5e\u6027\u83b7\u53d6\u5230\u5b9e\u9645\u7684\u53d8\u91cf\u503c\u3002\u6240\u4ee5\u8bf4\uff0c\u4e0a\u8ff0\u4ee3\u7801\u7684\u6b63\u786e\u7f16\u5199\u65b9\u5f0f\u5e94\u8be5\u4e3a\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 interface SquareProps { readonly size : number ; readonly color : string ; } const Square = ( props : SquareProps ) : ReactElement => { const [ color , setColor ] = useState ( props . color ); const timerRef = useRef < undefined | NodeJS . Timer > ( undefined ); const switchColor = () => { setColor (( prev : string ) => prev === \"red\" ? \"blue\" : \"red\" ); }; useEffect (() => { timerRef . current = setInterval ( switchColor , 1000 ); return () => { if ( timerRef . current !== undefined ) clearInterval ( timerRef . current ); } }, []); return < div style = {{ width : props.size , height : props.size , backgroundColor : color }} /> ; } useEffect Hooks \u7684\u5927\u81f4\u539f\u7406 useEffect \u91c7\u7528\u4e86\u548c useState \u7c7b\u4f3c\u7684\u8bbe\u8ba1\u601d\u8def\uff0c\u53ea\u4e0d\u8fc7\u5176\u5728\u5168\u5c40\u6570\u7ec4\u5185\u5b58\u653e\u7684\u662f\u6bcf\u4e00\u4e2a\u526f\u4f5c\u7528\u7684\u4f9d\u8d56\u5217\u8868\u3002\u6bcf\u6b21\u6267\u884c useEffect \u7684\u65f6\u5019\u90fd\u4f1a\u67e5\u627e\u4f9d\u8d56\u5217\u8868\u6765\u786e\u5b9a\u662f\u5426\u9700\u8981\u6267\u884c\u526f\u4f5c\u7528\u3002 \u5176\u53ef\u80fd\u7684\u5b9e\u73b0\u4e3a\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 let effectDeps : any [][] = []; let cursor : number = 0 ; const useEffect = ( callback : () => void , depList : any []) : void => { if ( effectDeps [ cursor ] === undefined ) { effectDeps [ cursor ] = depList ; cursor += 1 ; callback (); return ; } const depsChanged = effectDeps [ cursor ] . some (( dep : any , ind : number ) => dep !== depList [ ind ]); if ( depsChanged ) { callback (); effectDeps [ cursor ] = depList ; } cursor += 1 ; } \u8fd9\u6837\u5b9e\u9645\u4e0a\u5c31\u89e3\u91ca\u4e86\u4e3a\u4f55 depList \u7f6e undefined \u65f6\u6bcf\u6b21\u6e32\u67d3\u90fd\u4f1a\u6267\u884c\u526f\u4f5c\u7528\uff0c\u8fd9\u662f\u56e0\u4e3a effectDeps \u6570\u7ec4\u5185\u4e00\u76f4\u4fdd\u5b58\u7684\u662f undefined \uff0c\u6240\u4ee5 useEffect \u5728\u7b2c\u4e00\u4e2a if \u5904\u5c31\u4f1a\u4e00\u76f4\u5224\u771f\uff0c\u4ece\u800c\u6bcf\u6b21\u90fd\u4f1a\u6267\u884c\u526f\u4f5c\u7528\u3002 \u540c\u6837\u4e5f\u80fd\u89e3\u91ca\u4e3a\u4f55 depList \u7f6e\u7a7a\u5217\u8868\u4ec5\u4f1a\u5728\u7b2c\u4e00\u6b21\u6e32\u67d3\u6267\u884c\u526f\u4f5c\u7528\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002","title":"\u526f\u4f5c\u7528\u7684\u6e05\u9664\u903b\u8f91"},{"location":"frontend/react/function-component/#hooks_1","text":"Hooks \u7684\u4f7f\u7528\u89c4\u8303\u5927\u81f4\u53ef\u4ee5\u5f52\u7ed3\u4e3a\u4e24\u6761\uff1a \u5fc5\u987b\u5728\u7ec4\u4ef6\u6700\u9876\u90e8\u4f7f\u7528 Hooks\uff0c\u4e14 Hooks \u4e0d\u80fd\u4f4d\u4e8e\u6761\u4ef6\u3001\u5faa\u73af\u3001\u5b50\u51fd\u6570\u4e4b\u4e2d \u53ea\u80fd\u5728 React \u51fd\u6570\u7ec4\u4ef6\u4e2d\u4f7f\u7528 Hooks \u53ea\u8981\u9075\u5faa\u8fd9\u4e24\u6761\u5373\u53ef\u4fdd\u8bc1 Hooks \u7684\u6b63\u786e\u4f7f\u7528\u3002 \u4e3a\u4ec0\u4e48\u662f\u8fd9\u4e24\u6761\u89c4\u5219 \u5982\u679c\u4f60\u5df2\u7ecf\u9605\u8bfb\u8fc7 useState \u548c useEffect \u7684\u7b80\u8981\u5b9e\u73b0\uff0c\u5c31\u4f1a\u53d1\u73b0\u8fd9\u4e24\u4e2a Hooks \u90fd\u4f9d\u8d56\u4e8e\u4e00\u4e2a\u91cd\u8981\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u5373 cursor \u3002\u8fd9\u4e2a\u53d8\u91cf\u7ef4\u62a4\u4e86\u5f53\u524d Hooks \u6307\u5411\u7684\u72b6\u6001\uff08\u6216\u4f9d\u8d56\u9879\u5217\u8868\uff09\u3002\u800c cursor \u7684\u53d8\u5316\u4ec5\u4ec5\u662f\u81ea\u589e\uff0c\u8fd9\u610f\u5473\u7740\uff0c\u5982\u679c\u5404\u4e2a Hooks \u7684\u6267\u884c\u5e8f\u5217\u53d1\u751f\u53d8\u5316\uff0c\u5c31\u4f1a\u5bfc\u81f4 cursor \u504f\u79fb\uff0c\u4ece\u800c\u5bfc\u81f4 Hooks \u65e0\u6cd5\u6b63\u786e\u89e3\u6790\u72b6\u6001\uff08\u6216\u4f9d\u8d56\u9879\u5217\u8868\uff09\u3002 \u6bd4\u5982\u8bf4\u6211\u4eec\u5728\u67d0\u4e00\u4e2a\u7ec4\u4ef6\u9876\u90e8\u6309\u987a\u5e8f\u8c03\u7528\u4e0b\u8ff0 Hooks\uff1a 1 2 3 useState ( 1 ); // #1 useState ( 2 ); // #2 useState ( 3 ); // #3 \u8fd9\u91cc cursor \u5c31\u4f1a\u9012\u589e\u4e09\u6b21\uff0c\u5c06\u4e09\u4e2a\u72b6\u6001\u8fde\u7eed\u8bb0\u5f55\u5728\u5168\u5c40\u6570\u7ec4\u4e2d\u3002 \u7136\u800c\u5982\u679c\u6211\u4eec\u5c06\u67d0\u4e00\u4e2a Hooks \u653e\u7f6e\u5728\u6761\u4ef6\u8bed\u53e5\u4e2d\uff1a 1 2 3 4 5 useState ( 1 ); // #1 if ( something ) { useState ( 2 ); // #2 } useState ( 3 ); // #3 \u5c31\u53ef\u80fd\u5bfc\u81f4\u7b2c\u4e8c\u4e2a Hooks \u4e0d\u88ab\u6267\u884c\uff0c\u4ece\u800c\u5bfc\u81f4 cursor \u6ca1\u6709\u9012\u589e\u3002\u6b64\u65f6\u6267\u884c\u7b2c\u4e09\u4e2a Hooks \u7684\u65f6\u5019\uff0c cursor \u6307\u5411\u4e86\u7b2c\u4e8c\u4e2a\u72b6\u6001\uff0c\u8fd9\u5c31\u5bfc\u81f4\u4e86\u9519\u8bef\u3002","title":"Hooks \u7684\u4f7f\u7528\u89c4\u8303"},{"location":"frontend/react/lifecycle/","text":"\u751f\u547d\u5468\u671f\u65b9\u6cd5 \u00b6 React \u7ec4\u4ef6\u7684\u751f\u547d\u5468\u671f \u00b6 \u6211\u4eec\u5728\u5b9e\u9645\u7684\u5f00\u53d1\u4e4b\u4e2d\uff0c\u524d\u7aef\u9700\u8981\u663e\u793a\u7684\u6570\u636e\u3001\u663e\u793a\u6570\u636e\u7684\u65b9\u5f0f\u5f80\u5f80\u9700\u8981\u6839\u636e\u4ece\u540e\u7aef\u3001\u516c\u5f00\u5e73\u53f0\u7b49\u5904\u62c9\u53d6\u7684\u4fe1\u606f\u786e\u5b9a\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u9700\u8981\u8003\u8651\u5e94\u5f53\u4f55\u65f6\u53d1\u8d77\u7f51\u7edc\u8bf7\u6c42\u62c9\u53d6\u6570\u636e\u3002 \u5728\u53d9\u8ff0\u4f55\u65f6\u62c9\u53d6\u6570\u636e\u4e4b\u524d\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u4e86\u89e3\u4e00\u4e0b React \u7ec4\u4ef6\u7684\u751f\u547d\u5468\u671f\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a React \u7ec4\u4ef6\u4ece\u6784\u5efa\u5230\u89e3\u6784\u7684\u5168\u8fc7\u7a0b\uff1a \u51c6\u5907\u6302\u8f7d\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c5e\u6027\u4f1a\u88ab\u4f20\u9012\u5230\u7ec4\u4ef6\u7684\u6784\u9020\u51fd\u6570\u4e4b\u4e2d\uff0c\u5b9e\u4f8b\u5316\u4e00\u4e2a\u7ec4\u4ef6\uff0c\u540c\u65f6\u521b\u8bbe\u76f8\u5e94\u7684 state \u3002 \u6302\u8f7d\u7ec4\u4ef6\uff0c\u8fd9\u4e2a\u65f6\u5019\u6846\u67b6\u8c03\u7528 render \u51fd\u6570\uff0c\u751f\u6210\u7ec4\u4ef6\u7684\u5c55\u793a\u65b9\u5f0f\u5e76\u6e32\u67d3\uff0c \u6302\u8f7d\u5b8c\u6bd5\u4e4b\u540e\u4f1a\u4f7f\u7528 React.Component \u7c7b\u4e4b\u4e2d\u5b9a\u4e49\u7684 componentDidMount \u751f\u547d\u5468\u671f\u65b9\u6cd5 \uff0c\u8868\u793a\u7ec4\u4ef6\u6302\u8f7d\u5b8c\u6bd5\u3002 \u76d1\u542c\u7ec4\u4ef6\u7684 setState \u65b9\u6cd5\u8c03\u7528\uff0c\u4e00\u65e6\u7ec4\u4ef6\u7684\u72b6\u6001\u6539\u53d8\uff0c\u5c31\u4ee3\u8868\u7740\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7ec4\u4ef6\u7684\u663e\u793a\u65b9\u5f0f\u6539\u53d8\uff0c\u6b64\u65f6\u6846\u67b6\u4f1a\u91cd\u65b0\u8c03\u7528 render \u51fd\u6570\u8fdb\u884c\u91cd\u65b0\u6e32\u67d3\u3002 \u5378\u8f7d\u7ec4\u4ef6\uff0c\u5f53\u7ec4\u4ef6\u9700\u8981\u88ab\u79fb\u9664\u7684\u65f6\u5019\uff0c \u5728\u5378\u8f7d\u4e4b\u524d\u4f1a\u8c03\u7528 React.Component \u7c7b\u4e4b\u4e2d\u5b9a\u4e49\u7684 componentWillUnmount \u751f\u547d\u5468\u671f\u65b9\u6cd5 \uff0c\u8868\u793a\u5373\u5c06\u5378\u8f7d\u7ec4\u4ef6\u3002 \u6ce8\u610f\u8fd9\u91cc\u63d0\u5230\u7684 componentDidMount \u548c componentWillUnmount \u65b9\u6cd5\uff0c\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u4f1a\u5728\u5bf9\u5e94\u7684\u751f\u547d\u5468\u671f\u65f6\u95f4\u70b9\u7531 React \u6846\u67b6\u81ea\u52a8\u8c03\u7528\u3002\u524d\u8005\u8c03\u7528\u65f6\u7ec4\u4ef6\u5df2\u7ecf\u6784\u5efa\u5b8c\u6bd5\u4e14\u6302\u8f7d\u5230 DOM \u6811\u4e0a\uff0c\u6b64\u65f6\u4fbf\u53ef\u4ee5\u4ece\u7f51\u7edc\u62c9\u53d6\u6570\u636e\u5e76\u5199\u5165\u5bf9\u5e94\u7684\u6210\u5458\u53d8\u91cf\u6216\u8005\u8c03\u7528 this.setState \u6839\u636e\u83b7\u53d6\u7684\u6570\u636e\u91cd\u65b0\u6e32\u67d3\u7ec4\u4ef6\u3002 \u800c\u540e\u8005\u8c03\u7528\u65f6\u610f\u5473\u7740\u7ec4\u4ef6\u5373\u5c06\u5378\u8f7d\uff0c\u6b64\u65f6\u5e94\u5f53\u6e05\u9664\u6389\u4e00\u4e9b\u5373\u5c06\u4e0d\u4f7f\u7528\u7684\u3001\u5728\u540e\u53f0\u8fd0\u884c\u5360\u7528\u8d44\u6e90\u7684\u8ba1\u65f6\u5668\u3001\u4e8b\u4ef6\u76d1\u542c\u5668\u7b49\u5bf9\u8c61\uff0c\u4fdd\u8bc1\u8d44\u6e90\u4e0d\u6d6a\u8d39\u3002 \u66f4\u5b8c\u6574\u7684\u751f\u547d\u5468\u671f \u3010\u6ce8\u610f\u3011 \u8fd9\u91cc\u53ef\u80fd\u5305\u542b\u8fc7\u65f6\u4e43\u81f3\u5371\u9669\u7684\u7f16\u7801\u65b9\u6cd5\uff0c\u5982\u679c\u53ea\u9700\u8981\u5b66\u4e60\u751f\u547d\u5468\u671f\u65b9\u6cd5\u7684\u8fd0\u7528\u53ef\u4ee5\u8df3\u8fc7\uff0c\u672c\u90e8\u5206\u4ec5\u7528\u4e8e\u6df1\u5165\u4e86\u89e3 React \u6846\u67b6\u3002 \u5982\u679c\u4f7f\u7528 VS Code \u7b49\u5e26\u6709\u4ee3\u7801\u63d0\u793a\u7684\u5de5\u5177\u7f16\u5199\u4ee3\u7801\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u8fd8\u6709\u5f88\u591a\u5176\u4ed6\u7684\u751f\u547d\u5468\u671f\u65b9\u6cd5\uff1a \u8fd9\u4e9b\u65b9\u6cd5\u5b9e\u9645\u4e0a\u63cf\u8ff0\u4e86\u66f4\u4e3a\u7ec6\u81f4\u7684 React \u7ec4\u4ef6\u751f\u547d\u5468\u671f\uff0c\u73b0\u5728\u6211\u4eec\u9010\u6b65\u8868\u8ff0\u3002 \u7ec4\u4ef6\u6302\u8f7d \u9996\u5148\u8c03\u7528\u6784\u9020\u51fd\u6570 constructor() \uff0c\u5176\u63a5\u53d7\u7684\u53c2\u6570\u4e3a\u7ec4\u4ef6\u5c5e\u6027\uff0c\u540c\u65f6\u521d\u59cb\u5316\u7ec4\u4ef6\u72b6\u6001\u3002\u5728 ES6 JavaScript \u7c7b\u8bed\u6cd5\u7cd6\u51fa\u73b0\u4e4b\u524d\uff0c\u6784\u9020\u51fd\u6570\u7531 getDefaultProps() \u548c getInitialState() \u4e24\u4e2a\u65b9\u6cd5\u66ff\u4ee3 \u5176\u6b21\u8c03\u7528 componentWillMount() \u65b9\u6cd5\uff0c\u7528\u6237\u53ef\u4ee5 override \u8be5\u65b9\u6cd5\u5b9e\u73b0\u81ea\u5b9a\u4e49\u529f\u80fd \u7136\u540e\u8c03\u7528 render() \u65b9\u6cd5\u83b7\u53d6\u7ec4\u4ef6\u7684\u663e\u793a\u65b9\u5f0f\uff0c\u6e32\u67d3\u7ec4\u4ef6 \u6700\u540e\u8c03\u7528 componentDidMount() \u65b9\u6cd5\uff0c\u7528\u6237\u53ef\u4ee5 override \u8be5\u65b9\u6cd5\u5b9e\u73b0\u81ea\u5b9a\u4e49\u529f\u80fd \u7ec4\u4ef6\u66f4\u65b0 \u5982\u679c\u662f\u63a5\u53d7\u65b0\u7684\u7ec4\u4ef6\u5c5e\u6027\u8fdb\u884c\u66f4\u65b0\uff0c\u8c03\u7528 componentWillReceiveProps() \u65b9\u6cd5\u3002\u8be5\u65b9\u6cd5\u63a5\u53d7\u7684\u53c2\u6570\u4e3a\u8be5\u7ec4\u4ef6\u7684\u65b0\u5c5e\u6027 \u9996\u5148\u8c03\u7528 shouldComponentUpdate() \u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u8fd4\u56de\u5e03\u5c14\u503c\uff0c\u8868\u793a\u7ec4\u4ef6\u6b64\u65f6\u662f\u5426\u9700\u8981\u66f4\u65b0\u3002\u82e5\u5f97\u5230 false \uff0c\u5219\u7ec4\u4ef6\u505c\u6b62\u66f4\u65b0\uff0c\u5426\u5219\u7ee7\u7eed\u5411\u4e0b\u6267\u884c\u3002\u8be5\u65b9\u6cd5\u63a5\u53d7\u7684\u53c2\u6570\u4e3a\u8be5\u7ec4\u4ef6\u7684\u65b0\u5c5e\u6027\u548c\u65b0\u72b6\u6001 \u5176\u6b21\u8c03\u7528 componentWillUpdate() \u65b9\u6cd5\uff0c\u7528\u6237\u53ef\u4ee5 override \u8be5\u65b9\u6cd5\u5b9e\u73b0\u81ea\u5b9a\u4e49\u529f\u80fd\u3002\u8be5\u65b9\u6cd5\u63a5\u53d7\u7684\u53c2\u6570\u4e3a\u8be5\u7ec4\u4ef6\u7684\u65b0\u5c5e\u6027\u548c\u65b0\u72b6\u6001 \u7136\u540e\u8c03\u7528 render() \u65b9\u6cd5\u83b7\u53d6\u7ec4\u4ef6\u663e\u793a\u65b9\u5f0f\uff0c\u6e32\u67d3\u7ec4\u4ef6 \u6700\u540e\u8c03\u7528 componentDidUpdate() \u65b9\u6cd5\uff0c\u8868\u793a\u7ec4\u4ef6\u66f4\u65b0\u5b8c\u6bd5\u3002\u8be5\u65b9\u6cd5\u63a5\u53d7\u7684\u53c2\u6570\u4e3a\u7ec4\u4ef6\u66f4\u65b0\u524d\u7684\u65e7\u5c5e\u6027\u548c\u65e7\u72b6\u6001 \u7ec4\u4ef6\u5378\u8f7d \u8c03\u7528 componentWillUnmount() \u65b9\u6cd5\uff0c\u7528\u6237\u53ef\u4ee5 override \u8be5\u65b9\u6cd5\u5b9e\u73b0\u81ea\u5b9a\u4e49\u529f\u80fd \u7ec4\u4ef6\u9519\u8bef\u5904\u7406 \u8c03\u7528 componentDidCatch() \u65b9\u6cd5\uff0c\u7528\u6237\u53ef\u4ee5 override \u8be5\u65b9\u6cd5\u5b9e\u73b0\u81ea\u5b9a\u4e49\u529f\u80fd\u3002\u8be5\u65b9\u6cd5\u63a5\u53d7\u7684\u53c2\u6570\u4e3a\u9519\u8bef\u4fe1\u606f \u7ec4\u4ef6\u76d1\u542c\u7684\u65b9\u6cd5\u8c03\u7528 setState() \u65b9\u6cd5\u53d1\u8d77\u7ec4\u4ef6\u66f4\u65b0\u7684 \u8bf7\u6c42 \uff0c\u4f1a\u89e6\u53d1\u4e00\u6b21\u91cd\u65b0\u6e32\u67d3\uff0c\u5177\u4f53\u7528\u6cd5\u5148\u524d\u5df2\u7ecf\u8bb2\u89e3 forceUpdate() \u65b9\u6cd5\u53d1\u8d77\u7ec4\u4ef6\u66f4\u65b0\u7684 \u547d\u4ee4 \uff0c\u4e0e setState() \u65b9\u6cd5\u4e0d\u540c\u5728\u5176\u4f1a\u65e0\u89c6 componentShouldUpdate() \u7684\u8fd4\u56de\u503c\uff0c\u6b63\u5e38\u5b8c\u6210\u7ec4\u4ef6\u66f4\u65b0\u6d41\u7a0b\uff08\u5305\u62ec\u8c03\u7528 componentDidUpdate() \u65b9\u6cd5\uff09 \u603b\u4f53\u800c\u8a00\uff0cReact \u7ec4\u4ef6\u7684\u751f\u547d\u5468\u671f\u5927\u81f4\u4e3a\u4e0b\u56fe\uff08ES5 \u7248\u672c\uff0c\u4e0d\u5305\u62ec\u7ec4\u4ef6\u9519\u8bef\u5904\u7406\u548c\u65b9\u6cd5\u76d1\u542c\uff09\uff1a \u56fe\u7247\u6765\u6e90\uff1a https://www.cnblogs.com/gdsblog/p/7348375.html \u3002 \u4e0d\u5b89\u5168\u7684\u751f\u547d\u5468\u671f\u65b9\u6cd5 \u6211\u4eec\u53ef\u4ee5\u6ce8\u610f\u5230 componentWillMount() \u7b49\u65b9\u6cd5\u5df2\u7ecf\u88ab\u6807\u8bb0\u4e3a Deprecated\uff0c\u8fd9\u662f\u56e0\u4e3a\u8fd9\u7c7b\u65b9\u6cd5\u5f80\u5f80\u53ef\u80fd\u4f1a\u5728\u7ec4\u4ef6\u672a\u6784\u5efa\u5b8c\u6bd5\u6216\u8005\u66f4\u65b0\u5b8c\u6bd5\u7684\u65f6\u5019\u4fee\u6539\u7ec4\u4ef6\uff0c\u8fd9\u662f\u6709\u6570\u636e\u7ade\u4e89\u5371\u9669\u7684\u3002\u6240\u4ee5\u5728 React 17/18 \u7248\u672c\u7684\u8fc7\u6e21\u4e4b\u4e2d\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u4f1a\u88ab\u5e9f\u5f03\u3002\u8fd9\u4e9b\u751f\u547d\u5468\u671f\u65b9\u6cd5\u5305\u62ec\uff1a componentWillMount() componentWillUpdate() componentWillReceiveProps() \u5b9e\u4f8b\u2014\u2014\u4e3a\u7ec4\u4ef6\u6302\u8f7d\u8ba1\u65f6\u5668 \u00b6 \u73b0\u5728\u6211\u4eec\u7740\u91cd\u8bb2\u89e3\u5982\u4f55\u5229\u7528 componentDidMount \u548c componentWillUnmount \u65b9\u6cd5\u3002\u8fd9\u4e24\u4e2a\u751f\u547d\u5468\u671f\u65b9\u6cd5\u6807\u8bb0\u7740\u7ec4\u4ef6\u751f\u547d\u5468\u671f\u7684\u5f00\u59cb\u4e0e\u7ec8\u7ed3\uff0c\u6240\u4ee5\u5982\u679c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u4e00\u4e2a\u548c\u7ec4\u4ef6\u540c\u65f6\u6784\u9020\u3001\u540c\u65f6\u91ca\u653e\u7684\u5bf9\u8c61\uff0c\u6211\u4eec\u5c31\u9700\u8981\u5728\u8fd9\u4e24\u4e2a\u751f\u547d\u5468\u671f\u65b9\u6cd5\u5185\u6784\u5efa\u548c\u91ca\u653e\u8fd9\u4e2a\u5bf9\u8c61\u3002\u5176\u4e2d\u4e00\u4e2a\u4f8b\u5b50\u5c31\u662f\u8ba1\u65f6\u5668\u3002 \u6211\u4eec\u73b0\u5728\u8003\u8651\u5148\u524d\u7f16\u5199\u7684\u5c0f\u6b63\u65b9\u5f62\uff0c\u73b0\u5728\u6211\u4eec\u80fd\u591f\u901a\u8fc7\u4fee\u6539\u7ec4\u4ef6\u72b6\u6001\u6765\u63a7\u5236\u5b83\u7684\u989c\u8272\uff0c\u4f46\u6211\u4eec\u5b9e\u9645\u4e0a\u8fd8\u662f\u8981\u901a\u8fc7\u7528\u6237\u6765\u89e6\u53d1\u6211\u4eec\u4fee\u6539\u989c\u8272\u7684\u51fd\u6570\u3002\u5982\u679c\u6211\u60f3\u8981\u5c06\u8fd9\u4e2a\u51fd\u6570\u6539\u4e3a\u81ea\u52a8\u8c03\u7528\uff0c\u4e0d\u53ef\u907f\u514d\u5730\u5c31\u9700\u8981\u5f15\u5165\u8ba1\u65f6\u5668\u3002 \u9996\u5148\u6211\u4eec\u9700\u8981\u5c06\u8ba1\u65f6\u5668\u58f0\u660e\u4e3a\u7c7b\u6210\u5458\u4ee5\u7b26\u5408 TypeScript \u7684\u68c0\u67e5\uff1a 1 2 3 4 class Square extends React . Component < SquareProps , SquareStates > { timer : any ; // ... } \u4e4b\u540e\uff0c\u6211\u4eec\u9700\u8981\u5728 componentDidMount \u65b9\u6cd5\u4e2d\uff0c\u5728\u7ec4\u4ef6\u521a\u6302\u8f7d\u7684\u65f6\u5019\u6784\u5efa\u8ba1\u65f6\u5668\u5bf9\u8c61\uff1a 1 2 3 4 // Component 'Square' componentDidMount () : void { this . timer = setInterval (() => this . switchColor (), 1000 ); } setInterval \u65b9\u6cd5\u8bbe\u5b9a\u4e00\u4e2a\u5468\u671f\u8ba1\u65f6\u5668\uff0c\u4e0a\u8ff0\u8ba1\u65f6\u5668\u5c06\u4f1a\u6bcf\u95f4\u9694 1000 \u6beb\u79d2\u8c03\u7528\u4e00\u6b21 this.switchColor \u65b9\u6cd5\u3002 \u6700\u540e\uff0c\u6211\u4eec\u9700\u8981\u5728 componentWillUnmount \u65b9\u6cd5\u4e2d\uff0c\u5728\u7ec4\u4ef6\u5373\u5c06\u5378\u8f7d\u7684\u65f6\u5019\u5220\u9664\u8ba1\u65f6\u5668\u5bf9\u8c61\uff1a 1 2 3 4 // Component 'Square' componentWillUnmount () : void { clearInterval ( this . timer ); } \u4f7f\u7528 npm run start / yarn start \u547d\u4ee4\u5373\u53ef\u8fd0\u884c\u5e94\u7528\uff0c\u770b\u5230\u4e00\u4e2a\u6bcf\u9694\u4e00\u79d2\u53d8\u8272\u7684\u6b63\u65b9\u5f62\u4e86\u3002 setState \u65b9\u6cd5\u4e0e\u53ef\u80fd\u7684\u5faa\u73af\u6e32\u67d3 \u00b6 \u521d\u6b21\u4f7f\u7528 React \u6846\u67b6\u5e76\u5c1d\u8bd5\u7ef4\u62a4\u7ec4\u4ef6\u72b6\u6001\u7684\u65f6\u5019\uff0c\u5f80\u5f80\u4f1a\u9047\u5230\u6ee5\u7528 setState \u65b9\u6cd5\u5bfc\u81f4\u7ec4\u4ef6\u5d29\u6e83\u7684\u9519\u8bef\u3002 \u5c1d\u8bd5\u5728 Square \u7ec4\u4ef6\u5185\u5199\u5165\u8fd9\u6837\u7684\u4ee3\u7801\uff1a 1 2 3 4 // Component 'Square' componentDidUpdate () { this . setState (( o ) => o ); } \u518d\u8fd0\u884c React \u5e94\u7528\uff0c\u4f60\u5e94\u5f53\u80fd\u89c2\u5bdf\u5230 React \u5d29\u6e83\u3002\u8bf7\u81ea\u884c\u601d\u8003\u539f\u56e0\uff0c\u5982\u679c\u6ca1\u6709\u601d\u8def\uff0c\u53ef\u4ee5\u6253\u5f00\u6d4f\u89c8\u5668\u63a7\u5236\u53f0\u67e5\u770b\u62a5\u9519\u539f\u56e0\u6216\u8005\u5c55\u5f00\u4e0b\u9762\u7684\u7b14\u8bb0\u6846\u9605\u8bfb\u6211\u4eec\u7ed9\u51fa\u7684\u89e3\u91ca\u3002 React \u5d29\u6e83\u7684\u539f\u56e0 \u5982\u679c\u4f60\u6253\u5f00\u4e86\u6d4f\u89c8\u5668\u7684\u63a7\u5236\u53f0\uff0c\u5e94\u5f53\u4f1a\u770b\u5230\u7c7b\u4f3c\u4e0b\u56fe\u7684\u62a5\u9519\uff1a \u73b0\u5728\u6211\u4eec\u56de\u987e\u8c03\u7528 setState \u65f6 React \u6846\u67b6\u7684\u5904\u7406\u6d41\u7a0b\u3002\u5982\u679c\u8c03\u7528\u540e\u901a\u8fc7\u4e86 shouldComponentUpdate \u7684\u68c0\u67e5\uff0c\u5219\u5c31\u4f1a\u8fdb\u5165\u7ec4\u4ef6\u66f4\u65b0\u7684\u5904\u7406\u6d41\u7a0b\uff0c\u8fd9\u671f\u95f4\u4f1a\u8c03\u7528 componentWillUpdate \u3001 componentDidUpdate \u3001 render \u7b49\u65b9\u6cd5\uff0c\u5982\u679c\u8fd9\u4e9b\u65b9\u6cd5\u5185\u53c8\u4e00\u6b21\u8c03\u7528\u4e86 setState \u65b9\u6cd5\uff0c\u5219\u53c8\u4f1a\u89e6\u53d1\u7ec4\u4ef6\u66f4\u65b0\uff0c\u4ece\u800c\u5bfc\u81f4\u5faa\u73af\u6e32\u67d3\uff0c\u8fd9\u79cd\u6b7b\u5faa\u73af\u4f1a\u5bfc\u81f4 React \u6846\u67b6\u5d29\u6e83\u9000\u51fa\u3002 \u6240\u4ee5\u6211\u4eec\u5e94\u5f53\u907f\u514d\u5728 componentWillUpdate \u3001 componentDidUpdate \u5185\u8c03\u7528 setState \uff0c\u5373\u4f7f\u9700\u8981\u8c03\u7528\uff0c\u4e5f\u4ec5\u80fd\u591f\u5728\u67d0\u4e2a\u6761\u4ef6\u5206\u652f\u8bed\u53e5\u5185\u4f7f\u7528\uff0c\u6bd4\u5982\uff1a 1 2 3 4 5 componentDidUpdate ( prevProps ) { if ( prevProps . foo !== this . props . foo ) { this . setState ( /* SOMETHING */ ); } } \u8fd9\u6837\u81f3\u5c11\u4e0d\u4f1a\u5bfc\u81f4\u6700\u7b80\u5355\u7684\u6b7b\u5faa\u73af\uff0c\u4f46\u662f\u8fd9\u6837\u8fd8\u662f\u6709\u53ef\u80fd\u5bfc\u81f4\u91cd\u590d\u6e32\u67d3\uff0c\u8fdb\u800c\u5bfc\u81f4\u6027\u80fd\u6d6a\u8d39\u3002","title":"\u751f\u547d\u5468\u671f"},{"location":"frontend/react/lifecycle/#_1","text":"","title":"\u751f\u547d\u5468\u671f\u65b9\u6cd5"},{"location":"frontend/react/lifecycle/#react","text":"\u6211\u4eec\u5728\u5b9e\u9645\u7684\u5f00\u53d1\u4e4b\u4e2d\uff0c\u524d\u7aef\u9700\u8981\u663e\u793a\u7684\u6570\u636e\u3001\u663e\u793a\u6570\u636e\u7684\u65b9\u5f0f\u5f80\u5f80\u9700\u8981\u6839\u636e\u4ece\u540e\u7aef\u3001\u516c\u5f00\u5e73\u53f0\u7b49\u5904\u62c9\u53d6\u7684\u4fe1\u606f\u786e\u5b9a\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u9700\u8981\u8003\u8651\u5e94\u5f53\u4f55\u65f6\u53d1\u8d77\u7f51\u7edc\u8bf7\u6c42\u62c9\u53d6\u6570\u636e\u3002 \u5728\u53d9\u8ff0\u4f55\u65f6\u62c9\u53d6\u6570\u636e\u4e4b\u524d\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u4e86\u89e3\u4e00\u4e0b React \u7ec4\u4ef6\u7684\u751f\u547d\u5468\u671f\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a React \u7ec4\u4ef6\u4ece\u6784\u5efa\u5230\u89e3\u6784\u7684\u5168\u8fc7\u7a0b\uff1a \u51c6\u5907\u6302\u8f7d\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c5e\u6027\u4f1a\u88ab\u4f20\u9012\u5230\u7ec4\u4ef6\u7684\u6784\u9020\u51fd\u6570\u4e4b\u4e2d\uff0c\u5b9e\u4f8b\u5316\u4e00\u4e2a\u7ec4\u4ef6\uff0c\u540c\u65f6\u521b\u8bbe\u76f8\u5e94\u7684 state \u3002 \u6302\u8f7d\u7ec4\u4ef6\uff0c\u8fd9\u4e2a\u65f6\u5019\u6846\u67b6\u8c03\u7528 render \u51fd\u6570\uff0c\u751f\u6210\u7ec4\u4ef6\u7684\u5c55\u793a\u65b9\u5f0f\u5e76\u6e32\u67d3\uff0c \u6302\u8f7d\u5b8c\u6bd5\u4e4b\u540e\u4f1a\u4f7f\u7528 React.Component \u7c7b\u4e4b\u4e2d\u5b9a\u4e49\u7684 componentDidMount \u751f\u547d\u5468\u671f\u65b9\u6cd5 \uff0c\u8868\u793a\u7ec4\u4ef6\u6302\u8f7d\u5b8c\u6bd5\u3002 \u76d1\u542c\u7ec4\u4ef6\u7684 setState \u65b9\u6cd5\u8c03\u7528\uff0c\u4e00\u65e6\u7ec4\u4ef6\u7684\u72b6\u6001\u6539\u53d8\uff0c\u5c31\u4ee3\u8868\u7740\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7ec4\u4ef6\u7684\u663e\u793a\u65b9\u5f0f\u6539\u53d8\uff0c\u6b64\u65f6\u6846\u67b6\u4f1a\u91cd\u65b0\u8c03\u7528 render \u51fd\u6570\u8fdb\u884c\u91cd\u65b0\u6e32\u67d3\u3002 \u5378\u8f7d\u7ec4\u4ef6\uff0c\u5f53\u7ec4\u4ef6\u9700\u8981\u88ab\u79fb\u9664\u7684\u65f6\u5019\uff0c \u5728\u5378\u8f7d\u4e4b\u524d\u4f1a\u8c03\u7528 React.Component \u7c7b\u4e4b\u4e2d\u5b9a\u4e49\u7684 componentWillUnmount \u751f\u547d\u5468\u671f\u65b9\u6cd5 \uff0c\u8868\u793a\u5373\u5c06\u5378\u8f7d\u7ec4\u4ef6\u3002 \u6ce8\u610f\u8fd9\u91cc\u63d0\u5230\u7684 componentDidMount \u548c componentWillUnmount \u65b9\u6cd5\uff0c\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u4f1a\u5728\u5bf9\u5e94\u7684\u751f\u547d\u5468\u671f\u65f6\u95f4\u70b9\u7531 React \u6846\u67b6\u81ea\u52a8\u8c03\u7528\u3002\u524d\u8005\u8c03\u7528\u65f6\u7ec4\u4ef6\u5df2\u7ecf\u6784\u5efa\u5b8c\u6bd5\u4e14\u6302\u8f7d\u5230 DOM \u6811\u4e0a\uff0c\u6b64\u65f6\u4fbf\u53ef\u4ee5\u4ece\u7f51\u7edc\u62c9\u53d6\u6570\u636e\u5e76\u5199\u5165\u5bf9\u5e94\u7684\u6210\u5458\u53d8\u91cf\u6216\u8005\u8c03\u7528 this.setState \u6839\u636e\u83b7\u53d6\u7684\u6570\u636e\u91cd\u65b0\u6e32\u67d3\u7ec4\u4ef6\u3002 \u800c\u540e\u8005\u8c03\u7528\u65f6\u610f\u5473\u7740\u7ec4\u4ef6\u5373\u5c06\u5378\u8f7d\uff0c\u6b64\u65f6\u5e94\u5f53\u6e05\u9664\u6389\u4e00\u4e9b\u5373\u5c06\u4e0d\u4f7f\u7528\u7684\u3001\u5728\u540e\u53f0\u8fd0\u884c\u5360\u7528\u8d44\u6e90\u7684\u8ba1\u65f6\u5668\u3001\u4e8b\u4ef6\u76d1\u542c\u5668\u7b49\u5bf9\u8c61\uff0c\u4fdd\u8bc1\u8d44\u6e90\u4e0d\u6d6a\u8d39\u3002 \u66f4\u5b8c\u6574\u7684\u751f\u547d\u5468\u671f \u3010\u6ce8\u610f\u3011 \u8fd9\u91cc\u53ef\u80fd\u5305\u542b\u8fc7\u65f6\u4e43\u81f3\u5371\u9669\u7684\u7f16\u7801\u65b9\u6cd5\uff0c\u5982\u679c\u53ea\u9700\u8981\u5b66\u4e60\u751f\u547d\u5468\u671f\u65b9\u6cd5\u7684\u8fd0\u7528\u53ef\u4ee5\u8df3\u8fc7\uff0c\u672c\u90e8\u5206\u4ec5\u7528\u4e8e\u6df1\u5165\u4e86\u89e3 React \u6846\u67b6\u3002 \u5982\u679c\u4f7f\u7528 VS Code \u7b49\u5e26\u6709\u4ee3\u7801\u63d0\u793a\u7684\u5de5\u5177\u7f16\u5199\u4ee3\u7801\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u8fd8\u6709\u5f88\u591a\u5176\u4ed6\u7684\u751f\u547d\u5468\u671f\u65b9\u6cd5\uff1a \u8fd9\u4e9b\u65b9\u6cd5\u5b9e\u9645\u4e0a\u63cf\u8ff0\u4e86\u66f4\u4e3a\u7ec6\u81f4\u7684 React \u7ec4\u4ef6\u751f\u547d\u5468\u671f\uff0c\u73b0\u5728\u6211\u4eec\u9010\u6b65\u8868\u8ff0\u3002 \u7ec4\u4ef6\u6302\u8f7d \u9996\u5148\u8c03\u7528\u6784\u9020\u51fd\u6570 constructor() \uff0c\u5176\u63a5\u53d7\u7684\u53c2\u6570\u4e3a\u7ec4\u4ef6\u5c5e\u6027\uff0c\u540c\u65f6\u521d\u59cb\u5316\u7ec4\u4ef6\u72b6\u6001\u3002\u5728 ES6 JavaScript \u7c7b\u8bed\u6cd5\u7cd6\u51fa\u73b0\u4e4b\u524d\uff0c\u6784\u9020\u51fd\u6570\u7531 getDefaultProps() \u548c getInitialState() \u4e24\u4e2a\u65b9\u6cd5\u66ff\u4ee3 \u5176\u6b21\u8c03\u7528 componentWillMount() \u65b9\u6cd5\uff0c\u7528\u6237\u53ef\u4ee5 override \u8be5\u65b9\u6cd5\u5b9e\u73b0\u81ea\u5b9a\u4e49\u529f\u80fd \u7136\u540e\u8c03\u7528 render() \u65b9\u6cd5\u83b7\u53d6\u7ec4\u4ef6\u7684\u663e\u793a\u65b9\u5f0f\uff0c\u6e32\u67d3\u7ec4\u4ef6 \u6700\u540e\u8c03\u7528 componentDidMount() \u65b9\u6cd5\uff0c\u7528\u6237\u53ef\u4ee5 override \u8be5\u65b9\u6cd5\u5b9e\u73b0\u81ea\u5b9a\u4e49\u529f\u80fd \u7ec4\u4ef6\u66f4\u65b0 \u5982\u679c\u662f\u63a5\u53d7\u65b0\u7684\u7ec4\u4ef6\u5c5e\u6027\u8fdb\u884c\u66f4\u65b0\uff0c\u8c03\u7528 componentWillReceiveProps() \u65b9\u6cd5\u3002\u8be5\u65b9\u6cd5\u63a5\u53d7\u7684\u53c2\u6570\u4e3a\u8be5\u7ec4\u4ef6\u7684\u65b0\u5c5e\u6027 \u9996\u5148\u8c03\u7528 shouldComponentUpdate() \u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u8fd4\u56de\u5e03\u5c14\u503c\uff0c\u8868\u793a\u7ec4\u4ef6\u6b64\u65f6\u662f\u5426\u9700\u8981\u66f4\u65b0\u3002\u82e5\u5f97\u5230 false \uff0c\u5219\u7ec4\u4ef6\u505c\u6b62\u66f4\u65b0\uff0c\u5426\u5219\u7ee7\u7eed\u5411\u4e0b\u6267\u884c\u3002\u8be5\u65b9\u6cd5\u63a5\u53d7\u7684\u53c2\u6570\u4e3a\u8be5\u7ec4\u4ef6\u7684\u65b0\u5c5e\u6027\u548c\u65b0\u72b6\u6001 \u5176\u6b21\u8c03\u7528 componentWillUpdate() \u65b9\u6cd5\uff0c\u7528\u6237\u53ef\u4ee5 override \u8be5\u65b9\u6cd5\u5b9e\u73b0\u81ea\u5b9a\u4e49\u529f\u80fd\u3002\u8be5\u65b9\u6cd5\u63a5\u53d7\u7684\u53c2\u6570\u4e3a\u8be5\u7ec4\u4ef6\u7684\u65b0\u5c5e\u6027\u548c\u65b0\u72b6\u6001 \u7136\u540e\u8c03\u7528 render() \u65b9\u6cd5\u83b7\u53d6\u7ec4\u4ef6\u663e\u793a\u65b9\u5f0f\uff0c\u6e32\u67d3\u7ec4\u4ef6 \u6700\u540e\u8c03\u7528 componentDidUpdate() \u65b9\u6cd5\uff0c\u8868\u793a\u7ec4\u4ef6\u66f4\u65b0\u5b8c\u6bd5\u3002\u8be5\u65b9\u6cd5\u63a5\u53d7\u7684\u53c2\u6570\u4e3a\u7ec4\u4ef6\u66f4\u65b0\u524d\u7684\u65e7\u5c5e\u6027\u548c\u65e7\u72b6\u6001 \u7ec4\u4ef6\u5378\u8f7d \u8c03\u7528 componentWillUnmount() \u65b9\u6cd5\uff0c\u7528\u6237\u53ef\u4ee5 override \u8be5\u65b9\u6cd5\u5b9e\u73b0\u81ea\u5b9a\u4e49\u529f\u80fd \u7ec4\u4ef6\u9519\u8bef\u5904\u7406 \u8c03\u7528 componentDidCatch() \u65b9\u6cd5\uff0c\u7528\u6237\u53ef\u4ee5 override \u8be5\u65b9\u6cd5\u5b9e\u73b0\u81ea\u5b9a\u4e49\u529f\u80fd\u3002\u8be5\u65b9\u6cd5\u63a5\u53d7\u7684\u53c2\u6570\u4e3a\u9519\u8bef\u4fe1\u606f \u7ec4\u4ef6\u76d1\u542c\u7684\u65b9\u6cd5\u8c03\u7528 setState() \u65b9\u6cd5\u53d1\u8d77\u7ec4\u4ef6\u66f4\u65b0\u7684 \u8bf7\u6c42 \uff0c\u4f1a\u89e6\u53d1\u4e00\u6b21\u91cd\u65b0\u6e32\u67d3\uff0c\u5177\u4f53\u7528\u6cd5\u5148\u524d\u5df2\u7ecf\u8bb2\u89e3 forceUpdate() \u65b9\u6cd5\u53d1\u8d77\u7ec4\u4ef6\u66f4\u65b0\u7684 \u547d\u4ee4 \uff0c\u4e0e setState() \u65b9\u6cd5\u4e0d\u540c\u5728\u5176\u4f1a\u65e0\u89c6 componentShouldUpdate() \u7684\u8fd4\u56de\u503c\uff0c\u6b63\u5e38\u5b8c\u6210\u7ec4\u4ef6\u66f4\u65b0\u6d41\u7a0b\uff08\u5305\u62ec\u8c03\u7528 componentDidUpdate() \u65b9\u6cd5\uff09 \u603b\u4f53\u800c\u8a00\uff0cReact \u7ec4\u4ef6\u7684\u751f\u547d\u5468\u671f\u5927\u81f4\u4e3a\u4e0b\u56fe\uff08ES5 \u7248\u672c\uff0c\u4e0d\u5305\u62ec\u7ec4\u4ef6\u9519\u8bef\u5904\u7406\u548c\u65b9\u6cd5\u76d1\u542c\uff09\uff1a \u56fe\u7247\u6765\u6e90\uff1a https://www.cnblogs.com/gdsblog/p/7348375.html \u3002 \u4e0d\u5b89\u5168\u7684\u751f\u547d\u5468\u671f\u65b9\u6cd5 \u6211\u4eec\u53ef\u4ee5\u6ce8\u610f\u5230 componentWillMount() \u7b49\u65b9\u6cd5\u5df2\u7ecf\u88ab\u6807\u8bb0\u4e3a Deprecated\uff0c\u8fd9\u662f\u56e0\u4e3a\u8fd9\u7c7b\u65b9\u6cd5\u5f80\u5f80\u53ef\u80fd\u4f1a\u5728\u7ec4\u4ef6\u672a\u6784\u5efa\u5b8c\u6bd5\u6216\u8005\u66f4\u65b0\u5b8c\u6bd5\u7684\u65f6\u5019\u4fee\u6539\u7ec4\u4ef6\uff0c\u8fd9\u662f\u6709\u6570\u636e\u7ade\u4e89\u5371\u9669\u7684\u3002\u6240\u4ee5\u5728 React 17/18 \u7248\u672c\u7684\u8fc7\u6e21\u4e4b\u4e2d\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u4f1a\u88ab\u5e9f\u5f03\u3002\u8fd9\u4e9b\u751f\u547d\u5468\u671f\u65b9\u6cd5\u5305\u62ec\uff1a componentWillMount() componentWillUpdate() componentWillReceiveProps()","title":"React \u7ec4\u4ef6\u7684\u751f\u547d\u5468\u671f"},{"location":"frontend/react/lifecycle/#_2","text":"\u73b0\u5728\u6211\u4eec\u7740\u91cd\u8bb2\u89e3\u5982\u4f55\u5229\u7528 componentDidMount \u548c componentWillUnmount \u65b9\u6cd5\u3002\u8fd9\u4e24\u4e2a\u751f\u547d\u5468\u671f\u65b9\u6cd5\u6807\u8bb0\u7740\u7ec4\u4ef6\u751f\u547d\u5468\u671f\u7684\u5f00\u59cb\u4e0e\u7ec8\u7ed3\uff0c\u6240\u4ee5\u5982\u679c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u4e00\u4e2a\u548c\u7ec4\u4ef6\u540c\u65f6\u6784\u9020\u3001\u540c\u65f6\u91ca\u653e\u7684\u5bf9\u8c61\uff0c\u6211\u4eec\u5c31\u9700\u8981\u5728\u8fd9\u4e24\u4e2a\u751f\u547d\u5468\u671f\u65b9\u6cd5\u5185\u6784\u5efa\u548c\u91ca\u653e\u8fd9\u4e2a\u5bf9\u8c61\u3002\u5176\u4e2d\u4e00\u4e2a\u4f8b\u5b50\u5c31\u662f\u8ba1\u65f6\u5668\u3002 \u6211\u4eec\u73b0\u5728\u8003\u8651\u5148\u524d\u7f16\u5199\u7684\u5c0f\u6b63\u65b9\u5f62\uff0c\u73b0\u5728\u6211\u4eec\u80fd\u591f\u901a\u8fc7\u4fee\u6539\u7ec4\u4ef6\u72b6\u6001\u6765\u63a7\u5236\u5b83\u7684\u989c\u8272\uff0c\u4f46\u6211\u4eec\u5b9e\u9645\u4e0a\u8fd8\u662f\u8981\u901a\u8fc7\u7528\u6237\u6765\u89e6\u53d1\u6211\u4eec\u4fee\u6539\u989c\u8272\u7684\u51fd\u6570\u3002\u5982\u679c\u6211\u60f3\u8981\u5c06\u8fd9\u4e2a\u51fd\u6570\u6539\u4e3a\u81ea\u52a8\u8c03\u7528\uff0c\u4e0d\u53ef\u907f\u514d\u5730\u5c31\u9700\u8981\u5f15\u5165\u8ba1\u65f6\u5668\u3002 \u9996\u5148\u6211\u4eec\u9700\u8981\u5c06\u8ba1\u65f6\u5668\u58f0\u660e\u4e3a\u7c7b\u6210\u5458\u4ee5\u7b26\u5408 TypeScript \u7684\u68c0\u67e5\uff1a 1 2 3 4 class Square extends React . Component < SquareProps , SquareStates > { timer : any ; // ... } \u4e4b\u540e\uff0c\u6211\u4eec\u9700\u8981\u5728 componentDidMount \u65b9\u6cd5\u4e2d\uff0c\u5728\u7ec4\u4ef6\u521a\u6302\u8f7d\u7684\u65f6\u5019\u6784\u5efa\u8ba1\u65f6\u5668\u5bf9\u8c61\uff1a 1 2 3 4 // Component 'Square' componentDidMount () : void { this . timer = setInterval (() => this . switchColor (), 1000 ); } setInterval \u65b9\u6cd5\u8bbe\u5b9a\u4e00\u4e2a\u5468\u671f\u8ba1\u65f6\u5668\uff0c\u4e0a\u8ff0\u8ba1\u65f6\u5668\u5c06\u4f1a\u6bcf\u95f4\u9694 1000 \u6beb\u79d2\u8c03\u7528\u4e00\u6b21 this.switchColor \u65b9\u6cd5\u3002 \u6700\u540e\uff0c\u6211\u4eec\u9700\u8981\u5728 componentWillUnmount \u65b9\u6cd5\u4e2d\uff0c\u5728\u7ec4\u4ef6\u5373\u5c06\u5378\u8f7d\u7684\u65f6\u5019\u5220\u9664\u8ba1\u65f6\u5668\u5bf9\u8c61\uff1a 1 2 3 4 // Component 'Square' componentWillUnmount () : void { clearInterval ( this . timer ); } \u4f7f\u7528 npm run start / yarn start \u547d\u4ee4\u5373\u53ef\u8fd0\u884c\u5e94\u7528\uff0c\u770b\u5230\u4e00\u4e2a\u6bcf\u9694\u4e00\u79d2\u53d8\u8272\u7684\u6b63\u65b9\u5f62\u4e86\u3002","title":"\u5b9e\u4f8b\u2014\u2014\u4e3a\u7ec4\u4ef6\u6302\u8f7d\u8ba1\u65f6\u5668"},{"location":"frontend/react/lifecycle/#setstate","text":"\u521d\u6b21\u4f7f\u7528 React \u6846\u67b6\u5e76\u5c1d\u8bd5\u7ef4\u62a4\u7ec4\u4ef6\u72b6\u6001\u7684\u65f6\u5019\uff0c\u5f80\u5f80\u4f1a\u9047\u5230\u6ee5\u7528 setState \u65b9\u6cd5\u5bfc\u81f4\u7ec4\u4ef6\u5d29\u6e83\u7684\u9519\u8bef\u3002 \u5c1d\u8bd5\u5728 Square \u7ec4\u4ef6\u5185\u5199\u5165\u8fd9\u6837\u7684\u4ee3\u7801\uff1a 1 2 3 4 // Component 'Square' componentDidUpdate () { this . setState (( o ) => o ); } \u518d\u8fd0\u884c React \u5e94\u7528\uff0c\u4f60\u5e94\u5f53\u80fd\u89c2\u5bdf\u5230 React \u5d29\u6e83\u3002\u8bf7\u81ea\u884c\u601d\u8003\u539f\u56e0\uff0c\u5982\u679c\u6ca1\u6709\u601d\u8def\uff0c\u53ef\u4ee5\u6253\u5f00\u6d4f\u89c8\u5668\u63a7\u5236\u53f0\u67e5\u770b\u62a5\u9519\u539f\u56e0\u6216\u8005\u5c55\u5f00\u4e0b\u9762\u7684\u7b14\u8bb0\u6846\u9605\u8bfb\u6211\u4eec\u7ed9\u51fa\u7684\u89e3\u91ca\u3002 React \u5d29\u6e83\u7684\u539f\u56e0 \u5982\u679c\u4f60\u6253\u5f00\u4e86\u6d4f\u89c8\u5668\u7684\u63a7\u5236\u53f0\uff0c\u5e94\u5f53\u4f1a\u770b\u5230\u7c7b\u4f3c\u4e0b\u56fe\u7684\u62a5\u9519\uff1a \u73b0\u5728\u6211\u4eec\u56de\u987e\u8c03\u7528 setState \u65f6 React \u6846\u67b6\u7684\u5904\u7406\u6d41\u7a0b\u3002\u5982\u679c\u8c03\u7528\u540e\u901a\u8fc7\u4e86 shouldComponentUpdate \u7684\u68c0\u67e5\uff0c\u5219\u5c31\u4f1a\u8fdb\u5165\u7ec4\u4ef6\u66f4\u65b0\u7684\u5904\u7406\u6d41\u7a0b\uff0c\u8fd9\u671f\u95f4\u4f1a\u8c03\u7528 componentWillUpdate \u3001 componentDidUpdate \u3001 render \u7b49\u65b9\u6cd5\uff0c\u5982\u679c\u8fd9\u4e9b\u65b9\u6cd5\u5185\u53c8\u4e00\u6b21\u8c03\u7528\u4e86 setState \u65b9\u6cd5\uff0c\u5219\u53c8\u4f1a\u89e6\u53d1\u7ec4\u4ef6\u66f4\u65b0\uff0c\u4ece\u800c\u5bfc\u81f4\u5faa\u73af\u6e32\u67d3\uff0c\u8fd9\u79cd\u6b7b\u5faa\u73af\u4f1a\u5bfc\u81f4 React \u6846\u67b6\u5d29\u6e83\u9000\u51fa\u3002 \u6240\u4ee5\u6211\u4eec\u5e94\u5f53\u907f\u514d\u5728 componentWillUpdate \u3001 componentDidUpdate \u5185\u8c03\u7528 setState \uff0c\u5373\u4f7f\u9700\u8981\u8c03\u7528\uff0c\u4e5f\u4ec5\u80fd\u591f\u5728\u67d0\u4e2a\u6761\u4ef6\u5206\u652f\u8bed\u53e5\u5185\u4f7f\u7528\uff0c\u6bd4\u5982\uff1a 1 2 3 4 5 componentDidUpdate ( prevProps ) { if ( prevProps . foo !== this . props . foo ) { this . setState ( /* SOMETHING */ ); } } \u8fd9\u6837\u81f3\u5c11\u4e0d\u4f1a\u5bfc\u81f4\u6700\u7b80\u5355\u7684\u6b7b\u5faa\u73af\uff0c\u4f46\u662f\u8fd9\u6837\u8fd8\u662f\u6709\u53ef\u80fd\u5bfc\u81f4\u91cd\u590d\u6e32\u67d3\uff0c\u8fdb\u800c\u5bfc\u81f4\u6027\u80fd\u6d6a\u8d39\u3002","title":"setState \u65b9\u6cd5\u4e0e\u53ef\u80fd\u7684\u5faa\u73af\u6e32\u67d3"},{"location":"frontend/react/prepare/","text":"\u73af\u5883\u914d\u7f6e \u00b6 \u524d\u7f6e\u73af\u5883\u914d\u7f6e \u00b6 \u5728\u7ee7\u7eed\u4e0b\u9762\u7684\u73af\u5883\u914d\u7f6e\u4e4b\u524d\uff0c\u672c\u6587\u6863\u9ed8\u8ba4\u4e86\u4f60\u5df2\u7ecf\u5b89\u88c5\u4e86\u9ad8\u4e8e v12 \u7684 node \uff0c\u5e76\u4e14\u53ef\u4ee5\u4f7f\u7528 npm install \u3002 \u5982\u679c\u5b89\u88c5 Node.js \u6216\u8005 npm \u9047\u5230\u56f0\u96be\uff0c\u53ef\u4ee5\u53c2\u8003 Node.js \u7684\u5f15\u5bfc\u6587\u6863 \u3002 \u4f7f\u7528 yarn \u4ee3\u66ff npm \u00b6 \u8fd9\u662f\u4e00\u4e2a \u53ef\u9009\u9879 \uff0c\u5728\u5b9e\u9645\u5de5\u7a0b\u4e4b\u4e2d\u4e24\u8005\u5e76\u6ca1\u6709\u672c\u8d28\u4e0a\u7684\u5dee\u522b\u3002\u4e0e\u5e38\u7528\u7684 npm \u76f8\u6bd4\uff0c yarn \u5927\u591a\u60c5\u51b5\u4e0b\u5177\u6709\u66f4\u5feb\u7684\u4e0b\u8f7d\u901f\u5ea6\u548c\u66f4\u4e3a\u6e05\u6670\u7684\u547d\u4ee4\u884c\u8f93\u51fa\u3002\u6240\u4ee5\u6211\u4eec\u66f4\u52a0\u63a8\u8350\u4f7f\u7528 yarn \u3002 \u8fd9\u91cc\u4e0d\u5177\u4f53\u53d9\u8ff0\u5b89\u88c5\u8fc7\u7a0b\uff0c\u53ef\u4ee5\u53c2\u8003 \u5b98\u7f51 \u4e0a\u7ed9\u51fa\u7684\u65b9\u5f0f\u8fdb\u884c\u5b89\u88c5\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 npm install yarn -g \u547d\u4ee4\u5b89\u88c5\uff08\u540e\u8005\u53ef\u80fd\u4e0d\u9002\u7528\u4e8e Linux \u7528\u6237\uff09\u3002 yarn \u7684\u547d\u4ee4\u548c npm \u7684\u547d\u4ee4\u5927\u81f4\u5177\u6709\u4ee5\u4e0b\u5bf9\u5e94\u5173\u7cfb\uff0c\u66f4\u7ec6\u8282\u7684\u5173\u7cfb\u5219\u53ef\u4ee5\u53c2\u8003 npm \u7684\u5f15\u5bfc\u6587\u6863 \uff1a npm yarn \u5b89\u88c5\u6307\u5b9a\u7b2c\u4e09\u65b9\u5e93 npm install react --save yarn add react \u79fb\u9664\u6307\u5b9a\u7b2c\u4e09\u65b9\u5e93 npm uninstall react --save yarn remove react \u5f00\u53d1\u6a21\u5f0f\u4e0b\u5b89\u88c5 npm install react --save-dev yarn add react --dev \u5b89\u88c5 TypeScript \u00b6 TypeScript \u662f JavaScript \u7684\u8d85\u96c6\u3002\u7b80\u800c\u8a00\u4e4b\uff0cTypeScript \u5c31\u662f\u5e26\u6709\u7c7b\u578b\u7cfb\u7edf\u7684 JavaScript\u3002TypeScript \u4ee3\u7801\u53ef\u4ee5\u76f4\u63a5\u88ab\u7f16\u8bd1\u4e3a JavaScript \u4ee3\u7801\u5e76\u6267\u884c\u3002 \u5b89\u88c5 TypeScript \u662f\u7b80\u5355\u7684\uff1a 1 2 3 4 5 # yarn yarn global add typescript # npm npm install -g typescript \u5b89\u88c5\u540e\u53ef\u4ee5\u5728\u67d0\u4e00\u76ee\u5f55\u4e0b\u65b0\u5efa hello.ts \u6587\u4ef6\uff0c\u8f93\u5165\u4ee5\u4e0b\u4ee3\u7801\uff1a 1 2 let a : string = \"Hello world!\" ; console . log ( a ); \u5e76\u5728\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u6267\u884c\uff1a 1 tsc hello.ts \u5982\u679c\u5b89\u88c5\u987a\u5229\uff0c\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u5e94\u5f53\u4f1a\u51fa\u73b0\u7f16\u8bd1\u751f\u6210\u7684 hello.js \u6587\u4ef6\uff0c\u4f7f\u7528\u547d\u4ee4 node hello.js \u5e94\u5f53\u5c31\u53ef\u4ee5\u770b\u5230\u547d\u4ee4\u884c\u8f93\u51fa\u7684\u95ee\u5019\u8bed\u3002 \u5b89\u88c5 React \u6846\u67b6 & \u521b\u5efa React \u5e94\u7528 \u00b6 React \u6846\u67b6\u7684\u5b89\u88c5\u53ef\u4ee5\u901a\u8fc7\u811a\u624b\u67b6 create-react-app \u5b8c\u6210\uff0c\u4e00\u822c\u800c\u8a00\u5b89\u88c5\u6846\u67b6\u8fd9\u4e00\u8fc7\u7a0b\u53ef\u4ee5\u96c6\u6210\u5728\u521b\u5efa\u5e94\u7528\u7684\u8fc7\u7a0b\u4e2d\u5b8c\u6210\u3002 \u8fdb\u5165\u5230\u4f60\u60f3\u8981\u521b\u5efa\u5e94\u7528\u7684\u76ee\u5f55\u4e0b\uff0c\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a 1 2 3 4 5 6 7 # npm 5.2+ npm install create-react-app -g npx create-react-app <app-path> --template typescript # yarn 0.25+ yarn global add create-react-app yarn create react-app <app-path> --template typescript \u8fd9\u91cc <app-path> \u662f\u4f60\u7684\u5e94\u7528\u7684\u76ee\u5f55\u7684\u8def\u5f84\u3002\u8fd9\u4e9b\u547d\u4ee4\u4f1a\u521b\u5efa\u4e00\u4e2a\u4f7f\u7528 TypeScript \u5f00\u53d1\u7684 React \u5e94\u7528\uff0c\u5e76\u5b89\u88c5 React \u6846\u67b6\u3002 \u5982\u679c\u5b89\u88c5\u987a\u5229\uff0c\u4f7f\u7528\u547d\u4ee4\uff1a 1 2 3 4 5 # npm npm run start # yarn yarn start \u5373\u53ef\u7f16\u8bd1\u6574\u4e2a\u5e94\u7528\uff0c\u968f\u540e\u5e94\u5f53\u5c31\u53ef\u4ee5\u901a\u8fc7\u672c\u5730 3000 \u7aef\u53e3\u8bbf\u95ee\u5230 React \u7684\u6b22\u8fce\u754c\u9762\u4e86\u3002 \u4f7f\u7528\u6211\u4eec\u63d0\u4f9b\u7684\u6846\u67b6 \u4e3a\u4e86\u66f4\u597d\u5730\u9605\u8bfb\u672c\u6587\u6863\uff0c\u6211\u4eec\u63a8\u8350\u4e0b\u8f7d\u6211\u4eec\u63d0\u4f9b\u7684\u7b80\u5316\u7248 React \u6846\u67b6\u3002\u6211\u4eec\u63d0\u4f9b\u7684\u6846\u67b6\u4e2d\u4ec5\u4fdd\u7559\u4e86\u6700\u57fa\u7840\u3001\u6700\u5fc5\u8981\u7684\u4ee3\u7801\u6587\u4ef6\u3002 \u4f7f\u7528\u6211\u4eec\u63d0\u4f9b\u7684\u6846\u67b6\u4e4b\u524d\uff0c\u6211\u4eec\u5e0c\u671b\u4f60\u5df2\u7ecf\u901a\u8fc7\u4e0a\u8ff0\u6b65\u9aa4\u6210\u529f\u521d\u59cb\u5316\u4e86\u4e00\u4e2a\u65b0\u7684 React \u5e94\u7528\u5e76\u80fd\u591f\u5728 3000 \u7aef\u53e3\u8bbf\u95ee\u5230\u6b22\u8fce\u754c\u9762\u3002\u5982\u679c\u5df2\u7ecf\u786e\u8ba4\u521d\u59cb\u5316\u6210\u529f\uff0c\u53ef\u4ee5\u901a\u8fc7 \u8be5\u94fe\u63a5 \u4e0b\u8f7d\u538b\u7f29\u5305\uff0c\u8bf7\u5728\u89e3\u538b\u540e\u4f7f\u7528\u538b\u7f29\u5305\u5185\u7684 src \u6587\u4ef6\u5939\u66ff\u6362\u4f60\u7684 React \u5e94\u7528\u7684 src \u6587\u4ef6\u5939\uff0c\u5e76\u518d\u6b21\u4f7f\u7528 npm run start \u6216\u8005 yarn start \u547d\u4ee4\u8fd0\u884c React \u5e94\u7528\u3002 \u5982\u679c\u4f60\u73b0\u5728\u80fd\u591f\u5728 3000 \u7aef\u53e3\u8bbf\u95ee\u5230\u4e00\u4e2a\u5199\u6709 Hello, React! \u5b57\u6837\u7684\u9875\u9762\uff0c\u5219\u5df2\u7ecf\u5b8c\u6210\u4e86\u914d\u7f6e\u3002 \u4f7f\u7528 ESLint \u89c4\u8303\u7801\u98ce \u00b6 \u8fd9\u662f\u4e00\u4e2a \u53ef\u9009\u9879 \uff0c\u4f46\u662f\u6211\u4eec\u8ba4\u4e3a\u5f00\u53d1\u8f83\u5927\u5de5\u7a0b\u7684\u65f6\u5019\uff0c\u5c24\u5176\u662f\u9700\u8981\u591a\u4eba\u534f\u4f5c\u7684\u65f6\u5019\uff0c\u7edf\u4e00\u7684\u7801\u98ce\u662f\u5fc5\u8981\u7684\u3002 \u5728\u5e94\u7528\u76ee\u5f55\u4e0b\u6267\u884c\u4e0b\u5217\u547d\u4ee4\uff0c\u5373\u53ef\u521d\u6b65\u914d\u7f6e\u4e00\u4e2a ESLint\uff1a 1 2 3 4 5 6 7 # npm npm install eslint --save-dev ./node_modules/.bin/eslint --init # yarn yarn add eslint --dev ./node_modules/.bin/eslint --init \u6267\u884c\u7b2c\u4e8c\u6761\u547d\u4ee4\u540e\uff0cESLint \u4f1a\u8be2\u95ee\u4f60\u7684\u914d\u7f6e\u3002\u5bf9\u4e8e\u524d\u51e0\u4e2a\u95ee\u9898\u6211\u4eec\u5efa\u8bae\u9009\u62e9\u201c\u5f3a\u5236\u8c03\u6574\u7801\u98ce\u201d \u201c\u4f7f\u7528 JavaScript modules(import/export) \u201d \u201c\u4f7f\u7528 React \u6846\u67b6\u201d \u201c\u4f7f\u7528 TypeScript \u201d \u201c\u5728\u6d4f\u89c8\u5668\u4e0a\u8fd0\u884c\u4ee3\u7801\u201d\u3002 \u540e\u7eed\u5219\u662f\u5bf9\u5177\u4f53\u7801\u98ce\u89c4\u5219\u7684\u914d\u7f6e\uff0c\u4f60\u53ef\u4ee5\u56de\u7b54\u5177\u4f53\u95ee\u9898\u6216\u9009\u62e9\u4f7f\u7528\u6a21\u677f\uff0c\u4e5f\u53ef\u4ee5\u6682\u4e14\u4e0d\u56de\u7b54\u800c\u9009\u62e9\u540e\u7eed\u624b\u52a8\u914d\u7f6e .eslintrc \u6587\u4ef6\u4e2d\u7684\u7801\u98ce\u89c4\u5219\u3002 \u4e0b\u9762\u6211\u4eec\u5e0c\u671b\u80fd\u591f\u4e00\u952e\u8c03\u6574\u7801\u98ce\uff0c\u6bd4\u5982\u8bf4\u7ec8\u7aef\u6267\u884c yarn fix \u5c31\u53ef\u4ee5\u4fee\u590d\u6240\u6709\u6e90\u4ee3\u7801\u7684\u7801\u98ce\u3002\u73b0\u5728\u6253\u5f00 package.json \u6587\u4ef6\uff0c\u53ef\u4ee5\u6ce8\u610f\u5230\u8fd9\u6837\u7684\u4e00\u6bb5\uff1a 1 2 3 4 5 6 \"scripts\" : { \"start\" : \"react-scripts start\" , \"build\" : \"react-scripts build\" , \"test\" : \"react-scripts test\" , \"eject\" : \"react-scripts eject\" } \u5728\u6700\u540e\u6dfb\u52a0\u4e00\u884c\uff1a 1 2 3 4 \"scripts\" : { ... \"fix\" : \"./node_modules/.bin/eslint src --ext .js,.jsx,.ts,.tsx --fix\" } \u8fd9\u4e00\u884c\u7684\u610f\u601d\u662f\u6267\u884c yarn fix \u7684\u65f6\u5019\u4f1a\u4f7f\u7528 ESLint \u5c06 src \u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6269\u5c55\u540d\u4e3a js / jsx / ts / tsx \u7684\u6587\u4ef6\u4fee\u590d\u7801\u98ce\u3002 \u4e0d\u8fc7\u8981\u6ce8\u610f\u7684\u662f\uff0c\u81ea\u52a8\u4fee\u590d\u80fd\u529b\u6709\u9650\uff0c\u6240\u4ee5\u66f4\u591a\u7684\u65f6\u5019\u8fd8\u9700\u8981\u624b\u52a8\u5bf9\u6587\u4ef6\u8fdb\u884c\u4e00\u4e9b\u8c03\u6574\u3002\u81ea\u52a8\u4fee\u590d\u4e5f\u6709\u53ef\u80fd\u4f1a\u51fa\u9519\uff0c\u8fd9\u4e2a\u65f6\u5019\u53ef\u4ee5\u81ea\u5df1\u624b\u52a8\u6dfb\u52a0\u8ba9 ESLint \u5ffd\u7565\u8fd9\u4e00\u90e8\u5206\u7684\u6ce8\u91ca\u3002","title":"\u73af\u5883\u914d\u7f6e"},{"location":"frontend/react/prepare/#_1","text":"","title":"\u73af\u5883\u914d\u7f6e"},{"location":"frontend/react/prepare/#_2","text":"\u5728\u7ee7\u7eed\u4e0b\u9762\u7684\u73af\u5883\u914d\u7f6e\u4e4b\u524d\uff0c\u672c\u6587\u6863\u9ed8\u8ba4\u4e86\u4f60\u5df2\u7ecf\u5b89\u88c5\u4e86\u9ad8\u4e8e v12 \u7684 node \uff0c\u5e76\u4e14\u53ef\u4ee5\u4f7f\u7528 npm install \u3002 \u5982\u679c\u5b89\u88c5 Node.js \u6216\u8005 npm \u9047\u5230\u56f0\u96be\uff0c\u53ef\u4ee5\u53c2\u8003 Node.js \u7684\u5f15\u5bfc\u6587\u6863 \u3002","title":"\u524d\u7f6e\u73af\u5883\u914d\u7f6e"},{"location":"frontend/react/prepare/#yarn-npm","text":"\u8fd9\u662f\u4e00\u4e2a \u53ef\u9009\u9879 \uff0c\u5728\u5b9e\u9645\u5de5\u7a0b\u4e4b\u4e2d\u4e24\u8005\u5e76\u6ca1\u6709\u672c\u8d28\u4e0a\u7684\u5dee\u522b\u3002\u4e0e\u5e38\u7528\u7684 npm \u76f8\u6bd4\uff0c yarn \u5927\u591a\u60c5\u51b5\u4e0b\u5177\u6709\u66f4\u5feb\u7684\u4e0b\u8f7d\u901f\u5ea6\u548c\u66f4\u4e3a\u6e05\u6670\u7684\u547d\u4ee4\u884c\u8f93\u51fa\u3002\u6240\u4ee5\u6211\u4eec\u66f4\u52a0\u63a8\u8350\u4f7f\u7528 yarn \u3002 \u8fd9\u91cc\u4e0d\u5177\u4f53\u53d9\u8ff0\u5b89\u88c5\u8fc7\u7a0b\uff0c\u53ef\u4ee5\u53c2\u8003 \u5b98\u7f51 \u4e0a\u7ed9\u51fa\u7684\u65b9\u5f0f\u8fdb\u884c\u5b89\u88c5\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 npm install yarn -g \u547d\u4ee4\u5b89\u88c5\uff08\u540e\u8005\u53ef\u80fd\u4e0d\u9002\u7528\u4e8e Linux \u7528\u6237\uff09\u3002 yarn \u7684\u547d\u4ee4\u548c npm \u7684\u547d\u4ee4\u5927\u81f4\u5177\u6709\u4ee5\u4e0b\u5bf9\u5e94\u5173\u7cfb\uff0c\u66f4\u7ec6\u8282\u7684\u5173\u7cfb\u5219\u53ef\u4ee5\u53c2\u8003 npm \u7684\u5f15\u5bfc\u6587\u6863 \uff1a npm yarn \u5b89\u88c5\u6307\u5b9a\u7b2c\u4e09\u65b9\u5e93 npm install react --save yarn add react \u79fb\u9664\u6307\u5b9a\u7b2c\u4e09\u65b9\u5e93 npm uninstall react --save yarn remove react \u5f00\u53d1\u6a21\u5f0f\u4e0b\u5b89\u88c5 npm install react --save-dev yarn add react --dev","title":"\u4f7f\u7528 yarn \u4ee3\u66ff npm"},{"location":"frontend/react/prepare/#typescript","text":"TypeScript \u662f JavaScript \u7684\u8d85\u96c6\u3002\u7b80\u800c\u8a00\u4e4b\uff0cTypeScript \u5c31\u662f\u5e26\u6709\u7c7b\u578b\u7cfb\u7edf\u7684 JavaScript\u3002TypeScript \u4ee3\u7801\u53ef\u4ee5\u76f4\u63a5\u88ab\u7f16\u8bd1\u4e3a JavaScript \u4ee3\u7801\u5e76\u6267\u884c\u3002 \u5b89\u88c5 TypeScript \u662f\u7b80\u5355\u7684\uff1a 1 2 3 4 5 # yarn yarn global add typescript # npm npm install -g typescript \u5b89\u88c5\u540e\u53ef\u4ee5\u5728\u67d0\u4e00\u76ee\u5f55\u4e0b\u65b0\u5efa hello.ts \u6587\u4ef6\uff0c\u8f93\u5165\u4ee5\u4e0b\u4ee3\u7801\uff1a 1 2 let a : string = \"Hello world!\" ; console . log ( a ); \u5e76\u5728\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u6267\u884c\uff1a 1 tsc hello.ts \u5982\u679c\u5b89\u88c5\u987a\u5229\uff0c\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u5e94\u5f53\u4f1a\u51fa\u73b0\u7f16\u8bd1\u751f\u6210\u7684 hello.js \u6587\u4ef6\uff0c\u4f7f\u7528\u547d\u4ee4 node hello.js \u5e94\u5f53\u5c31\u53ef\u4ee5\u770b\u5230\u547d\u4ee4\u884c\u8f93\u51fa\u7684\u95ee\u5019\u8bed\u3002","title":"\u5b89\u88c5 TypeScript"},{"location":"frontend/react/prepare/#react-react","text":"React \u6846\u67b6\u7684\u5b89\u88c5\u53ef\u4ee5\u901a\u8fc7\u811a\u624b\u67b6 create-react-app \u5b8c\u6210\uff0c\u4e00\u822c\u800c\u8a00\u5b89\u88c5\u6846\u67b6\u8fd9\u4e00\u8fc7\u7a0b\u53ef\u4ee5\u96c6\u6210\u5728\u521b\u5efa\u5e94\u7528\u7684\u8fc7\u7a0b\u4e2d\u5b8c\u6210\u3002 \u8fdb\u5165\u5230\u4f60\u60f3\u8981\u521b\u5efa\u5e94\u7528\u7684\u76ee\u5f55\u4e0b\uff0c\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a 1 2 3 4 5 6 7 # npm 5.2+ npm install create-react-app -g npx create-react-app <app-path> --template typescript # yarn 0.25+ yarn global add create-react-app yarn create react-app <app-path> --template typescript \u8fd9\u91cc <app-path> \u662f\u4f60\u7684\u5e94\u7528\u7684\u76ee\u5f55\u7684\u8def\u5f84\u3002\u8fd9\u4e9b\u547d\u4ee4\u4f1a\u521b\u5efa\u4e00\u4e2a\u4f7f\u7528 TypeScript \u5f00\u53d1\u7684 React \u5e94\u7528\uff0c\u5e76\u5b89\u88c5 React \u6846\u67b6\u3002 \u5982\u679c\u5b89\u88c5\u987a\u5229\uff0c\u4f7f\u7528\u547d\u4ee4\uff1a 1 2 3 4 5 # npm npm run start # yarn yarn start \u5373\u53ef\u7f16\u8bd1\u6574\u4e2a\u5e94\u7528\uff0c\u968f\u540e\u5e94\u5f53\u5c31\u53ef\u4ee5\u901a\u8fc7\u672c\u5730 3000 \u7aef\u53e3\u8bbf\u95ee\u5230 React \u7684\u6b22\u8fce\u754c\u9762\u4e86\u3002 \u4f7f\u7528\u6211\u4eec\u63d0\u4f9b\u7684\u6846\u67b6 \u4e3a\u4e86\u66f4\u597d\u5730\u9605\u8bfb\u672c\u6587\u6863\uff0c\u6211\u4eec\u63a8\u8350\u4e0b\u8f7d\u6211\u4eec\u63d0\u4f9b\u7684\u7b80\u5316\u7248 React \u6846\u67b6\u3002\u6211\u4eec\u63d0\u4f9b\u7684\u6846\u67b6\u4e2d\u4ec5\u4fdd\u7559\u4e86\u6700\u57fa\u7840\u3001\u6700\u5fc5\u8981\u7684\u4ee3\u7801\u6587\u4ef6\u3002 \u4f7f\u7528\u6211\u4eec\u63d0\u4f9b\u7684\u6846\u67b6\u4e4b\u524d\uff0c\u6211\u4eec\u5e0c\u671b\u4f60\u5df2\u7ecf\u901a\u8fc7\u4e0a\u8ff0\u6b65\u9aa4\u6210\u529f\u521d\u59cb\u5316\u4e86\u4e00\u4e2a\u65b0\u7684 React \u5e94\u7528\u5e76\u80fd\u591f\u5728 3000 \u7aef\u53e3\u8bbf\u95ee\u5230\u6b22\u8fce\u754c\u9762\u3002\u5982\u679c\u5df2\u7ecf\u786e\u8ba4\u521d\u59cb\u5316\u6210\u529f\uff0c\u53ef\u4ee5\u901a\u8fc7 \u8be5\u94fe\u63a5 \u4e0b\u8f7d\u538b\u7f29\u5305\uff0c\u8bf7\u5728\u89e3\u538b\u540e\u4f7f\u7528\u538b\u7f29\u5305\u5185\u7684 src \u6587\u4ef6\u5939\u66ff\u6362\u4f60\u7684 React \u5e94\u7528\u7684 src \u6587\u4ef6\u5939\uff0c\u5e76\u518d\u6b21\u4f7f\u7528 npm run start \u6216\u8005 yarn start \u547d\u4ee4\u8fd0\u884c React \u5e94\u7528\u3002 \u5982\u679c\u4f60\u73b0\u5728\u80fd\u591f\u5728 3000 \u7aef\u53e3\u8bbf\u95ee\u5230\u4e00\u4e2a\u5199\u6709 Hello, React! \u5b57\u6837\u7684\u9875\u9762\uff0c\u5219\u5df2\u7ecf\u5b8c\u6210\u4e86\u914d\u7f6e\u3002","title":"\u5b89\u88c5 React \u6846\u67b6 &amp; \u521b\u5efa React \u5e94\u7528"},{"location":"frontend/react/prepare/#eslint","text":"\u8fd9\u662f\u4e00\u4e2a \u53ef\u9009\u9879 \uff0c\u4f46\u662f\u6211\u4eec\u8ba4\u4e3a\u5f00\u53d1\u8f83\u5927\u5de5\u7a0b\u7684\u65f6\u5019\uff0c\u5c24\u5176\u662f\u9700\u8981\u591a\u4eba\u534f\u4f5c\u7684\u65f6\u5019\uff0c\u7edf\u4e00\u7684\u7801\u98ce\u662f\u5fc5\u8981\u7684\u3002 \u5728\u5e94\u7528\u76ee\u5f55\u4e0b\u6267\u884c\u4e0b\u5217\u547d\u4ee4\uff0c\u5373\u53ef\u521d\u6b65\u914d\u7f6e\u4e00\u4e2a ESLint\uff1a 1 2 3 4 5 6 7 # npm npm install eslint --save-dev ./node_modules/.bin/eslint --init # yarn yarn add eslint --dev ./node_modules/.bin/eslint --init \u6267\u884c\u7b2c\u4e8c\u6761\u547d\u4ee4\u540e\uff0cESLint \u4f1a\u8be2\u95ee\u4f60\u7684\u914d\u7f6e\u3002\u5bf9\u4e8e\u524d\u51e0\u4e2a\u95ee\u9898\u6211\u4eec\u5efa\u8bae\u9009\u62e9\u201c\u5f3a\u5236\u8c03\u6574\u7801\u98ce\u201d \u201c\u4f7f\u7528 JavaScript modules(import/export) \u201d \u201c\u4f7f\u7528 React \u6846\u67b6\u201d \u201c\u4f7f\u7528 TypeScript \u201d \u201c\u5728\u6d4f\u89c8\u5668\u4e0a\u8fd0\u884c\u4ee3\u7801\u201d\u3002 \u540e\u7eed\u5219\u662f\u5bf9\u5177\u4f53\u7801\u98ce\u89c4\u5219\u7684\u914d\u7f6e\uff0c\u4f60\u53ef\u4ee5\u56de\u7b54\u5177\u4f53\u95ee\u9898\u6216\u9009\u62e9\u4f7f\u7528\u6a21\u677f\uff0c\u4e5f\u53ef\u4ee5\u6682\u4e14\u4e0d\u56de\u7b54\u800c\u9009\u62e9\u540e\u7eed\u624b\u52a8\u914d\u7f6e .eslintrc \u6587\u4ef6\u4e2d\u7684\u7801\u98ce\u89c4\u5219\u3002 \u4e0b\u9762\u6211\u4eec\u5e0c\u671b\u80fd\u591f\u4e00\u952e\u8c03\u6574\u7801\u98ce\uff0c\u6bd4\u5982\u8bf4\u7ec8\u7aef\u6267\u884c yarn fix \u5c31\u53ef\u4ee5\u4fee\u590d\u6240\u6709\u6e90\u4ee3\u7801\u7684\u7801\u98ce\u3002\u73b0\u5728\u6253\u5f00 package.json \u6587\u4ef6\uff0c\u53ef\u4ee5\u6ce8\u610f\u5230\u8fd9\u6837\u7684\u4e00\u6bb5\uff1a 1 2 3 4 5 6 \"scripts\" : { \"start\" : \"react-scripts start\" , \"build\" : \"react-scripts build\" , \"test\" : \"react-scripts test\" , \"eject\" : \"react-scripts eject\" } \u5728\u6700\u540e\u6dfb\u52a0\u4e00\u884c\uff1a 1 2 3 4 \"scripts\" : { ... \"fix\" : \"./node_modules/.bin/eslint src --ext .js,.jsx,.ts,.tsx --fix\" } \u8fd9\u4e00\u884c\u7684\u610f\u601d\u662f\u6267\u884c yarn fix \u7684\u65f6\u5019\u4f1a\u4f7f\u7528 ESLint \u5c06 src \u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6269\u5c55\u540d\u4e3a js / jsx / ts / tsx \u7684\u6587\u4ef6\u4fee\u590d\u7801\u98ce\u3002 \u4e0d\u8fc7\u8981\u6ce8\u610f\u7684\u662f\uff0c\u81ea\u52a8\u4fee\u590d\u80fd\u529b\u6709\u9650\uff0c\u6240\u4ee5\u66f4\u591a\u7684\u65f6\u5019\u8fd8\u9700\u8981\u624b\u52a8\u5bf9\u6587\u4ef6\u8fdb\u884c\u4e00\u4e9b\u8c03\u6574\u3002\u81ea\u52a8\u4fee\u590d\u4e5f\u6709\u53ef\u80fd\u4f1a\u51fa\u9519\uff0c\u8fd9\u4e2a\u65f6\u5019\u53ef\u4ee5\u81ea\u5df1\u624b\u52a8\u6dfb\u52a0\u8ba9 ESLint \u5ffd\u7565\u8fd9\u4e00\u90e8\u5206\u7684\u6ce8\u91ca\u3002","title":"\u4f7f\u7528 ESLint \u89c4\u8303\u7801\u98ce"},{"location":"frontend/swiftui/","text":"SwiftUI \u662f\u7528\u4e8e iOS/macOS/watchOS/tvOS \u7b49\u5e73\u53f0\u7684\u901a\u7528\u539f\u751f UI \u6846\u67b6\uff0c\u4f7f\u7528\uff08\u4e14\u4ec5\u9002\u7528\u4e8e\uff09Swift \u8bed\u8a00\uff0c\u4e8e WWDC19 \uff082019 \u5e74\uff09\u63a8\u51fa\uff0c\u652f\u6301 iOS 13.0+\u3001macOS 10.15+ \u7b49\u3002 SwiftUI \u57fa\u4e8e\u5404\u5e73\u53f0\u539f\u6709\u7684 UI \u6846\u67b6\u5f00\u53d1\uff0c\u5982 iOS \u7684 UIKit\uff0cmacOS \u7684 AppKit \u7b49\u3002\u76f8\u5bf9\u4e8e\u8fd9\u4e9b\u6846\u67b6\uff0cSwiftUI \u7684\u6982\u5ff5\u66f4\u52a0\u7b80\u5355\uff0c\u4e14\u6784\u5efa\u65b9\u5f0f\u66f4\u52a0\u7b26\u5408\u76f4\u89c9\uff0c\u9010\u6e10\u6210\u4e3a\u5165\u95e8 iOS \u5f00\u53d1\u7684\u9996\u9009\u3002 SwiftUI \u5728\u7ecf\u5386\u51e0\u5e74\u7684\u53d1\u5c55\u540e\u5df2\u7ecf\u9010\u6e10\u5b8c\u5584\uff0c\u57fa\u672c\u4e0a\u53ef\u4ee5\u80dc\u4efb\u5c0f\u578b\u5e94\u7528\u7684\u5f00\u53d1\u3002\u4ee4\u4eba\u9057\u61be\u7684\u662f\uff0c\u76ee\u524d\uff082022 \u5e74 1 \u6708\uff09\u7531\u4e8e SwiftUI \u4ecd\u5728\u53d1\u5c55\u521d\u671f\uff0ciOS \u5f00\u53d1\u4e2d\u67d0\u4e9b\u590d\u6742\u7684\u529f\u80fd\u9700\u8981\u4f9d\u8d56 UIKit \u5b9e\u73b0\uff0c\u56e0\u6b64\u53ea\u5b66\u4e60 SwiftUI \u53ef\u80fd\u5e76\u4e0d\u80fd\u591f\u652f\u6301\u67d0\u4e9b\u8f83\u4e3a\u590d\u6742\u5e94\u7528\u7684\u5f00\u53d1\u3002\u672c\u6587\u4ec5\u4ecb\u7ecd\u7eaf SwiftUI \u6846\u67b6\uff0c\u4e0e UIKit \u76f8\u5173\u7684\u5185\u5bb9\u53ef\u4ee5\u53c2\u8003 Stanford CS193p 2020 \u5e74\u4e4b\u524d\u7684\u8bfe\u7a0b \uff082020 \u5e74\u5f00\u59cb\u8be5\u8bfe\u7a0b\u6539\u4e3a SwiftUI\uff09\u3002 \u524d\u7f6e\u77e5\u8bc6 \u00b6 Swift \u8bed\u8a00\u57fa\u672c\u77e5\u8bc6\uff0c\u5efa\u8bae\u5148\u9605\u8bfb Swift \u8bed\u8a00\u57fa\u7840 \u3002 \u73af\u5883\u914d\u7f6e \u00b6 \u76ee\u524d\u652f\u6301 iOS \u5f00\u53d1\u7684\u5e73\u53f0\u6709 macOS \u548c iPadOS\u3002\u672c\u6559\u7a0b\u57fa\u4e8e iOS 15 SDK\uff0c\u9700\u8981\uff1a macOS\uff1a Xcode 13.0 \u4ee5\u4e0a\u7248\u672c iPadOS\uff1a Swift Playgrounds 4.0 \u4ee5\u4e0a\u7248\u672c \u672c\u6559\u7a0b\u57fa\u4e8e iPadOS \u4e0a 4.0 \u7248\u672c\u7684 Swift Playgrounds\uff0cmacOS \u4e0a 13.2 \u4ee5\u4e0a\u7248\u672c\u7684 Xcode \u62e5\u6709\u7c7b\u4f3c\u7684\u73af\u5883\u3002\u90e8\u5206\u622a\u5c4f\u5728 Xcode \u4e0b\u83b7\u5f97\u3002 \u5b66\u4e60\u8d44\u6e90 \u00b6 \u53ef\u4ee5\u53c2\u8003\u5982\u4e0b\u8d44\u6e90\uff1a Swift \u5b98\u65b9\u6587\u6863 \uff1a\u6743\u5a01\u7684\u8bed\u8a00\u548c\u6807\u51c6\u5e93\u53c2\u8003 WWDC Sessions \uff1aWWDC \u4e0a\u5b98\u65b9\u7684 API\u3001\u8bed\u8a00\u7b49\u4ecb\u7ecd Stanford CS193p \uff1a\u65af\u5766\u798f SwiftUI \u8bfe\u7a0b Stack Overflow \uff1a\u641c\u7d22\u65f6\u52a0\u4e0a iOS \u3001 Swift \u3001 SwiftUI \u7b49\u5173\u952e\u8bcd Hacking with Swift \uff1a\u6bd4\u8f83\u5168\u9762\u7684 Swift \u548c iOS \u5404\u79cd API \u7684\u6559\u7a0b The SwiftUI Lab \uff1a\u5bf9 SwiftUI \u7684\u4e00\u4e9b\u6df1\u5ea6\u63a2\u7d22","title":"SwiftUI \u4e0e iOS \u5f00\u53d1\u5165\u95e8"},{"location":"frontend/swiftui/#_1","text":"Swift \u8bed\u8a00\u57fa\u672c\u77e5\u8bc6\uff0c\u5efa\u8bae\u5148\u9605\u8bfb Swift \u8bed\u8a00\u57fa\u7840 \u3002","title":"\u524d\u7f6e\u77e5\u8bc6"},{"location":"frontend/swiftui/#_2","text":"\u76ee\u524d\u652f\u6301 iOS \u5f00\u53d1\u7684\u5e73\u53f0\u6709 macOS \u548c iPadOS\u3002\u672c\u6559\u7a0b\u57fa\u4e8e iOS 15 SDK\uff0c\u9700\u8981\uff1a macOS\uff1a Xcode 13.0 \u4ee5\u4e0a\u7248\u672c iPadOS\uff1a Swift Playgrounds 4.0 \u4ee5\u4e0a\u7248\u672c \u672c\u6559\u7a0b\u57fa\u4e8e iPadOS \u4e0a 4.0 \u7248\u672c\u7684 Swift Playgrounds\uff0cmacOS \u4e0a 13.2 \u4ee5\u4e0a\u7248\u672c\u7684 Xcode \u62e5\u6709\u7c7b\u4f3c\u7684\u73af\u5883\u3002\u90e8\u5206\u622a\u5c4f\u5728 Xcode \u4e0b\u83b7\u5f97\u3002","title":"\u73af\u5883\u914d\u7f6e"},{"location":"frontend/swiftui/#_3","text":"\u53ef\u4ee5\u53c2\u8003\u5982\u4e0b\u8d44\u6e90\uff1a Swift \u5b98\u65b9\u6587\u6863 \uff1a\u6743\u5a01\u7684\u8bed\u8a00\u548c\u6807\u51c6\u5e93\u53c2\u8003 WWDC Sessions \uff1aWWDC \u4e0a\u5b98\u65b9\u7684 API\u3001\u8bed\u8a00\u7b49\u4ecb\u7ecd Stanford CS193p \uff1a\u65af\u5766\u798f SwiftUI \u8bfe\u7a0b Stack Overflow \uff1a\u641c\u7d22\u65f6\u52a0\u4e0a iOS \u3001 Swift \u3001 SwiftUI \u7b49\u5173\u952e\u8bcd Hacking with Swift \uff1a\u6bd4\u8f83\u5168\u9762\u7684 Swift \u548c iOS \u5404\u79cd API \u7684\u6559\u7a0b The SwiftUI Lab \uff1a\u5bf9 SwiftUI \u7684\u4e00\u4e9b\u6df1\u5ea6\u63a2\u7d22","title":"\u5b66\u4e60\u8d44\u6e90"},{"location":"frontend/swiftui/build-views/","text":"\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u5c55\u5f00\u4ecb\u7ecd\u5982\u4f55\u6784\u5efa View\u3002 View \u7684\u7ec4\u5408\u65b9\u5f0f \u00b6 \u5728 body \u4e2d\uff0c\u6709\u4e00\u4e9b\u975e\u5e38\u65b9\u4fbf\u7684\u65b9\u5f0f\u6765\u7ec4\u5408\u4e0d\u540c\u7684 View\u3002\u53e6\u5916\uff0c body \u8fd8\u5bf9\u5176\u4e2d\u7684\u8868\u8fbe\u5f0f\u6709\u4e00\u5b9a\u7684\u9650\u5236\u3002 \u7ec4\u5408 \u00b6 \u5728 body \u4e2d\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u8fd9\u51e0\u79cd\u65b9\u5f0f\u7ec4\u5408\u591a\u4e2a View\uff0c \u4e0d\u9700\u8981\u5199\u51fa return \uff1a \u6761\u4ef6\u63a7\u5236\u8bed\u53e5 \u4f60\u53ef\u4ee5\u7528 if-else \u8bed\u53e5\u6709\u6761\u4ef6\u5730\u663e\u793a\u4e0d\u540c\u7684 View\uff1a 1 2 3 4 5 6 7 if type == . text { Text ( \"Hello, world!\" ) } else if type == . image { Image ( \"hello-world\" ) } else { Color . blue } \u6216\u8005\uff0c\u53ea\u6709 if \uff1a 1 2 3 if revealGrade { Text ( student . gpa ) } \u5f53\u7136\uff0c if let \u8bed\u53e5\u4e5f\u662f\u53ef\u4ee5\u7684\uff1a 1 2 3 if let npyName = student . npyName { Text ( npyName ) } \u4f60\u8fd8\u53ef\u4ee5\u7528 switch \uff1a\uff08\u5b9e\u9645\u4e0a\u7f16\u8bd1\u5668\u5c06\u5176\u8f6c\u5316\u4e3a if-else \u8bed\u53e5\uff09 1 2 3 4 5 switch type { case . text : Text ( \"Hello, world!\" ) case . image : Image ( \"hello-world\" ) default : Color . blue } \u591a\u4e2a View \u4f60\u53ef\u4ee5\u4e00\u6b21\u8fd4\u56de\u591a\u4e2a View\uff0c\u8fd9\u79cd View \u53eb\u505a TupleView \uff1a 1 2 3 Text ( \"Hello, world!\" ) Image ( \"hello-world\" ) Color . blue \u4e00\u822c\u8fd9\u79cd TupleView \u591a\u7528\u4e8e View \u7684\u6392\u5217\u3002\u6bd4\u5982\uff0c\u5c06\u51e0\u4e2a View \u5728\u5782\u76f4\u65b9\u5411\u4f9d\u6b21\u6392\u5217\uff1a 1 2 3 4 VStack { Text ( \"Hello, world!\" ) Image ( \"hello-world\" ) } \u6211\u4eec\u5c06\u5728\u4e0b\u9762\u8fdb\u4e00\u6b65\u4ecb\u7ecd View \u7684\u6392\u5217\u3002 VStack \u6784\u9020\u51fd\u6570\u7684\u53c2\u6570 \u4e0a\u9762\u7684 VStack \u4ee5\u53ca\u5927\u62ec\u53f7\u5305\u62ec\u7684\u5185\u5bb9\uff0c\u5b9e\u9645\u4e0a\u662f VStack \u7684\u6784\u9020\u51fd\u6570\u3002\u6839\u636e\u6587\u6863\uff0c VStack \u6784\u9020\u51fd\u6570\u7684\u7b7e\u540d\u5982\u4e0b\uff1a 1 init ( alignment : HorizontalAlignment = . center , spacing : CGFloat ? = nil , content : () -> Content ) \u6211\u4eec\u524d\u4e24\u4e2a\u53c2\u6570\u4f7f\u7528\u4e86\u63d0\u4f9b\u7684\u9ed8\u8ba4\u503c\uff0c\u6211\u4eec\u63d0\u4f9b\u7684\u5b9e\u9645\u4e0a\u662f\u7b2c\u4e09\u4e2a\u53c2\u6570 content \uff1a\u5b83\u662f\u4e00\u4e2a \u65e0\u53c2\u6570\u3001\u8fd4\u56de\u503c\u4e3a Content \u7684\u533f\u540d\u51fd\u6570 \u3002\uff08\u8fd9\u91cc\u7684 Content \u662f VStack \u7684\u6a21\u7248\u53c2\u6570\uff0c\u8868\u793a\u300c\u5185\u5bb9 View \u7684\u7c7b\u578b\u300d\uff09 \u5728 Swift \u4e2d\uff0c\u5982\u679c\u51fd\u6570\u7684\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u4e3a\u51fd\u6570\uff0c\u90a3\u4e48\u5b83\u53ef\u4ee5\u5199\u5230\u62ec\u53f7\u5916\u9762\uff0c\u5e76\u4e14\u7701\u7565\u6807\u7b7e\u3002\u4e0a\u9762 VStack \u7684\u6784\u9020\u51fd\u6570\u5b9e\u9645\u4e0a\u662f\uff1a 1 2 3 4 VStack ( content : { Text ( \"Hello, world!\" ) Image ( \"hello-world\" ) }) \u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c content \u7684\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u662f TupleView<(Text, Image)> \uff0c\u5e76\u4e0d\u662f\u4e00\u4e2a\u771f\u6b63\u7684 Tuple \u3002 \u8868\u8fbe\u5f0f \u00b6 body \u4e0e\u666e\u901a\u51fd\u6570\u4e0d\u540c\uff0c\u5b83\u5bf9\u51fd\u6570\u4f53\u5185\u7684\u5141\u8bb8\u7684\u8868\u8fbe\u5f0f\u6709\u9650\u5236\u3002 \u540c\u65f6\u8fdb\u884c\u53d8\u91cf\u7684\u58f0\u660e\u548c\u8d4b\u503c\u662f\u5141\u8bb8\u7684\uff1a 1 2 3 4 var body : some View { let description = x > 127 ? \"overflow\" : \"normal\" Text ( description ) } \u4f46 var \u548c let \u7684\u58f0\u660e\u3001\u8d4b\u503c\u8868\u8fbe\u5f0f\u4e0d\u88ab\u5141\u8bb8\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 // Error: Closure containing a declaration cannot be used with result builder 'ViewBuilder' var body : some View { var description : String ... } // Error: Type '()' cannot conform to 'View' var body : some View { var description = \"\" description = \"hello\" ... } \u53e6\u5916\uff0c for \u5faa\u73af\u4e5f\u662f\u4e0d\u88ab\u5141\u8bb8\u7684\u3002\u6211\u4eec\u6709\u53e6\u5916\u7684\u65b9\u6cd5\u8fdb\u884c\u7c7b\u4f3c\u7684\u8fed\u4ee3\u3002 \u4e0a\u8ff0\u4f8b\u5b50\u4e2d\uff0c\u7c7b\u578b\u9075\u5faa View \u7684\u503c\uff08\u5982 Text(description) \uff09\u4f1a\u4f5c\u4e3a\u90e8\u5206\u7ed3\u679c\uff08partial result\uff09\u9012\u5f52\u5730\u53c2\u4e0e body \u6700\u540e\u7ed3\u679c\u7684\u8ba1\u7b97\uff0c\u800c\u5176\u4f59\u5141\u8bb8\u7684\u8868\u8fbe\u5f0f\uff08\u5982 let description = x > 127 ? \"overflow\" : \"normal\" \uff09\u5728\u8ba1\u7b97 body \u7684\u503c\u7684\u65f6\u5019\u4f1a\u88ab\u5ffd\u7565\u3002 \u7b80\u5355\u4ecb\u7ecd ViewBuilder \u5b9e\u9645\u4e0a\uff0c body \u4e4b\u6240\u4ee5\u80fd\u591f\u6709\u8fd9\u4e9b\u7279\u6027\uff0c\u662f\u56e0\u4e3a body \u6709\u9690\u5f0f\u7684 @ViewBuilder \u4fee\u9970\uff1a 1 2 3 4 protocol View { associatedtype Body : View @ ViewBuilder var body : Body { get } } \u88ab @ViewBuilder \u4fee\u9970\u7684\u51fd\u6570\uff0c\u4e0d\u4f7f\u7528\u663e\u5f0f\u7684 return \u6765\u8fd4\u56de\uff0c\u800c\u662f\u901a\u8fc7\u201c\u6536\u96c6\u201d\u51fd\u6570\u4f53\u4e2d\u7684 View \u6765\u6784\u5efa\u6700\u7ec8\u7684\u8fd4\u56de\u503c\u3002\u6bd4\u5982\uff1a 1 2 3 let greeting = \"Hello\" Text ( greeting ) Color . blue \u7f16\u8bd1\u5668\u201c\u6536\u96c6\u201d\u5230\u4e24\u4e2a View\uff1a Text \u548c Color \uff08\u5ffd\u7565 let greeting = \"Hello\" \uff09\u3002\u63a5\u7740\uff0c\u8c03\u7528 ViewBuilder \u7684\u4e00\u4e2a\u6784\u5efa View \u7684\u51fd\u6570\uff1a 1 static func buildBlock < C0 , C1 >( _ c0 : C0 , _ c1 : C1 ) -> TupleView < ( C0 , C1 ) > where C0 : View , C1 : View \u8fd9\u4e2a\u51fd\u6570\u63a5\u53d7\u4e24\u4e2a View \u4f5c\u4e3a\u53c2\u6570\uff0c\u6700\u7ec8\u751f\u6210 \u5355\u4e2a \u8fd4\u56de\u503c TupleView<(Text, Color)> \u3002 \u5176\u4ed6\u7684\u7279\u6027\uff0c\u6bd4\u5982 if-else \u8bed\u53e5\uff0c\u90fd\u662f\u7531\u7c7b\u4f3c\u7684\u673a\u5236\u6765\u5b9e\u73b0\u7684\u3002\u4e0d\u96be\u7406\u89e3\uff0c\u53ea\u8981\u4e0d\u65ad\u9012\u5f52\u5730\u5c06 View \u5408\u5e76\uff0c\u6700\u7ec8\u5c31\u80fd\u751f\u6210\u4e00\u4e2a\u5355\u4e00\u7684\u8fd4\u56de\u503c\u3002 ViewBuilder \u7684\u673a\u5236\u5b9e\u9645\u4e0a\u662f\u901a\u8fc7\u4e00\u79cd\u53eb result builder \u7684\u8bed\u6cd5\u5b9e\u73b0\u7684\u3002\u5982\u679c\u611f\u5174\u8da3\u53ef\u4ee5\u53c2\u8003 SE0289: Result builders \u3002 \u4e00\u4e9b\u5e38\u7528\u7684 View \u00b6 \u6211\u4eec\u7ec8\u4e8e\u57fa\u672c\u4ecb\u7ecd\u5b8c\u76f8\u5173\u7684\u8bed\u6cd5\u89c4\u5219\u4e86\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u5229\u7528\u5404\u79cd\u539f\u751f\u7684 View \u6765\u6784\u5efa\u6211\u4eec\u7684 UI \u4e86\u3002\u5728\u8fd9\u91cc\u53ea\u4f1a\u4ecb\u7ecd\u5404\u79cd View \u6700\u57fa\u672c\u7684\u7528\u6cd5\uff0c\u5176\u4f59\u7528\u6cd5\u8bf7\u53c2\u8003\u5f00\u53d1\u8005\u6587\u6863\u3002 \u4f60\u6700\u597d\u4eb2\u81ea\u5c1d\u8bd5\u4e00\u4e0b\u4e0b\u9762\u7684\u4ee3\u7801\uff0c\u5e76\u5728\u9884\u89c8\u6a21\u5f0f\u4e2d\u5b9e\u65f6\u67e5\u770b\u3002 \u7ec4\u4ef6 \u00b6 \u53ea\u8bfb\u6587\u672c Text \u7528\u4e8e\u663e\u793a\u53ea\u8bfb\u6587\u672c\u3002 \u4f60\u53ef\u4ee5\u4ece\u5b57\u7b26\u4e32\u521b\u5efa\uff1a 1 2 3 4 Text ( \"Hello, world!\" ) let string = \"Hello, world!\" Text ( string ) \u7ed3\u679c\u4e3a\uff1a \u4e5f\u53ef\u4ee5\u7528 Markdown \u5b57\u7b26\u4e32\u521b\u5efa\u5e26\u683c\u5f0f\u7684\u6587\u672c\u3002\u6ce8\u610f\u53ea\u6709\u5b57\u9762\u503c\u80fd\u591f\u76f4\u63a5\u6e32\u67d3\u4e3a Markdown \u683c\u5f0f\uff0c\u5bf9\u4e8e\u5b57\u7b26\u4e32\u53d8\u91cf\u9700\u8981 AttributedString \uff1a 1 2 3 4 5 Text ( \"Hello, *world*!\" ) let string = \"Hello, *world*!\" let attrStr = try ! AttributedString ( markdown : string ) Text ( attrStr ) \u7ed3\u679c\u4e3a\uff1a \u53ef\u4ee5\u4f7f\u7528 .font(_:) \u3001 .foregroundColor(_:) \u3001 .italic(_:) \u7b49 modifier \u6539\u53d8\u5b57\u4f53\u3001\u989c\u8272\u7b49\uff1a 1 2 3 4 5 Text ( \"Hello, world!\" ) . font (. system ( size : 24 , weight : . bold , design : . serif )) . italic () . foregroundColor (. blue ) . underline () \u6700\u7ec8\u7684\u6548\u679c\u4e3a\uff1a \u6700\u540e\uff0c\u503c\u5f97\u4e00\u63d0\u7684\u662f Text \u7684\u52a0\u6cd5\u8fd0\u7b97\u7b26\uff0c\u5b83\u53ef\u4ee5\u5c06\u4e24\u4e2a\u6837\u5f0f\u4e0d\u540c\u7684 Text \u62fc\u63a5\u5728\u4e00\u8d77\uff1a 1 2 3 4 let start = Text ( \"L\" ). bold (). font (. title ) let remaining = Text ( \"orem ipsum dolor sit amet, consectetur adipiscing elit....\" ) start + remaining \u6548\u679c\u4e3a\uff1a \u56fe\u7247 Image \u663e\u793a\u56fe\u6807\u6216\u8d44\u6e90\u6587\u4ef6\u56fe\u7247\u3002 \u6dfb\u52a0\u56fe\u7247\u8d44\u6e90\u7684\u65b9\u6cd5 Swift Playgrounds\uff1a\u5c06\u56fe\u7247\u62d6\u52a8\u5230\u6587\u4ef6\u76ee\u5f55\u4e2d Xcode Project\uff1a\u5c06\u56fe\u7247\u62d6\u52a8\u5230 Assets.xcassets \u4e2d\u3002 \u4f7f\u7528 Image(systemName:) \u663e\u793a\u7cfb\u7edf\u56fe\u6807\uff1a 1 Image ( systemName : \"swift\" ) \u7ed3\u679c\u4e3a\uff1a Info \u5173\u4e8e\u7cfb\u7edf\u5185\u7f6e\u56fe\u6807\u7684\u67e5\u8be2\uff0c\u8bf7\u53c2\u8003 SF Symbols \u3002 \u4f7f\u7528 Image(_:) \u663e\u793a\u8d44\u6e90\u6587\u4ef6\u3002 \u6bd4\u5982\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u5982\u4e0b\u56fe\u7684\u540d\u4e3a wwdc21 \u7684\u56fe\u7247\u6587\u4ef6\uff1a \u4ee5\u4e0b\u51e0\u79cd\u4e0d\u540c\u7684\u4ee3\u7801\u4f1a\u4ea7\u751f\u4e0d\u540c\u7684\u7ed3\u679c\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 // Case 1 Image ( \"wwdc21\" ) // Case 2 Image ( \"wwdc21\" ) . resizable () // Case 3 Image ( \"wwdc21\" ) . resizable () . aspectRatio ( contentMode : . fit ) // Case 4 Image ( \"wwdc21\" ) . resizable () . aspectRatio ( contentMode : . fill ) Case 1 Case 2 Case 3 Case 4 \u56fe\u7247\u539f\u6709\u5c3a\u5bf8 \u5360\u6ee1\u53ef\u83b7\u5f97\u7684\u7a7a\u95f4 \u6309\u539f\u6709\u6bd4\u4f8b\u9002\u5408\u7a7a\u95f4 \u6309\u539f\u6709\u6bd4\u4f8b\u5360\u6ee1\u7a7a\u95f4 \u4e00\u4e2a Image \u5982\u679c\u4e0d\u52a0\u4e0a .resizable() \u7684\u8bdd\u53ea\u4f1a\u6309\u7167\u56fa\u6709\u50cf\u7d20\u663e\u793a\uff0c\u53ea\u6709\u52a0\u4e0a .resizable() \u624d\u80fd\u8fdb\u884c\u7f29\u653e\u3002 .aspectRatio(_:contentMode:) \u4f7f\u5f97 Image \u80fd\u591f\u6839\u636e\u53ef\u7528\u7a7a\u95f4\u548c\u957f\u5bbd\u6bd4\u8fdb\u884c\u7f29\u653e\u3002 Image \u7684\u5e03\u5c40\u6027\u8d28 \u6ce8\u610f\uff0c Image \u6240\u5360\u7684\u7a7a\u95f4\u53ef\u80fd\u4f1a\u8d85\u51fa\u53ef\u7528\u7684\u7a7a\u95f4\u3002\u5bf9\u4e8e\u4e0a\u9762\u7684 Case 4\uff0c\u5728 Xcode \u9884\u89c8\u4e2d\u9009\u4e2d\u56fe\u7247\uff0c\u53ef\u4ee5\u770b\u5230\u5176\u5927\u5c0f\uff1a \u8fd9\u79cd\u6027\u8d28\u5728\u5f88\u591a\u5730\u65b9\u4f1a\u6709\u610f\u60f3\u4e0d\u5230\u7684\u6548\u679c\uff0c\u5982\u5373\u5c06\u4ecb\u7ecd\u7684 ZStack \u3002\u5982\u679c\u9700\u8981\u5c06\u56fe\u7247\u9650\u5236\u5728\u53ef\u7528\u7a7a\u95f4\u5185\uff0c\u53ef\u4ee5\u4f7f\u7528 Color \uff0c\u5b83\u4ec5\u5360\u636e\u6240\u6709\u53ef\u7528\u7a7a\u95f4\uff1a 1 2 3 4 5 Color . clear . overlay { Image ( \"wwdc21\" ) . resizable () . aspectRatio ( contentMode : . fill ) } \u56fe\u6807 & \u6587\u5b57 Label \u663e\u793a\u56fe\u6807\u548c\u6587\u5b57\u3002 1 Label ( \"Swift Programming Language\" , systemImage : \"swift\" ) \u6548\u679c\u4e3a\uff1a \u53e6\u5916\uff0c\u4f60\u53ef\u4ee5\u7528 .font(_:) \u4fee\u6539\u5176\u5b57\u4f53\u3002 Label \u7684\u7279\u6b8a\u4e4b\u5904 Label \u76f8\u8f83\u4e8e\u666e\u901a\u7684\u5de6\u53f3\u6392\u5e03\uff08\u63a5\u4e0b\u6765\u8981\u4ecb\u7ecd\u7684 HStack \uff09\u7684\u7279\u6b8a\u4e4b\u5904\u5728\u4e8e\uff0c\u5728\u67d0\u4e9b\u7cfb\u7edf\u539f\u751f\u7684\u6392\u5217\u4e2d\uff0c\u591a\u4e2a Label \u7684\u56fe\u6807\u548c\u6587\u5b57\u4f1a\u81ea\u52a8\u5bf9\u9f50\u3002 \u6309\u94ae Button \u6309\u94ae\u3002 \u6587\u5b57\u6309\u94ae\uff1a 1 2 3 Button ( \"Button\" ) { print ( \"Button pressed\" ) } \u4ee5\u4e00\u4e2a View \u4f5c\u4e3a\u6309\u94ae\uff1a 1 2 3 Button ( action : { print ( \"Button pressed\" ) }) { Image ( systemName : \"swift\" ) } \u4e0a\u9762\u7684\u4ee3\u7801\u4e5f\u53ef\u4ee5\u5199\u6210\uff1a 1 2 3 4 5 Button { print ( \"Button pressed\" ) } label : { Image ( systemName : \"swift\" ) } Multiple Trailing Closures \u5982\u679c\u4e00\u4e2a\u51fd\u6570\u6700\u540e\u82e5\u5e72\u4e2a\u53c2\u6570\u5747\u4e3a\u51fd\u6570\uff0c\u5982\uff1a 1 func foo ( para1 : Int , func1 : () -> Void , func2 : () -> Void , func3 : ( Int ) -> Void ) \u90a3\u4e48\uff0c\u8c03\u7528\u65f6\u8fd9\u4e9b\u51fd\u6570\u53c2\u6570\u53ef\u4ee5\u5199\u5230\u5c0f\u62ec\u53f7\u5916\u9762\uff0c\u7b2c\u4e00\u4e2a\u53ef\u4ee5\u7701\u7565\u6807\u7b7e\uff0c\u5176\u4f59\u9700\u8981\u52a0\u4e0a\u6807\u7b7e\uff1a 1 2 3 4 5 6 7 foo ( para1 : 127 ) { // func1 goes here } func2 : { // func2 goes here } func3 : { value in // func3 goes here } \u8fd9\u79cd\u5199\u6cd5\u662f Swift \u4e2d\u4e00\u79cd\u53eb multiple trailing closures \u7684\u8bed\u6cd5\uff0c\u8be6\u89c1 \u5b98\u65b9\u6587\u6863 \u3002\u8fd9\u79cd\u5199\u6cd5\u80fd\u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\uff0c\u6211\u4eec\u4e4b\u540e\u4f1a\u5c3d\u91cf\u91c7\u7528\u8fd9\u79cd\u5199\u6cd5\u3002 \u53e6\u5916\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 .buttonStyle(_:) \u6765\u4f7f\u7528\u7cfb\u7edf\u9ed8\u8ba4\u7684\u4e00\u4e9b\u6837\u5f0f\uff1a 1 2 3 4 Button ( \"Button\" ) { print ( \"Button pressed\" ) } . buttonStyle (. bordered ) \u6548\u679c\u4e3a\uff1a \u83dc\u5355 Menu \u521b\u5efa\u70b9\u51fb\u663e\u793a\u7684\u83dc\u5355\u3002 1 2 3 4 5 6 7 8 9 10 11 Menu ( \"Actions\" ) { Button ( \"Duplicate\" , action : {...}) Button ( \"Rename\" , action : {...}) Button ( \"Delete\u2026\" , role : . destructive , action : {...}) Divider () Menu ( \"Copy\" ) { Button ( \"Copy\" , action : {...}) Button ( \"Copy Formatted\" , action : {...}) Button ( \"Copy Library Path\" , action : {...}) } } \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u53ef\u4ee5\u5728\u4e00\u4e2a Menu \u4e2d\u5185\u5d4c\u53e6\u4e00\u7ea7 Menu \u3002 \u6548\u679c\u4e3a\uff1a \u53e6\u5916\uff0c\u53ef\u4ee5\u7528\u7c7b\u4f3c\u7684\u65b9\u6cd5\u7ed9\u4efb\u4f55 View \u6dfb\u52a0\u957f\u6309\u83dc\u5355\uff1a 1 2 3 4 5 6 Image ( systemName : \"swift\" ) . contextMenu { Button ( \"Duplicate\" , action : {...}) Button ( \"Rename\" , action : {...}) ... } \u5e03\u5c40\u4e0e\u6392\u5217 \u00b6 \u6c34\u5e73\u5e03\u5c40 HStack \u6c34\u5e73\u5e03\u5c40\u3002 1 2 3 4 5 HStack { Text ( \"Left\" ) Text ( \"Middle\" ) Text ( \"Right\" ) } \u6548\u679c\u4e3a\uff1a \u53e6\u5916\uff0c HStack \u8fd8\u6709\u4e24\u4e2a\u53ef\u9009\u53c2\u6570 alignment \u548c spacing \uff0c\u7528\u4e8e\u8bbe\u7f6e\u5bf9\u9f50\u548c\u95f4\u8ddd\u3002\u6bd4\u5982\uff0c HStack(alignment: .top, spacing: 20) \u5c06\u4f7f\u5b50 View \u5728\u9876\u90e8\u5bf9\u9f50\uff0c\u4e24\u4e24\u4e4b\u95f4\u7684\u95f4\u8ddd\u4e3a 20 \u3002 \u4e0d\u540c View \u5177\u6709\u4e0d\u540c\u7684\u5e03\u5c40\u7279\u6027 \u6ce8\u610f\u5230\uff0c\u4e09\u4e2a Text \u5e76\u6ca1\u6709\u5360\u6ee1\u6240\u6709\u6240\u6709\u7a7a\u95f4\uff0c\u800c\u662f\u53ea\u5360\u636e\u4e86\u6240\u9700\u8981\u7684\u6700\u5c0f\u7a7a\u95f4\uff0c\u8fd9\u662f\u7531 Text \u7684\u5e03\u5c40\u7279\u6027\u51b3\u5b9a\u7684\u3002\u4e0e\u4e4b\u76f8\u5bf9\uff0c Color \u5c06\u5c3d\u53ef\u80fd\u5360\u636e\u591a\u7684\u7a7a\u95f4\uff1a 1 2 3 4 5 HStack { Color . red Color . orange Color . yellow } \u6548\u679c\u4e3a\uff1a \u4e0d\u540c\u7684\u5e03\u5c40\u7279\u6027\u5bf9\u6211\u4eec\u6392\u5e03\u591a\u4e2a View \u6709\u91cd\u8981\u5f71\u54cd\u3002 \u9650\u4e8e\u7bc7\u5e45\uff0c\u8fd9\u90e8\u5206\u5185\u5bb9\u65e0\u6cd5\u5c55\u5f00\u53d9\u8ff0\u3002\u603b\u7684\u6765\u8bf4\uff0c\u539f\u751f View \u6709\u5982\u4e0b\u4e24\u7c7b\u5e03\u5c40\u7279\u6027\uff1a \u4ec5\u5360\u9700\u8981\u7684\u7a7a\u95f4\uff0c\u5982 Text \u3001 Label \u5360\u636e\u5c3d\u53ef\u80fd\u591a\u7684\u7a7a\u95f4\uff0c\u5982 Color \u3001 Spacer \u3001 VStack \u7b49 \u901a\u8fc7 fixedSize \u3001 layoutPriority \u3001 frame \u7b49 modifier\uff0c\u53ef\u4ee5\u66f4\u6539 View \u7684\u5e03\u5c40\u7279\u6027\uff0c\u5728\u6b64\u4e0d\u518d\u5c55\u5f00\u3002 \u5782\u76f4\u5e03\u5c40 VStack \u5782\u76f4\u5e03\u5c40\uff0c\u4e0e HStack \u7c7b\u4f3c\u3002 1 2 3 4 5 VStack { Text ( \"Top\" ) Text ( \"Middle\" ) Text ( \"Bottom\" ) } \u6548\u679c\u4e3a\uff1a \u4e0a\u4e0b\u5e03\u5c40 ZStack \u4e0a\u4e0b\u5e03\u5c40\uff0c\u5148\u5199\u7684 View \u6392\u5e03\u5728\u5e95\u5c42\u3002 1 2 3 4 ZStack { Color . yellow Text ( \"Overlay\" ) } \u6548\u679c\u4e3a\uff1a \u4e0e HStack \u548c VStack \u7c7b\u4f3c\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u6784\u9020\u51fd\u6570\u4e2d\u7684 alignment \u53c2\u6570\u6307\u5b9a\u8fd9\u4e9b View \u5bf9\u9f50\u7684\u65b9\u5f0f\u3002 ZStack \u548c .overlay(_:) \u6211\u4eec\u8fd8\u6709\u53e6\u5916\u4e00\u79cd\u65b9\u5f0f\u8fdb\u884c View \u7684\u5c42\u53e0\uff1a 1 2 3 4 Color . yellow . overlay { Text ( \"Overlay\" ) } \u770b\u4e0a\u53bb\u4e0e ZStack \u5e76\u65e0\u4e8c\u81f4\uff0c\u5176\u5b9e\u4e0d\u7136\u3002\u6211\u4eec\u7528 .frame() \u663e\u793a\u5730\u6307\u5b9a Color.yellow \u7684\u957f\u5bbd\uff0c\u6765\u6bd4\u8f83\u4e00\u4e0b\u8fd9\u4e24\u79cd\u65b9\u5f0f\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 // ZStack ZStack { Color . yellow . frame ( width : 40 , height : 25 ) Text ( \"Overlay\" ) } // overlay Color . yellow . frame ( width : 40 , height : 25 ) . overlay { Text ( \"Overlay\" ) } \u6548\u679c\u5206\u522b\u4e3a\uff1a ZStack .overlay() \u53ef\u4ee5\u770b\u5230\uff0c ZStack \u4ee5 \u6700\u5927\u5143\u7d20 \u7684\u5927\u5c0f\u4f5c\u4e3a\u5176\u5927\u5c0f\uff0c\u800c .overlay() \u59cb\u7ec8\u9650\u5236\u5728\u88ab\u5176\u4fee\u9970\u7684 View \u7684\u5927\u5c0f\u5185\u3002 \u95f4\u8ddd\u5de5\u5177 Spacer \u95f4\u8ddd\u5de5\u5177\u3002 Spacer \u662f\u4e00\u4e2a\u5f39\u6027\u7684\u95f4\u8ddd\u3002\u5b83\u672c\u8eab\u4e0d\u4f1a\u663e\u793a\uff0c\u53ea\u662f\u5360\u636e \u5927\u4e8e\u6216\u7b49\u4e8e\u7279\u5b9a\u5bbd\u5ea6/\u9ad8\u5ea6 \u7684\u7a7a\u95f4\u3002 \u4f8b\u5982\uff1a 1 2 3 4 5 6 HStack { Text ( \"Hello\" ) . background ( Color . yellow ) Spacer () } . background ( Color . gray ) Note \u8fd9\u91cc\u7684 .background(_:) \u53ea\u662f\u4e3a\u4e86\u66f4\u660e\u663e\u5730\u663e\u793a HStack \u5185\u90e8\u7684\u6392\u5217\u3002 \u6548\u679c\u4e3a\uff1a \u6211\u4eec\u6ce8\u610f\u5230\uff0c\u6574\u4e2a Text \u88ab\u201c\u6324\u201d\u5230\u4e86\u5de6\u8fb9\u3002 \u6211\u4eec\u5728\u4e0a\u9762\u63d0\u5230\u4e86\u300c\u5927\u4e8e\u6216\u7b49\u4e8e\u7279\u5b9a\u5bbd\u5ea6/\u9ad8\u5ea6\u300d\u3002 Spacer \u6784\u9020\u51fd\u6570\u6709\u4e00\u4e2a\u53c2\u6570 minLength \uff0c\u5c31\u662f\u7528\u6765\u6307\u5b9a\u8fd9\u4e2a\u8ddd\u79bb\u7684\uff0c\u4e0a\u9762\u6211\u4eec\u5ffd\u7565\u4e86\u8fd9\u4e2a\u53c2\u6570\uff0c\u4f7f\u7528\u7cfb\u7edf\u9ed8\u8ba4\u7684\u8ddd\u79bb\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c Spacer \u4f1a\u5360\u636e View \u6240 \u4e0d\u9700\u8981 \u7684\u7a7a\u95f4\uff0c\u4f46\u4e0d\u4f1a\u6324\u5360 View \u9700\u8981 \u7684\u7a7a\u95f4\uff08\u5373\uff1a Spacer \u6392\u5e03\u7684\u4f18\u5148\u7ea7\u6700\u4f4e\uff09\u3002\u6bd4\u5982\uff0c\u5bf9\u4e8e\u4e4b\u524d\u63d0\u5230\u7684\u4f1a\u5360\u636e\u6240\u6709\u7a7a\u95f4\u7684 Color \uff1a 1 2 3 4 HStack { Color . yellow Spacer () } Spacer \u53ea\u5360\u636e\u4e86\u9ed8\u8ba4\u7684\u6700\u5c0f\u7a7a\u95f4\u3002\u5b9e\u9645\u4e0a\uff0c\u5982\u679c\u4f60\u628a Spacer \u7684 minLength \u53c2\u6570\u8bbe\u7f6e\u4e3a 0\uff1a 1 Spacer ( minLength : 0 ) \u5bf9\u4e8e Color \u7684\u60c5\u51b5\uff0c Spacer \u5c31\u4e0d\u4f1a\u5360\u636e\u4efb\u4f55\u7a7a\u95f4\u3002\u7136\u800c\uff0c\u5bf9\u4e8e\u4e0a\u9762 Text \u7684\u60c5\u51b5\uff0c\u5b83\u4ecd\u7136\u4f1a\u5360\u636e\u6240\u6709\u5269\u4f59\u7684\u7a7a\u95f4\u3002 \u53e6\u5916\uff0c\u5982\u679c\u9700\u8981\u56fa\u5b9a\u5bbd\u5ea6/\u9ad8\u5ea6\u7684 Spacer \uff0c\u53ef\u4ee5\u4f7f\u7528 .fixedSize() \uff1a 1 2 Spacer ( minLength : 20 ) . fixedSize () \u5176\u4ed6\u5bb9\u5668 SwiftUI \u4e2d\u8fd8\u6709\u5f88\u591a\u7528\u4e8e\u6392\u5e03\u7684\u5bb9\u5668 View\uff0c\u4e0d\u518d\u5c55\u5f00\uff0c\u5177\u4f53\u53ef\u4ee5\u53c2\u8003 \u5b98\u65b9\u6587\u6863 \u3002\u4e00\u4e9b\u5e38\u7528\u7684 View \u6709\uff1a ScrollView \uff1a\u53ef\u6ed1\u52a8\u89c6\u56fe List \uff1a\u8bbe\u7f6e\u7b49\u7cfb\u7edf app \u4f7f\u7528\u7684\u5217\u8868\u89c6\u56fe NavigationView \uff1a\u8bbe\u7f6e\u7b49\u7cfb\u7edf app \u4f7f\u7528\u7684\u53ef\u6ed1\u52a8\u8fd4\u56de\u7684\u5bfc\u822a\u89c6\u56fe TabView \uff1a\u65f6\u949f\u7b49\u7cfb\u7edf app \u4f7f\u7528\u7684\u5206\u9875\u89c6\u56fe LazyVStack \u548c LazyHStack \uff1a\u60f0\u6027 Stack \u5bb9\u5668 LazyVGrid \u548c LazyHGrid \uff1a\u7f51\u683c\u5bb9\u5668 \u7ec3\u4e60\uff1a\u539f\u751f View \u4e0e\u57fa\u672c\u5e03\u5c40 \u5229\u7528 VStack \u3001 HStack \u548c\u5176\u4ed6\u539f\u751f View\uff0c\u6784\u5efa\u4e00\u4e2a\u5982\u4e0b\u56fe\u6240\u793a\u7684 View\uff1a \u63d0\u793a\uff1a \u4e00\u4e2a\u56fa\u5b9a\u5927\u5c0f\u7684\u5706\u53ef\u4ee5\u7528 Circle().frame(...) \u751f\u6210 \u56fe\u6807\u5bf9\u5e94\u7684 system name \u4e3a star \u53c2\u8003\u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 VStack ( alignment : . leading , spacing : 15 ) { HStack { Circle () . frame ( width : 37 , height : 37 ) . foregroundColor (. yellow ) . overlay { Text ( \"A\" ) . font (. system (. body , weight : . heavy , design : . rounded )) . foregroundColor (. white ) } VStack ( alignment : . leading , spacing : 2 ) { Text ( \"#123456\" ) . font (. system ( size : 16 , weight : . medium )) Text ( \"1\u5c0f\u65f6\u524d\" ) . font (. system ( size : 13 , weight : . semibold )) . foregroundColor (. secondary ) } Spacer () Label ( \"6\" , systemImage : \"star\" ) } Text ( \"\u501f\u52a9 SwiftUI...\" ) } . padding () \u6ce8\u610f\uff0c\u6700\u5916\u5c42 VStack \u7684 alignment \u53c2\u6570\u4e3a .leading \u3002\u8bf7\u601d\u8003\u5176\u4e2d\u7684\u539f\u56e0\u3002 \u7ec4\u5408 \u00b6 Group \u5c06\u591a\u4e2a View \u7ec4\u5408\u8d77\u6765\u5904\u7406\uff0c\u6216\u7528\u4e8e\u6dfb\u52a0\u903b\u8f91\u63a7\u5236\u3002 \u4e00\u4e2a Group \u5bf9\u5176\u4e2d\u7684\u5b50 View \u6ca1\u6709\u4efb\u4f55\u5f71\u54cd\uff0c\u5404\u4e2a View \u4ecd\u7136\u4fdd\u6301\u72ec\u7acb\uff0c\u5bf9 Group \u6dfb\u52a0 modifier \u76f8\u5f53\u4e8e\u7ed9\u6bcf\u4e00\u4e2a View \u6dfb\u52a0 modifier\uff1a 1 2 3 4 5 6 7 8 VStack { Group { Text ( \"Index: 0\" ) Text ( \"Index: 1\" ) } . background ( Color . yellow ) . padding () } \u6548\u679c\u4e3a\uff1a \u6211\u4eec\u5e38\u7528\u8fd9\u79cd\u65b9\u6cd5\u540c\u65f6\u7ed9\u591a\u4e2a View \u6dfb\u52a0\u76f8\u540c\u7684 modifier\u3002 \u53e6\u5916\uff0c Group \u7684\u53c2\u6570\u4e3a @ViewBuilder \uff0c\u53ef\u7528\u4e8e\u5728\u67d0\u4e9b\u4e0d\u652f\u6301 if-else \u8bed\u53e5\u7b49\u5730\u65b9\u6dfb\u52a0\u903b\u8f91\u63a7\u5236\u3002\u5982\uff1a 1 2 3 4 5 6 7 8 Color . yellow . overlay ( Group { if condition { ... } else { ... } }) Note \u8bf7\u67e5\u9605 .overlay() \u7684\u6587\u6863\uff0c\u627e\u51fa\u8fd9\u91cc\u7684 .overlay() \u548c\u4e0a\u9762 ZStack \u4e2d\u63d0\u5230\u7684 .overlay() \u7684\u533a\u522b\u3002 ForEach \u8fed\u4ee3\u4e00\u4e2a\u96c6\u5408\u5185\u7684\u5143\u7d20\uff0c\u5e76\u4f9d\u6b21\u751f\u6210 View\uff0c\u7c7b\u4f3c\u4e8e for \u5faa\u73af\u3002 1 2 3 4 5 VStack { ForEach ( 0. .< 10 ) { index in Text ( \"Index: \\( index ) \" ) } } \u4f46\u662f\uff0c\u4e0d\u80fd\u7b80\u5355\u5730\u8fed\u4ee3\u4efb\u610f\u4e00\u4e2a\u6570\u7ec4\uff1a 1 2 3 4 5 let students = [ \"Alice\" , \"Bob\" , \"Carol\" ] ForEach ( students ) { student in Text ( student ) } \u7f16\u8bd1\u5668\u4f1a\u62a5\u9519\uff1a 1 Referencing initializer 'init(_:content:)' on 'ForEach' requires that 'String' conform to 'Identifiable' \u610f\u601d\u662f\uff0c\u6240\u8fed\u4ee3\u6570\u7ec4\u7684\u5143\u7d20\u7684\u7c7b\u578b\u5fc5\u987b\u9075\u5faa Identifiable \u3002\u7b80\u5355\u6765\u8bf4\uff0c\u56e0\u4e3a SwiftUI \u66f4\u65b0\u65f6\u9700\u8981\u786e\u5207\u77e5\u9053 \u54ea\u4e2a View \u4f9d\u8d56\u7684\u6570\u636e\u66f4\u65b0\u4e86 \uff0c\u751f\u6210 View \u7684\u6570\u636e\u5fc5\u987b\u662f\u53ef\u4ee5\u76f8\u4e92\u533a\u5206\u7684\u3002 \u901a\u8fc7\u4f7f\u6570\u7ec4\u5143\u7d20\u7684\u7c7b\u578b\u9075\u5faa Identifiable \uff0c\u6211\u4eec\u4fbf\u53ef\u4ee5\u5b89\u5168\u5730\u901a\u8fc7 ForEach \u8fed\u4ee3\u6570\u7ec4\uff0c\u6ce8\u610f id \u5fc5\u987b\u4e92\u4e0d\u76f8\u540c\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5d29\u6e83\uff1a 1 2 3 4 5 6 7 8 9 struct Student : Identifiable { var id : Int { return studentID } // Identifiable requirement var studentID : Int // \u5b66\u53f7\uff0c\u5fc5\u7136\u4e92\u4e0d\u76f8\u540c var name : String } ForEach ( students ) { student in Text ( student . name ) } \u5728 \u6570\u7ec4\u56fa\u5b9a \u7684\u60c5\u51b5\u4e0b\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 count \u6216 indices \u8fdb\u884c\u8fed\u4ee3\uff0c\u6b64\u65f6\u9700\u8981\u663e\u5f0f\u6307\u51fa\u7528\u4e8e\u533a\u5206\u7684 id \uff1a 1 2 3 4 5 6 7 8 9 let students = [ \"Alice\" , \"Bob\" , \"Carol\" ] ForEach ( 0. .< students . count , id : \\ . self ) { index in Text ( students [ index ]) } ForEach ( students . indices , id : \\ . self ) { index in Text ( students [ index ]) } \u8fd9\u91cc \\.self \u7528\u5230 Swift \u7684 KeyPath \uff0c \\.self \u7684\u610f\u601d\u662f\u8fd4\u56de\u4e0b\u6807\u672c\u8eab\uff08 Int \uff09\uff0c\u4f7f\u7528\u5176\u6240\u4e3a\u533a\u5206\u4e0d\u540c\u5143\u7d20\u7684 id\u3002 Info \u5173\u4e8e\u4e0d\u540c View \u5728\u5e95\u5c42\u662f\u5982\u4f55\u533a\u5206\u7684\uff0c\u53c2\u8003 WWDC21: Demystify SwiftUI \u3002 \u53e6\u5916\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f ForEach \u548c Group \u7c7b\u4f3c\uff0c\u5e76\u4e0d\u628a\u5176\u4e2d\u7684 View \u53d8\u6210\u4e00\u6574\u4e2a View\uff1b\u5bf9\u5176\u6dfb\u52a0 modifier \u76f8\u5f53\u4e8e\u5bf9\u5404\u4e2a\u5b50 View \u6dfb\u52a0\u3002 Modifier \u00b6 Modifier \u7684\u79cd\u7c7b \u00b6 \u4e0d\u540c View modifier \u7684\u4e0d\u540c\u6548\u679c\u5e38\u5e38\u4ee4\u521d\u5b66\u8005\u8ff7\u60d1\u3002\u4e00\u822c\u6765\u8bf4\uff0cView modifier \u7684\u7c7b\u578b\u6709\u5982\u4e0b\u51e0\u7c7b\uff1a \u6539\u53d8\u73af\u5883\u53d8\u91cf\uff0c\u5bf9\u5176\u4f5c\u7528\u8303\u56f4\u5185\u7684\u6240\u6709 View \u5747\u6709\u6548 \u5178\u578b\u7684\u4f8b\u5b50\u662f font \u3001 foregroundColor \u7b49\u3002\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 VStack { Image ( systemName : \"globe\" ) HStack { Text ( \"Hello\" ) . bold () Text ( \"World\" ) . italic () } } . font (. title3 ) . foregroundColor (. orange ) \u8fd9\u91cc\uff0c .font(.title3) \u548c .foregroundColor(.orange) \u5bf9 VStack \u5185\u5904\u4e8e\u4efb\u610f\u5c42\u7ea7\u7684 View \u5747\u6709\u6548\u3002 \u4ec5\u4fee\u9970\u6700\u5916\u5c42 View \u5178\u578b\u7684\u4f8b\u5b50\u662f padding \uff1a 1 2 3 4 5 6 HStack ( spacing : 0 ) { Color . yellow Color . orange } . padding () . background ( Color . gray ) \u5728\u8fd9\u91cc\uff0c padding \u4ec5\u5728 HStack \u5916\u6dfb\u52a0\u4e86\u8fb9\u8ddd\uff0c\u800c\u5bf9\u5176\u4e2d\u7684\u4e24\u4e2a Color \u65e0\u5f71\u54cd\u3002 \u8fd4\u56de\u7279\u5b9a\u7c7b\u578b\u7684 View \u8fd9\u4e9b modifier \u5e76\u4e0d\u662f\u8fd4\u56de some View \u800c\u662f\u7279\u5b9a\u7c7b\u578b\uff0c\u56e0\u6b64\u540e\u7eed\u53ef\u4f7f\u7528\u7684 modifier \u66f4\u591a\uff0c\u6700\u5178\u578b\u7684\u662f Text \uff1a 1 2 3 4 5 Text ( \"Hello, world!\" ) . bold () . italic () . font (. title ) . foregroundColor (. yellow ) \u4e0a\u9762\u56db\u4e2a modifier \u7684\u8fd4\u56de\u503c\u5747\u4e3a Text \uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u5982 italic \u8fd9\u7c7b\u53ea\u80fd\u7528\u4e8e Text \u7684 modifier\u3002 \u81ea\u5b9a\u4e49 modifier \u00b6 \u53ef\u4ee5\u901a\u8fc7 extension \u5c06\u4e00\u4e9b\u6837\u5f0f\u7ec4\u5408\u6210 modifier\uff0c\u65b9\u4fbf\u91cd\u7528\uff1a 1 2 3 4 5 6 7 8 9 10 11 extension View { func defaultContainerStyle () -> some View { self . padding (. horizontal , 10 ) . padding (. vertical , 5 ) } } VStack { ... } . defaultContainerStyle () \u53e6\u5916\uff0c\u53ef\u4ee5\u901a\u8fc7 ViewModifier \u534f\u8bae\u5b9a\u4e49\u4f5c\u7528\u66f4\u5f3a\u7684 modifier\uff0c\u53ef\u4ee5\u62e5\u6709\u72b6\u6001\uff08\u89c1 \u6570\u636e\u6d41\u57fa\u7840 \uff09\uff0c\u5728\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002","title":"\u6784\u5efa View"},{"location":"frontend/swiftui/build-views/#view","text":"\u5728 body \u4e2d\uff0c\u6709\u4e00\u4e9b\u975e\u5e38\u65b9\u4fbf\u7684\u65b9\u5f0f\u6765\u7ec4\u5408\u4e0d\u540c\u7684 View\u3002\u53e6\u5916\uff0c body \u8fd8\u5bf9\u5176\u4e2d\u7684\u8868\u8fbe\u5f0f\u6709\u4e00\u5b9a\u7684\u9650\u5236\u3002","title":"View \u7684\u7ec4\u5408\u65b9\u5f0f"},{"location":"frontend/swiftui/build-views/#_1","text":"\u5728 body \u4e2d\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u8fd9\u51e0\u79cd\u65b9\u5f0f\u7ec4\u5408\u591a\u4e2a View\uff0c \u4e0d\u9700\u8981\u5199\u51fa return \uff1a \u6761\u4ef6\u63a7\u5236\u8bed\u53e5 \u4f60\u53ef\u4ee5\u7528 if-else \u8bed\u53e5\u6709\u6761\u4ef6\u5730\u663e\u793a\u4e0d\u540c\u7684 View\uff1a 1 2 3 4 5 6 7 if type == . text { Text ( \"Hello, world!\" ) } else if type == . image { Image ( \"hello-world\" ) } else { Color . blue } \u6216\u8005\uff0c\u53ea\u6709 if \uff1a 1 2 3 if revealGrade { Text ( student . gpa ) } \u5f53\u7136\uff0c if let \u8bed\u53e5\u4e5f\u662f\u53ef\u4ee5\u7684\uff1a 1 2 3 if let npyName = student . npyName { Text ( npyName ) } \u4f60\u8fd8\u53ef\u4ee5\u7528 switch \uff1a\uff08\u5b9e\u9645\u4e0a\u7f16\u8bd1\u5668\u5c06\u5176\u8f6c\u5316\u4e3a if-else \u8bed\u53e5\uff09 1 2 3 4 5 switch type { case . text : Text ( \"Hello, world!\" ) case . image : Image ( \"hello-world\" ) default : Color . blue } \u591a\u4e2a View \u4f60\u53ef\u4ee5\u4e00\u6b21\u8fd4\u56de\u591a\u4e2a View\uff0c\u8fd9\u79cd View \u53eb\u505a TupleView \uff1a 1 2 3 Text ( \"Hello, world!\" ) Image ( \"hello-world\" ) Color . blue \u4e00\u822c\u8fd9\u79cd TupleView \u591a\u7528\u4e8e View \u7684\u6392\u5217\u3002\u6bd4\u5982\uff0c\u5c06\u51e0\u4e2a View \u5728\u5782\u76f4\u65b9\u5411\u4f9d\u6b21\u6392\u5217\uff1a 1 2 3 4 VStack { Text ( \"Hello, world!\" ) Image ( \"hello-world\" ) } \u6211\u4eec\u5c06\u5728\u4e0b\u9762\u8fdb\u4e00\u6b65\u4ecb\u7ecd View \u7684\u6392\u5217\u3002 VStack \u6784\u9020\u51fd\u6570\u7684\u53c2\u6570 \u4e0a\u9762\u7684 VStack \u4ee5\u53ca\u5927\u62ec\u53f7\u5305\u62ec\u7684\u5185\u5bb9\uff0c\u5b9e\u9645\u4e0a\u662f VStack \u7684\u6784\u9020\u51fd\u6570\u3002\u6839\u636e\u6587\u6863\uff0c VStack \u6784\u9020\u51fd\u6570\u7684\u7b7e\u540d\u5982\u4e0b\uff1a 1 init ( alignment : HorizontalAlignment = . center , spacing : CGFloat ? = nil , content : () -> Content ) \u6211\u4eec\u524d\u4e24\u4e2a\u53c2\u6570\u4f7f\u7528\u4e86\u63d0\u4f9b\u7684\u9ed8\u8ba4\u503c\uff0c\u6211\u4eec\u63d0\u4f9b\u7684\u5b9e\u9645\u4e0a\u662f\u7b2c\u4e09\u4e2a\u53c2\u6570 content \uff1a\u5b83\u662f\u4e00\u4e2a \u65e0\u53c2\u6570\u3001\u8fd4\u56de\u503c\u4e3a Content \u7684\u533f\u540d\u51fd\u6570 \u3002\uff08\u8fd9\u91cc\u7684 Content \u662f VStack \u7684\u6a21\u7248\u53c2\u6570\uff0c\u8868\u793a\u300c\u5185\u5bb9 View \u7684\u7c7b\u578b\u300d\uff09 \u5728 Swift \u4e2d\uff0c\u5982\u679c\u51fd\u6570\u7684\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u4e3a\u51fd\u6570\uff0c\u90a3\u4e48\u5b83\u53ef\u4ee5\u5199\u5230\u62ec\u53f7\u5916\u9762\uff0c\u5e76\u4e14\u7701\u7565\u6807\u7b7e\u3002\u4e0a\u9762 VStack \u7684\u6784\u9020\u51fd\u6570\u5b9e\u9645\u4e0a\u662f\uff1a 1 2 3 4 VStack ( content : { Text ( \"Hello, world!\" ) Image ( \"hello-world\" ) }) \u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c content \u7684\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u662f TupleView<(Text, Image)> \uff0c\u5e76\u4e0d\u662f\u4e00\u4e2a\u771f\u6b63\u7684 Tuple \u3002","title":"\u7ec4\u5408"},{"location":"frontend/swiftui/build-views/#_2","text":"body \u4e0e\u666e\u901a\u51fd\u6570\u4e0d\u540c\uff0c\u5b83\u5bf9\u51fd\u6570\u4f53\u5185\u7684\u5141\u8bb8\u7684\u8868\u8fbe\u5f0f\u6709\u9650\u5236\u3002 \u540c\u65f6\u8fdb\u884c\u53d8\u91cf\u7684\u58f0\u660e\u548c\u8d4b\u503c\u662f\u5141\u8bb8\u7684\uff1a 1 2 3 4 var body : some View { let description = x > 127 ? \"overflow\" : \"normal\" Text ( description ) } \u4f46 var \u548c let \u7684\u58f0\u660e\u3001\u8d4b\u503c\u8868\u8fbe\u5f0f\u4e0d\u88ab\u5141\u8bb8\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 // Error: Closure containing a declaration cannot be used with result builder 'ViewBuilder' var body : some View { var description : String ... } // Error: Type '()' cannot conform to 'View' var body : some View { var description = \"\" description = \"hello\" ... } \u53e6\u5916\uff0c for \u5faa\u73af\u4e5f\u662f\u4e0d\u88ab\u5141\u8bb8\u7684\u3002\u6211\u4eec\u6709\u53e6\u5916\u7684\u65b9\u6cd5\u8fdb\u884c\u7c7b\u4f3c\u7684\u8fed\u4ee3\u3002 \u4e0a\u8ff0\u4f8b\u5b50\u4e2d\uff0c\u7c7b\u578b\u9075\u5faa View \u7684\u503c\uff08\u5982 Text(description) \uff09\u4f1a\u4f5c\u4e3a\u90e8\u5206\u7ed3\u679c\uff08partial result\uff09\u9012\u5f52\u5730\u53c2\u4e0e body \u6700\u540e\u7ed3\u679c\u7684\u8ba1\u7b97\uff0c\u800c\u5176\u4f59\u5141\u8bb8\u7684\u8868\u8fbe\u5f0f\uff08\u5982 let description = x > 127 ? \"overflow\" : \"normal\" \uff09\u5728\u8ba1\u7b97 body \u7684\u503c\u7684\u65f6\u5019\u4f1a\u88ab\u5ffd\u7565\u3002 \u7b80\u5355\u4ecb\u7ecd ViewBuilder \u5b9e\u9645\u4e0a\uff0c body \u4e4b\u6240\u4ee5\u80fd\u591f\u6709\u8fd9\u4e9b\u7279\u6027\uff0c\u662f\u56e0\u4e3a body \u6709\u9690\u5f0f\u7684 @ViewBuilder \u4fee\u9970\uff1a 1 2 3 4 protocol View { associatedtype Body : View @ ViewBuilder var body : Body { get } } \u88ab @ViewBuilder \u4fee\u9970\u7684\u51fd\u6570\uff0c\u4e0d\u4f7f\u7528\u663e\u5f0f\u7684 return \u6765\u8fd4\u56de\uff0c\u800c\u662f\u901a\u8fc7\u201c\u6536\u96c6\u201d\u51fd\u6570\u4f53\u4e2d\u7684 View \u6765\u6784\u5efa\u6700\u7ec8\u7684\u8fd4\u56de\u503c\u3002\u6bd4\u5982\uff1a 1 2 3 let greeting = \"Hello\" Text ( greeting ) Color . blue \u7f16\u8bd1\u5668\u201c\u6536\u96c6\u201d\u5230\u4e24\u4e2a View\uff1a Text \u548c Color \uff08\u5ffd\u7565 let greeting = \"Hello\" \uff09\u3002\u63a5\u7740\uff0c\u8c03\u7528 ViewBuilder \u7684\u4e00\u4e2a\u6784\u5efa View \u7684\u51fd\u6570\uff1a 1 static func buildBlock < C0 , C1 >( _ c0 : C0 , _ c1 : C1 ) -> TupleView < ( C0 , C1 ) > where C0 : View , C1 : View \u8fd9\u4e2a\u51fd\u6570\u63a5\u53d7\u4e24\u4e2a View \u4f5c\u4e3a\u53c2\u6570\uff0c\u6700\u7ec8\u751f\u6210 \u5355\u4e2a \u8fd4\u56de\u503c TupleView<(Text, Color)> \u3002 \u5176\u4ed6\u7684\u7279\u6027\uff0c\u6bd4\u5982 if-else \u8bed\u53e5\uff0c\u90fd\u662f\u7531\u7c7b\u4f3c\u7684\u673a\u5236\u6765\u5b9e\u73b0\u7684\u3002\u4e0d\u96be\u7406\u89e3\uff0c\u53ea\u8981\u4e0d\u65ad\u9012\u5f52\u5730\u5c06 View \u5408\u5e76\uff0c\u6700\u7ec8\u5c31\u80fd\u751f\u6210\u4e00\u4e2a\u5355\u4e00\u7684\u8fd4\u56de\u503c\u3002 ViewBuilder \u7684\u673a\u5236\u5b9e\u9645\u4e0a\u662f\u901a\u8fc7\u4e00\u79cd\u53eb result builder \u7684\u8bed\u6cd5\u5b9e\u73b0\u7684\u3002\u5982\u679c\u611f\u5174\u8da3\u53ef\u4ee5\u53c2\u8003 SE0289: Result builders \u3002","title":"\u8868\u8fbe\u5f0f"},{"location":"frontend/swiftui/build-views/#view_1","text":"\u6211\u4eec\u7ec8\u4e8e\u57fa\u672c\u4ecb\u7ecd\u5b8c\u76f8\u5173\u7684\u8bed\u6cd5\u89c4\u5219\u4e86\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u5229\u7528\u5404\u79cd\u539f\u751f\u7684 View \u6765\u6784\u5efa\u6211\u4eec\u7684 UI \u4e86\u3002\u5728\u8fd9\u91cc\u53ea\u4f1a\u4ecb\u7ecd\u5404\u79cd View \u6700\u57fa\u672c\u7684\u7528\u6cd5\uff0c\u5176\u4f59\u7528\u6cd5\u8bf7\u53c2\u8003\u5f00\u53d1\u8005\u6587\u6863\u3002 \u4f60\u6700\u597d\u4eb2\u81ea\u5c1d\u8bd5\u4e00\u4e0b\u4e0b\u9762\u7684\u4ee3\u7801\uff0c\u5e76\u5728\u9884\u89c8\u6a21\u5f0f\u4e2d\u5b9e\u65f6\u67e5\u770b\u3002","title":"\u4e00\u4e9b\u5e38\u7528\u7684 View"},{"location":"frontend/swiftui/build-views/#_3","text":"\u53ea\u8bfb\u6587\u672c Text \u7528\u4e8e\u663e\u793a\u53ea\u8bfb\u6587\u672c\u3002 \u4f60\u53ef\u4ee5\u4ece\u5b57\u7b26\u4e32\u521b\u5efa\uff1a 1 2 3 4 Text ( \"Hello, world!\" ) let string = \"Hello, world!\" Text ( string ) \u7ed3\u679c\u4e3a\uff1a \u4e5f\u53ef\u4ee5\u7528 Markdown \u5b57\u7b26\u4e32\u521b\u5efa\u5e26\u683c\u5f0f\u7684\u6587\u672c\u3002\u6ce8\u610f\u53ea\u6709\u5b57\u9762\u503c\u80fd\u591f\u76f4\u63a5\u6e32\u67d3\u4e3a Markdown \u683c\u5f0f\uff0c\u5bf9\u4e8e\u5b57\u7b26\u4e32\u53d8\u91cf\u9700\u8981 AttributedString \uff1a 1 2 3 4 5 Text ( \"Hello, *world*!\" ) let string = \"Hello, *world*!\" let attrStr = try ! AttributedString ( markdown : string ) Text ( attrStr ) \u7ed3\u679c\u4e3a\uff1a \u53ef\u4ee5\u4f7f\u7528 .font(_:) \u3001 .foregroundColor(_:) \u3001 .italic(_:) \u7b49 modifier \u6539\u53d8\u5b57\u4f53\u3001\u989c\u8272\u7b49\uff1a 1 2 3 4 5 Text ( \"Hello, world!\" ) . font (. system ( size : 24 , weight : . bold , design : . serif )) . italic () . foregroundColor (. blue ) . underline () \u6700\u7ec8\u7684\u6548\u679c\u4e3a\uff1a \u6700\u540e\uff0c\u503c\u5f97\u4e00\u63d0\u7684\u662f Text \u7684\u52a0\u6cd5\u8fd0\u7b97\u7b26\uff0c\u5b83\u53ef\u4ee5\u5c06\u4e24\u4e2a\u6837\u5f0f\u4e0d\u540c\u7684 Text \u62fc\u63a5\u5728\u4e00\u8d77\uff1a 1 2 3 4 let start = Text ( \"L\" ). bold (). font (. title ) let remaining = Text ( \"orem ipsum dolor sit amet, consectetur adipiscing elit....\" ) start + remaining \u6548\u679c\u4e3a\uff1a \u56fe\u7247 Image \u663e\u793a\u56fe\u6807\u6216\u8d44\u6e90\u6587\u4ef6\u56fe\u7247\u3002 \u6dfb\u52a0\u56fe\u7247\u8d44\u6e90\u7684\u65b9\u6cd5 Swift Playgrounds\uff1a\u5c06\u56fe\u7247\u62d6\u52a8\u5230\u6587\u4ef6\u76ee\u5f55\u4e2d Xcode Project\uff1a\u5c06\u56fe\u7247\u62d6\u52a8\u5230 Assets.xcassets \u4e2d\u3002 \u4f7f\u7528 Image(systemName:) \u663e\u793a\u7cfb\u7edf\u56fe\u6807\uff1a 1 Image ( systemName : \"swift\" ) \u7ed3\u679c\u4e3a\uff1a Info \u5173\u4e8e\u7cfb\u7edf\u5185\u7f6e\u56fe\u6807\u7684\u67e5\u8be2\uff0c\u8bf7\u53c2\u8003 SF Symbols \u3002 \u4f7f\u7528 Image(_:) \u663e\u793a\u8d44\u6e90\u6587\u4ef6\u3002 \u6bd4\u5982\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u5982\u4e0b\u56fe\u7684\u540d\u4e3a wwdc21 \u7684\u56fe\u7247\u6587\u4ef6\uff1a \u4ee5\u4e0b\u51e0\u79cd\u4e0d\u540c\u7684\u4ee3\u7801\u4f1a\u4ea7\u751f\u4e0d\u540c\u7684\u7ed3\u679c\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 // Case 1 Image ( \"wwdc21\" ) // Case 2 Image ( \"wwdc21\" ) . resizable () // Case 3 Image ( \"wwdc21\" ) . resizable () . aspectRatio ( contentMode : . fit ) // Case 4 Image ( \"wwdc21\" ) . resizable () . aspectRatio ( contentMode : . fill ) Case 1 Case 2 Case 3 Case 4 \u56fe\u7247\u539f\u6709\u5c3a\u5bf8 \u5360\u6ee1\u53ef\u83b7\u5f97\u7684\u7a7a\u95f4 \u6309\u539f\u6709\u6bd4\u4f8b\u9002\u5408\u7a7a\u95f4 \u6309\u539f\u6709\u6bd4\u4f8b\u5360\u6ee1\u7a7a\u95f4 \u4e00\u4e2a Image \u5982\u679c\u4e0d\u52a0\u4e0a .resizable() \u7684\u8bdd\u53ea\u4f1a\u6309\u7167\u56fa\u6709\u50cf\u7d20\u663e\u793a\uff0c\u53ea\u6709\u52a0\u4e0a .resizable() \u624d\u80fd\u8fdb\u884c\u7f29\u653e\u3002 .aspectRatio(_:contentMode:) \u4f7f\u5f97 Image \u80fd\u591f\u6839\u636e\u53ef\u7528\u7a7a\u95f4\u548c\u957f\u5bbd\u6bd4\u8fdb\u884c\u7f29\u653e\u3002 Image \u7684\u5e03\u5c40\u6027\u8d28 \u6ce8\u610f\uff0c Image \u6240\u5360\u7684\u7a7a\u95f4\u53ef\u80fd\u4f1a\u8d85\u51fa\u53ef\u7528\u7684\u7a7a\u95f4\u3002\u5bf9\u4e8e\u4e0a\u9762\u7684 Case 4\uff0c\u5728 Xcode \u9884\u89c8\u4e2d\u9009\u4e2d\u56fe\u7247\uff0c\u53ef\u4ee5\u770b\u5230\u5176\u5927\u5c0f\uff1a \u8fd9\u79cd\u6027\u8d28\u5728\u5f88\u591a\u5730\u65b9\u4f1a\u6709\u610f\u60f3\u4e0d\u5230\u7684\u6548\u679c\uff0c\u5982\u5373\u5c06\u4ecb\u7ecd\u7684 ZStack \u3002\u5982\u679c\u9700\u8981\u5c06\u56fe\u7247\u9650\u5236\u5728\u53ef\u7528\u7a7a\u95f4\u5185\uff0c\u53ef\u4ee5\u4f7f\u7528 Color \uff0c\u5b83\u4ec5\u5360\u636e\u6240\u6709\u53ef\u7528\u7a7a\u95f4\uff1a 1 2 3 4 5 Color . clear . overlay { Image ( \"wwdc21\" ) . resizable () . aspectRatio ( contentMode : . fill ) } \u56fe\u6807 & \u6587\u5b57 Label \u663e\u793a\u56fe\u6807\u548c\u6587\u5b57\u3002 1 Label ( \"Swift Programming Language\" , systemImage : \"swift\" ) \u6548\u679c\u4e3a\uff1a \u53e6\u5916\uff0c\u4f60\u53ef\u4ee5\u7528 .font(_:) \u4fee\u6539\u5176\u5b57\u4f53\u3002 Label \u7684\u7279\u6b8a\u4e4b\u5904 Label \u76f8\u8f83\u4e8e\u666e\u901a\u7684\u5de6\u53f3\u6392\u5e03\uff08\u63a5\u4e0b\u6765\u8981\u4ecb\u7ecd\u7684 HStack \uff09\u7684\u7279\u6b8a\u4e4b\u5904\u5728\u4e8e\uff0c\u5728\u67d0\u4e9b\u7cfb\u7edf\u539f\u751f\u7684\u6392\u5217\u4e2d\uff0c\u591a\u4e2a Label \u7684\u56fe\u6807\u548c\u6587\u5b57\u4f1a\u81ea\u52a8\u5bf9\u9f50\u3002 \u6309\u94ae Button \u6309\u94ae\u3002 \u6587\u5b57\u6309\u94ae\uff1a 1 2 3 Button ( \"Button\" ) { print ( \"Button pressed\" ) } \u4ee5\u4e00\u4e2a View \u4f5c\u4e3a\u6309\u94ae\uff1a 1 2 3 Button ( action : { print ( \"Button pressed\" ) }) { Image ( systemName : \"swift\" ) } \u4e0a\u9762\u7684\u4ee3\u7801\u4e5f\u53ef\u4ee5\u5199\u6210\uff1a 1 2 3 4 5 Button { print ( \"Button pressed\" ) } label : { Image ( systemName : \"swift\" ) } Multiple Trailing Closures \u5982\u679c\u4e00\u4e2a\u51fd\u6570\u6700\u540e\u82e5\u5e72\u4e2a\u53c2\u6570\u5747\u4e3a\u51fd\u6570\uff0c\u5982\uff1a 1 func foo ( para1 : Int , func1 : () -> Void , func2 : () -> Void , func3 : ( Int ) -> Void ) \u90a3\u4e48\uff0c\u8c03\u7528\u65f6\u8fd9\u4e9b\u51fd\u6570\u53c2\u6570\u53ef\u4ee5\u5199\u5230\u5c0f\u62ec\u53f7\u5916\u9762\uff0c\u7b2c\u4e00\u4e2a\u53ef\u4ee5\u7701\u7565\u6807\u7b7e\uff0c\u5176\u4f59\u9700\u8981\u52a0\u4e0a\u6807\u7b7e\uff1a 1 2 3 4 5 6 7 foo ( para1 : 127 ) { // func1 goes here } func2 : { // func2 goes here } func3 : { value in // func3 goes here } \u8fd9\u79cd\u5199\u6cd5\u662f Swift \u4e2d\u4e00\u79cd\u53eb multiple trailing closures \u7684\u8bed\u6cd5\uff0c\u8be6\u89c1 \u5b98\u65b9\u6587\u6863 \u3002\u8fd9\u79cd\u5199\u6cd5\u80fd\u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\uff0c\u6211\u4eec\u4e4b\u540e\u4f1a\u5c3d\u91cf\u91c7\u7528\u8fd9\u79cd\u5199\u6cd5\u3002 \u53e6\u5916\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 .buttonStyle(_:) \u6765\u4f7f\u7528\u7cfb\u7edf\u9ed8\u8ba4\u7684\u4e00\u4e9b\u6837\u5f0f\uff1a 1 2 3 4 Button ( \"Button\" ) { print ( \"Button pressed\" ) } . buttonStyle (. bordered ) \u6548\u679c\u4e3a\uff1a \u83dc\u5355 Menu \u521b\u5efa\u70b9\u51fb\u663e\u793a\u7684\u83dc\u5355\u3002 1 2 3 4 5 6 7 8 9 10 11 Menu ( \"Actions\" ) { Button ( \"Duplicate\" , action : {...}) Button ( \"Rename\" , action : {...}) Button ( \"Delete\u2026\" , role : . destructive , action : {...}) Divider () Menu ( \"Copy\" ) { Button ( \"Copy\" , action : {...}) Button ( \"Copy Formatted\" , action : {...}) Button ( \"Copy Library Path\" , action : {...}) } } \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u53ef\u4ee5\u5728\u4e00\u4e2a Menu \u4e2d\u5185\u5d4c\u53e6\u4e00\u7ea7 Menu \u3002 \u6548\u679c\u4e3a\uff1a \u53e6\u5916\uff0c\u53ef\u4ee5\u7528\u7c7b\u4f3c\u7684\u65b9\u6cd5\u7ed9\u4efb\u4f55 View \u6dfb\u52a0\u957f\u6309\u83dc\u5355\uff1a 1 2 3 4 5 6 Image ( systemName : \"swift\" ) . contextMenu { Button ( \"Duplicate\" , action : {...}) Button ( \"Rename\" , action : {...}) ... }","title":"\u7ec4\u4ef6"},{"location":"frontend/swiftui/build-views/#_4","text":"\u6c34\u5e73\u5e03\u5c40 HStack \u6c34\u5e73\u5e03\u5c40\u3002 1 2 3 4 5 HStack { Text ( \"Left\" ) Text ( \"Middle\" ) Text ( \"Right\" ) } \u6548\u679c\u4e3a\uff1a \u53e6\u5916\uff0c HStack \u8fd8\u6709\u4e24\u4e2a\u53ef\u9009\u53c2\u6570 alignment \u548c spacing \uff0c\u7528\u4e8e\u8bbe\u7f6e\u5bf9\u9f50\u548c\u95f4\u8ddd\u3002\u6bd4\u5982\uff0c HStack(alignment: .top, spacing: 20) \u5c06\u4f7f\u5b50 View \u5728\u9876\u90e8\u5bf9\u9f50\uff0c\u4e24\u4e24\u4e4b\u95f4\u7684\u95f4\u8ddd\u4e3a 20 \u3002 \u4e0d\u540c View \u5177\u6709\u4e0d\u540c\u7684\u5e03\u5c40\u7279\u6027 \u6ce8\u610f\u5230\uff0c\u4e09\u4e2a Text \u5e76\u6ca1\u6709\u5360\u6ee1\u6240\u6709\u6240\u6709\u7a7a\u95f4\uff0c\u800c\u662f\u53ea\u5360\u636e\u4e86\u6240\u9700\u8981\u7684\u6700\u5c0f\u7a7a\u95f4\uff0c\u8fd9\u662f\u7531 Text \u7684\u5e03\u5c40\u7279\u6027\u51b3\u5b9a\u7684\u3002\u4e0e\u4e4b\u76f8\u5bf9\uff0c Color \u5c06\u5c3d\u53ef\u80fd\u5360\u636e\u591a\u7684\u7a7a\u95f4\uff1a 1 2 3 4 5 HStack { Color . red Color . orange Color . yellow } \u6548\u679c\u4e3a\uff1a \u4e0d\u540c\u7684\u5e03\u5c40\u7279\u6027\u5bf9\u6211\u4eec\u6392\u5e03\u591a\u4e2a View \u6709\u91cd\u8981\u5f71\u54cd\u3002 \u9650\u4e8e\u7bc7\u5e45\uff0c\u8fd9\u90e8\u5206\u5185\u5bb9\u65e0\u6cd5\u5c55\u5f00\u53d9\u8ff0\u3002\u603b\u7684\u6765\u8bf4\uff0c\u539f\u751f View \u6709\u5982\u4e0b\u4e24\u7c7b\u5e03\u5c40\u7279\u6027\uff1a \u4ec5\u5360\u9700\u8981\u7684\u7a7a\u95f4\uff0c\u5982 Text \u3001 Label \u5360\u636e\u5c3d\u53ef\u80fd\u591a\u7684\u7a7a\u95f4\uff0c\u5982 Color \u3001 Spacer \u3001 VStack \u7b49 \u901a\u8fc7 fixedSize \u3001 layoutPriority \u3001 frame \u7b49 modifier\uff0c\u53ef\u4ee5\u66f4\u6539 View \u7684\u5e03\u5c40\u7279\u6027\uff0c\u5728\u6b64\u4e0d\u518d\u5c55\u5f00\u3002 \u5782\u76f4\u5e03\u5c40 VStack \u5782\u76f4\u5e03\u5c40\uff0c\u4e0e HStack \u7c7b\u4f3c\u3002 1 2 3 4 5 VStack { Text ( \"Top\" ) Text ( \"Middle\" ) Text ( \"Bottom\" ) } \u6548\u679c\u4e3a\uff1a \u4e0a\u4e0b\u5e03\u5c40 ZStack \u4e0a\u4e0b\u5e03\u5c40\uff0c\u5148\u5199\u7684 View \u6392\u5e03\u5728\u5e95\u5c42\u3002 1 2 3 4 ZStack { Color . yellow Text ( \"Overlay\" ) } \u6548\u679c\u4e3a\uff1a \u4e0e HStack \u548c VStack \u7c7b\u4f3c\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u6784\u9020\u51fd\u6570\u4e2d\u7684 alignment \u53c2\u6570\u6307\u5b9a\u8fd9\u4e9b View \u5bf9\u9f50\u7684\u65b9\u5f0f\u3002 ZStack \u548c .overlay(_:) \u6211\u4eec\u8fd8\u6709\u53e6\u5916\u4e00\u79cd\u65b9\u5f0f\u8fdb\u884c View \u7684\u5c42\u53e0\uff1a 1 2 3 4 Color . yellow . overlay { Text ( \"Overlay\" ) } \u770b\u4e0a\u53bb\u4e0e ZStack \u5e76\u65e0\u4e8c\u81f4\uff0c\u5176\u5b9e\u4e0d\u7136\u3002\u6211\u4eec\u7528 .frame() \u663e\u793a\u5730\u6307\u5b9a Color.yellow \u7684\u957f\u5bbd\uff0c\u6765\u6bd4\u8f83\u4e00\u4e0b\u8fd9\u4e24\u79cd\u65b9\u5f0f\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 // ZStack ZStack { Color . yellow . frame ( width : 40 , height : 25 ) Text ( \"Overlay\" ) } // overlay Color . yellow . frame ( width : 40 , height : 25 ) . overlay { Text ( \"Overlay\" ) } \u6548\u679c\u5206\u522b\u4e3a\uff1a ZStack .overlay() \u53ef\u4ee5\u770b\u5230\uff0c ZStack \u4ee5 \u6700\u5927\u5143\u7d20 \u7684\u5927\u5c0f\u4f5c\u4e3a\u5176\u5927\u5c0f\uff0c\u800c .overlay() \u59cb\u7ec8\u9650\u5236\u5728\u88ab\u5176\u4fee\u9970\u7684 View \u7684\u5927\u5c0f\u5185\u3002 \u95f4\u8ddd\u5de5\u5177 Spacer \u95f4\u8ddd\u5de5\u5177\u3002 Spacer \u662f\u4e00\u4e2a\u5f39\u6027\u7684\u95f4\u8ddd\u3002\u5b83\u672c\u8eab\u4e0d\u4f1a\u663e\u793a\uff0c\u53ea\u662f\u5360\u636e \u5927\u4e8e\u6216\u7b49\u4e8e\u7279\u5b9a\u5bbd\u5ea6/\u9ad8\u5ea6 \u7684\u7a7a\u95f4\u3002 \u4f8b\u5982\uff1a 1 2 3 4 5 6 HStack { Text ( \"Hello\" ) . background ( Color . yellow ) Spacer () } . background ( Color . gray ) Note \u8fd9\u91cc\u7684 .background(_:) \u53ea\u662f\u4e3a\u4e86\u66f4\u660e\u663e\u5730\u663e\u793a HStack \u5185\u90e8\u7684\u6392\u5217\u3002 \u6548\u679c\u4e3a\uff1a \u6211\u4eec\u6ce8\u610f\u5230\uff0c\u6574\u4e2a Text \u88ab\u201c\u6324\u201d\u5230\u4e86\u5de6\u8fb9\u3002 \u6211\u4eec\u5728\u4e0a\u9762\u63d0\u5230\u4e86\u300c\u5927\u4e8e\u6216\u7b49\u4e8e\u7279\u5b9a\u5bbd\u5ea6/\u9ad8\u5ea6\u300d\u3002 Spacer \u6784\u9020\u51fd\u6570\u6709\u4e00\u4e2a\u53c2\u6570 minLength \uff0c\u5c31\u662f\u7528\u6765\u6307\u5b9a\u8fd9\u4e2a\u8ddd\u79bb\u7684\uff0c\u4e0a\u9762\u6211\u4eec\u5ffd\u7565\u4e86\u8fd9\u4e2a\u53c2\u6570\uff0c\u4f7f\u7528\u7cfb\u7edf\u9ed8\u8ba4\u7684\u8ddd\u79bb\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c Spacer \u4f1a\u5360\u636e View \u6240 \u4e0d\u9700\u8981 \u7684\u7a7a\u95f4\uff0c\u4f46\u4e0d\u4f1a\u6324\u5360 View \u9700\u8981 \u7684\u7a7a\u95f4\uff08\u5373\uff1a Spacer \u6392\u5e03\u7684\u4f18\u5148\u7ea7\u6700\u4f4e\uff09\u3002\u6bd4\u5982\uff0c\u5bf9\u4e8e\u4e4b\u524d\u63d0\u5230\u7684\u4f1a\u5360\u636e\u6240\u6709\u7a7a\u95f4\u7684 Color \uff1a 1 2 3 4 HStack { Color . yellow Spacer () } Spacer \u53ea\u5360\u636e\u4e86\u9ed8\u8ba4\u7684\u6700\u5c0f\u7a7a\u95f4\u3002\u5b9e\u9645\u4e0a\uff0c\u5982\u679c\u4f60\u628a Spacer \u7684 minLength \u53c2\u6570\u8bbe\u7f6e\u4e3a 0\uff1a 1 Spacer ( minLength : 0 ) \u5bf9\u4e8e Color \u7684\u60c5\u51b5\uff0c Spacer \u5c31\u4e0d\u4f1a\u5360\u636e\u4efb\u4f55\u7a7a\u95f4\u3002\u7136\u800c\uff0c\u5bf9\u4e8e\u4e0a\u9762 Text \u7684\u60c5\u51b5\uff0c\u5b83\u4ecd\u7136\u4f1a\u5360\u636e\u6240\u6709\u5269\u4f59\u7684\u7a7a\u95f4\u3002 \u53e6\u5916\uff0c\u5982\u679c\u9700\u8981\u56fa\u5b9a\u5bbd\u5ea6/\u9ad8\u5ea6\u7684 Spacer \uff0c\u53ef\u4ee5\u4f7f\u7528 .fixedSize() \uff1a 1 2 Spacer ( minLength : 20 ) . fixedSize () \u5176\u4ed6\u5bb9\u5668 SwiftUI \u4e2d\u8fd8\u6709\u5f88\u591a\u7528\u4e8e\u6392\u5e03\u7684\u5bb9\u5668 View\uff0c\u4e0d\u518d\u5c55\u5f00\uff0c\u5177\u4f53\u53ef\u4ee5\u53c2\u8003 \u5b98\u65b9\u6587\u6863 \u3002\u4e00\u4e9b\u5e38\u7528\u7684 View \u6709\uff1a ScrollView \uff1a\u53ef\u6ed1\u52a8\u89c6\u56fe List \uff1a\u8bbe\u7f6e\u7b49\u7cfb\u7edf app \u4f7f\u7528\u7684\u5217\u8868\u89c6\u56fe NavigationView \uff1a\u8bbe\u7f6e\u7b49\u7cfb\u7edf app \u4f7f\u7528\u7684\u53ef\u6ed1\u52a8\u8fd4\u56de\u7684\u5bfc\u822a\u89c6\u56fe TabView \uff1a\u65f6\u949f\u7b49\u7cfb\u7edf app \u4f7f\u7528\u7684\u5206\u9875\u89c6\u56fe LazyVStack \u548c LazyHStack \uff1a\u60f0\u6027 Stack \u5bb9\u5668 LazyVGrid \u548c LazyHGrid \uff1a\u7f51\u683c\u5bb9\u5668 \u7ec3\u4e60\uff1a\u539f\u751f View \u4e0e\u57fa\u672c\u5e03\u5c40 \u5229\u7528 VStack \u3001 HStack \u548c\u5176\u4ed6\u539f\u751f View\uff0c\u6784\u5efa\u4e00\u4e2a\u5982\u4e0b\u56fe\u6240\u793a\u7684 View\uff1a \u63d0\u793a\uff1a \u4e00\u4e2a\u56fa\u5b9a\u5927\u5c0f\u7684\u5706\u53ef\u4ee5\u7528 Circle().frame(...) \u751f\u6210 \u56fe\u6807\u5bf9\u5e94\u7684 system name \u4e3a star \u53c2\u8003\u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 VStack ( alignment : . leading , spacing : 15 ) { HStack { Circle () . frame ( width : 37 , height : 37 ) . foregroundColor (. yellow ) . overlay { Text ( \"A\" ) . font (. system (. body , weight : . heavy , design : . rounded )) . foregroundColor (. white ) } VStack ( alignment : . leading , spacing : 2 ) { Text ( \"#123456\" ) . font (. system ( size : 16 , weight : . medium )) Text ( \"1\u5c0f\u65f6\u524d\" ) . font (. system ( size : 13 , weight : . semibold )) . foregroundColor (. secondary ) } Spacer () Label ( \"6\" , systemImage : \"star\" ) } Text ( \"\u501f\u52a9 SwiftUI...\" ) } . padding () \u6ce8\u610f\uff0c\u6700\u5916\u5c42 VStack \u7684 alignment \u53c2\u6570\u4e3a .leading \u3002\u8bf7\u601d\u8003\u5176\u4e2d\u7684\u539f\u56e0\u3002","title":"\u5e03\u5c40\u4e0e\u6392\u5217"},{"location":"frontend/swiftui/build-views/#_5","text":"Group \u5c06\u591a\u4e2a View \u7ec4\u5408\u8d77\u6765\u5904\u7406\uff0c\u6216\u7528\u4e8e\u6dfb\u52a0\u903b\u8f91\u63a7\u5236\u3002 \u4e00\u4e2a Group \u5bf9\u5176\u4e2d\u7684\u5b50 View \u6ca1\u6709\u4efb\u4f55\u5f71\u54cd\uff0c\u5404\u4e2a View \u4ecd\u7136\u4fdd\u6301\u72ec\u7acb\uff0c\u5bf9 Group \u6dfb\u52a0 modifier \u76f8\u5f53\u4e8e\u7ed9\u6bcf\u4e00\u4e2a View \u6dfb\u52a0 modifier\uff1a 1 2 3 4 5 6 7 8 VStack { Group { Text ( \"Index: 0\" ) Text ( \"Index: 1\" ) } . background ( Color . yellow ) . padding () } \u6548\u679c\u4e3a\uff1a \u6211\u4eec\u5e38\u7528\u8fd9\u79cd\u65b9\u6cd5\u540c\u65f6\u7ed9\u591a\u4e2a View \u6dfb\u52a0\u76f8\u540c\u7684 modifier\u3002 \u53e6\u5916\uff0c Group \u7684\u53c2\u6570\u4e3a @ViewBuilder \uff0c\u53ef\u7528\u4e8e\u5728\u67d0\u4e9b\u4e0d\u652f\u6301 if-else \u8bed\u53e5\u7b49\u5730\u65b9\u6dfb\u52a0\u903b\u8f91\u63a7\u5236\u3002\u5982\uff1a 1 2 3 4 5 6 7 8 Color . yellow . overlay ( Group { if condition { ... } else { ... } }) Note \u8bf7\u67e5\u9605 .overlay() \u7684\u6587\u6863\uff0c\u627e\u51fa\u8fd9\u91cc\u7684 .overlay() \u548c\u4e0a\u9762 ZStack \u4e2d\u63d0\u5230\u7684 .overlay() \u7684\u533a\u522b\u3002 ForEach \u8fed\u4ee3\u4e00\u4e2a\u96c6\u5408\u5185\u7684\u5143\u7d20\uff0c\u5e76\u4f9d\u6b21\u751f\u6210 View\uff0c\u7c7b\u4f3c\u4e8e for \u5faa\u73af\u3002 1 2 3 4 5 VStack { ForEach ( 0. .< 10 ) { index in Text ( \"Index: \\( index ) \" ) } } \u4f46\u662f\uff0c\u4e0d\u80fd\u7b80\u5355\u5730\u8fed\u4ee3\u4efb\u610f\u4e00\u4e2a\u6570\u7ec4\uff1a 1 2 3 4 5 let students = [ \"Alice\" , \"Bob\" , \"Carol\" ] ForEach ( students ) { student in Text ( student ) } \u7f16\u8bd1\u5668\u4f1a\u62a5\u9519\uff1a 1 Referencing initializer 'init(_:content:)' on 'ForEach' requires that 'String' conform to 'Identifiable' \u610f\u601d\u662f\uff0c\u6240\u8fed\u4ee3\u6570\u7ec4\u7684\u5143\u7d20\u7684\u7c7b\u578b\u5fc5\u987b\u9075\u5faa Identifiable \u3002\u7b80\u5355\u6765\u8bf4\uff0c\u56e0\u4e3a SwiftUI \u66f4\u65b0\u65f6\u9700\u8981\u786e\u5207\u77e5\u9053 \u54ea\u4e2a View \u4f9d\u8d56\u7684\u6570\u636e\u66f4\u65b0\u4e86 \uff0c\u751f\u6210 View \u7684\u6570\u636e\u5fc5\u987b\u662f\u53ef\u4ee5\u76f8\u4e92\u533a\u5206\u7684\u3002 \u901a\u8fc7\u4f7f\u6570\u7ec4\u5143\u7d20\u7684\u7c7b\u578b\u9075\u5faa Identifiable \uff0c\u6211\u4eec\u4fbf\u53ef\u4ee5\u5b89\u5168\u5730\u901a\u8fc7 ForEach \u8fed\u4ee3\u6570\u7ec4\uff0c\u6ce8\u610f id \u5fc5\u987b\u4e92\u4e0d\u76f8\u540c\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5d29\u6e83\uff1a 1 2 3 4 5 6 7 8 9 struct Student : Identifiable { var id : Int { return studentID } // Identifiable requirement var studentID : Int // \u5b66\u53f7\uff0c\u5fc5\u7136\u4e92\u4e0d\u76f8\u540c var name : String } ForEach ( students ) { student in Text ( student . name ) } \u5728 \u6570\u7ec4\u56fa\u5b9a \u7684\u60c5\u51b5\u4e0b\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 count \u6216 indices \u8fdb\u884c\u8fed\u4ee3\uff0c\u6b64\u65f6\u9700\u8981\u663e\u5f0f\u6307\u51fa\u7528\u4e8e\u533a\u5206\u7684 id \uff1a 1 2 3 4 5 6 7 8 9 let students = [ \"Alice\" , \"Bob\" , \"Carol\" ] ForEach ( 0. .< students . count , id : \\ . self ) { index in Text ( students [ index ]) } ForEach ( students . indices , id : \\ . self ) { index in Text ( students [ index ]) } \u8fd9\u91cc \\.self \u7528\u5230 Swift \u7684 KeyPath \uff0c \\.self \u7684\u610f\u601d\u662f\u8fd4\u56de\u4e0b\u6807\u672c\u8eab\uff08 Int \uff09\uff0c\u4f7f\u7528\u5176\u6240\u4e3a\u533a\u5206\u4e0d\u540c\u5143\u7d20\u7684 id\u3002 Info \u5173\u4e8e\u4e0d\u540c View \u5728\u5e95\u5c42\u662f\u5982\u4f55\u533a\u5206\u7684\uff0c\u53c2\u8003 WWDC21: Demystify SwiftUI \u3002 \u53e6\u5916\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f ForEach \u548c Group \u7c7b\u4f3c\uff0c\u5e76\u4e0d\u628a\u5176\u4e2d\u7684 View \u53d8\u6210\u4e00\u6574\u4e2a View\uff1b\u5bf9\u5176\u6dfb\u52a0 modifier \u76f8\u5f53\u4e8e\u5bf9\u5404\u4e2a\u5b50 View \u6dfb\u52a0\u3002","title":"\u7ec4\u5408"},{"location":"frontend/swiftui/build-views/#modifier","text":"","title":"Modifier"},{"location":"frontend/swiftui/build-views/#modifier_1","text":"\u4e0d\u540c View modifier \u7684\u4e0d\u540c\u6548\u679c\u5e38\u5e38\u4ee4\u521d\u5b66\u8005\u8ff7\u60d1\u3002\u4e00\u822c\u6765\u8bf4\uff0cView modifier \u7684\u7c7b\u578b\u6709\u5982\u4e0b\u51e0\u7c7b\uff1a \u6539\u53d8\u73af\u5883\u53d8\u91cf\uff0c\u5bf9\u5176\u4f5c\u7528\u8303\u56f4\u5185\u7684\u6240\u6709 View \u5747\u6709\u6548 \u5178\u578b\u7684\u4f8b\u5b50\u662f font \u3001 foregroundColor \u7b49\u3002\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 VStack { Image ( systemName : \"globe\" ) HStack { Text ( \"Hello\" ) . bold () Text ( \"World\" ) . italic () } } . font (. title3 ) . foregroundColor (. orange ) \u8fd9\u91cc\uff0c .font(.title3) \u548c .foregroundColor(.orange) \u5bf9 VStack \u5185\u5904\u4e8e\u4efb\u610f\u5c42\u7ea7\u7684 View \u5747\u6709\u6548\u3002 \u4ec5\u4fee\u9970\u6700\u5916\u5c42 View \u5178\u578b\u7684\u4f8b\u5b50\u662f padding \uff1a 1 2 3 4 5 6 HStack ( spacing : 0 ) { Color . yellow Color . orange } . padding () . background ( Color . gray ) \u5728\u8fd9\u91cc\uff0c padding \u4ec5\u5728 HStack \u5916\u6dfb\u52a0\u4e86\u8fb9\u8ddd\uff0c\u800c\u5bf9\u5176\u4e2d\u7684\u4e24\u4e2a Color \u65e0\u5f71\u54cd\u3002 \u8fd4\u56de\u7279\u5b9a\u7c7b\u578b\u7684 View \u8fd9\u4e9b modifier \u5e76\u4e0d\u662f\u8fd4\u56de some View \u800c\u662f\u7279\u5b9a\u7c7b\u578b\uff0c\u56e0\u6b64\u540e\u7eed\u53ef\u4f7f\u7528\u7684 modifier \u66f4\u591a\uff0c\u6700\u5178\u578b\u7684\u662f Text \uff1a 1 2 3 4 5 Text ( \"Hello, world!\" ) . bold () . italic () . font (. title ) . foregroundColor (. yellow ) \u4e0a\u9762\u56db\u4e2a modifier \u7684\u8fd4\u56de\u503c\u5747\u4e3a Text \uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u5982 italic \u8fd9\u7c7b\u53ea\u80fd\u7528\u4e8e Text \u7684 modifier\u3002","title":"Modifier \u7684\u79cd\u7c7b"},{"location":"frontend/swiftui/build-views/#modifier_2","text":"\u53ef\u4ee5\u901a\u8fc7 extension \u5c06\u4e00\u4e9b\u6837\u5f0f\u7ec4\u5408\u6210 modifier\uff0c\u65b9\u4fbf\u91cd\u7528\uff1a 1 2 3 4 5 6 7 8 9 10 11 extension View { func defaultContainerStyle () -> some View { self . padding (. horizontal , 10 ) . padding (. vertical , 5 ) } } VStack { ... } . defaultContainerStyle () \u53e6\u5916\uff0c\u53ef\u4ee5\u901a\u8fc7 ViewModifier \u534f\u8bae\u5b9a\u4e49\u4f5c\u7528\u66f4\u5f3a\u7684 modifier\uff0c\u53ef\u4ee5\u62e5\u6709\u72b6\u6001\uff08\u89c1 \u6570\u636e\u6d41\u57fa\u7840 \uff09\uff0c\u5728\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002","title":"\u81ea\u5b9a\u4e49 modifier"},{"location":"frontend/swiftui/data-flow/","text":"\u6211\u4eec\u4e4b\u524d\u4ecb\u7ecd\u7684\u90fd\u662f\u4e00\u4e9b\u975e\u5e38\u7b80\u5355\u7684\u60c5\u51b5\uff1a\u5b83\u4eec\u90fd\u4e0d\u6d89\u53ca\u53d8\u5316\u7684\u72b6\u6001\u3002\u7136\u800c\uff0c\u51e0\u4e4e\u6240\u6709\u7684\u5e94\u7528\u90fd\u9700\u8981\u4f9d\u8d56\u4e8e\u53d8\u5316\u7684\u6570\u636e\u3002\u6211\u4eec\u9700\u8981\u4e00\u79cd\u65b9\u6cd5\uff0c\u4f7f\u5f97\u5f53\u6570\u636e\u66f4\u65b0\u65f6\u53ca\u65f6\u3001\u6b63\u786e\u5730\u66f4\u65b0\u6211\u4eec\u7684 UI\u3002\u6211\u4eec\u5c06\u4ecb\u7ecd UI \u4e0e\u6570\u636e\u7ed1\u5b9a\u8fc7\u7a0b\u4e2d\u6d89\u53ca\u7684\u4e00\u4e9b\u6700\u57fa\u672c\u7684\u5e38\u89c1\u6570\u636e\u6d41\u3002 State \u00b6 \u6211\u4eec\u6765\u770b\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u3002\u5728\u6211\u4eec\u7684 View \u4e2d\uff0c\u9700\u8981\u8bb0\u5f55\u7528\u6237\u70b9\u51fb\u7684\u6b21\u6570\uff0c\u5e76\u663e\u793a\u5728\u5c4f\u5e55\u4e0a\u3002\u4f60\u53ef\u80fd\u60f3\u8981\u8fd9\u6837\u5199\uff1a\u7ed9 ContentView \u52a0\u4e0a\u4e00\u4e2a\u53d8\u91cf count \uff0c\u7136\u540e\u5728 Button \u4e2d\u66f4\u6539\u8fd9\u4e2a\u503c\uff1a 1 2 3 4 5 6 7 8 9 10 struct ContentView : View { var count : Int = 0 var body : some View { HStack { Button ( \"Click\" ) { count += 1 } Text ( \" \\( count ) \" ) } } } \u4f46\u8fd9\u6837\u662f\u4e0d\u80fd\u6b63\u5e38\u5de5\u4f5c\u7684\u3002 \u9996\u5148\uff0c\u8fd9\u4e2a\u4ee3\u7801\u5e76\u4e0d\u80fd\u901a\u8fc7\u7f16\u8bd1\uff1a 1 Left side of mutating operator isn't mutable: 'self' is immutable \u539f\u56e0\u662f\uff0c struct \u662f\u503c\u7c7b\u578b\uff0c\u4e00\u822c\u7684\u51fd\u6570\u4e0d\u80fd\u591f\u4fee\u6539\u5176\u53d8\u91cf\u7684\u503c\u3002 \u800c\u4e14\uff0c\u6709\u4e00\u4e2a\u66f4\u52a0\u6df1\u5c42\u7684\u539f\u56e0\u3002\u6211\u4eec\u6539\u53d8\u4e86 count \uff0c\u5e76\u4e14\u5e0c\u671b Text(\"\\(count)\") \u80fd\u663e\u793a\u6700\u65b0\u7684\u503c\u3002\u4f46\u662f\uff0c ContentView \u5e76\u4e0d\u77e5\u9053\u5f53 count \u66f4\u65b0\u65f6\u9700\u8981\u66f4\u65b0 UI\u3002 \u4fee\u6539\u7684\u65b9\u6cd5\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u5728 var count: Int = 0 \u524d\u52a0\u4e0a @State \uff1a 1 @ State var count : Int = 0 \u8fd9\u6837\uff0c\u5c31\u80fd\u591f\u901a\u8fc7\u7f16\u8bd1\uff0c\u5e76\u4e14\u6211\u4eec\u7684\u754c\u9762\u4f1a\u968f\u7740 count \u7684\u66f4\u65b0\u800c\u66f4\u65b0\u4e86\uff1a @State \u662f\u4ec0\u4e48\u8bed\u6cd5\uff1f\u4e3a\u4ec0\u4e48\u80fd\u591f\u4fee\u6539 count \uff1f @State \u6d89\u53ca\u5230\u4e00\u79cd\u53eb property wrapper \u7684\u8bed\u6cd5\u3002\u7b80\u5355\u6765\u8bf4\uff0cproperty wrapper \u6709\u5982\u4e0b\u7279\u6027\uff1a \u662f\u4e00\u4e2a\u5305\u88c5\u540e\u7684\u7c7b\u578b\uff0c\u4f46\u5bf9\u5916\u7684\u8868\u73b0\u5c31\u50cf\u662f\u88ab\u5305\u88c5\u524d\u7684\u6570\u636e\u4e00\u6837 \u5f53\u88ab\u5305\u88c5\u7684\u503c\u88ab\u8bbe\u5b9a\u6216\u88ab\u8bfb\u53d6\u65f6\uff0c\u6267\u884c\u7279\u5b9a\u7684\u4ee3\u7801 \u56e0\u4e3a\u6211\u4eec\u5b9e\u9645\u4e0a\u662f\u4fee\u6539 @State \u6240\u5305\u88c5\u7684\u503c\u800c\u975e @State \u53d8\u91cf\u672c\u8eab\uff0c\u6240\u4ee5\u662f\u53ef\u4ee5\u4fee\u6539 count \u7684\u503c\u7684\u3002 \u4e3a\u4ec0\u4e48\u66f4\u65b0 count \u4e4b\u540e UI \u4f1a\u81ea\u52a8\u66f4\u65b0\uff1f \u4e0a\u9762\u5173\u4e8e property wrapper \u7684\u7279\u6027\u5177\u4f53\u5230 @State \uff0c\u5373\uff1a \u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u53d6\u5176\u6240\u50a8\u5b58\u7684\u503c\uff08\u5982\u4e0a\u9762\u7684 Text(\"\\(count)\") \uff09 \u5b83\u5728\u88ab\u8bbe\u5b9a\u65f6\u4f1a\u89e6\u53d1 View \u91cd\u65b0\u8ba1\u7b97 body \uff08\u5982\u4e0a\u9762\u7684 count += 1 \uff09 \u4e8e\u662f\uff0c\u901a\u8fc7 @State \uff0c\u6211\u4eec\u5b9e\u73b0\u4e86 UI \u4e0e\u6570\u636e\u7684\u7ed1\u5b9a \uff0c\u53ea\u8981 count \u66f4\u65b0\uff0c\u6574\u4e2a View \u5c31\u4f1a\u88ab\u91cd\u65b0\u8ba1\u7b97\u3002\u6211\u4eec\u7684 UI \u5728\u4efb\u4f55\u65f6\u523b\u90fd\u53cd\u6620\u4e86\u6570\u636e\u6700\u65b0\u7684\u503c\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4fee\u6539\u6570\u636e\uff0c\u800c\u65e0\u9700\u624b\u52a8\u5730\u66f4\u65b0 UI\u3002 React \u4e2d\u7684\u7c7b\u4f3c\u65b9\u6cd5 \u5982\u679c\u4f60\u5bf9 React \u6709\u6240\u4e86\u89e3\uff0c @State \u76f8\u5f53\u4e8e\uff1a \u5bf9\u4e8e Component \uff1a\u901a\u8fc7 state \u83b7\u53d6\u503c\uff1b\u8c03\u7528 setState \u66f4\u6539\u503c \u5bf9\u4e8e\u7eaf\u51fd\u6570\u7ec4\u4ef6\uff1a useState \u7684\u4e24\u4e2a\u8fd4\u56de\u503c\uff0c\u5206\u522b\u5bf9\u5e94\u83b7\u53d6\u548c\u66f4\u6539 \u5b9e\u9645\u4e0a\uff0cView \u548c React \u4e2d\u7684\u7eaf\u51fd\u6570\u7ec4\u4ef6\u6982\u5ff5\u4e0a\u662f\u4e00\u6837\u7684\u3002SwiftUI \u901a\u8fc7 Swift \u7684 property wrapper \u8bed\u6cd5\uff0c\u5c06\u83b7\u53d6\u503c\u3001\u8bbe\u5b9a\u503c\u4ee5\u53ca\u66f4\u65b0 UI \u7b80\u5316\u4e3a\u4e00\u4e2a\u53d8\u91cf\u7684\u8bfb\u53d6\u548c\u8bbe\u5b9a\uff0c\u800c React \u56e0\u4e3a\u8bed\u8a00\u7684\u9650\u5236\uff0c\u8bbe\u5b9a\u503c\u4ee5\u53ca\u66f4\u65b0 UI \u53ea\u80fd\u91c7\u7528\u8c03\u7528\u51fd\u6570\u7684\u65b9\u6cd5\u3002 Binding \u00b6 @State \u89e3\u51b3\u4e86\u5728 \u5355\u4e2a View \u4e2d\u6839\u636e\u6570\u636e\u66f4\u65b0 View \u7684\u95ee\u9898\u3002\u4f46\u662f\uff0c\u6709\u65f6\u6211\u4eec\u4e3a\u4e86\u91cd\u7528\u4ee3\u7801\u6216\u4fdd\u6301\u4ee3\u7801\u7684\u7b80\u6d01\uff0c\u9700\u8981\u5c06\u4e00\u4e9b View \u62c6\u5206\u51fa\u6765\uff0c\u8fd9\u5c31\u4ea7\u751f\u4e86\u4e00\u4e2a\u95ee\u9898\uff1a \u5982\u4f55\u5728\u7236 View \u548c\u5b50 View \u4e2d\u5171\u4eab\u4e00\u4e2a\u53ef\u7531\u5b50 View \u4fee\u6539\u7684\u503c\uff1f \u4e5f\u5c31\u662f\u8bf4\uff0c\u6570\u636e\u5982\u4f55\u4ece\u5b50\u89c6\u56fe\u6d41\u5411\u7236\u89c6\u56fe\uff1f \u6bd4\u5982\uff0c\u6211\u4eec\u5e0c\u671b\u628a\u300c\u70b9\u51fb\u4e00\u6b21\u4f7f\u5f97\u503c\u52a0 1\u300d\u7684\u6309\u94ae\u5c01\u88c5\u8d77\u6765\uff0c\u4ee5\u4fbf\u91cd\u590d\u4f7f\u7528\uff0c\u90a3\u4e48\u4e0a\u9762\u7684 Button \u4e0d\u518d\u5728 ContentView \u4e2d\u5b9a\u4e49\uff0c\u800c\u662f\u5728\u53e6\u4e00\u4e2a View \u4e2d\u51fa\u73b0\uff1a 1 2 3 4 5 6 7 8 struct IncrementButton : View { // TODO: Data var body : some View { Button ( \"Increase\" ) { // TODO: Increse data } } } \u5982\u4f55\u5728\u8fd9\u4e24\u4e2a View \u5171\u4eab count \u4f7f\u5f97 IncrementButton \u53ef\u4ee5\u4fee\u6539\u5462\uff1f\u8fd9\u5c31\u9700\u8981 @Binding \u3002\u5728 IncrementButton \u4e2d\uff0c\u6dfb\u52a0\u4e00\u4e2a\u6210\u5458 @Binding var value: Int \uff0c\u5e76\u5728 Button \u7684 action \u4e2d\u5c06\u5176\u503c\u52a0 1\uff1a 1 2 3 4 5 6 7 struct IncrementButton : View { @ Binding var value : Int var body : some View { Button ( \"Increase\" ) { value += 1 } } } \u800c\u5728\u7236 View \u4e2d\uff0c\u901a\u8fc7\u5728 @State \u53d8\u91cf\u540d\u524d\u52a0\u4e0a\u4e00\u4e2a $ \u6765\u4f20\u9012 Binding \uff1a 1 2 3 4 5 6 7 8 9 10 struct ContentView : View { @ State var count : Int = 0 var body : some View { HStack { IncrementButton ( value : $ count ) Text ( \" \\( count ) \" ) } } } \u5728 IncrementButton \u4e2d\u4fee\u6539 value \uff0c ContentView \u4e2d\u7684 count \u5c31\u4f1a\u540c\u6b65\u53d8\u5316\u3002\u6362\u800c\u8a00\u4e4b\uff0c\u6211\u4eec\u5b9e\u73b0\u4e86 \u7236 View \u548c\u5b50 View \u6570\u636e\u7684\u7ed1\u5b9a\u3002 \u5173\u4e8e $count \u5728\u53d8\u91cf\u540d\u524d\u52a0 $ \u5e76\u4e0d\u662f\u4e00\u79cd\u8bed\u6cd5\uff0c\u800c\u662f\u7f16\u8bd1\u5668\u81ea\u52a8\u7ed9 ContentView \u52a0\u4e0a\u4e86\u4e00\u4e2a\u53d8\u91cf\u540d\u4e3a $count \u7684\u6210\u5458\u53d8\u91cf\uff0c\u5b83\u7684\u7c7b\u578b\u4e3a Binding \u3002 \u66f4\u591a\u7684\u539f\u751f View \u638c\u63e1\u4e86 @Binding \u540e\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u66f4\u591a\u7684\u4e0e\u6570\u636e\u76f8\u5173\u7684\u539f\u751f View \u4e86\u3002\u6bd4\u5982\uff0c\u4e00\u4e2a\u6587\u672c\u6846\uff1a 1 TextField ( \"\" , text : $ myText ) \u5f53\u7528\u6237\u8f93\u5165\u6587\u672c\u65f6\uff0c TextField \u4e2d\u7684\u6587\u672c\u4f1a\u540c\u6b65\u5230 myText \u4e2d\u3002 \u4f60\u53ef\u4ee5\u5728\u6587\u6863\u4e2d\u63a2\u7d22\u66f4\u591a\u7684\u539f\u751f View\u3002 $count \u7684\u5b9e\u8d28 \u5728\u6587\u6863\u4e2d\uff0c\u4f60\u53ef\u4ee5\u770b\u5230 Binding \u6709\u8fd9\u6837\u4e00\u79cd\u6784\u9020\u51fd\u6570\uff1a 1 init ( get : @ escaping () -> Value , set : @ escaping ( Value ) -> Void ) \u7b2c\u4e00\u4e2a\u53c2\u6570 get \u7528\u4e8e\u8fd4\u56de Binding \u53d8\u91cf\u8bfb\u53d6\u7684\u503c\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570 set \u662f\u5f53 Binding \u53d8\u91cf\u6539\u53d8\u65f6\u6240\u6267\u884c\u7684\u64cd\u4f5c\u3002 \u56e0\u6b64\uff0c\u4f60\u5b8c\u5168\u53ef\u4ee5\u7528\u8fd9\u79cd\u65b9\u6cd5\u53d6\u4ee3 $count \uff1a 1 2 3 4 5 6 IncrementButton ( value : Binding ( get : { count }, set : { count = $0 } ) ) \u5f53 IncrementButton \u83b7\u53d6 value \u65f6\uff0c\u8c03\u7528 get \u83b7\u53d6\u5f53\u524d\u7684\u503c\uff1b\u5f53 IncrementButton \u6539\u53d8 value \u65f6\uff0c\u8c03\u7528 set \u66f4\u65b0 count \u3002\u7531 @State \u751f\u6210\u7684 Binding \u53d8\u91cf\u65e0\u975e\u5c31\u662f\u5b9e\u73b0\u8fd9\u6837\u7684\u529f\u80fd\u3002 UI \u662f\u72b6\u6001\u7684\u51fd\u6570 \u00b6 \u901a\u8fc7\u4e0a\u9762\u7684\u4e00\u4e9b\u4f8b\u5b50\uff0c\u4f60\u5e94\u8be5\u80fd\u603b\u7ed3\u51fa SwiftUI \u4e2d View \u7684\u4e00\u4e9b\u7279\u70b9\u3002\u6700\u660e\u663e\u7684\u662f\uff1a View \u552f\u4e00\u5730\u7531\u6570\u636e\u786e\u5b9a\u3002 \u5982\u679c\u5c06 @State \u3001 @Binding \u6240\u4ee3\u8868\u7684\u6570\u636e\u89c6\u4f5c\u4e00\u79cd\u201c\u72b6\u6001\u201d\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5199\u51fa\u8fd9\u6837\u4e00\u6761\u5f0f\u5b50\uff1a 1 View = f(state) \u5176\u4e2d\u7684 f \uff0c\u5176\u5b9e\u5c31\u662f View \u4e2d\u7684 body \u3002\u6bcf\u6b21 state \u66f4\u65b0\u65f6\uff0cView \u901a\u8fc7 body \u7684\u5b9a\u4e49\u8ba1\u7b97\u51fa\u65b0\u72b6\u6001\u4e0b\u7684 UI\uff0c\u5e76\u8fdb\u884c\u66f4\u65b0\u3002\u6240\u4ee5\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48 body \u5e94\u5f53\u662f\u4e00\u4e2a \u8ba1\u7b97\u53d8\u91cf \uff0c\u800c\u4e0d\u662f\u50a8\u5b58\u53d8\u91cf\u2014\u2014\u5b83\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u51fd\u6570\u3002 \u8fd9\u79cd\u6027\u8d28\u4e00\u4e2a\u5f88\u81ea\u7136\u7684\u7ed3\u679c\u662f\uff1a \u6211\u4eec\u65e0\u6cd5\u83b7\u5f97 View \u7684\u5f15\u7528\uff0c\u4e5f\u65e0\u6cd5\u76f4\u63a5\u4fee\u6539\u5176 UI\uff0c\u6240\u6709\u5bf9 UI \u7684\u4fee\u6539\u90fd\u6e90\u81ea\u4e8e\u6570\u636e\u7684\u6539\u53d8 \u3002 \u6211\u4eec\u5728\u4e0b\u4e00\u8282\u4e2d\u8fdb\u884c\u66f4\u6df1\u5165\u7684\u8ba8\u8bba\u3002","title":"\u6570\u636e\u6d41\u57fa\u7840"},{"location":"frontend/swiftui/data-flow/#state","text":"\u6211\u4eec\u6765\u770b\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u3002\u5728\u6211\u4eec\u7684 View \u4e2d\uff0c\u9700\u8981\u8bb0\u5f55\u7528\u6237\u70b9\u51fb\u7684\u6b21\u6570\uff0c\u5e76\u663e\u793a\u5728\u5c4f\u5e55\u4e0a\u3002\u4f60\u53ef\u80fd\u60f3\u8981\u8fd9\u6837\u5199\uff1a\u7ed9 ContentView \u52a0\u4e0a\u4e00\u4e2a\u53d8\u91cf count \uff0c\u7136\u540e\u5728 Button \u4e2d\u66f4\u6539\u8fd9\u4e2a\u503c\uff1a 1 2 3 4 5 6 7 8 9 10 struct ContentView : View { var count : Int = 0 var body : some View { HStack { Button ( \"Click\" ) { count += 1 } Text ( \" \\( count ) \" ) } } } \u4f46\u8fd9\u6837\u662f\u4e0d\u80fd\u6b63\u5e38\u5de5\u4f5c\u7684\u3002 \u9996\u5148\uff0c\u8fd9\u4e2a\u4ee3\u7801\u5e76\u4e0d\u80fd\u901a\u8fc7\u7f16\u8bd1\uff1a 1 Left side of mutating operator isn't mutable: 'self' is immutable \u539f\u56e0\u662f\uff0c struct \u662f\u503c\u7c7b\u578b\uff0c\u4e00\u822c\u7684\u51fd\u6570\u4e0d\u80fd\u591f\u4fee\u6539\u5176\u53d8\u91cf\u7684\u503c\u3002 \u800c\u4e14\uff0c\u6709\u4e00\u4e2a\u66f4\u52a0\u6df1\u5c42\u7684\u539f\u56e0\u3002\u6211\u4eec\u6539\u53d8\u4e86 count \uff0c\u5e76\u4e14\u5e0c\u671b Text(\"\\(count)\") \u80fd\u663e\u793a\u6700\u65b0\u7684\u503c\u3002\u4f46\u662f\uff0c ContentView \u5e76\u4e0d\u77e5\u9053\u5f53 count \u66f4\u65b0\u65f6\u9700\u8981\u66f4\u65b0 UI\u3002 \u4fee\u6539\u7684\u65b9\u6cd5\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u5728 var count: Int = 0 \u524d\u52a0\u4e0a @State \uff1a 1 @ State var count : Int = 0 \u8fd9\u6837\uff0c\u5c31\u80fd\u591f\u901a\u8fc7\u7f16\u8bd1\uff0c\u5e76\u4e14\u6211\u4eec\u7684\u754c\u9762\u4f1a\u968f\u7740 count \u7684\u66f4\u65b0\u800c\u66f4\u65b0\u4e86\uff1a @State \u662f\u4ec0\u4e48\u8bed\u6cd5\uff1f\u4e3a\u4ec0\u4e48\u80fd\u591f\u4fee\u6539 count \uff1f @State \u6d89\u53ca\u5230\u4e00\u79cd\u53eb property wrapper \u7684\u8bed\u6cd5\u3002\u7b80\u5355\u6765\u8bf4\uff0cproperty wrapper \u6709\u5982\u4e0b\u7279\u6027\uff1a \u662f\u4e00\u4e2a\u5305\u88c5\u540e\u7684\u7c7b\u578b\uff0c\u4f46\u5bf9\u5916\u7684\u8868\u73b0\u5c31\u50cf\u662f\u88ab\u5305\u88c5\u524d\u7684\u6570\u636e\u4e00\u6837 \u5f53\u88ab\u5305\u88c5\u7684\u503c\u88ab\u8bbe\u5b9a\u6216\u88ab\u8bfb\u53d6\u65f6\uff0c\u6267\u884c\u7279\u5b9a\u7684\u4ee3\u7801 \u56e0\u4e3a\u6211\u4eec\u5b9e\u9645\u4e0a\u662f\u4fee\u6539 @State \u6240\u5305\u88c5\u7684\u503c\u800c\u975e @State \u53d8\u91cf\u672c\u8eab\uff0c\u6240\u4ee5\u662f\u53ef\u4ee5\u4fee\u6539 count \u7684\u503c\u7684\u3002 \u4e3a\u4ec0\u4e48\u66f4\u65b0 count \u4e4b\u540e UI \u4f1a\u81ea\u52a8\u66f4\u65b0\uff1f \u4e0a\u9762\u5173\u4e8e property wrapper \u7684\u7279\u6027\u5177\u4f53\u5230 @State \uff0c\u5373\uff1a \u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u53d6\u5176\u6240\u50a8\u5b58\u7684\u503c\uff08\u5982\u4e0a\u9762\u7684 Text(\"\\(count)\") \uff09 \u5b83\u5728\u88ab\u8bbe\u5b9a\u65f6\u4f1a\u89e6\u53d1 View \u91cd\u65b0\u8ba1\u7b97 body \uff08\u5982\u4e0a\u9762\u7684 count += 1 \uff09 \u4e8e\u662f\uff0c\u901a\u8fc7 @State \uff0c\u6211\u4eec\u5b9e\u73b0\u4e86 UI \u4e0e\u6570\u636e\u7684\u7ed1\u5b9a \uff0c\u53ea\u8981 count \u66f4\u65b0\uff0c\u6574\u4e2a View \u5c31\u4f1a\u88ab\u91cd\u65b0\u8ba1\u7b97\u3002\u6211\u4eec\u7684 UI \u5728\u4efb\u4f55\u65f6\u523b\u90fd\u53cd\u6620\u4e86\u6570\u636e\u6700\u65b0\u7684\u503c\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4fee\u6539\u6570\u636e\uff0c\u800c\u65e0\u9700\u624b\u52a8\u5730\u66f4\u65b0 UI\u3002 React \u4e2d\u7684\u7c7b\u4f3c\u65b9\u6cd5 \u5982\u679c\u4f60\u5bf9 React \u6709\u6240\u4e86\u89e3\uff0c @State \u76f8\u5f53\u4e8e\uff1a \u5bf9\u4e8e Component \uff1a\u901a\u8fc7 state \u83b7\u53d6\u503c\uff1b\u8c03\u7528 setState \u66f4\u6539\u503c \u5bf9\u4e8e\u7eaf\u51fd\u6570\u7ec4\u4ef6\uff1a useState \u7684\u4e24\u4e2a\u8fd4\u56de\u503c\uff0c\u5206\u522b\u5bf9\u5e94\u83b7\u53d6\u548c\u66f4\u6539 \u5b9e\u9645\u4e0a\uff0cView \u548c React \u4e2d\u7684\u7eaf\u51fd\u6570\u7ec4\u4ef6\u6982\u5ff5\u4e0a\u662f\u4e00\u6837\u7684\u3002SwiftUI \u901a\u8fc7 Swift \u7684 property wrapper \u8bed\u6cd5\uff0c\u5c06\u83b7\u53d6\u503c\u3001\u8bbe\u5b9a\u503c\u4ee5\u53ca\u66f4\u65b0 UI \u7b80\u5316\u4e3a\u4e00\u4e2a\u53d8\u91cf\u7684\u8bfb\u53d6\u548c\u8bbe\u5b9a\uff0c\u800c React \u56e0\u4e3a\u8bed\u8a00\u7684\u9650\u5236\uff0c\u8bbe\u5b9a\u503c\u4ee5\u53ca\u66f4\u65b0 UI \u53ea\u80fd\u91c7\u7528\u8c03\u7528\u51fd\u6570\u7684\u65b9\u6cd5\u3002","title":"State"},{"location":"frontend/swiftui/data-flow/#binding","text":"@State \u89e3\u51b3\u4e86\u5728 \u5355\u4e2a View \u4e2d\u6839\u636e\u6570\u636e\u66f4\u65b0 View \u7684\u95ee\u9898\u3002\u4f46\u662f\uff0c\u6709\u65f6\u6211\u4eec\u4e3a\u4e86\u91cd\u7528\u4ee3\u7801\u6216\u4fdd\u6301\u4ee3\u7801\u7684\u7b80\u6d01\uff0c\u9700\u8981\u5c06\u4e00\u4e9b View \u62c6\u5206\u51fa\u6765\uff0c\u8fd9\u5c31\u4ea7\u751f\u4e86\u4e00\u4e2a\u95ee\u9898\uff1a \u5982\u4f55\u5728\u7236 View \u548c\u5b50 View \u4e2d\u5171\u4eab\u4e00\u4e2a\u53ef\u7531\u5b50 View \u4fee\u6539\u7684\u503c\uff1f \u4e5f\u5c31\u662f\u8bf4\uff0c\u6570\u636e\u5982\u4f55\u4ece\u5b50\u89c6\u56fe\u6d41\u5411\u7236\u89c6\u56fe\uff1f \u6bd4\u5982\uff0c\u6211\u4eec\u5e0c\u671b\u628a\u300c\u70b9\u51fb\u4e00\u6b21\u4f7f\u5f97\u503c\u52a0 1\u300d\u7684\u6309\u94ae\u5c01\u88c5\u8d77\u6765\uff0c\u4ee5\u4fbf\u91cd\u590d\u4f7f\u7528\uff0c\u90a3\u4e48\u4e0a\u9762\u7684 Button \u4e0d\u518d\u5728 ContentView \u4e2d\u5b9a\u4e49\uff0c\u800c\u662f\u5728\u53e6\u4e00\u4e2a View \u4e2d\u51fa\u73b0\uff1a 1 2 3 4 5 6 7 8 struct IncrementButton : View { // TODO: Data var body : some View { Button ( \"Increase\" ) { // TODO: Increse data } } } \u5982\u4f55\u5728\u8fd9\u4e24\u4e2a View \u5171\u4eab count \u4f7f\u5f97 IncrementButton \u53ef\u4ee5\u4fee\u6539\u5462\uff1f\u8fd9\u5c31\u9700\u8981 @Binding \u3002\u5728 IncrementButton \u4e2d\uff0c\u6dfb\u52a0\u4e00\u4e2a\u6210\u5458 @Binding var value: Int \uff0c\u5e76\u5728 Button \u7684 action \u4e2d\u5c06\u5176\u503c\u52a0 1\uff1a 1 2 3 4 5 6 7 struct IncrementButton : View { @ Binding var value : Int var body : some View { Button ( \"Increase\" ) { value += 1 } } } \u800c\u5728\u7236 View \u4e2d\uff0c\u901a\u8fc7\u5728 @State \u53d8\u91cf\u540d\u524d\u52a0\u4e0a\u4e00\u4e2a $ \u6765\u4f20\u9012 Binding \uff1a 1 2 3 4 5 6 7 8 9 10 struct ContentView : View { @ State var count : Int = 0 var body : some View { HStack { IncrementButton ( value : $ count ) Text ( \" \\( count ) \" ) } } } \u5728 IncrementButton \u4e2d\u4fee\u6539 value \uff0c ContentView \u4e2d\u7684 count \u5c31\u4f1a\u540c\u6b65\u53d8\u5316\u3002\u6362\u800c\u8a00\u4e4b\uff0c\u6211\u4eec\u5b9e\u73b0\u4e86 \u7236 View \u548c\u5b50 View \u6570\u636e\u7684\u7ed1\u5b9a\u3002 \u5173\u4e8e $count \u5728\u53d8\u91cf\u540d\u524d\u52a0 $ \u5e76\u4e0d\u662f\u4e00\u79cd\u8bed\u6cd5\uff0c\u800c\u662f\u7f16\u8bd1\u5668\u81ea\u52a8\u7ed9 ContentView \u52a0\u4e0a\u4e86\u4e00\u4e2a\u53d8\u91cf\u540d\u4e3a $count \u7684\u6210\u5458\u53d8\u91cf\uff0c\u5b83\u7684\u7c7b\u578b\u4e3a Binding \u3002 \u66f4\u591a\u7684\u539f\u751f View \u638c\u63e1\u4e86 @Binding \u540e\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u66f4\u591a\u7684\u4e0e\u6570\u636e\u76f8\u5173\u7684\u539f\u751f View \u4e86\u3002\u6bd4\u5982\uff0c\u4e00\u4e2a\u6587\u672c\u6846\uff1a 1 TextField ( \"\" , text : $ myText ) \u5f53\u7528\u6237\u8f93\u5165\u6587\u672c\u65f6\uff0c TextField \u4e2d\u7684\u6587\u672c\u4f1a\u540c\u6b65\u5230 myText \u4e2d\u3002 \u4f60\u53ef\u4ee5\u5728\u6587\u6863\u4e2d\u63a2\u7d22\u66f4\u591a\u7684\u539f\u751f View\u3002 $count \u7684\u5b9e\u8d28 \u5728\u6587\u6863\u4e2d\uff0c\u4f60\u53ef\u4ee5\u770b\u5230 Binding \u6709\u8fd9\u6837\u4e00\u79cd\u6784\u9020\u51fd\u6570\uff1a 1 init ( get : @ escaping () -> Value , set : @ escaping ( Value ) -> Void ) \u7b2c\u4e00\u4e2a\u53c2\u6570 get \u7528\u4e8e\u8fd4\u56de Binding \u53d8\u91cf\u8bfb\u53d6\u7684\u503c\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570 set \u662f\u5f53 Binding \u53d8\u91cf\u6539\u53d8\u65f6\u6240\u6267\u884c\u7684\u64cd\u4f5c\u3002 \u56e0\u6b64\uff0c\u4f60\u5b8c\u5168\u53ef\u4ee5\u7528\u8fd9\u79cd\u65b9\u6cd5\u53d6\u4ee3 $count \uff1a 1 2 3 4 5 6 IncrementButton ( value : Binding ( get : { count }, set : { count = $0 } ) ) \u5f53 IncrementButton \u83b7\u53d6 value \u65f6\uff0c\u8c03\u7528 get \u83b7\u53d6\u5f53\u524d\u7684\u503c\uff1b\u5f53 IncrementButton \u6539\u53d8 value \u65f6\uff0c\u8c03\u7528 set \u66f4\u65b0 count \u3002\u7531 @State \u751f\u6210\u7684 Binding \u53d8\u91cf\u65e0\u975e\u5c31\u662f\u5b9e\u73b0\u8fd9\u6837\u7684\u529f\u80fd\u3002","title":"Binding"},{"location":"frontend/swiftui/data-flow/#ui","text":"\u901a\u8fc7\u4e0a\u9762\u7684\u4e00\u4e9b\u4f8b\u5b50\uff0c\u4f60\u5e94\u8be5\u80fd\u603b\u7ed3\u51fa SwiftUI \u4e2d View \u7684\u4e00\u4e9b\u7279\u70b9\u3002\u6700\u660e\u663e\u7684\u662f\uff1a View \u552f\u4e00\u5730\u7531\u6570\u636e\u786e\u5b9a\u3002 \u5982\u679c\u5c06 @State \u3001 @Binding \u6240\u4ee3\u8868\u7684\u6570\u636e\u89c6\u4f5c\u4e00\u79cd\u201c\u72b6\u6001\u201d\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5199\u51fa\u8fd9\u6837\u4e00\u6761\u5f0f\u5b50\uff1a 1 View = f(state) \u5176\u4e2d\u7684 f \uff0c\u5176\u5b9e\u5c31\u662f View \u4e2d\u7684 body \u3002\u6bcf\u6b21 state \u66f4\u65b0\u65f6\uff0cView \u901a\u8fc7 body \u7684\u5b9a\u4e49\u8ba1\u7b97\u51fa\u65b0\u72b6\u6001\u4e0b\u7684 UI\uff0c\u5e76\u8fdb\u884c\u66f4\u65b0\u3002\u6240\u4ee5\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48 body \u5e94\u5f53\u662f\u4e00\u4e2a \u8ba1\u7b97\u53d8\u91cf \uff0c\u800c\u4e0d\u662f\u50a8\u5b58\u53d8\u91cf\u2014\u2014\u5b83\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u51fd\u6570\u3002 \u8fd9\u79cd\u6027\u8d28\u4e00\u4e2a\u5f88\u81ea\u7136\u7684\u7ed3\u679c\u662f\uff1a \u6211\u4eec\u65e0\u6cd5\u83b7\u5f97 View \u7684\u5f15\u7528\uff0c\u4e5f\u65e0\u6cd5\u76f4\u63a5\u4fee\u6539\u5176 UI\uff0c\u6240\u6709\u5bf9 UI \u7684\u4fee\u6539\u90fd\u6e90\u81ea\u4e8e\u6570\u636e\u7684\u6539\u53d8 \u3002 \u6211\u4eec\u5728\u4e0b\u4e00\u8282\u4e2d\u8fdb\u884c\u66f4\u6df1\u5165\u7684\u8ba8\u8bba\u3002","title":"UI \u662f\u72b6\u6001\u7684\u51fd\u6570"},{"location":"frontend/swiftui/declaritive-mvvm/","text":"\u4ee5\u4e0a\u662f\u5bf9 SwiftUI \u57fa\u7840\u5185\u5bb9\u7684\u4ecb\u7ecd\u3002\u5728\u4f60\u5c06\u6765\u5b66\u4e60\u66f4\u52a0\u9ad8\u7ea7\u7684\u5185\u5bb9\u4e4b\u524d\uff0c\u6709\u5fc5\u8981\u5bf9 SwiftUI \u7684 UI \u6784\u5efa\u4f5c\u4e00\u4e2a\u6982\u5ff5\u4e0a\u7684\u603b\u89c8\u3002\u6211\u4eec\u5c06\u8ba8\u8bba\u4e24\u4e2a\u6838\u5fc3\u6982\u5ff5\uff1a\u58f0\u660e\u5f0f UI\uff0c\u4ee5\u53ca MVVM \u67b6\u6784\u3002 \u58f0\u660e\u5f0f UI \u00b6 \u6211\u4eec\u5148\u6765\u770b\u4e24\u6bb5\u4ee3\u7801\u3002 \u4e00\u6bb5\u4f7f\u7528 SwiftUI\uff1a 1 2 3 Text ( \"Hello, world!\" ) . font (. system ( size : 20 , weight : . bold )) . foregroundColor (. red ) \u53e6\u4e00\u6bb5\u4f7f\u7528 UIKit\uff1a 1 2 3 4 let label = UILabel () label . text = \"Hello, world!\" label . font = . systemFont ( ofSize : 20 , weight : . bold ) label . textColor = . systemRed \u5b83\u4eec\u90fd\u521b\u5efa\u4e86\u4e00\u4e2a\u5e26\u6709\u4e00\u5b9a\u6837\u5f0f\u7684\u6587\u672c UI\u3002\u7136\u800c\uff0c\u5b83\u4eec\u7684\u6784\u5efa\u65b9\u5f0f\u6709\u7740\u672c\u8d28\u4e0a\u7684\u4e0d\u540c\u3002\u5bf9\u4e8e SwiftUI\uff0c\u6211\u4eec \u63cf\u8ff0 Text \u53ca\u5176\u5b57\u4f53\u3001\u989c\u8272\u7b49\u5404\u79cd\u6837\u5f0f\uff0c\u800c\u5bf9\u4e8e UIKit\uff0c\u6211\u4eec\u901a\u8fc7 \u8bbe\u5b9a \u5c5e\u6027\u503c\u6765\u66f4\u6539\u3002\u524d\u8005\u79f0\u4e3a\u300c\u58f0\u660e\u5f0f\u300d\uff08declarative\uff09\uff0c\u800c\u540e\u8005\u79f0\u4e3a\u300c\u547d\u4ee4\u5f0f\u300d\uff08imperative\uff09\u3002 \u4f60\u53ef\u4ee5\u4ece\u8fd9\u4e24\u4e2a\u8bcd\u4e2d\u4f53\u4f1a\u5230\u4e24\u79cd\u4e0d\u540c\u4ee3\u7801\u7684\u663e\u8457\u533a\u522b\u3002\u5728 SwiftUI \u4e2d\uff0c\u6211\u4eec\u4e0d\u4f1a\u4f7f\u7528\u201c\u547d\u4ee4\u201d\u8bed\u53e5\u6765\u544a\u8bc9\u4e00\u4e2a View \u201c\u600e\u4e48\u505a\u201d\uff0c\u800c\u662f\u901a\u8fc7\u201c\u58f0\u660e\u201d\u4e00\u4e2a View \u4ee5\u53ca\u5b83\u7684\u7ed3\u6784\u3001\u7279\u5f81\u6765\u544a\u8bc9\u8fd9\u4e2a View \u201c\u505a\u6210\u600e\u6837\u201d\u3002 \u5f53 UI \u7684\u72b6\u6001\u9700\u8981\u968f\u7740\u72b6\u6001\u7684\u53d8\u5316\u800c\u66f4\u65b0\u65f6\uff0c\u4e8c\u8005\u7684\u4f18\u52a3\u53d8\u5f97\u975e\u5e38\u660e\u663e\u3002 \u547d\u4ee4\u5f0f UI \u6784\u5efa\u9700\u8981\u5728\u6bcf\u6b21\u72b6\u6001\u66f4\u65b0\u65f6\u90fd\u901a\u8fc7\u4e00\u5b9a\u7684\u903b\u8f91\u66f4\u65b0\u6240\u6709\u5173\u8054\u7684 UI\uff0c\u800c\u58f0\u660e\u5f0f UI \u6784\u5efa\u53ea\u9700\u8981\u5728\u4e00\u5f00\u59cb\u5c06\u6240\u6709\u53ef\u80fd\u7684 UI \u72b6\u6001\u63cf\u8ff0\u51fa\u6765\uff0c\u5c31\u53ef\u4ee5\u5f62\u6210\u72b6\u6001\u5230 UI \u7684\u4e00\u4e2a\u6620\u5c04\u3002 \u8fd9\u4e24\u79cd\u65b9\u5f0f\u7684\u590d\u6742\u7a0b\u5ea6\u5dee\u522b\u6709\u591a\u5927\uff1f\u4f5c\u4e2a\u7b80\u5355\u7684\u8ba1\u7b97\uff1a\u5047\u5982\u6211\u4eec\u7684 UI \u6709 10 \u79cd\u53ef\u80fd\u7684\u72b6\u6001\uff0c\u90a3\u4e48\u547d\u4ee4\u5f0f UI \u6700\u591a\u9700\u8981\u6839\u636e \\dbinom{10}{2} = 45 \\dbinom{10}{2} = 45 \u79cd\u4e0d\u540c\u7684\u72b6\u6001 \u8f6c\u79fb \u5b9a\u4e49\u6765\u5b9a\u4e49 UI \u66f4\u65b0\u51fd\u6570\uff0c\u800c\u58f0\u660e\u5f0f UI \u6700\u591a\u4e0d\u8fc7\u9700\u8981\u5b9a\u4e49 10 \u79cd\u4e0d\u540c\u72b6\u6001\u4e0b\u7684 UI\u3002\u66f4\u7cdf\u7cd5\u7684\u662f\uff0c\u4e00\u65e6\u547d\u4ee4\u5f0f UI \u7684\u67d0\u4e00\u6b65 UI \u66f4\u65b0\u51fa\u73b0\u95ee\u9898\uff0c\u90a3\u4e48\u5f88\u53ef\u80fd\u63a5\u4e0b\u6765\u7684\u66f4\u65b0\u90fd\u4f1a\u5bfc\u81f4\u9519\u8bef\u7684 UI\u3002\u56e0\u6b64\uff0c\u5f53\u72b6\u6001\u590d\u6742\u5230\u4e00\u5b9a\u7a0b\u5ea6\u7684\u65f6\u5019\uff0c\u547d\u4ee4\u5f0f UI \u7684\u6b63\u786e\u66f4\u65b0\u53d8\u5f97\u51e0\u4e4e\u4e0d\u53ef\u80fd\uff08\u56de\u60f3\u4e00\u4e0b\u4f60\u4e4b\u524d\u5199\u8fc7\u7684\u547d\u4ee4\u5f0f UI\uff0c\u6bd4\u5982\u8d35\u7cfb\u540c\u5b66\u4eec\u7528 Qt \u5199\u8fc7\u7684\u5927\u4f5c\u4e1a\uff09\u3002 \u58f0\u660e\u5f0f UI \u7684\u8fd9\u79cd\u7279\u5f81\u51b3\u5b9a\u4e86\u5b83\u6709\u5f88\u591a\u4e0e\u547d\u4ee4\u5f0f UI \u4e0d\u540c\u7684\u6027\u8d28\uff1a \u6ca1\u6709\u5bf9 UI \u7684\u5f15\u7528\u3002\u58f0\u660e\u5f0f UI \u53ea\u662f\u4e00\u79cd\u5bf9\u201cUI \u662f\u600e\u6837\u7684\u201d\u7684\u63cf\u8ff0\uff0c\u5b83\u5bf9 UI \u672c\u8eab\u6ca1\u6709\u638c\u63a7\u3002 \u7531\u72b6\u6001\u552f\u4e00\u786e\u5b9a\uff0c\u4e14\u53ea\u80fd\u901a\u8fc7\u4fee\u6539\u72b6\u6001\u66f4\u65b0 UI\u3002 \u53ea\u662f\u5bf9 UI \u7684\u63cf\u8ff0\uff0c\u5e76\u4e0d\u662f\u771f\u5b9e\u7684 UI\u3002 \u5b9e\u9645\u4e0a\uff0cSwiftUI \u5e95\u5c42\u662f UIKit\uff0cSwiftUI \u5176\u5b9e\u662f\u901a\u8fc7\u67d0\u79cd\u65b9\u5f0f\u5c06 UIKit \u4e2d\u590d\u6742\u7684\u7684 UI \u66f4\u65b0\u7b80\u5316\u4e3a\u72b6\u6001\u5230 UI \u7684\u7b80\u5355\u6620\u5c04\u3002 \u5173\u4e8e View \u7684\u8ba1\u7b97\u4e0e UI \u66f4\u65b0 \u6211\u4eec\u77e5\u9053\uff0c\u6bcf\u6b21\u72b6\u6001\u66f4\u65b0\u65f6\uff0cView \u4e2d\u7684 body \u90fd\u4f1a\u88ab\u91cd\u65b0\u8ba1\u7b97\u4ee5\u83b7\u5f97\u6700\u65b0\u7684 UI\u3002\u4f60\u53ef\u80fd\u4f1a\u5bf9\u8fd9\u79cd\u65b9\u5f0f\u7684\u6027\u80fd\u95ee\u9898\u4ea7\u751f\u62c5\u5fe7\u3002\u5b9e\u9645\u4e0a\uff0cSwiftUI \u7684 UI \u66f4\u65b0\u662f\u5341\u5206\u9ad8\u6548\u7684\u3002 \u8bf7\u8c28\u8bb0\uff0cView \u5e76\u4e0d\u662f\u771f\u5b9e\u7684 UI\uff0c\u53ea\u662f\u4e00\u79cd\u63cf\u8ff0\u3002SwiftUI \u5e95\u5c42\u901a\u8fc7\u67d0\u79cd\u673a\u5236\uff0c\u80fd\u591f\u6bd4\u8f83\u66f4\u65b0\u524d\u540e\u4e24\u4e2a\u63cf\u8ff0\u7684\u533a\u522b\uff0c\u7136\u540e\u53ea\u66f4\u65b0 \u63cf\u8ff0\u4e2d\u53d8\u5316\u4e86 \u7684 UI\u3002 MVVM \u67b6\u6784 \u00b6 \u6211\u4eec\u4e4b\u524d\u901a\u8fc7 @State \u548c @Binding \u7b80\u5355\u4ecb\u7ecd\u4e86 SwiftUI \u4e2d\u6570\u636e\u548c UI \u7684\u4ea4\u4e92\u3002\u6211\u4eec\u628a view \u6240\u4f9d\u8d56\u7684\u6570\u636e\u53ca\u4e0e\u6570\u636e\u76f8\u5173\u7684\u903b\u8f91\u79f0\u4e3a model\uff0c\u90a3\u4e48\uff1a \u6570\u636e\u7531 model \u7ed1\u5b9a\u5230 view view \u62e5\u6709 model\uff0c\u5e76\u80fd\u8fdb\u884c\u4fee\u6539 \u7136\u800c\uff0c\u73b0\u5b9e\u60c5\u51b5\u8fdc\u6bd4\u6211\u4eec\u5728\u524d\u4e00\u8282\u4e2d\u201c\u8bb0\u5f55\u70b9\u51fb\u6b21\u6570\u201d\u7684\u60c5\u51b5\u590d\u6742\u3002\u6bd4\u5982\uff0c\u6211\u4eec\u7684\u6570\u636e\u50a8\u5b58\u5728\u6570\u636e\u5e93\u4e2d\uff0c\u9700\u8981\u590d\u6742\u7684\u64cd\u4f5c\u53d6\u51fa\u6765\uff0c\u800c\u4e14\u53d6\u51fa\u6765\u7684\u6570\u636e\u5e76\u4e0d\u4e00\u5b9a\u662f view \u80fd\u591f \u76f4\u63a5 \u4f7f\u7528\u7684\uff0c\u53ef\u80fd\u8981\u7ecf\u8fc7\u4e00\u5b9a\u7684\u8f6c\u6362\u3002\u8fd9\u65f6\uff0c\u5982\u679c\u7ee7\u7eed\u4f7f\u7528\u4e0a\u9762\u7684\u67b6\u6784\uff0cview \u7684\u8d1f\u62c5\u5c31\u8fc7\u4e8e\u6c89\u91cd\u4e86\uff0c\u8fd9\u4e0e view \u7684\u5b9a\u4f4d\u76f8\u8fdd\u80cc\uff1aview \u5e94\u8be5 \u53ea\u9700\u8981\u77e5\u9053\u5982\u4f55\u5c55\u793a\u6570\u636e\u3001\u4e0e\u7528\u6237\u4ea4\u4e92 \u3002 \u800c\u4e14\uff0cview \u53ea\u80fd\u6301\u6709 \u4ec5\u4e0e UI \u76f8\u5173 \u7684\u72b6\u6001\uff0c\u4e0d\u80fd\u6301\u6709\u5916\u90e8\u6570\u636e\u3002\u7406\u7531\u4e4b\u4e00\u662f\uff1a\u5916\u90e8\u6570\u636e\u53ef\u80fd\u9700\u8981\u5728\u4e0d\u540c view \u4e4b\u95f4\u5171\u4eab\uff0c\u800c\u5982\u679c\u7531\u503c\u7c7b\u578b\u7684 view \u5b58\u50a8\u663e\u7136\u65e0\u6cd5\u5b8c\u6210\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u5728\u4e2d\u95f4\u52a0\u4e0a\u4e00\u5c42\uff1aview model\u3002 \u5176\u4e2d\uff0cview model \u8d1f\u8d23\uff1a \u6301\u6709 model\uff0c\u6839\u636e view \u7684\u547d\u4ee4\u4fee\u6539 model \u76d1\u542c model \u53d8\u5316\uff0c\u5728\u53d8\u5316\u65f6\u901a\u77e5 view \u5c06 model \u7684\u6570\u636e\u8f6c\u5316\u4e3a view \u80fd\u591f\u76f4\u63a5\u4f7f\u7528\u7684\u6570\u636e View \u8d1f\u8d23\uff1a \u5c06\u201c\u9700\u8981\u505a\u4ec0\u4e48\u201d\u53d1\u9001\u7ed9 view model\uff08\u5982\uff0c\u7528\u6237\u8f93\u5165\u4fe1\u606f\u540e\uff0c\u8ba9 view model \u5b58\u5165\u6570\u636e\u5e93\uff09 \u76d1\u542c view model \u901a\u77e5\uff0c\u5e76\u6839\u636e view model \u63d0\u4f9b\u7684\u6570\u636e\u66f4\u65b0\u754c\u9762 \u8bf7\u6ce8\u610f\uff0c\u5728\u8fd9\u4e2a\u67b6\u6784\u4e2d\uff0c\u6570\u636e\u662f\u4e25\u683c \u5355\u5411\u6d41\u52a8 \u7684\u3002 \u5728 SwiftUI \u4e2d\uff0cMVVM \u67b6\u6784\u901a\u5e38\u901a\u8fc7 ObservableObject \u548c @ObservedObject \u5b8c\u6210\u3002\u5177\u4f53\u6765\u8bf4\uff1a View model \u4e3a\u4e86\u80fd\u591f\u5c06 model \u5df2\u7ecf\u53d8\u5316\u4e86\u7684\u6d88\u606f\u201c\u901a\u77e5\u201d view\uff0c\u9700\u8981\u7ee7\u627f ObservableObject \u7c7b\uff08\u56e0\u6b64\u5fc5\u987b\u662f class \uff09 View model \u7684\u6210\u5458\u53d8\u91cf\u53ef\u4ee5\u52a0\u4e0a @Published \uff0c\u8868\u793a\u8fd9\u4e2a\u53d8\u91cf\u53d8\u5316\u65f6\u901a\u77e5 view View \u4e2d\u5bf9 view model \u52a0\u4e0a @ObservedObject \uff0c\u8868\u793a\u76d1\u542c view model \u53d1\u51fa\u7684\u4fe1\u53f7 \u4e0b\u9762\u662f\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u4f8b\u5b50\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 struct ContentView : View { @ ObservedObject var viewModel = ViewModel () var body : some View { HStack { Button ( \"Click\" ) { viewModel . count += 1 } Text ( \" \\( viewModel . count ) \" ) } } } class ViewModel : ObservableObject { @ Published var count : Int = 0 } \u9650\u4e8e\u7bc7\u5e45\uff0c\u6709\u5173 MVVM \u67b6\u6784\u7684\u5b9e\u8df5\u8bf7\u53c2\u8003 CS193p \u8bfe\u7a0b\u6709\u5173 MVVM \u7684\u4ecb\u7ecd \u3002 \u518d\u8c08 @State \u524d\u9762\u63d0\u5230\uff0cView \u53ea\u80fd\u6301\u6709\u4ec5\u4e0e UI \u76f8\u5173\u7684\u72b6\u6001\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728 View \u4e2d\uff0c @State \u5305\u88c5\u7684\u503c\u4e0d\u80fd\u4e0e\u5916\u90e8\u6570\u636e\u76f8\u5173\u3002 \u4ec0\u4e48\u662f\u4ec5\u4e0e UI \u76f8\u5173\u7684\u72b6\u6001\uff1f\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u662f\uff1a Button \u5728\u7528\u6237\u6309\u4e0b\u65f6\u4f1a\u6709\u900f\u660e\u5ea6\u7684\u53d8\u5316\uff0c\u8fd9\u91cc\u8bb0\u5f55\u6309\u538b\u7684\u72b6\u6001\u548c\u900f\u660e\u5ea6\u7684\u503c\u5c31\u5c5e\u4e8e\u201c\u4ec5\u4e0e UI \u76f8\u5173\u7684\u72b6\u6001\u201d\u3002 \u5b9e\u8df5\u4e2d\u4e00\u4e2a\u7b80\u5355\u7684\u5224\u65ad\u65b9\u6cd5\u662f\uff1a\u5982\u679c\u4e00\u4e2a @State \u4e0d\u80fd\u6807\u8bb0\u6210 private \uff0c\u5373\u5916\u90e8\u9700\u8981\u8bbf\u95ee\u8fd9\u4e2a\u6570\u636e\uff0c\u90a3\u4e48\u5b83\u5c31\u4e0d\u4ec5\u4e0e UI \u76f8\u5173\uff0c\u8fd9\u65f6\u4e0d\u80fd\u7528 @State \u6765\u50a8\u5b58\uff0c\u9700\u8981\u501f\u52a9 view model\u3002","title":"\u58f0\u660e\u5f0f UI \u4e0e MVVM"},{"location":"frontend/swiftui/declaritive-mvvm/#ui","text":"\u6211\u4eec\u5148\u6765\u770b\u4e24\u6bb5\u4ee3\u7801\u3002 \u4e00\u6bb5\u4f7f\u7528 SwiftUI\uff1a 1 2 3 Text ( \"Hello, world!\" ) . font (. system ( size : 20 , weight : . bold )) . foregroundColor (. red ) \u53e6\u4e00\u6bb5\u4f7f\u7528 UIKit\uff1a 1 2 3 4 let label = UILabel () label . text = \"Hello, world!\" label . font = . systemFont ( ofSize : 20 , weight : . bold ) label . textColor = . systemRed \u5b83\u4eec\u90fd\u521b\u5efa\u4e86\u4e00\u4e2a\u5e26\u6709\u4e00\u5b9a\u6837\u5f0f\u7684\u6587\u672c UI\u3002\u7136\u800c\uff0c\u5b83\u4eec\u7684\u6784\u5efa\u65b9\u5f0f\u6709\u7740\u672c\u8d28\u4e0a\u7684\u4e0d\u540c\u3002\u5bf9\u4e8e SwiftUI\uff0c\u6211\u4eec \u63cf\u8ff0 Text \u53ca\u5176\u5b57\u4f53\u3001\u989c\u8272\u7b49\u5404\u79cd\u6837\u5f0f\uff0c\u800c\u5bf9\u4e8e UIKit\uff0c\u6211\u4eec\u901a\u8fc7 \u8bbe\u5b9a \u5c5e\u6027\u503c\u6765\u66f4\u6539\u3002\u524d\u8005\u79f0\u4e3a\u300c\u58f0\u660e\u5f0f\u300d\uff08declarative\uff09\uff0c\u800c\u540e\u8005\u79f0\u4e3a\u300c\u547d\u4ee4\u5f0f\u300d\uff08imperative\uff09\u3002 \u4f60\u53ef\u4ee5\u4ece\u8fd9\u4e24\u4e2a\u8bcd\u4e2d\u4f53\u4f1a\u5230\u4e24\u79cd\u4e0d\u540c\u4ee3\u7801\u7684\u663e\u8457\u533a\u522b\u3002\u5728 SwiftUI \u4e2d\uff0c\u6211\u4eec\u4e0d\u4f1a\u4f7f\u7528\u201c\u547d\u4ee4\u201d\u8bed\u53e5\u6765\u544a\u8bc9\u4e00\u4e2a View \u201c\u600e\u4e48\u505a\u201d\uff0c\u800c\u662f\u901a\u8fc7\u201c\u58f0\u660e\u201d\u4e00\u4e2a View \u4ee5\u53ca\u5b83\u7684\u7ed3\u6784\u3001\u7279\u5f81\u6765\u544a\u8bc9\u8fd9\u4e2a View \u201c\u505a\u6210\u600e\u6837\u201d\u3002 \u5f53 UI \u7684\u72b6\u6001\u9700\u8981\u968f\u7740\u72b6\u6001\u7684\u53d8\u5316\u800c\u66f4\u65b0\u65f6\uff0c\u4e8c\u8005\u7684\u4f18\u52a3\u53d8\u5f97\u975e\u5e38\u660e\u663e\u3002 \u547d\u4ee4\u5f0f UI \u6784\u5efa\u9700\u8981\u5728\u6bcf\u6b21\u72b6\u6001\u66f4\u65b0\u65f6\u90fd\u901a\u8fc7\u4e00\u5b9a\u7684\u903b\u8f91\u66f4\u65b0\u6240\u6709\u5173\u8054\u7684 UI\uff0c\u800c\u58f0\u660e\u5f0f UI \u6784\u5efa\u53ea\u9700\u8981\u5728\u4e00\u5f00\u59cb\u5c06\u6240\u6709\u53ef\u80fd\u7684 UI \u72b6\u6001\u63cf\u8ff0\u51fa\u6765\uff0c\u5c31\u53ef\u4ee5\u5f62\u6210\u72b6\u6001\u5230 UI \u7684\u4e00\u4e2a\u6620\u5c04\u3002 \u8fd9\u4e24\u79cd\u65b9\u5f0f\u7684\u590d\u6742\u7a0b\u5ea6\u5dee\u522b\u6709\u591a\u5927\uff1f\u4f5c\u4e2a\u7b80\u5355\u7684\u8ba1\u7b97\uff1a\u5047\u5982\u6211\u4eec\u7684 UI \u6709 10 \u79cd\u53ef\u80fd\u7684\u72b6\u6001\uff0c\u90a3\u4e48\u547d\u4ee4\u5f0f UI \u6700\u591a\u9700\u8981\u6839\u636e \\dbinom{10}{2} = 45 \\dbinom{10}{2} = 45 \u79cd\u4e0d\u540c\u7684\u72b6\u6001 \u8f6c\u79fb \u5b9a\u4e49\u6765\u5b9a\u4e49 UI \u66f4\u65b0\u51fd\u6570\uff0c\u800c\u58f0\u660e\u5f0f UI \u6700\u591a\u4e0d\u8fc7\u9700\u8981\u5b9a\u4e49 10 \u79cd\u4e0d\u540c\u72b6\u6001\u4e0b\u7684 UI\u3002\u66f4\u7cdf\u7cd5\u7684\u662f\uff0c\u4e00\u65e6\u547d\u4ee4\u5f0f UI \u7684\u67d0\u4e00\u6b65 UI \u66f4\u65b0\u51fa\u73b0\u95ee\u9898\uff0c\u90a3\u4e48\u5f88\u53ef\u80fd\u63a5\u4e0b\u6765\u7684\u66f4\u65b0\u90fd\u4f1a\u5bfc\u81f4\u9519\u8bef\u7684 UI\u3002\u56e0\u6b64\uff0c\u5f53\u72b6\u6001\u590d\u6742\u5230\u4e00\u5b9a\u7a0b\u5ea6\u7684\u65f6\u5019\uff0c\u547d\u4ee4\u5f0f UI \u7684\u6b63\u786e\u66f4\u65b0\u53d8\u5f97\u51e0\u4e4e\u4e0d\u53ef\u80fd\uff08\u56de\u60f3\u4e00\u4e0b\u4f60\u4e4b\u524d\u5199\u8fc7\u7684\u547d\u4ee4\u5f0f UI\uff0c\u6bd4\u5982\u8d35\u7cfb\u540c\u5b66\u4eec\u7528 Qt \u5199\u8fc7\u7684\u5927\u4f5c\u4e1a\uff09\u3002 \u58f0\u660e\u5f0f UI \u7684\u8fd9\u79cd\u7279\u5f81\u51b3\u5b9a\u4e86\u5b83\u6709\u5f88\u591a\u4e0e\u547d\u4ee4\u5f0f UI \u4e0d\u540c\u7684\u6027\u8d28\uff1a \u6ca1\u6709\u5bf9 UI \u7684\u5f15\u7528\u3002\u58f0\u660e\u5f0f UI \u53ea\u662f\u4e00\u79cd\u5bf9\u201cUI \u662f\u600e\u6837\u7684\u201d\u7684\u63cf\u8ff0\uff0c\u5b83\u5bf9 UI \u672c\u8eab\u6ca1\u6709\u638c\u63a7\u3002 \u7531\u72b6\u6001\u552f\u4e00\u786e\u5b9a\uff0c\u4e14\u53ea\u80fd\u901a\u8fc7\u4fee\u6539\u72b6\u6001\u66f4\u65b0 UI\u3002 \u53ea\u662f\u5bf9 UI \u7684\u63cf\u8ff0\uff0c\u5e76\u4e0d\u662f\u771f\u5b9e\u7684 UI\u3002 \u5b9e\u9645\u4e0a\uff0cSwiftUI \u5e95\u5c42\u662f UIKit\uff0cSwiftUI \u5176\u5b9e\u662f\u901a\u8fc7\u67d0\u79cd\u65b9\u5f0f\u5c06 UIKit \u4e2d\u590d\u6742\u7684\u7684 UI \u66f4\u65b0\u7b80\u5316\u4e3a\u72b6\u6001\u5230 UI \u7684\u7b80\u5355\u6620\u5c04\u3002 \u5173\u4e8e View \u7684\u8ba1\u7b97\u4e0e UI \u66f4\u65b0 \u6211\u4eec\u77e5\u9053\uff0c\u6bcf\u6b21\u72b6\u6001\u66f4\u65b0\u65f6\uff0cView \u4e2d\u7684 body \u90fd\u4f1a\u88ab\u91cd\u65b0\u8ba1\u7b97\u4ee5\u83b7\u5f97\u6700\u65b0\u7684 UI\u3002\u4f60\u53ef\u80fd\u4f1a\u5bf9\u8fd9\u79cd\u65b9\u5f0f\u7684\u6027\u80fd\u95ee\u9898\u4ea7\u751f\u62c5\u5fe7\u3002\u5b9e\u9645\u4e0a\uff0cSwiftUI \u7684 UI \u66f4\u65b0\u662f\u5341\u5206\u9ad8\u6548\u7684\u3002 \u8bf7\u8c28\u8bb0\uff0cView \u5e76\u4e0d\u662f\u771f\u5b9e\u7684 UI\uff0c\u53ea\u662f\u4e00\u79cd\u63cf\u8ff0\u3002SwiftUI \u5e95\u5c42\u901a\u8fc7\u67d0\u79cd\u673a\u5236\uff0c\u80fd\u591f\u6bd4\u8f83\u66f4\u65b0\u524d\u540e\u4e24\u4e2a\u63cf\u8ff0\u7684\u533a\u522b\uff0c\u7136\u540e\u53ea\u66f4\u65b0 \u63cf\u8ff0\u4e2d\u53d8\u5316\u4e86 \u7684 UI\u3002","title":"\u58f0\u660e\u5f0f UI"},{"location":"frontend/swiftui/declaritive-mvvm/#mvvm","text":"\u6211\u4eec\u4e4b\u524d\u901a\u8fc7 @State \u548c @Binding \u7b80\u5355\u4ecb\u7ecd\u4e86 SwiftUI \u4e2d\u6570\u636e\u548c UI \u7684\u4ea4\u4e92\u3002\u6211\u4eec\u628a view \u6240\u4f9d\u8d56\u7684\u6570\u636e\u53ca\u4e0e\u6570\u636e\u76f8\u5173\u7684\u903b\u8f91\u79f0\u4e3a model\uff0c\u90a3\u4e48\uff1a \u6570\u636e\u7531 model \u7ed1\u5b9a\u5230 view view \u62e5\u6709 model\uff0c\u5e76\u80fd\u8fdb\u884c\u4fee\u6539 \u7136\u800c\uff0c\u73b0\u5b9e\u60c5\u51b5\u8fdc\u6bd4\u6211\u4eec\u5728\u524d\u4e00\u8282\u4e2d\u201c\u8bb0\u5f55\u70b9\u51fb\u6b21\u6570\u201d\u7684\u60c5\u51b5\u590d\u6742\u3002\u6bd4\u5982\uff0c\u6211\u4eec\u7684\u6570\u636e\u50a8\u5b58\u5728\u6570\u636e\u5e93\u4e2d\uff0c\u9700\u8981\u590d\u6742\u7684\u64cd\u4f5c\u53d6\u51fa\u6765\uff0c\u800c\u4e14\u53d6\u51fa\u6765\u7684\u6570\u636e\u5e76\u4e0d\u4e00\u5b9a\u662f view \u80fd\u591f \u76f4\u63a5 \u4f7f\u7528\u7684\uff0c\u53ef\u80fd\u8981\u7ecf\u8fc7\u4e00\u5b9a\u7684\u8f6c\u6362\u3002\u8fd9\u65f6\uff0c\u5982\u679c\u7ee7\u7eed\u4f7f\u7528\u4e0a\u9762\u7684\u67b6\u6784\uff0cview \u7684\u8d1f\u62c5\u5c31\u8fc7\u4e8e\u6c89\u91cd\u4e86\uff0c\u8fd9\u4e0e view \u7684\u5b9a\u4f4d\u76f8\u8fdd\u80cc\uff1aview \u5e94\u8be5 \u53ea\u9700\u8981\u77e5\u9053\u5982\u4f55\u5c55\u793a\u6570\u636e\u3001\u4e0e\u7528\u6237\u4ea4\u4e92 \u3002 \u800c\u4e14\uff0cview \u53ea\u80fd\u6301\u6709 \u4ec5\u4e0e UI \u76f8\u5173 \u7684\u72b6\u6001\uff0c\u4e0d\u80fd\u6301\u6709\u5916\u90e8\u6570\u636e\u3002\u7406\u7531\u4e4b\u4e00\u662f\uff1a\u5916\u90e8\u6570\u636e\u53ef\u80fd\u9700\u8981\u5728\u4e0d\u540c view \u4e4b\u95f4\u5171\u4eab\uff0c\u800c\u5982\u679c\u7531\u503c\u7c7b\u578b\u7684 view \u5b58\u50a8\u663e\u7136\u65e0\u6cd5\u5b8c\u6210\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u5728\u4e2d\u95f4\u52a0\u4e0a\u4e00\u5c42\uff1aview model\u3002 \u5176\u4e2d\uff0cview model \u8d1f\u8d23\uff1a \u6301\u6709 model\uff0c\u6839\u636e view \u7684\u547d\u4ee4\u4fee\u6539 model \u76d1\u542c model \u53d8\u5316\uff0c\u5728\u53d8\u5316\u65f6\u901a\u77e5 view \u5c06 model \u7684\u6570\u636e\u8f6c\u5316\u4e3a view \u80fd\u591f\u76f4\u63a5\u4f7f\u7528\u7684\u6570\u636e View \u8d1f\u8d23\uff1a \u5c06\u201c\u9700\u8981\u505a\u4ec0\u4e48\u201d\u53d1\u9001\u7ed9 view model\uff08\u5982\uff0c\u7528\u6237\u8f93\u5165\u4fe1\u606f\u540e\uff0c\u8ba9 view model \u5b58\u5165\u6570\u636e\u5e93\uff09 \u76d1\u542c view model \u901a\u77e5\uff0c\u5e76\u6839\u636e view model \u63d0\u4f9b\u7684\u6570\u636e\u66f4\u65b0\u754c\u9762 \u8bf7\u6ce8\u610f\uff0c\u5728\u8fd9\u4e2a\u67b6\u6784\u4e2d\uff0c\u6570\u636e\u662f\u4e25\u683c \u5355\u5411\u6d41\u52a8 \u7684\u3002 \u5728 SwiftUI \u4e2d\uff0cMVVM \u67b6\u6784\u901a\u5e38\u901a\u8fc7 ObservableObject \u548c @ObservedObject \u5b8c\u6210\u3002\u5177\u4f53\u6765\u8bf4\uff1a View model \u4e3a\u4e86\u80fd\u591f\u5c06 model \u5df2\u7ecf\u53d8\u5316\u4e86\u7684\u6d88\u606f\u201c\u901a\u77e5\u201d view\uff0c\u9700\u8981\u7ee7\u627f ObservableObject \u7c7b\uff08\u56e0\u6b64\u5fc5\u987b\u662f class \uff09 View model \u7684\u6210\u5458\u53d8\u91cf\u53ef\u4ee5\u52a0\u4e0a @Published \uff0c\u8868\u793a\u8fd9\u4e2a\u53d8\u91cf\u53d8\u5316\u65f6\u901a\u77e5 view View \u4e2d\u5bf9 view model \u52a0\u4e0a @ObservedObject \uff0c\u8868\u793a\u76d1\u542c view model \u53d1\u51fa\u7684\u4fe1\u53f7 \u4e0b\u9762\u662f\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u4f8b\u5b50\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 struct ContentView : View { @ ObservedObject var viewModel = ViewModel () var body : some View { HStack { Button ( \"Click\" ) { viewModel . count += 1 } Text ( \" \\( viewModel . count ) \" ) } } } class ViewModel : ObservableObject { @ Published var count : Int = 0 } \u9650\u4e8e\u7bc7\u5e45\uff0c\u6709\u5173 MVVM \u67b6\u6784\u7684\u5b9e\u8df5\u8bf7\u53c2\u8003 CS193p \u8bfe\u7a0b\u6709\u5173 MVVM \u7684\u4ecb\u7ecd \u3002 \u518d\u8c08 @State \u524d\u9762\u63d0\u5230\uff0cView \u53ea\u80fd\u6301\u6709\u4ec5\u4e0e UI \u76f8\u5173\u7684\u72b6\u6001\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728 View \u4e2d\uff0c @State \u5305\u88c5\u7684\u503c\u4e0d\u80fd\u4e0e\u5916\u90e8\u6570\u636e\u76f8\u5173\u3002 \u4ec0\u4e48\u662f\u4ec5\u4e0e UI \u76f8\u5173\u7684\u72b6\u6001\uff1f\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u662f\uff1a Button \u5728\u7528\u6237\u6309\u4e0b\u65f6\u4f1a\u6709\u900f\u660e\u5ea6\u7684\u53d8\u5316\uff0c\u8fd9\u91cc\u8bb0\u5f55\u6309\u538b\u7684\u72b6\u6001\u548c\u900f\u660e\u5ea6\u7684\u503c\u5c31\u5c5e\u4e8e\u201c\u4ec5\u4e0e UI \u76f8\u5173\u7684\u72b6\u6001\u201d\u3002 \u5b9e\u8df5\u4e2d\u4e00\u4e2a\u7b80\u5355\u7684\u5224\u65ad\u65b9\u6cd5\u662f\uff1a\u5982\u679c\u4e00\u4e2a @State \u4e0d\u80fd\u6807\u8bb0\u6210 private \uff0c\u5373\u5916\u90e8\u9700\u8981\u8bbf\u95ee\u8fd9\u4e2a\u6570\u636e\uff0c\u90a3\u4e48\u5b83\u5c31\u4e0d\u4ec5\u4e0e UI \u76f8\u5173\uff0c\u8fd9\u65f6\u4e0d\u80fd\u7528 @State \u6765\u50a8\u5b58\uff0c\u9700\u8981\u501f\u52a9 view model\u3002","title":"MVVM \u67b6\u6784"},{"location":"frontend/swiftui/extensions/","text":"\u672c\u6587\u4ec5\u5bf9 SwiftUI \u4e2d\u4e00\u4e9b\u6700\u57fa\u672c\u7684\u77e5\u8bc6\u4f5c\u4e86\u4ecb\u7ecd\uff0c\u800c\u8fd9\u8fdc\u8fdc\u4e0d\u591f\u3002\u8981\u60f3\u5f00\u53d1\u4e00\u4e2a\u5b8c\u6574\u7684\u5e94\u7528\uff0c\u4f60\u8fd8\u9700\u8981\u5b66\u4e60\u66f4\u591a\u5185\u5bb9\u3002 \u8fd9\u662f\u4e00\u4e9b\u4ec5\u4f9b\u53c2\u8003\u7684\u5efa\u8bae\uff1a \u7ecf\u5e38\u63a2\u7d22 \u5b98\u65b9\u6587\u6863 \uff0c\u770b\u770b\u4f60\u80fd\u4f7f\u7528\u7684\u5de5\u5177\u6709\u4ec0\u4e48 \u770b\u770b\u5386\u5e74 WWDC \u6709\u4ec0\u4e48\u89c6\u9891\u8bb2\u89e3\u7684\u5185\u5bb9\u662f\u4f60\u9700\u8981\u7684\uff0c\u5173\u6ce8\u6bcf\u5e74\u7684 WWDC \u4e0d\u8981\u60e7\u6015\u82f1\u6587\u5185\u5bb9\uff0c\u9605\u8bfb\u82f1\u6587\u6587\u6863\u662f\u5f00\u53d1\u7684\u5fc5\u7ecf\u4e4b\u8def \u5b66\u4f1a\u7528\u82f1\u6587\u641c\u7d22\uff0c \u5c3d\u91cf\u4e0d\u7528\u4e2d\u6587\u641c\u7d22 \u6982\u5ff5\u6027\u77e5\u8bc6 \u00b6 \u8fd9\u4e9b\u6982\u5ff5\u6027\u77e5\u8bc6\u80fd\u591f\u5e2e\u52a9\u4f60\u7406\u89e3 SwiftUI \u662f\u5982\u4f55\u8fd0\u884c\u7684\uff0c\u8fdb\u800c\u5e2e\u52a9\u4f60\u5199\u51fa\u6548\u7387\u66f4\u9ad8\u3001\u66f4\u52a0\u6b63\u786e\u7684\u7a0b\u5e8f\u3002SwiftUI \u672c\u8eab\u5e76\u4e0d\u590d\u6742\uff0c\u4f46\u5176\u539f\u7406\u9700\u8981\u6df1\u5165\u7684\u5b66\u4e60\u624d\u80fd\u7406\u89e3\uff0c\u800c\u5bf9\u539f\u7406\u7684\u7406\u89e3\u5f80\u5f80\u4f1a\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u5f71\u54cd\u7a0b\u5e8f\u7684\u8d28\u91cf\u3002 \u8fd9\u4e9b\u8bdd\u9898\u975e\u5e38\u91cd\u8981\uff1a SwiftUI \u751f\u547d\u5468\u671f \uff1a App \u3001 Scene \u548c View \u4e4b\u95f4\u7684\u5173\u7cfb SwiftUI \u4e2d\u7684\u6570\u636e\u6d41 \uff1aSwiftUI \u4e2d\u7684\u6570\u636e\u6d41\u53ca\u5176\u4f7f\u7528\u539f\u5219 MVVM \u67b6\u6784 \uff1a\u867d\u7136\u6211\u4eec\u5df2\u7ecf\u7b80\u5355\u4ecb\u7ecd\u8fc7\uff0c\u4f46\u4f60\u4ecd\u5e94\u542c\u4e00\u542c CS193p \u7684\u8fd9\u8282\u8bfe View Identity \uff1a\u5728\u5e95\u5c42\uff0c\u4e0d\u540c\u7684 View \u4e4b\u95f4\u662f\u5982\u4f55\u533a\u5206\u7684\uff1f \u6280\u672f\u6027\u77e5\u8bc6 \u00b6 \u8fd9\u4e9b\u6280\u672f\u6027\u7684\u77e5\u8bc6\u662f\u4e00\u4e9b\u201cSwiftUI \u80fd\u505a\u4ec0\u4e48\u201d\u7684\u96c6\u5408\uff0c\u57fa\u672c\u4e0a\u662f \u5b98\u65b9\u6587\u6863 \u4e2d\u4f60\u80fd\u7528\u7684\u6240\u6709 SwiftUI \u73b0\u6210\u5de5\u5177\uff0c\u53ef\u4ee5\u9700\u8981\u65f6\u518d\u67e5\u9605\uff0c\u4e5f\u53ef\u4ee5\u65e0\u804a\u65f6\u968f\u4fbf\u7ffb\u7ffb\u3002\u9047\u5230\u95ee\u9898\u65f6\uff0c Google \u3001Stackoverflow \u548c WWDC \u89c6\u9891 \u662f\u4f60\u53ef\u9760\u7684\u52a9\u624b\u3002 \u539f\u751f\u7ec4\u4ef6 \uff1a\u6587\u5b57\u3001\u56fe\u7247\u3001\u6309\u94ae\u7b49\u7ec4\u4ef6 \u6392\u5e03 \uff1aStack\u3001Grid\u3001ScrollView\u3001NavigationView \u7b49 \u6570\u636e\u6d41\u4e0e\u72b6\u6001 \uff1aState\u3001Binding\u3001ObservedObject \u7b49 \u7ed8\u753b\u4e0e\u52a8\u753b \uff1a\u7ed8\u5236\u5f62\u72b6\u3001\u6dfb\u52a0\u52a8\u753b \u89e6\u63a7\u8bc6\u522b \uff1a\u8bc6\u522b\u7528\u6237\u89e6\u6478\u8f93\u5165 View modifier \u5916\u89c2 \u6587\u5b57\u76f8\u5173 \u989d\u5916\u7684 UI \u90e8\u4ef6 \u5e03\u5c40 \u56fe\u50cf\u4e0e\u6e32\u67d3 \u7528\u6237\u8f93\u5165\u4e0e\u4e8b\u4ef6 \u89c6\u56fe\u7684\u5c55\u793a \u5728 SwiftUI \u4e2d\u4f7f\u7528 UIKit CS193p \u5b98\u65b9\u6559\u7a0b \u5b98\u65b9\u6587\u6863 \u5176\u5b83\u76f8\u5173\u77e5\u8bc6 \u00b6 Combine \u6846\u67b6 \uff1a\u4e3a SwiftUI \u8bbe\u8ba1\u7684\u5f02\u6b65\u4e8b\u4ef6\u7ba1\u7406\u6846\u67b6 UIKit \u8bfe\u7a0b \uff1aCS193p \u7684 UIKit \u5b8c\u6574\u8bfe\u7a0b","title":"\u540e\u7eed\u62d3\u5c55"},{"location":"frontend/swiftui/extensions/#_1","text":"\u8fd9\u4e9b\u6982\u5ff5\u6027\u77e5\u8bc6\u80fd\u591f\u5e2e\u52a9\u4f60\u7406\u89e3 SwiftUI \u662f\u5982\u4f55\u8fd0\u884c\u7684\uff0c\u8fdb\u800c\u5e2e\u52a9\u4f60\u5199\u51fa\u6548\u7387\u66f4\u9ad8\u3001\u66f4\u52a0\u6b63\u786e\u7684\u7a0b\u5e8f\u3002SwiftUI \u672c\u8eab\u5e76\u4e0d\u590d\u6742\uff0c\u4f46\u5176\u539f\u7406\u9700\u8981\u6df1\u5165\u7684\u5b66\u4e60\u624d\u80fd\u7406\u89e3\uff0c\u800c\u5bf9\u539f\u7406\u7684\u7406\u89e3\u5f80\u5f80\u4f1a\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u5f71\u54cd\u7a0b\u5e8f\u7684\u8d28\u91cf\u3002 \u8fd9\u4e9b\u8bdd\u9898\u975e\u5e38\u91cd\u8981\uff1a SwiftUI \u751f\u547d\u5468\u671f \uff1a App \u3001 Scene \u548c View \u4e4b\u95f4\u7684\u5173\u7cfb SwiftUI \u4e2d\u7684\u6570\u636e\u6d41 \uff1aSwiftUI \u4e2d\u7684\u6570\u636e\u6d41\u53ca\u5176\u4f7f\u7528\u539f\u5219 MVVM \u67b6\u6784 \uff1a\u867d\u7136\u6211\u4eec\u5df2\u7ecf\u7b80\u5355\u4ecb\u7ecd\u8fc7\uff0c\u4f46\u4f60\u4ecd\u5e94\u542c\u4e00\u542c CS193p \u7684\u8fd9\u8282\u8bfe View Identity \uff1a\u5728\u5e95\u5c42\uff0c\u4e0d\u540c\u7684 View \u4e4b\u95f4\u662f\u5982\u4f55\u533a\u5206\u7684\uff1f","title":"\u6982\u5ff5\u6027\u77e5\u8bc6"},{"location":"frontend/swiftui/extensions/#_2","text":"\u8fd9\u4e9b\u6280\u672f\u6027\u7684\u77e5\u8bc6\u662f\u4e00\u4e9b\u201cSwiftUI \u80fd\u505a\u4ec0\u4e48\u201d\u7684\u96c6\u5408\uff0c\u57fa\u672c\u4e0a\u662f \u5b98\u65b9\u6587\u6863 \u4e2d\u4f60\u80fd\u7528\u7684\u6240\u6709 SwiftUI \u73b0\u6210\u5de5\u5177\uff0c\u53ef\u4ee5\u9700\u8981\u65f6\u518d\u67e5\u9605\uff0c\u4e5f\u53ef\u4ee5\u65e0\u804a\u65f6\u968f\u4fbf\u7ffb\u7ffb\u3002\u9047\u5230\u95ee\u9898\u65f6\uff0c Google \u3001Stackoverflow \u548c WWDC \u89c6\u9891 \u662f\u4f60\u53ef\u9760\u7684\u52a9\u624b\u3002 \u539f\u751f\u7ec4\u4ef6 \uff1a\u6587\u5b57\u3001\u56fe\u7247\u3001\u6309\u94ae\u7b49\u7ec4\u4ef6 \u6392\u5e03 \uff1aStack\u3001Grid\u3001ScrollView\u3001NavigationView \u7b49 \u6570\u636e\u6d41\u4e0e\u72b6\u6001 \uff1aState\u3001Binding\u3001ObservedObject \u7b49 \u7ed8\u753b\u4e0e\u52a8\u753b \uff1a\u7ed8\u5236\u5f62\u72b6\u3001\u6dfb\u52a0\u52a8\u753b \u89e6\u63a7\u8bc6\u522b \uff1a\u8bc6\u522b\u7528\u6237\u89e6\u6478\u8f93\u5165 View modifier \u5916\u89c2 \u6587\u5b57\u76f8\u5173 \u989d\u5916\u7684 UI \u90e8\u4ef6 \u5e03\u5c40 \u56fe\u50cf\u4e0e\u6e32\u67d3 \u7528\u6237\u8f93\u5165\u4e0e\u4e8b\u4ef6 \u89c6\u56fe\u7684\u5c55\u793a \u5728 SwiftUI \u4e2d\u4f7f\u7528 UIKit CS193p \u5b98\u65b9\u6559\u7a0b \u5b98\u65b9\u6587\u6863","title":"\u6280\u672f\u6027\u77e5\u8bc6"},{"location":"frontend/swiftui/extensions/#_3","text":"Combine \u6846\u67b6 \uff1a\u4e3a SwiftUI \u8bbe\u8ba1\u7684\u5f02\u6b65\u4e8b\u4ef6\u7ba1\u7406\u6846\u67b6 UIKit \u8bfe\u7a0b \uff1aCS193p \u7684 UIKit \u5b8c\u6574\u8bfe\u7a0b","title":"\u5176\u5b83\u76f8\u5173\u77e5\u8bc6"},{"location":"frontend/swiftui/hello-world/","text":"Info \u76ee\u524d\uff082022 \u5e74 1 \u6708\uff09\u4e3b\u6d41\u7684 iOS \u5f00\u53d1\u4f7f\u7528 Xcode \u9879\u76ee\uff08Xcode project\uff09\u8fdb\u884c\uff0c\u672c\u6587\u4e3a\u4e86\u652f\u6301 iPadOS \u5e73\u53f0\u5e76\u7b80\u5316\u8bf4\u660e\uff0c\u4f7f\u7528\u6700\u65b0\u7684\u7531 Swift Package Manager \u7ba1\u7406\u7684\u9879\u76ee\u683c\u5f0f\uff0c\u6b64\u683c\u5f0f\u5728 13.2 \u4ee5\u4e0a\u7248\u672c\u7684 Xcode \u4e0a\u540c\u6837\u652f\u6301\u3002\u5b9e\u9645\u5f00\u53d1\u65f6\u5efa\u8bae\u4f7f\u7528\u66f4\u52a0\u5b8c\u5584\u7684 Xcode project\u3002 \u521b\u5efa\u9879\u76ee \u00b6 Swift Playgrounds\uff08iPad\uff09 \u00b6 \u5728 Swift Playgrounds\uff084.0 \u4ee5\u4e0a\u7248\u672c\uff09\u4e2d\uff0c\u9009\u62e9\u5e95\u90e8\u7684 App \u3002 Xcode Swift Playground App \u00b6 \u5728 Xcode\uff0813.2 \u4ee5\u4e0a\u7248\u672c\uff09\u4e2d\uff0c\u9009\u62e9 File > New > Project \u4e2d\u7684 Swift Playground App \u3002 Xcode Project \u00b6 \u4f20\u7edf\u7684 Xcode project\uff0c\u90e8\u5206\u5185\u5bb9\u4e0e Swift Playground App \u4e0d\u540c\u3002 \u6253\u5f00 Xcode\uff0c\u70b9\u51fb Create a new Xcode project \uff0c\u9009\u62e9 iOS \u680f\u4e0b\u7684 App \u3002\u5728\u9879\u76ee\u7684\u914d\u7f6e\u754c\u9762\uff0c\u914d\u7f6e\uff1a Product Name\uff1a\u5e94\u7528\u540d\u79f0 Team\uff1a\u5f00\u53d1\u4f7f\u7528\u7684 Apple ID\uff0c\u53ef\u4ee5\u4e3a None Organization Identifier\uff1a\u4e00\u4e2a\u9006\u5e8f\u7684 DNS \u540d\uff0c\u5982\u679c\u4e0d\u8003\u8651\u4e0a\u67b6\u53ef\u4ee5\u4efb\u610f Interface\uff1a\u9009\u62e9 SwiftUI Language\uff1a Swift Use Core Data \u548c Include Tests\uff1a\u672c\u6559\u7a0b\u4e0d\u6d89\u53ca\uff0c\u53ef\u4ee5\u4e0d\u9009 \u5176\u4f59\u6b65\u9aa4\u6309\u7167\u9ed8\u8ba4\u914d\u7f6e\u5373\u53ef\u3002 Hello, world! \u00b6 \u4f7f\u7528 Swift Playgrounds \u521b\u5efa\u9879\u76ee\u5e76\u8fdb\u5165\u540e\uff0c\u53ef\u4ee5\u770b\u5230\u5de6\u4fa7\u7684\u6e90\u4ee3\u7801\u548c\u53f3\u4fa7\u7684\u5b9e\u65f6\u9884\u89c8\uff1a \u5b9e\u65f6\u9884\u89c8\u662f\u771f\u5b9e\u8fd0\u884c\u7684 app\uff0c\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u8fdb\u884c\u5f00\u53d1\u3001\u8c03\u8bd5\u3002 \u6253\u5f00\u4fa7\u8fb9\u680f\uff0c\u53ef\u4ee5\u6d4f\u89c8\u9879\u76ee\u6587\u4ef6\u76ee\u5f55\uff1a \u8fd9\u4e24\u4e2a\u6587\u4ef6\uff0c\u5c31\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u53ef\u8fd0\u884c\u7684 Hello World \u7a0b\u5e8f\u3002 MyApp.swift \u4e2d\u7684\u5185\u5bb9\u5728\u672c\u6559\u7a0b\u4e2d\u4e0d\u6d89\u53ca\uff0c\u53ef\u4ee5\u53c2\u8003 \u540e\u7eed\u62d3\u5c55 \u4e2d\u7684\u201cSwiftUI \u751f\u547d\u5468\u671f\u201d\u3002 \u6df1\u5165 Hello World \u00b6 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u901a\u8fc7\u8fd9\u4e2a Hello World \u7a0b\u5e8f\uff0c\u5feb\u901f\u5730\u4ecb\u7ecd SwiftUI \u6784\u5efa UI \u7684\u57fa\u672c\u6982\u5ff5\uff0c\u4ee5\u53ca\u4e0e SwiftUI \u6709\u5173\u7684\u4e00\u4e9b Swift \u8bed\u6cd5\u3002 \u8fd9\u662f\u6211\u4eec\u4e4b\u524d\u770b\u5230\u7684 ContentView.swift \uff1a 1 2 3 4 5 6 7 8 9 10 11 12 import SwiftUI struct ContentView : View { var body : some View { VStack { Image ( systemName : \"globe\" ) . imageScale (. large ) . foregroundColor (. accentColor ) Text ( \"Hello, world!\" ) } } } \u56e0\u4e3a\u8981\u7528\u5230 SwiftUI \u6846\u67b6\uff0c\u5728\u6587\u4ef6\u7684\u5f00\u5934\u9700\u8981 import SwiftUI \uff0c\u4e4b\u540e SwiftUI \u4e2d\u6240\u6709\u7684\u7b26\u53f7\u5747\u53ef\u76f4\u63a5\u4f7f\u7528\u3002 \u5728\u6211\u4eec\u7684 App \u4e2d\uff0c\u4e0a\u9762\u7684 ContentView \u662f\u552f\u4e00\u7684 View\uff08\u5728 MyApp.swift \u4e2d\u53ef\u4ee5\u770b\u5230\u8fd9\u4e00\u70b9\uff09\uff0c\u5176 View \u7531\u5782\u76f4\u6392\u5217\uff08 VStack \uff09\u7684\u4e24\u4e2a View\uff08 Image \u548c Text \uff09\u6784\u6210\u3002\u5982\u679c\u4f60\u70b9\u51fb\u8fd0\u884c\uff0cApp \u7684\u6240\u6709\u5185\u5bb9\u5c31\u662f ContentView \u3002 \u5728 SwiftUI \u4e2d\uff0c\u6240\u6709 UI\uff0c\u65e0\u8bba\u662f\u4e00\u6574\u4e2a\u9875\u9762\uff0c\u8fd8\u662f\u5355\u72ec\u7684\u7ec4\u4ef6\uff0c\u90fd\u662f\u4e00\u4e2a View\u3002\u6211\u4eec\u901a\u8fc7\u7ec4\u5408\u4e0d\u540c\u7684 View \u6765\u6784\u5efa UI\u3002 \u5b9a\u4e49\u4e00\u4e2a View \u9700\u8981\uff1a \u5b9a\u4e49\u4e00\u4e2a\u9075\u5faa View \u534f\u8bae\u7684 struct \u5728 struct \u5b9a\u4e49\u4e00\u4e2a\u540d\u79f0\u4e3a body \uff0c\u7c7b\u578b\u4e3a some View \u7684\u8ba1\u7b97\u53d8\u91cf\uff08 View \u534f\u8bae\u7684\u89c4\u5b9a\uff09 \u6211\u4eec\u8981\u505a\u7684\uff0c\u5c31\u662f\u5728 body \u4e2d\u63cf\u8ff0\u6211\u4eec\u7684 UI\u3002 \u6211\u4eec\u5c06\u5728\u4e0b\u4e00\u8282\u5c55\u5f00\u5982\u4f55\u6784\u5efa UI \u7684\u8bdd\u9898\uff0c\u6211\u4eec\u5148\u5173\u6ce8\u5176\u4e2d\u7684\u8bed\u6cd5\u3002 body \u7684\u7c7b\u578b\uff1a some View \u00b6 1 2 3 4 5 6 7 8 9 10 struct ContentView : View { var body : some View { VStack { Image ( systemName : \"globe\" ) . imageScale (. large ) . foregroundColor (. accentColor ) Text ( \"Hello, world!\" ) } } } body \u662f\u4e00\u4e2a\u7c7b\u578b\u4e3a some View \u7684\u8ba1\u7b97\u53d8\u91cf\u3002 some \u7684\u542b\u4e49\u662f\uff1a \u201c\u8fd9\u4e2a\u7c7b\u578b\u9075\u5faa View \u8fd9\u4e2a\u534f\u8bae\uff0c\u4f46\u6211\u4e0d\u65b9\u4fbf\u5199\u51fa\u8fd9\u4e2a\u7c7b\u578b\uff0c\u9700\u8981\u7f16\u8bd1\u5668\u6765\u786e\u5b9a\u5b83\u7684\u7c7b\u578b\u201d \u3002\u4e5f\u5c31\u662f\u8bf4\uff0c body \u5b9e\u9645\u4e0a\u662f\u6709\u4e00\u4e2a\u786e\u5b9a\u7684\u7c7b\u578b\u7684\uff0c\u53ea\u4e0d\u8fc7\u6211\u4eec\u4e0d\u663e\u5f0f\u5730\u5199\u51fa\u6765\u3002\u8fd9\u662f\u4e00\u79cd\u53eb\u505a opaque return type \u7684\u8bed\u6cd5\u3002 Note \u4f60\u53ef\u4ee5\u5728\u4e0b\u6587\u4e2d\u7684\u300a body \u7684\u5177\u4f53\u7c7b\u578b\u300b\u770b\u5230\u4e3a\u4ec0\u4e48\u201c\u4e0d\u65b9\u4fbf\u5199\u51fa\u8fd9\u4e2a\u7c7b\u578b\u201d\u3002 \u8fd9\u4e5f\u544a\u8bc9\u6211\u4eec\uff0c\u6211\u4eec\u5b9a\u4e49 View\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u662f\u8fd4\u56de\u53e6\u4e00\u4e2a View\u3002 \u4f60\u6ca1\u6709\u529e\u6cd5\u5728\u4e0d\u5229\u7528\u5df2\u6709 View \u7684\u60c5\u51b5\u4e0b\u51ed\u7a7a\u751f\u6210\u4e00\u4e2a View\u3002 \u5173\u4e8e View \u4e2d\u7684 associatedtype View \u7684\u5b9a\u4e49\u4e2d\u6709\u4e00\u4e2a\u9075\u5faa View \u3001\u540d\u4e3a Body \u7684 associatedtype \uff0c\u5e76\u4e14 body \u7684\u7c7b\u578b\u5b9e\u9645\u4e0a\u5c31\u662f\u8fd9\u4e2a Body \uff1a 1 2 3 4 protocol View { associatedtype Body : View @ ViewBuilder var body : Body { get } } \u6ce8\u610f\u5230\u6211\u4eec\u6ca1\u6709\u663e\u5f0f\u5730\u6307\u51fa Body \u3002\u5b9e\u9645\u4e0a\uff0c Body \u662f\u8fd9\u6837\u786e\u5b9a\u7684\uff1a \u7f16\u8bd1\u5668\u6839\u636e body \u7684\u8868\u8fbe\u5f0f\u63a8\u65ad\u51fa body \u7684\u7c7b\u578b\uff08\u67d0\u4e2a\u9075\u5faa View \u534f\u8bae\u7684\u5177\u4f53\u7c7b\u578b\uff09 \u56e0\u4e3a body \u7684\u7c7b\u578b\u662f Body \uff0c\u90a3\u4e48\u63a8\u65ad\u51fa Body \u5c31\u662f\u5728 1 \u4e2d\u63a8\u65ad\u51fa\u7684\u7c7b\u578b \u4f60\u53ef\u4ee5\u4ece\u4e2d\u770b\u5230 some \u4e0d\u53ef\u6216\u7f3a\u7684\u4f5c\u7528\u3002 \u4e3a\u4ec0\u4e48\u4e0d\u80fd\u4ee5 View \u4f5c\u4e3a\u7c7b\u578b \u5982\u679c\u4f60\u628a some View \u6539\u6210 View \uff0c\u4f1a\u51fa\u73b0\u7f16\u8bd1\u9519\u8bef\uff1a 1 Protocol 'View' can only be used as a generic constraint because it has Self or associated type requirements protocol \u5728\u6709 associatedtype \u9650\u5236\u65f6\u4e0d\u80fd\u591f\u4f5c\u4e3a\u7c7b\u578b\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u63d0\u4f9b\u4e00\u4e2a\u786e\u5b9a\u7684\u3001\u9075\u5faa View \u7684\u7c7b\u578b\u3002 View modifier\uff1a\u4fee\u9970 View \u00b6 1 2 3 4 5 6 7 8 9 10 struct ContentView : View { var body : some View { VStack { Image ( systemName : \"globe\" ) . imageScale (. large ) . foregroundColor (. accentColor ) Text ( \"Hello, world!\" ) } } } \u5355\u72ec\u7684\u4e24\u884c .imageScale(.large) \u548c .foregroundColor(.accentColor) \u770b\u8d77\u6765\u5f88\u5947\u602a\uff0c\u5b9e\u9645\u4e0a\u5f88\u597d\u7406\u89e3\u3002 Image \u9075\u5faa View \uff0c\u800c imageScale \u548c foregroundColor \u662f View \u7684\u6210\u5458\u51fd\u6570\uff0c\u539f\u6765\u7684\u4ee3\u7801\u76f8\u5f53\u4e8e\uff1a 1 Image ( systemName : \"globe\" ). imageScale (. large ). foregroundColor (. accentColor ) \u6253\u5f00\u6587\u6863\uff0c\u67e5\u770b .imageScale(_:) \u7684\u51fd\u6570\u7b7e\u540d\uff1a 1 2 3 4 /// Scales images within the view according to one of /// the relative sizes available including small, medium, /// and large images sizes. func imageScale ( _ scale : Image . Scale ) -> some View \u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f some View \u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5c06\u539f\u6765\u7684 View\uff08\u5373 Image \uff09\u8f6c\u6362\u4e3a\u4e86\u53e6\u4e00\u4e2a View\uff0c\u8fd9\u4e2a View \u7684\u56fe\u6807\u5927\u5c0f\u8bbe\u7f6e\u4e3a .large \u3002 \u8fd9\u79cd\u51fd\u6570\u53eb\u505a view modifier \uff0c\u4e5f\u5c31\u662f\u5411\u539f\u6765\u7684 View \u8fdb\u884c\u4e00\u5b9a\u7684\u4fee\u9970\uff0c\u7136\u540e\u8fd4\u56de\u4fee\u9970\u540e\u7684 View\u3002 \u8fd9\u5b9e\u9645\u4e0a\u662f\u4e00\u79cd\u51fd\u6570\u5f0f\u7f16\u7a0b\u3002\u5b83\u7684\u597d\u5904\u662f\u663e\u800c\u6613\u89c1\u7684\uff0c\u6bd4\u5982\uff0c\u5982\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed9\u4e00\u4e2a View \u8fde\u7eed\u6dfb\u52a0 modifier\uff1a 1 2 3 Image ( systemName : \"globe\" ) . imageScale (. large ) . foregroundColor (. accentColor ) \u6bcf\u6b21\u6dfb\u52a0 modifier\uff0c\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u7684\u7c7b\u578b\u4f9d\u7136\u662f\u67d0\u79cd View \uff0c\u800c\u5f62\u5f0f\u4e0a\u770b\u4e0a\u53bb\u5c31\u50cf\u662f\u4e0d\u65ad\u7ed9 Image \u52a0\u4e0a\u4e0d\u540c\u7684\u6837\u5f0f\u4e00\u6837\u3002 \u67e5\u770b\u6587\u6863\u7684\u51e0\u79cd\u65b9\u5f0f Swift Playgrounds \u70b9\u51fb\u5bfc\u822a\u680f\u7684 (...) > \u6587\u6863 \uff0c\u53ef\u4ee5\u6d4f\u89c8\u6240\u6709\u6587\u6863 \u5728\u4efb\u610f\u7b26\u53f7\u4e0a\uff08\u53d8\u91cf\u3001\u51fd\u6570\u3001\u7c7b\u578b\u3001\u534f\u8bae\u7b49\uff09\u9f20\u6807\u53f3\u952e\u70b9\u51fb\uff08\u6216\u89e6\u6478\u70b9\u51fb\uff09\uff0c\u9009\u62e9 \u5e2e\u52a9 \uff0c\u53ef\u4ee5\u5feb\u901f\u67e5\u770b\u8be5\u7b26\u53f7\u76f8\u5173\u6587\u6863 Xcode \u6309 Cmd + Shift + 0 \u53ef\u4ee5\u6253\u5f00\u5e76\u6d4f\u89c8\u6240\u6709\u7684\u5f00\u53d1\u8005\u6587\u6863\u3002 \u5728\u4efb\u610f\u7b26\u53f7\u4e0a\uff0c\u6309\u4f4f Option \u5e76\u70b9\u51fb\u8be5\u7b26\u53f7\uff0c\u53ef\u4ee5\u5feb\u901f\u67e5\u770b\u6587\u6863 \u7f51\u9875\u7248\u6587\u6863\uff1a https://developer.apple.com/documentation/technologies \u5173\u4e8e View Modifier \u4e0e View \u7684\u503c\u7c7b\u578b struct \u662f\u503c\u7c7b\u578b\uff0c\u6bcf\u6b21\u6dfb\u52a0 modifier \u90fd\u4f1a\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u526f\u672c\uff0c\u5e76\u4e0d\u4f1a\u6539\u53d8\u539f\u6765\u7684 View\u3002\u4f8b\u5982\uff1a 1 2 let view1 = Text ( \"Hello\" ) let view2 = view1 . padding () view1 \u5e76\u4e0d\u4f1a\u6dfb\u52a0 padding\u3002Modifier \u662f\u5b8c\u5168\u6ca1\u6709\u526f\u4f5c\u7528\u7684\u3002 body \u7684\u5177\u4f53\u7c7b\u578b \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u6bcf\u6b21\u6dfb\u52a0 modifier\uff0c body \u7684\u5b9e\u9645\u7c7b\u578b\u90fd\u4f1a\u53d1\u751f\u6539\u53d8\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // Image Image ( systemName : \"globe\" ) // ModifiedContent<Image, _EnvironmentKeyWritingModifier<Scale>> Image ( systemName : \"globe\" ) . imageScale (. large ) //ModifiedContent< // ModifiedContent<Image, _EnvironmentKeyWritingModifier<Scale>>, // _EnvironmentKeyWritingModifier<Optional<Color>> //> Image ( systemName : \"globe\" ) . imageScale (. large ) . foregroundColor (. accentColor ) \u8fd9\u91cc _EnvironmentKeyWritingModifier \u662f SwiftUI \u5185\u7f6e\u7684\u79c1\u6709\u7c7b\u578b\uff0c\u5bf9\u5916\u4e0d\u53ef\u89c1\u3002\u5bb9\u6613\u6307\u51fa\uff0c ModifiedContent \u9075\u5faa View \u3002 \u5982\u4f55\u67e5\u770b View \u7684\u7c7b\u578b \u4f60\u53ef\u4ee5\u7528 Swift \u7684\u547d\u4ee4\u884c\u5de5\u5177\u8fdb\u884c\u5feb\u901f\u7684\u5b9e\u9a8c\uff1a 1 2 3 4 5 liang2kl @ liang2kl ~> swift 1 > import SwiftUI 2 > Image ( systemName : \"globe\" ). imageScale (. large ) $ R0 : some View = ModifiedContent < Image , _EnvironmentKeyWritingModifier < Scale > > ... \u67d0\u4e9b\u7248\u672c\u7684\u547d\u4ee4\u884c\u5de5\u5177\u5e76\u4e0d\u80fd\u6b63\u786e\u663e\u793a\u7c7b\u578b\uff0c\u5982\uff1a 1 $ R0 : some View = < extracting data from value failed > \u4f60\u53ef\u4ee5\u4f7f\u7528 String(describing:) \u6765\u67e5\u770b\uff1a 1 2 3 > String ( describing : $ R0 ) $ R1 : String = \"ModifiedContent<Image, _EnvironmentKeyWritingModifier<Scale>>...\" \u8fd9\u5c31\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u6211\u4eec\u4e3a\u4ec0\u4e48\u9700\u8981\u5199 some View \uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u7ed9\u51fa\u6700\u540e\u7684\u7c7b\u578b\u3002 body \u5b9e\u9645\u7684\u7c7b\u578b\u5f80\u5f80\u975e\u5e38\u590d\u6742\uff1a\u4e00\u4e2a View \u53ef\u80fd\u662f\u7531\u53e6\u5916\u4e00\u4e2a\u6216\u591a\u4e2a View \u901a\u8fc7\u67d0\u79cd\u65b9\u5f0f\u6784\u6210\u7684\uff0c\u800c\u4e14\u8fd9\u79cd\u6784\u6210\u5f80\u5f80\u4f7f\u7528\u6a21\u7248\u5b8c\u6210\uff0c\u6b63\u5982 ModifiedContent<Image, _EnvironmentKeyWritingModifier<Scale>> \u663e\u793a\u7684\u90a3\u6837\u3002 \u800c\u4e14\uff0c\u5728\u6211\u4eec\u7ec4\u5efa View \u7684\u65f6\u5019\uff0c\u6211\u4eec\u5199\u7684 View \u7684\u7c7b\u578b\u662f\u4e0d\u65ad\u53d8\u5316\u7684\uff0c\u6211\u4eec\u4e0d\u53ef\u80fd\u968f\u7740\u6211\u4eec\u5199\u4ee3\u7801\u800c\u4e0d\u65ad\u53d8\u5316\u7684 View \u800c\u4e0d\u65ad\u5730\u4fee\u6539\u7c7b\u578b\u3002\u8fd9\u4ef6\u4e8b\u4ea4\u7531\u7f16\u8bd1\u5668\u5b8c\u6210\u518d\u5408\u9002\u4e0d\u8fc7\u2014\u2014Swift \u5177\u6709\u81ea\u52a8\u7c7b\u578b\u63a8\u65ad\uff0c\u7f16\u8bd1\u5668\u6839\u636e var body \u4e2d\u7684\u8868\u8fbe\u5f0f\u5c31\u53ef\u4ee5\u786e\u5b9a body \u7684\u7c7b\u578b\u3002 \u5f53\u7136\uff0c\u4f60\u4e0d\u5fc5\u5bf9\u8fd9\u4e2a\u8bdd\u9898\u8fc7\u4e8e\u8d39\u5fc3\uff0c\u4f60\u53ea\u9700\u8981\u4fdd\u8bc1 body \u4e2d\u8fd4\u56de\u7684\u662f\u4e00\u4e2a View \u5373\u53ef\uff0c\u5269\u4e0b\u7684\u5de5\u4f5c\u5c31\u4ea4\u7ed9\u7f16\u8bd1\u5668\u5427\u3002 HTML\uff1f \u00b6 1 2 3 4 5 6 7 8 9 10 struct ContentView : View { var body : some View { VStack { Image ( systemName : \"globe\" ) . imageScale (. large ) . foregroundColor (. accentColor ) Text ( \"Hello, world!\" ) } } } Hello World \u7a0b\u5e8f\u4e2d\u8fd8\u6709\u4e00\u4e2a\u4ee4\u4eba\u8ff7\u60d1\u7684\u5730\u65b9\uff1a VStack \u7684\u6784\u9020\u51fd\u6570\u4e2d\u7684\u5185\u5bb9\u770b\u4e0a\u53bb\u5c31\u50cf HTML \u4e00\u6837\uff0c\u7ed3\u6784\u975e\u5e38\u76f4\u89c2\uff0c\u4f46\u5e76\u4e0d\u50cf\u662f\u4e00\u822c\u7684 Swift \u8bed\u8a00\u3002\u5b9e\u9645\u4e0a\uff0c\u8fd9\u7684\u786e\u662f\u7c7b\u578b\u5b89\u5168\u3001\u9759\u6001\u7c7b\u578b\u7684 Swift \u8bed\u8a00\uff0c\u800c\u4e14\u8fd9\u79cd\u8bed\u6cd5\u5c31\u662f\u4e3a\u4e86 SwiftUI \u800c\u8bbe\u8ba1\u7684\u3002\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u7559\u5230 \u6784\u5efa View \u4e2d\u4ecb\u7ecd\u3002","title":"Hello World"},{"location":"frontend/swiftui/hello-world/#_1","text":"","title":"\u521b\u5efa\u9879\u76ee"},{"location":"frontend/swiftui/hello-world/#swift-playgroundsipad","text":"\u5728 Swift Playgrounds\uff084.0 \u4ee5\u4e0a\u7248\u672c\uff09\u4e2d\uff0c\u9009\u62e9\u5e95\u90e8\u7684 App \u3002","title":"Swift Playgrounds\uff08iPad\uff09"},{"location":"frontend/swiftui/hello-world/#xcode-swift-playground-app","text":"\u5728 Xcode\uff0813.2 \u4ee5\u4e0a\u7248\u672c\uff09\u4e2d\uff0c\u9009\u62e9 File > New > Project \u4e2d\u7684 Swift Playground App \u3002","title":"Xcode Swift Playground App"},{"location":"frontend/swiftui/hello-world/#xcode-project","text":"\u4f20\u7edf\u7684 Xcode project\uff0c\u90e8\u5206\u5185\u5bb9\u4e0e Swift Playground App \u4e0d\u540c\u3002 \u6253\u5f00 Xcode\uff0c\u70b9\u51fb Create a new Xcode project \uff0c\u9009\u62e9 iOS \u680f\u4e0b\u7684 App \u3002\u5728\u9879\u76ee\u7684\u914d\u7f6e\u754c\u9762\uff0c\u914d\u7f6e\uff1a Product Name\uff1a\u5e94\u7528\u540d\u79f0 Team\uff1a\u5f00\u53d1\u4f7f\u7528\u7684 Apple ID\uff0c\u53ef\u4ee5\u4e3a None Organization Identifier\uff1a\u4e00\u4e2a\u9006\u5e8f\u7684 DNS \u540d\uff0c\u5982\u679c\u4e0d\u8003\u8651\u4e0a\u67b6\u53ef\u4ee5\u4efb\u610f Interface\uff1a\u9009\u62e9 SwiftUI Language\uff1a Swift Use Core Data \u548c Include Tests\uff1a\u672c\u6559\u7a0b\u4e0d\u6d89\u53ca\uff0c\u53ef\u4ee5\u4e0d\u9009 \u5176\u4f59\u6b65\u9aa4\u6309\u7167\u9ed8\u8ba4\u914d\u7f6e\u5373\u53ef\u3002","title":"Xcode Project"},{"location":"frontend/swiftui/hello-world/#hello-world","text":"\u4f7f\u7528 Swift Playgrounds \u521b\u5efa\u9879\u76ee\u5e76\u8fdb\u5165\u540e\uff0c\u53ef\u4ee5\u770b\u5230\u5de6\u4fa7\u7684\u6e90\u4ee3\u7801\u548c\u53f3\u4fa7\u7684\u5b9e\u65f6\u9884\u89c8\uff1a \u5b9e\u65f6\u9884\u89c8\u662f\u771f\u5b9e\u8fd0\u884c\u7684 app\uff0c\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u8fdb\u884c\u5f00\u53d1\u3001\u8c03\u8bd5\u3002 \u6253\u5f00\u4fa7\u8fb9\u680f\uff0c\u53ef\u4ee5\u6d4f\u89c8\u9879\u76ee\u6587\u4ef6\u76ee\u5f55\uff1a \u8fd9\u4e24\u4e2a\u6587\u4ef6\uff0c\u5c31\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u53ef\u8fd0\u884c\u7684 Hello World \u7a0b\u5e8f\u3002 MyApp.swift \u4e2d\u7684\u5185\u5bb9\u5728\u672c\u6559\u7a0b\u4e2d\u4e0d\u6d89\u53ca\uff0c\u53ef\u4ee5\u53c2\u8003 \u540e\u7eed\u62d3\u5c55 \u4e2d\u7684\u201cSwiftUI \u751f\u547d\u5468\u671f\u201d\u3002","title":"Hello, world!"},{"location":"frontend/swiftui/hello-world/#hello-world_1","text":"\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u901a\u8fc7\u8fd9\u4e2a Hello World \u7a0b\u5e8f\uff0c\u5feb\u901f\u5730\u4ecb\u7ecd SwiftUI \u6784\u5efa UI \u7684\u57fa\u672c\u6982\u5ff5\uff0c\u4ee5\u53ca\u4e0e SwiftUI \u6709\u5173\u7684\u4e00\u4e9b Swift \u8bed\u6cd5\u3002 \u8fd9\u662f\u6211\u4eec\u4e4b\u524d\u770b\u5230\u7684 ContentView.swift \uff1a 1 2 3 4 5 6 7 8 9 10 11 12 import SwiftUI struct ContentView : View { var body : some View { VStack { Image ( systemName : \"globe\" ) . imageScale (. large ) . foregroundColor (. accentColor ) Text ( \"Hello, world!\" ) } } } \u56e0\u4e3a\u8981\u7528\u5230 SwiftUI \u6846\u67b6\uff0c\u5728\u6587\u4ef6\u7684\u5f00\u5934\u9700\u8981 import SwiftUI \uff0c\u4e4b\u540e SwiftUI \u4e2d\u6240\u6709\u7684\u7b26\u53f7\u5747\u53ef\u76f4\u63a5\u4f7f\u7528\u3002 \u5728\u6211\u4eec\u7684 App \u4e2d\uff0c\u4e0a\u9762\u7684 ContentView \u662f\u552f\u4e00\u7684 View\uff08\u5728 MyApp.swift \u4e2d\u53ef\u4ee5\u770b\u5230\u8fd9\u4e00\u70b9\uff09\uff0c\u5176 View \u7531\u5782\u76f4\u6392\u5217\uff08 VStack \uff09\u7684\u4e24\u4e2a View\uff08 Image \u548c Text \uff09\u6784\u6210\u3002\u5982\u679c\u4f60\u70b9\u51fb\u8fd0\u884c\uff0cApp \u7684\u6240\u6709\u5185\u5bb9\u5c31\u662f ContentView \u3002 \u5728 SwiftUI \u4e2d\uff0c\u6240\u6709 UI\uff0c\u65e0\u8bba\u662f\u4e00\u6574\u4e2a\u9875\u9762\uff0c\u8fd8\u662f\u5355\u72ec\u7684\u7ec4\u4ef6\uff0c\u90fd\u662f\u4e00\u4e2a View\u3002\u6211\u4eec\u901a\u8fc7\u7ec4\u5408\u4e0d\u540c\u7684 View \u6765\u6784\u5efa UI\u3002 \u5b9a\u4e49\u4e00\u4e2a View \u9700\u8981\uff1a \u5b9a\u4e49\u4e00\u4e2a\u9075\u5faa View \u534f\u8bae\u7684 struct \u5728 struct \u5b9a\u4e49\u4e00\u4e2a\u540d\u79f0\u4e3a body \uff0c\u7c7b\u578b\u4e3a some View \u7684\u8ba1\u7b97\u53d8\u91cf\uff08 View \u534f\u8bae\u7684\u89c4\u5b9a\uff09 \u6211\u4eec\u8981\u505a\u7684\uff0c\u5c31\u662f\u5728 body \u4e2d\u63cf\u8ff0\u6211\u4eec\u7684 UI\u3002 \u6211\u4eec\u5c06\u5728\u4e0b\u4e00\u8282\u5c55\u5f00\u5982\u4f55\u6784\u5efa UI \u7684\u8bdd\u9898\uff0c\u6211\u4eec\u5148\u5173\u6ce8\u5176\u4e2d\u7684\u8bed\u6cd5\u3002","title":"\u6df1\u5165 Hello World"},{"location":"frontend/swiftui/hello-world/#body-some-view","text":"1 2 3 4 5 6 7 8 9 10 struct ContentView : View { var body : some View { VStack { Image ( systemName : \"globe\" ) . imageScale (. large ) . foregroundColor (. accentColor ) Text ( \"Hello, world!\" ) } } } body \u662f\u4e00\u4e2a\u7c7b\u578b\u4e3a some View \u7684\u8ba1\u7b97\u53d8\u91cf\u3002 some \u7684\u542b\u4e49\u662f\uff1a \u201c\u8fd9\u4e2a\u7c7b\u578b\u9075\u5faa View \u8fd9\u4e2a\u534f\u8bae\uff0c\u4f46\u6211\u4e0d\u65b9\u4fbf\u5199\u51fa\u8fd9\u4e2a\u7c7b\u578b\uff0c\u9700\u8981\u7f16\u8bd1\u5668\u6765\u786e\u5b9a\u5b83\u7684\u7c7b\u578b\u201d \u3002\u4e5f\u5c31\u662f\u8bf4\uff0c body \u5b9e\u9645\u4e0a\u662f\u6709\u4e00\u4e2a\u786e\u5b9a\u7684\u7c7b\u578b\u7684\uff0c\u53ea\u4e0d\u8fc7\u6211\u4eec\u4e0d\u663e\u5f0f\u5730\u5199\u51fa\u6765\u3002\u8fd9\u662f\u4e00\u79cd\u53eb\u505a opaque return type \u7684\u8bed\u6cd5\u3002 Note \u4f60\u53ef\u4ee5\u5728\u4e0b\u6587\u4e2d\u7684\u300a body \u7684\u5177\u4f53\u7c7b\u578b\u300b\u770b\u5230\u4e3a\u4ec0\u4e48\u201c\u4e0d\u65b9\u4fbf\u5199\u51fa\u8fd9\u4e2a\u7c7b\u578b\u201d\u3002 \u8fd9\u4e5f\u544a\u8bc9\u6211\u4eec\uff0c\u6211\u4eec\u5b9a\u4e49 View\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u662f\u8fd4\u56de\u53e6\u4e00\u4e2a View\u3002 \u4f60\u6ca1\u6709\u529e\u6cd5\u5728\u4e0d\u5229\u7528\u5df2\u6709 View \u7684\u60c5\u51b5\u4e0b\u51ed\u7a7a\u751f\u6210\u4e00\u4e2a View\u3002 \u5173\u4e8e View \u4e2d\u7684 associatedtype View \u7684\u5b9a\u4e49\u4e2d\u6709\u4e00\u4e2a\u9075\u5faa View \u3001\u540d\u4e3a Body \u7684 associatedtype \uff0c\u5e76\u4e14 body \u7684\u7c7b\u578b\u5b9e\u9645\u4e0a\u5c31\u662f\u8fd9\u4e2a Body \uff1a 1 2 3 4 protocol View { associatedtype Body : View @ ViewBuilder var body : Body { get } } \u6ce8\u610f\u5230\u6211\u4eec\u6ca1\u6709\u663e\u5f0f\u5730\u6307\u51fa Body \u3002\u5b9e\u9645\u4e0a\uff0c Body \u662f\u8fd9\u6837\u786e\u5b9a\u7684\uff1a \u7f16\u8bd1\u5668\u6839\u636e body \u7684\u8868\u8fbe\u5f0f\u63a8\u65ad\u51fa body \u7684\u7c7b\u578b\uff08\u67d0\u4e2a\u9075\u5faa View \u534f\u8bae\u7684\u5177\u4f53\u7c7b\u578b\uff09 \u56e0\u4e3a body \u7684\u7c7b\u578b\u662f Body \uff0c\u90a3\u4e48\u63a8\u65ad\u51fa Body \u5c31\u662f\u5728 1 \u4e2d\u63a8\u65ad\u51fa\u7684\u7c7b\u578b \u4f60\u53ef\u4ee5\u4ece\u4e2d\u770b\u5230 some \u4e0d\u53ef\u6216\u7f3a\u7684\u4f5c\u7528\u3002 \u4e3a\u4ec0\u4e48\u4e0d\u80fd\u4ee5 View \u4f5c\u4e3a\u7c7b\u578b \u5982\u679c\u4f60\u628a some View \u6539\u6210 View \uff0c\u4f1a\u51fa\u73b0\u7f16\u8bd1\u9519\u8bef\uff1a 1 Protocol 'View' can only be used as a generic constraint because it has Self or associated type requirements protocol \u5728\u6709 associatedtype \u9650\u5236\u65f6\u4e0d\u80fd\u591f\u4f5c\u4e3a\u7c7b\u578b\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u63d0\u4f9b\u4e00\u4e2a\u786e\u5b9a\u7684\u3001\u9075\u5faa View \u7684\u7c7b\u578b\u3002","title":"body \u7684\u7c7b\u578b\uff1asome View"},{"location":"frontend/swiftui/hello-world/#view-modifier-view","text":"1 2 3 4 5 6 7 8 9 10 struct ContentView : View { var body : some View { VStack { Image ( systemName : \"globe\" ) . imageScale (. large ) . foregroundColor (. accentColor ) Text ( \"Hello, world!\" ) } } } \u5355\u72ec\u7684\u4e24\u884c .imageScale(.large) \u548c .foregroundColor(.accentColor) \u770b\u8d77\u6765\u5f88\u5947\u602a\uff0c\u5b9e\u9645\u4e0a\u5f88\u597d\u7406\u89e3\u3002 Image \u9075\u5faa View \uff0c\u800c imageScale \u548c foregroundColor \u662f View \u7684\u6210\u5458\u51fd\u6570\uff0c\u539f\u6765\u7684\u4ee3\u7801\u76f8\u5f53\u4e8e\uff1a 1 Image ( systemName : \"globe\" ). imageScale (. large ). foregroundColor (. accentColor ) \u6253\u5f00\u6587\u6863\uff0c\u67e5\u770b .imageScale(_:) \u7684\u51fd\u6570\u7b7e\u540d\uff1a 1 2 3 4 /// Scales images within the view according to one of /// the relative sizes available including small, medium, /// and large images sizes. func imageScale ( _ scale : Image . Scale ) -> some View \u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f some View \u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5c06\u539f\u6765\u7684 View\uff08\u5373 Image \uff09\u8f6c\u6362\u4e3a\u4e86\u53e6\u4e00\u4e2a View\uff0c\u8fd9\u4e2a View \u7684\u56fe\u6807\u5927\u5c0f\u8bbe\u7f6e\u4e3a .large \u3002 \u8fd9\u79cd\u51fd\u6570\u53eb\u505a view modifier \uff0c\u4e5f\u5c31\u662f\u5411\u539f\u6765\u7684 View \u8fdb\u884c\u4e00\u5b9a\u7684\u4fee\u9970\uff0c\u7136\u540e\u8fd4\u56de\u4fee\u9970\u540e\u7684 View\u3002 \u8fd9\u5b9e\u9645\u4e0a\u662f\u4e00\u79cd\u51fd\u6570\u5f0f\u7f16\u7a0b\u3002\u5b83\u7684\u597d\u5904\u662f\u663e\u800c\u6613\u89c1\u7684\uff0c\u6bd4\u5982\uff0c\u5982\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed9\u4e00\u4e2a View \u8fde\u7eed\u6dfb\u52a0 modifier\uff1a 1 2 3 Image ( systemName : \"globe\" ) . imageScale (. large ) . foregroundColor (. accentColor ) \u6bcf\u6b21\u6dfb\u52a0 modifier\uff0c\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u7684\u7c7b\u578b\u4f9d\u7136\u662f\u67d0\u79cd View \uff0c\u800c\u5f62\u5f0f\u4e0a\u770b\u4e0a\u53bb\u5c31\u50cf\u662f\u4e0d\u65ad\u7ed9 Image \u52a0\u4e0a\u4e0d\u540c\u7684\u6837\u5f0f\u4e00\u6837\u3002 \u67e5\u770b\u6587\u6863\u7684\u51e0\u79cd\u65b9\u5f0f Swift Playgrounds \u70b9\u51fb\u5bfc\u822a\u680f\u7684 (...) > \u6587\u6863 \uff0c\u53ef\u4ee5\u6d4f\u89c8\u6240\u6709\u6587\u6863 \u5728\u4efb\u610f\u7b26\u53f7\u4e0a\uff08\u53d8\u91cf\u3001\u51fd\u6570\u3001\u7c7b\u578b\u3001\u534f\u8bae\u7b49\uff09\u9f20\u6807\u53f3\u952e\u70b9\u51fb\uff08\u6216\u89e6\u6478\u70b9\u51fb\uff09\uff0c\u9009\u62e9 \u5e2e\u52a9 \uff0c\u53ef\u4ee5\u5feb\u901f\u67e5\u770b\u8be5\u7b26\u53f7\u76f8\u5173\u6587\u6863 Xcode \u6309 Cmd + Shift + 0 \u53ef\u4ee5\u6253\u5f00\u5e76\u6d4f\u89c8\u6240\u6709\u7684\u5f00\u53d1\u8005\u6587\u6863\u3002 \u5728\u4efb\u610f\u7b26\u53f7\u4e0a\uff0c\u6309\u4f4f Option \u5e76\u70b9\u51fb\u8be5\u7b26\u53f7\uff0c\u53ef\u4ee5\u5feb\u901f\u67e5\u770b\u6587\u6863 \u7f51\u9875\u7248\u6587\u6863\uff1a https://developer.apple.com/documentation/technologies \u5173\u4e8e View Modifier \u4e0e View \u7684\u503c\u7c7b\u578b struct \u662f\u503c\u7c7b\u578b\uff0c\u6bcf\u6b21\u6dfb\u52a0 modifier \u90fd\u4f1a\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u526f\u672c\uff0c\u5e76\u4e0d\u4f1a\u6539\u53d8\u539f\u6765\u7684 View\u3002\u4f8b\u5982\uff1a 1 2 let view1 = Text ( \"Hello\" ) let view2 = view1 . padding () view1 \u5e76\u4e0d\u4f1a\u6dfb\u52a0 padding\u3002Modifier \u662f\u5b8c\u5168\u6ca1\u6709\u526f\u4f5c\u7528\u7684\u3002 body \u7684\u5177\u4f53\u7c7b\u578b \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u6bcf\u6b21\u6dfb\u52a0 modifier\uff0c body \u7684\u5b9e\u9645\u7c7b\u578b\u90fd\u4f1a\u53d1\u751f\u6539\u53d8\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // Image Image ( systemName : \"globe\" ) // ModifiedContent<Image, _EnvironmentKeyWritingModifier<Scale>> Image ( systemName : \"globe\" ) . imageScale (. large ) //ModifiedContent< // ModifiedContent<Image, _EnvironmentKeyWritingModifier<Scale>>, // _EnvironmentKeyWritingModifier<Optional<Color>> //> Image ( systemName : \"globe\" ) . imageScale (. large ) . foregroundColor (. accentColor ) \u8fd9\u91cc _EnvironmentKeyWritingModifier \u662f SwiftUI \u5185\u7f6e\u7684\u79c1\u6709\u7c7b\u578b\uff0c\u5bf9\u5916\u4e0d\u53ef\u89c1\u3002\u5bb9\u6613\u6307\u51fa\uff0c ModifiedContent \u9075\u5faa View \u3002 \u5982\u4f55\u67e5\u770b View \u7684\u7c7b\u578b \u4f60\u53ef\u4ee5\u7528 Swift \u7684\u547d\u4ee4\u884c\u5de5\u5177\u8fdb\u884c\u5feb\u901f\u7684\u5b9e\u9a8c\uff1a 1 2 3 4 5 liang2kl @ liang2kl ~> swift 1 > import SwiftUI 2 > Image ( systemName : \"globe\" ). imageScale (. large ) $ R0 : some View = ModifiedContent < Image , _EnvironmentKeyWritingModifier < Scale > > ... \u67d0\u4e9b\u7248\u672c\u7684\u547d\u4ee4\u884c\u5de5\u5177\u5e76\u4e0d\u80fd\u6b63\u786e\u663e\u793a\u7c7b\u578b\uff0c\u5982\uff1a 1 $ R0 : some View = < extracting data from value failed > \u4f60\u53ef\u4ee5\u4f7f\u7528 String(describing:) \u6765\u67e5\u770b\uff1a 1 2 3 > String ( describing : $ R0 ) $ R1 : String = \"ModifiedContent<Image, _EnvironmentKeyWritingModifier<Scale>>...\" \u8fd9\u5c31\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u6211\u4eec\u4e3a\u4ec0\u4e48\u9700\u8981\u5199 some View \uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u7ed9\u51fa\u6700\u540e\u7684\u7c7b\u578b\u3002 body \u5b9e\u9645\u7684\u7c7b\u578b\u5f80\u5f80\u975e\u5e38\u590d\u6742\uff1a\u4e00\u4e2a View \u53ef\u80fd\u662f\u7531\u53e6\u5916\u4e00\u4e2a\u6216\u591a\u4e2a View \u901a\u8fc7\u67d0\u79cd\u65b9\u5f0f\u6784\u6210\u7684\uff0c\u800c\u4e14\u8fd9\u79cd\u6784\u6210\u5f80\u5f80\u4f7f\u7528\u6a21\u7248\u5b8c\u6210\uff0c\u6b63\u5982 ModifiedContent<Image, _EnvironmentKeyWritingModifier<Scale>> \u663e\u793a\u7684\u90a3\u6837\u3002 \u800c\u4e14\uff0c\u5728\u6211\u4eec\u7ec4\u5efa View \u7684\u65f6\u5019\uff0c\u6211\u4eec\u5199\u7684 View \u7684\u7c7b\u578b\u662f\u4e0d\u65ad\u53d8\u5316\u7684\uff0c\u6211\u4eec\u4e0d\u53ef\u80fd\u968f\u7740\u6211\u4eec\u5199\u4ee3\u7801\u800c\u4e0d\u65ad\u53d8\u5316\u7684 View \u800c\u4e0d\u65ad\u5730\u4fee\u6539\u7c7b\u578b\u3002\u8fd9\u4ef6\u4e8b\u4ea4\u7531\u7f16\u8bd1\u5668\u5b8c\u6210\u518d\u5408\u9002\u4e0d\u8fc7\u2014\u2014Swift \u5177\u6709\u81ea\u52a8\u7c7b\u578b\u63a8\u65ad\uff0c\u7f16\u8bd1\u5668\u6839\u636e var body \u4e2d\u7684\u8868\u8fbe\u5f0f\u5c31\u53ef\u4ee5\u786e\u5b9a body \u7684\u7c7b\u578b\u3002 \u5f53\u7136\uff0c\u4f60\u4e0d\u5fc5\u5bf9\u8fd9\u4e2a\u8bdd\u9898\u8fc7\u4e8e\u8d39\u5fc3\uff0c\u4f60\u53ea\u9700\u8981\u4fdd\u8bc1 body \u4e2d\u8fd4\u56de\u7684\u662f\u4e00\u4e2a View \u5373\u53ef\uff0c\u5269\u4e0b\u7684\u5de5\u4f5c\u5c31\u4ea4\u7ed9\u7f16\u8bd1\u5668\u5427\u3002","title":"View modifier\uff1a\u4fee\u9970 View"},{"location":"frontend/swiftui/hello-world/#html","text":"1 2 3 4 5 6 7 8 9 10 struct ContentView : View { var body : some View { VStack { Image ( systemName : \"globe\" ) . imageScale (. large ) . foregroundColor (. accentColor ) Text ( \"Hello, world!\" ) } } } Hello World \u7a0b\u5e8f\u4e2d\u8fd8\u6709\u4e00\u4e2a\u4ee4\u4eba\u8ff7\u60d1\u7684\u5730\u65b9\uff1a VStack \u7684\u6784\u9020\u51fd\u6570\u4e2d\u7684\u5185\u5bb9\u770b\u4e0a\u53bb\u5c31\u50cf HTML \u4e00\u6837\uff0c\u7ed3\u6784\u975e\u5e38\u76f4\u89c2\uff0c\u4f46\u5e76\u4e0d\u50cf\u662f\u4e00\u822c\u7684 Swift \u8bed\u8a00\u3002\u5b9e\u9645\u4e0a\uff0c\u8fd9\u7684\u786e\u662f\u7c7b\u578b\u5b89\u5168\u3001\u9759\u6001\u7c7b\u578b\u7684 Swift \u8bed\u8a00\uff0c\u800c\u4e14\u8fd9\u79cd\u8bed\u6cd5\u5c31\u662f\u4e3a\u4e86 SwiftUI \u800c\u8bbe\u8ba1\u7684\u3002\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u7559\u5230 \u6784\u5efa View \u4e2d\u4ecb\u7ecd\u3002","title":"HTML\uff1f"},{"location":"languages/","text":"\u7f16\u7a0b\u8bed\u8a00 \u00b6 \u672c\u90e8\u5206\u4e3b\u8981\u6536\u96c6\u4e86\u5e38\u89c1\u7684\u7f16\u7a0b\u8bed\u8a00\u7684\u57fa\u672c\u5165\u95e8\u6307\u5bfc\uff0c\u5728\u5165\u95e8\u4e00\u95e8\u65b0\u8bed\u8a00\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u7740\u8bfb\u4e00\u8bfb\u8fd9\u91cc\u7684\u6559\u5b66\u6587\u6863\u3002 \u6211\u4eec\u5c1d\u8bd5\u7701\u7565\u4e86\u4e00\u4e9b\u8f83\u4e3a\u7b80\u5355\u7684\u5185\u5bb9\uff0c\u66f4\u6ce8\u91cd\u8bb2\u89e3\u66f4\u5bb9\u6613\u51fa\u73b0\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u7684\u8bed\u6cd5\u70b9\u3001\u8bed\u6cd5\u7cd6\u3002","title":"\u7f16\u7a0b\u8bed\u8a00"},{"location":"languages/#_1","text":"\u672c\u90e8\u5206\u4e3b\u8981\u6536\u96c6\u4e86\u5e38\u89c1\u7684\u7f16\u7a0b\u8bed\u8a00\u7684\u57fa\u672c\u5165\u95e8\u6307\u5bfc\uff0c\u5728\u5165\u95e8\u4e00\u95e8\u65b0\u8bed\u8a00\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u7740\u8bfb\u4e00\u8bfb\u8fd9\u91cc\u7684\u6559\u5b66\u6587\u6863\u3002 \u6211\u4eec\u5c1d\u8bd5\u7701\u7565\u4e86\u4e00\u4e9b\u8f83\u4e3a\u7b80\u5355\u7684\u5185\u5bb9\uff0c\u66f4\u6ce8\u91cd\u8bb2\u89e3\u66f4\u5bb9\u6613\u51fa\u73b0\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u7684\u8bed\u6cd5\u70b9\u3001\u8bed\u6cd5\u7cd6\u3002","title":"\u7f16\u7a0b\u8bed\u8a00"},{"location":"languages/html/","text":"HTML \u8bed\u8a00\u57fa\u7840 \u00b6 \u521d\u59cb HTML \u00b6 HTML \u7684\u5168\u79f0\u4e3a H yper T ext M arkup L anguage\uff08\u8d85\u6587\u672c\u6807\u8bb0\u8bed\u8a00\uff09\uff0c\u662f\u4e00\u79cd\u7528\u4e8e\u63cf\u8ff0\u7f51\u9875\u7684\u6807\u8bb0\u8bed\u8a00\u3002\u4e92\u8054\u7f51\u4e0a\u4e94\u5f69\u7f24\u7eb7\u7684\u7f51\u9875\u5c31\u662f\u4f7f\u7528 HTML \u8fdb\u884c\u63cf\u8ff0\u7684\u3002 \u8fd9\u662f\u6700\u7b80\u5355\u7684 HTML \u6587\u672c\uff1a 1 2 3 4 5 < body > < h1 > \u8fd9\u662f\u6807\u9898 </ h1 > < p > \u8fd9\u662f\u6bb5\u843d\u3002\u548c\u6211\u4e00\u8d77\u8bfb\uff1a </ p > < p > \u4f60\u2014\u2014\u597d\u2014\u2014\u4e16\u2014\u2014\u754c\u2014\u2014 </ p > </ body > \u4f60\u53ef\u4ee5\u70b9\u51fb \u94fe\u63a5 \u5728\u6d4f\u89c8\u5668\u4e2d\u9884\u89c8\u8fd9\u6bb5 HTML \u6587\u672c\u3002 \u4e0d\u96be\u53d1\u73b0\uff0cHTML \u6587\u672c\u7531\u5c42\u7ea7\u7ed3\u6784\u7ec4\u6210\u3002\u6bcf\u4e00\u7ea7\u5185\u5bb9\u88ab\u4e00\u5bf9 HTML \u6807\u7b7e\u5305\u56f4\uff0c\u6784\u6210\u4e00\u4e2a HTML \u5143\u7d20 \u3002\u5143\u7d20\u4e4b\u95f4 \u53ef\u4ee5\u5d4c\u5957 \u3002 1 < \u6807\u7b7e > \u5185\u5bb9 </ \u6807\u7b7e > \u5728\u8fd9\u6bb5\u6700\u7b80\u5355\u7684 HTML \u6587\u672c\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u89c1\u5230\u4e86\u4e09\u79cd\u4e0d\u540c\u7684 HTML \u5143\u7d20\uff1a <body> \u5143\u7d20\u8868\u793a\u7f51\u9875\u7684\u4e3b\u4f53\u5185\u5bb9\uff0c\u7528\u6765\u5bb9\u7eb3\u7f51\u9875\u4e0a\u6240\u6709\u53ef\u89c1\u5143\u7d20\uff1b <h1> \u5143\u7d20\u8868\u793a\u4e00\u7ea7\u6807\u9898\uff1b <p> \u5143\u7d20\u8868\u793a\u6bb5\u843d\u3002 \u5f53\u7136\uff0c\u8fd9\u6bb5\u6700\u7b80\u5355\u7684 HTML \u6587\u672c\u5e76\u4e0d\u8db3\u4ee5\u63cf\u8ff0\u4e00\u4e2a\u5b8c\u6574\u7684\u7f51\u9875\u3002\u6211\u4eec\u6765\u770b\u4e0b\u9762\u7684\u793a\u4f8b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 <!DOCTYPE html> < html lang = \"zh\" > < head > < meta charset = \"utf-8\" > < title > HTML \u793a\u4f8b </ title > </ head > < body > < h1 > \u8fd9\u662f\u6807\u9898 </ h1 > < p > \u8fd9\u662f\u6bb5\u843d\u3002\u548c\u6211\u4e00\u8d77\u8bfb\uff1a </ p > < p > \u4f60\u2014\u2014\u597d\u2014\u2014\u4e16\u2014\u2014\u754c\u2014\u2014 </ p > </ body > </ html > \u4f60\u53ef\u4ee5\u5728\u81ea\u5df1\u7684\u7535\u8111\u4e0a\u65b0\u5efa\u4e00\u4e2a\u6587\u4ef6 index.html \uff0c\u5c06\u4e0a\u9762\u8fd9\u6bb5\u6587\u672c\u7c98\u8d34\u8fdb\u53bb\uff0c\u4fdd\u5b58\u540e\u4f7f\u7528\u6d4f\u89c8\u5668\u6253\u5f00 index.html \u3002 \u76f8\u6bd4\u4e8e\u6700\u7b80\u5355\u7684 HTML \u6587\u672c\uff0c\u8fd9\u6bb5\u5b8c\u6574\u7684 HTML \u7f51\u9875\u591a\u51fa\u4e86\u4ee5\u4e0b\u5143\u7d20\uff1a <!DOCTYPE html> \u7528\u4e8e\u8868\u793a\u8fd9\u662f\u4e00\u6bb5 HTML \u6587\u672c\uff1b <html> \u5143\u7d20\u662f\u4e00\u4e2a\u5b8c\u6574\u7684 HTML \u7f51\u9875\u7684\u6839\u5143\u7d20\uff1b <head> \u5143\u7d20\u7528\u6765\u5bb9\u7eb3\u8fd9\u4e2a\u5b8c\u6574\u7684 HTML \u7f51\u9875\u7684\u4e00\u4e9b\u5143\u4fe1\u606f\uff08meta information\uff09\uff1b <meta> \u5143\u7d20\u7528\u6765\u8868\u793a\u8fd9\u4e2a\u5b8c\u6574\u7684 HTML \u7f51\u9875\u7684\u5143\u4fe1\u606f\uff1b <title> \u5143\u7d20\u7528\u6765\u8868\u793a\u8fd9\u4e2a\u7f51\u9875\u7684\u6807\u9898\u3002 \u8fd9\u4e9b\u5143\u7d20\u770b\u8d77\u6765\u590d\u6742\uff0c\u4f46\u5b83\u4eec\u662f\u6bcf\u4e2a HTML \u7f51\u9875\u7684\u56fa\u5b9a\u7ec4\u6210\u90e8\u5206\u3002\u4f60\u53ef\u4ee5\u5c06\u5b83\u4eec\u89c6\u4e3a\u4e00\u5957\u56fa\u5b9a\u7684\u6846\u67b6\uff0c\u5f53\u4f60\u60f3\u8981\u4e66\u5199\u65b0\u7684 HTML \u9875\u9762\u65f6\uff0c\u53ea\u9700\u586b\u5199 <body> \u5143\u7d20\u7684\u5185\u5bb9\u5373\u53ef\u3002 \u5b66\u4f1a\u6a21\u4eff HTML \u5e76\u4e0d\u9700\u8981\u523b\u610f\u5b66\u4e60\u3002\u89c2\u5bdf\u793a\u4f8b\uff0c\u7406\u89e3 HTML \u7684\u7ed3\u6784\uff0c\u5177\u5907\u57fa\u672c\u7684\u9605\u8bfb\u80fd\u529b\uff0c\u80fd\u591f\u52a8\u624b\u9b54\u6539\u3001\u4eff\u5199\u7b80\u5355\u7684\u9875\u9762\u5373\u53ef\u3002 \u5178\u578b\u7684 HTML \u5143\u7d20\u4e0e\u5c5e\u6027 \u00b6 HTML \u53ef\u4ee5\u6ee1\u8db3\u7edd\u5927\u591a\u6570\u6587\u672c\u6392\u7248\u9700\u6c42\u3002 1 2 3 4 5 < body > < p > HTML \u6587\u672c\u5177\u6709\u4e30\u5bcc\u7684\u683c\u5f0f\uff0c\u5982 < b > \u52a0\u7c97 </ b > \u3001 < i > \u659c\u4f53 </ i > \u3001 < del > \u5220\u9664 </ del > \u3002 </ p > < p > \u6807\u7b7e\u4e4b\u95f4\u53ef\u4ee5\u5d4c\u5957\uff0c < b > \u4ee5\u8868\u8fbe < i > \u66f4\u4e3a < del > \u82b1\u54e8 </ del > \u591a\u6837 </ i > \u7684\u683c\u5f0f </ b > \u3002 </ p > < p > \u4f60\u8fd8\u53ef\u4ee5\u5728 HTML \u6587\u672c\u4e2d\u63d2\u5165 < a href = \"https://www.baidu.com\" > \u94fe\u63a5 </ a > \u3002 </ p > </ body > \u4f60\u53ef\u4ee5\u70b9\u51fb \u94fe\u63a5 \u5728\u6d4f\u89c8\u5668\u4e2d\u9884\u89c8\u8fd9\u6bb5 HTML \u6587\u672c\u3002 \u5143\u7d20\u7684\u5c5e\u6027 \u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u5143\u7d20 <a> \u8f83\u4e3a\u7279\u6b8a\u3002\u4ece\u5f62\u5f0f\u4e0a\u770b\uff0c\u5b83\u591a\u51fa\u4e00\u4e2a href=\"...\" \uff0c\u7528\u6765\u63cf\u8ff0\u8be5\u94fe\u63a5\u7684\u76ee\u6807\u5730\u5740\u3002\u8fd9\u91cc\u7684 html \u79f0\u4e3a\u5143\u7d20 <a> \u7684\u5c5e\u6027\u3002 HTML \u53ef\u4ee5\u63cf\u8ff0\u6709\u5e8f\u548c\u65e0\u5e8f\u5217\u8868\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 < body > < p > \u8fd9\u662f HTML \u65e0\u5e8f\u5217\u8868\uff1a </ p > < ul > < li > \u7b2c\u4e00\u9879 </ li > < li > \u7b2c\u4e8c\u9879 </ li > < li > \u7b2c\u4e09\u9879 </ li > </ ul > < p > \u8fd9\u662f HTML \u6709\u5e8f\u5217\u8868\uff1a </ p > < ol > < li > \u7b2c\u4e00\u9879 </ li > < li > \u7b2c\u4e8c\u9879 </ li > < li > \u7b2c\u4e09\u9879 </ li > </ ol > </ body > \u4f60\u53ef\u4ee5\u70b9\u51fb \u94fe\u63a5 \u5728\u6d4f\u89c8\u5668\u4e2d\u9884\u89c8\u8fd9\u6bb5 HTML \u6587\u672c\u3002 \u4f60\u53ef\u4ee5\u5728 HTML \u6587\u672c\u4e2d\u6dfb\u52a0\u4e92\u8054\u7f51\u4e0a\u7684\u56fe\u7247\u3002 1 2 3 4 < body > < p > \u4f60\u4e5f\u53ef\u4ee5\u6dfb\u52a0\u56fe\u7247\u3002 </ p > < img src = \"\u66ff\u6362\u4e3a\u4f60\u7684\u56fe\u7247\u5730\u5740\" alt = \"Loading...\" /> </ body > \u4f60\u53ef\u4ee5\u70b9\u51fb \u94fe\u63a5 \u5728\u6d4f\u89c8\u5668\u4e2d\u9884\u89c8\u8fd9\u6bb5 HTML \u6587\u672c\u3002 \u4f60\u53ef\u4ee5\u5728 HTML \u6587\u672c\u4e2d\u63d2\u5165\u8868\u683c\u3002 1 2 3 4 5 6 7 8 9 10 11 12 < body > < table > < tr > < td > (1, 1) </ td > < td > (1, 2) </ td > </ tr > < tr > < td > (2, 1) </ td > < td > (2, 2) </ td > </ tr > </ table > </ body > \u4f60\u53ef\u4ee5\u70b9\u51fb \u94fe\u63a5 \u5728\u6d4f\u89c8\u5668\u4e2d\u9884\u89c8\u8fd9\u6bb5 HTML \u6587\u672c\u3002 \u9605\u8bfb\u5b66\u4e60\u4e86\u4e0a\u8ff0\u793a\u4f8b\u4ee3\u7801\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u603b\u7ed3\u4e00\u4e0b\u6211\u4eec\u6240\u5b66\u5230\u7684\u5178\u578b\u7684 HTML \u5143\u7d20\u4e0e\u5c5e\u6027\u3002 \u540d\u79f0 \u542b\u4e49 \u5c5e\u6027 <p> \u6bb5\u843d \u2014 <h1> \u4e00\u7ea7\u6807\u9898 \u2014 <h2> \u4e8c\u7ea7\u6807\u9898 \u2014 <div> \u5206\u7ec4 \u2014 <a> \u94fe\u63a5 href=\"\u94fe\u63a5\u76ee\u6807\" <img> \u56fe\u7247 src=\"\u56fe\u7247\u5730\u5740\" alt=\"\u5360\u4f4d\u6587\u672c\" <b> \u7c97\u4f53 \u2014 <i> \u659c\u4f53 \u2014 <br /> \u6bb5\u843d\u5185\u6362\u884c \u2014 <table> \u8868\u683c \u2014 <tr> \u8868\u683c\u884c \u2014 <td> \u8868\u683c\u5143\u7d20 \u2014 \u5f53\u7136\uff0c\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u6211\u4eec\u5f88\u53ef\u80fd\u7528\u5230\u66f4\u591a\u4e30\u5bcc\u591a\u6837\u7684 HTML \u5143\u7d20\u3002\u8fd9\u7bc7\u6587\u6863\u65e0\u610f\u4e8e\u7a77\u4e3e\u6240\u6709\u7684 HTML \u5143\u7d20\u3002\u5f53\u4f60\u9700\u8981\u67e5\u627e\u67d0\u4e2a\u7279\u5b9a\u7684 HTML \u5143\u7d20\u7684\u7528\u6cd5\u65f6\uff0c\u53ef\u4ee5\u501f\u52a9\u641c\u7d22\u5f15\u64ce\uff0c\u6216\u8005\u53c2\u89c1\u8fd9\u4efd\u6587\u6863\u6700\u540e\u5217\u51fa\u7684\u8d44\u6e90\u94fe\u63a5\u3002 \u540e\u7eed\u62d3\u5c55 \u00b6 \u73b0\u5728\uff0c\u4f60\u5df2\u7ecf\u5b66\u4f1a\u4e86\u57fa\u672c\u7684 HTML \u6587\u672c\u7684\u7f16\u5199\u3002\u5728 Web \u5f00\u53d1\u4e2d\uff0cHTML \u901a\u5e38\u7528\u4e8e\u63cf\u8ff0\u7f51\u9875\u7684\u5185\u5bb9\u3002\u81f3\u4e8e\u9875\u9762\u7684\u5e03\u5c40\u548c\u9875\u9762\u7684\u52a8\u6001\u884c\u4e3a\uff0c\u5219\u9700\u8981 CSS \u548c JavaScript \u7684\u8f85\u52a9\u3002 \u540e\u7eed\u53ef\u4ee5\u9605\u8bfb\u7684\u6587\u6863\u6709\uff1a CSS \u8bed\u8a00\u57fa\u7840 /languages/css JavaScript \u8bed\u8a00\u57fa\u7840 /languages/javascript \u8d44\u6e90\u94fe\u63a5 \u00b6 w3school HTML \u6559\u7a0b https://www.w3school.com.cn/html/index.asp \u83dc\u9e1f\u6559\u7a0b HTML \u6559\u7a0b https://www.runoob.com/html/html-tutorial.html","title":"HTML \u8bed\u8a00\u57fa\u7840"},{"location":"languages/html/#html","text":"","title":"HTML \u8bed\u8a00\u57fa\u7840"},{"location":"languages/html/#html_1","text":"HTML \u7684\u5168\u79f0\u4e3a H yper T ext M arkup L anguage\uff08\u8d85\u6587\u672c\u6807\u8bb0\u8bed\u8a00\uff09\uff0c\u662f\u4e00\u79cd\u7528\u4e8e\u63cf\u8ff0\u7f51\u9875\u7684\u6807\u8bb0\u8bed\u8a00\u3002\u4e92\u8054\u7f51\u4e0a\u4e94\u5f69\u7f24\u7eb7\u7684\u7f51\u9875\u5c31\u662f\u4f7f\u7528 HTML \u8fdb\u884c\u63cf\u8ff0\u7684\u3002 \u8fd9\u662f\u6700\u7b80\u5355\u7684 HTML \u6587\u672c\uff1a 1 2 3 4 5 < body > < h1 > \u8fd9\u662f\u6807\u9898 </ h1 > < p > \u8fd9\u662f\u6bb5\u843d\u3002\u548c\u6211\u4e00\u8d77\u8bfb\uff1a </ p > < p > \u4f60\u2014\u2014\u597d\u2014\u2014\u4e16\u2014\u2014\u754c\u2014\u2014 </ p > </ body > \u4f60\u53ef\u4ee5\u70b9\u51fb \u94fe\u63a5 \u5728\u6d4f\u89c8\u5668\u4e2d\u9884\u89c8\u8fd9\u6bb5 HTML \u6587\u672c\u3002 \u4e0d\u96be\u53d1\u73b0\uff0cHTML \u6587\u672c\u7531\u5c42\u7ea7\u7ed3\u6784\u7ec4\u6210\u3002\u6bcf\u4e00\u7ea7\u5185\u5bb9\u88ab\u4e00\u5bf9 HTML \u6807\u7b7e\u5305\u56f4\uff0c\u6784\u6210\u4e00\u4e2a HTML \u5143\u7d20 \u3002\u5143\u7d20\u4e4b\u95f4 \u53ef\u4ee5\u5d4c\u5957 \u3002 1 < \u6807\u7b7e > \u5185\u5bb9 </ \u6807\u7b7e > \u5728\u8fd9\u6bb5\u6700\u7b80\u5355\u7684 HTML \u6587\u672c\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u89c1\u5230\u4e86\u4e09\u79cd\u4e0d\u540c\u7684 HTML \u5143\u7d20\uff1a <body> \u5143\u7d20\u8868\u793a\u7f51\u9875\u7684\u4e3b\u4f53\u5185\u5bb9\uff0c\u7528\u6765\u5bb9\u7eb3\u7f51\u9875\u4e0a\u6240\u6709\u53ef\u89c1\u5143\u7d20\uff1b <h1> \u5143\u7d20\u8868\u793a\u4e00\u7ea7\u6807\u9898\uff1b <p> \u5143\u7d20\u8868\u793a\u6bb5\u843d\u3002 \u5f53\u7136\uff0c\u8fd9\u6bb5\u6700\u7b80\u5355\u7684 HTML \u6587\u672c\u5e76\u4e0d\u8db3\u4ee5\u63cf\u8ff0\u4e00\u4e2a\u5b8c\u6574\u7684\u7f51\u9875\u3002\u6211\u4eec\u6765\u770b\u4e0b\u9762\u7684\u793a\u4f8b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 <!DOCTYPE html> < html lang = \"zh\" > < head > < meta charset = \"utf-8\" > < title > HTML \u793a\u4f8b </ title > </ head > < body > < h1 > \u8fd9\u662f\u6807\u9898 </ h1 > < p > \u8fd9\u662f\u6bb5\u843d\u3002\u548c\u6211\u4e00\u8d77\u8bfb\uff1a </ p > < p > \u4f60\u2014\u2014\u597d\u2014\u2014\u4e16\u2014\u2014\u754c\u2014\u2014 </ p > </ body > </ html > \u4f60\u53ef\u4ee5\u5728\u81ea\u5df1\u7684\u7535\u8111\u4e0a\u65b0\u5efa\u4e00\u4e2a\u6587\u4ef6 index.html \uff0c\u5c06\u4e0a\u9762\u8fd9\u6bb5\u6587\u672c\u7c98\u8d34\u8fdb\u53bb\uff0c\u4fdd\u5b58\u540e\u4f7f\u7528\u6d4f\u89c8\u5668\u6253\u5f00 index.html \u3002 \u76f8\u6bd4\u4e8e\u6700\u7b80\u5355\u7684 HTML \u6587\u672c\uff0c\u8fd9\u6bb5\u5b8c\u6574\u7684 HTML \u7f51\u9875\u591a\u51fa\u4e86\u4ee5\u4e0b\u5143\u7d20\uff1a <!DOCTYPE html> \u7528\u4e8e\u8868\u793a\u8fd9\u662f\u4e00\u6bb5 HTML \u6587\u672c\uff1b <html> \u5143\u7d20\u662f\u4e00\u4e2a\u5b8c\u6574\u7684 HTML \u7f51\u9875\u7684\u6839\u5143\u7d20\uff1b <head> \u5143\u7d20\u7528\u6765\u5bb9\u7eb3\u8fd9\u4e2a\u5b8c\u6574\u7684 HTML \u7f51\u9875\u7684\u4e00\u4e9b\u5143\u4fe1\u606f\uff08meta information\uff09\uff1b <meta> \u5143\u7d20\u7528\u6765\u8868\u793a\u8fd9\u4e2a\u5b8c\u6574\u7684 HTML \u7f51\u9875\u7684\u5143\u4fe1\u606f\uff1b <title> \u5143\u7d20\u7528\u6765\u8868\u793a\u8fd9\u4e2a\u7f51\u9875\u7684\u6807\u9898\u3002 \u8fd9\u4e9b\u5143\u7d20\u770b\u8d77\u6765\u590d\u6742\uff0c\u4f46\u5b83\u4eec\u662f\u6bcf\u4e2a HTML \u7f51\u9875\u7684\u56fa\u5b9a\u7ec4\u6210\u90e8\u5206\u3002\u4f60\u53ef\u4ee5\u5c06\u5b83\u4eec\u89c6\u4e3a\u4e00\u5957\u56fa\u5b9a\u7684\u6846\u67b6\uff0c\u5f53\u4f60\u60f3\u8981\u4e66\u5199\u65b0\u7684 HTML \u9875\u9762\u65f6\uff0c\u53ea\u9700\u586b\u5199 <body> \u5143\u7d20\u7684\u5185\u5bb9\u5373\u53ef\u3002 \u5b66\u4f1a\u6a21\u4eff HTML \u5e76\u4e0d\u9700\u8981\u523b\u610f\u5b66\u4e60\u3002\u89c2\u5bdf\u793a\u4f8b\uff0c\u7406\u89e3 HTML \u7684\u7ed3\u6784\uff0c\u5177\u5907\u57fa\u672c\u7684\u9605\u8bfb\u80fd\u529b\uff0c\u80fd\u591f\u52a8\u624b\u9b54\u6539\u3001\u4eff\u5199\u7b80\u5355\u7684\u9875\u9762\u5373\u53ef\u3002","title":"\u521d\u59cb HTML"},{"location":"languages/html/#html_2","text":"HTML \u53ef\u4ee5\u6ee1\u8db3\u7edd\u5927\u591a\u6570\u6587\u672c\u6392\u7248\u9700\u6c42\u3002 1 2 3 4 5 < body > < p > HTML \u6587\u672c\u5177\u6709\u4e30\u5bcc\u7684\u683c\u5f0f\uff0c\u5982 < b > \u52a0\u7c97 </ b > \u3001 < i > \u659c\u4f53 </ i > \u3001 < del > \u5220\u9664 </ del > \u3002 </ p > < p > \u6807\u7b7e\u4e4b\u95f4\u53ef\u4ee5\u5d4c\u5957\uff0c < b > \u4ee5\u8868\u8fbe < i > \u66f4\u4e3a < del > \u82b1\u54e8 </ del > \u591a\u6837 </ i > \u7684\u683c\u5f0f </ b > \u3002 </ p > < p > \u4f60\u8fd8\u53ef\u4ee5\u5728 HTML \u6587\u672c\u4e2d\u63d2\u5165 < a href = \"https://www.baidu.com\" > \u94fe\u63a5 </ a > \u3002 </ p > </ body > \u4f60\u53ef\u4ee5\u70b9\u51fb \u94fe\u63a5 \u5728\u6d4f\u89c8\u5668\u4e2d\u9884\u89c8\u8fd9\u6bb5 HTML \u6587\u672c\u3002 \u5143\u7d20\u7684\u5c5e\u6027 \u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u5143\u7d20 <a> \u8f83\u4e3a\u7279\u6b8a\u3002\u4ece\u5f62\u5f0f\u4e0a\u770b\uff0c\u5b83\u591a\u51fa\u4e00\u4e2a href=\"...\" \uff0c\u7528\u6765\u63cf\u8ff0\u8be5\u94fe\u63a5\u7684\u76ee\u6807\u5730\u5740\u3002\u8fd9\u91cc\u7684 html \u79f0\u4e3a\u5143\u7d20 <a> \u7684\u5c5e\u6027\u3002 HTML \u53ef\u4ee5\u63cf\u8ff0\u6709\u5e8f\u548c\u65e0\u5e8f\u5217\u8868\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 < body > < p > \u8fd9\u662f HTML \u65e0\u5e8f\u5217\u8868\uff1a </ p > < ul > < li > \u7b2c\u4e00\u9879 </ li > < li > \u7b2c\u4e8c\u9879 </ li > < li > \u7b2c\u4e09\u9879 </ li > </ ul > < p > \u8fd9\u662f HTML \u6709\u5e8f\u5217\u8868\uff1a </ p > < ol > < li > \u7b2c\u4e00\u9879 </ li > < li > \u7b2c\u4e8c\u9879 </ li > < li > \u7b2c\u4e09\u9879 </ li > </ ol > </ body > \u4f60\u53ef\u4ee5\u70b9\u51fb \u94fe\u63a5 \u5728\u6d4f\u89c8\u5668\u4e2d\u9884\u89c8\u8fd9\u6bb5 HTML \u6587\u672c\u3002 \u4f60\u53ef\u4ee5\u5728 HTML \u6587\u672c\u4e2d\u6dfb\u52a0\u4e92\u8054\u7f51\u4e0a\u7684\u56fe\u7247\u3002 1 2 3 4 < body > < p > \u4f60\u4e5f\u53ef\u4ee5\u6dfb\u52a0\u56fe\u7247\u3002 </ p > < img src = \"\u66ff\u6362\u4e3a\u4f60\u7684\u56fe\u7247\u5730\u5740\" alt = \"Loading...\" /> </ body > \u4f60\u53ef\u4ee5\u70b9\u51fb \u94fe\u63a5 \u5728\u6d4f\u89c8\u5668\u4e2d\u9884\u89c8\u8fd9\u6bb5 HTML \u6587\u672c\u3002 \u4f60\u53ef\u4ee5\u5728 HTML \u6587\u672c\u4e2d\u63d2\u5165\u8868\u683c\u3002 1 2 3 4 5 6 7 8 9 10 11 12 < body > < table > < tr > < td > (1, 1) </ td > < td > (1, 2) </ td > </ tr > < tr > < td > (2, 1) </ td > < td > (2, 2) </ td > </ tr > </ table > </ body > \u4f60\u53ef\u4ee5\u70b9\u51fb \u94fe\u63a5 \u5728\u6d4f\u89c8\u5668\u4e2d\u9884\u89c8\u8fd9\u6bb5 HTML \u6587\u672c\u3002 \u9605\u8bfb\u5b66\u4e60\u4e86\u4e0a\u8ff0\u793a\u4f8b\u4ee3\u7801\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u603b\u7ed3\u4e00\u4e0b\u6211\u4eec\u6240\u5b66\u5230\u7684\u5178\u578b\u7684 HTML \u5143\u7d20\u4e0e\u5c5e\u6027\u3002 \u540d\u79f0 \u542b\u4e49 \u5c5e\u6027 <p> \u6bb5\u843d \u2014 <h1> \u4e00\u7ea7\u6807\u9898 \u2014 <h2> \u4e8c\u7ea7\u6807\u9898 \u2014 <div> \u5206\u7ec4 \u2014 <a> \u94fe\u63a5 href=\"\u94fe\u63a5\u76ee\u6807\" <img> \u56fe\u7247 src=\"\u56fe\u7247\u5730\u5740\" alt=\"\u5360\u4f4d\u6587\u672c\" <b> \u7c97\u4f53 \u2014 <i> \u659c\u4f53 \u2014 <br /> \u6bb5\u843d\u5185\u6362\u884c \u2014 <table> \u8868\u683c \u2014 <tr> \u8868\u683c\u884c \u2014 <td> \u8868\u683c\u5143\u7d20 \u2014 \u5f53\u7136\uff0c\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u6211\u4eec\u5f88\u53ef\u80fd\u7528\u5230\u66f4\u591a\u4e30\u5bcc\u591a\u6837\u7684 HTML \u5143\u7d20\u3002\u8fd9\u7bc7\u6587\u6863\u65e0\u610f\u4e8e\u7a77\u4e3e\u6240\u6709\u7684 HTML \u5143\u7d20\u3002\u5f53\u4f60\u9700\u8981\u67e5\u627e\u67d0\u4e2a\u7279\u5b9a\u7684 HTML \u5143\u7d20\u7684\u7528\u6cd5\u65f6\uff0c\u53ef\u4ee5\u501f\u52a9\u641c\u7d22\u5f15\u64ce\uff0c\u6216\u8005\u53c2\u89c1\u8fd9\u4efd\u6587\u6863\u6700\u540e\u5217\u51fa\u7684\u8d44\u6e90\u94fe\u63a5\u3002","title":"\u5178\u578b\u7684 HTML \u5143\u7d20\u4e0e\u5c5e\u6027"},{"location":"languages/html/#_1","text":"\u73b0\u5728\uff0c\u4f60\u5df2\u7ecf\u5b66\u4f1a\u4e86\u57fa\u672c\u7684 HTML \u6587\u672c\u7684\u7f16\u5199\u3002\u5728 Web \u5f00\u53d1\u4e2d\uff0cHTML \u901a\u5e38\u7528\u4e8e\u63cf\u8ff0\u7f51\u9875\u7684\u5185\u5bb9\u3002\u81f3\u4e8e\u9875\u9762\u7684\u5e03\u5c40\u548c\u9875\u9762\u7684\u52a8\u6001\u884c\u4e3a\uff0c\u5219\u9700\u8981 CSS \u548c JavaScript \u7684\u8f85\u52a9\u3002 \u540e\u7eed\u53ef\u4ee5\u9605\u8bfb\u7684\u6587\u6863\u6709\uff1a CSS \u8bed\u8a00\u57fa\u7840 /languages/css JavaScript \u8bed\u8a00\u57fa\u7840 /languages/javascript","title":"\u540e\u7eed\u62d3\u5c55"},{"location":"languages/html/#_2","text":"w3school HTML \u6559\u7a0b https://www.w3school.com.cn/html/index.asp \u83dc\u9e1f\u6559\u7a0b HTML \u6559\u7a0b https://www.runoob.com/html/html-tutorial.html","title":"\u8d44\u6e90\u94fe\u63a5"},{"location":"languages/modern-cpp/","text":"\u7f16\u8f91\u8005\u62db\u52df \u6211\u4eec\u6b63\u5728\u5bfb\u627e\u8fd9\u4e00\u7bc7\u6587\u6863\u7684\u7f16\u8f91\u8005\u3002","title":"\u73b0\u4ee3 C++ \u8bed\u8a00"},{"location":"languages/typescript/","text":"TypeScript \u8bed\u8a00\u57fa\u7840 \u00b6 \u524d\u7f6e\u77e5\u8bc6 \u00b6 \u5177\u6709 JavaScript \u8bed\u8a00\u57fa\u7840\uff0c\u80fd\u591f\u7f16\u5199\u7b80\u5355\u7684 JavaScript \u8bed\u8a00\u7a0b\u5e8f \u5177\u6709\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u57fa\u7840\uff0c\u80fd\u591f\u7406\u89e3\u7c7b\u5c01\u88c5\u548c\u65b9\u6cd5\u91cd\u5199\uff08\u8bed\u8a00\u6700\u597d\u662f C++\uff09 \u7b80\u5355\u7684\u7c7b\u578b\u6807\u6ce8 \u00b6 TypeScript \u6700\u5927\u7684\u7279\u70b9\u5c31\u662f\u5f15\u5165\u4e86\u7c7b\u578b\u7cfb\u7edf\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728\u7f16\u8bd1\u4e3a JavaScript \u4ee3\u7801\u4e4b\u524d\u7531\u7f16\u8bd1\u5668\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\u3002\u5728\u8fd9\u6837\u7684\u6761\u4ef6\u4e0b\uff0cTypeScript \u4e2d\u7684\u53d8\u91cf\u5728\u58f0\u660e\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u6307\u5b9a\u7c7b\u578b\uff0c\u7f16\u8bd1\u5668\u5728\u5c06 TypeScript \u4ee3\u7801\u7f16\u8bd1\u4e3a JavaScript \u4ee3\u7801\u7684\u65f6\u5019\u4f1a\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\uff0c\u82e5\u6709\u4e0d\u7b26\u5408\u7c7b\u578b\u58f0\u660e\u7684\u60c5\u51b5\u5219\u4f1a\u62a5\u9519\uff1a 1 2 3 4 5 const foo = ( name : string ) : void => { console . log ( \"Hello, \" + name ); } foo ( 2 ); // Error! \u7531\u4e8e TypeScript \u662f JavaScript \u7684\u8d85\u96c6\uff0c\u6240\u4ee5\u5176\u57fa\u7840\u53d8\u91cf\u7c7b\u578b\u4f9d\u7136\u548c JavaScript \u4e00\u81f4\u3002\u5e38\u7528\u7684\u57fa\u7840\u7c7b\u578b\u5305\u62ec\uff1a 1 2 3 let isDone : boolean = false ; let clickCnt : number = 6 ; let greeting : string = \"Hello!\" ; \u6570\u7ec4\u7c7b\u578b\u6309\u7167\u4e0b\u9762\u7684\u4ee3\u7801\u58f0\u660e\uff1a 1 let list : number [] = [ 1 , 2 , 3 , 4 , 5 ]; \u5bf9\u4e8e\u65e0\u6cd5\u660e\u786e\u786e\u5b9a\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u53ef\u4ee5\u58f0\u660e\u4e3a any \u7c7b\u578b\uff1a 1 2 let notSure : any = 1 ; notSure = \"Maybe it is a string\" ; // OK \u6ce8\u610f\u53ef\u80fd\u7684 any \u7c7b\u578b\u6ee5\u7528 any \u7c7b\u578b\u662f\u76ee\u524d TypeScript \u8bed\u8a00\u4e4b\u4e2d\u5177\u6709\u8f83\u5927\u4e89\u8bae\u7684\u4e00\u4e2a\u8bbe\u8ba1\uff0c\u56e0\u4e3a\u7406\u8bba\u4e0a\u6211\u4eec\u53ef\u4ee5\u5c06\u6240\u6709\u7684\u53d8\u91cf\u58f0\u660e\u4e3a any \u4ece\u800c\u7ed5\u8fc7\u7c7b\u578b\u68c0\u67e5\uff0c\u8fd9\u4e2a\u65f6\u5019 TypeScript \u5b9e\u9645\u4e0a\u9000\u5316\u4e3a JavaScript\u3002 \u4f46\u662f\u8003\u8651\u5230\u76ee\u524d Web \u524d\u7aef\u9879\u76ee\u4f1a\u5f15\u7528\u5927\u91cf\u7684\u7b2c\u4e09\u65b9\u5e93\uff0c\u5f00\u53d1\u8005\u5f88\u591a\u65f6\u5019\u65e0\u6cd5\u5b8c\u5168\u628a\u63e1\u67d0\u4e9b\u53d8\u91cf\u7684\u4fe1\u606f\uff0c\u6240\u4ee5 any \u7c7b\u578b\u662f\u5fc5\u8981\u7684\u3002\u4e0d\u8fc7\u6211\u4eec\u9700\u8981\u6ce8\u610f\u5176\u4f7f\u7528\uff0c\u5bf9\u4e8e\u80fd\u591f\u7ed9\u5b9a\u7c7b\u578b\u7684\u53d8\u91cf\u5219\u5c3d\u91cf\u4e0d\u6807\u8bb0\u4e3a any \u3002 \u9488\u5bf9\u8fd9\u4e00\u70b9\uff0c\u90e8\u5206\u4ee3\u7801\u68c0\u67e5\u5de5\u5177\u5df2\u7ecf\u5b9e\u88c5\u4e86\u68c0\u67e5\u201c\u53ef\u7591 any \u201d\u7684\u529f\u80fd\u3002 \u66f4\u4e3a\u590d\u6742\u7684\u7c7b\u578b\u53ef\u4ee5\u5305\u62ec\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 // Detailed object let obj : { name : string , age : number , address : string } = { name : \"qiubao\" , age : 57 , address : \"Tsinghua\" }; // Detailed array let arr : [ number , boolean ] = [ 1 , false ]; \u51fd\u6570\u7684\u53c2\u6570\u548c\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u6807\u6ce8\u5982\u4e0b\uff1a 1 2 3 function sum ( x : number , y : number ) : number { return x + y ; } \u53e6\u5916\uff0c\u5982\u679c\u4f60\u8ba4\u4e3a\u4f60\u5bf9\u67d0\u4e2a\u53d8\u91cf\u7684\u7c7b\u578b\u5df2\u7ecf\u505a\u4e86\u5145\u5206\u7684\u68c0\u67e5\uff0c\u8ba4\u4e3a\u4e0d\u9700\u8981\u7f16\u8bd1\u5668\u68c0\u67e5\u5176\u7c7b\u578b\uff0c\u5219\u53ef\u4ee5\u8fdb\u884c \u7c7b\u578b\u65ad\u8a00 \uff1a 1 2 let val : any = \"A string\" ; let stringLen : number = ( val as string ). length ; \u7b2c\u4e8c\u53e5\u7684\u542b\u4e49\u5c31\u662f\u65ad\u8a00 val \u53d8\u91cf\u4e00\u5b9a\u662f\u5b57\u7b26\u4e32\u3002 \u8054\u5408\u7c7b\u578b\u548c\u7c7b\u578b\u6536\u7a84 \u00b6 TyepScript \u652f\u6301\u5c06\u53d8\u91cf\u58f0\u660e\u4e3a\u82e5\u5e72\u4e2a\u7c7b\u578b\u4e4b\u4e2d\u7684\u4e00\u79cd\uff0c\u8fd9\u4e00\u822c\u79f0\u4e3a\u8054\u5408\u7c7b\u578b\uff08\u82f1\u8bed\uff1aUnion type\uff09\u3002\u58f0\u660e\u8054\u5408\u7c7b\u578b\u7684\u65f6\u5019\uff0c\u591a\u4e2a\u7c7b\u578b\u4e4b\u95f4\u4f7f\u7528 | \u9694\u5f00\uff1a 1 2 let union : number | string = 7 ; union = \"string\" ; // OK \u8054\u5408\u7c7b\u578b\u6700\u5e38\u7528\u7684\u5730\u65b9\u662f\u6807\u6ce8\u51fd\u6570\u53c2\u6570\uff0c\u8fd9\u6837\u5c31\u5141\u8bb8\u4e86\u51fd\u6570\u63a5\u53d7\u591a\u79cd\u7c7b\u578b\u7684\u53c2\u6570\uff1a 1 2 3 4 5 6 const addPrefix = ( x : number | string ) : void => { console . log ( \"Prefix \" + x ); }; addPrefix ( 1 ); // OK addPrefix ( \"String\" ); // OK \u4f46\u662f\u8981\u6ce8\u610f\uff0c\u5728\u8fd9\u79cd\u51fd\u6570\u4e4b\u4e2d\uff0c\u6211\u4eec\u76f4\u63a5\u8c03\u7528\u88ab\u58f0\u660e\u4e3a\u8054\u5408\u7c7b\u578b\u7684\u53d8\u91cf\u7684\u5c5e\u6027\u7684\u65f6\u5019\uff0c \u53ea\u80fd\u8c03\u7528\u8fd9\u4e9b\u7c7b\u578b\u6240\u5171\u6709\u7684\u5c5e\u6027 \u3002\u6bd4\u5982\u8bf4\uff1a 1 const foo = ( x : number | string ) => { let y : number = x . length ; }; // Error! \u539f\u56e0\u662f\u7f16\u8bd1\u5668\u5e76\u4e0d\u80fd\u6e05\u695a\u6b64\u5904\u7684\u53d8\u91cf\u7684\u5177\u4f53\u7c7b\u578b\u3002\u8fd9\u4e2a\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6cd5\u662f\u4f7f\u7528\u6761\u4ef6\u5206\u652f\u5c06\u8fd9\u4e9b\u7c7b\u578b\u5206\u79bb\u5f00\u6765\uff1a 1 2 3 4 5 6 7 const print = ( x : number | string ) : void => { if ( typeof x === \"string\" ) { console . log ( \"[string] \" + x ); return ; } // TAG }; \u7f16\u8bd1\u5668\u5b9e\u9645\u4e0a\u5c31\u5df2\u7ecf\u660e\u767d\u5728 if \u5206\u652f\u4e4b\u540e\u7684 // TAG \u90e8\u5206 x \u53ea\u6709\u53ef\u80fd\u662f number \u7c7b\u578b\uff0c\u4ece\u800c\u5c31\u53ef\u4ee5\u65ad\u5b9a\u5c5e\u6027\u8c03\u7528\u662f\u5426\u7b26\u5408\u7c7b\u578b\u6807\u6ce8\u3002\u8fd9\u88ab\u79f0\u4e3a\u7c7b\u578b\u6536\u7a84\uff08\u82f1\u8bed\uff1aType narrowing\uff09\u3002 \u8054\u5408\u7c7b\u578b\u5b9e\u73b0\u679a\u4e3e\u7c7b\u578b TypeScript \u7684\u7c7b\u578b\u7cfb\u7edf\u5b9e\u9645\u4e0a\u8fd8\u652f\u6301\u5982\u4e0b\u8fd9\u79cd\u7c7b\u578b\u6807\u6ce8\uff1a 1 2 3 let a : 1 ; a = 1 ; // OK a = 2 ; // Error! \u5176\u5141\u8bb8\u6211\u4eec\u5c06\u6570\u5b57\u6216\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u4f5c\u4e3a\u7c7b\u578b\u7684\u4e00\u79cd\uff0c\u8fd9\u79cd\u6027\u8d28\u548c\u8054\u5408\u7c7b\u578b\u4e00\u5e76\u4f7f\u7528\u7684\u6548\u679c\u5c31\u7c7b\u4f3c\u4e8e\u679a\u4e3e\uff1a 1 2 3 type TwoPowers = 1 | 2 | 4 | 8 | 16 ; let a : TwoPowers = 2 ; // OK let b : TwoPowers = 5 ; // Error! never \u7c7b\u578b\u4e0e\u8017\u5c3d\u68c0\u67e5 TypeScript \u8bed\u8a00\u652f\u6301\u4e00\u79cd\u7279\u6b8a\u7684\u7c7b\u578b\uff0c\u5373 never \u7c7b\u578b\u3002\u8fd9\u79cd\u7c7b\u578b\u5e38\u88ab\u7528\u4e8e\u6807\u6ce8\u51fd\u6570\u8fd4\u56de\u503c\uff0c\u4ee3\u8868\u8fd9\u4e2a\u51fd\u6570\u6c38\u8fdc\u4e0d\u4f1a\u7ec8\u7ed3\u6216\u8005\u4f1a\u629b\u51fa\u5f02\u5e38\uff1a 1 2 3 const neverEnd = () : never => { while ( true ) {} }; \u8fd9\u4e2a\u6027\u8d28\u5c31\u4f7f\u5f97 \u4efb\u4f55\u53d8\u91cf\u5747\u4e0d\u53ef\u80fd\u662f never \u7c7b\u578b \uff0c\u5229\u7528\u8fd9\u4e2a\u7279\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u68c0\u6d4b \u7a0b\u5e8f\u662f\u5426\u8003\u8651\u4e86\u6240\u6709\u7684\u60c5\u51b5 \uff0c\u8fd9\u88ab\u79f0\u4e3a\u8017\u5c3d\u68c0\u67e5\uff08\u82f1\u8bed\uff1aExhaustive check\uff09\u3002 \u4f8b\u5982\u6211\u4eec\u9700\u8981\u7f16\u5199\u51fd\u6570\u5904\u7406\u8054\u5408\u7c7b\u578b number | string | boolean \uff0c\u5176\u4ee3\u7801\u53ef\u80fd\u4e3a\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 type All = number | string | boolean ; const handle = ( x : All ) : void => { switch ( typeof x ) { case \"number\" : // DO SOMETHING break ; case \"string\" : // DO SOMETHING break ; case \"boolean\" : // DO SOMETHING break ; default : let exhaustiveCheck : never = x ; break ; } }; \u7406\u8bba\u4e0a default \u5206\u652f\u4e4b\u4e2d\u7684\u4ee3\u7801\u53ea\u8981\u6267\u884c\u5c31\u5fc5\u7136\u62a5\u9519\uff0c\u6240\u4ee5\u8bf4\u5982\u679c\u6240\u6709\u7684 case \u5206\u652f\u7a77\u5c3d\u4e86\u53ef\u80fd\u7684\u60c5\u51b5\uff0c\u5c31\u4e0d\u4f1a\u89e6\u53d1\u9519\u8bef\u3002\u800c\u5982\u679c\u67d0\u65e5 All \u7c7b\u578b\u6dfb\u52a0\u4e86\u65b0\u7684\u53ef\u80fd\u7c7b\u578b\uff1a 1 type All = number | string | boolean | Foo ; \u90a3\u4e48 handle \u51fd\u6570\u5c31\u6709\u53ef\u80fd\u56e0\u4e3a\u6ca1\u6709\u8017\u5c3d\u6240\u6709\u53ef\u80fd\u800c\u62a5\u9519\uff0c\u63d0\u9192\u5f00\u53d1\u8005\u9700\u8981\u66f4\u65b0\u8fd9\u4e2a\u51fd\u6570\u3002\u8fd9\u79cd\u5904\u7406\u65b9\u5f0f\u7c7b\u4f3c\u4e8e C++ \u7a0b\u5e8f\u5728\u4e0d\u53ef\u80fd\u7684\u5206\u652f\u4e0a\u52a0\u5165 assert(false) \u8fdb\u884c\u68c0\u6d4b\u3002 \u7c7b\u4e0e\u63a5\u53e3 \u00b6 TypeScript \u8bed\u8a00\u4e4b\u4e2d\u7684\u7c7b\u7c7b\u4f3c\u4e8e ES6 \u6807\u51c6\u4e2d JavaScript \u8bed\u8a00\u4e4b\u4e2d\u7684\u7c7b\uff0c\u6545\u6b64\u5904\u4ec5\u7ed9\u51fa\u6837\u4f8b\u7a0b\u5e8f\u800c\u4e0d\u8fdb\u884c\u8be6\u7ec6\u8bb2\u89e3\u3002\u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cTypeScript \u8bed\u8a00\u4e4b\u4e2d\u7684\u7c7b\u5141\u8bb8\u58f0\u660e\u7c7b\u6210\u5458\u548c\u65b9\u6cd5\u7684\u8bbf\u95ee\u6743\u9650\u3002\u8fd9\u91cc\u7ed9\u51fa\u4e00\u4e2a\u7b80\u5355\u7684\u590d\u6570\u7c7b\u7684\u4ee3\u7801\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u7c7b\u6210\u5458\u58f0\u660e\u3001\u7c7b\u65b9\u6cd5\u7f16\u5199\u3001\u6784\u9020\u51fd\u6570\u7b49\u57fa\u7840\u5185\u5bb9\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 class Complex { private real : number ; private imaginary : number ; constructor ( _real : number , _imaginary : number ) { this . real = _real ; this . imaginary = _imaginary ; } public print () : void { console . log ( ` ${ this . real } ${ this . imaginary >= 0 ? \"+\" : \"-\" } ${ Math . abs ( this . imaginary ) } i` ); } } let z : Complex = new Complex ( 2 , 3 ); z . print (); \u7c7b\u7ee7\u627f\u4f7f\u7528\u5173\u952e\u5b57 extends \uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\u5b50\u7c7b\u7684\u6784\u9020\u51fd\u6570 \u5fc5\u987b \u624b\u52a8\u4f7f\u7528 super \u8c03\u7528\u7236\u7c7b\u6784\u9020\u51fd\u6570\uff08\u5426\u5219\u65e0\u6cd5\u4f7f\u7528 this \u53d8\u91cf\uff09\uff0c\u5bf9\u4e8e\u5df2\u7ecf\u88ab\u91cd\u5199\u7684\u7236\u7c7b\u65b9\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 super \u5173\u952e\u5b57\u8c03\u7528\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 class Animal { private name : string ; constructor ( _name : string ) { this . name = _name ; } public move () : void { console . log ( \"Animal moves\" ); } } class Cat extends Animal { private furColor : string ; constructor ( _name : string , _color : string ) { super ( _name ); // Must call super() here! this . furColor = _color ; } public move () : void { console . log ( \"Cat runs\" ); } public baseMove () : void { super . move (); } } let tom : Cat = new Cat ( \"tom\" , \"blue\" ); tom . move (); tom . baseMove (); \u62bd\u8c61\u7c7b\u4f9d\u7136\u662f\u5b58\u5728\u7684\uff0c\u4f46\u5728\u5b9e\u9645\u5de5\u7a0b\u4e2d\u66f4\u5e38\u7528\u7684\u662f \u63a5\u53e3 \u3002\u56e0\u4e3a\u62bd\u8c61\u7c7b\u5b9e\u9645\u4e0a\u89c4\u5b9a\u4e86\u4e00\u4e2a\u5bf9\u8c61\u5e94\u5f53\u5177\u6709\u7684\u6210\u5458\u548c\u5bf9\u5916\u5f00\u653e\u7684\u63a5\u53e3\u683c\u5f0f\u3002 \u62bd\u8c61\u7c7b\u548c\u63a5\u53e3 \u6211\u4eec\u56de\u60f3\u5728 C++ \u8bed\u8a00\u4e4b\u4e2d\u7684\u62bd\u8c61\u7c7b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 class Base { protected : int val ; public : virtual void print () = 0 ; }; class Derive : public Base { public : virtual void print () override { std :: cout << this -> val << std :: endl ; } }; \u4e8b\u5b9e\u4e0a\uff0c Base \u7c7b\u7684\u4f5c\u7528\u5c31\u662f \u7ea6\u675f\u5b50\u7c7b\u5fc5\u987b\u5177\u6709 val \u6210\u5458 \u548c \u7ea6\u675f\u5b50\u7c7b\u5fc5\u987b\u91cd\u5199 print \u865a\u65b9\u6cd5 \uff0c\u524d\u8005\u89c4\u5b9a\u4e86\u5b50\u7c7b\u5fc5\u987b\u5177\u6709\u7684\u6210\u5458\uff0c\u540e\u8005\u89c4\u5b9a\u4e86\u5b50\u7c7b\u9700\u8981\u8bbe\u8ba1\u7684\u63a5\u53e3\u683c\u5f0f\uff08\u63a5\u53e3\u53c2\u6570\u5217\u8868\u548c\u8fd4\u56de\u503c\u7c7b\u578b\uff09\u3002\u4e5f\u5c31\u662f\u8bf4\u4e00\u4e2a\u62bd\u8c61\u7236\u7c7b\u7684\u4f5c\u7528\u662f\u7ea6\u675f\u5b50\u7c7b\u5e94\u5f53\u5177\u6709\u7684\u6210\u5458\u548c\u5bf9\u5916\u5f00\u653e\u7684\u63a5\u53e3\u683c\u5f0f\u3002\u5728\u8fd9\u4e2a\u610f\u4e49\u4e0a\uff0c\u62bd\u8c61\u7c7b\u548c\u63a5\u53e3\u662f\u4e00\u81f4\u7684\u3002 TypeScript \u8bed\u8a00\u4e4b\u4e2d\u63a5\u53e3\u7684\u5b9a\u4e49\u4e3a\uff1a 1 interface Point { x : number ; y : number ; print : () => void ; } \u4e4b\u540e\u4e00\u4e2a\u7c7b\u53ef\u4ee5\u53bb\u5b9e\u73b0\u8fd9\u4e2a\u63a5\u53e3\uff0c\u8fd9\u4e2a\u65f6\u5019\u8fd9\u4e2a\u7c7b\u5c31\u5fc5\u987b\u5177\u6709\u63a5\u53e3\u7684\u6210\u5458\u5e76\u5b9e\u73b0\u63a5\u53e3\u7684\u65b9\u6cd5\uff1a 1 2 3 4 5 6 7 8 class Point3D implements Point { x : number ; y : number ; z : number ; ... print () : void { console . log ( `( ${ this . x } , ${ this . y } , ${ this . z } )` ); } ... } \u63a5\u53e3\u652f\u6301 \u53ef\u9009\u53c2\u6570 \u548c \u53ea\u8bfb\u53c2\u6570 \u3002\u53ef\u9009\u53c2\u6570\u4ee3\u8868\u8be5\u53c2\u6570\u53ef\u5177\u6709\u53ef\u4e0d\u5177\u6709\uff1a 1 2 interface Point { x : number ; y : number ; z? : number ; } let twoDimensionPoint : Point = { x : 1 , y : 2 }; // OK \u53ea\u8bfb\u53c2\u6570\u4ee3\u8868\u8be5\u53c2\u6570\u53ea\u53ef\u8bfb\u53d6\u4e0d\u53ef\u4fee\u6539\uff1a 1 2 3 interface User { name : string ; readonly password : string ; } let holder : User = { name : \"holder\" , password : \"111111\" }; holder . password = \"222222\" ; // Error! \u540e\u7eed\u62d3\u5c55 \u00b6 TypeScript \u4f5c\u4e3a\u76ee\u524d\u8f83\u4e3a\u70ed\u95e8\u7684 JavaScript \u8bed\u8a00\u201c\u8865\u4e01\u201d\uff0c\u53ef\u4ee5\u88ab\u5e7f\u6cdb\u5e94\u7528\u4e8e\u5404\u79cd Web \u524d\u7aef\u6846\u67b6\u6216\u8005\u79fb\u52a8\u7aef\u6846\u67b6\u3002\u76ee\u524d\u7c7b\u4f3c React\u3001React Native\u3001Vue \u7b49\u5e38\u7528\u524d\u7aef\u6846\u67b6\u5747\u63d0\u4f9b\u4e86 TypeScript \u8bed\u8a00\u652f\u6301\u3002 \u53ef\u4ee5\u5e94\u7528 TypeScript \u8bed\u8a00\u76f8\u5173\u77e5\u8bc6\u7684\u8bfe\u7a0b\uff1a \u8f6f\u4ef6\u5de5\u7a0b \u8d44\u6e90\u94fe\u63a5 \u00b6 TypeScript \u8bed\u8a00\u5b98\u65b9\u6587\u6863 https://www.tslang.cn/docs/home.html","title":"TypeScript \u8bed\u8a00\u57fa\u7840"},{"location":"languages/typescript/#typescript","text":"","title":"TypeScript \u8bed\u8a00\u57fa\u7840"},{"location":"languages/typescript/#_1","text":"\u5177\u6709 JavaScript \u8bed\u8a00\u57fa\u7840\uff0c\u80fd\u591f\u7f16\u5199\u7b80\u5355\u7684 JavaScript \u8bed\u8a00\u7a0b\u5e8f \u5177\u6709\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u57fa\u7840\uff0c\u80fd\u591f\u7406\u89e3\u7c7b\u5c01\u88c5\u548c\u65b9\u6cd5\u91cd\u5199\uff08\u8bed\u8a00\u6700\u597d\u662f C++\uff09","title":"\u524d\u7f6e\u77e5\u8bc6"},{"location":"languages/typescript/#_2","text":"TypeScript \u6700\u5927\u7684\u7279\u70b9\u5c31\u662f\u5f15\u5165\u4e86\u7c7b\u578b\u7cfb\u7edf\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728\u7f16\u8bd1\u4e3a JavaScript \u4ee3\u7801\u4e4b\u524d\u7531\u7f16\u8bd1\u5668\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\u3002\u5728\u8fd9\u6837\u7684\u6761\u4ef6\u4e0b\uff0cTypeScript \u4e2d\u7684\u53d8\u91cf\u5728\u58f0\u660e\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u6307\u5b9a\u7c7b\u578b\uff0c\u7f16\u8bd1\u5668\u5728\u5c06 TypeScript \u4ee3\u7801\u7f16\u8bd1\u4e3a JavaScript \u4ee3\u7801\u7684\u65f6\u5019\u4f1a\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\uff0c\u82e5\u6709\u4e0d\u7b26\u5408\u7c7b\u578b\u58f0\u660e\u7684\u60c5\u51b5\u5219\u4f1a\u62a5\u9519\uff1a 1 2 3 4 5 const foo = ( name : string ) : void => { console . log ( \"Hello, \" + name ); } foo ( 2 ); // Error! \u7531\u4e8e TypeScript \u662f JavaScript \u7684\u8d85\u96c6\uff0c\u6240\u4ee5\u5176\u57fa\u7840\u53d8\u91cf\u7c7b\u578b\u4f9d\u7136\u548c JavaScript \u4e00\u81f4\u3002\u5e38\u7528\u7684\u57fa\u7840\u7c7b\u578b\u5305\u62ec\uff1a 1 2 3 let isDone : boolean = false ; let clickCnt : number = 6 ; let greeting : string = \"Hello!\" ; \u6570\u7ec4\u7c7b\u578b\u6309\u7167\u4e0b\u9762\u7684\u4ee3\u7801\u58f0\u660e\uff1a 1 let list : number [] = [ 1 , 2 , 3 , 4 , 5 ]; \u5bf9\u4e8e\u65e0\u6cd5\u660e\u786e\u786e\u5b9a\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u53ef\u4ee5\u58f0\u660e\u4e3a any \u7c7b\u578b\uff1a 1 2 let notSure : any = 1 ; notSure = \"Maybe it is a string\" ; // OK \u6ce8\u610f\u53ef\u80fd\u7684 any \u7c7b\u578b\u6ee5\u7528 any \u7c7b\u578b\u662f\u76ee\u524d TypeScript \u8bed\u8a00\u4e4b\u4e2d\u5177\u6709\u8f83\u5927\u4e89\u8bae\u7684\u4e00\u4e2a\u8bbe\u8ba1\uff0c\u56e0\u4e3a\u7406\u8bba\u4e0a\u6211\u4eec\u53ef\u4ee5\u5c06\u6240\u6709\u7684\u53d8\u91cf\u58f0\u660e\u4e3a any \u4ece\u800c\u7ed5\u8fc7\u7c7b\u578b\u68c0\u67e5\uff0c\u8fd9\u4e2a\u65f6\u5019 TypeScript \u5b9e\u9645\u4e0a\u9000\u5316\u4e3a JavaScript\u3002 \u4f46\u662f\u8003\u8651\u5230\u76ee\u524d Web \u524d\u7aef\u9879\u76ee\u4f1a\u5f15\u7528\u5927\u91cf\u7684\u7b2c\u4e09\u65b9\u5e93\uff0c\u5f00\u53d1\u8005\u5f88\u591a\u65f6\u5019\u65e0\u6cd5\u5b8c\u5168\u628a\u63e1\u67d0\u4e9b\u53d8\u91cf\u7684\u4fe1\u606f\uff0c\u6240\u4ee5 any \u7c7b\u578b\u662f\u5fc5\u8981\u7684\u3002\u4e0d\u8fc7\u6211\u4eec\u9700\u8981\u6ce8\u610f\u5176\u4f7f\u7528\uff0c\u5bf9\u4e8e\u80fd\u591f\u7ed9\u5b9a\u7c7b\u578b\u7684\u53d8\u91cf\u5219\u5c3d\u91cf\u4e0d\u6807\u8bb0\u4e3a any \u3002 \u9488\u5bf9\u8fd9\u4e00\u70b9\uff0c\u90e8\u5206\u4ee3\u7801\u68c0\u67e5\u5de5\u5177\u5df2\u7ecf\u5b9e\u88c5\u4e86\u68c0\u67e5\u201c\u53ef\u7591 any \u201d\u7684\u529f\u80fd\u3002 \u66f4\u4e3a\u590d\u6742\u7684\u7c7b\u578b\u53ef\u4ee5\u5305\u62ec\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 // Detailed object let obj : { name : string , age : number , address : string } = { name : \"qiubao\" , age : 57 , address : \"Tsinghua\" }; // Detailed array let arr : [ number , boolean ] = [ 1 , false ]; \u51fd\u6570\u7684\u53c2\u6570\u548c\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u6807\u6ce8\u5982\u4e0b\uff1a 1 2 3 function sum ( x : number , y : number ) : number { return x + y ; } \u53e6\u5916\uff0c\u5982\u679c\u4f60\u8ba4\u4e3a\u4f60\u5bf9\u67d0\u4e2a\u53d8\u91cf\u7684\u7c7b\u578b\u5df2\u7ecf\u505a\u4e86\u5145\u5206\u7684\u68c0\u67e5\uff0c\u8ba4\u4e3a\u4e0d\u9700\u8981\u7f16\u8bd1\u5668\u68c0\u67e5\u5176\u7c7b\u578b\uff0c\u5219\u53ef\u4ee5\u8fdb\u884c \u7c7b\u578b\u65ad\u8a00 \uff1a 1 2 let val : any = \"A string\" ; let stringLen : number = ( val as string ). length ; \u7b2c\u4e8c\u53e5\u7684\u542b\u4e49\u5c31\u662f\u65ad\u8a00 val \u53d8\u91cf\u4e00\u5b9a\u662f\u5b57\u7b26\u4e32\u3002","title":"\u7b80\u5355\u7684\u7c7b\u578b\u6807\u6ce8"},{"location":"languages/typescript/#_3","text":"TyepScript \u652f\u6301\u5c06\u53d8\u91cf\u58f0\u660e\u4e3a\u82e5\u5e72\u4e2a\u7c7b\u578b\u4e4b\u4e2d\u7684\u4e00\u79cd\uff0c\u8fd9\u4e00\u822c\u79f0\u4e3a\u8054\u5408\u7c7b\u578b\uff08\u82f1\u8bed\uff1aUnion type\uff09\u3002\u58f0\u660e\u8054\u5408\u7c7b\u578b\u7684\u65f6\u5019\uff0c\u591a\u4e2a\u7c7b\u578b\u4e4b\u95f4\u4f7f\u7528 | \u9694\u5f00\uff1a 1 2 let union : number | string = 7 ; union = \"string\" ; // OK \u8054\u5408\u7c7b\u578b\u6700\u5e38\u7528\u7684\u5730\u65b9\u662f\u6807\u6ce8\u51fd\u6570\u53c2\u6570\uff0c\u8fd9\u6837\u5c31\u5141\u8bb8\u4e86\u51fd\u6570\u63a5\u53d7\u591a\u79cd\u7c7b\u578b\u7684\u53c2\u6570\uff1a 1 2 3 4 5 6 const addPrefix = ( x : number | string ) : void => { console . log ( \"Prefix \" + x ); }; addPrefix ( 1 ); // OK addPrefix ( \"String\" ); // OK \u4f46\u662f\u8981\u6ce8\u610f\uff0c\u5728\u8fd9\u79cd\u51fd\u6570\u4e4b\u4e2d\uff0c\u6211\u4eec\u76f4\u63a5\u8c03\u7528\u88ab\u58f0\u660e\u4e3a\u8054\u5408\u7c7b\u578b\u7684\u53d8\u91cf\u7684\u5c5e\u6027\u7684\u65f6\u5019\uff0c \u53ea\u80fd\u8c03\u7528\u8fd9\u4e9b\u7c7b\u578b\u6240\u5171\u6709\u7684\u5c5e\u6027 \u3002\u6bd4\u5982\u8bf4\uff1a 1 const foo = ( x : number | string ) => { let y : number = x . length ; }; // Error! \u539f\u56e0\u662f\u7f16\u8bd1\u5668\u5e76\u4e0d\u80fd\u6e05\u695a\u6b64\u5904\u7684\u53d8\u91cf\u7684\u5177\u4f53\u7c7b\u578b\u3002\u8fd9\u4e2a\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6cd5\u662f\u4f7f\u7528\u6761\u4ef6\u5206\u652f\u5c06\u8fd9\u4e9b\u7c7b\u578b\u5206\u79bb\u5f00\u6765\uff1a 1 2 3 4 5 6 7 const print = ( x : number | string ) : void => { if ( typeof x === \"string\" ) { console . log ( \"[string] \" + x ); return ; } // TAG }; \u7f16\u8bd1\u5668\u5b9e\u9645\u4e0a\u5c31\u5df2\u7ecf\u660e\u767d\u5728 if \u5206\u652f\u4e4b\u540e\u7684 // TAG \u90e8\u5206 x \u53ea\u6709\u53ef\u80fd\u662f number \u7c7b\u578b\uff0c\u4ece\u800c\u5c31\u53ef\u4ee5\u65ad\u5b9a\u5c5e\u6027\u8c03\u7528\u662f\u5426\u7b26\u5408\u7c7b\u578b\u6807\u6ce8\u3002\u8fd9\u88ab\u79f0\u4e3a\u7c7b\u578b\u6536\u7a84\uff08\u82f1\u8bed\uff1aType narrowing\uff09\u3002 \u8054\u5408\u7c7b\u578b\u5b9e\u73b0\u679a\u4e3e\u7c7b\u578b TypeScript \u7684\u7c7b\u578b\u7cfb\u7edf\u5b9e\u9645\u4e0a\u8fd8\u652f\u6301\u5982\u4e0b\u8fd9\u79cd\u7c7b\u578b\u6807\u6ce8\uff1a 1 2 3 let a : 1 ; a = 1 ; // OK a = 2 ; // Error! \u5176\u5141\u8bb8\u6211\u4eec\u5c06\u6570\u5b57\u6216\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u4f5c\u4e3a\u7c7b\u578b\u7684\u4e00\u79cd\uff0c\u8fd9\u79cd\u6027\u8d28\u548c\u8054\u5408\u7c7b\u578b\u4e00\u5e76\u4f7f\u7528\u7684\u6548\u679c\u5c31\u7c7b\u4f3c\u4e8e\u679a\u4e3e\uff1a 1 2 3 type TwoPowers = 1 | 2 | 4 | 8 | 16 ; let a : TwoPowers = 2 ; // OK let b : TwoPowers = 5 ; // Error! never \u7c7b\u578b\u4e0e\u8017\u5c3d\u68c0\u67e5 TypeScript \u8bed\u8a00\u652f\u6301\u4e00\u79cd\u7279\u6b8a\u7684\u7c7b\u578b\uff0c\u5373 never \u7c7b\u578b\u3002\u8fd9\u79cd\u7c7b\u578b\u5e38\u88ab\u7528\u4e8e\u6807\u6ce8\u51fd\u6570\u8fd4\u56de\u503c\uff0c\u4ee3\u8868\u8fd9\u4e2a\u51fd\u6570\u6c38\u8fdc\u4e0d\u4f1a\u7ec8\u7ed3\u6216\u8005\u4f1a\u629b\u51fa\u5f02\u5e38\uff1a 1 2 3 const neverEnd = () : never => { while ( true ) {} }; \u8fd9\u4e2a\u6027\u8d28\u5c31\u4f7f\u5f97 \u4efb\u4f55\u53d8\u91cf\u5747\u4e0d\u53ef\u80fd\u662f never \u7c7b\u578b \uff0c\u5229\u7528\u8fd9\u4e2a\u7279\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u68c0\u6d4b \u7a0b\u5e8f\u662f\u5426\u8003\u8651\u4e86\u6240\u6709\u7684\u60c5\u51b5 \uff0c\u8fd9\u88ab\u79f0\u4e3a\u8017\u5c3d\u68c0\u67e5\uff08\u82f1\u8bed\uff1aExhaustive check\uff09\u3002 \u4f8b\u5982\u6211\u4eec\u9700\u8981\u7f16\u5199\u51fd\u6570\u5904\u7406\u8054\u5408\u7c7b\u578b number | string | boolean \uff0c\u5176\u4ee3\u7801\u53ef\u80fd\u4e3a\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 type All = number | string | boolean ; const handle = ( x : All ) : void => { switch ( typeof x ) { case \"number\" : // DO SOMETHING break ; case \"string\" : // DO SOMETHING break ; case \"boolean\" : // DO SOMETHING break ; default : let exhaustiveCheck : never = x ; break ; } }; \u7406\u8bba\u4e0a default \u5206\u652f\u4e4b\u4e2d\u7684\u4ee3\u7801\u53ea\u8981\u6267\u884c\u5c31\u5fc5\u7136\u62a5\u9519\uff0c\u6240\u4ee5\u8bf4\u5982\u679c\u6240\u6709\u7684 case \u5206\u652f\u7a77\u5c3d\u4e86\u53ef\u80fd\u7684\u60c5\u51b5\uff0c\u5c31\u4e0d\u4f1a\u89e6\u53d1\u9519\u8bef\u3002\u800c\u5982\u679c\u67d0\u65e5 All \u7c7b\u578b\u6dfb\u52a0\u4e86\u65b0\u7684\u53ef\u80fd\u7c7b\u578b\uff1a 1 type All = number | string | boolean | Foo ; \u90a3\u4e48 handle \u51fd\u6570\u5c31\u6709\u53ef\u80fd\u56e0\u4e3a\u6ca1\u6709\u8017\u5c3d\u6240\u6709\u53ef\u80fd\u800c\u62a5\u9519\uff0c\u63d0\u9192\u5f00\u53d1\u8005\u9700\u8981\u66f4\u65b0\u8fd9\u4e2a\u51fd\u6570\u3002\u8fd9\u79cd\u5904\u7406\u65b9\u5f0f\u7c7b\u4f3c\u4e8e C++ \u7a0b\u5e8f\u5728\u4e0d\u53ef\u80fd\u7684\u5206\u652f\u4e0a\u52a0\u5165 assert(false) \u8fdb\u884c\u68c0\u6d4b\u3002","title":"\u8054\u5408\u7c7b\u578b\u548c\u7c7b\u578b\u6536\u7a84"},{"location":"languages/typescript/#_4","text":"TypeScript \u8bed\u8a00\u4e4b\u4e2d\u7684\u7c7b\u7c7b\u4f3c\u4e8e ES6 \u6807\u51c6\u4e2d JavaScript \u8bed\u8a00\u4e4b\u4e2d\u7684\u7c7b\uff0c\u6545\u6b64\u5904\u4ec5\u7ed9\u51fa\u6837\u4f8b\u7a0b\u5e8f\u800c\u4e0d\u8fdb\u884c\u8be6\u7ec6\u8bb2\u89e3\u3002\u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cTypeScript \u8bed\u8a00\u4e4b\u4e2d\u7684\u7c7b\u5141\u8bb8\u58f0\u660e\u7c7b\u6210\u5458\u548c\u65b9\u6cd5\u7684\u8bbf\u95ee\u6743\u9650\u3002\u8fd9\u91cc\u7ed9\u51fa\u4e00\u4e2a\u7b80\u5355\u7684\u590d\u6570\u7c7b\u7684\u4ee3\u7801\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u7c7b\u6210\u5458\u58f0\u660e\u3001\u7c7b\u65b9\u6cd5\u7f16\u5199\u3001\u6784\u9020\u51fd\u6570\u7b49\u57fa\u7840\u5185\u5bb9\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 class Complex { private real : number ; private imaginary : number ; constructor ( _real : number , _imaginary : number ) { this . real = _real ; this . imaginary = _imaginary ; } public print () : void { console . log ( ` ${ this . real } ${ this . imaginary >= 0 ? \"+\" : \"-\" } ${ Math . abs ( this . imaginary ) } i` ); } } let z : Complex = new Complex ( 2 , 3 ); z . print (); \u7c7b\u7ee7\u627f\u4f7f\u7528\u5173\u952e\u5b57 extends \uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\u5b50\u7c7b\u7684\u6784\u9020\u51fd\u6570 \u5fc5\u987b \u624b\u52a8\u4f7f\u7528 super \u8c03\u7528\u7236\u7c7b\u6784\u9020\u51fd\u6570\uff08\u5426\u5219\u65e0\u6cd5\u4f7f\u7528 this \u53d8\u91cf\uff09\uff0c\u5bf9\u4e8e\u5df2\u7ecf\u88ab\u91cd\u5199\u7684\u7236\u7c7b\u65b9\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 super \u5173\u952e\u5b57\u8c03\u7528\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 class Animal { private name : string ; constructor ( _name : string ) { this . name = _name ; } public move () : void { console . log ( \"Animal moves\" ); } } class Cat extends Animal { private furColor : string ; constructor ( _name : string , _color : string ) { super ( _name ); // Must call super() here! this . furColor = _color ; } public move () : void { console . log ( \"Cat runs\" ); } public baseMove () : void { super . move (); } } let tom : Cat = new Cat ( \"tom\" , \"blue\" ); tom . move (); tom . baseMove (); \u62bd\u8c61\u7c7b\u4f9d\u7136\u662f\u5b58\u5728\u7684\uff0c\u4f46\u5728\u5b9e\u9645\u5de5\u7a0b\u4e2d\u66f4\u5e38\u7528\u7684\u662f \u63a5\u53e3 \u3002\u56e0\u4e3a\u62bd\u8c61\u7c7b\u5b9e\u9645\u4e0a\u89c4\u5b9a\u4e86\u4e00\u4e2a\u5bf9\u8c61\u5e94\u5f53\u5177\u6709\u7684\u6210\u5458\u548c\u5bf9\u5916\u5f00\u653e\u7684\u63a5\u53e3\u683c\u5f0f\u3002 \u62bd\u8c61\u7c7b\u548c\u63a5\u53e3 \u6211\u4eec\u56de\u60f3\u5728 C++ \u8bed\u8a00\u4e4b\u4e2d\u7684\u62bd\u8c61\u7c7b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 class Base { protected : int val ; public : virtual void print () = 0 ; }; class Derive : public Base { public : virtual void print () override { std :: cout << this -> val << std :: endl ; } }; \u4e8b\u5b9e\u4e0a\uff0c Base \u7c7b\u7684\u4f5c\u7528\u5c31\u662f \u7ea6\u675f\u5b50\u7c7b\u5fc5\u987b\u5177\u6709 val \u6210\u5458 \u548c \u7ea6\u675f\u5b50\u7c7b\u5fc5\u987b\u91cd\u5199 print \u865a\u65b9\u6cd5 \uff0c\u524d\u8005\u89c4\u5b9a\u4e86\u5b50\u7c7b\u5fc5\u987b\u5177\u6709\u7684\u6210\u5458\uff0c\u540e\u8005\u89c4\u5b9a\u4e86\u5b50\u7c7b\u9700\u8981\u8bbe\u8ba1\u7684\u63a5\u53e3\u683c\u5f0f\uff08\u63a5\u53e3\u53c2\u6570\u5217\u8868\u548c\u8fd4\u56de\u503c\u7c7b\u578b\uff09\u3002\u4e5f\u5c31\u662f\u8bf4\u4e00\u4e2a\u62bd\u8c61\u7236\u7c7b\u7684\u4f5c\u7528\u662f\u7ea6\u675f\u5b50\u7c7b\u5e94\u5f53\u5177\u6709\u7684\u6210\u5458\u548c\u5bf9\u5916\u5f00\u653e\u7684\u63a5\u53e3\u683c\u5f0f\u3002\u5728\u8fd9\u4e2a\u610f\u4e49\u4e0a\uff0c\u62bd\u8c61\u7c7b\u548c\u63a5\u53e3\u662f\u4e00\u81f4\u7684\u3002 TypeScript \u8bed\u8a00\u4e4b\u4e2d\u63a5\u53e3\u7684\u5b9a\u4e49\u4e3a\uff1a 1 interface Point { x : number ; y : number ; print : () => void ; } \u4e4b\u540e\u4e00\u4e2a\u7c7b\u53ef\u4ee5\u53bb\u5b9e\u73b0\u8fd9\u4e2a\u63a5\u53e3\uff0c\u8fd9\u4e2a\u65f6\u5019\u8fd9\u4e2a\u7c7b\u5c31\u5fc5\u987b\u5177\u6709\u63a5\u53e3\u7684\u6210\u5458\u5e76\u5b9e\u73b0\u63a5\u53e3\u7684\u65b9\u6cd5\uff1a 1 2 3 4 5 6 7 8 class Point3D implements Point { x : number ; y : number ; z : number ; ... print () : void { console . log ( `( ${ this . x } , ${ this . y } , ${ this . z } )` ); } ... } \u63a5\u53e3\u652f\u6301 \u53ef\u9009\u53c2\u6570 \u548c \u53ea\u8bfb\u53c2\u6570 \u3002\u53ef\u9009\u53c2\u6570\u4ee3\u8868\u8be5\u53c2\u6570\u53ef\u5177\u6709\u53ef\u4e0d\u5177\u6709\uff1a 1 2 interface Point { x : number ; y : number ; z? : number ; } let twoDimensionPoint : Point = { x : 1 , y : 2 }; // OK \u53ea\u8bfb\u53c2\u6570\u4ee3\u8868\u8be5\u53c2\u6570\u53ea\u53ef\u8bfb\u53d6\u4e0d\u53ef\u4fee\u6539\uff1a 1 2 3 interface User { name : string ; readonly password : string ; } let holder : User = { name : \"holder\" , password : \"111111\" }; holder . password = \"222222\" ; // Error!","title":"\u7c7b\u4e0e\u63a5\u53e3"},{"location":"languages/typescript/#_5","text":"TypeScript \u4f5c\u4e3a\u76ee\u524d\u8f83\u4e3a\u70ed\u95e8\u7684 JavaScript \u8bed\u8a00\u201c\u8865\u4e01\u201d\uff0c\u53ef\u4ee5\u88ab\u5e7f\u6cdb\u5e94\u7528\u4e8e\u5404\u79cd Web \u524d\u7aef\u6846\u67b6\u6216\u8005\u79fb\u52a8\u7aef\u6846\u67b6\u3002\u76ee\u524d\u7c7b\u4f3c React\u3001React Native\u3001Vue \u7b49\u5e38\u7528\u524d\u7aef\u6846\u67b6\u5747\u63d0\u4f9b\u4e86 TypeScript \u8bed\u8a00\u652f\u6301\u3002 \u53ef\u4ee5\u5e94\u7528 TypeScript \u8bed\u8a00\u76f8\u5173\u77e5\u8bc6\u7684\u8bfe\u7a0b\uff1a \u8f6f\u4ef6\u5de5\u7a0b","title":"\u540e\u7eed\u62d3\u5c55"},{"location":"languages/typescript/#_6","text":"TypeScript \u8bed\u8a00\u5b98\u65b9\u6587\u6863 https://www.tslang.cn/docs/home.html","title":"\u8d44\u6e90\u94fe\u63a5"},{"location":"languages/c-oop/","text":"C++ \u8bed\u8a00\u9762\u5411\u5bf9\u8c61 \u00b6 \u524d\u7f6e\u77e5\u8bc6 \u00b6 \u5177\u6709 C/C++ \u8bed\u8a00\u57fa\u7840\uff0c\u80fd\u591f\u7f16\u5199\u57fa\u672c\u7684 C/C++ \u4ee3\u7801 \u6709\u57fa\u672c\u7684\u62bd\u8c61\u601d\u7ef4\u80fd\u529b \u524d\u8a00 \u00b6 \u8fd9\u4f4d\u8bfb\u8005\uff0c\u975e\u5e38\u6b22\u8fce\u4f60\u70b9\u5f00\u8fd9\u4efd\u6280\u80fd\u6587\u6863\u3002\u5982\u4f60\u6240\u89c1\uff0c\u8fd9\u4efd\u6587\u6863\u4e0e\u6280\u80fd\u6587\u6863\u9879\u76ee\u4e2d\u7684\u5176\u4ed6\u6587\u6863\u4e0d\u5c3d\u76f8\u540c\u3002\u6ca1\u9519\uff0c\u6280\u80fd\u6587\u6863\u7684\u521d\u8877\u4e3b\u8981\u662f\u5e0c\u671b\u80fd\u591f\u8d85\u8131\u8ba1\u7b97\u673a\u7cfb\u5927\u591a fly bitch \u7684\u8bfe\u7a0b\u672c\u8eab\uff0c\u9ed8\u9ed8\u5730\u5e26\u7ed9\u6587\u6863\u7684\u9605\u8bfb\u8005\u8bfe\u5802\u4ee5\u5916\u7684\u80fd\u529b\u63d0\u5347\u3002 \u800c\u4f60\u5373\u5c06\u9605\u8bfb\u7684 OOP \u6587\u6863\u5374\u4e0d\u5c3d\u76f8\u540c\uff0c\u8fd9\u4efd\u6587\u6863\u662f\u4e3b\u7b14\u4eba zhaochen20 \u5728 2021 \u5e74\u6625\u5b63\u5b66\u671f\u7684\u8bfe\u7a0b\u7b14\u8bb0\u3002\u597d\u4e8b\u591a\u78e8\uff0c\u8fd9\u4efd\u6587\u6863\u51e0\u7ecf\u5468\u6298\uff0c\u76f4\u5230 2022 \u5e74\u624d\u5f97\u4ee5\u4e0e\u667a\u80fd\u4f53\u7684\u6d3b\u52a8\u63a8\u5e7f\u4e00\u540c\u4e0a\u7ebf\u3002\u7136\u800c\u4e3a\u65f6\u4e0d\u665a\uff0c\u4e00\u5b57\u73ed\u7684\u540c\u5b66\u5f00\u6625\u4e4b\u540e\u624d\u4f1a\u5b66\u4e60 OOP \u8bfe\u7a0b\uff0c\u5e0c\u671b\u8fd9\u4efd\u6587\u6863\u80fd\u591f\u52a0\u6df1\u9605\u8bfb\u8005\u5bf9 C++ \u8bed\u8a00\u4e43\u81f3\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u4e00\u4e9b\u8ba4\u8bc6\u3002\u540c\u65f6\uff0c\u4e5f\u5e0c\u671b\u8fd9\u4efd\u6587\u6863\u4f5c\u4e3a\u4e3b\u7b14\u4eba\u4e0e\u5ba1\u6838\u4eba\u7ed9\u4e88 2021 \u5e74\u7684\u4e00\u53e5\u9053\u522b\u3002 \u5c06\u539f\u672c\u7684 Markdown \u94fe\u63a5\u9644\u5728\u6b64\u5904 \uff0c\u91cc\u9762\u8fd8\u6709\u4e00\u4e9b\u671f\u672b\u5907\u8003\u7684\u8d44\u6599\uff0c\u5efa\u8bae\u59a5\u5584\u5229\u7528\u3002 \u5b66\u4e60\u8def\u5f84 \u00b6 \u5efa\u8bae\u7ed3\u5408 \u5218\u77e5\u8fdc\u8001\u5e08\u7684\u8bfe\u4ef6 \u4e00\u540c\u5b66\u4e60\uff0c\u867d\u7136\u8fd9\u4efd\u6587\u6863\u5b8c\u5168\u5c55\u5f00\u4e86\u8bfe\u5802\u5185\u5bb9\uff08\u56e0\u4e3a OOP \u8bfe\u7a0b\u591a\u5c11\u8fd8\u662f\u6bd4\u8f83\u8a00\u7b80\u610f\u8d45\u7684\uff09\uff0c\u7136\u800c\u770b\u7740\u8bfe\u4ef6\u80fd\u591f\u5bf9\u5b66\u4e60\u8109\u7edc\u66f4\u4e3a\u6e05\u6670\u3002 \u53e6\u5916\uff0c\u5728\u5b66\u4e60 OOP \u521d\u671f\uff0c\u4f1a\u8bb2\u8ff0\u914d\u7f6e\u73af\u5883\u7684\u95ee\u9898\u3002\u4e0d\u5f97\u4e0d\u8bf4\uff0c\u5728\u5b66\u4e60 OOP \u7684\u8fc7\u7a0b\u8fc7\u7a0b\u4e2d\uff0c\u6ca1\u6709\u7406\u89e3\u5230 Makefile \u7684\u7cbe\u534e\u662f\u4e00\u5927\u9057\u61be\u3002\u7136\u800c\u6211\u4e2a\u4eba\u8ba4\u4e3a\u76f4\u63a5\u4e0a\u6765\u5c31\u5b66\u4e60 Makefile \u8fd8\u662f\u6bd4\u8f83 fly bitch\u3002 \u7ed9\u51fa\u7684\u5efa\u8bae\u662f\uff0c\u5982\u679c\u4f60\u4f7f\u7528 Windows \u7535\u8111\uff0c\u5148\u7ed9\u81ea\u5df1\u7684\u7535\u8111\u914d\u597d WSL2\uff0c\u7136\u540e\u5b66\u4e60\u57fa\u672c\u7684 Linux \u547d\u4ee4\uff08\u53ef\u4ee5\u53c2\u8003 Linux \u6587\u6863 \uff09\u3002\u53e6\u5916\uff0c\u8fd9\u91cc\u53ef\u4ee5\u63a8\u8350 \u300a\u7b2c\u4e00\u884c\u4ee3\u7801 Linux \u547d\u4ee4\u884c\u300b\u4e00\u4e66 \uff0c\u7684\u786e\u5bf9\u547d\u4ee4\u884c\u8bb2\u7684\u5f88\u6e05\u695a\u3002\u5982\u679c\u4f60\u662f MacOS \u7528\u6237\uff08\u4e0d\u7ba1\u662f\u9ed1\u82f9\u679c\u8fd8\u662f\u767d\u82f9\u679c\uff09\uff0c\u8bf7\u52a1\u5fc5\u7ed9\u81ea\u5df1\u7684\u7535\u8111\u88c5\u4e0a iterm2 \uff0c\u540c\u65f6\u81ea\u884c\u8c37\u6b4c\u5982\u4f55\u4f18\u5316 iterm2 \u3002 \u6b64\u5904\u518d\u9644\u4e0a zhaochen20 \u4e2a\u4eba\u535a\u5ba2\u91cc\u7684 UNIX \u5b66\u4e60\u7b14\u8bb0 \u3002\u987a\u5e26\u5f3a\u63a8\u4e00\u6ce2 MacOS \u7535\u8111\uff0c\u5982\u679c\u4f60\u4e0d\u6253\u6e38\u620f\u7684\u8bdd\uff0c\u6211\u60f3\u6ca1\u6709\u6bd4 MacOS \u66f4\u9002\u5408\u8ba1\u7b97\u673a\u7cfb\u7684\u7535\u8111\u4e86\u3002 \u6700\u540e\uff0c\u7531\u4e8e\u7b14\u8bb0\u5b9e\u9645\u4e0a\u7edd\u5927\u591a\u6570\u90fd\u662f\u4e3b\u7b14\u4eba zhaochen20 \u4e00\u4eba\u6240\u5199\uff0c\u96be\u514d\u6709\u6240\u9519\u8bef\u3002 \u5982\u679c\u6709\u8bef\uff0c\u53ef\u4ee5\u524d\u5f80 zhaochen20 \u7684 \u535a\u5ba2\u7559\u8a00 \u3002 \u540e\u7eed\u62d3\u5c55 \u00b6 \u9762\u5411\u5bf9\u8c61\u662f\u4e00\u79cd\u76f8\u5f53\u5e38\u7528\u7684\u7f16\u7a0b\u6a21\u5f0f\uff0c\u73b0\u4ee3\u8bb8\u591a\u7f16\u7a0b\u8bed\u8a00\u90fd\u652f\u6301\u8fd9\u4e00\u6a21\u5f0f\u3002\u5728\u719f\u6089\u4e86 C++ \u8bed\u8a00\u4e0b\u7684\u9762\u5411\u5bf9\u8c61\u4e4b\u540e\uff0c\u6211\u4eec\u63a8\u8350\u8bfb\u8005\u53bb\u5c1d\u8bd5\u4e86\u89e3\u5176\u4ed6\u8bed\u8a00\u4e4b\u4e0b\u7684\u9762\u5411\u5bf9\u8c61\u76f8\u5173\u8bed\u6cd5\uff0c\u5982 Python\u3001Java\u3001JavaScript \u7b49\u7b49\uff0c\u8fd9\u5bf9\u540e\u7eed\u7684\u5b66\u4e60\u4e5f\u6709\u6240\u88e8\u76ca\u3002 1 2 3 4 5 6 7 8 9 10 11 class Student { private : int age ; std :: string name ; public : Student ( int _age , std :: string _name ) : age ( _age ), name ( _name ) { } void print () { } }; 1 2 3 4 5 6 7 class Student : def __init__ ( self , _age , _name ): self . age = _age self . name = _name def print ( self ): pass 1 2 3 4 5 6 7 8 class Student { constructor ( _name , _age ) { this . name = _name ; this . age = _age ; } print () { } } \u81f4\u8c22 \u00b6 \u9996\u5148\uff0c\u672c\u6587\u6863\u7684\u5185\u5bb9\u5b8c\u5168\u57fa\u4e8e\u5218\u77e5\u8fdc\u8001\u5e08\u7684\u8bfe\u7a0b\u4f53\u7cfb\u800c\u5efa\u7acb\uff0c\u8bda\u631a\u5730\u611f\u8c22\u5218\u77e5\u8fdc\u8001\u5e08\u4e0e\u4ed6\u7684\u6559\u5b66\u56e2\u961f\u5bf9 OOP \u8bfe\u7a0b\u7684\u6089\u5fc3\u4ed8\u51fa\u3002 \u968f\u540e\uff0c\u81f4\u8c22\u4e3b\u7b14\u4eba zhaochen20 \u672c\u4eba\uff0c\u4ed6\u5728 2021 \u5e74 5 \u6708\u4efd\u72c2\u809d\u4e86\u5927\u6982 112 \u5c0f\u65f6\u5199\u51fa\u4e86\u521d\u7a3f\u3002 \u800c\u540e\uff0c\u5bf9\u6574\u7406\u4e14\u505a\u4fee\u6539\u5de5\u4f5c\u7684 yiyj13 \u81f4\u4ee5\u611f\u8c22\uff0c\u795d\u613f\u4ed6\u8fdb\u5165\u4fe1\u606f\u5b66\u9662\u540e\u80fd\u591f\u6709\u6240\u6536\u83b7\u6709\u6240\u6210\u3002 \u6700\u540e\uff0c\u6b63\u5982\u7ec6\u5fc3\u7684\u8bfb\u8005\u53ef\u80fd\u53d1\u73b0\u7684\u90a3\u6837\uff0c\u8fd9\u4efd\u6587\u6863\u6700\u540e\u4e24\u8282\u7684\u6587\u98ce\u4e0e\u524d\u6587\u4e0d\u5c3d\u76f8\u540c\uff0c\u81ea\u7136\uff0c\u8fd9\u5e76\u975e\u4e3b\u7b14\u4eba\u5b8c\u6210\u3002 \u51fa\u4e8e\u4e00\u4e9b\u7279\u5b9a\u7684\u7f18\u7531\uff0c\u4e5f\u8868\u793a\u5bf9\u6700\u540e\u4e24\u8282\u4f5c\u8005\u7684\u5c0a\u91cd\uff0c\u4e3b\u7b14\u4eba\u5728\u6b64\u771f\u8bda\u5730\u611f\u8c22\u4ed6\u7684\u4e00\u4f4d\u6545\u4eba\u3002 Without whom, this tutorial would have been released half a year earlier. Not every story has an happy endding. Anyway, this is why we shall call it a story. \u671f\u671b\u4ee5\u540e\u7684\u4e3b\u7b14\u4eba\u80fd\u591f\u82e6\u4e2d\u4f5c\u4e50\uff0c\u6574\u7406\u6587\u7a3f\u7684\u540c\u5b66\u4ea6\u80fd\u5fc3\u60f3\u4e8b\u6210\uff0c\u4e5f\u795d\u613f\u9605\u8bfb\u6587\u6863\u5e76\u5b66\u4e60 OOP \u8bfe\u7a0b\u7684\u540c\u5b66\u80fd\u591f\u6709\u6240\u6536\u83b7\uff0c\u5728 2022 \u5e74\u667a\u80fd\u4f53\u6bd4\u8d5b\u4e2d\u65a9\u83b7\u4f73\u7ee9\u3002 \u672c OOP \u6587\u6863\u6700\u7ec8\u7531 Ashitemaru \u683c\u5f0f\u5316\u540e\u4ee3\u4e3a Commit \u5408\u5e76\u8fdb\u5165\u6280\u80fd\u5f15\u5bfc\u6587\u6863\u3002","title":"C++ \u8bed\u8a00\u9762\u5411\u5bf9\u8c61"},{"location":"languages/c-oop/#c","text":"","title":"C++ \u8bed\u8a00\u9762\u5411\u5bf9\u8c61"},{"location":"languages/c-oop/#_1","text":"\u5177\u6709 C/C++ \u8bed\u8a00\u57fa\u7840\uff0c\u80fd\u591f\u7f16\u5199\u57fa\u672c\u7684 C/C++ \u4ee3\u7801 \u6709\u57fa\u672c\u7684\u62bd\u8c61\u601d\u7ef4\u80fd\u529b","title":"\u524d\u7f6e\u77e5\u8bc6"},{"location":"languages/c-oop/#_2","text":"\u8fd9\u4f4d\u8bfb\u8005\uff0c\u975e\u5e38\u6b22\u8fce\u4f60\u70b9\u5f00\u8fd9\u4efd\u6280\u80fd\u6587\u6863\u3002\u5982\u4f60\u6240\u89c1\uff0c\u8fd9\u4efd\u6587\u6863\u4e0e\u6280\u80fd\u6587\u6863\u9879\u76ee\u4e2d\u7684\u5176\u4ed6\u6587\u6863\u4e0d\u5c3d\u76f8\u540c\u3002\u6ca1\u9519\uff0c\u6280\u80fd\u6587\u6863\u7684\u521d\u8877\u4e3b\u8981\u662f\u5e0c\u671b\u80fd\u591f\u8d85\u8131\u8ba1\u7b97\u673a\u7cfb\u5927\u591a fly bitch \u7684\u8bfe\u7a0b\u672c\u8eab\uff0c\u9ed8\u9ed8\u5730\u5e26\u7ed9\u6587\u6863\u7684\u9605\u8bfb\u8005\u8bfe\u5802\u4ee5\u5916\u7684\u80fd\u529b\u63d0\u5347\u3002 \u800c\u4f60\u5373\u5c06\u9605\u8bfb\u7684 OOP \u6587\u6863\u5374\u4e0d\u5c3d\u76f8\u540c\uff0c\u8fd9\u4efd\u6587\u6863\u662f\u4e3b\u7b14\u4eba zhaochen20 \u5728 2021 \u5e74\u6625\u5b63\u5b66\u671f\u7684\u8bfe\u7a0b\u7b14\u8bb0\u3002\u597d\u4e8b\u591a\u78e8\uff0c\u8fd9\u4efd\u6587\u6863\u51e0\u7ecf\u5468\u6298\uff0c\u76f4\u5230 2022 \u5e74\u624d\u5f97\u4ee5\u4e0e\u667a\u80fd\u4f53\u7684\u6d3b\u52a8\u63a8\u5e7f\u4e00\u540c\u4e0a\u7ebf\u3002\u7136\u800c\u4e3a\u65f6\u4e0d\u665a\uff0c\u4e00\u5b57\u73ed\u7684\u540c\u5b66\u5f00\u6625\u4e4b\u540e\u624d\u4f1a\u5b66\u4e60 OOP \u8bfe\u7a0b\uff0c\u5e0c\u671b\u8fd9\u4efd\u6587\u6863\u80fd\u591f\u52a0\u6df1\u9605\u8bfb\u8005\u5bf9 C++ \u8bed\u8a00\u4e43\u81f3\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u4e00\u4e9b\u8ba4\u8bc6\u3002\u540c\u65f6\uff0c\u4e5f\u5e0c\u671b\u8fd9\u4efd\u6587\u6863\u4f5c\u4e3a\u4e3b\u7b14\u4eba\u4e0e\u5ba1\u6838\u4eba\u7ed9\u4e88 2021 \u5e74\u7684\u4e00\u53e5\u9053\u522b\u3002 \u5c06\u539f\u672c\u7684 Markdown \u94fe\u63a5\u9644\u5728\u6b64\u5904 \uff0c\u91cc\u9762\u8fd8\u6709\u4e00\u4e9b\u671f\u672b\u5907\u8003\u7684\u8d44\u6599\uff0c\u5efa\u8bae\u59a5\u5584\u5229\u7528\u3002","title":"\u524d\u8a00"},{"location":"languages/c-oop/#_3","text":"\u5efa\u8bae\u7ed3\u5408 \u5218\u77e5\u8fdc\u8001\u5e08\u7684\u8bfe\u4ef6 \u4e00\u540c\u5b66\u4e60\uff0c\u867d\u7136\u8fd9\u4efd\u6587\u6863\u5b8c\u5168\u5c55\u5f00\u4e86\u8bfe\u5802\u5185\u5bb9\uff08\u56e0\u4e3a OOP \u8bfe\u7a0b\u591a\u5c11\u8fd8\u662f\u6bd4\u8f83\u8a00\u7b80\u610f\u8d45\u7684\uff09\uff0c\u7136\u800c\u770b\u7740\u8bfe\u4ef6\u80fd\u591f\u5bf9\u5b66\u4e60\u8109\u7edc\u66f4\u4e3a\u6e05\u6670\u3002 \u53e6\u5916\uff0c\u5728\u5b66\u4e60 OOP \u521d\u671f\uff0c\u4f1a\u8bb2\u8ff0\u914d\u7f6e\u73af\u5883\u7684\u95ee\u9898\u3002\u4e0d\u5f97\u4e0d\u8bf4\uff0c\u5728\u5b66\u4e60 OOP \u7684\u8fc7\u7a0b\u8fc7\u7a0b\u4e2d\uff0c\u6ca1\u6709\u7406\u89e3\u5230 Makefile \u7684\u7cbe\u534e\u662f\u4e00\u5927\u9057\u61be\u3002\u7136\u800c\u6211\u4e2a\u4eba\u8ba4\u4e3a\u76f4\u63a5\u4e0a\u6765\u5c31\u5b66\u4e60 Makefile \u8fd8\u662f\u6bd4\u8f83 fly bitch\u3002 \u7ed9\u51fa\u7684\u5efa\u8bae\u662f\uff0c\u5982\u679c\u4f60\u4f7f\u7528 Windows \u7535\u8111\uff0c\u5148\u7ed9\u81ea\u5df1\u7684\u7535\u8111\u914d\u597d WSL2\uff0c\u7136\u540e\u5b66\u4e60\u57fa\u672c\u7684 Linux \u547d\u4ee4\uff08\u53ef\u4ee5\u53c2\u8003 Linux \u6587\u6863 \uff09\u3002\u53e6\u5916\uff0c\u8fd9\u91cc\u53ef\u4ee5\u63a8\u8350 \u300a\u7b2c\u4e00\u884c\u4ee3\u7801 Linux \u547d\u4ee4\u884c\u300b\u4e00\u4e66 \uff0c\u7684\u786e\u5bf9\u547d\u4ee4\u884c\u8bb2\u7684\u5f88\u6e05\u695a\u3002\u5982\u679c\u4f60\u662f MacOS \u7528\u6237\uff08\u4e0d\u7ba1\u662f\u9ed1\u82f9\u679c\u8fd8\u662f\u767d\u82f9\u679c\uff09\uff0c\u8bf7\u52a1\u5fc5\u7ed9\u81ea\u5df1\u7684\u7535\u8111\u88c5\u4e0a iterm2 \uff0c\u540c\u65f6\u81ea\u884c\u8c37\u6b4c\u5982\u4f55\u4f18\u5316 iterm2 \u3002 \u6b64\u5904\u518d\u9644\u4e0a zhaochen20 \u4e2a\u4eba\u535a\u5ba2\u91cc\u7684 UNIX \u5b66\u4e60\u7b14\u8bb0 \u3002\u987a\u5e26\u5f3a\u63a8\u4e00\u6ce2 MacOS \u7535\u8111\uff0c\u5982\u679c\u4f60\u4e0d\u6253\u6e38\u620f\u7684\u8bdd\uff0c\u6211\u60f3\u6ca1\u6709\u6bd4 MacOS \u66f4\u9002\u5408\u8ba1\u7b97\u673a\u7cfb\u7684\u7535\u8111\u4e86\u3002 \u6700\u540e\uff0c\u7531\u4e8e\u7b14\u8bb0\u5b9e\u9645\u4e0a\u7edd\u5927\u591a\u6570\u90fd\u662f\u4e3b\u7b14\u4eba zhaochen20 \u4e00\u4eba\u6240\u5199\uff0c\u96be\u514d\u6709\u6240\u9519\u8bef\u3002 \u5982\u679c\u6709\u8bef\uff0c\u53ef\u4ee5\u524d\u5f80 zhaochen20 \u7684 \u535a\u5ba2\u7559\u8a00 \u3002","title":"\u5b66\u4e60\u8def\u5f84"},{"location":"languages/c-oop/#_4","text":"\u9762\u5411\u5bf9\u8c61\u662f\u4e00\u79cd\u76f8\u5f53\u5e38\u7528\u7684\u7f16\u7a0b\u6a21\u5f0f\uff0c\u73b0\u4ee3\u8bb8\u591a\u7f16\u7a0b\u8bed\u8a00\u90fd\u652f\u6301\u8fd9\u4e00\u6a21\u5f0f\u3002\u5728\u719f\u6089\u4e86 C++ \u8bed\u8a00\u4e0b\u7684\u9762\u5411\u5bf9\u8c61\u4e4b\u540e\uff0c\u6211\u4eec\u63a8\u8350\u8bfb\u8005\u53bb\u5c1d\u8bd5\u4e86\u89e3\u5176\u4ed6\u8bed\u8a00\u4e4b\u4e0b\u7684\u9762\u5411\u5bf9\u8c61\u76f8\u5173\u8bed\u6cd5\uff0c\u5982 Python\u3001Java\u3001JavaScript \u7b49\u7b49\uff0c\u8fd9\u5bf9\u540e\u7eed\u7684\u5b66\u4e60\u4e5f\u6709\u6240\u88e8\u76ca\u3002 1 2 3 4 5 6 7 8 9 10 11 class Student { private : int age ; std :: string name ; public : Student ( int _age , std :: string _name ) : age ( _age ), name ( _name ) { } void print () { } }; 1 2 3 4 5 6 7 class Student : def __init__ ( self , _age , _name ): self . age = _age self . name = _name def print ( self ): pass 1 2 3 4 5 6 7 8 class Student { constructor ( _name , _age ) { this . name = _name ; this . age = _age ; } print () { } }","title":"\u540e\u7eed\u62d3\u5c55"},{"location":"languages/c-oop/#_5","text":"\u9996\u5148\uff0c\u672c\u6587\u6863\u7684\u5185\u5bb9\u5b8c\u5168\u57fa\u4e8e\u5218\u77e5\u8fdc\u8001\u5e08\u7684\u8bfe\u7a0b\u4f53\u7cfb\u800c\u5efa\u7acb\uff0c\u8bda\u631a\u5730\u611f\u8c22\u5218\u77e5\u8fdc\u8001\u5e08\u4e0e\u4ed6\u7684\u6559\u5b66\u56e2\u961f\u5bf9 OOP \u8bfe\u7a0b\u7684\u6089\u5fc3\u4ed8\u51fa\u3002 \u968f\u540e\uff0c\u81f4\u8c22\u4e3b\u7b14\u4eba zhaochen20 \u672c\u4eba\uff0c\u4ed6\u5728 2021 \u5e74 5 \u6708\u4efd\u72c2\u809d\u4e86\u5927\u6982 112 \u5c0f\u65f6\u5199\u51fa\u4e86\u521d\u7a3f\u3002 \u800c\u540e\uff0c\u5bf9\u6574\u7406\u4e14\u505a\u4fee\u6539\u5de5\u4f5c\u7684 yiyj13 \u81f4\u4ee5\u611f\u8c22\uff0c\u795d\u613f\u4ed6\u8fdb\u5165\u4fe1\u606f\u5b66\u9662\u540e\u80fd\u591f\u6709\u6240\u6536\u83b7\u6709\u6240\u6210\u3002 \u6700\u540e\uff0c\u6b63\u5982\u7ec6\u5fc3\u7684\u8bfb\u8005\u53ef\u80fd\u53d1\u73b0\u7684\u90a3\u6837\uff0c\u8fd9\u4efd\u6587\u6863\u6700\u540e\u4e24\u8282\u7684\u6587\u98ce\u4e0e\u524d\u6587\u4e0d\u5c3d\u76f8\u540c\uff0c\u81ea\u7136\uff0c\u8fd9\u5e76\u975e\u4e3b\u7b14\u4eba\u5b8c\u6210\u3002 \u51fa\u4e8e\u4e00\u4e9b\u7279\u5b9a\u7684\u7f18\u7531\uff0c\u4e5f\u8868\u793a\u5bf9\u6700\u540e\u4e24\u8282\u4f5c\u8005\u7684\u5c0a\u91cd\uff0c\u4e3b\u7b14\u4eba\u5728\u6b64\u771f\u8bda\u5730\u611f\u8c22\u4ed6\u7684\u4e00\u4f4d\u6545\u4eba\u3002 Without whom, this tutorial would have been released half a year earlier. Not every story has an happy endding. Anyway, this is why we shall call it a story. \u671f\u671b\u4ee5\u540e\u7684\u4e3b\u7b14\u4eba\u80fd\u591f\u82e6\u4e2d\u4f5c\u4e50\uff0c\u6574\u7406\u6587\u7a3f\u7684\u540c\u5b66\u4ea6\u80fd\u5fc3\u60f3\u4e8b\u6210\uff0c\u4e5f\u795d\u613f\u9605\u8bfb\u6587\u6863\u5e76\u5b66\u4e60 OOP \u8bfe\u7a0b\u7684\u540c\u5b66\u80fd\u591f\u6709\u6240\u6536\u83b7\uff0c\u5728 2022 \u5e74\u667a\u80fd\u4f53\u6bd4\u8d5b\u4e2d\u65a9\u83b7\u4f73\u7ee9\u3002 \u672c OOP \u6587\u6863\u6700\u7ec8\u7531 Ashitemaru \u683c\u5f0f\u5316\u540e\u4ee3\u4e3a Commit \u5408\u5e76\u8fdb\u5165\u6280\u80fd\u5f15\u5bfc\u6587\u6863\u3002","title":"\u81f4\u8c22"},{"location":"languages/c-oop/behavioral-pattern/","text":"\u8bbe\u8ba1\u6a21\u5f0f\u4e0e\u884c\u4e3a\u578b\u6a21\u5f0f \u00b6 \u8bbe\u8ba1\u6a21\u5f0f\u662f\u5728\u957f\u65f6\u95f4\u5b9e\u8df5\u4e2d\uff0c\u5f00\u53d1\u4eba\u5458\u603b\u7ed3\u51fa\u7684 \u4f18\u79c0\u67b6\u6784\u4e0e\u89e3\u51b3\u65b9\u6848 \u3002\u5b66\u4e60\u8bbe\u8ba1\u6a21\u5f0f\u5c06\u6709\u52a9\u4e8e\u7ecf\u9a8c\u4e0d\u8db3\u7684\u5f00\u53d1\u4eba\u5458\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u7075\u6d3b\u5730\u8fd0\u7528\u9762\u5411\u5bf9\u8c61\u7279\u6027\uff0c\u5e76\u80fd\u591f\u5feb\u901f\u6784\u5efa\u4e0d\u540c\u573a\u666f\u4e0b\u7684\u7a0b\u5e8f\u6846\u67b6\uff0c\u5199\u51fa\u4f18\u8d28\u4ee3\u7801\u3002 \u8bbe\u8ba1\u6a21\u5f0f\u5206\u7c7b \u00b6 \u884c\u4e3a\u578b\u6a21\u5f0f\uff1a\u5173\u6ce8\u5bf9\u8c61\u884c\u4e3a\u529f\u80fd\u4e0a\u7684\u62bd\u8c61\uff0c\u4ece\u800c\u63d0\u5347\u5bf9\u8c61\u5728\u884c\u4e3a\u529f\u80fd\u4e0a\u7684\u53ef\u62d3\u5c55\u6027\uff0c\u80fd\u4ee5\u6700\u5c11\u7684\u4ee3\u7801\u53d8\u52a8\u5b8c\u6210\u529f\u80fd\u7684\u589e\u51cf\u3002 \u7ed3\u6784\u578b\u6a21\u5f0f\uff1a\u5173\u6ce8\u5bf9\u8c61\u4e4b\u95f4\u7ed3\u6784\u5173\u7cfb\u4e0a\u7684\u62bd\u8c61\uff0c\u4ece\u800c\u63d0\u5347\u5bf9\u8c61\u7ed3\u6784\u7684\u53ef\u7ef4\u62a4\u6027\u3001\u4ee3\u7801\u7684\u5065\u58ee\u6027\uff0c\u80fd\u5728\u7ed3\u6784\u5c42\u9762\u4e0a\u5c3d\u53ef\u80fd\u7684\u89e3\u8026\u5408\u3002 \u521b\u5efa\u578b\u6a21\u5f0f \u672c\u7ae0\u5185\u5bb9\u4e3b\u8981\u63a2\u8ba8\u8bbe\u8ba1\u6a21\u5f0f\u4e2d\u7684\u884c\u4e3a\u578b\u6a21\u5f0f\u3002 \u884c\u4e3a\u578b\u6a21\u5f0f\u5206\u7c7b \u00b6 \u672c\u7ae0\u4ecb\u7ecd\u4e09\u79cd\u884c\u4e3a\u578b\u6a21\u5f0f\u3002 \u6a21\u7248\u65b9\u6cd5\u6a21\u5f0f \u7b56\u7565\u6a21\u5f0f \u8fed\u4ee3\u5668\u6a21\u5f0f \u6a21\u7248\u65b9\u6cd5 Template Method \u00b6 \u6a21\u7248\u65b9\u6cd5\u662f\u4e00\u79cd\u9488\u5bf9\u63a5\u53e3\u7f16\u7a0b\u7684\u8bbe\u8ba1\u3002 \u6a21\u7248\u65b9\u6cd5\u7684\u601d\u60f3\u662f\uff0c\u57fa\u7c7b\u662f\u4e00\u4e2a\u6a21\u677f\uff08\u4e5f\u53ef\u4ee5\u79f0\u4f5c\u539f\u578b\uff09\u3002\u57fa\u7c7b\u4f53\u73b0\u7684\u662f\u201c\u62bd\u8c61\u6982\u5ff5\u201d\uff0c\u91cc\u9762\u5b9a\u4e49\u82e5\u5e72\u4e2a\u7eaf\u865a\u51fd\u6570\uff0c\u8fd9\u4e9b\u51fd\u6570\u63d0\u4f9b\u4e86\u8fd9\u4e2a\u7c7b\u7684\u201c\u63a5\u53e3\u201d\u3002 \u6bd4\u5982\uff0c\u5982\u679c\u4e00\u4e2a\u64cd\u4f5c\u6709 operation1 \u3001 operation2 \u4e24\u4e2a\u6b65\u9aa4\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u57fa\u7c7b\uff1a 1 2 3 4 5 class AbstractClass { public : virtual void Operation1 () = 0 ; virtual void Operation2 () = 0 ; }; \u8fd9\u4e2a\u64cd\u4f5c\u53ef\u80fd\u6709\u5f88\u591a\u4e2a\u7248\u672c\u3002\u6bcf\u4e2a\u7248\u672c\u7684\u5b9e\u73b0\u7ec6\u8282\u4e0d\u540c\u3002\u6bd4\u5982\uff0c AbstractClass \u53ef\u80fd\u662f\u201c\u76d1\u89c6\u8ba1\u7b97\u673a\u8282\u70b9\u7684\u8d1f\u8f7d\u72b6\u6001\u201d\u7684\u8fc7\u7a0b\uff0c Operation1 \u662f\u201c\u5f97\u5230\u603b\u5185\u5b58\u201d\uff0c Operation2 \u662f\u201c\u5f97\u5230\u5df2\u5360\u7528\u5185\u5b58\u201d\u3002\u800c\u8fd9\u4e24\u79cd\u64cd\u4f5c\u5728\u4e0d\u540c\u7684\u73af\u5883\u4e0b\uff0c\u6bd4\u5982 Win32 \u548c Win64 \u4e0b\u53ef\u80fd\u662f\u4e0d\u540c\u7684\u3002\u8fd9\u4e9b\u4e0d\u540c\u7684\u7ec6\u8282\u5219\u7531\u5b50\u7c7b\u8d1f\u8d23\u5b9e\u73b0\u3002 \u5728\u4f7f\u7528\u65f6\uff0c\u62bd\u8c61\u7c7b\u7684\u7b97\u6cd5\u9aa8\u67b6\u63d0\u4f9b\u4e86\u5927\u81f4\u65b9\u6cd5\uff0c\u518d\u7531\u8fd9\u4e2a\u65b9\u6cd5\u6765\u6839\u636e\u9700\u8981\u8c03\u7528\u5177\u4f53\u7c7b\u7684\u5b9e\u73b0\u7ec6\u8282\u3002\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 class ConcreteClassA : public AbstractClass { void Operation1 () { cout << \"Do Operation 1 of A\" << endl ; } void Operation2 () { cout << \"Do Operation 2 of A\" << endl ; } }; \u8fd9\u6837\u5f53\u6211\u4eec\u8981\u62d3\u5c55\u4e00\u79cd\u65b0\u7684\u5b9e\u73b0\u7c7b\u65f6\uff0c\u91cd\u65b0\u5bf9\u57fa\u7c7b\u8fdb\u884c\u7ee7\u627f\u4e0e\u5b9e\u73b0\u5373\u53ef\uff0c\u65e0\u9700\u5bf9\u5df2\u6709\u7684 \u5b9e\u73b0\u7c7b \u8fdb\u884c\u4fee\u6539\u3002 \u7531\u6a21\u677f\u5b9e\u73b0\u591a\u6001 \u00b6 \u73b0\u5728\u6211\u4eec\u6709\u4e86\u5f88\u591a\u7ee7\u627f\u81ea\u540c\u4e00\u4e2a\u62bd\u8c61\u7c7b\u7684\u5b9e\u73b0\u7c7b\uff0c\u8be5\u600e\u4e48\u5b9e\u73b0\u591a\u6001\u5462\uff1f \u6211\u4eec\u77e5\u9053\uff0c\u6a21\u677f\u591a\u6001\u662f\u4f9d\u8d56\u4e8e \u6307\u9488\u548c\u5f15\u7528 \u7684\u3002\u7f16\u8bd1\u5668\u80fd\u591f\u901a\u8fc7\u6307\u9488\u548c\u5f15\u7528\u5224\u65ad\u5b9e\u9645\u6307\u5411\u7684\u7c7b\u578b\uff0c\u5e76\u4e14\u8c03\u7528\u5b9e\u9645\u7c7b\u578b\u91cc\u9762 override \u4e86\u7684\u865a\u51fd\u6570\u3002\u6240\u4ee5\u5728\u4f7f\u7528\u6a21\u677f\u6a21\u5f0f\u7684\u65f6\u5019\uff0c\u5e38\u5e38\u521b\u5efa\u57fa\u7c7b\u6307\u9488\u6765\u8c03\u7528\u5b9e\u73b0\u7c7b\u7684\u51fd\u6570\u3002 \u4f8b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 #include <iostream> using namespace std ; class AbstractClass { public : virtual void Operation1 () = 0 ; virtual void Operation2 () = 0 ; }; class ConcreteClassA : public AbstractClass { public : void Operation1 () { cout << \"Do Operation 1 of A\" << endl ; } void Operation2 () { cout << \"Do Operation 2 of A\" << endl ; } }; class ConcreteClassB : public AbstractClass { public : void Operation1 () { cout << \"Do Operation 1 of B\" << endl ; } void Operation2 () { cout << \"Do Operation 2 of B\" << endl ; } }; int main () { AbstractClass * abstract ; abstract = new ConcreteClassB (); abstract -> Operation1 (); abstract -> Operation2 (); return 0 ; } \u7b56\u7565\u6a21\u5f0f Strategy Method \u00b6 \u6a21\u677f\u6a21\u5f0f\u4e2d\uff0c\u6bcf\u4e2a\u5b9e\u73b0\u7c7b\u91cc\u9762\u53ef\u80fd\u6709\u591a\u4e2a\u529f\u80fd\uff08\u6bd4\u5982 Operation1 \u3001 Operation2 \u7b49\uff09\u3002\u53ef\u80fd\u6709\u4e24\u4e2a\u7c7b\uff0c\u5b83\u4eec\u5404\u6709 N N \u4e2a\u529f\u80fd\uff0c\u5176\u4e2d\u53ea\u6709\u4e00\u4e2a\u7684\u5b9e\u73b0\u6709\u533a\u522b\u3002\u5728\u6a21\u677f\u6a21\u5f0f\u4e0b\uff0c\u6211\u4eec\u5374\u5fc5\u987b\u5b9e\u73b0\u4e24\u4e2a\u7c7b\u3002\u8fd9\u5c31\u5f88\u9ebb\u70e6\u3002 \u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\uff0c\u4f7f\u7528\u7b56\u7565\u6a21\u5f0f\u3002 \u7b56\u7565\u6a21\u5f0f\uff1a\u5b9a\u4e49\u4e00\u7cfb\u5217\u7b97\u6cd5\u5e76\u52a0\u4ee5\u5c01\u88c5\uff0c\u4f7f\u5f97\u8fd9\u4e9b\u7b97\u6cd5\u53ef\u4ee5\u4e92\u76f8\u66ff\u6362\u3002\u8fd9\u6837\uff0c\u4e00\u79cd\u7b97\u6cd5\u5c31\u4e0d\u9700\u8981\u4f9d\u9644\u4e8e\u67d0\u4e2a\u5b9e\u73b0\u7c7b\u4e86\uff0c\u800c\u662f\u81ea\u6210\u4e00\u7c7b\u3002 \u5177\u4f53\u800c\u8a00 \uff1a \u6bcf\u4e00\u79cd\u884c\u4e3a\u5404\u81ea\u6709\u65b9\u6cd5\u865a\u57fa\u7c7b A \u3001 B \u6bcf\u4e00\u4e2a\u65b9\u6cd5\u57fa\u7c7b A \u6709\u82e5\u5e72\u5177\u4f53\u7684\u65b9\u6cd5 A1 \u3001 A2 \u3001 A3 \u200b\uff0c\u6bcf\u4e00\u79cd\u90fd\u4f1a\u7ee7\u627f A \u200b \u6240\u6709\u5bf9\u8c61\u5177\u6709\u4e00\u4e2a\u5bf9\u8c61\u57fa\u7c7b O \u200b\uff0c\u5bf9\u8c61\u57fa\u7c7b O \u200b \u542b\u6709\u6240\u6709\u7684\u65b9\u6cd5\u57fa\u7c7b\u6307\u9488 A* \u200b\u3001 B* \u200b\uff0c\u4ece\u800c\u5b9e\u73b0\u591a\u6001\u3002\u6ce8\u610f\u5230\u5bf9\u8c61\u57fa\u7c7b\u5982\u679c\u4ec5\u542b\u6709\u65b9\u6cd5\u57fa\u7c7b\u6307\u9488\uff0c\u5b9e\u9645\u4e0a\u6ca1\u6cd5\u8c03\u7528\u65b9\u6cd5\u57fa\u7c7b\u7684\u65b9\u6cd5\uff0c\u6545\u800c\u8fd8\u9700\u8981\u8c03\u7528\u63a5\u53e3 \u6bcf\u79cd\u5bf9\u8c61\u662f\u4e00\u4e2a\u5177\u4f53\u7684\u5bf9\u8c61\u7c7b O1 \u3001 O2 \u3001 O3 \u200b\uff0c\u6bcf\u79cd\u90fd\u4f1a\u7ee7\u627f\u5bf9\u8c61\u7c7b O \u200b\uff0c\u540c\u65f6\u8ba9\u65b9\u6cd5\u57fa\u7c7b\u6307\u9488 A* \u200b\u3001 B* \u200b\u5177\u4f53\u6307\u5411\u65b9\u6cd5\u6d3e\u751f\u7c7b\u4e0a Ax \u3001 By \u200b \u4f8b\u5b50 \u6bd4\u5982\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\uff1a\u6709\u4e09\u79cd\u9e2d\u5b50\uff1aMallarDuck\uff08\u7eff\u5934\u9e2d\uff09\u3001RubberDuck\uff08\u6a61\u76ae\u9e2d\uff09\u3001DecoyDuck\uff08\u8bf1\u9975\u9e2d\u5b50\uff09 MallarDuck \u4f1a quack \u5730\u53eb\uff0c\u4f1a\u98de RubberDuck \u4f1a queak \u5730\u53eb\uff0c\u4e0d\u4f1a\u98de DecoyDuck \u4e0d\u4f1a\u53eb\uff0c\u4e0d\u4f1a\u98de \u53d1\u73b0\u6240\u6709\u9e2d\u5b50\u90fd\u6709\u98de\u3001\u53eb\u4e24\u79cd\u529f\u80fd\uff0c\u4f46\u662f\u5404\u81ea\u7684\u5b9e\u73b0\u4e0d\u592a\u4e00\u6837\u3002\u6211\u4eec\u4e0d\u5728\u6bcf\u79cd\u9e2d\u5b50\u91cc\u5206\u522b\u5b9e\u73b0\uff0c\u800c\u662f\u5728\u57fa\u7c7b\u9e2d\u5b50\u91cc\u50a8\u5b58\u8fd9\u4e24\u79cd\u529f\u80fd\u7684\u57fa\u7c7b\u6307\u9488\uff0c\u7136\u540e\u8ba9\u9e2d\u5b50\u7684\u5b9e\u73b0\u7c7b\u6307\u5411\u5bf9\u5e94\u7684\u4e24\u79cd\u529f\u80fd\u7684\u5b9e\u73b0\u7c7b\u3002 \u5b9e\u73b0\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 #include <iostream> class FlyBehavior { public : virtual ~ FlyBehavior () { }; virtual void fly () = 0 ; }; class QuackBehavior { public : virtual ~ QuackBehavior () { }; virtual void quack () = 0 ; }; class Duck { public : Duck ( FlyBehavior * p_FlyBehavior , QuackBehavior * p_QuackBehavior ) { pFlyBehavior = p_FlyBehavior ; pQuackBehavior = p_QuackBehavior ; } virtual ~ Duck () { }; virtual void display () { }; void performFly () { pFlyBehavior -> fly (); } void performQuack () { pQuackBehavior -> quack (); } private : FlyBehavior * pFlyBehavior ; QuackBehavior * pQuackBehavior ; }; class FlyWithWings : public FlyBehavior { public : void fly () { std :: cout << \"I'm flying!!\" << std :: endl ; } }; class FlyNoWay : public FlyBehavior { public : void fly () { std :: cout << \"I can't fly\" << std :: endl ; } }; class Quack : public QuackBehavior { public : void quack () { std :: cout << \"Quack\" << std :: endl ; } }; class MuteQuack : public QuackBehavior { public : void quack () { std :: cout << \"<< Slience >>\" << std :: endl ; } }; class Squeak : public QuackBehavior { public : void quack () { std :: cout << \"Squeak\" << std :: endl ; } }; class MallardDuck : public Duck { // \u7ee7\u627f\u4e86\u5bf9\u8c61\u57fa\u7c7b\uff0c\u5c31\u5df2\u7ecf\u6709\u4e86\u65b9\u6cd5\u57fa\u7c7b\u6307\u9488 public : MallardDuck ( FlyBehavior * fly_behavior = new FlyWithWings (), // \u6784\u9020\u51fd\u6570\u542b\u6709\u7f3a\u7701\u503c QuackBehavior * quack_behavior = new Quack ()) : Duck ( fly_behavior , quack_behavior ) { } // \u7eff\u5934\u9e2d\u7684\u6784\u9020\u51fd\u6570\uff0c\u98de\u884c\u548c\u53eb\u58f0\u7684\u57fa\u7c7b\u6307\u9488\u5206\u522b\u6307\u5411\u4e86\u5bf9\u5e94\u7684\u5b9e\u73b0\u7c7b void display () { std :: cout << \"I'm a real Mallard duck\" << std :: endl ; } }; class RubberDuck : public Duck { public : RubberDuck ( FlyBehavior * fly_behavior = new FlyNoWay (), QuackBehavior * quack_behavior = new Squeak ()) : Duck ( fly_behavior , quack_behavior ) { } void display () { std :: cout << \"I'm a Rubber duck\" << std :: endl ; } }; class DecoyDuck : public Duck { public : DecoyDuck ( FlyBehavior * fly_behavior = new FlyNoWay (), QuackBehavior * quack_behavior = new MuteQuack ()) : Duck ( fly_behavior , quack_behavior ) { } void display () { std :: cout << \"I'm just a Decoy duck\" << std :: endl ; } }; int main () { Duck * mallard = new MallardDuck (); mallard -> display (); mallard -> performFly (); mallard -> performQuack (); Duck * rubber = new RubberDuck (); rubber -> display (); rubber -> performQuack (); return 0 ; } /* output: I'm a real Mallard duck I'm flying!! Quack I'm a Rubber duck Squeak */ \u4ece\u4e0a\u9762\u7684\u4f8b\u5b50\u53ef\u4ee5\u770b\u51fa\uff0c\u7b56\u7565\u6a21\u5f0f\u4e0d\u8fc7\u662f\u66f4\u52a0\u591a\u6001\u5316\u7684\u6a21\u677f\u6a21\u5f0f\u7f62\u4e86\u3002\u5728\u6a21\u677f\u6a21\u5f0f\u4e0b\uff0c\u6bcf\u4e2a\u7c7b\uff08\u6bd4\u5982\u5728\u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\u91cc\u662f\u6bcf\u79cd\u9e2d\u5b50\uff09\u4e2d\u7684 Fly \u3001 Quack \u51fd\u6570\u90fd\u5728\u8fd9\u4e2a\u9e2d\u5b50\u7c7b\u91cc\u5b9e\u73b0\u3002\u800c\u8fd9\u91cc\u5219\u662f\u5148\u5b9a\u4e49\u4e86 Fly \u3001 Quack \u8fd9\u4e24\u79cd\u52a8\u4f5c\u7684\u57fa\u7c7b\uff0c\u5373 QuackBehavior \u3001 FlyBehavior \u3002\u5e76\u4e14\u5728\u5728\u57fa\u7c7b\u9e2d\u5b50\u91cc\u50a8\u5b58\u4e86\u8fd9\u4e24\u79cd\u57fa\u7c7b\u7c7b\u578b\u7684\u6307\u9488\u3002 \u7136\u540e\uff0c\u518d\u901a\u8fc7\u7ee7\u627f\u5173\u7cfb\u5b9e\u73b0\u4e86\u5404\u79cd\u4e0d\u540c\u7684 Fly \u3001 Quack \u7684\u5b9e\u73b0\u7c7b\uff0c\u5e76\u4e14\u5728\u9e2d\u5b50\u7684\u5b9e\u73b0\u7c7b\u91cc\u8ba9 QuackBehavior \u3001 FlyBehavior \u7684\u57fa\u7c7b\u6307\u9488\u6307\u5411\u4e0d\u540c\u7684 Fly \u3001 Quack \u7684\u5b9e\u73b0\u7c7b\u3002","title":"\u8bbe\u8ba1\u6a21\u5f0f\u4e0e\u884c\u4e3a\u578b\u6a21\u5f0f"},{"location":"languages/c-oop/behavioral-pattern/#_1","text":"\u8bbe\u8ba1\u6a21\u5f0f\u662f\u5728\u957f\u65f6\u95f4\u5b9e\u8df5\u4e2d\uff0c\u5f00\u53d1\u4eba\u5458\u603b\u7ed3\u51fa\u7684 \u4f18\u79c0\u67b6\u6784\u4e0e\u89e3\u51b3\u65b9\u6848 \u3002\u5b66\u4e60\u8bbe\u8ba1\u6a21\u5f0f\u5c06\u6709\u52a9\u4e8e\u7ecf\u9a8c\u4e0d\u8db3\u7684\u5f00\u53d1\u4eba\u5458\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u7075\u6d3b\u5730\u8fd0\u7528\u9762\u5411\u5bf9\u8c61\u7279\u6027\uff0c\u5e76\u80fd\u591f\u5feb\u901f\u6784\u5efa\u4e0d\u540c\u573a\u666f\u4e0b\u7684\u7a0b\u5e8f\u6846\u67b6\uff0c\u5199\u51fa\u4f18\u8d28\u4ee3\u7801\u3002","title":"\u8bbe\u8ba1\u6a21\u5f0f\u4e0e\u884c\u4e3a\u578b\u6a21\u5f0f"},{"location":"languages/c-oop/behavioral-pattern/#_2","text":"\u884c\u4e3a\u578b\u6a21\u5f0f\uff1a\u5173\u6ce8\u5bf9\u8c61\u884c\u4e3a\u529f\u80fd\u4e0a\u7684\u62bd\u8c61\uff0c\u4ece\u800c\u63d0\u5347\u5bf9\u8c61\u5728\u884c\u4e3a\u529f\u80fd\u4e0a\u7684\u53ef\u62d3\u5c55\u6027\uff0c\u80fd\u4ee5\u6700\u5c11\u7684\u4ee3\u7801\u53d8\u52a8\u5b8c\u6210\u529f\u80fd\u7684\u589e\u51cf\u3002 \u7ed3\u6784\u578b\u6a21\u5f0f\uff1a\u5173\u6ce8\u5bf9\u8c61\u4e4b\u95f4\u7ed3\u6784\u5173\u7cfb\u4e0a\u7684\u62bd\u8c61\uff0c\u4ece\u800c\u63d0\u5347\u5bf9\u8c61\u7ed3\u6784\u7684\u53ef\u7ef4\u62a4\u6027\u3001\u4ee3\u7801\u7684\u5065\u58ee\u6027\uff0c\u80fd\u5728\u7ed3\u6784\u5c42\u9762\u4e0a\u5c3d\u53ef\u80fd\u7684\u89e3\u8026\u5408\u3002 \u521b\u5efa\u578b\u6a21\u5f0f \u672c\u7ae0\u5185\u5bb9\u4e3b\u8981\u63a2\u8ba8\u8bbe\u8ba1\u6a21\u5f0f\u4e2d\u7684\u884c\u4e3a\u578b\u6a21\u5f0f\u3002","title":"\u8bbe\u8ba1\u6a21\u5f0f\u5206\u7c7b"},{"location":"languages/c-oop/behavioral-pattern/#_3","text":"\u672c\u7ae0\u4ecb\u7ecd\u4e09\u79cd\u884c\u4e3a\u578b\u6a21\u5f0f\u3002 \u6a21\u7248\u65b9\u6cd5\u6a21\u5f0f \u7b56\u7565\u6a21\u5f0f \u8fed\u4ee3\u5668\u6a21\u5f0f","title":"\u884c\u4e3a\u578b\u6a21\u5f0f\u5206\u7c7b"},{"location":"languages/c-oop/behavioral-pattern/#template-method","text":"\u6a21\u7248\u65b9\u6cd5\u662f\u4e00\u79cd\u9488\u5bf9\u63a5\u53e3\u7f16\u7a0b\u7684\u8bbe\u8ba1\u3002 \u6a21\u7248\u65b9\u6cd5\u7684\u601d\u60f3\u662f\uff0c\u57fa\u7c7b\u662f\u4e00\u4e2a\u6a21\u677f\uff08\u4e5f\u53ef\u4ee5\u79f0\u4f5c\u539f\u578b\uff09\u3002\u57fa\u7c7b\u4f53\u73b0\u7684\u662f\u201c\u62bd\u8c61\u6982\u5ff5\u201d\uff0c\u91cc\u9762\u5b9a\u4e49\u82e5\u5e72\u4e2a\u7eaf\u865a\u51fd\u6570\uff0c\u8fd9\u4e9b\u51fd\u6570\u63d0\u4f9b\u4e86\u8fd9\u4e2a\u7c7b\u7684\u201c\u63a5\u53e3\u201d\u3002 \u6bd4\u5982\uff0c\u5982\u679c\u4e00\u4e2a\u64cd\u4f5c\u6709 operation1 \u3001 operation2 \u4e24\u4e2a\u6b65\u9aa4\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u57fa\u7c7b\uff1a 1 2 3 4 5 class AbstractClass { public : virtual void Operation1 () = 0 ; virtual void Operation2 () = 0 ; }; \u8fd9\u4e2a\u64cd\u4f5c\u53ef\u80fd\u6709\u5f88\u591a\u4e2a\u7248\u672c\u3002\u6bcf\u4e2a\u7248\u672c\u7684\u5b9e\u73b0\u7ec6\u8282\u4e0d\u540c\u3002\u6bd4\u5982\uff0c AbstractClass \u53ef\u80fd\u662f\u201c\u76d1\u89c6\u8ba1\u7b97\u673a\u8282\u70b9\u7684\u8d1f\u8f7d\u72b6\u6001\u201d\u7684\u8fc7\u7a0b\uff0c Operation1 \u662f\u201c\u5f97\u5230\u603b\u5185\u5b58\u201d\uff0c Operation2 \u662f\u201c\u5f97\u5230\u5df2\u5360\u7528\u5185\u5b58\u201d\u3002\u800c\u8fd9\u4e24\u79cd\u64cd\u4f5c\u5728\u4e0d\u540c\u7684\u73af\u5883\u4e0b\uff0c\u6bd4\u5982 Win32 \u548c Win64 \u4e0b\u53ef\u80fd\u662f\u4e0d\u540c\u7684\u3002\u8fd9\u4e9b\u4e0d\u540c\u7684\u7ec6\u8282\u5219\u7531\u5b50\u7c7b\u8d1f\u8d23\u5b9e\u73b0\u3002 \u5728\u4f7f\u7528\u65f6\uff0c\u62bd\u8c61\u7c7b\u7684\u7b97\u6cd5\u9aa8\u67b6\u63d0\u4f9b\u4e86\u5927\u81f4\u65b9\u6cd5\uff0c\u518d\u7531\u8fd9\u4e2a\u65b9\u6cd5\u6765\u6839\u636e\u9700\u8981\u8c03\u7528\u5177\u4f53\u7c7b\u7684\u5b9e\u73b0\u7ec6\u8282\u3002\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 class ConcreteClassA : public AbstractClass { void Operation1 () { cout << \"Do Operation 1 of A\" << endl ; } void Operation2 () { cout << \"Do Operation 2 of A\" << endl ; } }; \u8fd9\u6837\u5f53\u6211\u4eec\u8981\u62d3\u5c55\u4e00\u79cd\u65b0\u7684\u5b9e\u73b0\u7c7b\u65f6\uff0c\u91cd\u65b0\u5bf9\u57fa\u7c7b\u8fdb\u884c\u7ee7\u627f\u4e0e\u5b9e\u73b0\u5373\u53ef\uff0c\u65e0\u9700\u5bf9\u5df2\u6709\u7684 \u5b9e\u73b0\u7c7b \u8fdb\u884c\u4fee\u6539\u3002","title":"\u6a21\u7248\u65b9\u6cd5 Template Method"},{"location":"languages/c-oop/behavioral-pattern/#_4","text":"\u73b0\u5728\u6211\u4eec\u6709\u4e86\u5f88\u591a\u7ee7\u627f\u81ea\u540c\u4e00\u4e2a\u62bd\u8c61\u7c7b\u7684\u5b9e\u73b0\u7c7b\uff0c\u8be5\u600e\u4e48\u5b9e\u73b0\u591a\u6001\u5462\uff1f \u6211\u4eec\u77e5\u9053\uff0c\u6a21\u677f\u591a\u6001\u662f\u4f9d\u8d56\u4e8e \u6307\u9488\u548c\u5f15\u7528 \u7684\u3002\u7f16\u8bd1\u5668\u80fd\u591f\u901a\u8fc7\u6307\u9488\u548c\u5f15\u7528\u5224\u65ad\u5b9e\u9645\u6307\u5411\u7684\u7c7b\u578b\uff0c\u5e76\u4e14\u8c03\u7528\u5b9e\u9645\u7c7b\u578b\u91cc\u9762 override \u4e86\u7684\u865a\u51fd\u6570\u3002\u6240\u4ee5\u5728\u4f7f\u7528\u6a21\u677f\u6a21\u5f0f\u7684\u65f6\u5019\uff0c\u5e38\u5e38\u521b\u5efa\u57fa\u7c7b\u6307\u9488\u6765\u8c03\u7528\u5b9e\u73b0\u7c7b\u7684\u51fd\u6570\u3002 \u4f8b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 #include <iostream> using namespace std ; class AbstractClass { public : virtual void Operation1 () = 0 ; virtual void Operation2 () = 0 ; }; class ConcreteClassA : public AbstractClass { public : void Operation1 () { cout << \"Do Operation 1 of A\" << endl ; } void Operation2 () { cout << \"Do Operation 2 of A\" << endl ; } }; class ConcreteClassB : public AbstractClass { public : void Operation1 () { cout << \"Do Operation 1 of B\" << endl ; } void Operation2 () { cout << \"Do Operation 2 of B\" << endl ; } }; int main () { AbstractClass * abstract ; abstract = new ConcreteClassB (); abstract -> Operation1 (); abstract -> Operation2 (); return 0 ; }","title":"\u7531\u6a21\u677f\u5b9e\u73b0\u591a\u6001"},{"location":"languages/c-oop/behavioral-pattern/#strategy-method","text":"\u6a21\u677f\u6a21\u5f0f\u4e2d\uff0c\u6bcf\u4e2a\u5b9e\u73b0\u7c7b\u91cc\u9762\u53ef\u80fd\u6709\u591a\u4e2a\u529f\u80fd\uff08\u6bd4\u5982 Operation1 \u3001 Operation2 \u7b49\uff09\u3002\u53ef\u80fd\u6709\u4e24\u4e2a\u7c7b\uff0c\u5b83\u4eec\u5404\u6709 N N \u4e2a\u529f\u80fd\uff0c\u5176\u4e2d\u53ea\u6709\u4e00\u4e2a\u7684\u5b9e\u73b0\u6709\u533a\u522b\u3002\u5728\u6a21\u677f\u6a21\u5f0f\u4e0b\uff0c\u6211\u4eec\u5374\u5fc5\u987b\u5b9e\u73b0\u4e24\u4e2a\u7c7b\u3002\u8fd9\u5c31\u5f88\u9ebb\u70e6\u3002 \u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\uff0c\u4f7f\u7528\u7b56\u7565\u6a21\u5f0f\u3002 \u7b56\u7565\u6a21\u5f0f\uff1a\u5b9a\u4e49\u4e00\u7cfb\u5217\u7b97\u6cd5\u5e76\u52a0\u4ee5\u5c01\u88c5\uff0c\u4f7f\u5f97\u8fd9\u4e9b\u7b97\u6cd5\u53ef\u4ee5\u4e92\u76f8\u66ff\u6362\u3002\u8fd9\u6837\uff0c\u4e00\u79cd\u7b97\u6cd5\u5c31\u4e0d\u9700\u8981\u4f9d\u9644\u4e8e\u67d0\u4e2a\u5b9e\u73b0\u7c7b\u4e86\uff0c\u800c\u662f\u81ea\u6210\u4e00\u7c7b\u3002 \u5177\u4f53\u800c\u8a00 \uff1a \u6bcf\u4e00\u79cd\u884c\u4e3a\u5404\u81ea\u6709\u65b9\u6cd5\u865a\u57fa\u7c7b A \u3001 B \u6bcf\u4e00\u4e2a\u65b9\u6cd5\u57fa\u7c7b A \u6709\u82e5\u5e72\u5177\u4f53\u7684\u65b9\u6cd5 A1 \u3001 A2 \u3001 A3 \u200b\uff0c\u6bcf\u4e00\u79cd\u90fd\u4f1a\u7ee7\u627f A \u200b \u6240\u6709\u5bf9\u8c61\u5177\u6709\u4e00\u4e2a\u5bf9\u8c61\u57fa\u7c7b O \u200b\uff0c\u5bf9\u8c61\u57fa\u7c7b O \u200b \u542b\u6709\u6240\u6709\u7684\u65b9\u6cd5\u57fa\u7c7b\u6307\u9488 A* \u200b\u3001 B* \u200b\uff0c\u4ece\u800c\u5b9e\u73b0\u591a\u6001\u3002\u6ce8\u610f\u5230\u5bf9\u8c61\u57fa\u7c7b\u5982\u679c\u4ec5\u542b\u6709\u65b9\u6cd5\u57fa\u7c7b\u6307\u9488\uff0c\u5b9e\u9645\u4e0a\u6ca1\u6cd5\u8c03\u7528\u65b9\u6cd5\u57fa\u7c7b\u7684\u65b9\u6cd5\uff0c\u6545\u800c\u8fd8\u9700\u8981\u8c03\u7528\u63a5\u53e3 \u6bcf\u79cd\u5bf9\u8c61\u662f\u4e00\u4e2a\u5177\u4f53\u7684\u5bf9\u8c61\u7c7b O1 \u3001 O2 \u3001 O3 \u200b\uff0c\u6bcf\u79cd\u90fd\u4f1a\u7ee7\u627f\u5bf9\u8c61\u7c7b O \u200b\uff0c\u540c\u65f6\u8ba9\u65b9\u6cd5\u57fa\u7c7b\u6307\u9488 A* \u200b\u3001 B* \u200b\u5177\u4f53\u6307\u5411\u65b9\u6cd5\u6d3e\u751f\u7c7b\u4e0a Ax \u3001 By \u200b \u4f8b\u5b50 \u6bd4\u5982\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\uff1a\u6709\u4e09\u79cd\u9e2d\u5b50\uff1aMallarDuck\uff08\u7eff\u5934\u9e2d\uff09\u3001RubberDuck\uff08\u6a61\u76ae\u9e2d\uff09\u3001DecoyDuck\uff08\u8bf1\u9975\u9e2d\u5b50\uff09 MallarDuck \u4f1a quack \u5730\u53eb\uff0c\u4f1a\u98de RubberDuck \u4f1a queak \u5730\u53eb\uff0c\u4e0d\u4f1a\u98de DecoyDuck \u4e0d\u4f1a\u53eb\uff0c\u4e0d\u4f1a\u98de \u53d1\u73b0\u6240\u6709\u9e2d\u5b50\u90fd\u6709\u98de\u3001\u53eb\u4e24\u79cd\u529f\u80fd\uff0c\u4f46\u662f\u5404\u81ea\u7684\u5b9e\u73b0\u4e0d\u592a\u4e00\u6837\u3002\u6211\u4eec\u4e0d\u5728\u6bcf\u79cd\u9e2d\u5b50\u91cc\u5206\u522b\u5b9e\u73b0\uff0c\u800c\u662f\u5728\u57fa\u7c7b\u9e2d\u5b50\u91cc\u50a8\u5b58\u8fd9\u4e24\u79cd\u529f\u80fd\u7684\u57fa\u7c7b\u6307\u9488\uff0c\u7136\u540e\u8ba9\u9e2d\u5b50\u7684\u5b9e\u73b0\u7c7b\u6307\u5411\u5bf9\u5e94\u7684\u4e24\u79cd\u529f\u80fd\u7684\u5b9e\u73b0\u7c7b\u3002 \u5b9e\u73b0\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 #include <iostream> class FlyBehavior { public : virtual ~ FlyBehavior () { }; virtual void fly () = 0 ; }; class QuackBehavior { public : virtual ~ QuackBehavior () { }; virtual void quack () = 0 ; }; class Duck { public : Duck ( FlyBehavior * p_FlyBehavior , QuackBehavior * p_QuackBehavior ) { pFlyBehavior = p_FlyBehavior ; pQuackBehavior = p_QuackBehavior ; } virtual ~ Duck () { }; virtual void display () { }; void performFly () { pFlyBehavior -> fly (); } void performQuack () { pQuackBehavior -> quack (); } private : FlyBehavior * pFlyBehavior ; QuackBehavior * pQuackBehavior ; }; class FlyWithWings : public FlyBehavior { public : void fly () { std :: cout << \"I'm flying!!\" << std :: endl ; } }; class FlyNoWay : public FlyBehavior { public : void fly () { std :: cout << \"I can't fly\" << std :: endl ; } }; class Quack : public QuackBehavior { public : void quack () { std :: cout << \"Quack\" << std :: endl ; } }; class MuteQuack : public QuackBehavior { public : void quack () { std :: cout << \"<< Slience >>\" << std :: endl ; } }; class Squeak : public QuackBehavior { public : void quack () { std :: cout << \"Squeak\" << std :: endl ; } }; class MallardDuck : public Duck { // \u7ee7\u627f\u4e86\u5bf9\u8c61\u57fa\u7c7b\uff0c\u5c31\u5df2\u7ecf\u6709\u4e86\u65b9\u6cd5\u57fa\u7c7b\u6307\u9488 public : MallardDuck ( FlyBehavior * fly_behavior = new FlyWithWings (), // \u6784\u9020\u51fd\u6570\u542b\u6709\u7f3a\u7701\u503c QuackBehavior * quack_behavior = new Quack ()) : Duck ( fly_behavior , quack_behavior ) { } // \u7eff\u5934\u9e2d\u7684\u6784\u9020\u51fd\u6570\uff0c\u98de\u884c\u548c\u53eb\u58f0\u7684\u57fa\u7c7b\u6307\u9488\u5206\u522b\u6307\u5411\u4e86\u5bf9\u5e94\u7684\u5b9e\u73b0\u7c7b void display () { std :: cout << \"I'm a real Mallard duck\" << std :: endl ; } }; class RubberDuck : public Duck { public : RubberDuck ( FlyBehavior * fly_behavior = new FlyNoWay (), QuackBehavior * quack_behavior = new Squeak ()) : Duck ( fly_behavior , quack_behavior ) { } void display () { std :: cout << \"I'm a Rubber duck\" << std :: endl ; } }; class DecoyDuck : public Duck { public : DecoyDuck ( FlyBehavior * fly_behavior = new FlyNoWay (), QuackBehavior * quack_behavior = new MuteQuack ()) : Duck ( fly_behavior , quack_behavior ) { } void display () { std :: cout << \"I'm just a Decoy duck\" << std :: endl ; } }; int main () { Duck * mallard = new MallardDuck (); mallard -> display (); mallard -> performFly (); mallard -> performQuack (); Duck * rubber = new RubberDuck (); rubber -> display (); rubber -> performQuack (); return 0 ; } /* output: I'm a real Mallard duck I'm flying!! Quack I'm a Rubber duck Squeak */ \u4ece\u4e0a\u9762\u7684\u4f8b\u5b50\u53ef\u4ee5\u770b\u51fa\uff0c\u7b56\u7565\u6a21\u5f0f\u4e0d\u8fc7\u662f\u66f4\u52a0\u591a\u6001\u5316\u7684\u6a21\u677f\u6a21\u5f0f\u7f62\u4e86\u3002\u5728\u6a21\u677f\u6a21\u5f0f\u4e0b\uff0c\u6bcf\u4e2a\u7c7b\uff08\u6bd4\u5982\u5728\u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\u91cc\u662f\u6bcf\u79cd\u9e2d\u5b50\uff09\u4e2d\u7684 Fly \u3001 Quack \u51fd\u6570\u90fd\u5728\u8fd9\u4e2a\u9e2d\u5b50\u7c7b\u91cc\u5b9e\u73b0\u3002\u800c\u8fd9\u91cc\u5219\u662f\u5148\u5b9a\u4e49\u4e86 Fly \u3001 Quack \u8fd9\u4e24\u79cd\u52a8\u4f5c\u7684\u57fa\u7c7b\uff0c\u5373 QuackBehavior \u3001 FlyBehavior \u3002\u5e76\u4e14\u5728\u5728\u57fa\u7c7b\u9e2d\u5b50\u91cc\u50a8\u5b58\u4e86\u8fd9\u4e24\u79cd\u57fa\u7c7b\u7c7b\u578b\u7684\u6307\u9488\u3002 \u7136\u540e\uff0c\u518d\u901a\u8fc7\u7ee7\u627f\u5173\u7cfb\u5b9e\u73b0\u4e86\u5404\u79cd\u4e0d\u540c\u7684 Fly \u3001 Quack \u7684\u5b9e\u73b0\u7c7b\uff0c\u5e76\u4e14\u5728\u9e2d\u5b50\u7684\u5b9e\u73b0\u7c7b\u91cc\u8ba9 QuackBehavior \u3001 FlyBehavior \u7684\u57fa\u7c7b\u6307\u9488\u6307\u5411\u4e0d\u540c\u7684 Fly \u3001 Quack \u7684\u5b9e\u73b0\u7c7b\u3002","title":"\u7b56\u7565\u6a21\u5f0f Strategy Method"},{"location":"languages/c-oop/class-advanced/","text":"C++ \u7c7b\u8bed\u6cd5\u8fdb\u9636 \u00b6 \u8fdb\u9636\u8bb2\u4e9b\u4ec0\u4e48\uff1f \u8fd9\u4e00\u90e8\u5206\u4e3b\u8981\u6df1\u5165\u5bf9\u8c61\u7684\u6784\u9020\u548c\u6790\u6784\uff0c\u5e76\u4e14\u6d89\u53ca\u5230\u5e38\u91cf\u3001\u9759\u6001\u3001\u53cb\u5143\u7684\u6982\u5ff5\u3002 \u672c\u90e8\u5206\u8bb2\u89e3\u7684\u5185\u5bb9\u53ef\u4ee5\u6d53\u7f29\u4e3a\uff1a \u53d8\u91cf\u4e0e\u9759\u6001\u53d8\u91cf \u00b6 \u56db\u7c7b\u53d8\u91cf\u7684\u533a\u522b \u00b6 \u6309\u5b58\u50a8\u533a\u57df\u5206 \u5168\u5c40\u53d8\u91cf\u3001\u9759\u6001\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u90fd\u5b58\u653e\u5728\u5185\u5b58\u7684\u9759\u6001\u5b58\u50a8\u533a\u57df\uff0c\u5c40\u90e8\u53d8\u91cf\u5b58\u653e\u5728\u5185\u5b58\u7684\u6808\u533a\u3002\u9759\u6001\u50a8\u5b58\u533a\u5728\u51fd\u6570\u7ed3\u675f\u540e\u4e0d\u4f1a\u9500\u6bc1\uff0c\u800c\u6808\u533a\u5728\u51fd\u6570\u7ed3\u675f\u540e\u4f1a\u9000\u6808\u800c\u9500\u6bc1\u3002 \u6309\u4f5c\u7528\u57df\u5206 \u52a8\u6001\u53d8\u91cf \u5168\u5c40\u53d8\u91cf\u5728\u6574\u4e2a\u5de5\u7a0b\u6587\u4ef6\u5185\u90fd\u6709\u6548\uff0c\u662f\u201c\u5728\u51fd\u6570\u5916\u5b9a\u4e49\u7684\u53d8\u91cf\u201d\uff0c\u5373\u4ece\u5b9a\u4e49\u53d8\u91cf\u7684\u4f4d\u7f6e\u5230\u672c\u6e90\u6587\u4ef6\u7ed3\u675f\u90fd\u6709\u6548\u3002\u7531\u4e8e\u540c\u4e00\u6587\u4ef6\u4e2d\u7684\u6240\u6709\u51fd\u6570\u90fd\u80fd\u5f15\u7528\u5168\u5c40\u53d8\u91cf\u7684\u503c\uff0c\u56e0\u6b64\u5982\u679c\u5728\u4e00\u4e2a\u51fd\u6570\u4e2d\u6539\u53d8\u4e86\u5168\u5c40\u53d8\u91cf\u7684\u503c\uff0c\u5c31\u80fd\u5f71\u54cd\u5230\u5176\u4ed6\u51fd\u6570\u4e2d\u5168\u5c40\u53d8\u91cf\u7684\u503c\u3002\u6240\u8c13\u6574\u4e2a\u5de5\u7a0b\uff0c\u662f\u6307\u6240\u6709\u7684\u6587\u4ef6\u90fd\u53ef\u4ee5\u7528\uff0c\u4e0d\u5355\u5355\u5728\u5b9a\u4e49\u5168\u5c40\u53d8\u91cf\u7684\u90a3\u4e2a\u6587\u4ef6\u3002 \u5c40\u90e8\u53d8\u91cf\u5728\u5b9a\u4e49\u5b83\u7684\u51fd\u6570\u5185\u6709\u6548\uff0c\u4f46\u662f\u51fd\u6570\u8fd4\u56de\u540e\u5931\u6548\uff0c\u662f\u201c\u5728\u51fd\u6570\u5185\u5b9a\u4e49\u7684\u53d8\u91cf\u201d\uff0c\u5373\u5728\u4e00\u4e2a\u51fd\u6570\u5185\u90e8\u5b9a\u4e49\u7684\u53d8\u91cf\uff0c\u53ea\u5728\u672c\u51fd\u6570\u8303\u56f4\u5185\u6709\u6548\u3002 \u6ce8\u610f\uff1a\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf\u5982\u679c\u6ca1\u6709\u624b\u5de5\u521d\u59cb\u5316\uff0c\u5219\u7531\u7f16\u8bd1\u5668\u521d\u59cb\u5316\u4e3a 0 \u3002\u5c40\u90e8\u53d8\u91cf\u7684\u503c\u4e0d\u53ef\u77e5\u3002 \u9759\u6001\u53d8\u91cf\uff08 static \uff09 \u9759\u6001\u51b3\u5b9a\u4e86\u4e24\u4ef6\u4e8b\uff0c\u7b2c\u4e00\u5c31\u662f\u5b58\u50a8\u540e\u4e0d\u4f1a\u7acb\u523b\u9500\u6bc1\u3002\u7b2c\u4e8c\u662f\u81ea\u5e26\u6709\u4e00\u5b9a\u7684\u9650\u5b9a\u53d8\u91cf\u4f5c\u7528\u533a\u57df\u7684\u529f\u80fd\uff0c\u5f3a\u5316\u5168\u5c40/\u5c40\u90e8\u7684\u5177\u4f53\u4f5c\u7528\u57df\u3002 \u9759\u6001\u5168\u5c40\u53d8\u91cf\u53ea\u5728\u5b9a\u4e49\u5b83\u7684\u6587\u4ef6\u5185\u6709\u6548\uff0c\u6548\u679c\u548c\u5168\u5c40\u53d8\u91cf\u4e00\u6837\uff0c\u53ea\u662f\u5c31\u5728\u672c\u6587\u4ef6\u5185\u90e8\u3002 \u9759\u6001\u5c40\u90e8\u53d8\u91cf\u53ea\u5728\u5b9a\u4e49\u5b83\u7684\u51fd\u6570\u5185\u6709\u6548\uff0c\u53ea\u662f\u7a0b\u5e8f\u4ec5\u5206\u914d\u4e00\u6b21\u5185\u5b58\uff0c\u51fd\u6570\u8fd4\u56de\u540e\uff0c\u8be5\u53d8\u91cf\u4e0d\u4f1a\u6d88\u5931\uff1b\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u7684\u751f\u5b58\u671f\u867d\u7136\u4e3a\u6574\u4e2a\u5de5\u7a0b\uff0c\u4f46\u662f\u5176\u4f5c\u7528\u4ecd\u4e0e\u5c40\u90e8\u53d8\u91cf\u76f8\u540c\uff0c\u5373\u53ea\u80fd\u5728\u5b9a\u4e49\u8be5\u53d8\u91cf\u7684\u51fd\u6570\u5185\u4f7f\u7528\u8be5\u53d8\u91cf\u3002\u9000\u51fa\u8be5\u51fd\u6570\u540e\uff0c\u5c3d\u7ba1\u8be5\u53d8\u91cf\u8fd8\u7ee7\u7eed\u5b58\u5728\u3002\u5c40\u90e8\u51b3\u5b9a\u5176\u65e0\u6cd5\u88ab\u5176\u4ed6\u51fd\u6570\u4f7f\u7528\u53ea\u80fd\u88ab\u540c\u4e00\u51fd\u6570\u4e0b\u6b21\u518d\u7528\u3002\u9759\u6001\u51b3\u5b9a\u5176\u4fdd\u5b58\u5728\u9759\u6001\u533a\uff0c\u65e0\u6cd5\u88ab\u7acb\u523b\u9500\u6bc1\u3002 \u8fd9\u91cc\u8fd8\u7ee7\u7eed\u5b58\u5728\u610f\u5473\u7740\u5f88\u91cd\u8981\u7684\u6027\u8d28\uff0c\u5bf9\u4e8e\u8fd9\u4e2a\u51fd\u6570\u800c\u8a00\uff0c\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u662f\u53ef\u4ee5\u590d\u7528\u7684\u3002\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u5728\u9759\u6001\u5b58\u50a8\u533a\u5185\u5206\u914d\u5b58\u50a8\u5355\u5143\u3002\u5728\u7a0b\u5e8f\u6574\u4e2a\u8fd0\u884c\u671f\u95f4\u90fd\u4e0d\u91ca\u653e\u3002\u800c\u81ea\u52a8\u53d8\u91cf\uff08\u5373\u52a8\u6001\u5c40\u90e8\u53d8\u91cf\uff09\u5c5e\u4e8e\u52a8\u6001\u5b58\u50a8\u7c7b\u522b\uff0c\u5b58\u50a8\u5728\u52a8\u6001\u5b58\u50a8\u533a\u7a7a\u95f4\u800c\u4e0d\u662f\u9759\u6001\u5b58\u50a8\u533a\u7a7a\u95f4\uff0c\u6bcf\u4e00\u6b21\u8be5\u51fd\u6570\u8c03\u7528\u7ed3\u675f\u540e\u5373\u91ca\u653e\u3002 \u4e3a\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u8d4b\u521d\u503c\u662f\u5728\u7f16\u8bd1\u65f6\u8fdb\u884c\u7684\uff0c\u5373\u53ea\u8d4b\u521d\u503c\u4e00\u6b21\uff0c\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u5b83\u5df2\u6709\u521d\u503c\u3002\u4ee5\u540e\u6bcf\u6b21\u8c03\u7528\u51fd\u6570\u65f6\u4e0d\u518d\u91cd\u65b0\u8d4b\u521d\u503c\u800c\u53ea\u662f\u4fdd\u7559\u4e0a\u6b21\u51fd\u6570\u8c03\u7528\u7ed3\u675f\u65f6\u7684\u503c\u3002\u800c\u4e3a\u81ea\u52a8\u53d8\u91cf\u8d4b\u521d\u503c\uff0c\u4e0d\u662f\u5728\u7f16\u8bd1\u65f6\u8fdb\u884c\u7684\uff0c\u800c\u662f\u5728\u51fd\u6570\u8c03\u7528\u65f6\u8fdb\u884c\uff0c\u6bcf\u8c03\u7528\u4e00\u6b21\u51fd\u6570\u91cd\u65b0\u7ed9\u4e00\u6b21\u521d\u503c\uff0c\u76f8\u5f53\u4e8e\u6267\u884c\u4e00\u6b21\u8d4b\u503c\u8bed\u53e5\u3002 \u5982\u679c\u5728\u5b9a\u4e49\u5c40\u90e8\u53d8\u91cf\u65f6\u4e0d\u8d4b\u521d\u503c\u7684\u8bdd\uff0c\u5bf9\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u6765\u8bf4\uff0c\u7f16\u8bd1\u65f6\u81ea\u52a8\u8d4b\u521d\u503c 0 \uff08\u6570\u503c\u578b\u53d8\u91cf\uff09\u6216\u7a7a\u5b57\u7b26\uff08\u5b57\u7b26\u578b\u53d8\u91cf\uff09\u3002\u800c\u5bf9\u81ea\u52a8\u53d8\u91cf\u6765\u8bf4\uff0c\u5982\u679c\u4e0d\u8d4b\u521d\u503c\uff0c\u5219\u5b83\u7684\u503c\u662f\u4e00\u4e2a\u4e0d\u786e\u5b9a\u7684\u503c\u3002\u8fd9\u662f\u7531\u4e8e\u6bcf\u6b21\u51fd\u6570\u8c03\u7528\u7ed3\u675f\u540e\u5b58\u50a8\u5355\u5143\u5df2\u91ca\u653e\uff0c\u4e0b\u6b21\u8c03\u7528\u65f6\u53c8\u91cd\u65b0\u53e6\u5206\u914d\u5b58\u50a8\u5355\u5143\uff0c\u800c\u6240\u5206\u914d\u7684\u5355\u5143\u4e2d\u7684\u503c\u662f\u4e0d\u786e\u5b9a\u7684\u3002 \u867d\u7136\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u5728\u51fd\u6570\u8c03\u7528\u7ed3\u675f\u540e\u4ecd\u7136\u5b58\u5728\uff0c\u4f46\u5176\u4ed6\u51fd\u6570\u662f\u4e0d\u80fd\u5f15\u7528\u5b83\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u5176\u4ed6\u51fd\u6570\u4e2d\u5b83\u662f\u201c\u4e0d\u53ef\u89c1\u201d\u7684\uff08\u8fd9\u4e2a\u4e0d\u53ef\u89c1\u662f\u6307\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u7684\u540d\u79f0\u4e0d\u53ef\u5728\u5176\u4ed6\u51fd\u6570\u5185\u88ab\u64cd\u4f5c\u3002\u4f46\u662f\u7531\u4e8e\u5176\u5185\u5b58\u5e76\u6ca1\u6709\u88ab\u6790\u6784\u6389\uff0c\u6211\u4eec\u4f9d\u7136\u80fd\u591f\u5bf9\u8fd9\u5757\u5185\u5b58\u8fdb\u884c\u64cd\u4f5c\uff0c\u8fd9\u4e00\u795e\u5947\u7684\u64cd\u4f5c\u8be6\u89c1\u4e0a\u4e00\u7ae0\u8282\uff09\u3002 \u9759\u6001\u53d8\u91cf\u4e0e\u5168\u5c40\u53d8\u91cf\u6700\u660e\u663e\u7684\u533a\u522b\u5c31\u5728\u4e8e\uff0c\u5168\u5c40\u53d8\u91cf\u5728\u5176\u5b9a\u4e49\u540e\u6240\u6709\u51fd\u6570\u90fd\u80fd\u7528\uff0c\u4f46\u662f\u9759\u6001\u5168\u5c40\u53d8\u91cf\u53ea\u80fd\u5728\u4e00\u4e2a\u6587\u4ef6\u91cc\u9762\u4f7f\u7528\uff0c\u800c\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u53ea\u80fd\u5728\u4e00\u4e2a\u51fd\u6570\u91cc\u4f7f\u7528\u3002 \u5f62\u53c2\u53d8\u91cf \u53ea\u5728\u88ab\u8c03\u7528\u671f\u95f4\u624d\u5206\u914d\u5185\u5b58\u5355\u5143\uff0c\u8c03\u7528\u7ed3\u675f\u7acb\u5373\u91ca\u653e\u3002 \u5728\u51fd\u6570\u4f53\u5185\uff0c\u5f62\u53c2\u7684\u7b49\u7ea7\u6700\u9ad8\u3002\u5f53\u5168\u5c40\u53d8\u91cf\u540d\u4e0e\u5f62\u53c2\u540d\u51b2\u7a81\u7684\u65f6\u5019\uff0c\u51fd\u6570\u4f1a\u64cd\u4f5c\u5f62\u53c2\uff0c\u800c\u4e0d\u662f\u5168\u5c40\u53d8\u91cf\u3002\u4f8b\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 #include \"stdio.h\" int Max = 1 ; void add ( int Max ) { Max = 2 ; } int main () { add ( Max ); printf ( \"Max = %d\" , Max ); getchar (); return 0 ; } \u8fd9\u4e2a\u7ed3\u679c\u5f53\u7136\u662f Max = 1 \u3002\u8fdb\u5165\u51fd\u6570\u540e\uff0c\u7528\u5b9e\u53c2\u6765\u6784\u9020\u4e86\u5f62\u53c2\uff0c\u5f62\u53c2\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u5168\u5c40\u53d8\u91cf\uff0c\u4f46\u6539\u53d8\u5f62\u53c2\u4e0d\u6539\u53d8\u5168\u5c40\u53d8\u91cf\uff0c\u4e14\u51fd\u6570\u6267\u884c\u5b8c\u540e\uff0c\u5f62\u53c2\u91ca\u653e\u3002 \u9759\u6001\u53d8\u91cf \u00b6 \u610f\u4e49 static \u7684\u672c\u8d28\u610f\u4e49\u5728\u4e8e\u53ef\u63a7\u5236\u53d8\u91cf\u7684\u5b58\u50a8\u65b9\u5f0f\u548c\u53ef\u89c1\u6027\u3002 \u5728\u51fd\u6570\u5185\u90e8\u5b9a\u4e49\u7684\u53d8\u91cf\uff0c\u5f53\u7a0b\u5e8f\u6267\u884c\u5230\u5b83\u7684\u5b9a\u4e49\u5904\u65f6\uff0c\u7f16\u8bd1\u5668\u4e3a\u5b83\u5728\u6808\u4e0a\u5206\u914d\u7a7a\u95f4\uff0c\u51fd\u6570\u5728\u6808\u4e0a\u5206\u914d\u7684\u7a7a\u95f4\u5728\u6b64\u51fd\u6570\u6267\u884c\u7ed3\u675f\u65f6\u4f1a\u91ca\u653e\u6389\u3002\u5982\u679c\u60f3\u5c06\u51fd\u6570\u4e2d\u6b64\u53d8\u91cf\u7684\u503c\u4fdd\u5b58\u81f3\u4e0b\u4e00\u6b21\u8c03\u7528\u65f6\uff0c\u5e94\u8be5\u5982\u4f55\u5b9e\u73b0\uff1f\u6700\u5bb9\u6613\u60f3\u5230\u7684\u65b9\u6cd5\u662f\u5b9a\u4e49\u4e3a\u5168\u5c40\u7684\u53d8\u91cf\uff0c\u4f46\u5b9a\u4e49\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u6709\u8bb8\u591a\u7f3a\u70b9\uff0c\u6700\u660e\u663e\u7684\u7f3a\u70b9\u662f\u7834\u574f\u4e86\u6b64\u53d8\u91cf\u7684\u8bbf\u95ee\u8303\u56f4\uff08\u4f7f\u5f97\u5728\u6b64\u51fd\u6570\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\uff0c\u4e0d\u4ec5\u4ec5\u53ea\u53d7\u6b64\u51fd\u6570\u63a7\u5236\uff09\u3002 static \u5173\u952e\u5b57\u5219\u53ef\u4ee5\u5f88\u597d\u7684\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u5728 C++ \u4e2d\uff0c\u9700\u8981\u4e00\u4e2a\u6570\u636e\u5bf9\u8c61\u4e3a\u6574\u4e2a\u7c7b\u800c\u975e\u67d0\u4e2a\u5bf9\u8c61\u670d\u52a1\uff0c\u540c\u65f6\u53c8\u529b\u6c42\u4e0d\u7834\u574f\u7c7b\u7684\u5c01\u88c5\u6027\uff0c\u5373\u8981\u6c42\u6b64\u6210\u5458\u9690\u85cf\u5728\u7c7b\u7684\u5185\u90e8\uff0c\u5bf9\u5916\u4e0d\u53ef\u89c1\u65f6\uff0c\u53ef\u5c06\u5176\u5b9a\u4e49\u4e3a\u9759\u6001\u6570\u636e\u3002 \u5b9a\u4e49 \u4f7f\u7528 static \u4fee\u9970\u7684\u53d8\u91cf\u3002\u4f8b\u5982 static int i = 1 \u3002 \u521d\u59cb\u5316 \u521d\u6b21\u5b9a\u4e49\u65f6\u9700\u8981\u521d\u59cb\u5316\u3002\u5982\u679c\u662f\u5728\u51fd\u6570\u4f53\u5185\u7684\u9759\u6001\u5c40\u90e8\u53d8\u91cf\uff0c\u5219\u53ea\u4f1a\u521d\u59cb\u5316\u4e00\u6b21\uff0c\u4e4b\u540e\u5982\u679c\u518d\u6b21\u8c03\u7528\u8be5\u51fd\u6570\uff0c\u8fd8\u6709\u521d\u59cb\u5316\u8bed\u53e5\uff0c\u4f46\u8fd9\u4e9b\u4e4b\u540e\u7684\u521d\u59cb\u5316\u8bed\u53e5\u5931\u6548\u3002\u4e5f\u5373\u662f\u5728\u4e00\u4e2a\u51fd\u6570\u6267\u884c\u4e00\u6b21\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u80fd\u4e24\u6b21\u5b9a\u4e49\u540c\u4e00\u4e2a static \u6570\u636e\u6210\u5458\u3002\u4e00\u4e2a\u51fd\u6570\u6267\u884c\u591a\u6b21\uff0c\u90a3\u4e48\u6bcf\u6b21\u90fd\u53ef\u4ee5\u6709\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u5b9a\u4e49\u7684\u8bed\u53e5\uff0c\u4f46\u662f\u53ea\u6709\u7b2c\u4e00\u6b21\u6709\u6548\u3002 \u800c\u9759\u6001\u5168\u5c40\u53d8\u91cf\u53ea\u80fd\u521d\u59cb\u5316\u4e00\u6b21\uff0c\u4e4b\u540e\u518d\u521d\u59cb\u5316\u5219\u62a5\u9519\u3002 \u9759\u6001\u5c40\u90e8\u53d8\u91cf \u9759\u6001\u5c40\u90e8\u53d8\u91cf\u5b58\u50a8\u5728\u9759\u6001\u5b58\u50a8\u533a\uff0c\u751f\u547d\u5468\u671f\u5c06\u6301\u7eed\u5230\u6574\u4e2a\u7a0b\u5e8f\u7ed3\u675f\u3002 \u9759\u6001\u5168\u5c40\u53d8\u91cf \u9759\u6001\u5168\u5c40\u53d8\u91cf\u5177\u6709\u5185\u90e8\u53ef\u94fe\u63a5\u6027\uff0c\u4f5c\u7528\u57df\u4ec5\u9650\u5176\u58f0\u660e\u7684\u6e90\u6587\u4ef6\uff0c\u4e0d\u80fd\u88ab\u5176\u4ed6\u6e90\u6587\u4ef6\u6240\u7528\uff0c\u53ef\u4ee5\u907f\u514d\u548c\u5176\u4ed6\u6e90\u6587\u4ef6\u4e2d\u7684\u540c\u540d\u53d8\u91cf\u51b2\u7a81\u3002 \u663e\u5f0f static \u4fee\u9970\u7684\u5168\u5c40\u53d8\u91cf\u548c\u5168\u5c40\u51fd\u6570\u5373\u662f\u5728\u5176\u4ed6 .cpp \u91cc\u4f7f\u7528 extern \u4e5f\u4e0d\u80fd\u7528\u3002 extern \u4fee\u9970\u7b26 \u9996\u5148\u9700\u8981\u6307\u51fa\u7684\u662f\uff0c\u975e\u663e\u5f0f static \u4fee\u9970\u7684\u5168\u5c40\u53d8\u91cf\u548c\u5168\u5c40\u51fd\u6570\u9ed8\u8ba4\u90fd\u662f\u975e\u9759\u6001\u7684\uff0c\u5373\u53ef\u5171\u4eab\u7684\uff0c\u4f46\u662f\u5fc5\u987b\u5728\u5176\u4ed6\u6587\u4ef6\u91cc\u7528 extern \u6765\u58f0\u660e\u624d\u53ef\u4ee5\u7528\u3002 extern \u4fee\u9970\u7b26\u901a\u5e38\u7528\u4e8e\u5f53\u6709\u4e24\u4e2a\u6216\u591a\u4e2a\u6587\u4ef6\u5e0c\u671b\u5171\u4eab\u76f8\u540c\u7684\u5168\u5c40\u53d8\u91cf\u6216\u51fd\u6570\u7684\u65f6\u5019\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u6ca1\u6709\u663e\u5f0f\u52a0\u4e0a static \u4fee\u9970\u7684\u5168\u5c40\u53d8\u91cf\uff08\u8b6c\u5982 int x \uff09\u662f\u9ed8\u8ba4\u975e\u9759\u6001\u7684\u3002\u5982\u679c\u60f3\u5728\u5176\u4ed6\u7684\u7f16\u8bd1\u5355\u5143\u4e2d\u4f7f\u7528\u540c\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\uff0c\u5018\u82e5\u518d\u6b21\u5b9a\u4e49 int x \uff0c\u5fc5\u7136\u9020\u6210\u91cd\u590d\u5b9a\u4e49\u3002\u4e8e\u662f\u4f7f\u7528 extern int x \u6765\u58f0\u660e\u800c\u4e0d\u518d\u6b21\u5b9a\u4e49\uff08\u6ce8\u610f\uff0c\u4e0d\u53ef\u4ee5 extern \u4e00\u4e2a\u663e\u5f0f static \u4fee\u9970\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u56e0\u4e3a static \u4fee\u9970\u7684\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u53ea\u9650\u4e8e\u5b83\u88ab\u5b9a\u4e49\u7684\u90a3\u4e2a cpp \u6587\u4ef6\uff09\u3002\u8fd9\u6837\uff0c\u8be5\u5168\u5c40\u53d8\u91cf\u5bf9 extern \u5b83\u7684\u6240\u6709\u7684\u7a0b\u5e8f\u6587\u4ef6\u90fd\u53ef\u89c1\u7684\u3002 \u8fdb\u4e00\u6b65\u8bb2\uff0c\u6211\u4eec\u5df2\u77e5\u4e0d\u53ef\u4ee5\u5728\u5934\u6587\u4ef6\u4e2d\u5b9a\u4e49\u5168\u5c40\u53d8\u91cf\uff0c\u8b6c\u5982 int x \uff08\u8fd9\u7b49\u4ef7\u4e8e int x = 0 \uff09\u3002 #include \u7684\u529f\u80fd\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u590d\u5236\u7c98\u8d34\u3002\u6545\u800c\u5bf9\u4e8e\u6bcf\u4e2a\u5305\u542b\u4e86\u8be5\u5934\u6587\u4ef6\u7684 cpp \u6587\u4ef6\uff0c\u590d\u5236\u7c98\u8d34\u540e\u76f8\u5f53\u4e8e\u90fd\u5b9a\u4e49\u4e86\u4e00\u6b21\u975e\u9759\u6001\u7684\u5168\u5c40\u53d8\u91cf int x = 0 \uff0c\u9020\u6210\u91cd\u590d\u5b9a\u4e49\u800c\u94fe\u63a5\u5931\u8d25\u3002\u4ece\u800c\u53ea\u80fd\u5728\u5934\u6587\u4ef6\u4e2d\u58f0\u660e\u53d8\u91cf\uff0c extern int x \u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u5168\u5c40\u51fd\u6570\u4e5f\u662f\u9ed8\u8ba4\u975e static \u7684\u3002\u4f46 extern \u4fee\u9970\u5bf9\u4e8e\u4e00\u4e2a\u4e0d\u5e26 static \u4fee\u9970\u7684\u5168\u5c40\u51fd\u6570\u6ca1\u6709\u5fc5\u8981\uff0c\u56e0\u4e3a\u5f53\u6211\u4eec\u5728\u53e6\u4e00 cpp \u4e2d\u58f0\u660e\uff08\u800c\u975e\u91cd\u5b9a\u4e49\uff09\u8fd9\u4e00\u5168\u5c40\u51fd\u6570\u65f6\uff0c\u7cfb\u7edf\u4f1a\u9ed8\u8ba4\u89c6\u4e3a extern \u3002\u4ece\u800c\uff0c\u5728\u53e6\u4e00 cpp \u4e2d\u8c03\u7528\u8fd9\u4e00\u5168\u5c40\u51fd\u6570\uff0c\u4e0d\u9700\u8981 extern \u4fee\u9970\uff0c\u4f46\u662f\u4ecd\u9700\u58f0\u660e\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u5c3d\u91cf\u4e5f\u4e0d\u5728\u5934\u6587\u4ef6\u4e2d\u5b9a\u4e49\u51fd\u6570\u3002\u5047\u8bbe\u5728\u5934\u6587\u4ef6\u4e2d\u5b9a\u4e49\u51fd\u6570\uff0c\u590d\u5236\u7c98\u8d34\u540e\u8fd8\u662f\u91cd\u5b9a\u4e49\uff0c\u4e5f\u53ea\u80fd\u5728\u5934\u6587\u4ef6\u4e2d\u58f0\u660e\u51fd\u6570\u3002\u4e0d\u8fc7\u5bf9\u4e8e\u975e\u663e\u5f0f static \u4fee\u9970\u7684\u51fd\u6570\u800c\u8a00\uff0c\u4e0d\u5e26 extern \u7684\u58f0\u660e\u4f1a\u88ab\u7f16\u8bd1\u5668\u89c6\u4e3a\u81ea\u52a8\u5e26\u4e0a extern \u3002 \u7efc\u4e0a\uff0c extern \u7528\u4e8e\u5b9e\u73b0\u53ea\u58f0\u660e\uff0c\u4e0d\u5b9a\u4e49\u3002\uff08\u4e0d\u5206\u914d\u7a7a\u95f4\u5e76\u8d4b\u503c\uff09 \u8fdb\u4e00\u6b65\u7684\u4f8b\u5b50\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 // func.cpp int x = 0 ; int add ( int a ) { x += a ; return x ; } // main.cpp int add ( int ); int main () { add ( 1 ); return 0 ; } \u8fd9\u91cc\u4e0d\u5fc5\u7136\u58f0\u660e extern int x \uff0c\u56e0\u4e3a\u8c03\u7528 add \u540e\uff0c add \u548c x \u5728\u4e00\u4e2a cpp \u4e0b\uff0c\u662f\u53ef\u4ee5\u8c03\u7528\u7684\u3002\u7136\u800c\uff0c\u5fc5\u987b\u8981\u5728 main.cpp \u5f53\u4e2d\u58f0\u660e add \u624d\u53ef\u4ee5\u8c03\u7528\u3002\u6ce8\u610f\u5230\uff0c extern \u5bf9\u4e8e\u975e\u663e\u5f0f static \u4fee\u9970\u7684\u5168\u5c40\u51fd\u6570\u6ca1\u6709\u5fc5\u8981\u662f\u6307\u4e0d\u5199 extern \u4e5f\u4f1a\u81ea\u52a8\u53d8 extern \uff0c\u800c\u4e0d\u662f\u8bf4\u5728\u5176\u4ed6 cpp \u4e2d\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u4e0d\u9700\u8981\u58f0\u660e\u3002 \u53e6\u5916\uff0c\u7f16\u8bd1\u5668\u80fd\u591f\u8bc6\u522b int add(int) \u548c int add(int x) \u4e3a\u540c\u4e00\u4e2a\u51fd\u6570\uff0c\u540d\u5b57\u548c\u5f62\u53c2\u7c7b\u578b\u4e00\u6837\u5c31\u662f\u4e00\u4e2a\u51fd\u6570\u3002 \u66f4\u8fdb\u4e00\u6b65\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // func.cpp int x = 0 ; int add ( int a ) { x += a ; return x ; } // main.cpp int x = 10 ; int add ( int ); int main () { add ( 1 ); return 0 ; } \u6211\u7684\u4e24\u4e2a x \u5b9a\u4e49\u5728\u4e24\u4e2a cpp \u91cc\uff0c\u4e14\u5bf9\u4e8e\u5404\u81ea\u7684 cpp \u800c\u8a00\u800c\u8a00\u4ed6\u4eec\u90fd\u662f\u975e static \u7684\uff0c\u6545\u800c\u4f1a multi-definition\u3002 \u7ed3\u8bba\uff1a\u5bf9\u4e8e\u5934\u6587\u4ef6\uff0c\u5c3d\u91cf\u53ea\u58f0\u660e\u51fd\u6570\u800c\u4e0d\u5b9e\u73b0\u51fd\u6570\u3002\u5c3d\u91cf\u53ea\u58f0\u660e\u5168\u5c40\u53d8\u91cf\u800c\u4e0d\u5b9a\u4e49\u5168\u5c40\u53d8\u91cf\u3002 \u5168\u5c40\u53d8\u91cf\u4e0e\u5c40\u90e8\u53d8\u91cf \u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf\u662f\u4ece\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u7684\u89d2\u5ea6\u5212\u5206\u3002\u9759\u6001\u53d8\u91cf\u548c\u52a8\u6001\u53d8\u91cf\u662f\u4ece\u53d8\u91cf\u7684\u5185\u5b58\u5206\u914d\u7684\u89d2\u5ea6\u5212\u5206\u3002 \u5168\u5c40\u53d8\u91cf\u672c\u8eab\u662f\u975e\u9759\u6001\u5b58\u50a8\u65b9\u5f0f\uff0c\u9759\u6001\u5168\u5c40\u53d8\u91cf\u662f\u9759\u6001\u5b58\u50a8\u65b9\u5f0f\u3002\u8fd9\u4e24\u8005\u5728\u5b58\u50a8\u65b9\u5f0f\u4e0a\u5e76\u65e0\u4e0d\u540c\uff0c\u533a\u522b\u5728\u4e8e\u975e\u9759\u6001\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u662f\u6574\u4e2a\u6e90\u7a0b\u5e8f\uff0c\u5f53\u4e00\u4e2a\u6e90\u7a0b\u5e8f\u7531\u591a\u4e2a\u6e90\u6587\u4ef6\u7ec4\u6210\u65f6\uff0c\u975e\u9759\u6001\u7684\u5168\u5c40\u53d8\u91cf\u5728\u5404\u4e2a\u6e90\u6587\u4ef6\uff08\u6240\u6709\u7684 cpp \u6587\u4ef6\uff09\u4e2d\u90fd\u662f\u6709\u6548\u7684\u3002\u800c\u9759\u6001\u5168\u5c40\u53d8\u91cf\u5219\u9650\u5236\u4e86\u5176\u4f5c\u7528\u57df\uff0c\u5373\u53ea\u5728\u5b9a\u4e49\u8be5\u53d8\u91cf\u7684\u6e90\u6587\u4ef6\uff08\u67d0\u4e2a cpp \u6587\u4ef6\uff09\u5185\u6709\u6548\uff0c\u5728\u540c\u4e00\u6e90\u7a0b\u5e8f\u7684\u5176\u5b83\u6e90\u6587\u4ef6\u4e2d\u4e0d\u80fd\u4f7f\u7528\u5b83\u3002\uff08\u5177\u4f53\u89e3\u91ca\u662f\u9759\u6001\u5168\u5c40\u53d8\u91cf\u4ec5\u4ec5\u5185\u90e8\u53ef\u94fe\u63a5\uff09 \u5185\u90e8\u53ef\u94fe\u63a5\u4e0e\u5916\u90e8\u53ef\u94fe\u63a5 \u7f16\u8bd1\u5355\u5143\uff1a\u7b80\u5355\u6765\u8bf4\u4e00\u4e2a cpp \u6587\u4ef6\u5c31\u662f\u4e00\u4e2a\u7f16\u8bd1\u5355\u5143\u3002\u5f53\u4e00\u4e2a .c \u6216 .cpp \u6587\u4ef6\u5728\u7f16\u8bd1\u65f6\uff0c\u9884\u5904\u7406\u5668\u9996\u5148\u9012\u5f52\u5305\u542b\u5934\u6587\u4ef6\uff0c\u5f62\u6210\u4e00\u4e2a\u542b\u6709\u6240\u6709\u5fc5\u8981\u4fe1\u606f\u7684\u5355\u4e2a\u6e90\u6587\u4ef6\uff0c\u8fd9\u4e2a\u6e90\u6587\u4ef6\u5c31\u662f\u4e00\u4e2a\u7f16\u8bd1\u5355\u5143\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u7f16\u8bd1\u6bcf\u4e2a\u7f16\u8bd1\u5355\u5143\u65f6\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff0c\u5373\u6bcf\u4e2a cpp \u6587\u4ef6\u4e4b\u95f4\u662f\u4e0d\u77e5\u9053\u5bf9\u65b9\u7684\u5b58\u5728\u7684\u3002\uff08\u4e0d\u8003\u8651 #include \"xxx.cpp\" \u8fd9\u79cd\u5947\u8469\u7684\u5199\u6cd5\uff09\u7f16\u8bd1\u5668\u4f1a\u5206\u522b\u5c06\u6bcf\u4e2a\u7f16\u8bd1\u5355\u5143\u8fdb\u884c\u7f16\u8bd1\uff0c\u751f\u6210\u76f8\u5e94\u7684 .o \u6587\u4ef6\u3002\u7136\u540e\u94fe\u63a5\u5668\u4f1a\u5c06\u6240\u6709\u7684 .o \u6587\u4ef6\u8fdb\u884c\u94fe\u63a5\uff0c\u751f\u6210\u6700\u7ec8\u53ef\u6267\u884c\u6587\u4ef6\u3002 \u6211\u4eec\u77e5\u9053 C++ \u4e2d\u58f0\u660e\u548c\u5b9a\u4e49\u53ef\u4ee5\u5206\u5f00\u3002\u4f8b\u5982\u6211\u4eec\u53ef\u4ee5\u4e00\u4e2a\u51fd\u6570\u58f0\u660e\u5b9a\u4e49\u653e\u5728 b.cpp \u4e2d\uff0c\u5728 a.cpp \u53ea\u9700\u518d\u58f0\u660e\u4e00\u4e0b\u8fd9\u4e2a\u51fd\u6570\uff0c\u5c31\u53ef\u4ee5\u5728 a.cpp \u4e2d\u4f7f\u7528\u8fd9\u4e2a\u51fd\u6570\u3002\u4f8b\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 // a.cpp void show (); int main () { show (); return 0 ; } // b.cpp #include <iostream> void show () { std :: cout << \"Hello\" << std :: endl ; } \u800c\u901a\u8fc7\u4e4b\u524d\u7684\u4e86\u89e3\uff0c\u6211\u4eec\u77e5\u9053\u6bcf\u4e2a\u7f16\u8bd1\u5355\u5143\u95f4\u662f\u76f8\u4e92\u72ec\u7acb\u4e0d\u77e5\u9053\u5f7c\u6b64\u7684\u5b58\u5728\u7684\u3002\u90a3\u4e48 a.cpp \u53c8\u662f\u5982\u4f55\u77e5\u9053 show \u51fd\u6570\u7684\u5b9a\u4e49\u7684\u5462\uff1f \u5176\u5b9e\u5728\u7f16\u8bd1\u4e00\u4e2a\u7f16\u8bd1\u5355\u5143\u751f\u6210\u76f8\u5e94\u7684 .o \u6587\u4ef6\u8fc7\u7a0b\u4e2d\uff0c\u7f16\u8bd1\u5668\u4f1a\u5c06\u5206\u6790\u8fd9\u4e2a\u7f16\u8bd1\u5355\u5143\uff0c\u5c06\u5176\u6240\u80fd\u63d0\u4f9b\u7ed9\u5176\u4ed6\u7f16\u8bd1\u5355\u5143\u4f7f\u7528\u7684\u51fd\u6570\uff0c\u53d8\u91cf\u5b9a\u4e49\u8bb0\u5f55\u4e0b\u6765\u3002\u800c\u5c06\u81ea\u5df1\u7f3a\u5c11\u7684\u51fd\u6570\uff0c\u53d8\u91cf\u7684\u5b9a\u4e49\u4e5f\u8bb0\u5f55\u4e0b\u6765\u3002\u6240\u4ee5\u53ef\u4ee5\u8ba4\u4e3a a.o \u548c b.o \u8bb0\u5f55\u4e86\u4ee5\u4e0b\u7684\u4fe1\u606f\uff1a a.o \uff1a\u6211\u80fd\u63d0\u4f9b main \u51fd\u6570\u7684\u5b9a\u4e49\uff0c\u6211\u9700\u8981 show \u51fd\u6570\u7684\u5b9a\u4e49 b.o \uff1a\u6211\u80fd\u63d0\u4f9b show \u51fd\u6570\u7684\u5b9a\u4e49 \u7136\u540e\u5728\u94fe\u63a5\u5668\u8fde\u63a5\u7684\u65f6\u5019\u5c31\u4f1a\u77e5\u9053 a.o \u9700\u8981 show \u51fd\u6570\u5b9a\u4e49\uff0c\u800c b.o \u4e2d\u6070\u597d\u63d0\u4f9b\u4e86 show \u51fd\u6570\u7684\u5b9a\u4e49\uff0c\u901a\u8fc7\u94fe\u63a5\uff0c\u5728\u6700\u7ec8\u7684\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\u6211\u4eec\u80fd\u770b\u5230 show \u51fd\u6570\u7684\u8fd0\u884c\u3002 \u5185\u90e8\u8fde\u63a5\uff1a\u5982\u679c\u4e00\u4e2a\u540d\u79f0\u5bf9\u7f16\u8bd1\u5355\u5143\u6765\u8bf4\u662f\u5c40\u90e8\u7684\uff0c\u5728\u94fe\u63a5\u7684\u65f6\u5019\u5176\u4ed6\u7684\u7f16\u8bd1\u5355\u5143\u65e0\u6cd5\u94fe\u63a5\u5230\u5b83\u4e14\u4e0d\u4f1a\u4e0e\u5176\u5b83\u7f16\u8bd1\u5355\u5143\u4e2d\u7684\u540c\u6837\u7684\u540d\u79f0\u76f8\u51b2\u7a81\u3002\u4f8b\u5982 static \u51fd\u6570\uff0c inline \u51fd\u6570\u7b49\uff08\u6ce8\uff1a\u7528 static \u4fee\u9970\u7684\u51fd\u6570\uff0c\u672c\u9650\u5b9a\u5728\u672c\u6e90\u7801\u6587\u4ef6\u4e2d\uff0c\u4e0d\u80fd\u88ab\u672c\u6e90\u7801\u6587\u4ef6\u4ee5\u5916\u7684\u4ee3\u7801\u6587\u4ef6\u8c03\u7528\u3002\u800c\u666e\u901a\u7684\u51fd\u6570\uff0c\u9ed8\u8ba4\u662f extern \u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u53ef\u4ee5\u88ab\u5176\u5b83\u4ee3\u7801\u6587\u4ef6\u8c03\u7528\u8be5\u51fd\u6570\uff09 \u5916\u90e8\u8fde\u63a5\uff1a\u5982\u679c\u4e00\u4e2a\u540d\u79f0\u5bf9\u7f16\u8bd1\u5355\u5143\u6765\u8bf4\u4e0d\u662f\u5c40\u90e8\u7684\uff0c\u800c\u5728\u94fe\u63a5\u7684\u65f6\u5019\u5176\u4ed6\u7684\u7f16\u8bd1\u5355\u5143\u53ef\u4ee5\u8bbf\u95ee\u5b83\uff0c\u4e5f\u5c31\u662f\u8bf4\u5b83\u53ef\u4ee5\u548c\u522b\u7684\u7f16\u8bd1\u5355\u5143\u4ea4\u4e92\u3002\u4f8b\u5982\u975e\u9759\u6001\u5168\u5c40\u53d8\u91cf\u5c31\u662f\u5916\u90e8\u94fe\u63a5\u3002 static \u6570\u636e\u6210\u5458\uff08\u7c7b\u53d8\u91cf\uff09 \u00b6 \u58f0\u660e\u3001\u5b9a\u4e49\u3001\u521d\u59cb\u5316\u3001\u8d4b\u503c \u58f0\u660e\uff08\u82f1\u8bed\uff1aDeclaration\uff09\u6307\u5b9a\u4e86\u4e00\u4e2a\u53d8\u91cf\u7684\u6807\u8bc6\u7b26\uff0c\u7528\u6765\u63cf\u8ff0\u53d8\u91cf\u7684\u79cd\u7c7b\uff0c\u662f\u7c7b\u578b\u8fd8\u662f\u5bf9\u8c61\uff0c\u6216\u8005\u51fd\u6570\u7b49\u3002\u58f0\u660e\uff0c\u7528\u4e8e\u7f16\u8bd1\u5668\u8bc6\u522b\u53d8\u91cf\u540d\u6240\u5f15\u7528\u7684\u5b9e\u4f53\u3002 \u5e7f\u4e49\u7684\u89d2\u5ea6\u4e0a\u6765\u8bb2\u5b9a\u4e49\u662f\u58f0\u660e\u7684\u7279\u4f8b\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u628a\u5206\u914d\u4e86\u5185\u5b58\u7a7a\u95f4\u7684\u58f0\u660e\u79f0\u4f5c\u5b9a\u4e49\uff0c\u4e0d\u9700\u8981\u5b58\u50a8\u7a7a\u95f4\u7684\u58f0\u660e\u79f0\u4f5c\u58f0\u660e\u3002 \u5bf9\u4e8e\u5168\u5c40\u53d8\u91cf\uff0c int a \u662f\u5b9a\u4e49\u6027\u58f0\u660e\uff0c\u6216\u79f0\u5b9a\u4e49\u3002 extern int a \u662f\u5f15\u7528\u6027\u58f0\u660e\u3002\u5bf9\u4e8e .h \u6587\u4ef6\u91cc\u7684 class \uff0c\u4ec5\u4ec5 static int x \u662f\u58f0\u660e\uff08\u6ca1\u6709\u5206\u914d\u5185\u5b58\u7a7a\u95f4\uff09\u3002\u5982\u679c\u5728 class \u91cc\u5c31\u5199\u4e0a static int x = 0 \uff08\u5c31\u5730\u521d\u59cb\u5316\uff09\uff0c\u8fd9\u91cc\u65e2\u5b8c\u6210\u4e86\u58f0\u660e\uff0c\u53c8\u5b8c\u6210\u4e86\u5b9a\u4e49\uff08\u5206\u914d\u4e86\u5185\u5b58\u7a7a\u95f4\uff09\uff0c\u4f46\u662f\u8fd9\u4e48\u5199\u4e0d\u89c4\u8303\uff0c\u5927\u591a\u7f16\u8bd1\u5668\u90fd\u4f1a\u62a5\u9519\u3002 extern int a \u53ea\u80fd\u5168\u5c40\u53d8\u91cf\u7528\uff0c\u53ea\u58f0\u660e\u4f46\u662f\u4e0d\u5206\u914d\u3002\u4f46\u662f\u5168\u5c40\u53d8\u91cf int a \u65e2\u5b8c\u6210\u4e86\u58f0\u660e\u4e5f\u5b8c\u6210\u4e86\u5b9a\u4e49\uff0c\u7f16\u8bd1\u5668\u9ed8\u8ba4\u8d4b\u503c\u4e3a 0 \u3002\u5bf9\u4e8e class \uff0c static int a \u5c31\u8d77\u5230\u4e86\u53ea\u58f0\u660e\u4e0d\u5206\u914d\uff08\u4e5f\u5c31\u662f\u53ea\u58f0\u660e\u4e0d\u5b9a\u4e49\uff09\u7684\u4f5c\u7528\u3002 \u521d\u59cb\u5316\u548c\u5b9a\u4e49\u7684\u610f\u4e49\u76f8\u8fd1\uff0c\u5e7f\u4e49\u4e0a\u5c06\u5c31\u662f\u5206\u914d\u4e86\u50a8\u5b58\u7a7a\u95f4\u5e76\u5b8c\u6210\u4e86\u8d4b\u521d\u59cb\u503c\u3002\u800c\u8d4b\u503c\u5c31\u662f\u7ed9\u5df2\u7ecf\u5b8c\u6210\u5b9a\u4e49\u7684\u5185\u5b58\u7a7a\u95f4\u8d4b\u503c\u3002 \u9759\u6001\u6570\u636e\u6210\u5458\u5b9a\u4e49\u4e0e\u57fa\u672c\u6027\u8d28 \u4f7f\u7528 static \u4fee\u9970\u7684\u6570\u636e\u6210\u5458\uff0c\u662f\u96b6\u5c5e\u4e8e\u7c7b\u7684\uff0c\u79f0\u4e3a\u7c7b\u7684\u9759\u6001\u6570\u636e\u6210\u5458\uff0c\u4e5f\u79f0 \u7c7b\u53d8\u91cf \u3002\u8be5\u6570\u636e\u6210\u5458\u88ab\u8be5\u7c7b\u7684\u6240\u6709\u5bf9\u8c61\u5171\u4eab\uff0c\u5373\u6240\u6709\u5bf9\u8c61\u4e2d\u7684\u8fd9\u4e2a\u6570\u636e\u57df\u5904\u5728\u540c\u4e00\u5185\u5b58\u4f4d\u7f6e\uff0c\u5728\u7c7b\u5b9e\u4f8b\u5316\u5bf9\u8c61\u524d\u5df2\u5206\u914d\u5185\u5b58\u7a7a\u95f4\u3002 \u7c7b\u7684\u9759\u6001\u6210\u5458\uff08\u6570\u636e\u3001\u51fd\u6570\uff09\u65e2\u53ef\u4ee5\u901a\u8fc7\u5bf9\u8c61\u6765\u8bbf\u95ee\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7c7b\u540d\u6765\u8bbf\u95ee\uff0c\u5982 ClassName::static_var \u6216\u8005 a.static_var \uff08 a \u4e3a ClassName \u7c7b\u7684\u5bf9\u8c61\uff09\u3002 \u7c7b\u7684\u9759\u6001\u6210\u5458\u5728\u5b9e\u73b0\u6587\u4ef6\u4e2d\u8d4b\u521d\u503c\uff0c\u683c\u5f0f\u4e3a Type ClassName::static_var = Value \u3002 \u548c\u5168\u5c40\u53d8\u91cf\u4e00\u6837\uff0c\u7c7b\u7684\u9759\u6001\u6570\u636e\u6210\u5458\u5728\u7a0b\u5e8f\u5f00\u59cb\u524d\u521d\u59cb\u5316\u3002\u5e94\u8be5\u5728 .h \u6587\u4ef6\u91cc\u58f0\u660e\uff08\u4e0d\u5206\u914d\u5185\u5b58\u7a7a\u95f4\uff09\uff0c\u5728 .cpp \u6587\u4ef6\u91cc\u5b9a\u4e49\uff08\u5206\u914d\u5185\u5b58\u7a7a\u95f4\u4e14\u521d\u59cb\u5316\uff09\u3002 \u6700\u597d\u4e0d\u8981\u5728 .h \u6587\u4ef6\u91cc\u5b9a\u4e49\uff08\u4e5f\u5c31\u662f\u5199 static int x = 0 \uff09\u3002\u5982\u679c\u8fd9\u4e48\u505a\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u91cd\u590d\u5b9a\u4e49\uff08\u91cd\u590d\u5206\u914d\u5185\u5b58\u7a7a\u95f4\uff09\uff0c\u6545\u800c\u8fd9\u4e48\u5199\u4e0d\u592a\u597d\u3002\u53ef\u80fd\u9020\u6210\u91cd\u5b9a\u4e49\u800c\u65e0\u6cd5\u5b8c\u6210\u94fe\u63a5\uff0c\u7f16\u8bd1\u5931\u8d25\u3002 \u4f8b\u5b50 \u8fd9\u4e2a\u4f8b\u5b50\u7684\u610f\u4e49\uff1a\u6ce8\u610f\u5230\u6211\u901a\u8fc7\u6784\u9020\u51fd\u6570\u6784\u9020\u4e86\u4e2a Test \u6570\u7ec4\uff0c\u542b\u6709 10 \u4e2a\u5bf9\u8c61\uff0c\u6bcf\u8c03\u7528\u4e00\u6b21\u6784\u9020\u51fd\u6570\u5c31\u4f1a\u7ed9 count++ \uff0c\u4ece\u800c\u52a0\u4e86 10 \u6b21\u3002\uff08\u8fd9\u5176\u5b9e\u4e5f\u4f53\u73b0\u4e86 static \u6570\u636e\u662f\u6574\u4e2a\u7c7b\u5171\u4eab\u7684\uff09 static \u6210\u5458\u51fd\u6570 \u00b6 \u5b9a\u4e49\u4e0e\u57fa\u672c\u6027\u8d28 \u5728\u8fd4\u56de\u503c\u524d\u9762\u6dfb\u52a0 static \u4fee\u9970\u7684\u6210\u5458\u51fd\u6570\uff0c\u79f0\u4e3a\u7c7b\u7684\u9759\u6001\u6210\u5458\u51fd\u6570\u3002 \u548c\u9759\u6001\u6570\u636e\u6210\u5458\u7c7b\u4f3c\uff0c\u7c7b\u7684\u9759\u6001\u6210\u5458\u51fd\u6570\u65e2\u53ef\u4ee5\u901a\u8fc7\u5bf9\u8c61\u6765\u8bbf\u95ee\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7c7b\u540d\u6765\u8bbf\u95ee\uff0c\u5982 ClassName::static_function \u6216\u8005 a.static_function \uff08 a \u4e3a ClassName \u7c7b\u7684\u5bf9\u8c61\uff09\u3002 \u9759\u6001\u6210\u5458\u51fd\u6570\u5c5e\u4e8e\u6574\u4e2a\u7c7b\uff0c\u5728\u7c7b\u5b9e\u4f8b\u5316\u5bf9\u8c61\u4e4b\u524d\u5df2\u7ecf\u5206\u914d\u4e86\u5185\u5b58\u7a7a\u95f4\u3002 \u7c7b\u7684\u975e\u9759\u6001\u6210\u5458\u5fc5\u987b\u5728\u7c7b\u5b9e\u4f8b\u5316\u5bf9\u8c61\u540e\u624d\u5206\u914d\u5185\u5b58\u7a7a\u95f4\u3002\u5982\u679c\u4f7f\u7528\u9759\u6001\u6210\u5458\u51fd\u6570\u8bbf\u95ee\u975e\u9759\u6001\u6210\u5458\uff0c\u76f8\u5f53\u4e8e\u6ca1\u6709\u5b9a\u4e49\u4e00\u4e2a\u53d8\u91cf\u5374\u8981\u4f7f\u7528\u5b83\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #include <iostream> using namespace std ; class A { int data ; public : static void output () { cout << data << endl ; // \u7f16\u8bd1\u9519\u8bef } }; int main () { A a ; a . output (); return 0 ; } \u770b\u4e0a\u53bb output \u5c06\u4f1a\u8f93\u51fa a \u7684 data \uff0c\u800c\u4e14 a \u5df2\u7ecf\u521d\u59cb\u5316\u4e86\uff0c\u8c8c\u4f3c\u53ef\u4ee5\u8f93\u51fa\u3002\u4f46\u662f\u7531\u4e8e static \u6210\u5458\u51fd\u6570\u6ca1\u6709 this \u6307\u9488\uff0c\u6545\u800c output \u6ca1\u6cd5\u5f97\u77e5\u8f93\u51fa\u7684\u662f this->data \uff0c\u4ece\u800c\u7f16\u8bd1\u5931\u8d25\u3002 \u4f46\u662f\u9759\u6001\u6210\u5458\u51fd\u6570\u662f\u53ef\u4ee5\u4fee\u6539\u9759\u6001\u6570\u636e\u6210\u5458\u7684\uff0c\u6bd4\u5982\u8fd9\u6bb5\u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 9 class Test { const int member1 ; static float member2 ; public : Test ( int mem ) : member1 ( mem ) { } int MyMember1 () const { return member1 ; } static float Mymember2 () { return member2 ; } }; float Test :: member2 = 0 ; \u8fd9\u91cc Mymember2 \u662f\u53ef\u4ee5\u8bbf\u95ee member2 \u7684\uff0c\u56e0\u4e3a member2 \u662f\u9759\u6001\u6570\u636e\u6210\u5458\u3002 \u4e0e\u9759\u6001\u6570\u636e\u6210\u5458\u6709\u533a\u522b\u7684\u662f\uff0c\u9759\u6001\u6210\u5458\u51fd\u6570\u53ef\u4ee5\u5728 .h \u4e2d\u5b9e\u73b0\u3002\uff08\u53ef\u4ee5\u4f46\u662f\u4e0d\u63a8\u8350\uff0c\u5fd7\u613f\u8005\u8bf4\u5e0c\u671b\u5b9e\u73b0\u90fd\u653e\u5230\u76f8\u5e94\u7684 .cpp \u91cc\u9762\uff09 \u5e38\u91cf\u6570\u636e\u6210\u5458\u4e0e\u51fd\u6570 \u00b6 \u5e38\u91cf \u00b6 \u5b9a\u4e49 \u5e38\u91cf\u5173\u952e\u5b57 const \u5e38\u7528\u4e8e\u4fee\u9970\u53d8\u91cf\u3001\u5f15\u7528\u3001\u6307\u9488\u3001\u51fd\u6570\u8fd4\u56de\u503c\u3002 \u6027\u8d28 \u4fee\u9970\u53d8\u91cf\u65f6\uff08\u5982 const int n = 1 \uff09\uff0c\u5fc5\u987b\u5c31\u5730\u521d\u59cb\u5316\uff0c\u8be5\u53d8\u91cf\u7684\u503c\u5728\u5176\u751f\u547d\u5468\u671f\u5185\u90fd\u4e0d\u4f1a\u53d1\u751f\u53d8\u5316\u3002\u4fee\u9970\u5f15\u7528\u3001\u6307\u9488\u65f6\uff08\u5982 int a = 1; const int& b = a \uff09\uff0c\u4e0d\u80fd\u901a\u8fc7\u8be5\u5f15\u7528\u3001\u6307\u9488\u4fee\u6539\u76f8\u5e94\u53d8\u91cf\u7684\u503c\uff0c\u5e38\u7528\u4e8e\u51fd\u6570\u53c2\u6570\u4ee5\u4fdd\u8bc1\u51fd\u6570\u4f53\u4e2d\u65e0\u6cd5\u4fee\u6539\u53c2\u6570\u7684\u503c\u3002\u4fee\u9970\u51fd\u6570\u8fd4\u56de\u503c\u65f6\uff08\u5982 const int* func() { } \uff09\uff0c\u51fd\u6570\u8fd4\u56de\u503c\u7684\u5185\u5bb9\uff08\u6216\u5176\u6307\u5411\u7684\u5185\u5bb9\uff09\u4e0d\u80fd\u88ab\u4fee\u6539\u3002 \u5e38\u91cf\u6570\u636e\u6210\u5458 \u00b6 \u5b9a\u4e49 \u4f7f\u7528 const \u4fee\u9970\u7684\u6570\u636e\u6210\u5458\uff0c\u79f0\u4e3a\u7c7b\u7684\u5e38\u91cf\u6570\u636e\u6210\u5458\uff0c\u5728\u5bf9\u8c61\uff08\u5177\u4f53\u67d0\u4e2a\u5bf9\u8c61\uff0c\u800c\u975e\u4e00\u4e2a\u7c7b\u5171\u6709\uff09\u7684\u6574\u4e2a\u751f\u547d\u5468\u671f\u91cc\u4e0d\u53ef\u66f4\u6539\u3002 \u521d\u59cb\u5316 \u6784\u9020\u51fd\u6570\u7684\u521d\u59cb\u5316\u5217\u8868\u4e2d\u88ab\u521d\u59cb\u5316\uff0c\u5c31\u5730\u521d\u59cb\u5316\uff0c\u4f46\u662f\u4e0d\u5141\u8bb8\u5728\u6784\u9020\u51fd\u6570\u7684\u51fd\u6570\u4f53\u4e2d\u901a\u8fc7\u8d4b\u503c\u6765\u8bbe\u7f6e\u3002 \u5bf9\u201c\u4e0d\u80fd\u8d4b\u503c\u201d\u7684\u7406\u89e3 \u4e3a\u4ec0\u4e48\u4e0d\u80fd\u5728\u6784\u9020\u51fd\u6570\u91cc\u9762\u521d\u59cb\u5316\u5e38\u91cf\uff1f \u6784\u9020\u51fd\u6570\u4e5f\u662f\u51fd\u6570\uff0c\u5e38\u91cf\u7684\u610f\u601d\u5c31\u662f\u51fd\u6570\u4e0d\u53ef\u4ee5\u6539\u3002\u2014\u2014 cqq \u5e38\u91cf\u53ea\u80fd\u5b9a\u4e49\u4e0d\u80fd\u8d4b\u503c\uff0c\u5728\u4efb\u4f55\u51fd\u6570\u4f53\u91cc\u7684\u90fd\u7b97\u662f\u8d4b\u503c\u8bed\u53e5\uff0c\u6784\u9020\u51fd\u6570\u4f53\u4e5f\u7b97\u3002\u2014\u2014 cyd \u5f53\u6267\u884c\u5230\u6784\u9020\u51fd\u6570\u7684\u51fd\u6570\u4f53\u91cc\u7684\u65f6\u5019\uff0c\u5b9e\u4f8b\u5df2\u7ecf\u6784\u9020\u5b8c\u6210\u4e86\uff08 this \u6307\u9488\u5df2\u7ecf\u5b58\u5728\uff09\uff0c\u8fd9\u65f6\u5c31\u53ea\u80fd\u4fee\u6539\u5b83\u7684\u4e00\u4e9b\u975e const \u5c5e\u6027\u4e86\u3002\u2014\u2014 \u5355\u5e26\u5e08 \u5e38\u91cf\u6210\u5458\u51fd\u6570 \u00b6 \u5b9a\u4e49 \u6210\u5458\u51fd\u6570\u4e5f\u80fd\u7528 const \u6765\u4fee\u9970\uff0c\u79f0\u4e3a\u5e38\u91cf\u6210\u5458\u51fd\u6570\u3002 \u610f\u4e49 \u5b9e\u73b0\u8bed\u53e5\u4e0d\u80fd\u4fee\u6539\u7c7b\u7684\u6570\u636e\u6210\u5458\uff0c\u5373\u4e0d\u80fd\u6539\u53d8\u5bf9\u8c61\u72b6\u6001\uff08\u5185\u5bb9\uff09\u3002 \u975e\u5e38\u91cf\u5bf9\u8c61\u7684\u5e38\u91cf\u6210\u5458\u51fd\u6570\u4e0d\u80fd\u8bbf\u95ee\u4e0d\u4fee\u6539\u5bf9\u8c61\u72b6\u6001\u7684\u975e\u5e38\u91cf\u6210\u5458\u51fd\u6570\u3002 \u6240\u8c13\u5e38\u91cf\u6210\u5458\u51fd\u6570\u4e0d\u80fd\u4fee\u6539\u7c7b\u7684\u6570\u636e\u6210\u5458\uff0c\u8fd9\u53e5\u8bdd\u662f\u5bf9\u7684\uff0c\u4f46\u662f\u8fd9\u53e5\u8bdd\u6709\u5f88\u591a\u95ee\u9898\u3002\u9996\u5148\uff0c\u5b9e\u9645\u4e0a A \u7c7b a \u5bf9\u8c61\u7684\u5e38\u91cf\u6210\u5458\u51fd\u6570\u4e0d\u80fd\u4fee\u6539 a \u7684\u6240\u6709\u6210\u5458\u6570\u636e\uff0c\u4f46\u662f\u53ef\u4ee5\u4fee\u6539 A \u7c7b\u7684\u9759\u6001\u6570\u636e\u6210\u5458\uff0c\u751a\u81f3\u8fd8\u53ef\u4ee5\u4fee\u6539 A \u7c7b\u53e6\u5916\u4e00\u4e2a b \u5bf9\u8c61\u7684\u6210\u5458\u6570\u636e\uff0c\u5c31\u53ea\u662f\u4e0d\u80fd\u4fee\u6539\u72ec\u5c5e\u4e8e\u81ea\u5df1\u7684\u6210\u5458\u6570\u636e\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 #include <iostream> using namespace std ; class Test { const int member1 ; static float member2 ; public : int zcy = 0 ; Test ( int mem ) : member1 ( mem ) { } int MyMember1 ( Test & a ) const { a . zcy += 100 ; return member1 ; } static float Mymember2 () { return member2 ; } }; float Test :: member2 = 0 ; int main () { Test a ( 0 ), b ( 0 ); a . MyMember1 ( b ); cout << b . zcy << endl ; // 100 return 0 ; } \u5199\u6cd5 \u5e38\u51fd\u6570\u7684\u58f0\u660e\u4e3a\uff1a ReturnType Func() const { } \uff0c\u6ce8\u610f\u4e0e const ReturnType Func() { } \u533a\u522b\u3002 \u540e\u8005\u662f\u8fd4\u56de\u503c\u4e3a\u5e38\u91cf\uff0c\u4e5f\u5c31\u662f\u524d\u6587\u63d0\u53ca\u7684\u201c\u4fee\u9970\u51fd\u6570\u8fd4\u56de\u503c\u65f6\uff08\u5982 const int* func() { } \uff09\uff0c\u51fd\u6570\u8fd4\u56de\u503c\u7684\u5185\u5bb9\uff08\u6216\u5176\u6307\u5411\u7684\u5185\u5bb9\uff09\u4e0d\u80fd\u88ab\u4fee\u6539\u3002\u201d \u5e38\u91cf\u5bf9\u8c61 \u00b6 \u82e5\u5bf9\u8c61\u88ab\u5b9a\u4e49\u4e3a\u5e38\u91cf\uff08 const ClassName a \uff09\uff0c\u5219\u5b83\u53ea\u80fd\u8c03\u7528\u4ee5 const \u4fee\u9970\u7684\u6210\u5458\u51fd\u6570\u4e0e\u9759\u6001\u6210\u5458\u51fd\u6570\u3002\u4e0d\u80fd\u8c03\u7528\u4efb\u4f55\u65e2\u975e\u5e38\u91cf\uff0c\u4e5f\u975e\u9759\u6001\u7684\u51fd\u6570\u3002\u4ee5\u53ca\uff0c\u5e38\u91cf\u5bf9\u8c61\u53ef\u4ee5\u6210\u4e3a\u975e\u5e38\u91cf\u6210\u5458\u51fd\u6570\u7684\u53c2\u6570\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 #include <iostream> using namespace std ; class Test { const int member1 ; static float member2 ; public : int zcy = 0 ; Test ( int mem ) : member1 ( mem ) { } int func1 () { cout << \"\u5f53\u7136\u8c03\u7528\u4e0d\u4e86\" << endl ; return 0 ; } static int func2 () { cout << \"\u8fd9\u4e2a\u8c03\u7528\u7684\u4e86\" << endl ; return 0 ; } int MyMember1 ( Test & a ) const { a . zcy += 100 ; return member1 ; } static float Mymember2 () { return member2 ; } }; float Test :: member2 = 0 ; int main () { Test a ( 0 ), b ( 0 ); const Test c ( 0 ); c . func2 (); // \"\u8fd9\u4e2a\u8c03\u7528\u7684\u4e86\" a . MyMember1 ( b ); cout << b . zcy << endl ; // 100 return 0 ; } \u5e38\u91cf\u9759\u6001\u53d8\u91cf \u00b6 \u5b9a\u4e49 \u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u65e2\u662f\u5e38\u91cf\u4e5f\u662f\u9759\u6001\u7684\u53d8\u91cf\u3002\u5e38\u91cf\u610f\u5473\u7740\u4e0d\u53ef\u6539\uff0c\u9759\u91cf\u610f\u5473\u7740\u7279\u5b9a\u7684\u4f5c\u7528\u533a\u57df\u3002\u6211\u4eec\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5b9a\u4e49\u5e38\u91cf\u9759\u6001\u6210\u5458\u6570\u636e\uff0c\u4f5c\u4e3a\u4e0d\u53ef\u66f4\u6539\u7684\u7c7b\u53d8\u91cf\u3002 \u5b9a\u4e49\u65b9\u6cd5 \u548c\u9759\u6001\u53d8\u91cf\u4e00\u6837\uff0c\u5728\u7c7b\u5185\u53ea\u8fdb\u884c\u58f0\u660e\uff08\u4e0d\u5206\u914d\u7a7a\u95f4\uff09\uff0c\u5728 .cpp \u91cc\u624d\u5b9a\u4e49\uff08\u5b8c\u6210\u5185\u5b58\u5206\u914d\u5e76\u8d4b\u521d\u503c\uff09\u3002\u56de\u987e\uff0c static \u6210\u5458\u6570\u636e\u8981\u5728 cpp \u91cc\u58f0\u660e\uff0c\u5728 .h \u91cc\u5b9a\u4e49\uff1b\u800c const \u7c7b\u578b\u8981\u5728\u521d\u59cb\u5316\u5217\u8868\u91cc\u521d\u59cb\u5316\u6216\u8005\u5c31\u5730\u521d\u59cb\u5316\u3002 \u5199\u6210 const static \u548c static const \u6ca1\u6709\u533a\u522b\u3002 \u6709\u4e24\u4e2a\u4f8b\u5916\uff1a int \u548c enum \uff08\u679a\u4e3e\u578b\uff09\u7c7b\u578b\u53ef\u4ee5\u5c31\u5730\u521d\u59cb\u5316\uff08\u4f46\u4e5f\u4e0d\u63a8\u8350\u8fd9\u4e48\u5199\uff09\u3002\u6545\u800c\uff0c\u9759\u6001\u6570\u636e\u6210\u5458\u5fc5\u987b\u5728\u7c7b\u5916\u5b9a\u4e49\uff0c\u4f46\u662f\u5e38\u91cf\u9759\u6001\u6570\u636e\u6210\u5458\u4e2d int \u548c enum \uff08\u679a\u4e3e\u578b\uff09\u7c7b\u578b\u53ef\u4ee5\u5c31\u5730\u521d\u59cb\u5316\u3002 \u6545\u800c\u5224\u65ad\u9898\uff1a\u5e38\u91cf\u9759\u6001\u7684\u6210\u5458\u53d8\u91cf\u53ea\u80fd\u5728\u7c7b\u5916\u8fdb\u884c\u521d\u59cb\u5316\u3002\u662f\u9519\u7684\uff0c\u8fd9\u4e0d\u662f\u201c\u4f60\u53ef\u4ee5\u5728\u7c7b\u5185\u5199\uff0c\u4f46\u662f\u4e0d\u63a8\u8350\u201d\u8fd9\u610f\u601d\uff0c\u800c\u662f\u5f3a\u8c03\u4e86\u4e24\u4e2a\u7279\u4f8b\u3002 \u8bbf\u95ee\u6743\u9650 \u5e38\u91cf\u9759\u6001\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf\u4e00\u6837\uff0c\u6ee1\u8db3\u8bbf\u95ee\u6743\u9650\u7684\u4efb\u610f\u51fd\u6570\u5747\u53ef\u8bbf\u95ee\uff0c\u4f46\u7531\u4e8e const \u7684\u4fee\u9970\u90fd\u4e0d\u80fd\u4fee\u6539\u3002 \u5e38\u91cf\u9759\u6001\u51fd\u6570\u4e0d\u5b58\u5728 \u00b6 \u5e38\u91cf\u6210\u5458\u51fd\u6570\u4f9d\u8d56\u4e8e\u5177\u4f53\u7684\u5bf9\u8c61\uff0c\u4e0d\u80fd\u4fee\u6539\u5bf9\u8c61\u7684\u6570\u636e\u6210\u5458\u3002\u9759\u6001\u6210\u5458\u51fd\u6570\u4e0d\u4f9d\u8d56\u4e8e\u5bf9\u8c61\uff0c\u5b83\u5c5e\u4e8e\u6574\u4e2a\u7c7b\uff0c\u53ea\u80fd\u8c03\u7528\u9759\u6001\u6210\u5458\u3002\u6545\u800c\u5bf9\u4e8e\u51fd\u6570\u800c\u8a00\uff0c\u5e38\u91cf\u548c\u9759\u6001\u662f\u77db\u76fe\u7684\u3002 \u91cd\u8f7d\u5339\u914d\u6027 \u00b6 \u5e38\u91cf\u6210\u5458\u51fd\u6570\u548c\u975e\u5e38\u91cf\u6210\u5458\u51fd\u6570\u6784\u6210\u91cd\u8f7d\u65f6\uff0c\u4f20\u5165\u4e24\u51fd\u6570\u7684\u53c2\u6570\u4e2d this \u6307\u9488\u7684\u7c7b\u578b\u4e0d\u540c\u3002\u5e38\u91cf\u6210\u5458\u51fd\u6570\u7684\u4f20\u5165\u6307\u9488\u7c7b\u578b\u662f const Num* \uff0c\u800c\u975e\u5e38\u91cf\u6210\u5458\u51fd\u6570\u7684\u4f20\u5165\u6307\u9488\u7c7b\u578b\u662f Num* \uff0c\u6240\u4ee5\u975e\u5e38\u91cf\u5bf9\u8c61\u4f1a\u4f18\u5148\u5339\u914d\u975e\u5e38\u91cf\u6210\u5458\u51fd\u6570\uff0c\u800c\u4e0d\u662f\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\uff0c\u5c06 this \u8f6c\u6362\u4e3a const this \u518d\u4f7f\u7528\u3002 \u6784\u9020\u4e0e\u6790\u6784 \u00b6 \u5e38\u91cf\u5bf9\u8c61\u7684\u6784\u9020\u4e0e\u6790\u6784 \u00b6 \u5e38\u91cf\u5bf9\u8c61\u548c\u975e\u5e38\u91cf\u5bf9\u8c61\u57fa\u672c\u76f8\u540c\u3002 \u5e38\u91cf\u5168\u5c40\u5bf9\u8c61\uff1a\u5728 main() \u51fd\u6570\u8c03\u7528\u4e4b\u524d\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u5728 main() \u51fd\u6570\u6267\u884c\u5b8c return \uff0c\u7a0b\u5e8f\u7ed3\u675f\u65f6\uff0c\u5bf9\u8c61\u88ab\u6790\u6784\u3002 \u5e38\u91cf\u5c40\u90e8\u5bf9\u8c61\uff1a\u5728\u7a0b\u5e8f\u6267\u884c\u5230\u8be5\u5c40\u90e8\u5bf9\u8c61\u7684\u4ee3\u7801\u65f6\u88ab\u521d\u59cb\u5316\u3002\u5728\u5c40\u90e8\u5bf9\u8c61\u751f\u547d\u5468\u671f\u7ed3\u675f\u3001\u5373\u6240\u5728\u4f5c\u7528\u57df\u7ed3\u675f\u540e\u88ab\u6790\u6784\u3002 \u9759\u6001\u5bf9\u8c61\u7684\u6784\u9020\u4e0e\u6790\u6784 \u00b6 \u9759\u6001\u5168\u5c40\u5bf9\u8c61\u7684\u6784\u9020\u4e0e\u6790\u6784\u65f6\u673a\u548c\u666e\u901a\u5168\u5c40\u5bf9\u8c61\u76f8\u540c\uff08\u5373\uff1a\u5728 main() \u8c03\u7528\u524d\u521d\u59cb\u5316\uff0c\u5728 main() \u6267\u884c\u5b8c return \u540e\u88ab\u6790\u6784\uff09\u3002 \u9759\u6001\u5c40\u90e8\u5bf9\u8c61\u5728\u7a0b\u5e8f\u6267\u884c\u5230\u8be5\u9759\u6001\u5c40\u90e8\u5bf9\u8c61\u7684\u4ee3\u7801\u65f6\u88ab\u521d\u59cb\u5316\uff0c\u4f46\u662f\u79bb\u5f00\u4f5c\u7528\u57df\u4e0d\u6790\u6784\u3002\u7b2c\u4e8c\u6b21\u6267\u884c\u5230\u8be5\u5bf9\u8c61\u4ee3\u7801\u65f6\uff0c\u4e0d\u518d\u521d\u59cb\u5316\uff0c\u76f4\u63a5\u4f7f\u7528\u4e0a\u4e00\u6b21\u7684\u5bf9\u8c61\uff08\u8fd9\u91cc\u548c\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u975e\u5e38\u76f8\u4f3c\uff09\u3002 \u5728 main() \u51fd\u6570\u7ed3\u675f\u540e\u88ab\u6790\u6784\u3002 1 2 3 void fun ( int i , int n ) { if ( i >= n ) static A static_obj ( \"static\" ); } \u6bd4\u5982\u8fd9\u6bb5\u4ee3\u7801\uff0c\u867d\u7136\u770b\u4e0a\u53bb\u4f1a\u7ed9 static_obj \u591a\u6b21\u6784\u9020\uff0c\u4f46\u662f\u7531\u4e8e\u5176\u662f\u9759\u6001\u5c40\u90e8\u5bf9\u8c61\uff0c\u6545\u800c\u53ea\u4f1a\u6784\u9020\u4e00\u6b21\u3002\u4e4b\u540e\u6bcf\u6b21\u5229\u7528\u4e0a\u4e00\u6b21\u5269\u4e0b\u90e8\u5206\uff08\u76f8\u5f53\u4e8e\u51fd\u6570\u91cc\u5185\uff0c\u7b2c\u4e00\u6b21\u4ee5\u540e\u7684\u5bf9\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u7684\u6784\u9020\u5931\u6548\uff09\u3002 \u7c7b\u9759\u6001\u5bf9\u8c61\u6784\u9020\u4e0e\u6790\u6784 \u00b6 \u7c7b A \u7684\u5bf9\u8c61 a \u4f5c\u4e3a\u7c7b B \u7684\u9759\u6001\u53d8\u91cf\u3002\u6bd4\u5982\uff1a 1 2 3 4 class A { }; class B { static A a ; }; a \u7684\u6784\u9020\u4e0e\u6790\u6784\u8868\u73b0\u548c\u5168\u5c40\u5bf9\u8c61\u7c7b\u4f3c\uff0c\u5373\u5728 main() \u51fd\u6570\u8c03\u7528\u4e4b\u524d\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u5728 main() \u51fd\u6570\u6267\u884c\u5b8c return \uff0c\u7a0b\u5e8f\u7ed3\u675f\u65f6\uff0c\u5bf9\u8c61\u88ab\u6790\u6784\u3002 a \u4f5c\u4e3a b \u7684\u7c7b\u5bf9\u8c61\uff0c\u548c B \u662f\u5426\u5b9e\u4f8b\u5316\u65e0\u5173\uff08\u8fd9\u4e2a\u548c\u7c7b\u91cc\u9762\u7684\u9ed8\u8ba4\u7c7b\u578b\u7684\u9759\u6001\u53d8\u91cf\uff0c\u6bd4\u5982 B \u91cc\u9762\u7684\u5bf9\u8c61 static int c \u662f\u4e00\u6837\u7684\uff09\u3002 \u8fd9\u4e2a\u4f8b\u5b50\u503c\u5f97\u6ce8\u610f\u7684\u5c31\u662f\uff0c fun \u51fd\u6570\u4f53\u7c7b\u7684\u9759\u6001\u5c40\u90e8\u5bf9\u8c61\u53ea\u6709\u4e00\u6b21\u6784\u9020\uff0c\u5e76\u6ca1\u6709\u56db\u6b21\u3002 \u53e6\u5916\uff0c A B::a1(\"static B::a1\") \u662f\u4ec0\u4e48\u610f\u601d\uff1f \u8fd9\u91cc\u662f\u5728\u7c7b\u5916\u5b9a\u4e49 B \u7684 static \u6570\u636e\u6210\u5458 a1 \uff0c\u800c\u524d\u9762\u7684 A \u5219\u662f\u5728\u4f7f\u7528\u6784\u9020\u51fd\u6570\u3002\u8fd9\u91cc\u5fc5\u987b\u6307\u5b9a\u662f B::a1 \uff0c\u4e0d\u7136 A a1(\"static B::a1\") \u5219\u4f1a\u5b9a\u4e49\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\uff0c\u800c\u4e0d\u662f\u6784\u9020 B \u7684 static \u6570\u636e\u6210\u5458\u3002 \u53c2\u6570\u5bf9\u8c61\u6784\u9020\u4e0e\u6790\u6784 \u00b6 \u4f20\u9012\u5f62\u53c2 1 2 3 4 void fun ( A b ) { cout << \"In fun: b.s = \" << b . s << endl ; } fun ( a ); \u5728\u51fd\u6570\u88ab\u8c03\u7528\u65f6\uff0c b \u88ab\u6784\u9020\uff0c\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff08\u89c1\u4e0b\u4e00\u7ae0\u8282\uff09\u8fdb\u884c\u521d\u59cb\u5316\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5bf9\u8c61 b \u7684\u5c5e\u6027\u503c\u548c a \u4e00\u81f4\u3002\u5728\u51fd\u6570\u7ed3\u675f\u65f6\uff0c\u8c03\u7528\u6790\u6784\u51fd\u6570\uff0c b \u88ab\u6790\u6784\u3002 \u7ed3\u5408\u540e\u7eed\u5b66\u4e60\u7684\u62f7\u8d1d\u6784\u9020\u548c\u79fb\u52a8\u6784\u9020\uff0c\u6211\u4eec\u5f53\u7136\u53ef\u4ee5\u786e\u5b9a\u5f62\u53c2\u4f1a\u53d1\u751f\u4e00\u6b21\u62f7\u8d1d\u6784\u9020\uff0c\u4f46\u662f\u4e3a\u4ec0\u4e48\u6ca1\u6709\u76f8\u5e94\u7684\u8f93\u51fa\u5462\uff1f \u56e0\u4e3a\uff0c\u6ca1\u6709\u663e\u5f0f\u5b9a\u4e49\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u7cfb\u7edf\u8c03\u7528\u4e86\u9690\u5f0f\u751f\u6210\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u8fd9\u5f53\u7136\u662f\u6ca1\u6709\u8f93\u51fa\u7684\u3002\u5f62\u53c2\u7684\u6784\u9020\u7528\u7684\u662f\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u53ef\u662f\u6790\u6784\u5374\u662f\u5171\u7528\u7684\u4e00\u4e2a\u6790\u6784\u51fd\u6570\u3002 \u4f20\u9012\u5f15\u7528\u4e0e\u6307\u9488 1 2 3 4 void fun ( A & b ) { cout << \"In fun: b.s = \" << b . s << endl ; } fun ( a ); \u5728\u51fd\u6570\u88ab\u8c03\u7528\u65f6\uff0c b \u4e0d\u9700\u8981\u88ab\u62f7\u8d1d\u6784\u9020\uff0c\u56e0\u4e3a b \u662f a \u7684\u5f15\u7528\u3002\u5728\u51fd\u6570\u7ed3\u675f\u65f6\uff0c\u4e5f\u4e0d\u9700\u8981\u8c03\u7528\u6790\u6784\u51fd\u6570\uff0c\u56e0\u4e3a b \u53ea\u662f\u4e00\u4e2a\u5f15\u7528\uff0c\u800c\u4e0d\u662f A \u7684\u5bf9\u8c61\u3002 \u7c7b\u6210\u5458\u542b\u6709\u6307\u9488 \u5982\u679c\u4f20\u5165\u5f62\u53c2\u800c\u4e0d\u662f\u5f15\u7528\u6216\u6307\u9488\uff0c\u7531\u4e8e\u62f7\u8d1d\u6784\u9020\u4e0d\u4f1a\u5c06\u88ab\u62f7\u8d1d\u8005\u7f6e\u7a7a\uff0c\u6545\u800c\u5f62\u53c2\u548c\u5b9e\u53c2\u7684\u6307\u9488\u6307\u5411\u4e86\u5b8c\u5168\u76f8\u540c\u7684\u5730\u5740\u3002\u4f46\u662f\u5f62\u53c2\u4f1a\u5728\u51fd\u6570\u4f53\u7ed3\u675f\u540e\u6790\u6784\uff0c\u5c06\u5f62\u53c2\u6307\u5411\u7684\u7a7a\u95f4\u91ca\u653e\u6389\u3002\u6211\u7684\u5b9e\u53c2\u53c8\u4f1a\u5728\u4e3b\u51fd\u6570\u7ed3\u675f\u540e\u6790\u6784\uff0c\u8fd9\u65f6\u5b9e\u53c2\u6307\u5411\u7684\u7a7a\u95f4\u5c06\u4f1a\u88ab\u518d\u6b21\u6790\u6784\uff0c\u53cd\u590d\u6790\u6784\uff0c\u6790\u6784\u7a7a\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u4ece\u800c\u62a5\u9519\u3002 \u8fd9\u53e6\u4e00\u65b9\u9762\u542f\u53d1\u6211\u4eec\uff0c\u542b\u6709\u6307\u9488\u7684\u7c7b\uff0c\u4e00\u822c\u5e0c\u671b\u7528\u79fb\u52a8\u6784\u9020\u800c\u975e\u62f7\u8d1d\u6784\u9020\u3002 \u4f20\u5165\u5f15\u7528\u7684\u4f18\u70b9 \u5c3d\u91cf\u4f7f\u7528\u5bf9\u8c61\u5f15\u7528\u4f5c\u4e3a\u53c2\u6570\uff0c\u8fd9\u6837\u505a\u8fd8\u53ef\u4ee5\u51cf\u5c11\u65f6\u95f4\u5f00\u9500\uff08\u56e0\u4e3a\u7701\u53bb\u4e86\u62f7\u8d1d\u6784\u9020\u5f62\u53c2\u7684\u65f6\u95f4\uff09\u3002 \u5bf9\u8c61\u7684 new \u548c delete \u00b6 \u6982\u8ff0 \u00b6 new \u3002\u751f\u6210\u4e00\u4e2a\u7c7b\u5bf9\u8c61\uff08\u6ce8\u610f\u4e0d\u662f\u7c7b\u9759\u6001\u5bf9\u8c61\uff09\uff0c\u5e76\u8fd4\u56de\u5730\u5740\u3002 1 2 A * pA = new A [ 100 ]; // \u8c03\u7528\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u751f\u6210\u4e86 100 \u4e2a A \u7c7b\u5bf9\u8c61 A * pA = new A ( 100 ); // \u8c03\u7528\u5e26\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\uff0c\u6784\u9020\u4e86 1 \u4e2a A \u7c7b\u5bf9\u8c61 delete \u3002\u5220\u9664\u8be5\u7c7b\u5bf9\u8c61\uff0c\u91ca\u653e\u5185\u5b58\u8d44\u6e90\uff08\u8c03\u7528\u6790\u6784\u51fd\u6570\uff09\u3002 1 2 delete pA ; // \u91ca\u653e\u751f\u6210\u7684\u90a3\u4e2a A \u7c7b\u5bf9\u8c61 delete [] pA ; // \u91ca\u653e\u751f\u6210\u7684\u90a3 100 \u4e2a A \u7c7b\u5bf9\u8c61 \u56fe\u793a \u00b6 \u5bf9\u4e8e\u5927\u591a\u6570\u7f16\u8bd1\u5668\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u5982\u4e0b\u6982\u8ff0\u3002 \u5339\u914d\u9879 \u00b6 \u642d\u914d\u4f7f\u7528 new \u548c delete \u8981\u914d\u5957\u4f7f\u7528\u3002 new \u548c delete \u642d\u914d\uff0c new[] \u548c delete[] \u642d\u914d\u3002 \u642d\u914d\u4e0d\u5f53 \u5bf9\u4e8e\u5927\u591a\u7f16\u8bd1\u5668\uff0c\u5982\u679c\u540c\u65f6\u4f7f\u7528 new[] \u548c delete \uff0c\u4f1a\u6709\u4ec0\u4e48\u540e\u679c\uff1f 1 2 A * pA = new A [ 3 ]; delete pA ; \u8be5 delete \u547d\u4ee4\u505a\u4e86\u4e24\u4ef6\u4e8b\uff1a\u8c03\u7528\u4e00\u6b21 pA \u6307\u5411\u7684\u5bf9\u8c61\u7684\u6790\u6784\u51fd\u6570\uff0c\u91ca\u653e pA \u5730\u5740\u7684\u5185\u5b58\u3002\u56e0\u4e3a\uff0c\u53ea\u8c03\u7528\u4e86\u4e00\u6b21\u6790\u6784\u51fd\u6570\uff0c\u6545\u800c\u5982\u679c\u7c7b\u5bf9\u8c61\u4e2d\u6709\u5927\u91cf\u7533\u8bf7\u5185\u5b58\u7684\u64cd\u4f5c\uff0c\u90a3\u4e48\u56e0\u4e3a\u6ca1\u6709\u8c03\u7528\u6790\u6784\u51fd\u6570\uff0c\u8fd9\u4e9b\u5185\u5b58\u65e0\u6cd5\u88ab\u91ca\u653e\uff0c\u9020\u6210\u5185\u5b58\u6cc4\u6f0f\u3002 \u6b64\u5916\uff0c\u76f4\u63a5\u91ca\u653e pA \u6307\u5411\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u8fd9\u4e2a\u4f1a\u9020\u6210\u4e25\u91cd\u7684\u6bb5\u9519\u8bef\uff0c\u7a0b\u5e8f\u5fc5\u7136\u4f1a\u5d29\u6e83\u3002\u56e0\u4e3a\u5206\u914d\u7a7a\u95f4\u7684\u8d77\u59cb\u5730\u5740\u662f pA \u5730\u5740\u51cf\u53bb 4 \u4e2a\u5b57\u8282\uff08 delete[] pA \u7684\u91ca\u653e\u5730\u5740\u81ea\u52a8\u8f6c\u6362\u4e3a pA \u5730\u5740\u51cf\u53bb 4 \u5b57\u8282\uff09\u3002 new \u662f\u4f1a\u8c03\u7528\u7c7b A \u7684\u6784\u9020\u51fd\u6570\u7684\uff08\u8fc7\u7a0b\uff1a\u5206\u914d\u5185\u5b58\u3001\u521d\u59cb\u5316\u3001\u8fd4\u56de\u6307\u9488\uff09\u3002 \u6ce8\u610f\u5230\u8fd9\u91cc\u7b2c\u56db\u4e2a\uff0c\u6211\u5b9e\u9645\u4e0a\u662f\u6784\u9020\u4e86 A \u7684\u6307\u9488\u6570\u7ec4\uff0c\u6784\u9020\u4e86 10 \u4e2a A* \u7c7b\u578b\u7684\u6307\u9488\uff0c\u4f46\u662f\u6ca1\u8c03\u7528\u6784\u9020\u51fd\u6570\u3002 \u53cb\u5143 \u00b6 \u5b9a\u4e49\u4e0e\u57fa\u672c\u6027\u8d28 \u00b6 A \u7c7b\u58f0\u660e B \u4e3a\u53cb\u5143\u7c7b\u6216\u8005\u53cb\u5143\u51fd\u6570\uff0c\u5219 B \u5177\u6709\u8bbf\u95ee A \u7684 private \u53ca protected \u6210\u5458\u7684\u8bbf\u95ee\u6743\u9650\uff0c\u5373\u53ef\u4ee5\u8bbf\u95ee A \u7684\u4e00\u5207\u6210\u5458\u3002 \u53cb\u5143\u7684\u58f0\u660e\u53ea\u80fd\u5728\u7c7b\u5185\u8fdb\u884c\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 #include <iostream> using namespace std ; class Test { int id ; public : Test ( int i ) : id ( i ) { cout << \"obj_\" << id << \" created \\n \" ; } friend istream & operator >> ( istream & in , Test & dst ); friend ostream & operator << ( ostream & out , const Test & src ); }; istream & operator >> ( istream & in , Test & dst ) { in >> dst . id ; return in ; } ostream & operator << ( ostream & out , const Test & src ) { out << src . id ; return out ; } \u6d41\u8fd0\u7b97\u7b26\u91cd\u8f7d\u5f80\u5f80\u4f1a\u58f0\u660e\u4e3a\u53cb\u5143\u51fd\u6570\uff0c\u56e0\u4e3a\u7ecf\u5e38\u9700\u8981\u8f93\u51fa\u79c1\u6709\u6210\u5458\u6570\u636e\u3002 \u88ab\u53cb\u5143\u58f0\u660e\u7684\u51fd\u6570\u4e00\u5b9a\u4e0d\u662f\u5f53\u524d\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff0c\u5373\u4f7f\u8be5\u51fd\u6570\u7684\u5b9a\u4e49\u5199\u5728\u5f53\u524d\u7c7b\u5185\uff08\u6ce8\u610f\u4e8b\u9879\u4e00\u5b9a\u4e0d\u662f\uff0c\u800c\u4e0d\u662f\u4e0d\u4e00\u5b9a\u662f\uff09\u3002\u5f53\u524d\u7c7b\u7684\u6210\u5458\u51fd\u6570\u4e5f\u4e0d\u9700\u8981\u53cb\u5143\u4fee\u9970\uff08\u56e0\u4e3a\u6210\u5458\u51fd\u6570\u672c\u8eab\u5c31\u53ef\u4ee5\u8bbf\u95ee\u6240\u6709\u6570\u636e\u6210\u5458\uff09\u3002 \u8de8\u7c7b\u53cb\u5143 \u00b6 \u5b9a\u4e49 \u53ef\u4ee5\u58f0\u660e\u522b\u7684\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff0c\u4e3a\u5f53\u524d\u7c7b\u7684\u53cb\u5143\u3002\u5176\u4ed6\u7c7b\u7684\u6784\u9020\u51fd\u6570\u3001\u6790\u6784\u51fd\u6570\u4e5f\u53ef\u4ee5\u662f\u53cb\u5143\u3002 1 2 3 4 5 class Y { int data ; friend void X::foo ( Y ); friend X :: X ( Y ), X ::~ X (); }; X \u7684\u6784\u9020\u51fd\u6570 X::X() \u548c\u6790\u6784\u51fd\u6570 X::~X() \u4e3a Y \u7684\u53cb\u5143\u51fd\u6570\uff0c\u5219\u5728\u5b83\u4eec\u7684\u51fd\u6570\u4f53\u5185\u53ef\u76f4\u63a5\u8bbf\u95ee\u3001\u4fee\u6539 Y \u7684\u79c1\u6709\u6210\u5458\u3002 \u533a\u57df\u65e0\u5173\u6027 \u53cb\u5143\u7684\u58f0\u660e\u4e0e\u5f53\u524d\u6240\u5728\u57df\u662f\u5426\u4e3a private \u6216 public \u65e0\u5173\u3002 \u4e0d\u51b2\u7a81\u6027 \u4e00\u4e2a\u666e\u901a\u51fd\u6570\u53ef\u4ee5\u662f\u591a\u4e2a\u7c7b\u7684\u53cb\u5143\u51fd\u6570\u3002 \u53cb\u5143\u7c7b \u00b6 \u53ef\u5bf9 class \u3001 struct \u3001 union \u8fdb\u884c\u53cb\u5143\u58f0\u660e\uff0c\u4ee3\u8868\u8be5\u7c7b\u7684\u6240\u6709\u6210\u5458\u51fd\u6570\u5747\u4e3a\u53cb\u5143\u51fd\u6570\u3002 \u5bf9\u57fa\u7840\u7c7b\u578b\u7684\u53cb\u5143\u58f0\u660e\u4f1a\u88ab\u5ffd\u7565\uff08\u56e0\u4e3a\u6ca1\u6709\u5b9e\u9645\u4ef7\u503c\uff09\u3002\u7f16\u8bd1\u5668\u53ef\u80fd\u4f1a\u53d1\u51fa\u8b66\u544a\uff0c\u4f46\u4e0d\u4f1a\u8ba4\u4e3a\u662f\u9519\u8bef\u3002 \u4e24\u884c\u7684\u533a\u522b\uff1a friend Y \u5fc5\u987b\u5148\u5b9a\u4e49 class Y \uff0c\u4f46\u662f friend class X \u53ef\u4ee5\u4e0d\u7528\u5148\u5b9a\u4e49 class X \u3002 \u53cb\u5143\u7684\u6ce8\u610f\u4e8b\u9879 \u00b6 \u975e\u5bf9\u79f0\u6027 \u7c7b A \u4e2d\u58f0\u660e B \u662f A \u7684\u53cb\u5143\u7c7b\uff0c\u5219 B \u53ef\u4ee5\u8bbf\u95ee A \u7684\u79c1\u6709\u6210\u5458\uff0c\u4f46 A \u4e0d\u80fd\u8bbf\u95ee B \u7684\u79c1\u6709\u6210\u5458\u3002 \u975e\u4f20\u9012\u6027 \u4f60\u7684\u9644\u5eb8\u7684\u9644\u5eb8\u4e0d\u662f\u4f60\u7684\u9644\u5eb8\u3002 \u4e0d\u53ef\u7ee7\u627f \u53cb\u5143\u58f0\u660e\u4e0d\u80fd\u5b9a\u4e49\u65b0\u7684 class \u5de6\u56fe\u662f\u6211\u5148\u6709\u4e86 B \u624d\u80fd\u5b9a\u4e49 B \u4e3a A \u7684\u53cb\u5143\u3002\u800c\u53f3\u8fb9\u4f01\u56fe\u5728 X \u7c7b\u5185\u5b9a\u4e49 Y \u4e3a\u53cb\u5143\u7c7b\uff0c\u5e76\u7ed9\u51fa Y \u7684\u5b9a\u4e49\uff0c\u8fd9\u662f\u4e0d\u5408\u6cd5\u7684\uff08\u4e0d\u8fc7 friend class Y \u5012\u662f\u53ef\u4ee5\uff0c\u5373\u4f7f\u8fd8\u6ca1\u6709\u5b9a\u4e49 Y \uff09\u3002","title":"C++ \u7c7b\u8bed\u6cd5\u8fdb\u9636"},{"location":"languages/c-oop/class-advanced/#c","text":"\u8fdb\u9636\u8bb2\u4e9b\u4ec0\u4e48\uff1f \u8fd9\u4e00\u90e8\u5206\u4e3b\u8981\u6df1\u5165\u5bf9\u8c61\u7684\u6784\u9020\u548c\u6790\u6784\uff0c\u5e76\u4e14\u6d89\u53ca\u5230\u5e38\u91cf\u3001\u9759\u6001\u3001\u53cb\u5143\u7684\u6982\u5ff5\u3002 \u672c\u90e8\u5206\u8bb2\u89e3\u7684\u5185\u5bb9\u53ef\u4ee5\u6d53\u7f29\u4e3a\uff1a","title":"C++ \u7c7b\u8bed\u6cd5\u8fdb\u9636"},{"location":"languages/c-oop/class-advanced/#_1","text":"","title":"\u53d8\u91cf\u4e0e\u9759\u6001\u53d8\u91cf"},{"location":"languages/c-oop/class-advanced/#_2","text":"\u6309\u5b58\u50a8\u533a\u57df\u5206 \u5168\u5c40\u53d8\u91cf\u3001\u9759\u6001\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u90fd\u5b58\u653e\u5728\u5185\u5b58\u7684\u9759\u6001\u5b58\u50a8\u533a\u57df\uff0c\u5c40\u90e8\u53d8\u91cf\u5b58\u653e\u5728\u5185\u5b58\u7684\u6808\u533a\u3002\u9759\u6001\u50a8\u5b58\u533a\u5728\u51fd\u6570\u7ed3\u675f\u540e\u4e0d\u4f1a\u9500\u6bc1\uff0c\u800c\u6808\u533a\u5728\u51fd\u6570\u7ed3\u675f\u540e\u4f1a\u9000\u6808\u800c\u9500\u6bc1\u3002 \u6309\u4f5c\u7528\u57df\u5206 \u52a8\u6001\u53d8\u91cf \u5168\u5c40\u53d8\u91cf\u5728\u6574\u4e2a\u5de5\u7a0b\u6587\u4ef6\u5185\u90fd\u6709\u6548\uff0c\u662f\u201c\u5728\u51fd\u6570\u5916\u5b9a\u4e49\u7684\u53d8\u91cf\u201d\uff0c\u5373\u4ece\u5b9a\u4e49\u53d8\u91cf\u7684\u4f4d\u7f6e\u5230\u672c\u6e90\u6587\u4ef6\u7ed3\u675f\u90fd\u6709\u6548\u3002\u7531\u4e8e\u540c\u4e00\u6587\u4ef6\u4e2d\u7684\u6240\u6709\u51fd\u6570\u90fd\u80fd\u5f15\u7528\u5168\u5c40\u53d8\u91cf\u7684\u503c\uff0c\u56e0\u6b64\u5982\u679c\u5728\u4e00\u4e2a\u51fd\u6570\u4e2d\u6539\u53d8\u4e86\u5168\u5c40\u53d8\u91cf\u7684\u503c\uff0c\u5c31\u80fd\u5f71\u54cd\u5230\u5176\u4ed6\u51fd\u6570\u4e2d\u5168\u5c40\u53d8\u91cf\u7684\u503c\u3002\u6240\u8c13\u6574\u4e2a\u5de5\u7a0b\uff0c\u662f\u6307\u6240\u6709\u7684\u6587\u4ef6\u90fd\u53ef\u4ee5\u7528\uff0c\u4e0d\u5355\u5355\u5728\u5b9a\u4e49\u5168\u5c40\u53d8\u91cf\u7684\u90a3\u4e2a\u6587\u4ef6\u3002 \u5c40\u90e8\u53d8\u91cf\u5728\u5b9a\u4e49\u5b83\u7684\u51fd\u6570\u5185\u6709\u6548\uff0c\u4f46\u662f\u51fd\u6570\u8fd4\u56de\u540e\u5931\u6548\uff0c\u662f\u201c\u5728\u51fd\u6570\u5185\u5b9a\u4e49\u7684\u53d8\u91cf\u201d\uff0c\u5373\u5728\u4e00\u4e2a\u51fd\u6570\u5185\u90e8\u5b9a\u4e49\u7684\u53d8\u91cf\uff0c\u53ea\u5728\u672c\u51fd\u6570\u8303\u56f4\u5185\u6709\u6548\u3002 \u6ce8\u610f\uff1a\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf\u5982\u679c\u6ca1\u6709\u624b\u5de5\u521d\u59cb\u5316\uff0c\u5219\u7531\u7f16\u8bd1\u5668\u521d\u59cb\u5316\u4e3a 0 \u3002\u5c40\u90e8\u53d8\u91cf\u7684\u503c\u4e0d\u53ef\u77e5\u3002 \u9759\u6001\u53d8\u91cf\uff08 static \uff09 \u9759\u6001\u51b3\u5b9a\u4e86\u4e24\u4ef6\u4e8b\uff0c\u7b2c\u4e00\u5c31\u662f\u5b58\u50a8\u540e\u4e0d\u4f1a\u7acb\u523b\u9500\u6bc1\u3002\u7b2c\u4e8c\u662f\u81ea\u5e26\u6709\u4e00\u5b9a\u7684\u9650\u5b9a\u53d8\u91cf\u4f5c\u7528\u533a\u57df\u7684\u529f\u80fd\uff0c\u5f3a\u5316\u5168\u5c40/\u5c40\u90e8\u7684\u5177\u4f53\u4f5c\u7528\u57df\u3002 \u9759\u6001\u5168\u5c40\u53d8\u91cf\u53ea\u5728\u5b9a\u4e49\u5b83\u7684\u6587\u4ef6\u5185\u6709\u6548\uff0c\u6548\u679c\u548c\u5168\u5c40\u53d8\u91cf\u4e00\u6837\uff0c\u53ea\u662f\u5c31\u5728\u672c\u6587\u4ef6\u5185\u90e8\u3002 \u9759\u6001\u5c40\u90e8\u53d8\u91cf\u53ea\u5728\u5b9a\u4e49\u5b83\u7684\u51fd\u6570\u5185\u6709\u6548\uff0c\u53ea\u662f\u7a0b\u5e8f\u4ec5\u5206\u914d\u4e00\u6b21\u5185\u5b58\uff0c\u51fd\u6570\u8fd4\u56de\u540e\uff0c\u8be5\u53d8\u91cf\u4e0d\u4f1a\u6d88\u5931\uff1b\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u7684\u751f\u5b58\u671f\u867d\u7136\u4e3a\u6574\u4e2a\u5de5\u7a0b\uff0c\u4f46\u662f\u5176\u4f5c\u7528\u4ecd\u4e0e\u5c40\u90e8\u53d8\u91cf\u76f8\u540c\uff0c\u5373\u53ea\u80fd\u5728\u5b9a\u4e49\u8be5\u53d8\u91cf\u7684\u51fd\u6570\u5185\u4f7f\u7528\u8be5\u53d8\u91cf\u3002\u9000\u51fa\u8be5\u51fd\u6570\u540e\uff0c\u5c3d\u7ba1\u8be5\u53d8\u91cf\u8fd8\u7ee7\u7eed\u5b58\u5728\u3002\u5c40\u90e8\u51b3\u5b9a\u5176\u65e0\u6cd5\u88ab\u5176\u4ed6\u51fd\u6570\u4f7f\u7528\u53ea\u80fd\u88ab\u540c\u4e00\u51fd\u6570\u4e0b\u6b21\u518d\u7528\u3002\u9759\u6001\u51b3\u5b9a\u5176\u4fdd\u5b58\u5728\u9759\u6001\u533a\uff0c\u65e0\u6cd5\u88ab\u7acb\u523b\u9500\u6bc1\u3002 \u8fd9\u91cc\u8fd8\u7ee7\u7eed\u5b58\u5728\u610f\u5473\u7740\u5f88\u91cd\u8981\u7684\u6027\u8d28\uff0c\u5bf9\u4e8e\u8fd9\u4e2a\u51fd\u6570\u800c\u8a00\uff0c\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u662f\u53ef\u4ee5\u590d\u7528\u7684\u3002\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u5728\u9759\u6001\u5b58\u50a8\u533a\u5185\u5206\u914d\u5b58\u50a8\u5355\u5143\u3002\u5728\u7a0b\u5e8f\u6574\u4e2a\u8fd0\u884c\u671f\u95f4\u90fd\u4e0d\u91ca\u653e\u3002\u800c\u81ea\u52a8\u53d8\u91cf\uff08\u5373\u52a8\u6001\u5c40\u90e8\u53d8\u91cf\uff09\u5c5e\u4e8e\u52a8\u6001\u5b58\u50a8\u7c7b\u522b\uff0c\u5b58\u50a8\u5728\u52a8\u6001\u5b58\u50a8\u533a\u7a7a\u95f4\u800c\u4e0d\u662f\u9759\u6001\u5b58\u50a8\u533a\u7a7a\u95f4\uff0c\u6bcf\u4e00\u6b21\u8be5\u51fd\u6570\u8c03\u7528\u7ed3\u675f\u540e\u5373\u91ca\u653e\u3002 \u4e3a\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u8d4b\u521d\u503c\u662f\u5728\u7f16\u8bd1\u65f6\u8fdb\u884c\u7684\uff0c\u5373\u53ea\u8d4b\u521d\u503c\u4e00\u6b21\uff0c\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u5b83\u5df2\u6709\u521d\u503c\u3002\u4ee5\u540e\u6bcf\u6b21\u8c03\u7528\u51fd\u6570\u65f6\u4e0d\u518d\u91cd\u65b0\u8d4b\u521d\u503c\u800c\u53ea\u662f\u4fdd\u7559\u4e0a\u6b21\u51fd\u6570\u8c03\u7528\u7ed3\u675f\u65f6\u7684\u503c\u3002\u800c\u4e3a\u81ea\u52a8\u53d8\u91cf\u8d4b\u521d\u503c\uff0c\u4e0d\u662f\u5728\u7f16\u8bd1\u65f6\u8fdb\u884c\u7684\uff0c\u800c\u662f\u5728\u51fd\u6570\u8c03\u7528\u65f6\u8fdb\u884c\uff0c\u6bcf\u8c03\u7528\u4e00\u6b21\u51fd\u6570\u91cd\u65b0\u7ed9\u4e00\u6b21\u521d\u503c\uff0c\u76f8\u5f53\u4e8e\u6267\u884c\u4e00\u6b21\u8d4b\u503c\u8bed\u53e5\u3002 \u5982\u679c\u5728\u5b9a\u4e49\u5c40\u90e8\u53d8\u91cf\u65f6\u4e0d\u8d4b\u521d\u503c\u7684\u8bdd\uff0c\u5bf9\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u6765\u8bf4\uff0c\u7f16\u8bd1\u65f6\u81ea\u52a8\u8d4b\u521d\u503c 0 \uff08\u6570\u503c\u578b\u53d8\u91cf\uff09\u6216\u7a7a\u5b57\u7b26\uff08\u5b57\u7b26\u578b\u53d8\u91cf\uff09\u3002\u800c\u5bf9\u81ea\u52a8\u53d8\u91cf\u6765\u8bf4\uff0c\u5982\u679c\u4e0d\u8d4b\u521d\u503c\uff0c\u5219\u5b83\u7684\u503c\u662f\u4e00\u4e2a\u4e0d\u786e\u5b9a\u7684\u503c\u3002\u8fd9\u662f\u7531\u4e8e\u6bcf\u6b21\u51fd\u6570\u8c03\u7528\u7ed3\u675f\u540e\u5b58\u50a8\u5355\u5143\u5df2\u91ca\u653e\uff0c\u4e0b\u6b21\u8c03\u7528\u65f6\u53c8\u91cd\u65b0\u53e6\u5206\u914d\u5b58\u50a8\u5355\u5143\uff0c\u800c\u6240\u5206\u914d\u7684\u5355\u5143\u4e2d\u7684\u503c\u662f\u4e0d\u786e\u5b9a\u7684\u3002 \u867d\u7136\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u5728\u51fd\u6570\u8c03\u7528\u7ed3\u675f\u540e\u4ecd\u7136\u5b58\u5728\uff0c\u4f46\u5176\u4ed6\u51fd\u6570\u662f\u4e0d\u80fd\u5f15\u7528\u5b83\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u5176\u4ed6\u51fd\u6570\u4e2d\u5b83\u662f\u201c\u4e0d\u53ef\u89c1\u201d\u7684\uff08\u8fd9\u4e2a\u4e0d\u53ef\u89c1\u662f\u6307\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u7684\u540d\u79f0\u4e0d\u53ef\u5728\u5176\u4ed6\u51fd\u6570\u5185\u88ab\u64cd\u4f5c\u3002\u4f46\u662f\u7531\u4e8e\u5176\u5185\u5b58\u5e76\u6ca1\u6709\u88ab\u6790\u6784\u6389\uff0c\u6211\u4eec\u4f9d\u7136\u80fd\u591f\u5bf9\u8fd9\u5757\u5185\u5b58\u8fdb\u884c\u64cd\u4f5c\uff0c\u8fd9\u4e00\u795e\u5947\u7684\u64cd\u4f5c\u8be6\u89c1\u4e0a\u4e00\u7ae0\u8282\uff09\u3002 \u9759\u6001\u53d8\u91cf\u4e0e\u5168\u5c40\u53d8\u91cf\u6700\u660e\u663e\u7684\u533a\u522b\u5c31\u5728\u4e8e\uff0c\u5168\u5c40\u53d8\u91cf\u5728\u5176\u5b9a\u4e49\u540e\u6240\u6709\u51fd\u6570\u90fd\u80fd\u7528\uff0c\u4f46\u662f\u9759\u6001\u5168\u5c40\u53d8\u91cf\u53ea\u80fd\u5728\u4e00\u4e2a\u6587\u4ef6\u91cc\u9762\u4f7f\u7528\uff0c\u800c\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u53ea\u80fd\u5728\u4e00\u4e2a\u51fd\u6570\u91cc\u4f7f\u7528\u3002 \u5f62\u53c2\u53d8\u91cf \u53ea\u5728\u88ab\u8c03\u7528\u671f\u95f4\u624d\u5206\u914d\u5185\u5b58\u5355\u5143\uff0c\u8c03\u7528\u7ed3\u675f\u7acb\u5373\u91ca\u653e\u3002 \u5728\u51fd\u6570\u4f53\u5185\uff0c\u5f62\u53c2\u7684\u7b49\u7ea7\u6700\u9ad8\u3002\u5f53\u5168\u5c40\u53d8\u91cf\u540d\u4e0e\u5f62\u53c2\u540d\u51b2\u7a81\u7684\u65f6\u5019\uff0c\u51fd\u6570\u4f1a\u64cd\u4f5c\u5f62\u53c2\uff0c\u800c\u4e0d\u662f\u5168\u5c40\u53d8\u91cf\u3002\u4f8b\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 #include \"stdio.h\" int Max = 1 ; void add ( int Max ) { Max = 2 ; } int main () { add ( Max ); printf ( \"Max = %d\" , Max ); getchar (); return 0 ; } \u8fd9\u4e2a\u7ed3\u679c\u5f53\u7136\u662f Max = 1 \u3002\u8fdb\u5165\u51fd\u6570\u540e\uff0c\u7528\u5b9e\u53c2\u6765\u6784\u9020\u4e86\u5f62\u53c2\uff0c\u5f62\u53c2\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u5168\u5c40\u53d8\u91cf\uff0c\u4f46\u6539\u53d8\u5f62\u53c2\u4e0d\u6539\u53d8\u5168\u5c40\u53d8\u91cf\uff0c\u4e14\u51fd\u6570\u6267\u884c\u5b8c\u540e\uff0c\u5f62\u53c2\u91ca\u653e\u3002","title":"\u56db\u7c7b\u53d8\u91cf\u7684\u533a\u522b"},{"location":"languages/c-oop/class-advanced/#_3","text":"\u610f\u4e49 static \u7684\u672c\u8d28\u610f\u4e49\u5728\u4e8e\u53ef\u63a7\u5236\u53d8\u91cf\u7684\u5b58\u50a8\u65b9\u5f0f\u548c\u53ef\u89c1\u6027\u3002 \u5728\u51fd\u6570\u5185\u90e8\u5b9a\u4e49\u7684\u53d8\u91cf\uff0c\u5f53\u7a0b\u5e8f\u6267\u884c\u5230\u5b83\u7684\u5b9a\u4e49\u5904\u65f6\uff0c\u7f16\u8bd1\u5668\u4e3a\u5b83\u5728\u6808\u4e0a\u5206\u914d\u7a7a\u95f4\uff0c\u51fd\u6570\u5728\u6808\u4e0a\u5206\u914d\u7684\u7a7a\u95f4\u5728\u6b64\u51fd\u6570\u6267\u884c\u7ed3\u675f\u65f6\u4f1a\u91ca\u653e\u6389\u3002\u5982\u679c\u60f3\u5c06\u51fd\u6570\u4e2d\u6b64\u53d8\u91cf\u7684\u503c\u4fdd\u5b58\u81f3\u4e0b\u4e00\u6b21\u8c03\u7528\u65f6\uff0c\u5e94\u8be5\u5982\u4f55\u5b9e\u73b0\uff1f\u6700\u5bb9\u6613\u60f3\u5230\u7684\u65b9\u6cd5\u662f\u5b9a\u4e49\u4e3a\u5168\u5c40\u7684\u53d8\u91cf\uff0c\u4f46\u5b9a\u4e49\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u6709\u8bb8\u591a\u7f3a\u70b9\uff0c\u6700\u660e\u663e\u7684\u7f3a\u70b9\u662f\u7834\u574f\u4e86\u6b64\u53d8\u91cf\u7684\u8bbf\u95ee\u8303\u56f4\uff08\u4f7f\u5f97\u5728\u6b64\u51fd\u6570\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\uff0c\u4e0d\u4ec5\u4ec5\u53ea\u53d7\u6b64\u51fd\u6570\u63a7\u5236\uff09\u3002 static \u5173\u952e\u5b57\u5219\u53ef\u4ee5\u5f88\u597d\u7684\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u5728 C++ \u4e2d\uff0c\u9700\u8981\u4e00\u4e2a\u6570\u636e\u5bf9\u8c61\u4e3a\u6574\u4e2a\u7c7b\u800c\u975e\u67d0\u4e2a\u5bf9\u8c61\u670d\u52a1\uff0c\u540c\u65f6\u53c8\u529b\u6c42\u4e0d\u7834\u574f\u7c7b\u7684\u5c01\u88c5\u6027\uff0c\u5373\u8981\u6c42\u6b64\u6210\u5458\u9690\u85cf\u5728\u7c7b\u7684\u5185\u90e8\uff0c\u5bf9\u5916\u4e0d\u53ef\u89c1\u65f6\uff0c\u53ef\u5c06\u5176\u5b9a\u4e49\u4e3a\u9759\u6001\u6570\u636e\u3002 \u5b9a\u4e49 \u4f7f\u7528 static \u4fee\u9970\u7684\u53d8\u91cf\u3002\u4f8b\u5982 static int i = 1 \u3002 \u521d\u59cb\u5316 \u521d\u6b21\u5b9a\u4e49\u65f6\u9700\u8981\u521d\u59cb\u5316\u3002\u5982\u679c\u662f\u5728\u51fd\u6570\u4f53\u5185\u7684\u9759\u6001\u5c40\u90e8\u53d8\u91cf\uff0c\u5219\u53ea\u4f1a\u521d\u59cb\u5316\u4e00\u6b21\uff0c\u4e4b\u540e\u5982\u679c\u518d\u6b21\u8c03\u7528\u8be5\u51fd\u6570\uff0c\u8fd8\u6709\u521d\u59cb\u5316\u8bed\u53e5\uff0c\u4f46\u8fd9\u4e9b\u4e4b\u540e\u7684\u521d\u59cb\u5316\u8bed\u53e5\u5931\u6548\u3002\u4e5f\u5373\u662f\u5728\u4e00\u4e2a\u51fd\u6570\u6267\u884c\u4e00\u6b21\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u80fd\u4e24\u6b21\u5b9a\u4e49\u540c\u4e00\u4e2a static \u6570\u636e\u6210\u5458\u3002\u4e00\u4e2a\u51fd\u6570\u6267\u884c\u591a\u6b21\uff0c\u90a3\u4e48\u6bcf\u6b21\u90fd\u53ef\u4ee5\u6709\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u5b9a\u4e49\u7684\u8bed\u53e5\uff0c\u4f46\u662f\u53ea\u6709\u7b2c\u4e00\u6b21\u6709\u6548\u3002 \u800c\u9759\u6001\u5168\u5c40\u53d8\u91cf\u53ea\u80fd\u521d\u59cb\u5316\u4e00\u6b21\uff0c\u4e4b\u540e\u518d\u521d\u59cb\u5316\u5219\u62a5\u9519\u3002 \u9759\u6001\u5c40\u90e8\u53d8\u91cf \u9759\u6001\u5c40\u90e8\u53d8\u91cf\u5b58\u50a8\u5728\u9759\u6001\u5b58\u50a8\u533a\uff0c\u751f\u547d\u5468\u671f\u5c06\u6301\u7eed\u5230\u6574\u4e2a\u7a0b\u5e8f\u7ed3\u675f\u3002 \u9759\u6001\u5168\u5c40\u53d8\u91cf \u9759\u6001\u5168\u5c40\u53d8\u91cf\u5177\u6709\u5185\u90e8\u53ef\u94fe\u63a5\u6027\uff0c\u4f5c\u7528\u57df\u4ec5\u9650\u5176\u58f0\u660e\u7684\u6e90\u6587\u4ef6\uff0c\u4e0d\u80fd\u88ab\u5176\u4ed6\u6e90\u6587\u4ef6\u6240\u7528\uff0c\u53ef\u4ee5\u907f\u514d\u548c\u5176\u4ed6\u6e90\u6587\u4ef6\u4e2d\u7684\u540c\u540d\u53d8\u91cf\u51b2\u7a81\u3002 \u663e\u5f0f static \u4fee\u9970\u7684\u5168\u5c40\u53d8\u91cf\u548c\u5168\u5c40\u51fd\u6570\u5373\u662f\u5728\u5176\u4ed6 .cpp \u91cc\u4f7f\u7528 extern \u4e5f\u4e0d\u80fd\u7528\u3002 extern \u4fee\u9970\u7b26 \u9996\u5148\u9700\u8981\u6307\u51fa\u7684\u662f\uff0c\u975e\u663e\u5f0f static \u4fee\u9970\u7684\u5168\u5c40\u53d8\u91cf\u548c\u5168\u5c40\u51fd\u6570\u9ed8\u8ba4\u90fd\u662f\u975e\u9759\u6001\u7684\uff0c\u5373\u53ef\u5171\u4eab\u7684\uff0c\u4f46\u662f\u5fc5\u987b\u5728\u5176\u4ed6\u6587\u4ef6\u91cc\u7528 extern \u6765\u58f0\u660e\u624d\u53ef\u4ee5\u7528\u3002 extern \u4fee\u9970\u7b26\u901a\u5e38\u7528\u4e8e\u5f53\u6709\u4e24\u4e2a\u6216\u591a\u4e2a\u6587\u4ef6\u5e0c\u671b\u5171\u4eab\u76f8\u540c\u7684\u5168\u5c40\u53d8\u91cf\u6216\u51fd\u6570\u7684\u65f6\u5019\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u6ca1\u6709\u663e\u5f0f\u52a0\u4e0a static \u4fee\u9970\u7684\u5168\u5c40\u53d8\u91cf\uff08\u8b6c\u5982 int x \uff09\u662f\u9ed8\u8ba4\u975e\u9759\u6001\u7684\u3002\u5982\u679c\u60f3\u5728\u5176\u4ed6\u7684\u7f16\u8bd1\u5355\u5143\u4e2d\u4f7f\u7528\u540c\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\uff0c\u5018\u82e5\u518d\u6b21\u5b9a\u4e49 int x \uff0c\u5fc5\u7136\u9020\u6210\u91cd\u590d\u5b9a\u4e49\u3002\u4e8e\u662f\u4f7f\u7528 extern int x \u6765\u58f0\u660e\u800c\u4e0d\u518d\u6b21\u5b9a\u4e49\uff08\u6ce8\u610f\uff0c\u4e0d\u53ef\u4ee5 extern \u4e00\u4e2a\u663e\u5f0f static \u4fee\u9970\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u56e0\u4e3a static \u4fee\u9970\u7684\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u53ea\u9650\u4e8e\u5b83\u88ab\u5b9a\u4e49\u7684\u90a3\u4e2a cpp \u6587\u4ef6\uff09\u3002\u8fd9\u6837\uff0c\u8be5\u5168\u5c40\u53d8\u91cf\u5bf9 extern \u5b83\u7684\u6240\u6709\u7684\u7a0b\u5e8f\u6587\u4ef6\u90fd\u53ef\u89c1\u7684\u3002 \u8fdb\u4e00\u6b65\u8bb2\uff0c\u6211\u4eec\u5df2\u77e5\u4e0d\u53ef\u4ee5\u5728\u5934\u6587\u4ef6\u4e2d\u5b9a\u4e49\u5168\u5c40\u53d8\u91cf\uff0c\u8b6c\u5982 int x \uff08\u8fd9\u7b49\u4ef7\u4e8e int x = 0 \uff09\u3002 #include \u7684\u529f\u80fd\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u590d\u5236\u7c98\u8d34\u3002\u6545\u800c\u5bf9\u4e8e\u6bcf\u4e2a\u5305\u542b\u4e86\u8be5\u5934\u6587\u4ef6\u7684 cpp \u6587\u4ef6\uff0c\u590d\u5236\u7c98\u8d34\u540e\u76f8\u5f53\u4e8e\u90fd\u5b9a\u4e49\u4e86\u4e00\u6b21\u975e\u9759\u6001\u7684\u5168\u5c40\u53d8\u91cf int x = 0 \uff0c\u9020\u6210\u91cd\u590d\u5b9a\u4e49\u800c\u94fe\u63a5\u5931\u8d25\u3002\u4ece\u800c\u53ea\u80fd\u5728\u5934\u6587\u4ef6\u4e2d\u58f0\u660e\u53d8\u91cf\uff0c extern int x \u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u5168\u5c40\u51fd\u6570\u4e5f\u662f\u9ed8\u8ba4\u975e static \u7684\u3002\u4f46 extern \u4fee\u9970\u5bf9\u4e8e\u4e00\u4e2a\u4e0d\u5e26 static \u4fee\u9970\u7684\u5168\u5c40\u51fd\u6570\u6ca1\u6709\u5fc5\u8981\uff0c\u56e0\u4e3a\u5f53\u6211\u4eec\u5728\u53e6\u4e00 cpp \u4e2d\u58f0\u660e\uff08\u800c\u975e\u91cd\u5b9a\u4e49\uff09\u8fd9\u4e00\u5168\u5c40\u51fd\u6570\u65f6\uff0c\u7cfb\u7edf\u4f1a\u9ed8\u8ba4\u89c6\u4e3a extern \u3002\u4ece\u800c\uff0c\u5728\u53e6\u4e00 cpp \u4e2d\u8c03\u7528\u8fd9\u4e00\u5168\u5c40\u51fd\u6570\uff0c\u4e0d\u9700\u8981 extern \u4fee\u9970\uff0c\u4f46\u662f\u4ecd\u9700\u58f0\u660e\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u5c3d\u91cf\u4e5f\u4e0d\u5728\u5934\u6587\u4ef6\u4e2d\u5b9a\u4e49\u51fd\u6570\u3002\u5047\u8bbe\u5728\u5934\u6587\u4ef6\u4e2d\u5b9a\u4e49\u51fd\u6570\uff0c\u590d\u5236\u7c98\u8d34\u540e\u8fd8\u662f\u91cd\u5b9a\u4e49\uff0c\u4e5f\u53ea\u80fd\u5728\u5934\u6587\u4ef6\u4e2d\u58f0\u660e\u51fd\u6570\u3002\u4e0d\u8fc7\u5bf9\u4e8e\u975e\u663e\u5f0f static \u4fee\u9970\u7684\u51fd\u6570\u800c\u8a00\uff0c\u4e0d\u5e26 extern \u7684\u58f0\u660e\u4f1a\u88ab\u7f16\u8bd1\u5668\u89c6\u4e3a\u81ea\u52a8\u5e26\u4e0a extern \u3002 \u7efc\u4e0a\uff0c extern \u7528\u4e8e\u5b9e\u73b0\u53ea\u58f0\u660e\uff0c\u4e0d\u5b9a\u4e49\u3002\uff08\u4e0d\u5206\u914d\u7a7a\u95f4\u5e76\u8d4b\u503c\uff09 \u8fdb\u4e00\u6b65\u7684\u4f8b\u5b50\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 // func.cpp int x = 0 ; int add ( int a ) { x += a ; return x ; } // main.cpp int add ( int ); int main () { add ( 1 ); return 0 ; } \u8fd9\u91cc\u4e0d\u5fc5\u7136\u58f0\u660e extern int x \uff0c\u56e0\u4e3a\u8c03\u7528 add \u540e\uff0c add \u548c x \u5728\u4e00\u4e2a cpp \u4e0b\uff0c\u662f\u53ef\u4ee5\u8c03\u7528\u7684\u3002\u7136\u800c\uff0c\u5fc5\u987b\u8981\u5728 main.cpp \u5f53\u4e2d\u58f0\u660e add \u624d\u53ef\u4ee5\u8c03\u7528\u3002\u6ce8\u610f\u5230\uff0c extern \u5bf9\u4e8e\u975e\u663e\u5f0f static \u4fee\u9970\u7684\u5168\u5c40\u51fd\u6570\u6ca1\u6709\u5fc5\u8981\u662f\u6307\u4e0d\u5199 extern \u4e5f\u4f1a\u81ea\u52a8\u53d8 extern \uff0c\u800c\u4e0d\u662f\u8bf4\u5728\u5176\u4ed6 cpp \u4e2d\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u4e0d\u9700\u8981\u58f0\u660e\u3002 \u53e6\u5916\uff0c\u7f16\u8bd1\u5668\u80fd\u591f\u8bc6\u522b int add(int) \u548c int add(int x) \u4e3a\u540c\u4e00\u4e2a\u51fd\u6570\uff0c\u540d\u5b57\u548c\u5f62\u53c2\u7c7b\u578b\u4e00\u6837\u5c31\u662f\u4e00\u4e2a\u51fd\u6570\u3002 \u66f4\u8fdb\u4e00\u6b65\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // func.cpp int x = 0 ; int add ( int a ) { x += a ; return x ; } // main.cpp int x = 10 ; int add ( int ); int main () { add ( 1 ); return 0 ; } \u6211\u7684\u4e24\u4e2a x \u5b9a\u4e49\u5728\u4e24\u4e2a cpp \u91cc\uff0c\u4e14\u5bf9\u4e8e\u5404\u81ea\u7684 cpp \u800c\u8a00\u800c\u8a00\u4ed6\u4eec\u90fd\u662f\u975e static \u7684\uff0c\u6545\u800c\u4f1a multi-definition\u3002 \u7ed3\u8bba\uff1a\u5bf9\u4e8e\u5934\u6587\u4ef6\uff0c\u5c3d\u91cf\u53ea\u58f0\u660e\u51fd\u6570\u800c\u4e0d\u5b9e\u73b0\u51fd\u6570\u3002\u5c3d\u91cf\u53ea\u58f0\u660e\u5168\u5c40\u53d8\u91cf\u800c\u4e0d\u5b9a\u4e49\u5168\u5c40\u53d8\u91cf\u3002 \u5168\u5c40\u53d8\u91cf\u4e0e\u5c40\u90e8\u53d8\u91cf \u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf\u662f\u4ece\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u7684\u89d2\u5ea6\u5212\u5206\u3002\u9759\u6001\u53d8\u91cf\u548c\u52a8\u6001\u53d8\u91cf\u662f\u4ece\u53d8\u91cf\u7684\u5185\u5b58\u5206\u914d\u7684\u89d2\u5ea6\u5212\u5206\u3002 \u5168\u5c40\u53d8\u91cf\u672c\u8eab\u662f\u975e\u9759\u6001\u5b58\u50a8\u65b9\u5f0f\uff0c\u9759\u6001\u5168\u5c40\u53d8\u91cf\u662f\u9759\u6001\u5b58\u50a8\u65b9\u5f0f\u3002\u8fd9\u4e24\u8005\u5728\u5b58\u50a8\u65b9\u5f0f\u4e0a\u5e76\u65e0\u4e0d\u540c\uff0c\u533a\u522b\u5728\u4e8e\u975e\u9759\u6001\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u662f\u6574\u4e2a\u6e90\u7a0b\u5e8f\uff0c\u5f53\u4e00\u4e2a\u6e90\u7a0b\u5e8f\u7531\u591a\u4e2a\u6e90\u6587\u4ef6\u7ec4\u6210\u65f6\uff0c\u975e\u9759\u6001\u7684\u5168\u5c40\u53d8\u91cf\u5728\u5404\u4e2a\u6e90\u6587\u4ef6\uff08\u6240\u6709\u7684 cpp \u6587\u4ef6\uff09\u4e2d\u90fd\u662f\u6709\u6548\u7684\u3002\u800c\u9759\u6001\u5168\u5c40\u53d8\u91cf\u5219\u9650\u5236\u4e86\u5176\u4f5c\u7528\u57df\uff0c\u5373\u53ea\u5728\u5b9a\u4e49\u8be5\u53d8\u91cf\u7684\u6e90\u6587\u4ef6\uff08\u67d0\u4e2a cpp \u6587\u4ef6\uff09\u5185\u6709\u6548\uff0c\u5728\u540c\u4e00\u6e90\u7a0b\u5e8f\u7684\u5176\u5b83\u6e90\u6587\u4ef6\u4e2d\u4e0d\u80fd\u4f7f\u7528\u5b83\u3002\uff08\u5177\u4f53\u89e3\u91ca\u662f\u9759\u6001\u5168\u5c40\u53d8\u91cf\u4ec5\u4ec5\u5185\u90e8\u53ef\u94fe\u63a5\uff09 \u5185\u90e8\u53ef\u94fe\u63a5\u4e0e\u5916\u90e8\u53ef\u94fe\u63a5 \u7f16\u8bd1\u5355\u5143\uff1a\u7b80\u5355\u6765\u8bf4\u4e00\u4e2a cpp \u6587\u4ef6\u5c31\u662f\u4e00\u4e2a\u7f16\u8bd1\u5355\u5143\u3002\u5f53\u4e00\u4e2a .c \u6216 .cpp \u6587\u4ef6\u5728\u7f16\u8bd1\u65f6\uff0c\u9884\u5904\u7406\u5668\u9996\u5148\u9012\u5f52\u5305\u542b\u5934\u6587\u4ef6\uff0c\u5f62\u6210\u4e00\u4e2a\u542b\u6709\u6240\u6709\u5fc5\u8981\u4fe1\u606f\u7684\u5355\u4e2a\u6e90\u6587\u4ef6\uff0c\u8fd9\u4e2a\u6e90\u6587\u4ef6\u5c31\u662f\u4e00\u4e2a\u7f16\u8bd1\u5355\u5143\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u7f16\u8bd1\u6bcf\u4e2a\u7f16\u8bd1\u5355\u5143\u65f6\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff0c\u5373\u6bcf\u4e2a cpp \u6587\u4ef6\u4e4b\u95f4\u662f\u4e0d\u77e5\u9053\u5bf9\u65b9\u7684\u5b58\u5728\u7684\u3002\uff08\u4e0d\u8003\u8651 #include \"xxx.cpp\" \u8fd9\u79cd\u5947\u8469\u7684\u5199\u6cd5\uff09\u7f16\u8bd1\u5668\u4f1a\u5206\u522b\u5c06\u6bcf\u4e2a\u7f16\u8bd1\u5355\u5143\u8fdb\u884c\u7f16\u8bd1\uff0c\u751f\u6210\u76f8\u5e94\u7684 .o \u6587\u4ef6\u3002\u7136\u540e\u94fe\u63a5\u5668\u4f1a\u5c06\u6240\u6709\u7684 .o \u6587\u4ef6\u8fdb\u884c\u94fe\u63a5\uff0c\u751f\u6210\u6700\u7ec8\u53ef\u6267\u884c\u6587\u4ef6\u3002 \u6211\u4eec\u77e5\u9053 C++ \u4e2d\u58f0\u660e\u548c\u5b9a\u4e49\u53ef\u4ee5\u5206\u5f00\u3002\u4f8b\u5982\u6211\u4eec\u53ef\u4ee5\u4e00\u4e2a\u51fd\u6570\u58f0\u660e\u5b9a\u4e49\u653e\u5728 b.cpp \u4e2d\uff0c\u5728 a.cpp \u53ea\u9700\u518d\u58f0\u660e\u4e00\u4e0b\u8fd9\u4e2a\u51fd\u6570\uff0c\u5c31\u53ef\u4ee5\u5728 a.cpp \u4e2d\u4f7f\u7528\u8fd9\u4e2a\u51fd\u6570\u3002\u4f8b\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 // a.cpp void show (); int main () { show (); return 0 ; } // b.cpp #include <iostream> void show () { std :: cout << \"Hello\" << std :: endl ; } \u800c\u901a\u8fc7\u4e4b\u524d\u7684\u4e86\u89e3\uff0c\u6211\u4eec\u77e5\u9053\u6bcf\u4e2a\u7f16\u8bd1\u5355\u5143\u95f4\u662f\u76f8\u4e92\u72ec\u7acb\u4e0d\u77e5\u9053\u5f7c\u6b64\u7684\u5b58\u5728\u7684\u3002\u90a3\u4e48 a.cpp \u53c8\u662f\u5982\u4f55\u77e5\u9053 show \u51fd\u6570\u7684\u5b9a\u4e49\u7684\u5462\uff1f \u5176\u5b9e\u5728\u7f16\u8bd1\u4e00\u4e2a\u7f16\u8bd1\u5355\u5143\u751f\u6210\u76f8\u5e94\u7684 .o \u6587\u4ef6\u8fc7\u7a0b\u4e2d\uff0c\u7f16\u8bd1\u5668\u4f1a\u5c06\u5206\u6790\u8fd9\u4e2a\u7f16\u8bd1\u5355\u5143\uff0c\u5c06\u5176\u6240\u80fd\u63d0\u4f9b\u7ed9\u5176\u4ed6\u7f16\u8bd1\u5355\u5143\u4f7f\u7528\u7684\u51fd\u6570\uff0c\u53d8\u91cf\u5b9a\u4e49\u8bb0\u5f55\u4e0b\u6765\u3002\u800c\u5c06\u81ea\u5df1\u7f3a\u5c11\u7684\u51fd\u6570\uff0c\u53d8\u91cf\u7684\u5b9a\u4e49\u4e5f\u8bb0\u5f55\u4e0b\u6765\u3002\u6240\u4ee5\u53ef\u4ee5\u8ba4\u4e3a a.o \u548c b.o \u8bb0\u5f55\u4e86\u4ee5\u4e0b\u7684\u4fe1\u606f\uff1a a.o \uff1a\u6211\u80fd\u63d0\u4f9b main \u51fd\u6570\u7684\u5b9a\u4e49\uff0c\u6211\u9700\u8981 show \u51fd\u6570\u7684\u5b9a\u4e49 b.o \uff1a\u6211\u80fd\u63d0\u4f9b show \u51fd\u6570\u7684\u5b9a\u4e49 \u7136\u540e\u5728\u94fe\u63a5\u5668\u8fde\u63a5\u7684\u65f6\u5019\u5c31\u4f1a\u77e5\u9053 a.o \u9700\u8981 show \u51fd\u6570\u5b9a\u4e49\uff0c\u800c b.o \u4e2d\u6070\u597d\u63d0\u4f9b\u4e86 show \u51fd\u6570\u7684\u5b9a\u4e49\uff0c\u901a\u8fc7\u94fe\u63a5\uff0c\u5728\u6700\u7ec8\u7684\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\u6211\u4eec\u80fd\u770b\u5230 show \u51fd\u6570\u7684\u8fd0\u884c\u3002 \u5185\u90e8\u8fde\u63a5\uff1a\u5982\u679c\u4e00\u4e2a\u540d\u79f0\u5bf9\u7f16\u8bd1\u5355\u5143\u6765\u8bf4\u662f\u5c40\u90e8\u7684\uff0c\u5728\u94fe\u63a5\u7684\u65f6\u5019\u5176\u4ed6\u7684\u7f16\u8bd1\u5355\u5143\u65e0\u6cd5\u94fe\u63a5\u5230\u5b83\u4e14\u4e0d\u4f1a\u4e0e\u5176\u5b83\u7f16\u8bd1\u5355\u5143\u4e2d\u7684\u540c\u6837\u7684\u540d\u79f0\u76f8\u51b2\u7a81\u3002\u4f8b\u5982 static \u51fd\u6570\uff0c inline \u51fd\u6570\u7b49\uff08\u6ce8\uff1a\u7528 static \u4fee\u9970\u7684\u51fd\u6570\uff0c\u672c\u9650\u5b9a\u5728\u672c\u6e90\u7801\u6587\u4ef6\u4e2d\uff0c\u4e0d\u80fd\u88ab\u672c\u6e90\u7801\u6587\u4ef6\u4ee5\u5916\u7684\u4ee3\u7801\u6587\u4ef6\u8c03\u7528\u3002\u800c\u666e\u901a\u7684\u51fd\u6570\uff0c\u9ed8\u8ba4\u662f extern \u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u53ef\u4ee5\u88ab\u5176\u5b83\u4ee3\u7801\u6587\u4ef6\u8c03\u7528\u8be5\u51fd\u6570\uff09 \u5916\u90e8\u8fde\u63a5\uff1a\u5982\u679c\u4e00\u4e2a\u540d\u79f0\u5bf9\u7f16\u8bd1\u5355\u5143\u6765\u8bf4\u4e0d\u662f\u5c40\u90e8\u7684\uff0c\u800c\u5728\u94fe\u63a5\u7684\u65f6\u5019\u5176\u4ed6\u7684\u7f16\u8bd1\u5355\u5143\u53ef\u4ee5\u8bbf\u95ee\u5b83\uff0c\u4e5f\u5c31\u662f\u8bf4\u5b83\u53ef\u4ee5\u548c\u522b\u7684\u7f16\u8bd1\u5355\u5143\u4ea4\u4e92\u3002\u4f8b\u5982\u975e\u9759\u6001\u5168\u5c40\u53d8\u91cf\u5c31\u662f\u5916\u90e8\u94fe\u63a5\u3002","title":"\u9759\u6001\u53d8\u91cf"},{"location":"languages/c-oop/class-advanced/#static","text":"\u58f0\u660e\u3001\u5b9a\u4e49\u3001\u521d\u59cb\u5316\u3001\u8d4b\u503c \u58f0\u660e\uff08\u82f1\u8bed\uff1aDeclaration\uff09\u6307\u5b9a\u4e86\u4e00\u4e2a\u53d8\u91cf\u7684\u6807\u8bc6\u7b26\uff0c\u7528\u6765\u63cf\u8ff0\u53d8\u91cf\u7684\u79cd\u7c7b\uff0c\u662f\u7c7b\u578b\u8fd8\u662f\u5bf9\u8c61\uff0c\u6216\u8005\u51fd\u6570\u7b49\u3002\u58f0\u660e\uff0c\u7528\u4e8e\u7f16\u8bd1\u5668\u8bc6\u522b\u53d8\u91cf\u540d\u6240\u5f15\u7528\u7684\u5b9e\u4f53\u3002 \u5e7f\u4e49\u7684\u89d2\u5ea6\u4e0a\u6765\u8bb2\u5b9a\u4e49\u662f\u58f0\u660e\u7684\u7279\u4f8b\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u628a\u5206\u914d\u4e86\u5185\u5b58\u7a7a\u95f4\u7684\u58f0\u660e\u79f0\u4f5c\u5b9a\u4e49\uff0c\u4e0d\u9700\u8981\u5b58\u50a8\u7a7a\u95f4\u7684\u58f0\u660e\u79f0\u4f5c\u58f0\u660e\u3002 \u5bf9\u4e8e\u5168\u5c40\u53d8\u91cf\uff0c int a \u662f\u5b9a\u4e49\u6027\u58f0\u660e\uff0c\u6216\u79f0\u5b9a\u4e49\u3002 extern int a \u662f\u5f15\u7528\u6027\u58f0\u660e\u3002\u5bf9\u4e8e .h \u6587\u4ef6\u91cc\u7684 class \uff0c\u4ec5\u4ec5 static int x \u662f\u58f0\u660e\uff08\u6ca1\u6709\u5206\u914d\u5185\u5b58\u7a7a\u95f4\uff09\u3002\u5982\u679c\u5728 class \u91cc\u5c31\u5199\u4e0a static int x = 0 \uff08\u5c31\u5730\u521d\u59cb\u5316\uff09\uff0c\u8fd9\u91cc\u65e2\u5b8c\u6210\u4e86\u58f0\u660e\uff0c\u53c8\u5b8c\u6210\u4e86\u5b9a\u4e49\uff08\u5206\u914d\u4e86\u5185\u5b58\u7a7a\u95f4\uff09\uff0c\u4f46\u662f\u8fd9\u4e48\u5199\u4e0d\u89c4\u8303\uff0c\u5927\u591a\u7f16\u8bd1\u5668\u90fd\u4f1a\u62a5\u9519\u3002 extern int a \u53ea\u80fd\u5168\u5c40\u53d8\u91cf\u7528\uff0c\u53ea\u58f0\u660e\u4f46\u662f\u4e0d\u5206\u914d\u3002\u4f46\u662f\u5168\u5c40\u53d8\u91cf int a \u65e2\u5b8c\u6210\u4e86\u58f0\u660e\u4e5f\u5b8c\u6210\u4e86\u5b9a\u4e49\uff0c\u7f16\u8bd1\u5668\u9ed8\u8ba4\u8d4b\u503c\u4e3a 0 \u3002\u5bf9\u4e8e class \uff0c static int a \u5c31\u8d77\u5230\u4e86\u53ea\u58f0\u660e\u4e0d\u5206\u914d\uff08\u4e5f\u5c31\u662f\u53ea\u58f0\u660e\u4e0d\u5b9a\u4e49\uff09\u7684\u4f5c\u7528\u3002 \u521d\u59cb\u5316\u548c\u5b9a\u4e49\u7684\u610f\u4e49\u76f8\u8fd1\uff0c\u5e7f\u4e49\u4e0a\u5c06\u5c31\u662f\u5206\u914d\u4e86\u50a8\u5b58\u7a7a\u95f4\u5e76\u5b8c\u6210\u4e86\u8d4b\u521d\u59cb\u503c\u3002\u800c\u8d4b\u503c\u5c31\u662f\u7ed9\u5df2\u7ecf\u5b8c\u6210\u5b9a\u4e49\u7684\u5185\u5b58\u7a7a\u95f4\u8d4b\u503c\u3002 \u9759\u6001\u6570\u636e\u6210\u5458\u5b9a\u4e49\u4e0e\u57fa\u672c\u6027\u8d28 \u4f7f\u7528 static \u4fee\u9970\u7684\u6570\u636e\u6210\u5458\uff0c\u662f\u96b6\u5c5e\u4e8e\u7c7b\u7684\uff0c\u79f0\u4e3a\u7c7b\u7684\u9759\u6001\u6570\u636e\u6210\u5458\uff0c\u4e5f\u79f0 \u7c7b\u53d8\u91cf \u3002\u8be5\u6570\u636e\u6210\u5458\u88ab\u8be5\u7c7b\u7684\u6240\u6709\u5bf9\u8c61\u5171\u4eab\uff0c\u5373\u6240\u6709\u5bf9\u8c61\u4e2d\u7684\u8fd9\u4e2a\u6570\u636e\u57df\u5904\u5728\u540c\u4e00\u5185\u5b58\u4f4d\u7f6e\uff0c\u5728\u7c7b\u5b9e\u4f8b\u5316\u5bf9\u8c61\u524d\u5df2\u5206\u914d\u5185\u5b58\u7a7a\u95f4\u3002 \u7c7b\u7684\u9759\u6001\u6210\u5458\uff08\u6570\u636e\u3001\u51fd\u6570\uff09\u65e2\u53ef\u4ee5\u901a\u8fc7\u5bf9\u8c61\u6765\u8bbf\u95ee\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7c7b\u540d\u6765\u8bbf\u95ee\uff0c\u5982 ClassName::static_var \u6216\u8005 a.static_var \uff08 a \u4e3a ClassName \u7c7b\u7684\u5bf9\u8c61\uff09\u3002 \u7c7b\u7684\u9759\u6001\u6210\u5458\u5728\u5b9e\u73b0\u6587\u4ef6\u4e2d\u8d4b\u521d\u503c\uff0c\u683c\u5f0f\u4e3a Type ClassName::static_var = Value \u3002 \u548c\u5168\u5c40\u53d8\u91cf\u4e00\u6837\uff0c\u7c7b\u7684\u9759\u6001\u6570\u636e\u6210\u5458\u5728\u7a0b\u5e8f\u5f00\u59cb\u524d\u521d\u59cb\u5316\u3002\u5e94\u8be5\u5728 .h \u6587\u4ef6\u91cc\u58f0\u660e\uff08\u4e0d\u5206\u914d\u5185\u5b58\u7a7a\u95f4\uff09\uff0c\u5728 .cpp \u6587\u4ef6\u91cc\u5b9a\u4e49\uff08\u5206\u914d\u5185\u5b58\u7a7a\u95f4\u4e14\u521d\u59cb\u5316\uff09\u3002 \u6700\u597d\u4e0d\u8981\u5728 .h \u6587\u4ef6\u91cc\u5b9a\u4e49\uff08\u4e5f\u5c31\u662f\u5199 static int x = 0 \uff09\u3002\u5982\u679c\u8fd9\u4e48\u505a\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u91cd\u590d\u5b9a\u4e49\uff08\u91cd\u590d\u5206\u914d\u5185\u5b58\u7a7a\u95f4\uff09\uff0c\u6545\u800c\u8fd9\u4e48\u5199\u4e0d\u592a\u597d\u3002\u53ef\u80fd\u9020\u6210\u91cd\u5b9a\u4e49\u800c\u65e0\u6cd5\u5b8c\u6210\u94fe\u63a5\uff0c\u7f16\u8bd1\u5931\u8d25\u3002 \u4f8b\u5b50 \u8fd9\u4e2a\u4f8b\u5b50\u7684\u610f\u4e49\uff1a\u6ce8\u610f\u5230\u6211\u901a\u8fc7\u6784\u9020\u51fd\u6570\u6784\u9020\u4e86\u4e2a Test \u6570\u7ec4\uff0c\u542b\u6709 10 \u4e2a\u5bf9\u8c61\uff0c\u6bcf\u8c03\u7528\u4e00\u6b21\u6784\u9020\u51fd\u6570\u5c31\u4f1a\u7ed9 count++ \uff0c\u4ece\u800c\u52a0\u4e86 10 \u6b21\u3002\uff08\u8fd9\u5176\u5b9e\u4e5f\u4f53\u73b0\u4e86 static \u6570\u636e\u662f\u6574\u4e2a\u7c7b\u5171\u4eab\u7684\uff09","title":"static \u6570\u636e\u6210\u5458\uff08\u7c7b\u53d8\u91cf\uff09"},{"location":"languages/c-oop/class-advanced/#static_1","text":"\u5b9a\u4e49\u4e0e\u57fa\u672c\u6027\u8d28 \u5728\u8fd4\u56de\u503c\u524d\u9762\u6dfb\u52a0 static \u4fee\u9970\u7684\u6210\u5458\u51fd\u6570\uff0c\u79f0\u4e3a\u7c7b\u7684\u9759\u6001\u6210\u5458\u51fd\u6570\u3002 \u548c\u9759\u6001\u6570\u636e\u6210\u5458\u7c7b\u4f3c\uff0c\u7c7b\u7684\u9759\u6001\u6210\u5458\u51fd\u6570\u65e2\u53ef\u4ee5\u901a\u8fc7\u5bf9\u8c61\u6765\u8bbf\u95ee\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7c7b\u540d\u6765\u8bbf\u95ee\uff0c\u5982 ClassName::static_function \u6216\u8005 a.static_function \uff08 a \u4e3a ClassName \u7c7b\u7684\u5bf9\u8c61\uff09\u3002 \u9759\u6001\u6210\u5458\u51fd\u6570\u5c5e\u4e8e\u6574\u4e2a\u7c7b\uff0c\u5728\u7c7b\u5b9e\u4f8b\u5316\u5bf9\u8c61\u4e4b\u524d\u5df2\u7ecf\u5206\u914d\u4e86\u5185\u5b58\u7a7a\u95f4\u3002 \u7c7b\u7684\u975e\u9759\u6001\u6210\u5458\u5fc5\u987b\u5728\u7c7b\u5b9e\u4f8b\u5316\u5bf9\u8c61\u540e\u624d\u5206\u914d\u5185\u5b58\u7a7a\u95f4\u3002\u5982\u679c\u4f7f\u7528\u9759\u6001\u6210\u5458\u51fd\u6570\u8bbf\u95ee\u975e\u9759\u6001\u6210\u5458\uff0c\u76f8\u5f53\u4e8e\u6ca1\u6709\u5b9a\u4e49\u4e00\u4e2a\u53d8\u91cf\u5374\u8981\u4f7f\u7528\u5b83\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #include <iostream> using namespace std ; class A { int data ; public : static void output () { cout << data << endl ; // \u7f16\u8bd1\u9519\u8bef } }; int main () { A a ; a . output (); return 0 ; } \u770b\u4e0a\u53bb output \u5c06\u4f1a\u8f93\u51fa a \u7684 data \uff0c\u800c\u4e14 a \u5df2\u7ecf\u521d\u59cb\u5316\u4e86\uff0c\u8c8c\u4f3c\u53ef\u4ee5\u8f93\u51fa\u3002\u4f46\u662f\u7531\u4e8e static \u6210\u5458\u51fd\u6570\u6ca1\u6709 this \u6307\u9488\uff0c\u6545\u800c output \u6ca1\u6cd5\u5f97\u77e5\u8f93\u51fa\u7684\u662f this->data \uff0c\u4ece\u800c\u7f16\u8bd1\u5931\u8d25\u3002 \u4f46\u662f\u9759\u6001\u6210\u5458\u51fd\u6570\u662f\u53ef\u4ee5\u4fee\u6539\u9759\u6001\u6570\u636e\u6210\u5458\u7684\uff0c\u6bd4\u5982\u8fd9\u6bb5\u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 9 class Test { const int member1 ; static float member2 ; public : Test ( int mem ) : member1 ( mem ) { } int MyMember1 () const { return member1 ; } static float Mymember2 () { return member2 ; } }; float Test :: member2 = 0 ; \u8fd9\u91cc Mymember2 \u662f\u53ef\u4ee5\u8bbf\u95ee member2 \u7684\uff0c\u56e0\u4e3a member2 \u662f\u9759\u6001\u6570\u636e\u6210\u5458\u3002 \u4e0e\u9759\u6001\u6570\u636e\u6210\u5458\u6709\u533a\u522b\u7684\u662f\uff0c\u9759\u6001\u6210\u5458\u51fd\u6570\u53ef\u4ee5\u5728 .h \u4e2d\u5b9e\u73b0\u3002\uff08\u53ef\u4ee5\u4f46\u662f\u4e0d\u63a8\u8350\uff0c\u5fd7\u613f\u8005\u8bf4\u5e0c\u671b\u5b9e\u73b0\u90fd\u653e\u5230\u76f8\u5e94\u7684 .cpp \u91cc\u9762\uff09","title":"static \u6210\u5458\u51fd\u6570"},{"location":"languages/c-oop/class-advanced/#_4","text":"","title":"\u5e38\u91cf\u6570\u636e\u6210\u5458\u4e0e\u51fd\u6570"},{"location":"languages/c-oop/class-advanced/#_5","text":"\u5b9a\u4e49 \u5e38\u91cf\u5173\u952e\u5b57 const \u5e38\u7528\u4e8e\u4fee\u9970\u53d8\u91cf\u3001\u5f15\u7528\u3001\u6307\u9488\u3001\u51fd\u6570\u8fd4\u56de\u503c\u3002 \u6027\u8d28 \u4fee\u9970\u53d8\u91cf\u65f6\uff08\u5982 const int n = 1 \uff09\uff0c\u5fc5\u987b\u5c31\u5730\u521d\u59cb\u5316\uff0c\u8be5\u53d8\u91cf\u7684\u503c\u5728\u5176\u751f\u547d\u5468\u671f\u5185\u90fd\u4e0d\u4f1a\u53d1\u751f\u53d8\u5316\u3002\u4fee\u9970\u5f15\u7528\u3001\u6307\u9488\u65f6\uff08\u5982 int a = 1; const int& b = a \uff09\uff0c\u4e0d\u80fd\u901a\u8fc7\u8be5\u5f15\u7528\u3001\u6307\u9488\u4fee\u6539\u76f8\u5e94\u53d8\u91cf\u7684\u503c\uff0c\u5e38\u7528\u4e8e\u51fd\u6570\u53c2\u6570\u4ee5\u4fdd\u8bc1\u51fd\u6570\u4f53\u4e2d\u65e0\u6cd5\u4fee\u6539\u53c2\u6570\u7684\u503c\u3002\u4fee\u9970\u51fd\u6570\u8fd4\u56de\u503c\u65f6\uff08\u5982 const int* func() { } \uff09\uff0c\u51fd\u6570\u8fd4\u56de\u503c\u7684\u5185\u5bb9\uff08\u6216\u5176\u6307\u5411\u7684\u5185\u5bb9\uff09\u4e0d\u80fd\u88ab\u4fee\u6539\u3002","title":"\u5e38\u91cf"},{"location":"languages/c-oop/class-advanced/#_6","text":"\u5b9a\u4e49 \u4f7f\u7528 const \u4fee\u9970\u7684\u6570\u636e\u6210\u5458\uff0c\u79f0\u4e3a\u7c7b\u7684\u5e38\u91cf\u6570\u636e\u6210\u5458\uff0c\u5728\u5bf9\u8c61\uff08\u5177\u4f53\u67d0\u4e2a\u5bf9\u8c61\uff0c\u800c\u975e\u4e00\u4e2a\u7c7b\u5171\u6709\uff09\u7684\u6574\u4e2a\u751f\u547d\u5468\u671f\u91cc\u4e0d\u53ef\u66f4\u6539\u3002 \u521d\u59cb\u5316 \u6784\u9020\u51fd\u6570\u7684\u521d\u59cb\u5316\u5217\u8868\u4e2d\u88ab\u521d\u59cb\u5316\uff0c\u5c31\u5730\u521d\u59cb\u5316\uff0c\u4f46\u662f\u4e0d\u5141\u8bb8\u5728\u6784\u9020\u51fd\u6570\u7684\u51fd\u6570\u4f53\u4e2d\u901a\u8fc7\u8d4b\u503c\u6765\u8bbe\u7f6e\u3002 \u5bf9\u201c\u4e0d\u80fd\u8d4b\u503c\u201d\u7684\u7406\u89e3 \u4e3a\u4ec0\u4e48\u4e0d\u80fd\u5728\u6784\u9020\u51fd\u6570\u91cc\u9762\u521d\u59cb\u5316\u5e38\u91cf\uff1f \u6784\u9020\u51fd\u6570\u4e5f\u662f\u51fd\u6570\uff0c\u5e38\u91cf\u7684\u610f\u601d\u5c31\u662f\u51fd\u6570\u4e0d\u53ef\u4ee5\u6539\u3002\u2014\u2014 cqq \u5e38\u91cf\u53ea\u80fd\u5b9a\u4e49\u4e0d\u80fd\u8d4b\u503c\uff0c\u5728\u4efb\u4f55\u51fd\u6570\u4f53\u91cc\u7684\u90fd\u7b97\u662f\u8d4b\u503c\u8bed\u53e5\uff0c\u6784\u9020\u51fd\u6570\u4f53\u4e5f\u7b97\u3002\u2014\u2014 cyd \u5f53\u6267\u884c\u5230\u6784\u9020\u51fd\u6570\u7684\u51fd\u6570\u4f53\u91cc\u7684\u65f6\u5019\uff0c\u5b9e\u4f8b\u5df2\u7ecf\u6784\u9020\u5b8c\u6210\u4e86\uff08 this \u6307\u9488\u5df2\u7ecf\u5b58\u5728\uff09\uff0c\u8fd9\u65f6\u5c31\u53ea\u80fd\u4fee\u6539\u5b83\u7684\u4e00\u4e9b\u975e const \u5c5e\u6027\u4e86\u3002\u2014\u2014 \u5355\u5e26\u5e08","title":"\u5e38\u91cf\u6570\u636e\u6210\u5458"},{"location":"languages/c-oop/class-advanced/#_7","text":"\u5b9a\u4e49 \u6210\u5458\u51fd\u6570\u4e5f\u80fd\u7528 const \u6765\u4fee\u9970\uff0c\u79f0\u4e3a\u5e38\u91cf\u6210\u5458\u51fd\u6570\u3002 \u610f\u4e49 \u5b9e\u73b0\u8bed\u53e5\u4e0d\u80fd\u4fee\u6539\u7c7b\u7684\u6570\u636e\u6210\u5458\uff0c\u5373\u4e0d\u80fd\u6539\u53d8\u5bf9\u8c61\u72b6\u6001\uff08\u5185\u5bb9\uff09\u3002 \u975e\u5e38\u91cf\u5bf9\u8c61\u7684\u5e38\u91cf\u6210\u5458\u51fd\u6570\u4e0d\u80fd\u8bbf\u95ee\u4e0d\u4fee\u6539\u5bf9\u8c61\u72b6\u6001\u7684\u975e\u5e38\u91cf\u6210\u5458\u51fd\u6570\u3002 \u6240\u8c13\u5e38\u91cf\u6210\u5458\u51fd\u6570\u4e0d\u80fd\u4fee\u6539\u7c7b\u7684\u6570\u636e\u6210\u5458\uff0c\u8fd9\u53e5\u8bdd\u662f\u5bf9\u7684\uff0c\u4f46\u662f\u8fd9\u53e5\u8bdd\u6709\u5f88\u591a\u95ee\u9898\u3002\u9996\u5148\uff0c\u5b9e\u9645\u4e0a A \u7c7b a \u5bf9\u8c61\u7684\u5e38\u91cf\u6210\u5458\u51fd\u6570\u4e0d\u80fd\u4fee\u6539 a \u7684\u6240\u6709\u6210\u5458\u6570\u636e\uff0c\u4f46\u662f\u53ef\u4ee5\u4fee\u6539 A \u7c7b\u7684\u9759\u6001\u6570\u636e\u6210\u5458\uff0c\u751a\u81f3\u8fd8\u53ef\u4ee5\u4fee\u6539 A \u7c7b\u53e6\u5916\u4e00\u4e2a b \u5bf9\u8c61\u7684\u6210\u5458\u6570\u636e\uff0c\u5c31\u53ea\u662f\u4e0d\u80fd\u4fee\u6539\u72ec\u5c5e\u4e8e\u81ea\u5df1\u7684\u6210\u5458\u6570\u636e\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 #include <iostream> using namespace std ; class Test { const int member1 ; static float member2 ; public : int zcy = 0 ; Test ( int mem ) : member1 ( mem ) { } int MyMember1 ( Test & a ) const { a . zcy += 100 ; return member1 ; } static float Mymember2 () { return member2 ; } }; float Test :: member2 = 0 ; int main () { Test a ( 0 ), b ( 0 ); a . MyMember1 ( b ); cout << b . zcy << endl ; // 100 return 0 ; } \u5199\u6cd5 \u5e38\u51fd\u6570\u7684\u58f0\u660e\u4e3a\uff1a ReturnType Func() const { } \uff0c\u6ce8\u610f\u4e0e const ReturnType Func() { } \u533a\u522b\u3002 \u540e\u8005\u662f\u8fd4\u56de\u503c\u4e3a\u5e38\u91cf\uff0c\u4e5f\u5c31\u662f\u524d\u6587\u63d0\u53ca\u7684\u201c\u4fee\u9970\u51fd\u6570\u8fd4\u56de\u503c\u65f6\uff08\u5982 const int* func() { } \uff09\uff0c\u51fd\u6570\u8fd4\u56de\u503c\u7684\u5185\u5bb9\uff08\u6216\u5176\u6307\u5411\u7684\u5185\u5bb9\uff09\u4e0d\u80fd\u88ab\u4fee\u6539\u3002\u201d","title":"\u5e38\u91cf\u6210\u5458\u51fd\u6570"},{"location":"languages/c-oop/class-advanced/#_8","text":"\u82e5\u5bf9\u8c61\u88ab\u5b9a\u4e49\u4e3a\u5e38\u91cf\uff08 const ClassName a \uff09\uff0c\u5219\u5b83\u53ea\u80fd\u8c03\u7528\u4ee5 const \u4fee\u9970\u7684\u6210\u5458\u51fd\u6570\u4e0e\u9759\u6001\u6210\u5458\u51fd\u6570\u3002\u4e0d\u80fd\u8c03\u7528\u4efb\u4f55\u65e2\u975e\u5e38\u91cf\uff0c\u4e5f\u975e\u9759\u6001\u7684\u51fd\u6570\u3002\u4ee5\u53ca\uff0c\u5e38\u91cf\u5bf9\u8c61\u53ef\u4ee5\u6210\u4e3a\u975e\u5e38\u91cf\u6210\u5458\u51fd\u6570\u7684\u53c2\u6570\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 #include <iostream> using namespace std ; class Test { const int member1 ; static float member2 ; public : int zcy = 0 ; Test ( int mem ) : member1 ( mem ) { } int func1 () { cout << \"\u5f53\u7136\u8c03\u7528\u4e0d\u4e86\" << endl ; return 0 ; } static int func2 () { cout << \"\u8fd9\u4e2a\u8c03\u7528\u7684\u4e86\" << endl ; return 0 ; } int MyMember1 ( Test & a ) const { a . zcy += 100 ; return member1 ; } static float Mymember2 () { return member2 ; } }; float Test :: member2 = 0 ; int main () { Test a ( 0 ), b ( 0 ); const Test c ( 0 ); c . func2 (); // \"\u8fd9\u4e2a\u8c03\u7528\u7684\u4e86\" a . MyMember1 ( b ); cout << b . zcy << endl ; // 100 return 0 ; }","title":"\u5e38\u91cf\u5bf9\u8c61"},{"location":"languages/c-oop/class-advanced/#_9","text":"\u5b9a\u4e49 \u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u65e2\u662f\u5e38\u91cf\u4e5f\u662f\u9759\u6001\u7684\u53d8\u91cf\u3002\u5e38\u91cf\u610f\u5473\u7740\u4e0d\u53ef\u6539\uff0c\u9759\u91cf\u610f\u5473\u7740\u7279\u5b9a\u7684\u4f5c\u7528\u533a\u57df\u3002\u6211\u4eec\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5b9a\u4e49\u5e38\u91cf\u9759\u6001\u6210\u5458\u6570\u636e\uff0c\u4f5c\u4e3a\u4e0d\u53ef\u66f4\u6539\u7684\u7c7b\u53d8\u91cf\u3002 \u5b9a\u4e49\u65b9\u6cd5 \u548c\u9759\u6001\u53d8\u91cf\u4e00\u6837\uff0c\u5728\u7c7b\u5185\u53ea\u8fdb\u884c\u58f0\u660e\uff08\u4e0d\u5206\u914d\u7a7a\u95f4\uff09\uff0c\u5728 .cpp \u91cc\u624d\u5b9a\u4e49\uff08\u5b8c\u6210\u5185\u5b58\u5206\u914d\u5e76\u8d4b\u521d\u503c\uff09\u3002\u56de\u987e\uff0c static \u6210\u5458\u6570\u636e\u8981\u5728 cpp \u91cc\u58f0\u660e\uff0c\u5728 .h \u91cc\u5b9a\u4e49\uff1b\u800c const \u7c7b\u578b\u8981\u5728\u521d\u59cb\u5316\u5217\u8868\u91cc\u521d\u59cb\u5316\u6216\u8005\u5c31\u5730\u521d\u59cb\u5316\u3002 \u5199\u6210 const static \u548c static const \u6ca1\u6709\u533a\u522b\u3002 \u6709\u4e24\u4e2a\u4f8b\u5916\uff1a int \u548c enum \uff08\u679a\u4e3e\u578b\uff09\u7c7b\u578b\u53ef\u4ee5\u5c31\u5730\u521d\u59cb\u5316\uff08\u4f46\u4e5f\u4e0d\u63a8\u8350\u8fd9\u4e48\u5199\uff09\u3002\u6545\u800c\uff0c\u9759\u6001\u6570\u636e\u6210\u5458\u5fc5\u987b\u5728\u7c7b\u5916\u5b9a\u4e49\uff0c\u4f46\u662f\u5e38\u91cf\u9759\u6001\u6570\u636e\u6210\u5458\u4e2d int \u548c enum \uff08\u679a\u4e3e\u578b\uff09\u7c7b\u578b\u53ef\u4ee5\u5c31\u5730\u521d\u59cb\u5316\u3002 \u6545\u800c\u5224\u65ad\u9898\uff1a\u5e38\u91cf\u9759\u6001\u7684\u6210\u5458\u53d8\u91cf\u53ea\u80fd\u5728\u7c7b\u5916\u8fdb\u884c\u521d\u59cb\u5316\u3002\u662f\u9519\u7684\uff0c\u8fd9\u4e0d\u662f\u201c\u4f60\u53ef\u4ee5\u5728\u7c7b\u5185\u5199\uff0c\u4f46\u662f\u4e0d\u63a8\u8350\u201d\u8fd9\u610f\u601d\uff0c\u800c\u662f\u5f3a\u8c03\u4e86\u4e24\u4e2a\u7279\u4f8b\u3002 \u8bbf\u95ee\u6743\u9650 \u5e38\u91cf\u9759\u6001\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf\u4e00\u6837\uff0c\u6ee1\u8db3\u8bbf\u95ee\u6743\u9650\u7684\u4efb\u610f\u51fd\u6570\u5747\u53ef\u8bbf\u95ee\uff0c\u4f46\u7531\u4e8e const \u7684\u4fee\u9970\u90fd\u4e0d\u80fd\u4fee\u6539\u3002","title":"\u5e38\u91cf\u9759\u6001\u53d8\u91cf"},{"location":"languages/c-oop/class-advanced/#_10","text":"\u5e38\u91cf\u6210\u5458\u51fd\u6570\u4f9d\u8d56\u4e8e\u5177\u4f53\u7684\u5bf9\u8c61\uff0c\u4e0d\u80fd\u4fee\u6539\u5bf9\u8c61\u7684\u6570\u636e\u6210\u5458\u3002\u9759\u6001\u6210\u5458\u51fd\u6570\u4e0d\u4f9d\u8d56\u4e8e\u5bf9\u8c61\uff0c\u5b83\u5c5e\u4e8e\u6574\u4e2a\u7c7b\uff0c\u53ea\u80fd\u8c03\u7528\u9759\u6001\u6210\u5458\u3002\u6545\u800c\u5bf9\u4e8e\u51fd\u6570\u800c\u8a00\uff0c\u5e38\u91cf\u548c\u9759\u6001\u662f\u77db\u76fe\u7684\u3002","title":"\u5e38\u91cf\u9759\u6001\u51fd\u6570\u4e0d\u5b58\u5728"},{"location":"languages/c-oop/class-advanced/#_11","text":"\u5e38\u91cf\u6210\u5458\u51fd\u6570\u548c\u975e\u5e38\u91cf\u6210\u5458\u51fd\u6570\u6784\u6210\u91cd\u8f7d\u65f6\uff0c\u4f20\u5165\u4e24\u51fd\u6570\u7684\u53c2\u6570\u4e2d this \u6307\u9488\u7684\u7c7b\u578b\u4e0d\u540c\u3002\u5e38\u91cf\u6210\u5458\u51fd\u6570\u7684\u4f20\u5165\u6307\u9488\u7c7b\u578b\u662f const Num* \uff0c\u800c\u975e\u5e38\u91cf\u6210\u5458\u51fd\u6570\u7684\u4f20\u5165\u6307\u9488\u7c7b\u578b\u662f Num* \uff0c\u6240\u4ee5\u975e\u5e38\u91cf\u5bf9\u8c61\u4f1a\u4f18\u5148\u5339\u914d\u975e\u5e38\u91cf\u6210\u5458\u51fd\u6570\uff0c\u800c\u4e0d\u662f\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\uff0c\u5c06 this \u8f6c\u6362\u4e3a const this \u518d\u4f7f\u7528\u3002","title":"\u91cd\u8f7d\u5339\u914d\u6027"},{"location":"languages/c-oop/class-advanced/#_12","text":"","title":"\u6784\u9020\u4e0e\u6790\u6784"},{"location":"languages/c-oop/class-advanced/#_13","text":"\u5e38\u91cf\u5bf9\u8c61\u548c\u975e\u5e38\u91cf\u5bf9\u8c61\u57fa\u672c\u76f8\u540c\u3002 \u5e38\u91cf\u5168\u5c40\u5bf9\u8c61\uff1a\u5728 main() \u51fd\u6570\u8c03\u7528\u4e4b\u524d\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u5728 main() \u51fd\u6570\u6267\u884c\u5b8c return \uff0c\u7a0b\u5e8f\u7ed3\u675f\u65f6\uff0c\u5bf9\u8c61\u88ab\u6790\u6784\u3002 \u5e38\u91cf\u5c40\u90e8\u5bf9\u8c61\uff1a\u5728\u7a0b\u5e8f\u6267\u884c\u5230\u8be5\u5c40\u90e8\u5bf9\u8c61\u7684\u4ee3\u7801\u65f6\u88ab\u521d\u59cb\u5316\u3002\u5728\u5c40\u90e8\u5bf9\u8c61\u751f\u547d\u5468\u671f\u7ed3\u675f\u3001\u5373\u6240\u5728\u4f5c\u7528\u57df\u7ed3\u675f\u540e\u88ab\u6790\u6784\u3002","title":"\u5e38\u91cf\u5bf9\u8c61\u7684\u6784\u9020\u4e0e\u6790\u6784"},{"location":"languages/c-oop/class-advanced/#_14","text":"\u9759\u6001\u5168\u5c40\u5bf9\u8c61\u7684\u6784\u9020\u4e0e\u6790\u6784\u65f6\u673a\u548c\u666e\u901a\u5168\u5c40\u5bf9\u8c61\u76f8\u540c\uff08\u5373\uff1a\u5728 main() \u8c03\u7528\u524d\u521d\u59cb\u5316\uff0c\u5728 main() \u6267\u884c\u5b8c return \u540e\u88ab\u6790\u6784\uff09\u3002 \u9759\u6001\u5c40\u90e8\u5bf9\u8c61\u5728\u7a0b\u5e8f\u6267\u884c\u5230\u8be5\u9759\u6001\u5c40\u90e8\u5bf9\u8c61\u7684\u4ee3\u7801\u65f6\u88ab\u521d\u59cb\u5316\uff0c\u4f46\u662f\u79bb\u5f00\u4f5c\u7528\u57df\u4e0d\u6790\u6784\u3002\u7b2c\u4e8c\u6b21\u6267\u884c\u5230\u8be5\u5bf9\u8c61\u4ee3\u7801\u65f6\uff0c\u4e0d\u518d\u521d\u59cb\u5316\uff0c\u76f4\u63a5\u4f7f\u7528\u4e0a\u4e00\u6b21\u7684\u5bf9\u8c61\uff08\u8fd9\u91cc\u548c\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u975e\u5e38\u76f8\u4f3c\uff09\u3002 \u5728 main() \u51fd\u6570\u7ed3\u675f\u540e\u88ab\u6790\u6784\u3002 1 2 3 void fun ( int i , int n ) { if ( i >= n ) static A static_obj ( \"static\" ); } \u6bd4\u5982\u8fd9\u6bb5\u4ee3\u7801\uff0c\u867d\u7136\u770b\u4e0a\u53bb\u4f1a\u7ed9 static_obj \u591a\u6b21\u6784\u9020\uff0c\u4f46\u662f\u7531\u4e8e\u5176\u662f\u9759\u6001\u5c40\u90e8\u5bf9\u8c61\uff0c\u6545\u800c\u53ea\u4f1a\u6784\u9020\u4e00\u6b21\u3002\u4e4b\u540e\u6bcf\u6b21\u5229\u7528\u4e0a\u4e00\u6b21\u5269\u4e0b\u90e8\u5206\uff08\u76f8\u5f53\u4e8e\u51fd\u6570\u91cc\u5185\uff0c\u7b2c\u4e00\u6b21\u4ee5\u540e\u7684\u5bf9\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u7684\u6784\u9020\u5931\u6548\uff09\u3002","title":"\u9759\u6001\u5bf9\u8c61\u7684\u6784\u9020\u4e0e\u6790\u6784"},{"location":"languages/c-oop/class-advanced/#_15","text":"\u7c7b A \u7684\u5bf9\u8c61 a \u4f5c\u4e3a\u7c7b B \u7684\u9759\u6001\u53d8\u91cf\u3002\u6bd4\u5982\uff1a 1 2 3 4 class A { }; class B { static A a ; }; a \u7684\u6784\u9020\u4e0e\u6790\u6784\u8868\u73b0\u548c\u5168\u5c40\u5bf9\u8c61\u7c7b\u4f3c\uff0c\u5373\u5728 main() \u51fd\u6570\u8c03\u7528\u4e4b\u524d\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u5728 main() \u51fd\u6570\u6267\u884c\u5b8c return \uff0c\u7a0b\u5e8f\u7ed3\u675f\u65f6\uff0c\u5bf9\u8c61\u88ab\u6790\u6784\u3002 a \u4f5c\u4e3a b \u7684\u7c7b\u5bf9\u8c61\uff0c\u548c B \u662f\u5426\u5b9e\u4f8b\u5316\u65e0\u5173\uff08\u8fd9\u4e2a\u548c\u7c7b\u91cc\u9762\u7684\u9ed8\u8ba4\u7c7b\u578b\u7684\u9759\u6001\u53d8\u91cf\uff0c\u6bd4\u5982 B \u91cc\u9762\u7684\u5bf9\u8c61 static int c \u662f\u4e00\u6837\u7684\uff09\u3002 \u8fd9\u4e2a\u4f8b\u5b50\u503c\u5f97\u6ce8\u610f\u7684\u5c31\u662f\uff0c fun \u51fd\u6570\u4f53\u7c7b\u7684\u9759\u6001\u5c40\u90e8\u5bf9\u8c61\u53ea\u6709\u4e00\u6b21\u6784\u9020\uff0c\u5e76\u6ca1\u6709\u56db\u6b21\u3002 \u53e6\u5916\uff0c A B::a1(\"static B::a1\") \u662f\u4ec0\u4e48\u610f\u601d\uff1f \u8fd9\u91cc\u662f\u5728\u7c7b\u5916\u5b9a\u4e49 B \u7684 static \u6570\u636e\u6210\u5458 a1 \uff0c\u800c\u524d\u9762\u7684 A \u5219\u662f\u5728\u4f7f\u7528\u6784\u9020\u51fd\u6570\u3002\u8fd9\u91cc\u5fc5\u987b\u6307\u5b9a\u662f B::a1 \uff0c\u4e0d\u7136 A a1(\"static B::a1\") \u5219\u4f1a\u5b9a\u4e49\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\uff0c\u800c\u4e0d\u662f\u6784\u9020 B \u7684 static \u6570\u636e\u6210\u5458\u3002","title":"\u7c7b\u9759\u6001\u5bf9\u8c61\u6784\u9020\u4e0e\u6790\u6784"},{"location":"languages/c-oop/class-advanced/#_16","text":"\u4f20\u9012\u5f62\u53c2 1 2 3 4 void fun ( A b ) { cout << \"In fun: b.s = \" << b . s << endl ; } fun ( a ); \u5728\u51fd\u6570\u88ab\u8c03\u7528\u65f6\uff0c b \u88ab\u6784\u9020\uff0c\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff08\u89c1\u4e0b\u4e00\u7ae0\u8282\uff09\u8fdb\u884c\u521d\u59cb\u5316\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5bf9\u8c61 b \u7684\u5c5e\u6027\u503c\u548c a \u4e00\u81f4\u3002\u5728\u51fd\u6570\u7ed3\u675f\u65f6\uff0c\u8c03\u7528\u6790\u6784\u51fd\u6570\uff0c b \u88ab\u6790\u6784\u3002 \u7ed3\u5408\u540e\u7eed\u5b66\u4e60\u7684\u62f7\u8d1d\u6784\u9020\u548c\u79fb\u52a8\u6784\u9020\uff0c\u6211\u4eec\u5f53\u7136\u53ef\u4ee5\u786e\u5b9a\u5f62\u53c2\u4f1a\u53d1\u751f\u4e00\u6b21\u62f7\u8d1d\u6784\u9020\uff0c\u4f46\u662f\u4e3a\u4ec0\u4e48\u6ca1\u6709\u76f8\u5e94\u7684\u8f93\u51fa\u5462\uff1f \u56e0\u4e3a\uff0c\u6ca1\u6709\u663e\u5f0f\u5b9a\u4e49\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u7cfb\u7edf\u8c03\u7528\u4e86\u9690\u5f0f\u751f\u6210\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u8fd9\u5f53\u7136\u662f\u6ca1\u6709\u8f93\u51fa\u7684\u3002\u5f62\u53c2\u7684\u6784\u9020\u7528\u7684\u662f\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u53ef\u662f\u6790\u6784\u5374\u662f\u5171\u7528\u7684\u4e00\u4e2a\u6790\u6784\u51fd\u6570\u3002 \u4f20\u9012\u5f15\u7528\u4e0e\u6307\u9488 1 2 3 4 void fun ( A & b ) { cout << \"In fun: b.s = \" << b . s << endl ; } fun ( a ); \u5728\u51fd\u6570\u88ab\u8c03\u7528\u65f6\uff0c b \u4e0d\u9700\u8981\u88ab\u62f7\u8d1d\u6784\u9020\uff0c\u56e0\u4e3a b \u662f a \u7684\u5f15\u7528\u3002\u5728\u51fd\u6570\u7ed3\u675f\u65f6\uff0c\u4e5f\u4e0d\u9700\u8981\u8c03\u7528\u6790\u6784\u51fd\u6570\uff0c\u56e0\u4e3a b \u53ea\u662f\u4e00\u4e2a\u5f15\u7528\uff0c\u800c\u4e0d\u662f A \u7684\u5bf9\u8c61\u3002 \u7c7b\u6210\u5458\u542b\u6709\u6307\u9488 \u5982\u679c\u4f20\u5165\u5f62\u53c2\u800c\u4e0d\u662f\u5f15\u7528\u6216\u6307\u9488\uff0c\u7531\u4e8e\u62f7\u8d1d\u6784\u9020\u4e0d\u4f1a\u5c06\u88ab\u62f7\u8d1d\u8005\u7f6e\u7a7a\uff0c\u6545\u800c\u5f62\u53c2\u548c\u5b9e\u53c2\u7684\u6307\u9488\u6307\u5411\u4e86\u5b8c\u5168\u76f8\u540c\u7684\u5730\u5740\u3002\u4f46\u662f\u5f62\u53c2\u4f1a\u5728\u51fd\u6570\u4f53\u7ed3\u675f\u540e\u6790\u6784\uff0c\u5c06\u5f62\u53c2\u6307\u5411\u7684\u7a7a\u95f4\u91ca\u653e\u6389\u3002\u6211\u7684\u5b9e\u53c2\u53c8\u4f1a\u5728\u4e3b\u51fd\u6570\u7ed3\u675f\u540e\u6790\u6784\uff0c\u8fd9\u65f6\u5b9e\u53c2\u6307\u5411\u7684\u7a7a\u95f4\u5c06\u4f1a\u88ab\u518d\u6b21\u6790\u6784\uff0c\u53cd\u590d\u6790\u6784\uff0c\u6790\u6784\u7a7a\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u4ece\u800c\u62a5\u9519\u3002 \u8fd9\u53e6\u4e00\u65b9\u9762\u542f\u53d1\u6211\u4eec\uff0c\u542b\u6709\u6307\u9488\u7684\u7c7b\uff0c\u4e00\u822c\u5e0c\u671b\u7528\u79fb\u52a8\u6784\u9020\u800c\u975e\u62f7\u8d1d\u6784\u9020\u3002 \u4f20\u5165\u5f15\u7528\u7684\u4f18\u70b9 \u5c3d\u91cf\u4f7f\u7528\u5bf9\u8c61\u5f15\u7528\u4f5c\u4e3a\u53c2\u6570\uff0c\u8fd9\u6837\u505a\u8fd8\u53ef\u4ee5\u51cf\u5c11\u65f6\u95f4\u5f00\u9500\uff08\u56e0\u4e3a\u7701\u53bb\u4e86\u62f7\u8d1d\u6784\u9020\u5f62\u53c2\u7684\u65f6\u95f4\uff09\u3002","title":"\u53c2\u6570\u5bf9\u8c61\u6784\u9020\u4e0e\u6790\u6784"},{"location":"languages/c-oop/class-advanced/#new-delete","text":"","title":"\u5bf9\u8c61\u7684 new  \u548c delete"},{"location":"languages/c-oop/class-advanced/#_17","text":"new \u3002\u751f\u6210\u4e00\u4e2a\u7c7b\u5bf9\u8c61\uff08\u6ce8\u610f\u4e0d\u662f\u7c7b\u9759\u6001\u5bf9\u8c61\uff09\uff0c\u5e76\u8fd4\u56de\u5730\u5740\u3002 1 2 A * pA = new A [ 100 ]; // \u8c03\u7528\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u751f\u6210\u4e86 100 \u4e2a A \u7c7b\u5bf9\u8c61 A * pA = new A ( 100 ); // \u8c03\u7528\u5e26\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\uff0c\u6784\u9020\u4e86 1 \u4e2a A \u7c7b\u5bf9\u8c61 delete \u3002\u5220\u9664\u8be5\u7c7b\u5bf9\u8c61\uff0c\u91ca\u653e\u5185\u5b58\u8d44\u6e90\uff08\u8c03\u7528\u6790\u6784\u51fd\u6570\uff09\u3002 1 2 delete pA ; // \u91ca\u653e\u751f\u6210\u7684\u90a3\u4e2a A \u7c7b\u5bf9\u8c61 delete [] pA ; // \u91ca\u653e\u751f\u6210\u7684\u90a3 100 \u4e2a A \u7c7b\u5bf9\u8c61","title":"\u6982\u8ff0"},{"location":"languages/c-oop/class-advanced/#_18","text":"\u5bf9\u4e8e\u5927\u591a\u6570\u7f16\u8bd1\u5668\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u5982\u4e0b\u6982\u8ff0\u3002","title":"\u56fe\u793a"},{"location":"languages/c-oop/class-advanced/#_19","text":"\u642d\u914d\u4f7f\u7528 new \u548c delete \u8981\u914d\u5957\u4f7f\u7528\u3002 new \u548c delete \u642d\u914d\uff0c new[] \u548c delete[] \u642d\u914d\u3002 \u642d\u914d\u4e0d\u5f53 \u5bf9\u4e8e\u5927\u591a\u7f16\u8bd1\u5668\uff0c\u5982\u679c\u540c\u65f6\u4f7f\u7528 new[] \u548c delete \uff0c\u4f1a\u6709\u4ec0\u4e48\u540e\u679c\uff1f 1 2 A * pA = new A [ 3 ]; delete pA ; \u8be5 delete \u547d\u4ee4\u505a\u4e86\u4e24\u4ef6\u4e8b\uff1a\u8c03\u7528\u4e00\u6b21 pA \u6307\u5411\u7684\u5bf9\u8c61\u7684\u6790\u6784\u51fd\u6570\uff0c\u91ca\u653e pA \u5730\u5740\u7684\u5185\u5b58\u3002\u56e0\u4e3a\uff0c\u53ea\u8c03\u7528\u4e86\u4e00\u6b21\u6790\u6784\u51fd\u6570\uff0c\u6545\u800c\u5982\u679c\u7c7b\u5bf9\u8c61\u4e2d\u6709\u5927\u91cf\u7533\u8bf7\u5185\u5b58\u7684\u64cd\u4f5c\uff0c\u90a3\u4e48\u56e0\u4e3a\u6ca1\u6709\u8c03\u7528\u6790\u6784\u51fd\u6570\uff0c\u8fd9\u4e9b\u5185\u5b58\u65e0\u6cd5\u88ab\u91ca\u653e\uff0c\u9020\u6210\u5185\u5b58\u6cc4\u6f0f\u3002 \u6b64\u5916\uff0c\u76f4\u63a5\u91ca\u653e pA \u6307\u5411\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u8fd9\u4e2a\u4f1a\u9020\u6210\u4e25\u91cd\u7684\u6bb5\u9519\u8bef\uff0c\u7a0b\u5e8f\u5fc5\u7136\u4f1a\u5d29\u6e83\u3002\u56e0\u4e3a\u5206\u914d\u7a7a\u95f4\u7684\u8d77\u59cb\u5730\u5740\u662f pA \u5730\u5740\u51cf\u53bb 4 \u4e2a\u5b57\u8282\uff08 delete[] pA \u7684\u91ca\u653e\u5730\u5740\u81ea\u52a8\u8f6c\u6362\u4e3a pA \u5730\u5740\u51cf\u53bb 4 \u5b57\u8282\uff09\u3002 new \u662f\u4f1a\u8c03\u7528\u7c7b A \u7684\u6784\u9020\u51fd\u6570\u7684\uff08\u8fc7\u7a0b\uff1a\u5206\u914d\u5185\u5b58\u3001\u521d\u59cb\u5316\u3001\u8fd4\u56de\u6307\u9488\uff09\u3002 \u6ce8\u610f\u5230\u8fd9\u91cc\u7b2c\u56db\u4e2a\uff0c\u6211\u5b9e\u9645\u4e0a\u662f\u6784\u9020\u4e86 A \u7684\u6307\u9488\u6570\u7ec4\uff0c\u6784\u9020\u4e86 10 \u4e2a A* \u7c7b\u578b\u7684\u6307\u9488\uff0c\u4f46\u662f\u6ca1\u8c03\u7528\u6784\u9020\u51fd\u6570\u3002","title":"\u5339\u914d\u9879"},{"location":"languages/c-oop/class-advanced/#_20","text":"","title":"\u53cb\u5143"},{"location":"languages/c-oop/class-advanced/#_21","text":"A \u7c7b\u58f0\u660e B \u4e3a\u53cb\u5143\u7c7b\u6216\u8005\u53cb\u5143\u51fd\u6570\uff0c\u5219 B \u5177\u6709\u8bbf\u95ee A \u7684 private \u53ca protected \u6210\u5458\u7684\u8bbf\u95ee\u6743\u9650\uff0c\u5373\u53ef\u4ee5\u8bbf\u95ee A \u7684\u4e00\u5207\u6210\u5458\u3002 \u53cb\u5143\u7684\u58f0\u660e\u53ea\u80fd\u5728\u7c7b\u5185\u8fdb\u884c\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 #include <iostream> using namespace std ; class Test { int id ; public : Test ( int i ) : id ( i ) { cout << \"obj_\" << id << \" created \\n \" ; } friend istream & operator >> ( istream & in , Test & dst ); friend ostream & operator << ( ostream & out , const Test & src ); }; istream & operator >> ( istream & in , Test & dst ) { in >> dst . id ; return in ; } ostream & operator << ( ostream & out , const Test & src ) { out << src . id ; return out ; } \u6d41\u8fd0\u7b97\u7b26\u91cd\u8f7d\u5f80\u5f80\u4f1a\u58f0\u660e\u4e3a\u53cb\u5143\u51fd\u6570\uff0c\u56e0\u4e3a\u7ecf\u5e38\u9700\u8981\u8f93\u51fa\u79c1\u6709\u6210\u5458\u6570\u636e\u3002 \u88ab\u53cb\u5143\u58f0\u660e\u7684\u51fd\u6570\u4e00\u5b9a\u4e0d\u662f\u5f53\u524d\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff0c\u5373\u4f7f\u8be5\u51fd\u6570\u7684\u5b9a\u4e49\u5199\u5728\u5f53\u524d\u7c7b\u5185\uff08\u6ce8\u610f\u4e8b\u9879\u4e00\u5b9a\u4e0d\u662f\uff0c\u800c\u4e0d\u662f\u4e0d\u4e00\u5b9a\u662f\uff09\u3002\u5f53\u524d\u7c7b\u7684\u6210\u5458\u51fd\u6570\u4e5f\u4e0d\u9700\u8981\u53cb\u5143\u4fee\u9970\uff08\u56e0\u4e3a\u6210\u5458\u51fd\u6570\u672c\u8eab\u5c31\u53ef\u4ee5\u8bbf\u95ee\u6240\u6709\u6570\u636e\u6210\u5458\uff09\u3002","title":"\u5b9a\u4e49\u4e0e\u57fa\u672c\u6027\u8d28"},{"location":"languages/c-oop/class-advanced/#_22","text":"\u5b9a\u4e49 \u53ef\u4ee5\u58f0\u660e\u522b\u7684\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff0c\u4e3a\u5f53\u524d\u7c7b\u7684\u53cb\u5143\u3002\u5176\u4ed6\u7c7b\u7684\u6784\u9020\u51fd\u6570\u3001\u6790\u6784\u51fd\u6570\u4e5f\u53ef\u4ee5\u662f\u53cb\u5143\u3002 1 2 3 4 5 class Y { int data ; friend void X::foo ( Y ); friend X :: X ( Y ), X ::~ X (); }; X \u7684\u6784\u9020\u51fd\u6570 X::X() \u548c\u6790\u6784\u51fd\u6570 X::~X() \u4e3a Y \u7684\u53cb\u5143\u51fd\u6570\uff0c\u5219\u5728\u5b83\u4eec\u7684\u51fd\u6570\u4f53\u5185\u53ef\u76f4\u63a5\u8bbf\u95ee\u3001\u4fee\u6539 Y \u7684\u79c1\u6709\u6210\u5458\u3002 \u533a\u57df\u65e0\u5173\u6027 \u53cb\u5143\u7684\u58f0\u660e\u4e0e\u5f53\u524d\u6240\u5728\u57df\u662f\u5426\u4e3a private \u6216 public \u65e0\u5173\u3002 \u4e0d\u51b2\u7a81\u6027 \u4e00\u4e2a\u666e\u901a\u51fd\u6570\u53ef\u4ee5\u662f\u591a\u4e2a\u7c7b\u7684\u53cb\u5143\u51fd\u6570\u3002","title":"\u8de8\u7c7b\u53cb\u5143"},{"location":"languages/c-oop/class-advanced/#_23","text":"\u53ef\u5bf9 class \u3001 struct \u3001 union \u8fdb\u884c\u53cb\u5143\u58f0\u660e\uff0c\u4ee3\u8868\u8be5\u7c7b\u7684\u6240\u6709\u6210\u5458\u51fd\u6570\u5747\u4e3a\u53cb\u5143\u51fd\u6570\u3002 \u5bf9\u57fa\u7840\u7c7b\u578b\u7684\u53cb\u5143\u58f0\u660e\u4f1a\u88ab\u5ffd\u7565\uff08\u56e0\u4e3a\u6ca1\u6709\u5b9e\u9645\u4ef7\u503c\uff09\u3002\u7f16\u8bd1\u5668\u53ef\u80fd\u4f1a\u53d1\u51fa\u8b66\u544a\uff0c\u4f46\u4e0d\u4f1a\u8ba4\u4e3a\u662f\u9519\u8bef\u3002 \u4e24\u884c\u7684\u533a\u522b\uff1a friend Y \u5fc5\u987b\u5148\u5b9a\u4e49 class Y \uff0c\u4f46\u662f friend class X \u53ef\u4ee5\u4e0d\u7528\u5148\u5b9a\u4e49 class X \u3002","title":"\u53cb\u5143\u7c7b"},{"location":"languages/c-oop/class-advanced/#_24","text":"\u975e\u5bf9\u79f0\u6027 \u7c7b A \u4e2d\u58f0\u660e B \u662f A \u7684\u53cb\u5143\u7c7b\uff0c\u5219 B \u53ef\u4ee5\u8bbf\u95ee A \u7684\u79c1\u6709\u6210\u5458\uff0c\u4f46 A \u4e0d\u80fd\u8bbf\u95ee B \u7684\u79c1\u6709\u6210\u5458\u3002 \u975e\u4f20\u9012\u6027 \u4f60\u7684\u9644\u5eb8\u7684\u9644\u5eb8\u4e0d\u662f\u4f60\u7684\u9644\u5eb8\u3002 \u4e0d\u53ef\u7ee7\u627f \u53cb\u5143\u58f0\u660e\u4e0d\u80fd\u5b9a\u4e49\u65b0\u7684 class \u5de6\u56fe\u662f\u6211\u5148\u6709\u4e86 B \u624d\u80fd\u5b9a\u4e49 B \u4e3a A \u7684\u53cb\u5143\u3002\u800c\u53f3\u8fb9\u4f01\u56fe\u5728 X \u7c7b\u5185\u5b9a\u4e49 Y \u4e3a\u53cb\u5143\u7c7b\uff0c\u5e76\u7ed9\u51fa Y \u7684\u5b9a\u4e49\uff0c\u8fd9\u662f\u4e0d\u5408\u6cd5\u7684\uff08\u4e0d\u8fc7 friend class Y \u5012\u662f\u53ef\u4ee5\uff0c\u5373\u4f7f\u8fd8\u6ca1\u6709\u5b9a\u4e49 Y \uff09\u3002","title":"\u53cb\u5143\u7684\u6ce8\u610f\u4e8b\u9879"},{"location":"languages/c-oop/class-easy/","text":"C++ \u7c7b\u8bed\u6cd5\u521d\u6b65 \u00b6 \u9762\u5411\u5bf9\u8c61\u7684\u6982\u5ff5 \u5728\u4ecb\u7ecd\u7c7b\u4e4b\u524d\uff0c\u6211\u4eec\u7ec8\u4e8e\u8981\u5f15\u51fa\u9762\u5411\u5bf9\u8c61\u8fd9\u4e2a\u6982\u5ff5\u4e86\u3002 \u9762\u5411\u5bf9\u8c61\uff08\u82f1\u8bed\uff1aObject oriented\uff09\u662f\u4e00\u79cd\u7f16\u7a0b\u8303\u5f0f\uff0c\u5176\u76ee\u7684\u662f\u5c06\u6570\u636e\u548c\u76f8\u5173\u65b9\u6cd5\u5c01\u88c5\u4e3a\u4e00\u4e2a\u6574\u4f53\u3002\u5728\u4f7f\u7528\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u65b9\u6cd5\u7684\u65f6\u5019\uff0c\u6211\u4eec\u901a\u5e38\u5c06\u5177\u6709\u7c7b\u4f3c\u62bd\u8c61\u7279\u70b9\u7684\u4e8b\u7269\u5f52\u4e3a\u4e00\u4e2a\u7c7b\uff0c\u800c\u5177\u6709\u8fd9\u4e9b\u62bd\u8c61\u7279\u70b9\u7684\u4e8b\u7269\u5c31\u662f\u8fd9\u4e2a\u7c7b\u7684\u5b9e\u4f8b\u5bf9\u8c61\u3002 \u6bd4\u5982\u8bf4\uff0c\u6240\u6709\u7684\u5b66\u751f\u90fd\u5e94\u8be5\u5177\u6709\u540d\u5b57\uff0c\u6709\u4e00\u4e2a\u6574\u6570\u7684\u5e74\u9f84\uff0c\u8fd9\u5c31\u662f\u5b66\u751f\u8fd9\u7c7b\u4e8b\u7269\u7684\u62bd\u8c61\u6982\u5ff5\u3002\u5728 C++ \u8bed\u8a00\u4e2d\u6211\u4eec\u5c31\u53ef\u4ee5\u63cf\u8ff0\u4e3a\uff1a 1 2 3 4 class Student { int age ; std :: string name ; }; \u8fd9\u91cc Student \u662f\u7c7b\uff0c age \u548c name \u90fd\u662f\u7c7b\u7684 \u6210\u5458\u53d8\u91cf \u3002\u6210\u5458\u53d8\u91cf\u63cf\u8ff0\u4e86\u7c7b\u7684\u6570\u636e\u7279\u5f81\u3002 \u800c\u7c7b\u4e4b\u4e2d\u8fd8\u53ef\u4ee5\u5177\u6709\u51fd\u6570\uff0c\u5176\u63cf\u8ff0\u4e86\u6211\u4eec\u53ef\u4ee5\u4ee5\u4f55\u79cd\u65b9\u5f0f\u64cd\u4f5c\u7c7b\u7684\u6210\u5458\u53d8\u91cf\uff0c\u6240\u4ee5\u8fd9\u4e9b\u51fd\u6570\u4e5f\u79f0\u4e3a \u7c7b\u65b9\u6cd5 \u3002\u6bd4\u5982\u8bf4\u5b66\u751f\u90fd\u53ef\u4ee5\u53bb\u4e0a\u5b66\uff1a 1 2 3 4 5 6 class Student { int age ; std :: string name ; void goToSchool () { } }; \u5728\u63cf\u8ff0\u51fa\u5b66\u751f\u8fd9\u4e2a\u6982\u5ff5\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u5b66\u751f\uff0c\u8fd9\u4e2a\u5b66\u751f\u4e00\u5b9a\u6709\u6211\u4eec\u5728\u7c7b\u4e4b\u4e2d\u89c4\u5b9a\u7684\u8fd9\u4e9b\u62bd\u8c61\u7279\u5f81\uff1a 1 Student * s = new Student (); \u8fd9\u5c31\u79f0\u4e3a\u7c7b\u7684 \u5b9e\u4f8b\u5316 \uff0c\u5373\u6211\u4eec\u521b\u5efa\u51fa\u4e86\u4e00\u4e2a\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u7b26\u5408\u8fd9\u4e9b\u62bd\u8c61\u7279\u5f81\u3002 \u5f53\u7136\uff0c\u4e0a\u9762\u8bf4\u7684\u90fd\u662f\u6700\u7b80\u5355\u7684\u9762\u5411\u5bf9\u8c61\u6982\u5ff5\u3002\u540e\u9762\u5c06\u4f1a\u6d89\u53ca\u5230\u8bbf\u95ee\u6743\u9650\u3001\u7ee7\u627f\u3001\u865a\u65b9\u6cd5\u7b49\u5404\u79cd\u66f4\u8fdb\u9636\u7684\u6982\u5ff5\uff0c\u4e0d\u8fc7\u4fdd\u6301\u7740\u8fd9\u6837\u7684\u6700\u57fa\u672c\u7684 OOP \u601d\u60f3\u662f\u91cd\u8981\u7684\u3002 \u57fa\u7840\u8bb2\u4e9b\u4ec0\u4e48\uff1f \u8fd9\u4e00\u90e8\u5206\u4e3b\u8981\u8bb2\u89e3\u5bf9\u8c61\u7684\u6784\u9020\u548c\u6790\u6784\u3001\u5f15\u7528\u4ee5\u53ca\u8fd0\u7b97\u7b26\u91cd\u8f7d\u3002 \u8bbf\u95ee\u6743\u9650 \u00b6 \u6709\u65f6\u6211\u4eec\u5e76\u4e0d\u5e0c\u671b\u7c7b\u7684\u90e8\u5206\u9690\u79c1\u6210\u5458\u53d8\u91cf\u4e3a\u5916\u4eba\u6240\u77e5\uff0c\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u7528 private: \u58f0\u660e\u4e3a\u79c1\u6709\u3002\u540c\u6837\uff0c\u53ef\u4ee5\u516c\u5f00\u7684\u6210\u5458\u53d8\u91cf\u5219\u53ef\u4ee5\u7528 public: \u58f0\u660e\u4e3a\u516c\u6709\u3002C++ \u7684\u7c7b\u9ed8\u8ba4\u6743\u9650\u4e3a\u79c1\u6709\uff1a 1 2 3 4 5 6 7 8 9 10 11 class Student { public : int age ; std :: string name ; private : int ID ; public : void goToSchool () { } } \u7c7b\u65b9\u6cd5\u4e5f\u53ef\u4ee5\u58f0\u660e\u516c\u6709\u548c\u79c1\u6709\u3002 \u79c1\u6709\u7684\u7c7b\u6210\u5458\u548c\u7c7b\u65b9\u6cd5\u4ec5\u53ef\u4ee5\u5728\u7c7b\u81ea\u5df1\u7684\u65b9\u6cd5\u5185\u8bbf\u95ee\u6216\u8c03\u7528\uff0c\u5916\u90e8\u8c03\u7528\u4f1a\u62a5\u9519\u3002\u516c\u6709\u7684\u7c7b\u6210\u5458\u548c\u7c7b\u65b9\u6cd5\u5219\u53ef\u4ee5\u4efb\u610f\u8c03\u7528\u3001\u8bfb\u53d6\u3001\u4fee\u6539\u3002 \u6784\u9020\u51fd\u6570\u4e0e\u6790\u6784\u51fd\u6570 \u00b6 \u6784\u9020\u51fd\u6570 \u00b6 \u610f\u4e49 \u6784\u9020\u51fd\u6570\u662f\u7f16\u8bd1\u5668\u5728\u5b9e\u4f8b\u5316\u4e00\u4e2a\u5bf9\u8c61\u7684\u65f6\u5019\u81ea\u52a8\u8c03\u7528\u7684\u51fd\u6570\uff0c\u4e5f\u5c31\u662f\u8bf4\u5bf9\u8c61\u7684\u201c\u751f\u201d\uff08\u521d\u59cb\u5316\u5de5\u4f5c\uff09\u662f\u7531\u7f16\u8bd1\u5668\u5728\u521b\u5efa\u5bf9\u8c61\u5904\u81ea\u52a8\u751f\u6210\u8c03\u7528\u6784\u9020\u51fd\u6570\u7684\u4ee3\u7801\u6765\u5b8c\u6210\u7684\u3002\u6784\u9020\u51fd\u6570\u662f\u7c7b\u7684\u7279\u6b8a\u6210\u5458\u51fd\u6570\uff0c\u5b83\u7528\u6765\u786e\u4fdd\u7c7b\u7684\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u80fd\u6b63\u786e\u5730\u521d\u59cb\u5316\u3002 \u8bed\u6cd5 \u6784\u9020\u51fd\u6570\u6ca1\u6709\u8fd4\u56de\u503c\u7c7b\u578b\uff0c\u51fd\u6570\u540d\u5fc5\u987b\u4e0e\u7c7b\u540d\u76f8\u540c\u3002\u7c7b\u7684\u6784\u9020\u51fd\u6570\u53ef\u4ee5\u91cd\u8f7d\uff0c\u5373\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u51fd\u6570\u53c2\u6570\u8fdb\u884c\u5bf9\u8c61\u521d\u59cb\u5316\u3002 1 2 3 4 5 6 7 8 9 class Student { int ID ; public : Student ( int id ) { ID = id ; } Student ( int year , int order ) { ID = year * 10000 + order ; } }; \u8fd9\u6837\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u5b66\u751f\u7c7b\u7684\u4e24\u4e2a\u6784\u9020\u51fd\u6570\u3002\u6784\u9020\u51fd\u6570\u7684\u8c03\u7528\u8bed\u6cd5\uff08\u5373\u5bf9\u8c61\u521b\u5efa\u7684\u8bed\u6cd5\uff09\u6709\u51e0\u79cd\u5e38\u7528\u7684\uff1a 1 2 3 Student s1 ( 20200001 ); Student s2 = Student ( 20200001 ); Student * sptr = new Student ( 20200001 ); \u6ce8\u610f new \u5f97\u5230\u7684\u662f\u6307\u9488\u3002 \u521d\u59cb\u5316\u5217\u8868 \u6784\u9020\u51fd\u6570\u53ef\u4ee5\u4f7f\u7528\u521d\u59cb\u5316\u5217\u8868\u521d\u59cb\u5316\u6210\u5458\u6570\u636e\uff0c\u4f7f\u7528 \u6570\u636e\u6210\u5458(\u521d\u59cb\u503c) \u7684\u5f62\u5f0f\u3002\u8be5\u5217\u8868\u5728\u5b9a\u4e49\u6784\u9020\u51fd\u6570\u65f6\u4f7f\u7528\uff0c\u4f4d\u7f6e\u5728\u51fd\u6570\u4f53\u4e4b\u524d\u3001\u51fd\u6570\u53c2\u6570\u5217\u8868\u4e4b\u540e\uff0c\u4ee5\u5192\u53f7\u4f5c\u5f00\u5934\u3002 \u8fd9\u79cd\u5199\u6cd5\u53ef\u4ee5\u5c06\u51fd\u6570\u4f53\u4e2d\u7684\u8d4b\u503c\u5199\u6cd5\u5199\u5230\u51fd\u6570\u4f53\u5916\uff0c\u4fbf\u4e8e\u68c0\u67e5\uff1a 1 2 3 4 5 6 class Student { int ID ; public : Student ( int id ) : ID ( id ) { } }; \u521d\u59cb\u5316\u5217\u8868\u548c\u6784\u9020\u51fd\u6570\u4f53\u7684\u57fa\u672c\u533a\u522b \u5b9e\u73b0\u8fc7\u7a0b\u533a\u522b \u6784\u9020\u51fd\u6570\u53ef\u4ee5\u5206\u4e24\u4e2a\u9636\u6bb5\u8fdb\u884c\uff0c\u5373\u521d\u59cb\u5316\u9636\u6bb5\u3001\u51fd\u6570\u4f53\u9636\u6bb5\u3002 \u51fd\u6570\u4f53\u9636\u6bb5\u7531\u51fd\u6570\u4f53\u5185\u6240\u6709\u7684\u8bed\u53e5\u7ec4\u6210\u3002\u4e0d\u7ba1\u6210\u5458\u662f\u5426\u5728\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u5217\u8868\u4e2d\u663e\u5f0f\u521d\u59cb\u5316\uff0c\u7c7b\u7684\u6570\u636e\u6210\u5458\u521d\u59cb\u5316\u603b\u662f\u5728\u521d\u59cb\u5316\u9636\u6bb5\u8fdb\u884c\uff0c\u521d\u59cb\u5316\u9636\u6bb5\u5148\u4e8e\u8ba1\u7b97\u9636\u6bb5\u3002\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u5217\u8868\u662f\u5bf9\u7c7b\u7684\u6210\u5458\u505a\u521d\u59cb\u5316\uff0c\u800c\u5728\u6784\u9020\u51fd\u6570\u4f53\u5185\u53ea\u662f\u5bf9\u7c7b\u7684\u6570\u636e\u6210\u5458\u8fdb\u884c\u4e86\u4e00\u6b21\u8d4b\u503c\u64cd\u4f5c\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c\u6784\u9020\u51fd\u6570\u51fd\u6570\u4f53\u5185\u5bf9\u4e8e\u6210\u5458\u6570\u636e\u7684\u8d4b\u503c\u610f\u5473\u7740\u521d\u59cb\u5316\u5df2\u7ecf\u5b8c\u6210\uff0c\u4ec5\u4ec5\u662f\u8fdb\u884c\u4e86\u8d4b\u503c\u3002\u8fd9\u4e00\u70b9\u53ef\u4ee5\u8054\u7cfb\u4e0b\u4e00\u7ae0\u8282\u5f53\u4e2d\u5bf9\u4e8e\u58f0\u660e\u3001\u5b9a\u4e49\u3001\u521d\u59cb\u5316\u3001\u8d4b\u503c\u7684\u8ba8\u8bba\u4e00\u540c\u7406\u89e3\u3002\u8fd9\u4e5f\u53ef\u4ee5\u7528\u4e8e\u7406\u89e3\uff0c\u4e3a\u4ec0\u4e48\u5e38\u91cf\u6210\u5458\u6570\u636e\u4ec5\u4ec5\u53ef\u4ee5\u5728\u521d\u59cb\u5316\u5217\u8868\u4e2d\u521d\u59cb\u5316\uff0c\u4f46\u662f\u4e0d\u53ef\u4ee5\u5728\u51fd\u6570\u4f53\u5185\u8d4b\u503c\u3002\uff08\u56e0\u4e3a\u5e38\u91cf\u6210\u5458\u4ec5\u80fd\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u5374\u4e0d\u80fd\u5728\u521d\u59cb\u5316\u4e4b\u540e\u518d\u8d4b\u503c\uff0c\u56e0\u4e3a\u5e38\u91cf\u6210\u5458\u4e0d\u80fd\u66f4\u6539\u3002\u800c\u4e00\u4e2a\u5e38\u91cf\u6210\u5458\uff0c\u5373\u4f7f\u5728\u521d\u59cb\u5316\u5217\u8868\u4e2d\u6ca1\u6709\u88ab\u663e\u5f0f\u521d\u59cb\u5316\uff0c\u4e5f\u5df2\u7ecf\u88ab\u521d\u59cb\u5316\u8fc7\u4e86\uff0c\u4e00\u4e2a\u521d\u59cb\u5316\u8fc7\u7684\u5e38\u91cf\u81ea\u7136\u4e0d\u80fd\u5728\u51fd\u6570\u4f53\u91cc\u88ab\u4fee\u6539\uff09\u3002\u66f4\u52a0\u8be6\u7ec6\u7684\u8ba8\u8bba\u5728\u4e0b\u4e00\u7ae0\u8282\u3002 \u6548\u7387\u533a\u522b \u5982\u524d\u6587\u6240\u8ff0\uff0c\u521d\u59cb\u5316\u5217\u8868\u663e\u7136\u907f\u514d\u4e86\u51fd\u6570\u4f53\u5185\u4e0d\u5fc5\u8981\u7684\u4e00\u4e9b\u8d4b\u503c\u8fc7\u7a0b\uff0c\u8fd9\u5728\u7c7b\u7684\u6210\u5458\u6570\u636e\u8f83\u4e3a\u590d\u6742\u65f6\u80fd\u591f\u663e\u8457\u5730\u63d0\u9ad8\u6548\u7387\u3002 \u521d\u59cb\u5316\u5217\u8868\u7684\u521d\u59cb\u987a\u5e8f \u521d\u59cb\u5316\u5217\u8868\u7684\u6210\u5458\u662f\u6309\u7167\u58f0\u660e\u7684\u987a\u5e8f\u521d\u59cb\u5316\u7684\uff0c\u800c\u4e0d\u662f\u6309\u7167\u51fa\u73b0\u5728\u521d\u59cb\u5316\u5217\u8868\u4e2d\u7684\u987a\u5e8f\u3002\u6bd4\u5982\u4e0b\u5217\u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 #include <iostream> using namespace std ; class Student { int ID1 ; int ID2 ; public : Student ( int id ) : ID2 ( id ), ID1 ( ID2 ) { } void print () { cout << \"ID1 exist \" << this -> ID1 << ' ' ; cout << this -> ID2 << endl ; } }; int main () { Student test ( 100 ); test . print (); // \"ID1 exist 32767 100\" return 0 ; } \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c ID1 \u5728 ID2 \u4e4b\u524d\u58f0\u660e\uff0c\u4f46\u5176\u521d\u59cb\u5316\u4f9d\u8d56\u4e8e ID2 \u3002\u521d\u59cb\u5316\u5217\u8868\u4f1a\u6309\u7167\u58f0\u660e\u987a\u5e8f\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u5148\u7528\u672a\u77e5\u7684 ID2 \u7684\u503c\u5bf9 ID1 \u8fdb\u884c\u521d\u59cb\u5316\uff0c\u518d\u7528\u53ef\u77e5\u7684 id \u6765\u521d\u59cb\u5316 ID2 \u3002\u4ece\u800c\u4f7f\u5f97 ID1 \u7684\u503c\u4e0d\u53ef\u9884\u6d4b\u3002 \u8fd9\u91cc\u7684\u4e0d\u53ef\u9884\u6d4b\u5728\u4e0d\u540c\u7684\u7f16\u8bd1\u5668\u4e0a\u8868\u73b0\u4e0d\u540c\u3002\u53ef\u80fd\u4f1a\u6709\u5982\u4e0a\u8f93\u51fa\uff0c\u4e5f\u53ef\u80fd\u662f warning\uff08\u4e0d\u662f error\uff09\u3002\u4e00\u822c\u6765\u8bf4\u6211\u4eec\u4f1a\u53c2\u8003 g++ \u7f16\u8bd1\u5668\u7684\u8f93\u51fa\uff0cVisual Studio \u7684\u7f16\u8bd1\u5668\u6709\u65f6\u4f1a\u66f4\u4e25\u683c\u3002 \u59d4\u6d3e\u6784\u9020\u51fd\u6570 \u00b6 \u5b9a\u4e49 \u5728\u6784\u9020\u51fd\u6570\u7684\u521d\u59cb\u5316\u5217\u8868\u4e2d\uff0c\u8fd8\u53ef\u4ee5\u8c03\u7528\u5176\u4ed6\u6784\u9020\u51fd\u6570\uff0c\u79f0\u4e3a\u201c\u59d4\u6d3e\u6784\u9020\u51fd\u6570\u201d\u3002 \u610f\u4e49 \u59d4\u6d3e\u6784\u9020\u51fd\u6570\u4e5f\u662f C++11 \u4e2d\u5bf9 C++ \u7684\u6784\u9020\u51fd\u6570\u7684\u4e00\u9879\u6539\u8fdb\uff0c\u5176\u76ee\u7684\u5c31\u662f\u51cf\u5c11\u7a0b\u5e8f\u5458\u5199\u6784\u9020\u51fd\u6570\u7684\u65f6\u95f4\u3002\u901a\u8fc7\u59d4\u6d3e\u5176\u4ed6\u6784\u9020\u51fd\u6570\uff0c\u591a\u6784\u9020\u51fd\u6570\u7684\u7c7b\u7f16\u5199\u8d77\u6765\u5c31\u5f88\u7b80\u5355\u5bb9\u6613\u3002 \u5b9e\u4f8b \u5bf9\u6bd4\u5982\u4e0b\u4e24\u4e2a\u4f8b\u5b50\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 class Info { public : Info () : type ( 1 ), name ( 'a' ) { InitRest (); } Info ( int i ) : type ( i ), name ( 'a' ) { InitRest (); } Info ( char e ) : type ( 1 ), name ( e ) { InitRest (); } private : void InitRest () { } int type ; char name ; }; \u4e0a\u8ff0\u5199\u6cd5\u53ef\u4ee5\u5199\u4e3a\uff1a 1 2 3 4 5 6 7 8 9 10 11 class Info { public : Info () { InitRest (); } // \u79f0\u4e3a\u76ee\u6807\u6784\u9020\u51fd\u6570\uff08\u88ab\u8c03\u7528\uff09 Info ( int i ) : Info () { type = i ; } // \u59d4\u6d3e\u6784\u9020\u51fd\u6570\uff08\u8c03\u7528\u8005\uff09 Info ( char e ) : Info () { name = e ; } private : void InitRest () { } int type { 1 }; char name { 'a' }; }; \u59d4\u6d3e\u6784\u9020\u51fd\u6570\u4e0d\u80fd\u6709\u521d\u59cb\u5316\u5217\u8868\uff0c\u56e0\u4e3a C++ \u4e2d\uff0c\u6784\u9020\u51fd\u6570\u4e0d\u80fd\u540c\u65f6\u4f7f\u7528\u59d4\u6d3e\u548c\u521d\u59cb\u5316\u5217\u8868\u3002\u53ea\u80fd\u5728\u51fd\u6570\u4f53\u5185\u4e3a type \u3001 name \u7b49\u6210\u5458\u8d4b\u503c\u3002 \u5728\u6784\u9020\u51fd\u6570\u6bd4\u8f83\u591a\u65f6\uff0c\u53ef\u4ee5\u6709\u4e0d\u6b62\u4e00\u4e2a\u59d4\u6d3e\u6784\u9020\u51fd\u6570\u3002\u76ee\u6807\u6784\u9020\u51fd\u6570\u4e5f\u53ef\u4ee5\u662f\u59d4\u6d3e\u6784\u9020\u51fd\u6570\uff0c\u53ef\u4ee5\u5728\u59d4\u6d3e\u6784\u9020\u51fd\u6570\u4e2d\u5f62\u6210\u94fe\u72b6\u7684\u59d4\u6d3e\u6784\u9020\u5173\u7cfb\u3002 1 2 3 4 5 6 7 8 9 10 11 class Info { public : Info () : Info ( 1 ) { } Info ( int i ) : Info ( i , 'a' ) { } Info ( char e ) : Info ( 1 , e ) { } private : Info ( int i , char e ) : type ( i ), name ( e ) { } int type ; char name ; }; \u53ea\u8981\u6ce8\u610f\u59d4\u6d3e\u5173\u7cfb\u4e0d\u80fd\u6210\u73af\u5373\u53ef\u3002 \u8fd9\u4e2a\u4f8b\u5b50\u5176\u5b9e\u86ee\u6709\u610f\u601d\u7684\u662f\uff0c\u6211\u4eec\u4e4b\u524d\u5f88\u5c11\u6709\u89c1\u5230\u6784\u9020\u51fd\u6570\u653e\u5728 private \u91cc\u9762\u7684\u4f8b\u5b50\u3002\u8fd9\u4e2a\u4f8b\u5b50\u5374\u5b9e\u73b0\u4e86\u8fd9\u4e00\u70b9\u3002 \u5c31\u5730\u521d\u59cb\u5316 \u00b6 \u9996\u5148\u9700\u8981\u6307\u51fa\u7684\u662f\uff0c\u5728\u8bfe\u7a0bPPT\u4e2d\u5bf9\u4e8e\u58f0\u660e\u3001\u521d\u59cb\u5316\u3001\u5b9a\u4e49\u8fd9\u4e09\u4e2a\u6982\u5ff5\u6709\u4e9b\u6df7\u7528\u3002\u4e09\u8005\u7684\u5e7f\u4e49\u6982\u5ff5\u754c\u5b9a\u5728\u4e0b\u4e00\u7ae0\u8282\u4e2d\u8fdb\u884c\u4e86\u9610\u8ff0\u3002 C++11 \u4e4b\u524d\uff0c\u7c7b\u4e2d\u7684\u4e00\u822c\u6210\u5458\u53d8\u91cf\u4e0d\u80fd\u5728\u7c7b\u58f0\u660e\u65f6\u8fdb\u884c\u521d\u59cb\u5316\uff08\u5b9a\u4e49\uff09\uff0c\u5b83\u4eec\u7684\u521d\u59cb\u5316\u64cd\u4f5c\uff08\u5b9a\u4e49\uff09\u53ea\u80fd\u901a\u8fc7\u6784\u9020\u51fd\u6570\u8fdb\u884c\u3002C++11 \u65b0\u589e\u652f\u6301\u5982\u4e0b\u521d\u59cb\u5316\u64cd\u4f5c\uff0c\u79f0\u4e3a\u5c31\u5730\u521d\u59cb\u5316\uff08\u7c7b\u4f3c\u4e8e\u7ed9\u7c7b\u5185\u5bf9\u8c61\u63d0\u4f9b\u4e86\u7f3a\u7701\u503c\uff09\u3002\u4f60\u53ef\u4ee5\u8ba4\u4e3a\u5c31\u5730\u521d\u59cb\u5316\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u673a\u5236\uff0c\u4ed6\u53ef\u4ee5\u4f7f\u5f97\u5b9a\u4e49\u548c\u521d\u59cb\u5316\u5728\u7c7b\u5185\u5f97\u4ee5\u8fdb\u884c\u3002 1 2 3 4 5 6 7 8 9 10 class A { private : int a = 1 ; // \u58f0\u660e + \u521d\u59cb\u5316\uff08\u5b9a\u4e49\uff09 double b { 2.0 }; // \u58f0\u660e + \u521d\u59cb\u5316\uff08\u5b9a\u4e49\uff09 public : A () { } // a = 1, b = 2.0 A ( int i ) : a ( i ) { } // a = i, b = 2.0 A ( int i , double j ) : a ( i ), b ( j ) { } // a = i, b = j }; \u6ce8\u610f\uff0c\u5c31\u5730\u521d\u59cb\u5316\u53ea\u662f\u4e00\u79cd\u7b80\u4fbf\u7684\u8868\u8fbe\u65b9\u5f0f\uff0c\u5b9e\u9645\u64cd\u4f5c\u4ecd\u7136\u5728\u5bf9\u8c61\u6784\u9020\u7684\u65f6\u5019\u6267\u884c\u3002 \u9ed8\u8ba4\u6784\u9020\u51fd\u6570 \u00b6 \u5b9a\u4e49 \u4e0d\u5e26\u4efb\u4f55\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\uff0c\u6216\u6bcf\u4e2a\u5f62\u53c2\u63d0\u4f9b\u9ed8\u8ba4\u5b9e\u53c2\u7684\u6784\u9020\u51fd\u6570\uff0c\u88ab\u79f0\u4e3a \u9ed8\u8ba4\u6784\u9020\u51fd\u6570 \uff0c\u4e5f\u79f0 \u7f3a\u7701\u6784\u9020\u51fd\u6570 \u3002 \u8bed\u6cd5 \u4f7f\u7528\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff08\u6ca1\u6709\u53c2\u6570\uff09\u6765\u751f\u6210\u5bf9\u8c61\u65f6\uff0c\u5bf9\u8c61\u5b9a\u4e49\u7684\u683c\u5f0f\u5982\u4e0b\uff1a 1 2 ClassName a ; ClassName b = ClassName (); \u6ce8\u610f\u548c\u4e0b\u65b9\u4ee3\u7801\u533a\u522b\u5f00\u6765\uff1a 1 ClassName c (); \u8fd9\u58f0\u660e\u4e86\u4e00\u4e2a\u8fd4\u56de\u503c\u7c7b\u578b\u4e3a ClassName \u4e14\u4e0d\u5e26\u53c2\u6570\u7684\u51fd\u6570 \u7f16\u8bd1\u5668\u7684\u989d\u5916\u64cd\u4f5c \u57fa\u4e8e\u4e4b\u540e\u6d89\u53ca\u5230\u7684\u7ec4\u5408\u7684\u6982\u5ff5\uff0c\u5728\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e2d\uff0c\u9664\u4e86\u6267\u884c\u51fd\u6570\u4f53\u5185\u58f0\u660e\u7684\u8bed\u53e5\uff0c\u7f16\u8bd1\u5668\u8fd8\u4f1a\u505a\u4e00\u4e9b\u989d\u5916\u64cd\u4f5c\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 #include <iostream> using namespace std ; class A { public : A () { cout << \"A()\" << endl ; } }; class B { public : A a ; B () { cout << \"B()\" << endl ; } }; B b ; int main () { return 0 ; } \u8fd9\u91cc\u4f1a\u5148\u8f93\u51fa A \u7684\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u5bf9\u5e94\u7684\u8f93\u51fa\uff0c\u518d\u8f93\u51fa B \u7684\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u5bf9\u5e94\u7684\u8f93\u51fa\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u7c7b A \u91cc\u9762\u6709\u53e6\u4e00\u4e2a\u7c7b B \u4f5c\u4e3a\u8fd9\u4e2a\u7c7b\u7684\u6210\u5458\uff0c\u8c03\u7528\u7c7b A \u7684\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u65f6\u4f1a\u5148\u8c03\u7528 B \u7684\u6784\u9020\u51fd\u6570\u3002\u5148\u6784\u9020\u6210\u5458\uff0c\u518d\u6784\u9020\u7c7b\u3002 \u9690\u5f0f\u5b9a\u4e49\u7684\u9ed8\u8ba4\u6784\u9020\u51fd\u6570 \u6709\u65f6\u5019\u6211\u4eec\u6ca1\u6709\u624b\u52a8\u5b9a\u4e49\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u4f46\u6211\u4eec\u4ecd\u7136\u80fd\u591f\u6309\u4e0a\u8ff0\u65b9\u5f0f\u5b9a\u4e49\u53d8\u91cf\u3002\u8fd9\u662f\u56e0\u4e3a\u7f16\u8bd1\u5668\u5e2e\u6211\u4eec\u9690\u5f0f\u5730\u5408\u6210\u4e86\u4e00\u4e2a\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u3002 \u6ce8\u610f\u8fd9\u4e2a\u4f8b\u5b50\uff0c b \u7a76\u7adf\u662f\u8c03\u7528\u4e86\u54ea\u4e00\u4e2a\u6784\u9020\u51fd\u6570\uff1f \u6211\u4eec\u5c06\u4ee3\u7801\u4fee\u6539\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 #include <iostream> using namespace std ; class A { public : A () { cout << \"A()\" << endl ; } A ( int x ) { cout << \"A(int)\" << endl ; } }; class B { A a ; public : B ( int x = 1 ) : a ( x ) { } B () : a ( 1 ) { } }; int main () { B b ; return 0 ; } \u53d1\u73b0\u4f1a\u56e0\u4e3a\u51fd\u6570\u8c03\u7528\u4e0d\u660e\u786e\u800c error\uff0c\u6545\u800c\u53ef\u4ee5\u786e\u5b9a\u4e0a\u8ff0\u9009\u62e9\u9898\u662f\u8c03\u7528\u4e86\u7f3a\u7701\u7684\u6784\u9020\u51fd\u6570\u800c\u975e\u9690\u5f0f\u751f\u6210\u7684\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u3002\u8fd9\u4e00\u70b9\u5728\u51fd\u6570\u91cd\u8f7d\u6709\u8ba8\u8bba\u3002 \u67d0\u79cd\u610f\u4e49\u4e0a\uff0c\u7f3a\u7701\u7684\u6784\u9020\u51fd\u6570\u672c\u8d28\u4e0a\u5df2\u7ecf\u5b9e\u73b0\u4e86\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u7684\u529f\u80fd\u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u82e5\u7528\u6237\u5df2\u7ecf\u5b9a\u4e49\u4e86\u5176\u4ed6\u6784\u9020\u51fd\u6570\uff0c\u7f16\u8bd1\u5668\u5c06\u4e0d\u4f1a\u9690\u5f0f\u5408\u6210\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u3002 1 2 3 4 5 6 7 8 9 class A { private : int a = 1 ; double b { 2.0 }; public : A ( int i ) : a ( i ) { } }; A a ; \u8fd9\u4e2a\u4ee3\u7801\u4f1a\u62a5\u9519\u3002 \u663e\u5f0f\u58f0\u660e\u9ed8\u8ba4\u6784\u9020\u51fd\u6570 \u51fa\u4e8e\u67d0\u4e9b\u9700\u8981\uff0c\u6211\u4eec\u53ef\u4ee5\u624b\u52a8\u6307\u5b9a\u751f\u6210\u9ed8\u8ba4\u7248\u672c\u7684\u6784\u9020\u51fd\u6570\u3002\u5373\u4fbf\u5176\u4ed6\u6784\u9020\u51fd\u6570\u5b58\u5728\uff0c\u7f16\u8bd1\u5668\u4e5f\u4f1a\u5b9a\u4e49\u9690\u5f0f\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u3002 1 2 3 4 5 6 7 8 9 class A { private : int a = 1 ; double b { 2.0 }; public : A () = default ; A ( int i ) : a ( i ) { } }; A a ; \u663e\u5f0f\u5220\u9664\u5371\u9669\u6784\u9020\u51fd\u6570 \u6709\u65f6\u5019\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u663e\u5f0f\u5730\u58f0\u660e\u7981\u7528\u67d0\u4e9b\u5e26\u6709\u98ce\u9669\u7684\u6784\u9020\u51fd\u6570\u3002\u8fd9\u79cd\u7981\u7528\u4e0d\u4ec5\u53ef\u4ee5\u7981\u7528\u7f16\u8bd1\u5668\u5408\u6210\u7684\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u4e5f\u53ef\u4ee5\u7528\u6765\u7981\u6b62\u4e00\u4e9b\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362\u5e26\u6765\u7684\u6784\u9020\u51fd\u6570\u8c03\u7528\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 #include <iostream> using namespace std ; class A { private : int a = 1 ; double b { 2.0 }; char c = 'c' ; public : A () = default ; A ( int i ) : a ( i ) { cout << i << endl ; } }; int main () { A a ( 'c' ); // 99 return 0 ; } \u8fd9\u4e00\u4ee3\u7801\u5b58\u5728\u98ce\u9669\uff0c\u672c\u610f\u4e00\u5b9a\u662f\u5e0c\u671b\u4ed6\u62a5\u9519\uff0c\u4f46\u662f\u5b9e\u5219\u4e0d\u4f1a\u3002\u4ece\u6b63\u786e\u6027\u4e0a\u8bb2\uff0c\u8fd9\u6837\u7684\u4ee3\u7801\u6ca1\u6709\u95ee\u9898\uff0c char \u548c int \u53ef\u4ee5\u7c7b\u578b\u8f6c\u6362\uff0c\u6545\u800c\u5c06 'c' \u8f6c\u4e3a int \uff0c\u8c03\u7528\u4e86\u53c2\u6570\u4e3a int \u7684\u6784\u9020\u51fd\u6570\u3002\u4f46\u662f\u4ece\u5de5\u7a0b\u7684\u89d2\u5ea6\u8bb2\uff0c\u8fd9\u662f\u5f88\u5371\u9669\u7684\u884c\u4e3a\u3002\u56e0\u4e3a\u5728\u5f00\u53d1\u8005\u770b\u6765\uff0c\u7528\u5b57\u7b26\u521d\u59cb\u5316\u5e94\u8be5\u662f\u672a\u5b9a\u4e49\u7684\u884c\u4e3a\u3002 \u6545\u800c\u663e\u5f0f\u5730\u7981\u7528\u67d0\u4e00\u6784\u9020\u51fd\u6570\u3002 1 2 3 4 5 6 7 8 9 10 class A { private : int a = 1 ; double b { 2.0 }; char c = 'c' ; public : A () = default ; A ( int i ) : a ( i ) { } A ( char ch ) = delete ; }; \u4e3b\u51fd\u6570\u4e2d\u5bf9\u8c61\u6570\u7ec4\u7684\u521d\u59cb\u5316 \u00b6 \u65e0\u53c2\u5b9a\u4e49\u5bf9\u8c61\u6570\u7ec4\uff0c\u5fc5\u987b\u8981\u6709\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff1a 1 A a [ 50 ]; \u5982\u679c\u6784\u9020\u51fd\u6570\u5e26\u6709\u53c2\u6570\uff0c\u5219\u53ef\u4ee5\uff1a 1 A a [ 3 ] = { 1 , 3 , 5 }; \u82b1\u62ec\u53f7\u4e2d\u7684\u5404\u4e2a\u5143\u7d20\u4f20\u9012\u7ed9\u4e86 A \u7c7b\u7684\u6784\u9020\u51fd\u6570\u3002 \u5e26\u6709\u591a\u4e2a\u53c2\u6570\u5219\u5199\u4e3a\uff1a 1 A a [ 3 ] = { A ( 1 , 2 ), A ( 3 , 5 ), A ( 0 , 7 )}; \u6790\u6784\u51fd\u6570 \u00b6 \u6982\u8ff0 \u5bf9\u8c61\u7684\u201c\u6b7b\u201d\uff08\u6e05\u9664\u548c\u91ca\u653e\u8d44\u6e90\uff09\u662f\u7531\u7f16\u8bd1\u5668\u5728\u5bf9\u8c61\u4f5c\u7528\u57df\u7ed3\u675f\u5904\u81ea\u52a8\u751f\u6210\u8c03\u7528\u6790\u6784\u51fd\u6570\u4ee3\u7801\u6765\u5b8c\u6210\u7684\uff0c\u52a8\u6001\u5206\u914d\u7684\u5185\u5b58\u5c31\u662f\u4e00\u79cd\u5178\u578b\u7684\u9700\u8981\u91ca\u653e\u7684\u8d44\u6e90\u3002\u5f53\u6267\u884c\u5230\u201c\u5305\u542b\u5bf9\u8c61\u5b9a\u4e49\u8303\u56f4\u7ed3\u675f\u5904\u201d\u65f6\uff0c\u7f16\u8bd1\u5668\u81ea\u52a8\u8c03\u7528\u5bf9\u8c61\u7684\u6790\u6784\u51fd\u6570\u3002\u6e05\u9664\u5bf9\u8c61\u5360\u7528\u7684\u8d44\u6e90\u662f\u65e0\u6761\u4ef6\u7684\uff0c\u4e0d\u9700\u8981\u4efb\u4f55\u9009\u9879\u3002\u56e0\u6b64\uff0c\u6790\u6784\u51fd\u6570\u6ca1\u6709\u53c2\u6570\uff0c\u4e14\u53ea\u6709\u4e00\u4e2a\uff0c\u5373\u6e05\u9664\u65b9\u5f0f\u552f\u4e00\u3002 \u8fd9\u5728\u4e0b\u4e00\u7ae0\u8282\u7684\u4f8b\u5b50\u4e2d\u6709\u6240\u4f53\u73b0\u3002 \u6ca1\u6709\u663e\u5f0f\u5b9a\u4e49\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u7cfb\u7edf\u8c03\u7528\u4e86\u9690\u5f0f\u751f\u6210\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u8fd9\u5f53\u7136\u662f\u6ca1\u6709\u8f93\u51fa\u7684\u3002\u5f62\u53c2\u7684\u6784\u9020\u7528\u7684\u662f\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u53ef\u662f\u6790\u6784\u5374\u662f\u5171\u7528\u7684\u4e00\u4e2a\u6790\u6784\u51fd\u6570\u3002 \u8bed\u6cd5 \u4e00\u4e2a\u7c7b\u53ea\u6709\u4e00\u4e2a\u6790\u6784\u51fd\u6570\uff0c\u540d\u79f0\u662f ~\u7c7b\u540d \uff0c\u6ca1\u6709\u51fd\u6570\u8fd4\u56de\u503c\uff0c\u6ca1\u6709\u51fd\u6570\u53c2\u6570\u3002\u7f16\u8bd1\u5668\u5728\u5bf9\u8c61\u751f\u547d\u671f\u7ed3\u675f\u65f6\u81ea\u52a8\u8c03\u7528\u7c7b\u7684\u6790\u6784\u51fd\u6570\uff0c\u4ee5\u4fbf\u91ca\u653e\u5bf9\u8c61\u5360\u7528\u7684\u8d44\u6e90\uff0c\u6216\u5176\u4ed6\u540e\u5904\u7406\u3002 1 2 3 4 5 6 7 8 9 10 class ClassRoom { int num ; int * ID_list ; public : ClassRoom () : num ( 0 ), ID_list ( nullptr ) {} ~ ClassRoom () { if ( ID_list ) delete [] ID_list ; } }; \u6ce8\u610f\u5230\u8fd9\u4e2a\u4f8b\u5b50\u4e5f\u4f53\u73b0\u4e86\u6307\u9488 delete \u4e4b\u524d\u5e94\u5148\u68c0\u6d4b\u662f\u5426\u4e3a\u7a7a\u6307\u9488\u3002 \u6790\u6784\u6392\u5e8f \u548c\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u4e00\u6837\uff0c\u6790\u6784\u51fd\u6570\u9664\u4e86\u6267\u884c\u51fd\u6570\u4f53\u5185\u58f0\u660e\u7684\u8bed\u53e5\uff0c\u7f16\u8bd1\u5668\u8fd8\u4f1a\u505a\u4e00\u4e9b\u989d\u5916\u64cd\u4f5c\u3002\u4f8b\u5982\u5728\u7ec4\u5408\u5f53\u4e2d\uff0c\u4f1a\u81ea\u52a8\u8c03\u7528\u6210\u5458\u53d8\u91cf\u7684\u6790\u6784\u51fd\u6570\uff0c\u5148\u6267\u884c\u81ea\u5df1\u7684\u6790\u6784\u51fd\u6570\uff0c\u518d\u8c03\u7528\u6210\u5458\u53d8\u91cf\u7684\u6790\u6784\uff08\u8fd9\u70b9\u4e0e\u6784\u9020\u51fd\u6570\u6070\u6070\u76f8\u53cd\uff09\u3002\u4ee5\u53ca\u6700\u57fa\u672c\u7684\uff0c\u5148\u6784\u9020\u7684\u540e\u6790\u6784\u3002 \u9ed8\u8ba4\u6790\u6784\u51fd\u6570 \u548c\u6784\u9020\u51fd\u6570\u7c7b\u4f3c\uff0c\u5f53\u7528\u6237\u6ca1\u6709\u81ea\u5b9a\u4e49\u6790\u6784\u51fd\u6570\u65f6\uff0c\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u5408\u6210\u4e00\u4e2a\u9690\u5f0f\u7684\u6790\u6784\u51fd\u6570\u3002 \u95ee\u9898\u5728\u4e8e\u9690\u5f0f\u5b9a\u4e49\u7684\u6790\u6784\u51fd\u6570\u4e0d\u4f1a\u91ca\u653e\u6307\u9488\u6210\u5458\uff0c\u53ef\u80fd\u9020\u6210\u5185\u5b58\u6cc4\u9732\u3002 \u5bf9\u8c61\u7684\u6790\u6784\u4e0e\u6784\u9020 \u00b6 \u5c40\u90e8\u5bf9\u8c61\u7684\u6790\u6784\u4e0e\u6784\u9020 \u00b6 \u5b9a\u4e49 \u4f5c\u7528\u57df\u5b9a\u4e49\u4e3a\u67d0\u4e00\u4e2a\u53d8\u91cf\u80fd\u591f\u88ab\u5f15\u7528\u7684\u533a\u57df\u3002\u4f8b\u5982\uff0c\u82b1\u62ec\u53f7\u62ec\u8d77\u6765\u7684\u533a\u57df\u5c06\u4f1a\u5f62\u6210\u4e00\u4e2a\u4f5c\u7528\u57df\u3002 \u975e\u9759\u6001\u7684\u5c40\u90e8\u5bf9\u8c61\u3002\u5728\u7a0b\u5e8f\u6267\u884c\u5230\u8be5\u5c40\u90e8\u5bf9\u8c61\u7684\u4ee3\u7801\u65f6\u88ab\u521d\u59cb\u5316\u3002\u5728\u5c40\u90e8\u5bf9\u8c61\u751f\u547d\u5468\u671f\u7ed3\u675f\u3001\u5373\u6240\u5728\u4f5c\u7528\u57df\u7ed3\u675f\u540e\u88ab\u6790\u6784\u3002\u8fd9\u91cc\u6ce8\u610f\u4e0e\u9759\u6001\u7684\u5c40\u90e8\u5bf9\u8c61\u8fdb\u884c\u5bf9\u6bd4\u3002\u8be6\u89c1\u4e0b\u4e00\u7ae0\u8282\u3002 \u975e\u9759\u6001\u5168\u5c40\u53d8\u91cf\u3002\u5728\u4e3b\u51fd\u6570\u8c03\u7528\u4e4b\u524d\u8fdb\u884c\u521d\u59cb\u5316\u3002\u5728\u540c\u4e00\u7f16\u8bd1\u5355\u5143\u4e2d\uff0c\u6309\u7167\u5b9a\u4e49\u987a\u5e8f\u8fdb\u884c\u521d\u59cb\u5316\u3002 \u8fd9\u91cc\u540c\u4e00\u7f16\u8bd1\u5355\u5143\u901a\u5e38\u662f\u540c\u4e00\u6e90\u6587\u4ef6\u3002\u800c\u4e0d\u540c\u7f16\u8bd1\u5355\u5143\u95f4\uff0c\u5bf9\u8c61\u521d\u59cb\u5316\u987a\u5e8f\u4e0d\u786e\u5b9a\u3002 \u5728\u4e3b\u51fd\u6570\u6267\u884c\u5b8c\u8fd4\u56de\u4e4b\u540e\uff0c\u5bf9\u8c61\u88ab\u6790\u6784\u3002 \u5168\u5c40\u53d8\u91cf\u7684\u5c40\u9650\u6027 \u5c3d\u91cf\u5c11\u7528\u5168\u5c40\u5bf9\u8c61\u3002\u9996\u5148\uff0c\u5168\u5c40\u5bf9\u8c61\u7684\u6784\u9020\u987a\u5e8f\u4e0d\u80fd\u5b8c\u5168\u786e\u5b9a\uff0c\u6240\u4ee5\u5168\u5c40\u5bf9\u8c61\u4e4b\u95f4\u4e0d\u80fd\u6709\u4f9d\u8d56\u5173\u7cfb\uff0c\u5426\u5219\u4f1a\u51fa\u73b0\u95ee\u9898\u3002\u5176\u6b21\uff0c\u5168\u5c40\u5bf9\u8c61\u4f1a\u589e\u5927\u4ee3\u7801\u7684\u8026\u5408\u6027\uff0c\u5bfc\u81f4\u7a0b\u5e8f\u96be\u4ee5\u590d\u7528\u6216\u8005\u6d4b\u8bd5\u3002 \u8fd9\u9053\u9898\u5c31\u662f\u5f3a\u8c03\u4e86\u5168\u5c40\u53d8\u91cf\u4e3b\u51fd\u6570\u6267\u884c\u5b8c\u8fd4\u56de\u4e4b\u540e\u88ab\u6790\u6784\u3002\u800c local_obj \u76f8\u5f53\u4e8e\u662f main \u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u4f1a\u5728\u5168\u5c40\u53d8\u91cf\u540e\u6790\u6784\u3002 \u5f15\u7528 \u00b6 \u5b9a\u4e49\u4e0e\u8bed\u6cd5 \u00b6 \u540c\u4e00\u4e2a\u5185\u5b58\u5355\u5143\u7684\u4e24\u4e2a\u4e0d\u540c\u540d\u5b57\u3002\u521b\u5efa\u5f15\u7528\u8981\u7528\u5230 & \u7b26\u53f7\uff0c\u6bd4\u5982\u8bf4\u6574\u578b\u53d8\u91cf\u7684\u5f15\u7528\uff1a 1 2 int a = 1 ; int & b = a ; \u5f15\u7528\u5fc5\u987b\u5728\u5b9a\u4e49\u65f6\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u4e14\u4e0d\u80fd\u4fee\u6539\u5f15\u7528\u6307\u5411\uff0c\u8fd9\u70b9\u548c\u6307\u9488\u4e0d\u540c\u3002 \u88ab\u5f15\u7528\u53d8\u91cf\u540d\u53ef\u4ee5\u662f\u7c7b\u7684\u6210\u5458\u53d8\u91cf\uff0c\u5982 int& m = s.m \u3002 \u7ed3\u5408\u51fd\u6570\u4f7f\u7528 \u00b6 \u51fd\u6570\u53c2\u6570\u53ef\u4ee5\u662f\u5f15\u7528\u7c7b\u578b\uff0c\u8868\u793a\u51fd\u6570\u7684\u5f62\u5f0f\u53c2\u6570\u4e0e\u5b9e\u9645\u53c2\u6570\u662f\u540c\u4e00\u4e2a\u53d8\u91cf\uff0c\u6539\u53d8\u5f62\u53c2\u5c06\u6539\u53d8\u5b9e\u53c2\uff0c\u4f7f\u7528\u5f97\u5f53\u4e5f\u53ef\u907f\u514d\u8bb8\u591a\u4e0d\u5fc5\u8981\u7684\u5f62\u53c2\u62f7\u8d1d\u3002\u5982\u8c03\u7528\u4ee5\u4e0b\u51fd\u6570\u5c06\u4ea4\u6362\u5b9e\u53c2\u7684\u503c\uff1a 1 2 3 void swap ( int & a , int & b ) { int tmp = b ; b = a ; a = tmp ; } \u51fd\u6570\u8fd4\u56de\u503c\u53ef\u4ee5\u662f\u5f15\u7528\u7c7b\u578b\uff0c\u4f46\u4e0d\u5f97\u6307\u5411\u51fd\u6570\u7684\u975e\u9759\u6001\u7684\u4e34\u65f6\u53d8\u91cf\u3002\u6362\u8a00\u4e4b\uff0c\u4f60\u53ef\u4ee5\u8fd4\u56de\u4e34\u65f6\u53d8\u91cf\uff08\u8fd9\u76f8\u5f53\u4e8e\u628a\u5b83\u590d\u5236\u4e86\u4e00\u4efd\u7528\u4e8e\u8fd4\u56de\u51fa\u53bb\uff0c\u5b83\u672c\u8eab\u4f1a\u88ab\u9500\u6bc1\uff09\uff0c\u4f46\u4e0d\u80fd\u8fd4\u56de\u975e\u9759\u6001\u4e34\u65f6\u53d8\u91cf\u7684\u5f15\u7528\u3002\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u662f\u53ef\u4ee5\u4f5c\u4e3a\u8fd4\u56de\u503c\u7684\uff0c\u5e76\u4e14\u6709\u7740\u795e\u5947\u7684\u64cd\u4f5c\uff08\u8fd9\u4e00\u795e\u5947\u7684\u64cd\u4f5c\u6d89\u53ca\u5230\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u7684\u4f5c\u7528\uff0c\u8be6\u89c1\u4e0b\u4e00\u7ae0\u8282\uff09\u3002 \u8fd9\u6bb5\u4ee3\u7801\u5b58\u5728\u975e\u6cd5\u5185\u5b58\u8bbf\u95ee\u3002\u6ce8\u610f\u5230 func2 \u5b9a\u4e49\u7684\u5c40\u90e8\u53d8\u91cf tmp \u662f\u975e\u9759\u6001\u7684\uff0c\u6545\u800c func2 \u7ed3\u675f\u4e4b\u540e\u7acb\u523b\u6790\u6784\u3002\u800c f \u88ab\u5b9a\u4e49\u4e3a\u4e86 tmp \u7684\u5f15\u7528\uff0c tmp \u5df2\u7ecf\u88ab\u9500\u6bc1\u4e86\uff0c\u8fd9\u5757\u5185\u5b58\u7a7a\u95f4\u5df2\u7ecf\u88ab\u91ca\u653e\u3002 \u88ab\u91ca\u653e\u7684\u5185\u5b58\uff0c\u8bbf\u95ee\u662f\u5371\u9669\u7684\uff0c\u4f46\u5e76\u975e\u4e0d\u53ef\u8bbf\u95ee\u3002\u73b0\u5728\u4e00\u822c\u7684\u7f16\u8bd1\u5668\u90fd\u662f\u5141\u8bb8\u8bbf\u95ee\uff0c\u4f46\u8bbf\u95ee\u7684\u7ed3\u679c\u4e0d\u786e\u5b9a\uff0c\u6709\u53ef\u80fd\u662f\u8fd0\u884c\u9519\u8bef\uff0c\u6709\u53ef\u80fd\u662f\u4e0d\u786e\u5b9a\u7684\u503c\u3002\u8fd9\u4e2a\u53ef\u80fd\u9700\u8981\u7b49\u5230\u5b66\u6c47\u7f16\u4f1a\u4e86\u89e3\u7684\u66f4\u6e05\u695a\u3002 \u6545\u800c\u8fd9\u6bb5\u4ee3\u7801\u5728 glot \u7f16\u8bd1\u5668\u4e0a\u7684\u7ed3\u679c\u4e3a 4_0 \u3002 \u7136\u800c\u6211\u4eec\u5bf9\u5c40\u90e8\u53d8\u91cf tmp \u52a0\u4e0a static \u4fee\u9970\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #include <iostream> using namespace std ; class Int { public : int data ; Int () { data = 1 ; } Int ( int i ) : data ( i ) { } }; void func1 ( Int & a , Int b ) { a . data += b . data ; } Int & func2 ( Int & a , Int b ) { func1 ( a , b ); int static tmp ( a . data + b . data ); return tmp ; } int main () { int a , b ( 3 ); int & f = func2 ( a , b ); cout << a . data << \"_\" << f . data << endl ; // \"4_7\" return 0 ; } \u975e\u5e38\u795e\u5947\uff0c\u6211\u4eec\u4e0d\u4ec5\u901a\u8fc7 static \u4fee\u9970\u4fdd\u7559\u4e86\u5c40\u90e8\u53d8\u91cf\uff0c\u4f3c\u4e4e\u8fd8\u6539\u53d8\u4e86\u8fd9\u4e2a\u5c40\u90e8\u53d8\u91cf\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 #include <iostream> using namespace std ; class Int { public : int data ; Int () { data = 1 ; } Int ( int i ) : data ( i ) { } }; void func1 ( Int & a , Int b ) { a . data += b . data ; } Int & func2 ( Int & a , Int b ) { func1 ( a , b ); Int static tmp ( a . data + b . data ); return tmp ; } int main () { Int a , b ( 3 ); Int & f = func2 ( a , b ); cout << a . data << \"_\" << f . data << endl ; // \"4_7\" f . data ++ ; cout << a . data << \"_\" << func2 ( a , b ). data << \"_\" << a . data << endl ; // \"4_8_7\" return 0 ; } \u8fd9\u4f3c\u4e4e\u8fdd\u53cd\u4e86\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u53ea\u80fd\u591f\u88ab\u5b9a\u4e49\u5b83\u7684\u51fd\u6570\u4f53\u64cd\u4f5c\u8fd9\u4e00\u70b9\uff0c\u5b9e\u5219\u4e0d\u7136\u3002\u6211\u4eec\u4e4b\u524d\u53d9\u8ff0\u7684\u662f\uff0c\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u4e0d\u80fd\u5728\u51fd\u6570\u5916\u88ab\u4f7f\u7528\uff0c\u4f46\u662f\u4f46\u5b83\u7684\u5185\u5b58\u7a7a\u95f4\u53ef\u4ee5\u3002\u4e0a\u4f8b\u662f\u7ed5\u8fc7\u4e86\u8bed\u8a00\u5c42\u9762\uff0c\u76f4\u63a5\u5bf9\u4e8e\u5185\u5b58\u8fdb\u884c\u4e86\u64cd\u4f5c\u3002 \u5bf9\u4e8e\u53d8\u91cf\u7684\u64cd\u4f5c\uff0c\u662f\u6307\u4f8b\u5982\u7f16\u5199\u4e00\u884c C \u8bed\u8a00\u4ee3\u7801\uff0c\u660e\u786e\u5730\u64cd\u4f5c\u8fd9\u4e2a\u53d8\u91cf\uff0c\u6bd4\u5982 x++ \u3002\u4f46\u662f\u64cd\u4f5c\u53ef\u4ee5\u901a\u8fc7\u6307\u9488\uff0c\u6bd4\u5982\u5b9a\u4e49\u4e00\u4e2a\u6307\u9488 p \u6765\u6307\u5411\u8fd9\u4e2a\u5730\u5740\uff0c\u4e4b\u540e\u5bf9 *p \u8fdb\u884c\u5404\u7c7b\u64cd\u4f5c\u3002\u8fd9\u65f6\u5019\u7f16\u8bd1\u5668\u5e76\u4e0d\u77e5\u9053 *p \u6307\u5411\u7684\u5185\u5b58\u7a7a\u95f4\u7a76\u7adf\u600e\u4e48\u6765\u7684\uff0c\u5b83\u53ea\u77e5\u9053\u662f\u4e00\u6bb5\u5185\u5b58\u7a7a\u95f4\uff0c\u8fdb\u884c\u4e86\u4e00\u7cfb\u5217\u64cd\u4f5c\u3002 \u7b80\u800c\u8a00\u4e4b\uff0c\u4f60\u4e0d\u80fd\u5728\u51fd\u6570\u4f53\u5916\u4f7f\u7528\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u7684\u540d\u5b57\uff0c\u4f46\u662f\u53ef\u4ee5\u4f7f\u7528\u8fd9\u5757\u5185\u5b58\u7a7a\u95f4\u3002 \u53e6\u5916\uff0c\u6211\u5728 func2(a, b).data \u4e2d\u7b2c\u4e8c\u6b21\u8c03\u7528 func2(a, b) \u65f6\uff0c\u7531\u4e8e\u4e4b\u524d\u5df2\u7ecf\u5b9a\u4e49\u4e86 static int tmp \uff0c\u6240\u4ee5\u7b2c\u4e8c\u6b21\u4e0d\u518d\u7528 Int static tmp(a.data + b.data \u6765\u6784\u9020\u65b0\u7684 tmp \uff0c\u76f8\u5f53\u4e8e\u6784\u9020 tmp \u7684\u8fd9\u4e00\u884c\u5931\u6548\u4e86\uff0c\u4f46\u662f func1(a, b) \u4ecd\u7136\u4f1a\u8fdb\u884c\uff0c\u6545\u800c a \u8fd8\u662f\u52a0\u4e86 3 \u3002 \u53c8\u6bd4\u5982\u4e0b\u9762\u8fd9\u6bb5\u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 #include <iostream> using namespace std ; class Int { public : int data ; Int () { data = 1 ; } Int ( int i ) : data ( i ) { } }; void func1 ( Int & a , Int b ) { a . data += b . data ; } Int & func2 ( Int & a , Int b ) { func1 ( a , b ); Int static tmp ( a . data + b . data ); return tmp ; } int main () { Int a , b ( 3 ); Int & f = func2 ( a , b ); cout << a . data << \"_\" << f . data << endl ; // \"4_7\" func2 ( a , b ). data ++ ; cout << a . data << \"_\" << func2 ( a , b ). data << \"_\" << a . data << endl ; // \"7_8_10\" return 0 ; } \u6211\u4f01\u56fe\u76f4\u63a5 func2(a, b).data++ \uff0c\u56e0\u4e3a\u6211\u8fd4\u56de\u7c7b\u578b\u4e3a tmp \u7684\u5f15\u7528\uff0c\u4e5f\u6210\u529f\u5b9e\u73b0\u4e86\u5bf9\u4e8e tmp \u7684\u5185\u5b58\u7a7a\u95f4\u7684\u64cd\u4f5c\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 #include <iostream> using namespace std ; class Int { public : int data ; Int () { data = 1 ; } Int ( int i ) : data ( i ) { } }; void func1 ( Int & a , Int b ) { a . data += b . data ; } Int & func2 ( Int & a , Int b ) { func1 ( a , b ); Int static tmp ( a . data + b . data ); return tmp ; } int main () { Int a , b ( 3 ); Int & f = func2 ( a , b ); cout << a . data << \"_\" << f . data << endl ; tmp . data ++ ; cout << a . data << \"_\" << func2 ( a , b ). data << \"_\" << a . data << endl ; return 0 ; } /* error: use of undeclared identifier 'tmp' tmp.data++; ^ 1 error generated. */ \u5f15\u7528\u7684\u5176\u4ed6\u7279\u70b9 \u00b6 \u4e0d\u5b58\u5728\u7a7a\u5f15\u7528\u3002\u5f15\u7528\u5fc5\u987b\u8fde\u63a5\u5230\u4e00\u5757\u5408\u6cd5\u7684\u5185\u5b58\u3002 \u4e00\u65e6\u5f15\u7528\u88ab\u521d\u59cb\u5316\u4e3a\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5c31\u4e0d\u80fd\u88ab\u6307\u5411\u5230\u53e6\u4e00\u4e2a\u5bf9\u8c61\u3002\u6307\u9488\u53ef\u4ee5\u5728\u4efb\u4f55\u65f6\u5019\u6307\u5411\u5230\u53e6\u4e00\u4e2a\u5bf9\u8c61\u3002 \u5f15\u7528\u5fc5\u987b\u5728\u521b\u5efa\u65f6\u88ab\u521d\u59cb\u5316\u4e3a\u4e00\u4e2a\u5bf9\u8c61\u3002\u6307\u9488\u53ef\u4ee5\u5728\u521d\u59cb\u5316\u65f6\u7f6e\u7a7a\uff0c\u4e4b\u540e\u518d\u6307\u5411\u5bf9\u8c61\u3002 \u5f15\u7528\u7684\u4f18\u52bf\u4e3a\u66f4\u7075\u6d3b\u5730\u652f\u6301\u8fd0\u7b97\u7b26\u91cd\u8f7d\u3002 \u5f15\u7528\u7684\u7279\u6027\uff1a\u521b\u5efa\u65f6\u5fc5\u987b\u521d\u59cb\u5316\u3001\u521d\u59cb\u5316\u540e\u4fbf\u4e0d\u80fd\u6307\u5411\u5176\u4ed6\u5bf9\u8c61\uff0c\u4e0d\u5b58\u5728\u7a7a\u5f15\u7528\u3002 \u8fd0\u7b97\u7b26\u91cd\u8f7d \u00b6 \u610f\u4e49 \u00b6 \u7528\u6237\u81ea\u5b9a\u4e49\u7c7b\uff0c\u6ca1\u6709\u5bf9\u5e38\u7528\u7684\u8fd0\u7b97\u7b26\u8fdb\u884c\u5b9a\u4e49\uff0c\u6bd4\u5982\u60f3\u8981\u8868\u793a\u4e24\u4e2a\u7c7b\u5bf9\u8c61\u76f8\u52a0\uff0c\u65e0\u6cd5\u91c7\u7528 a + b \u8fd9\u79cd\u65b9\u5f0f\u3002\u53ef\u4ee5\u91c7\u53d6\u5b9a\u4e49\u4e00\u4e2a add \u51fd\u6570\u7684\u65b9\u5f0f\uff0c\u89e3\u51b3\u8fd9\u79cd\u95ee\u9898\u3002\u4f46\u8fd9\u79cd\u5b9e\u73b0\u65b9\u5f0f\uff0c\u5728\u8c03\u7528\u7684\u65f6\u5019\uff0c\u4f1a\u548c\u57fa\u7840\u7c7b\u578b\u5dee\u522b\u5f88\u5927\uff0c\u7f3a\u5c11\u7f16\u7a0b\u7684\u4e00\u81f4\u6027\u3002\u9700\u8981\u8fc7\u591a\u5730\u533a\u5206\u81ea\u5b9a\u4e49\u7c7b\u548c\u57fa\u7840\u7c7b\u522b\uff0c\u8c03\u7528\u8d77\u6765\u4e5f\u4e0d\u65b9\u4fbf\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5f15\u5165\u8fd0\u7b97\u7b26\u91cd\u8f7d\u3002 \u8bed\u6cd5 \u00b6 \u8fd0\u7b97\u7b26\u91cd\u8f7d\u9700\u8981\u6309\u89c4\u5219\u58f0\u660e\u6267\u884c\u8be5\u8fd0\u7b97\u7684\u51fd\u6570\u3002\u4f8b\u5982 + \u5bf9\u5e94 operator+ \u3002\u8fd0\u7b97\u7b26\u91cd\u8f7d\u4e00\u822c\u6709\u4e24\u79cd\u65b9\u5f0f\uff08\u6ce8\u610f\u53c2\u6570\u4e0d\u540c\uff09\uff0c\u4e14\u53ea\u80fd\u7528\u4e00\u79cd\u3002 \u5168\u5c40\u51fd\u6570\u578b\u8fd0\u7b97\u7b26\u91cd\u8f7d 1 2 3 4 A operator + ( A & a1 , A & a2 ) { A new_a ( a1 . data + a2 . data ); return new_a ; } \u4f7f\u7528\u5168\u5c40\u51fd\u6570\u578b\u91cd\u8f7d\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 #include <iostream> using namespace std ; class A { public : int data ; A ( int i ) { data = i ; } }; A operator + ( A & a1 , A & a2 ) { A new_a ( a1 . data + a2 . data ); return new_a ; } int main () { A a1 ( 2 ), a2 ( 3 ); cout << a1 . data << endl ; // 2 cout << ( a1 + a2 ). data << endl ; // 5 return 0 ; } \u8fd9\u91cc\u7684 a1 + a2 \u76f8\u5f53\u4e8e\u8c03\u7528\u51fd\u6570 operator+(a1, a2) \u3002 \u6210\u5458\u51fd\u6570\u578b\u8fd0\u7b97\u7b26\u91cd\u8f7d 1 2 3 4 5 6 7 8 class A { int data ; public : A operator + ( A & a ) { A new_a ( data + a . data ); return new_a ; } }; \u6ce8\u610f\u7406\u89e3\u53c2\u6570\u7684\u4e0d\u540c\u3002\u5b9a\u4e49\u4e3a\u5168\u5c40\u51fd\u6570\u578b\u8fd0\u7b97\u7b26\u91cd\u8f7d\u4e4b\u540e\uff0c\u9700\u8981\u6307\u51fa\u5bf9\u4e8e\u54ea\u4e24\u4e2a\u5bf9\u8c61\u8fdb\u884c\u64cd\u4f5c\u3002\u4f46\u662f\u5b9a\u4e49\u4e3a\u6210\u5458\u51fd\u6570\u578b\u8fd0\u7b97\u7b26\u91cd\u8f7d\u65f6\uff0c\u8fd9\u4e00\u51fd\u6570\u662f\u67d0\u4e00\u5bf9\u8c61\u7684\u6210\u5458\u51fd\u6570\u3002\u5982\u679c\u662f\u53cc\u76ee\u8fd0\u7b97\u7b26\u53ea\u9700\u6307\u660e\u53e6\u4e00\u4e2a\u6570\u636e\u4e3a\u53c2\u6570\u3002 \u4f7f\u7528\u6210\u5458\u51fd\u6570\u578b\u91cd\u8f7d\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #include <iostream> using namespace std ; class A { public : int data ; A ( int i ) { data = i ; } A & operator += ( A & a ) { data += a . data ; return * this ; } A operator + ( A & a ) { A new_a ( data + a . data ); return new_a ; } }; int main () { A a1 ( 2 ), a2 ( 3 ); a1 += a2 ; cout << a1 . data << endl ; // 5 cout << ( a1 + a2 ). data << endl ; // 8 return 0 ; } \u663e\u7136 += \u548c + \u90fd\u5e94\u8be5\u91cd\u8f7d\uff0c\u4e0d\u53ef\u80fd\u53ea\u91cd\u8f7d + \u5c31\u89e3\u51b3\u95ee\u9898\u3002\u8fd9\u91cc\u7684 a1 + a2 \u76f8\u5f53\u4e8e\u8c03\u7528\u51fd\u6570 a1.operator+(a2) \u3002 \u5177\u4f53\u7684\u91cd\u8f7d\u5b9e\u4f8b \u00b6 \u53ef\u91cd\u8f7d\u7684\u8fd0\u7b97\u7b26 \u00b6 \u53cc\u76ee\u7b97\u672f\u8fd0\u7b97\u7b26\u3002 + \uff08\u52a0\uff09\u3001 - \uff08\u51cf\uff09\u3001 * \uff08\u4e58\uff09\u3001 / \uff08\u9664\uff09\u3001 % \uff08\u53d6\u6a21\uff09 \u5173\u7cfb\u8fd0\u7b97\u7b26\u3002 == \uff08\u7b49\u4e8e\uff09\u3001 != \uff08\u4e0d\u7b49\u4e8e\uff09\u3001 < \uff08\u5c0f\u4e8e\uff09\u3001 > \uff08\u5927\u4e8e\uff09\u3001 <= \uff08\u5c0f\u4e8e\u7b49\u4e8e\uff09\u3001 >= \uff08\u5927\u4e8e\u7b49\u4e8e\uff09 \u903b\u8f91\u8fd0\u7b97\u7b26\u3002 || \uff08\u903b\u8f91\u6216\uff09\u3001 && \uff08\u903b\u8f91\u4e0e\uff09\u3001 ! \uff08\u903b\u8f91\u975e\uff09 \u5355\u76ee\u8fd0\u7b97\u7b26\u3002 + \uff08\u6b63\uff09\u3001 - \uff08\u8d1f\uff09\u3001 * \uff08\u6307\u9488\uff09\u3001 & \uff08\u53d6\u5730\u5740\uff09 \u81ea\u589e\u81ea\u51cf\u8fd0\u7b97\u7b26\u3002 ++ \uff08\u81ea\u589e\uff09\u3001 -- \uff08\u81ea\u51cf\uff09 \u4f4d\u8fd0\u7b97\u7b26\u3002 | \uff08\u6309\u4f4d\u6216\uff09\u3001 & \uff08\u6309\u4f4d\u4e0e\uff09\u3001 ~ \uff08\u6309\u4f4d\u53d6\u53cd\uff09\u3001 ^ \uff08\u6309\u4f4d\u5f02\u6216\uff09\u3001 << \uff08\u5de6\u79fb\uff09\u3001 >> \uff08\u53f3\u79fb\uff09 \u8d4b\u503c\u8fd0\u7b97\u7b26\u3002 = \u3001 += \u3001 -= \u3001 *= \u3001 /= \u3001 %= \u3001 &= \u3001 |= \u3001 ^= \u3001 <<= \u3001 >>= \u7a7a\u95f4\u7533\u8bf7\u4e0e\u91ca\u653e\u3002 new \u3001 delete \u3001 new[] \u3001 delete[] \u5176\u4ed6\u8fd0\u7b97\u7b26\u3002 () \uff08\u51fd\u6570\u8c03\u7528\uff09\u3001 -> \uff08\u6210\u5458\u8bbf\u95ee\uff09\u3001 , \uff08\u9017\u53f7\uff09 \u524d\u540e\u7f00\u91cd\u8f7d \u00b6 \u58f0\u660e \u524d\u7f00\u8fd0\u7b97\u7b26\u91cd\u8f7d\u58f0\u660e\uff1a 1 2 ClassName operator ++ (); ClassName operator -- (); \u540e\u7f00\u8fd0\u7b97\u7b26\u91cd\u8f7d\u58f0\u660e\uff1a 1 ClassName operator ++ ( int dummy ); dummy \u8868\u793a\u54d1\u5143\uff0c\u5b9e\u9645\u4e0a\u54d1\u5143\u53ef\u4ee5\u6ca1\u6709\u540d\u5b57\u3002 ++a \u7b49\u4ef7\u4e8e operator++(a) \uff0c\u800c a++ \u7b49\u4ef7\u4e8e operator++(a, int) \u3002 \u54d1\u5143\u7684\u610f\u4e49\u5c31\u662f\uff0c\u8bbe\u60f3\u6ca1\u6709\u8fd9\u4e00\u54d1\u5143\uff0c\u90a3\u4e48 a++ \u548c ++a \u7684\u58f0\u660e\u5b8c\u5168\u76f8\u540c\u3002\u7136\u800c\u5b9e\u9645\u4e0a\uff0c\u4e24\u4e2a\u51fd\u6570\u7684\u529f\u80fd\u5b8c\u5168\u4e0d\u540c\uff0c\u9700\u8981\u5b9e\u73b0\u91cd\u8f7d\u3002\u8fd9\u4e00\u5b9e\u73b0\u5c31\u662f\u501f\u52a9\u54d1\u5143\u8fbe\u6210\u7684\u3002 \u7f16\u8bd1\u5668\u5728\u7f16\u8bd1 a++ \u65f6\uff0c\u7b49\u4ef7\u4e8e operator++(a,int) \uff0c\u4ece\u800c\u8c03\u7528\u4e86\u540e\u7f00\u8fd0\u7b97\u7b26\u3002\u7f16\u8bd1\u5668\u81ea\u52a8\u8bc6\u522b\uff0c\u5c31\u50cf\u662f a1 + a2 \u7b49\u4ef7\u4e8e a1.operator+(a2) \uff0c\u8fd9\u79cd\u7b49\u4ef7\u5c31\u662f\u7f16\u8bd1\u5668\u81ea\u52a8\u7b49\u4ef7\u3002 \u8bed\u4e49\u8bc6\u522b 1 2 int a = ++ b ; // \u5148\u5b8c\u6210 b + 1 \u64cd\u4f5c\uff0c\u518d\u8d4b\u503c int a = b ++ ; // \u5148\u5b8c\u6210\u8d4b\u503c\uff0c\u518d b + 1 \u64cd\u4f5c \u524d\u7f00\u8fd0\u7b97\u7b26\u91cd\u8f7d\u5b9e\u4f8b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 #include <iostream> using namespace std ; class Test { public : int data = 1 ; Test ( int d ) { data = d ; } Test & operator ++ () { ++ data ; return * this ; } }; int main () { Test test ( 1 ); ++ test ; return 0 ; } \u540e\u7f00\u8fd0\u7b97\u7b26\u91cd\u8f7d\u5b9e\u4f8b\uff08\u4e00\uff09 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 #include <iostream> using namespace std ; class Test { public : int data = 1 ; Test ( int d ) { data = d ; } Test operator ++ ( int ) { Test test ( data ); ++ data ; return test ; } }; int main () { Test test ( 1 ); test ++ ; return 0 ; } \u9996\u5148\u9700\u8981\u6307\u51fa\u7684\u662f\uff0c\u51fd\u6570\u7684\u8fd4\u56de\u503c\u5e76\u4e0d\u4e00\u5b9a\u9700\u8981\u4f7f\u7528\u3002\u8fd9\u4e00\u6bb5\u5c31\u662f\u5178\u578b\u7684\u4f8b\u5b50\uff0c\u5c3d\u7ba1\u6211\u8fd4\u56de\u7684\u662f\u4e2a Test \u5bf9\u8c61\uff0c\u4f46\u662f\u6ca1\u6709\u4eba\u63a5\u6536\u8fd9\u4e00\u5bf9\u8c61\uff0c\u4ed6\u4f1a\u5728\u4e3b\u51fd\u6570\u7684\u5bf9\u5e94\u8bed\u53e5\uff08\u4e5f\u5c31\u662f test++ \uff09\u7ed3\u675f\u540e\u88ab\u91ca\u653e\u3002\u867d\u7136\u5728\u8fd9\u4e2a\u4f8b\u5b50\u91cc\u9762\uff0c test++ \u5e76\u6ca1\u6709\u7528\u5230 Test \u7c7b\u578b\u7684\u8fd4\u56de\u503c\uff0c\u53ef\u4ee5\u6539\u4e3a void \uff0c\u4f46\u662f\u5728\u5176\u4ed6\u60c5\u51b5\u4e0b\u662f\u9700\u8981\u7528\u5230\u8fd9\u4e00\u4e2a\u8fd4\u56de\u503c\u7684\u3002 \u5173\u4e8e\u6790\u6784\u65f6\u673a \u5bf9\u4e8e\u6b64\u5904\u5c40\u90e8\u5bf9\u8c61\u7684\u6790\u6784\u65f6\u673a\uff0c\u7ed3\u5408\u4e0b\u8ff0\u8fdb\u884c\u4e00\u5b9a\u7684\u89e3\u8bfb\u3002 1 2 3 4 5 Test f1 ( Test a ) { a . print ( \"a\" ); return a ; } Test A = f1 ( a ); \u5bf9\u4e8e\u8fd9\u4e00\u8d4b\u503c\u6784\u9020\uff08\u6784\u9020\u5916\u9762\u7684 A \uff09\u548c\u51fd\u6570\u8c03\u7528\u8bed\u53e5\uff0c\u6784\u9020 A \u548c\u6790\u6784\u8fd4\u56de\u503c\u548c\u5f62\u53c2\u7684\u5148\u540e\u987a\u5e8f\u5e94\u8be5\u662f\uff0c\u5148\u6267\u884c\u5b8c f1 \u7684\u51fd\u6570\u4f53\uff0c\u6682\u4e0d\u6790\u6784\u3002\u7136\u540e\u6267\u884c\u5b8c\u6574\u4e2a\u8bed\u53e5\uff0c\u5177\u4f53\u5230\u8fd9\u4e2a\u8bed\u53e5\uff0c\u5c31\u662f\u5916\u90e8\u5bf9 A \u7684\u79fb\u52a8\u6784\u9020\uff0c\u518d\u6790\u6784\u3002 \u5b8c\u6210\u4e86\u5bf9 A \u7684\u79fb\u52a8\u6784\u9020\u4e4b\u540e\uff0c\u5c31\u5df2\u7ecf\u5b8c\u6210\u4e86\u4e24\u6b21\u5bf9\u5e94\u79fb\u52a8\u6784\u9020\u7684\u8f93\u51fa\u3002\u5206\u522b\u662f\u56e0\u4e3a\u8fd4\u56de\u503c\u4f18\u5316\u88ab\u7981\u7528\u800c\u5bf9\u8fd4\u56de\u503c\u8fdb\u884c\u7684\u89c4\u5b9a\u7684\u79fb\u52a8\u6784\u9020\uff0c\u4ee5\u53ca\u8fd4\u56de\u7684\u5bf9\u8c61\u5bf9\u4e8e A \u7684\u79fb\u52a8\u6784\u9020\u3002\u63a5\u4e0b\u6765\uff0c\u8fd9\u4e00\u8bed\u53e5\u6267\u884c\u5b8c\u6bd5\u540e\u624d\u8fdb\u884c\u51fd\u6570\u4f53\u7684\u6790\u6784\uff0c\u4e5f\u5c31\u662f\u8fde\u7eed\u7684\u4e24\u6b21\u6790\u6784\u3002\u7b2c\u4e00\u6b21\u6790\u6784\u6389\u8fd4\u56de\u503c\uff0c\u7b2c\u4e8c\u6b21\u6790\u6784\u6389\u5f62\u53c2\uff08\u5148\u6784\u9020\u7684\u540e\u6790\u6784\uff09\u3002 \u4f46\u662f\u8fd9\u91cc\u7684\u6790\u6784\u987a\u5e8f\u5176\u5b9e\u8fd8\u6709\u8fdb\u4e00\u6b65\u8ba8\u8bba\uff1a \u7531\u4e8e\u51fd\u6570\u8fd4\u56de\u503c\u662f\u5bf9\u8c61\u800c\u5728 return \u65f6\u4e5f\u4f1a\u4ea7\u751f\u4e00\u6b21\u5bf9\u8c61\u6784\u9020\uff08\u901a\u5e38\u4f1a\u88ab\u7f16\u8bd1\u5668\u4f18\u5316\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7\u5f00\u542f\u7f16\u8bd1\u6307\u4ee4 -fon-elide-constructors \u8ba9\u7f16\u8bd1\u5668\u4e0d\u4f18\u5316\uff09\uff0c\u8fd9\u4e2a\u4e34\u65f6\u5bf9\u8c61\u4f1a\u5728 return \u8bed\u53e5\u6267\u884c\u65f6\u88ab\u521b\u5efa\uff0c\u7b49 return \u8bed\u53e5\u7ed3\u675f\u540e\uff0c\u51fd\u6570\u4f53\u5185\u7684\u5bf9\u8c61\u88ab\u6790\u6784\uff0c\u7136\u540e\u8fd9\u4e2a\u4e34\u65f6\u53d8\u91cf\u88ab\u6790\u6784\uff0c\u6700\u540e\u624d\u5230\u4f5c\u4e3a\u53c2\u6570\u7684\u53d8\u91cf\u88ab\u6790\u6784\u3002 \u6790\u6784\u987a\u5e8f\u662f\u5148\u6790\u6784\u51fd\u6570\u4f53\u5185\u5bf9\u8c61\uff0c\u7136\u540e\u662f\u8fd4\u56de\u503c\u5bf9\u8c61\uff0c\u6700\u540e\u662f\u5f62\u53c2\u3002\u867d\u7136\u8fd9\u548c\u901a\u5e38\u610f\u4e49\u4e0a\u7684\u5148\u6784\u9020\u7684\u540e\u6790\u6784\u6709\u4e9b\u77db\u76fe\uff0c\u4f46\u662f\u7279\u4f8b\u8bb0\u4f4f\u5c31\u597d\u3002 \u81f3\u4e8e\u4e3a\u4ec0\u4e48\u5bf9 A \u662f\u79fb\u52a8\u6784\u9020\uff1a 1 Test A = f1 ( a ); f1(a) \u662f\u4e2a\u53f3\u503c\uff0c\u56e0\u4e3a\u4f60\u6ca1\u6cd5\u5bf9 f1(a)++ \u3002 f1(a) \u662f\u4e2a\u53f3\u503c\uff0c\u6545\u800c\u9ed8\u8ba4\u8c03\u7528\u4e86\u79fb\u52a8\u6784\u9020\u51fd\u6570\u3002 \u8fd9\u91cc\u9700\u8981\u610f\u8bc6\u5230\uff0c f1(a) \u672c\u8eab\u662f\u4e2a\u53f3\u503c\uff0c\u4f46\u662f A \u5c31\u662f\u4e2a\u5de6\u503c\u4e86\u3002 \u8fd8\u503c\u5f97\u8bf4\u660e\u7684\u662f\uff0c\u4e0a\u6587\u7684\u6790\u6784\u65f6\u673a\u662f\u5efa\u7acb\u5728\u4e3b\u51fd\u6570\u7684\u8bed\u53e5\u65e2\u6709\u8d4b\u503c\u53c8\u6709\u51fd\u6570\u8c03\u7528\u7684\u57fa\u7840\u4e0a\uff0c\u4e5f\u5c31\u662f\u51fd\u6570\u7684\u8fd4\u56de\u503c\u6709\u8d4b\u503c\u4f5c\u7528\u3002\u5982\u679c\u51fd\u6570\u8fd4\u56de\u503c\u6ca1\u6709\u8d4b\u503c\u7684\u4f5c\u7528\uff0c\u90a3\u4e48\u8fd4\u56de\u503c\u4f1a\u7acb\u523b\u5728\u51fd\u6570\u4f53\u7ed3\u675f\u540e\u88ab\u6790\u6784\uff0c\u800c\u4e0d\u662f\u4e3b\u51fd\u6570\u7684\u5bf9\u5e94\u8bed\u53e5\u7ed3\u675f\u540e\u6790\u6784\u3002\u8b6c\u5982\u4e0a\u6587\u7b80\u5355\u7684\u5199 a++ \u5c31\u4f1a\u8ba9 test \u7acb\u523b\u88ab\u6790\u6784\u3002 \u540e\u7f00\u8fd0\u7b97\u7b26\u91cd\u8f7d\u5b9e\u4f8b\uff08\u4e8c\uff09 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 #include <iostream> using namespace std ; class Test { public : int data = 1 ; Test ( int d ) { data = d ; } Test operator ++ ( int ) { Test test ( data ); ++ data ; return test ; } }; int main () { Test test ( 1 ); test = test ++ ; cout << test . data << endl ; // 1 return 0 ; } \u4e3a\u4ec0\u4e48\u4f1a\u8f93\u51fa 1 \uff1f\u6211\u4eec\u7ed3\u5408\u4fee\u6539\u540e\u7684\u4ee3\u7801\u8fdb\u884c\u89e3\u91ca\u3002 \u5148\u6784\u5efa\u4e86 new_test \uff0c\u7136\u540e\u5bf9\u539f\u6709\u7684 test.data++ \uff0c\u7136\u540e\u628a new_test \u8fd4\u56de\u7ed9\u4e86 test \u3002\u6ce8\u610f\u5230\u8fd9\u4e00\u903b\u8f91\u8fc7\u7a0b\u7684\u5148\u540e\u987a\u5e8f\uff0c\u6211\u867d\u7136\u5bf9\u4e8e test.data++ \u4e86\uff0c\u4f46\u8fd9\u6b65\u4e4b\u540e\u7528\u8fd4\u56de\u7684 new_test \uff08 data \u8fd8\u662f 1 \uff09\u5bf9 test \u8fdb\u884c\u4e86\u79fb\u52a8\u8d4b\u503c\uff0c\u8986\u76d6\u4e86 ++ \u7684\u6548\u679c\uff0c\u6545\u800c test.data \u8fd8\u662f 1 \u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u907f\u514d\u4e3b\u51fd\u6570\u7684\u5c40\u90e8\u53d8\u91cf\u548c\u51fd\u6570\u4f53\u5c40\u90e8\u53d8\u91cf\u91cd\u540d\u5fc5\u7136\u662f\u4e2a\u597d\u4e60\u60ef\uff01 \u5168\u5c40\u578b\u91cd\u8f7d\u524d\u540e\u7f00\u8fd0\u7b97\u7b26 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 #include <iostream> using namespace std ; class A { public : int data ; A () { data = 0 ; } A ( int i ) { data = i ; } }; A operator ++ ( A & a ) { ++ a . data ; return a ; } A operator ++ ( A & a , int ) { A new_a ( a . data ); ++ a . data ; return new_a ; } int main () { A a ( 1 ); cout << ( ++ a ). data << endl ; // 2 cout << ( a ++ ). data << endl ; // 2 cout << a . data << endl ; // 3 return 0 ; } \u51fd\u6570\u8fd0\u7b97\u7b26\u91cd\u8f7d \u00b6 \u5728\u81ea\u5b9a\u4e49\u7c7b\u4e2d\u4e5f\u53ef\u4ee5\u91cd\u8f7d\u51fd\u6570\u8fd0\u7b97\u7b26 () \uff0c\u5b83\u4f7f\u5bf9\u8c61\u770b\u4e0a\u53bb\u5982\u540c\u662f\u4e00\u4e2a\u51fd\u6570\u540d\uff0c\u53ef\u4ee5\u79f0\u4e4b\u4e3a\u51fd\u6570\u5bf9\u8c61\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 #include <iostream> using namespace std ; class Test { public : int operator ()( int a , int b ) { cout << \"operator() called. \" << a << ' ' << b << endl ; return a + b ; } }; int main () { Test sum ; int s = sum ( 3 , 4 ); cout << \"a + b = \" << s << endl ; // 7 int t = sum . operator ()( 5 , 6 ); cout << \"a + b = \" << s << endl ; // 11 return 0 ; } \u5b9e\u9645\u4e0a\u5728\u8c03\u7528 Obj(real_parameters) \u65f6\uff0c\u7b49\u4ef7\u4e8e\u8c03\u7528\u4e86 Obj.operator()(real_parameters) \uff0c\u6ce8\u610f\u8fd9\u91cc\u8c03\u7528\u7684\u4e0d\u662f\u6784\u9020\u51fd\u6570\u3002 \u6570\u7ec4\u4e0b\u6807\u91cd\u8f7d \u00b6 \u5373\u91cd\u8f7d [] \u8fd0\u7b97\u7b26\u3002 \u5982\u679c\u8fd4\u56de\u7c7b\u578b\u662f\u5f15\u7528\uff0c\u5219\u6570\u7ec4\u8fd0\u7b97\u7b26\u8c03\u7528\u53ef\u4ee5\u51fa\u73b0\u5728\u7b49\u53f7\u5de6\u8fb9\uff0c\u63a5\u53d7\u8d4b\u503c\uff0c\u5373 Obj[index] = value \uff08\u4e5f\u5c31\u662f\u8fd4\u56de\u5de6\u503c\uff09\u3002\u5982\u679c\u8fd4\u56de\u7c7b\u578b\u4e0d\u662f\u5f15\u7528\uff0c\u5219\u53ea\u80fd\u51fa\u73b0\u5728\u7b49\u53f7\u53f3\u8fb9 Var = Obj[index] \uff08\u4e5f\u5c31\u662f\u6210\u5458\u51fd\u6570\u51fd\u6570\u8fd4\u56de\u4e86\u53f3\u503c\uff0c\u4f46\u53f3\u503c\u4e0d\u53ef\u4ee5\u8d4b\u503c\uff09\u3002 \u6ce8\u610f\u5230\uff0c\u8fd9\u91cc Obj \u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u6570\u7ec4\u3002\u8fd9\u662f\u5bf9\u4e8e\u4e00\u4e2a\u7c7b\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6210\u5458\u51fd\u6570\u6765\u91cd\u8f7d\u6570\u7ec4\u4e0b\u6807\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 #include <iostream> #include <cstring> using namespace std ; char week_name [ 7 ][ 4 ] = { \"mon\" , \"tue\" , \"wed\" , \"thu\" , \"fri\" , \"sat\" , \"sun\" }; class WeekTemperature { int temperature [ 7 ]; int error_temperature ; public : int & operator [] ( const char * name ) { for ( int i = 0 ; i < 7 ; i ++ ) { if ( strcmp ( week_name [ i ], name ) == 0 ) return temperature [ i ]; } return error_temperature ; } }; int main () { WeekTemperature beijing ; beijing [ \"mon\" ] = -3 ; beijing [ \"tue\" ] = -1 ; cout << \"Monday Temperature: \" << beijing [ \"mon\" ] << endl ; // \"Monday Temperature: -3\" return 0 ; } const char* name \u8868\u793a\u4e00\u4e2a\u5e38\u91cf\u5b57\u7b26\u4e32\uff0c\u907f\u514d\u4fee\u6539\u3002\u8fd9\u4e2a\u5b57\u7b26\u4e32\u5e38\u91cf\u5c31\u662f\u5728 [] \u91cc\u9762\u7684\u5185\u5bb9\uff0c\u6bd4\u5982 [\"test\"] \u90a3\u4f60\u7684\u53c2\u6570\u5c31\u662f \"test\" \uff08\u6ce8\u610f\u5230\u5fc5\u987b\u8981\u6709\u53cc\u5f15\u53f7\u624d\u80fd\u662f\u5b57\u7b26\u4e32\uff09\u3002 \u6b64\u5904\uff0c\u5bf9\u4e8e private: \u505a\u4e00\u8bf4\u660e\uff0c temp \u662f\u79c1\u6709\u7684\uff0c\u6240\u4ee5\u76f4\u63a5\u8bbf\u95ee temp \u8fd9\u4e2a\u540d\u5b57\u4e0d\u53ef\u884c\uff0c\u4f46\u662f\u53ef\u901a\u8fc7\u5176\u4ed6\u65b9\u5f0f\u8bbf\u95ee\u5176\u5f15\u7528\uff0c\u8fdb\u800c\u53ef\u4fee\u6539\u5185\u5b58\u7a7a\u95f4\u3002 \u8fd9\u4e2a\u540d\u5b57\u88ab\u4fdd\u62a4\u4e86\uff0c\u4f46\u662f\u4ed6\u7684\u5185\u5b58\u5355\u5143\u6ca1\u6709\u88ab\u4fdd\u62a4\u3002 private: \u4e00\u822c\u7528\u4e8e\u4fee\u9970\u7c7b\u7684\u5185\u90e8\u5c5e\u6027\uff08\u53d8\u91cf\uff09\u548c\u65b9\u6cd5\uff08\u51fd\u6570\uff09\uff08\u5373\u90a3\u4e9b\u4e0d\u60f3\u66b4\u9732\u7ed9\u5916\u90e8\u7684\uff09\uff0c\u5b83\u4fdd\u8bc1\u4e86\u5b83\u4fee\u9970\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u4e0d\u80fd\u5728\u7c7b\u7684\u5916\u90e8\u88ab \u76f4\u63a5 \u8bbf\u95ee\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7\u7c7b\u7684\u4e00\u4e9b\u516c\u6709\u65b9\u6cd5\u5b9e\u73b0\u95f4\u63a5\u8bbf\u95ee\u3002\u4f8b\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 #include <iostream> using namespace std ; class Test { private : int i ; public : Test ( int j ) : i ( j ) { } void print () { cout << this -> i ; } }; int main () { Test test ( 1 ); int & b = test . i ; b ++ ; test . print (); return 0 ; } \u8fd9\u91cc\u5c06\u4f1a\u8bbf\u95ee\u5931\u8d25\uff0c\u56e0\u4e3a\u4e3b\u51fd\u6570\u5185\u4e0d\u53ef\u8bbf\u95ee\u76f4\u63a5 private \u6210\u5458\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 #include <iostream> using namespace std ; class Test { private : int i ; public : Test ( int j ) : i ( j ) { } void print () { cout << this -> i ; } int & setTest () { return this -> i ; } }; int main () { Test test ( 1 ); int & b = test . setTest (); b ++ ; test . print (); return 0 ; } \u6b64\u5904\uff0c\u6211\u901a\u8fc7 setTest \u8fd9\u4e00 public \u65b9\u6cd5\u5f97\u5230\u4e86 i \u7684\u5f15\u7528\uff0c\u518d\u6784\u9020\u4e86\u53e6\u5916\u4e00\u4e2a\u5f15\u7528\u3002\u76f4\u63a5\u7ed5\u8fc7\u4e86\u53d8\u91cf\uff0c\u5bf9\u5176\u6307\u5411\u7684\u5185\u5b58\u7a7a\u95f4\u8fdb\u884c\u4e86\u64cd\u4f5c\u3002 \u53ea\u80fd\u6210\u5458\u51fd\u6570\u578b\u91cd\u8f7d\u7684\u8fd0\u7b97\u7b26 \u00b6 = \u3001 [] \u3001 () \u3001 -> \u53ea\u80fd\u901a\u8fc7\u6210\u5458\u51fd\u6570\u6765\u91cd\u8f7d\u3002 \u8fd9\u91cc\u5176\u5b9e\u53ef\u4ee5\u8054\u7cfb\u5230\u4e4b\u540e\u5b66\u4e60\u7684\u62f7\u8d1d\u8d4b\u503c\u8fd0\u7b97\u548c\u79fb\u52a8\u8d4b\u503c\u8fd0\u7b97\uff0c\u56e0\u4e3a\u672c\u8d28\u4e0a\u4e8c\u8005\u5c31\u662f\u5b9e\u73b0\u65b9\u5f0f\u503c\u5f97\u63a8\u7a76\u7684\u4e24\u79cd\u8fd0\u7b97\u7b26\u91cd\u8f7d\u3002 \u5f53\u6211\u4eec\u6ca1\u6709\u663e\u5f0f\u5730\u5728\u7c7b\u5185\u5b9a\u4e49\u8fd9\u4e24\u4e2a\u8fd0\u7b97\u7b26\uff08\u91cd\u8f7d\uff09\u65f6\uff0c\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u751f\u6210\u7f3a\u5931\u7684\u90e8\u5206\u3002\u7f16\u8bd1\u5668\u65e0\u6cd5\u83b7\u77e5\uff08\u6216\u8005\u81f3\u5c11\u6ca1\u6709\u5c1d\u8bd5\u53bb\u83b7\u77e5\uff09\u7c7b\u4ee5\u5916\u5df2\u7ecf\u91cd\u8f7d\u4e86 operator= \uff0c\u5b83\u5728\u7f16\u8bd1\u8fd9\u4e2a\u7c7b\u65f6\u53d1\u73b0\u8fd9\u4e2a\u7c7b\u6ca1\u6709\u91cd\u8f7d operator= \uff0c\u4e8e\u662f\u5c31\u7ed9\u5b83\u8865\u4e0a\u4e86\u4e00\u4e2a\u3002\u4f46\u5982\u679c\u4e4b\u540e\u53c8\u5728\u7c7b\u4ee5\u5916\u91cd\u8f7d\u4e86\u4e00\u4e2a operator= \uff0c\u8fd9\u5c31\u4f1a\u5bfc\u81f4\u8c03\u7528\u7684\u65f6\u5019\u4e0d\u77e5\u9053\u7528\u54ea\u4e2a\uff0c\u4ea7\u751f\u6b67\u4e49\u3002\u7efc\u4e0a\uff0cC++ \u7981\u6b62\u4e86\u5728\u7c7b\u4ee5\u5916\u91cd\u8f7d operator= \u3002 \u6362\u8a00\u4e4b\uff0c\u7f16\u8bd1\u5668\u7f16\u8bd1\u7c7b\u65f6\u80fd\u770b\u5230\u7c7b\u5185\u91cd\u8f7d\u7684\u8d4b\u503c\u8fd0\u7b97\u7b26\uff0c\u5c31\u4e0d\u4f1a\u81ea\u52a8\u751f\u6210 = \u7684\u91cd\u8f7d\u3002\u4f46\u5168\u5c40\u7684\u7f16\u8bd1\u5668\u65e0\u6cd5\u5728\u7f16\u8bd1\u65f6\u68c0\u6d4b\u5230\uff0c\u53ea\u6709\u5728\u94fe\u63a5\u7684\u65f6\u5019\u624d\u80fd\u68c0\u6d4b\u5230\u3002\u800c\u6b64\u65f6\u4f1a\u94fe\u63a5\u6b67\u4e49\u51fd\u6570\u3002 \u4ec5\u4ec5\u662f\u53ea\u662f\u94fe\u63a5\u4e24\u4e2a\u6b67\u4e49\u51fd\u6570\u5e76\u4e0d\u4f1a\u51fa\u9519\uff0c\u5728\u53d1\u751f\u6709\u6b67\u4e49\u7684\u8c03\u7528\u7684\u65f6\u5019\u624d\u4f1a\u6709\u95ee\u9898\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u5728\u7c7b\u5916\u91cd\u8f7d operator= \uff0c\u800c\u4e0d\u8c03\u7528 = \uff0c\u662f\u4e0d\u4f1a warning \u6216\u8005 error \u7684\u3002\u6bd4\u5982\u6211\u4eec\u751a\u81f3\u53ef\u4ee5\u540c\u65f6\u5b9a\u4e49 int foo(int x, int y = 1) \u548c int foo(int x) \u8fd9\u4e24\u4e2a\u51fd\u6570\uff0c\u53ea\u6709\u4f7f\u7528\u4e86 foo(x) \u624d\u4f1a\u5bfc\u81f4 CE\u3002 1 2 3 4 5 6 7 8 9 #include <iostream> using namespace std ; void func ( int x ) { }; void func ( int x , int y = 0 ) { } int main () { cout << \"1\" << endl ; return 0 ; } // OK! \u6d41\u8fd0\u7b97\u7b26\u91cd\u8f7d \u00b6 \u7528\u6237\u81ea\u5b9a\u4e49\u7684\u7c7b\uff0c\u867d\u7136\u53ef\u4ee5\u50cf\u5185\u7f6e\u7c7b\u578b\u90a3\u6837\u5b9a\u4e49\u53d8\u91cf\uff08\u5bf9\u8c61\uff09\uff0c\u4f46\u60f3\u8981\u4f7f\u7528\u6d41\u8fd0\u7b97\u7b26\u8f93\u5165\u3001\u8f93\u51fa\u5bf9\u8c61\uff0c\u5219\u8fd8\u9700\u8981\u4e3a\u7c7b\u5b9a\u4e49\u6d41\u8fd0\u7b97\u7b26\u91cd\u8f7d\u3002 \u8bed\u6cd5 1 2 istream & operator >> ( istream & in , Test & dst ); ostream & operator << ( ostream & out , const Test & src ); \u51fd\u6570\u540d\u4e3a operator>> \u548c operator<< \u3002 \u4e0d\u4fee\u6539 istream \u548c ostream \u7c7b\u7684\u60c5\u51b5\u4e0b\uff0c\u53ea\u80fd\u4f7f\u7528\u5168\u5c40\u51fd\u6570\u91cd\u8f7d\u3002 \u8fd4\u56de\u503c\u4e3a istream& \u548c ostream& \u3002\u5747\u4e3a\u5f15\u7528\u3002 \u53c2\u6570\u5206\u522b\u4e3a\u6d41\u5bf9\u8c61\u7684\u5f15\u7528\u3001\u76ee\u6807\u5bf9\u8c61\u7684\u5f15\u7528\u3002\u5bf9\u4e8e\u8f93\u51fa\u6d41\uff0c\u76ee\u6807\u5bf9\u8c61\u4e00\u822c\u662f\u5e38\u91cf\u5f15\u7528\u3002 \u5907\u6ce8\uff0c\u56e0\u4e3a\u6d41\u8fd0\u7b97\u7b26\u5f80\u5f80\u9700\u8981\u8f93\u51fa private \u6570\u636e\uff0c\u6545\u800c\u5f80\u5f80\u8bbe\u4e3a\u53cb\u5143\u51fd\u6570\u5e76\u5728\u7c7b\u5185\u58f0\u660e\uff0c\u5e76\u5c3d\u91cf\u5728\u7c7b\u5916\u65f6\u5b9e\u73b0\u3002\u540c\u65f6\uff0c\u5728\u7c7b\u5916\u5b9e\u73b0\u65f6\uff0c\u5df2\u7ecf\u4e0d\u7528\u518d\u5199 friend \u4e86\uff0c friend \u53ea\u662f\u4e00\u4e2a\u5168\u5c40\u51fd\u6570\u5728\u7c7b\u5185\u7684\u6807\u8bb0\u3002 \u4e3a\u4ec0\u4e48\u6d41\u8fd0\u7b97\u7b26\u4e0d\u80fd\u662f\u6210\u5458\u51fd\u6570\u91cd\u8f7d\uff1f \u5b9e\u9645\u4e0a\uff0c\u8fd9\u53e5\u8bdd\u6307\u7684\u662f\uff0c\u6d41\u8fd0\u7b97\u7b26\u4e0d\u80fd\u662f\u67d0\u4e2a\u5bf9\u8c61\u7684\u6210\u5458\u51fd\u6570\u91cd\u8f7d\uff0c\u56e0\u4e3a\u6211\u4eec\u5728\u8c03\u7528\u6d41\u8fd0\u7b97\u7b26\u65f6\uff0c\u8c03\u7528\u987a\u5e8f\u662f cout << a \u800c\u4e0d\u662f a << cout \u3002\u4ece\u800c\u53ef\u4ee5\u770b\u51fa\uff0c\u8c03\u7528\u7684\u662f ostream \u7c7b\u7684\u4e00\u4e2a\u6210\u5458\u51fd\u6570\uff0c\u800c\u4e0d\u662f a \u7684\u7c7b\u7684\u6210\u5458\u51fd\u6570\u3002 \u5b9e\u4f8b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 #include <iostream> using namespace std ; class Test { int id ; public : Test ( int i ) : id ( i ) { cout << \"obj_\" << id << \" created \\n \" ; } friend istream & operator >> ( istream & in , Test & dst ); friend ostream & operator << ( ostream & out , const Test & src ); }; istream & operator >> ( istream & in , Test & dst ) { in >> dst . id ; return in ; } ostream & operator << ( ostream & out , const Test & src ) { out << src . id << endl ; return out ; } int main () { Test obj ( 1 ); cout << obj ; cin >> obj ; cout << obj ; return 0 ; } \u6ce8\u610f\u5230\uff0c\u51fd\u6570\u4f53\u5185\u7528\u7684\u90fd\u662f in \u548c out \uff0c\u800c\u4e0d\u662f cin \u548c cout \uff0c\u56e0\u4e3a\u4f60\u5728\u91cd\u8f7d out \uff0c\u4f60\u5e0c\u671b\u4f60\u7684 out \u5bf9\u4e8e\u6240\u6709\u7684\u8f93\u51fa\u6d41\u90fd\u9002\u7528\uff0c\u90a3\u4e48\u4e0d\u80fd\u5199 cout \u3002\u56e0\u4e3a\u8fd8\u6709 fout \u7b49\u7b49\u3002\u5982\u679c\u5199\u4e86 cout \uff0c\u6ca1\u6709\u95ee\u9898\uff0c\u4f46\u662f\u6ca1\u6cd5\u7ed9 fout \u8fd9\u4e9b\u7528\uff0c\u56e0\u6b64\u5199 out \u4e60\u60ef\u66f4\u597d\u3002","title":"C++ \u7c7b\u8bed\u6cd5\u521d\u6b65"},{"location":"languages/c-oop/class-easy/#c","text":"\u9762\u5411\u5bf9\u8c61\u7684\u6982\u5ff5 \u5728\u4ecb\u7ecd\u7c7b\u4e4b\u524d\uff0c\u6211\u4eec\u7ec8\u4e8e\u8981\u5f15\u51fa\u9762\u5411\u5bf9\u8c61\u8fd9\u4e2a\u6982\u5ff5\u4e86\u3002 \u9762\u5411\u5bf9\u8c61\uff08\u82f1\u8bed\uff1aObject oriented\uff09\u662f\u4e00\u79cd\u7f16\u7a0b\u8303\u5f0f\uff0c\u5176\u76ee\u7684\u662f\u5c06\u6570\u636e\u548c\u76f8\u5173\u65b9\u6cd5\u5c01\u88c5\u4e3a\u4e00\u4e2a\u6574\u4f53\u3002\u5728\u4f7f\u7528\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u65b9\u6cd5\u7684\u65f6\u5019\uff0c\u6211\u4eec\u901a\u5e38\u5c06\u5177\u6709\u7c7b\u4f3c\u62bd\u8c61\u7279\u70b9\u7684\u4e8b\u7269\u5f52\u4e3a\u4e00\u4e2a\u7c7b\uff0c\u800c\u5177\u6709\u8fd9\u4e9b\u62bd\u8c61\u7279\u70b9\u7684\u4e8b\u7269\u5c31\u662f\u8fd9\u4e2a\u7c7b\u7684\u5b9e\u4f8b\u5bf9\u8c61\u3002 \u6bd4\u5982\u8bf4\uff0c\u6240\u6709\u7684\u5b66\u751f\u90fd\u5e94\u8be5\u5177\u6709\u540d\u5b57\uff0c\u6709\u4e00\u4e2a\u6574\u6570\u7684\u5e74\u9f84\uff0c\u8fd9\u5c31\u662f\u5b66\u751f\u8fd9\u7c7b\u4e8b\u7269\u7684\u62bd\u8c61\u6982\u5ff5\u3002\u5728 C++ \u8bed\u8a00\u4e2d\u6211\u4eec\u5c31\u53ef\u4ee5\u63cf\u8ff0\u4e3a\uff1a 1 2 3 4 class Student { int age ; std :: string name ; }; \u8fd9\u91cc Student \u662f\u7c7b\uff0c age \u548c name \u90fd\u662f\u7c7b\u7684 \u6210\u5458\u53d8\u91cf \u3002\u6210\u5458\u53d8\u91cf\u63cf\u8ff0\u4e86\u7c7b\u7684\u6570\u636e\u7279\u5f81\u3002 \u800c\u7c7b\u4e4b\u4e2d\u8fd8\u53ef\u4ee5\u5177\u6709\u51fd\u6570\uff0c\u5176\u63cf\u8ff0\u4e86\u6211\u4eec\u53ef\u4ee5\u4ee5\u4f55\u79cd\u65b9\u5f0f\u64cd\u4f5c\u7c7b\u7684\u6210\u5458\u53d8\u91cf\uff0c\u6240\u4ee5\u8fd9\u4e9b\u51fd\u6570\u4e5f\u79f0\u4e3a \u7c7b\u65b9\u6cd5 \u3002\u6bd4\u5982\u8bf4\u5b66\u751f\u90fd\u53ef\u4ee5\u53bb\u4e0a\u5b66\uff1a 1 2 3 4 5 6 class Student { int age ; std :: string name ; void goToSchool () { } }; \u5728\u63cf\u8ff0\u51fa\u5b66\u751f\u8fd9\u4e2a\u6982\u5ff5\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u5b66\u751f\uff0c\u8fd9\u4e2a\u5b66\u751f\u4e00\u5b9a\u6709\u6211\u4eec\u5728\u7c7b\u4e4b\u4e2d\u89c4\u5b9a\u7684\u8fd9\u4e9b\u62bd\u8c61\u7279\u5f81\uff1a 1 Student * s = new Student (); \u8fd9\u5c31\u79f0\u4e3a\u7c7b\u7684 \u5b9e\u4f8b\u5316 \uff0c\u5373\u6211\u4eec\u521b\u5efa\u51fa\u4e86\u4e00\u4e2a\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u7b26\u5408\u8fd9\u4e9b\u62bd\u8c61\u7279\u5f81\u3002 \u5f53\u7136\uff0c\u4e0a\u9762\u8bf4\u7684\u90fd\u662f\u6700\u7b80\u5355\u7684\u9762\u5411\u5bf9\u8c61\u6982\u5ff5\u3002\u540e\u9762\u5c06\u4f1a\u6d89\u53ca\u5230\u8bbf\u95ee\u6743\u9650\u3001\u7ee7\u627f\u3001\u865a\u65b9\u6cd5\u7b49\u5404\u79cd\u66f4\u8fdb\u9636\u7684\u6982\u5ff5\uff0c\u4e0d\u8fc7\u4fdd\u6301\u7740\u8fd9\u6837\u7684\u6700\u57fa\u672c\u7684 OOP \u601d\u60f3\u662f\u91cd\u8981\u7684\u3002 \u57fa\u7840\u8bb2\u4e9b\u4ec0\u4e48\uff1f \u8fd9\u4e00\u90e8\u5206\u4e3b\u8981\u8bb2\u89e3\u5bf9\u8c61\u7684\u6784\u9020\u548c\u6790\u6784\u3001\u5f15\u7528\u4ee5\u53ca\u8fd0\u7b97\u7b26\u91cd\u8f7d\u3002","title":"C++ \u7c7b\u8bed\u6cd5\u521d\u6b65"},{"location":"languages/c-oop/class-easy/#_1","text":"\u6709\u65f6\u6211\u4eec\u5e76\u4e0d\u5e0c\u671b\u7c7b\u7684\u90e8\u5206\u9690\u79c1\u6210\u5458\u53d8\u91cf\u4e3a\u5916\u4eba\u6240\u77e5\uff0c\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u7528 private: \u58f0\u660e\u4e3a\u79c1\u6709\u3002\u540c\u6837\uff0c\u53ef\u4ee5\u516c\u5f00\u7684\u6210\u5458\u53d8\u91cf\u5219\u53ef\u4ee5\u7528 public: \u58f0\u660e\u4e3a\u516c\u6709\u3002C++ \u7684\u7c7b\u9ed8\u8ba4\u6743\u9650\u4e3a\u79c1\u6709\uff1a 1 2 3 4 5 6 7 8 9 10 11 class Student { public : int age ; std :: string name ; private : int ID ; public : void goToSchool () { } } \u7c7b\u65b9\u6cd5\u4e5f\u53ef\u4ee5\u58f0\u660e\u516c\u6709\u548c\u79c1\u6709\u3002 \u79c1\u6709\u7684\u7c7b\u6210\u5458\u548c\u7c7b\u65b9\u6cd5\u4ec5\u53ef\u4ee5\u5728\u7c7b\u81ea\u5df1\u7684\u65b9\u6cd5\u5185\u8bbf\u95ee\u6216\u8c03\u7528\uff0c\u5916\u90e8\u8c03\u7528\u4f1a\u62a5\u9519\u3002\u516c\u6709\u7684\u7c7b\u6210\u5458\u548c\u7c7b\u65b9\u6cd5\u5219\u53ef\u4ee5\u4efb\u610f\u8c03\u7528\u3001\u8bfb\u53d6\u3001\u4fee\u6539\u3002","title":"\u8bbf\u95ee\u6743\u9650"},{"location":"languages/c-oop/class-easy/#_2","text":"","title":"\u6784\u9020\u51fd\u6570\u4e0e\u6790\u6784\u51fd\u6570"},{"location":"languages/c-oop/class-easy/#_3","text":"\u610f\u4e49 \u6784\u9020\u51fd\u6570\u662f\u7f16\u8bd1\u5668\u5728\u5b9e\u4f8b\u5316\u4e00\u4e2a\u5bf9\u8c61\u7684\u65f6\u5019\u81ea\u52a8\u8c03\u7528\u7684\u51fd\u6570\uff0c\u4e5f\u5c31\u662f\u8bf4\u5bf9\u8c61\u7684\u201c\u751f\u201d\uff08\u521d\u59cb\u5316\u5de5\u4f5c\uff09\u662f\u7531\u7f16\u8bd1\u5668\u5728\u521b\u5efa\u5bf9\u8c61\u5904\u81ea\u52a8\u751f\u6210\u8c03\u7528\u6784\u9020\u51fd\u6570\u7684\u4ee3\u7801\u6765\u5b8c\u6210\u7684\u3002\u6784\u9020\u51fd\u6570\u662f\u7c7b\u7684\u7279\u6b8a\u6210\u5458\u51fd\u6570\uff0c\u5b83\u7528\u6765\u786e\u4fdd\u7c7b\u7684\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u80fd\u6b63\u786e\u5730\u521d\u59cb\u5316\u3002 \u8bed\u6cd5 \u6784\u9020\u51fd\u6570\u6ca1\u6709\u8fd4\u56de\u503c\u7c7b\u578b\uff0c\u51fd\u6570\u540d\u5fc5\u987b\u4e0e\u7c7b\u540d\u76f8\u540c\u3002\u7c7b\u7684\u6784\u9020\u51fd\u6570\u53ef\u4ee5\u91cd\u8f7d\uff0c\u5373\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u51fd\u6570\u53c2\u6570\u8fdb\u884c\u5bf9\u8c61\u521d\u59cb\u5316\u3002 1 2 3 4 5 6 7 8 9 class Student { int ID ; public : Student ( int id ) { ID = id ; } Student ( int year , int order ) { ID = year * 10000 + order ; } }; \u8fd9\u6837\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u5b66\u751f\u7c7b\u7684\u4e24\u4e2a\u6784\u9020\u51fd\u6570\u3002\u6784\u9020\u51fd\u6570\u7684\u8c03\u7528\u8bed\u6cd5\uff08\u5373\u5bf9\u8c61\u521b\u5efa\u7684\u8bed\u6cd5\uff09\u6709\u51e0\u79cd\u5e38\u7528\u7684\uff1a 1 2 3 Student s1 ( 20200001 ); Student s2 = Student ( 20200001 ); Student * sptr = new Student ( 20200001 ); \u6ce8\u610f new \u5f97\u5230\u7684\u662f\u6307\u9488\u3002 \u521d\u59cb\u5316\u5217\u8868 \u6784\u9020\u51fd\u6570\u53ef\u4ee5\u4f7f\u7528\u521d\u59cb\u5316\u5217\u8868\u521d\u59cb\u5316\u6210\u5458\u6570\u636e\uff0c\u4f7f\u7528 \u6570\u636e\u6210\u5458(\u521d\u59cb\u503c) \u7684\u5f62\u5f0f\u3002\u8be5\u5217\u8868\u5728\u5b9a\u4e49\u6784\u9020\u51fd\u6570\u65f6\u4f7f\u7528\uff0c\u4f4d\u7f6e\u5728\u51fd\u6570\u4f53\u4e4b\u524d\u3001\u51fd\u6570\u53c2\u6570\u5217\u8868\u4e4b\u540e\uff0c\u4ee5\u5192\u53f7\u4f5c\u5f00\u5934\u3002 \u8fd9\u79cd\u5199\u6cd5\u53ef\u4ee5\u5c06\u51fd\u6570\u4f53\u4e2d\u7684\u8d4b\u503c\u5199\u6cd5\u5199\u5230\u51fd\u6570\u4f53\u5916\uff0c\u4fbf\u4e8e\u68c0\u67e5\uff1a 1 2 3 4 5 6 class Student { int ID ; public : Student ( int id ) : ID ( id ) { } }; \u521d\u59cb\u5316\u5217\u8868\u548c\u6784\u9020\u51fd\u6570\u4f53\u7684\u57fa\u672c\u533a\u522b \u5b9e\u73b0\u8fc7\u7a0b\u533a\u522b \u6784\u9020\u51fd\u6570\u53ef\u4ee5\u5206\u4e24\u4e2a\u9636\u6bb5\u8fdb\u884c\uff0c\u5373\u521d\u59cb\u5316\u9636\u6bb5\u3001\u51fd\u6570\u4f53\u9636\u6bb5\u3002 \u51fd\u6570\u4f53\u9636\u6bb5\u7531\u51fd\u6570\u4f53\u5185\u6240\u6709\u7684\u8bed\u53e5\u7ec4\u6210\u3002\u4e0d\u7ba1\u6210\u5458\u662f\u5426\u5728\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u5217\u8868\u4e2d\u663e\u5f0f\u521d\u59cb\u5316\uff0c\u7c7b\u7684\u6570\u636e\u6210\u5458\u521d\u59cb\u5316\u603b\u662f\u5728\u521d\u59cb\u5316\u9636\u6bb5\u8fdb\u884c\uff0c\u521d\u59cb\u5316\u9636\u6bb5\u5148\u4e8e\u8ba1\u7b97\u9636\u6bb5\u3002\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u5217\u8868\u662f\u5bf9\u7c7b\u7684\u6210\u5458\u505a\u521d\u59cb\u5316\uff0c\u800c\u5728\u6784\u9020\u51fd\u6570\u4f53\u5185\u53ea\u662f\u5bf9\u7c7b\u7684\u6570\u636e\u6210\u5458\u8fdb\u884c\u4e86\u4e00\u6b21\u8d4b\u503c\u64cd\u4f5c\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c\u6784\u9020\u51fd\u6570\u51fd\u6570\u4f53\u5185\u5bf9\u4e8e\u6210\u5458\u6570\u636e\u7684\u8d4b\u503c\u610f\u5473\u7740\u521d\u59cb\u5316\u5df2\u7ecf\u5b8c\u6210\uff0c\u4ec5\u4ec5\u662f\u8fdb\u884c\u4e86\u8d4b\u503c\u3002\u8fd9\u4e00\u70b9\u53ef\u4ee5\u8054\u7cfb\u4e0b\u4e00\u7ae0\u8282\u5f53\u4e2d\u5bf9\u4e8e\u58f0\u660e\u3001\u5b9a\u4e49\u3001\u521d\u59cb\u5316\u3001\u8d4b\u503c\u7684\u8ba8\u8bba\u4e00\u540c\u7406\u89e3\u3002\u8fd9\u4e5f\u53ef\u4ee5\u7528\u4e8e\u7406\u89e3\uff0c\u4e3a\u4ec0\u4e48\u5e38\u91cf\u6210\u5458\u6570\u636e\u4ec5\u4ec5\u53ef\u4ee5\u5728\u521d\u59cb\u5316\u5217\u8868\u4e2d\u521d\u59cb\u5316\uff0c\u4f46\u662f\u4e0d\u53ef\u4ee5\u5728\u51fd\u6570\u4f53\u5185\u8d4b\u503c\u3002\uff08\u56e0\u4e3a\u5e38\u91cf\u6210\u5458\u4ec5\u80fd\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u5374\u4e0d\u80fd\u5728\u521d\u59cb\u5316\u4e4b\u540e\u518d\u8d4b\u503c\uff0c\u56e0\u4e3a\u5e38\u91cf\u6210\u5458\u4e0d\u80fd\u66f4\u6539\u3002\u800c\u4e00\u4e2a\u5e38\u91cf\u6210\u5458\uff0c\u5373\u4f7f\u5728\u521d\u59cb\u5316\u5217\u8868\u4e2d\u6ca1\u6709\u88ab\u663e\u5f0f\u521d\u59cb\u5316\uff0c\u4e5f\u5df2\u7ecf\u88ab\u521d\u59cb\u5316\u8fc7\u4e86\uff0c\u4e00\u4e2a\u521d\u59cb\u5316\u8fc7\u7684\u5e38\u91cf\u81ea\u7136\u4e0d\u80fd\u5728\u51fd\u6570\u4f53\u91cc\u88ab\u4fee\u6539\uff09\u3002\u66f4\u52a0\u8be6\u7ec6\u7684\u8ba8\u8bba\u5728\u4e0b\u4e00\u7ae0\u8282\u3002 \u6548\u7387\u533a\u522b \u5982\u524d\u6587\u6240\u8ff0\uff0c\u521d\u59cb\u5316\u5217\u8868\u663e\u7136\u907f\u514d\u4e86\u51fd\u6570\u4f53\u5185\u4e0d\u5fc5\u8981\u7684\u4e00\u4e9b\u8d4b\u503c\u8fc7\u7a0b\uff0c\u8fd9\u5728\u7c7b\u7684\u6210\u5458\u6570\u636e\u8f83\u4e3a\u590d\u6742\u65f6\u80fd\u591f\u663e\u8457\u5730\u63d0\u9ad8\u6548\u7387\u3002 \u521d\u59cb\u5316\u5217\u8868\u7684\u521d\u59cb\u987a\u5e8f \u521d\u59cb\u5316\u5217\u8868\u7684\u6210\u5458\u662f\u6309\u7167\u58f0\u660e\u7684\u987a\u5e8f\u521d\u59cb\u5316\u7684\uff0c\u800c\u4e0d\u662f\u6309\u7167\u51fa\u73b0\u5728\u521d\u59cb\u5316\u5217\u8868\u4e2d\u7684\u987a\u5e8f\u3002\u6bd4\u5982\u4e0b\u5217\u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 #include <iostream> using namespace std ; class Student { int ID1 ; int ID2 ; public : Student ( int id ) : ID2 ( id ), ID1 ( ID2 ) { } void print () { cout << \"ID1 exist \" << this -> ID1 << ' ' ; cout << this -> ID2 << endl ; } }; int main () { Student test ( 100 ); test . print (); // \"ID1 exist 32767 100\" return 0 ; } \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c ID1 \u5728 ID2 \u4e4b\u524d\u58f0\u660e\uff0c\u4f46\u5176\u521d\u59cb\u5316\u4f9d\u8d56\u4e8e ID2 \u3002\u521d\u59cb\u5316\u5217\u8868\u4f1a\u6309\u7167\u58f0\u660e\u987a\u5e8f\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u5148\u7528\u672a\u77e5\u7684 ID2 \u7684\u503c\u5bf9 ID1 \u8fdb\u884c\u521d\u59cb\u5316\uff0c\u518d\u7528\u53ef\u77e5\u7684 id \u6765\u521d\u59cb\u5316 ID2 \u3002\u4ece\u800c\u4f7f\u5f97 ID1 \u7684\u503c\u4e0d\u53ef\u9884\u6d4b\u3002 \u8fd9\u91cc\u7684\u4e0d\u53ef\u9884\u6d4b\u5728\u4e0d\u540c\u7684\u7f16\u8bd1\u5668\u4e0a\u8868\u73b0\u4e0d\u540c\u3002\u53ef\u80fd\u4f1a\u6709\u5982\u4e0a\u8f93\u51fa\uff0c\u4e5f\u53ef\u80fd\u662f warning\uff08\u4e0d\u662f error\uff09\u3002\u4e00\u822c\u6765\u8bf4\u6211\u4eec\u4f1a\u53c2\u8003 g++ \u7f16\u8bd1\u5668\u7684\u8f93\u51fa\uff0cVisual Studio \u7684\u7f16\u8bd1\u5668\u6709\u65f6\u4f1a\u66f4\u4e25\u683c\u3002","title":"\u6784\u9020\u51fd\u6570"},{"location":"languages/c-oop/class-easy/#_4","text":"\u5b9a\u4e49 \u5728\u6784\u9020\u51fd\u6570\u7684\u521d\u59cb\u5316\u5217\u8868\u4e2d\uff0c\u8fd8\u53ef\u4ee5\u8c03\u7528\u5176\u4ed6\u6784\u9020\u51fd\u6570\uff0c\u79f0\u4e3a\u201c\u59d4\u6d3e\u6784\u9020\u51fd\u6570\u201d\u3002 \u610f\u4e49 \u59d4\u6d3e\u6784\u9020\u51fd\u6570\u4e5f\u662f C++11 \u4e2d\u5bf9 C++ \u7684\u6784\u9020\u51fd\u6570\u7684\u4e00\u9879\u6539\u8fdb\uff0c\u5176\u76ee\u7684\u5c31\u662f\u51cf\u5c11\u7a0b\u5e8f\u5458\u5199\u6784\u9020\u51fd\u6570\u7684\u65f6\u95f4\u3002\u901a\u8fc7\u59d4\u6d3e\u5176\u4ed6\u6784\u9020\u51fd\u6570\uff0c\u591a\u6784\u9020\u51fd\u6570\u7684\u7c7b\u7f16\u5199\u8d77\u6765\u5c31\u5f88\u7b80\u5355\u5bb9\u6613\u3002 \u5b9e\u4f8b \u5bf9\u6bd4\u5982\u4e0b\u4e24\u4e2a\u4f8b\u5b50\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 class Info { public : Info () : type ( 1 ), name ( 'a' ) { InitRest (); } Info ( int i ) : type ( i ), name ( 'a' ) { InitRest (); } Info ( char e ) : type ( 1 ), name ( e ) { InitRest (); } private : void InitRest () { } int type ; char name ; }; \u4e0a\u8ff0\u5199\u6cd5\u53ef\u4ee5\u5199\u4e3a\uff1a 1 2 3 4 5 6 7 8 9 10 11 class Info { public : Info () { InitRest (); } // \u79f0\u4e3a\u76ee\u6807\u6784\u9020\u51fd\u6570\uff08\u88ab\u8c03\u7528\uff09 Info ( int i ) : Info () { type = i ; } // \u59d4\u6d3e\u6784\u9020\u51fd\u6570\uff08\u8c03\u7528\u8005\uff09 Info ( char e ) : Info () { name = e ; } private : void InitRest () { } int type { 1 }; char name { 'a' }; }; \u59d4\u6d3e\u6784\u9020\u51fd\u6570\u4e0d\u80fd\u6709\u521d\u59cb\u5316\u5217\u8868\uff0c\u56e0\u4e3a C++ \u4e2d\uff0c\u6784\u9020\u51fd\u6570\u4e0d\u80fd\u540c\u65f6\u4f7f\u7528\u59d4\u6d3e\u548c\u521d\u59cb\u5316\u5217\u8868\u3002\u53ea\u80fd\u5728\u51fd\u6570\u4f53\u5185\u4e3a type \u3001 name \u7b49\u6210\u5458\u8d4b\u503c\u3002 \u5728\u6784\u9020\u51fd\u6570\u6bd4\u8f83\u591a\u65f6\uff0c\u53ef\u4ee5\u6709\u4e0d\u6b62\u4e00\u4e2a\u59d4\u6d3e\u6784\u9020\u51fd\u6570\u3002\u76ee\u6807\u6784\u9020\u51fd\u6570\u4e5f\u53ef\u4ee5\u662f\u59d4\u6d3e\u6784\u9020\u51fd\u6570\uff0c\u53ef\u4ee5\u5728\u59d4\u6d3e\u6784\u9020\u51fd\u6570\u4e2d\u5f62\u6210\u94fe\u72b6\u7684\u59d4\u6d3e\u6784\u9020\u5173\u7cfb\u3002 1 2 3 4 5 6 7 8 9 10 11 class Info { public : Info () : Info ( 1 ) { } Info ( int i ) : Info ( i , 'a' ) { } Info ( char e ) : Info ( 1 , e ) { } private : Info ( int i , char e ) : type ( i ), name ( e ) { } int type ; char name ; }; \u53ea\u8981\u6ce8\u610f\u59d4\u6d3e\u5173\u7cfb\u4e0d\u80fd\u6210\u73af\u5373\u53ef\u3002 \u8fd9\u4e2a\u4f8b\u5b50\u5176\u5b9e\u86ee\u6709\u610f\u601d\u7684\u662f\uff0c\u6211\u4eec\u4e4b\u524d\u5f88\u5c11\u6709\u89c1\u5230\u6784\u9020\u51fd\u6570\u653e\u5728 private \u91cc\u9762\u7684\u4f8b\u5b50\u3002\u8fd9\u4e2a\u4f8b\u5b50\u5374\u5b9e\u73b0\u4e86\u8fd9\u4e00\u70b9\u3002","title":"\u59d4\u6d3e\u6784\u9020\u51fd\u6570"},{"location":"languages/c-oop/class-easy/#_5","text":"\u9996\u5148\u9700\u8981\u6307\u51fa\u7684\u662f\uff0c\u5728\u8bfe\u7a0bPPT\u4e2d\u5bf9\u4e8e\u58f0\u660e\u3001\u521d\u59cb\u5316\u3001\u5b9a\u4e49\u8fd9\u4e09\u4e2a\u6982\u5ff5\u6709\u4e9b\u6df7\u7528\u3002\u4e09\u8005\u7684\u5e7f\u4e49\u6982\u5ff5\u754c\u5b9a\u5728\u4e0b\u4e00\u7ae0\u8282\u4e2d\u8fdb\u884c\u4e86\u9610\u8ff0\u3002 C++11 \u4e4b\u524d\uff0c\u7c7b\u4e2d\u7684\u4e00\u822c\u6210\u5458\u53d8\u91cf\u4e0d\u80fd\u5728\u7c7b\u58f0\u660e\u65f6\u8fdb\u884c\u521d\u59cb\u5316\uff08\u5b9a\u4e49\uff09\uff0c\u5b83\u4eec\u7684\u521d\u59cb\u5316\u64cd\u4f5c\uff08\u5b9a\u4e49\uff09\u53ea\u80fd\u901a\u8fc7\u6784\u9020\u51fd\u6570\u8fdb\u884c\u3002C++11 \u65b0\u589e\u652f\u6301\u5982\u4e0b\u521d\u59cb\u5316\u64cd\u4f5c\uff0c\u79f0\u4e3a\u5c31\u5730\u521d\u59cb\u5316\uff08\u7c7b\u4f3c\u4e8e\u7ed9\u7c7b\u5185\u5bf9\u8c61\u63d0\u4f9b\u4e86\u7f3a\u7701\u503c\uff09\u3002\u4f60\u53ef\u4ee5\u8ba4\u4e3a\u5c31\u5730\u521d\u59cb\u5316\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u673a\u5236\uff0c\u4ed6\u53ef\u4ee5\u4f7f\u5f97\u5b9a\u4e49\u548c\u521d\u59cb\u5316\u5728\u7c7b\u5185\u5f97\u4ee5\u8fdb\u884c\u3002 1 2 3 4 5 6 7 8 9 10 class A { private : int a = 1 ; // \u58f0\u660e + \u521d\u59cb\u5316\uff08\u5b9a\u4e49\uff09 double b { 2.0 }; // \u58f0\u660e + \u521d\u59cb\u5316\uff08\u5b9a\u4e49\uff09 public : A () { } // a = 1, b = 2.0 A ( int i ) : a ( i ) { } // a = i, b = 2.0 A ( int i , double j ) : a ( i ), b ( j ) { } // a = i, b = j }; \u6ce8\u610f\uff0c\u5c31\u5730\u521d\u59cb\u5316\u53ea\u662f\u4e00\u79cd\u7b80\u4fbf\u7684\u8868\u8fbe\u65b9\u5f0f\uff0c\u5b9e\u9645\u64cd\u4f5c\u4ecd\u7136\u5728\u5bf9\u8c61\u6784\u9020\u7684\u65f6\u5019\u6267\u884c\u3002","title":"\u5c31\u5730\u521d\u59cb\u5316"},{"location":"languages/c-oop/class-easy/#_6","text":"\u5b9a\u4e49 \u4e0d\u5e26\u4efb\u4f55\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\uff0c\u6216\u6bcf\u4e2a\u5f62\u53c2\u63d0\u4f9b\u9ed8\u8ba4\u5b9e\u53c2\u7684\u6784\u9020\u51fd\u6570\uff0c\u88ab\u79f0\u4e3a \u9ed8\u8ba4\u6784\u9020\u51fd\u6570 \uff0c\u4e5f\u79f0 \u7f3a\u7701\u6784\u9020\u51fd\u6570 \u3002 \u8bed\u6cd5 \u4f7f\u7528\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff08\u6ca1\u6709\u53c2\u6570\uff09\u6765\u751f\u6210\u5bf9\u8c61\u65f6\uff0c\u5bf9\u8c61\u5b9a\u4e49\u7684\u683c\u5f0f\u5982\u4e0b\uff1a 1 2 ClassName a ; ClassName b = ClassName (); \u6ce8\u610f\u548c\u4e0b\u65b9\u4ee3\u7801\u533a\u522b\u5f00\u6765\uff1a 1 ClassName c (); \u8fd9\u58f0\u660e\u4e86\u4e00\u4e2a\u8fd4\u56de\u503c\u7c7b\u578b\u4e3a ClassName \u4e14\u4e0d\u5e26\u53c2\u6570\u7684\u51fd\u6570 \u7f16\u8bd1\u5668\u7684\u989d\u5916\u64cd\u4f5c \u57fa\u4e8e\u4e4b\u540e\u6d89\u53ca\u5230\u7684\u7ec4\u5408\u7684\u6982\u5ff5\uff0c\u5728\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e2d\uff0c\u9664\u4e86\u6267\u884c\u51fd\u6570\u4f53\u5185\u58f0\u660e\u7684\u8bed\u53e5\uff0c\u7f16\u8bd1\u5668\u8fd8\u4f1a\u505a\u4e00\u4e9b\u989d\u5916\u64cd\u4f5c\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 #include <iostream> using namespace std ; class A { public : A () { cout << \"A()\" << endl ; } }; class B { public : A a ; B () { cout << \"B()\" << endl ; } }; B b ; int main () { return 0 ; } \u8fd9\u91cc\u4f1a\u5148\u8f93\u51fa A \u7684\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u5bf9\u5e94\u7684\u8f93\u51fa\uff0c\u518d\u8f93\u51fa B \u7684\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u5bf9\u5e94\u7684\u8f93\u51fa\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u7c7b A \u91cc\u9762\u6709\u53e6\u4e00\u4e2a\u7c7b B \u4f5c\u4e3a\u8fd9\u4e2a\u7c7b\u7684\u6210\u5458\uff0c\u8c03\u7528\u7c7b A \u7684\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u65f6\u4f1a\u5148\u8c03\u7528 B \u7684\u6784\u9020\u51fd\u6570\u3002\u5148\u6784\u9020\u6210\u5458\uff0c\u518d\u6784\u9020\u7c7b\u3002 \u9690\u5f0f\u5b9a\u4e49\u7684\u9ed8\u8ba4\u6784\u9020\u51fd\u6570 \u6709\u65f6\u5019\u6211\u4eec\u6ca1\u6709\u624b\u52a8\u5b9a\u4e49\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u4f46\u6211\u4eec\u4ecd\u7136\u80fd\u591f\u6309\u4e0a\u8ff0\u65b9\u5f0f\u5b9a\u4e49\u53d8\u91cf\u3002\u8fd9\u662f\u56e0\u4e3a\u7f16\u8bd1\u5668\u5e2e\u6211\u4eec\u9690\u5f0f\u5730\u5408\u6210\u4e86\u4e00\u4e2a\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u3002 \u6ce8\u610f\u8fd9\u4e2a\u4f8b\u5b50\uff0c b \u7a76\u7adf\u662f\u8c03\u7528\u4e86\u54ea\u4e00\u4e2a\u6784\u9020\u51fd\u6570\uff1f \u6211\u4eec\u5c06\u4ee3\u7801\u4fee\u6539\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 #include <iostream> using namespace std ; class A { public : A () { cout << \"A()\" << endl ; } A ( int x ) { cout << \"A(int)\" << endl ; } }; class B { A a ; public : B ( int x = 1 ) : a ( x ) { } B () : a ( 1 ) { } }; int main () { B b ; return 0 ; } \u53d1\u73b0\u4f1a\u56e0\u4e3a\u51fd\u6570\u8c03\u7528\u4e0d\u660e\u786e\u800c error\uff0c\u6545\u800c\u53ef\u4ee5\u786e\u5b9a\u4e0a\u8ff0\u9009\u62e9\u9898\u662f\u8c03\u7528\u4e86\u7f3a\u7701\u7684\u6784\u9020\u51fd\u6570\u800c\u975e\u9690\u5f0f\u751f\u6210\u7684\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u3002\u8fd9\u4e00\u70b9\u5728\u51fd\u6570\u91cd\u8f7d\u6709\u8ba8\u8bba\u3002 \u67d0\u79cd\u610f\u4e49\u4e0a\uff0c\u7f3a\u7701\u7684\u6784\u9020\u51fd\u6570\u672c\u8d28\u4e0a\u5df2\u7ecf\u5b9e\u73b0\u4e86\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u7684\u529f\u80fd\u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u82e5\u7528\u6237\u5df2\u7ecf\u5b9a\u4e49\u4e86\u5176\u4ed6\u6784\u9020\u51fd\u6570\uff0c\u7f16\u8bd1\u5668\u5c06\u4e0d\u4f1a\u9690\u5f0f\u5408\u6210\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u3002 1 2 3 4 5 6 7 8 9 class A { private : int a = 1 ; double b { 2.0 }; public : A ( int i ) : a ( i ) { } }; A a ; \u8fd9\u4e2a\u4ee3\u7801\u4f1a\u62a5\u9519\u3002 \u663e\u5f0f\u58f0\u660e\u9ed8\u8ba4\u6784\u9020\u51fd\u6570 \u51fa\u4e8e\u67d0\u4e9b\u9700\u8981\uff0c\u6211\u4eec\u53ef\u4ee5\u624b\u52a8\u6307\u5b9a\u751f\u6210\u9ed8\u8ba4\u7248\u672c\u7684\u6784\u9020\u51fd\u6570\u3002\u5373\u4fbf\u5176\u4ed6\u6784\u9020\u51fd\u6570\u5b58\u5728\uff0c\u7f16\u8bd1\u5668\u4e5f\u4f1a\u5b9a\u4e49\u9690\u5f0f\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u3002 1 2 3 4 5 6 7 8 9 class A { private : int a = 1 ; double b { 2.0 }; public : A () = default ; A ( int i ) : a ( i ) { } }; A a ; \u663e\u5f0f\u5220\u9664\u5371\u9669\u6784\u9020\u51fd\u6570 \u6709\u65f6\u5019\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u663e\u5f0f\u5730\u58f0\u660e\u7981\u7528\u67d0\u4e9b\u5e26\u6709\u98ce\u9669\u7684\u6784\u9020\u51fd\u6570\u3002\u8fd9\u79cd\u7981\u7528\u4e0d\u4ec5\u53ef\u4ee5\u7981\u7528\u7f16\u8bd1\u5668\u5408\u6210\u7684\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u4e5f\u53ef\u4ee5\u7528\u6765\u7981\u6b62\u4e00\u4e9b\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362\u5e26\u6765\u7684\u6784\u9020\u51fd\u6570\u8c03\u7528\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 #include <iostream> using namespace std ; class A { private : int a = 1 ; double b { 2.0 }; char c = 'c' ; public : A () = default ; A ( int i ) : a ( i ) { cout << i << endl ; } }; int main () { A a ( 'c' ); // 99 return 0 ; } \u8fd9\u4e00\u4ee3\u7801\u5b58\u5728\u98ce\u9669\uff0c\u672c\u610f\u4e00\u5b9a\u662f\u5e0c\u671b\u4ed6\u62a5\u9519\uff0c\u4f46\u662f\u5b9e\u5219\u4e0d\u4f1a\u3002\u4ece\u6b63\u786e\u6027\u4e0a\u8bb2\uff0c\u8fd9\u6837\u7684\u4ee3\u7801\u6ca1\u6709\u95ee\u9898\uff0c char \u548c int \u53ef\u4ee5\u7c7b\u578b\u8f6c\u6362\uff0c\u6545\u800c\u5c06 'c' \u8f6c\u4e3a int \uff0c\u8c03\u7528\u4e86\u53c2\u6570\u4e3a int \u7684\u6784\u9020\u51fd\u6570\u3002\u4f46\u662f\u4ece\u5de5\u7a0b\u7684\u89d2\u5ea6\u8bb2\uff0c\u8fd9\u662f\u5f88\u5371\u9669\u7684\u884c\u4e3a\u3002\u56e0\u4e3a\u5728\u5f00\u53d1\u8005\u770b\u6765\uff0c\u7528\u5b57\u7b26\u521d\u59cb\u5316\u5e94\u8be5\u662f\u672a\u5b9a\u4e49\u7684\u884c\u4e3a\u3002 \u6545\u800c\u663e\u5f0f\u5730\u7981\u7528\u67d0\u4e00\u6784\u9020\u51fd\u6570\u3002 1 2 3 4 5 6 7 8 9 10 class A { private : int a = 1 ; double b { 2.0 }; char c = 'c' ; public : A () = default ; A ( int i ) : a ( i ) { } A ( char ch ) = delete ; };","title":"\u9ed8\u8ba4\u6784\u9020\u51fd\u6570"},{"location":"languages/c-oop/class-easy/#_7","text":"\u65e0\u53c2\u5b9a\u4e49\u5bf9\u8c61\u6570\u7ec4\uff0c\u5fc5\u987b\u8981\u6709\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff1a 1 A a [ 50 ]; \u5982\u679c\u6784\u9020\u51fd\u6570\u5e26\u6709\u53c2\u6570\uff0c\u5219\u53ef\u4ee5\uff1a 1 A a [ 3 ] = { 1 , 3 , 5 }; \u82b1\u62ec\u53f7\u4e2d\u7684\u5404\u4e2a\u5143\u7d20\u4f20\u9012\u7ed9\u4e86 A \u7c7b\u7684\u6784\u9020\u51fd\u6570\u3002 \u5e26\u6709\u591a\u4e2a\u53c2\u6570\u5219\u5199\u4e3a\uff1a 1 A a [ 3 ] = { A ( 1 , 2 ), A ( 3 , 5 ), A ( 0 , 7 )};","title":"\u4e3b\u51fd\u6570\u4e2d\u5bf9\u8c61\u6570\u7ec4\u7684\u521d\u59cb\u5316"},{"location":"languages/c-oop/class-easy/#_8","text":"\u6982\u8ff0 \u5bf9\u8c61\u7684\u201c\u6b7b\u201d\uff08\u6e05\u9664\u548c\u91ca\u653e\u8d44\u6e90\uff09\u662f\u7531\u7f16\u8bd1\u5668\u5728\u5bf9\u8c61\u4f5c\u7528\u57df\u7ed3\u675f\u5904\u81ea\u52a8\u751f\u6210\u8c03\u7528\u6790\u6784\u51fd\u6570\u4ee3\u7801\u6765\u5b8c\u6210\u7684\uff0c\u52a8\u6001\u5206\u914d\u7684\u5185\u5b58\u5c31\u662f\u4e00\u79cd\u5178\u578b\u7684\u9700\u8981\u91ca\u653e\u7684\u8d44\u6e90\u3002\u5f53\u6267\u884c\u5230\u201c\u5305\u542b\u5bf9\u8c61\u5b9a\u4e49\u8303\u56f4\u7ed3\u675f\u5904\u201d\u65f6\uff0c\u7f16\u8bd1\u5668\u81ea\u52a8\u8c03\u7528\u5bf9\u8c61\u7684\u6790\u6784\u51fd\u6570\u3002\u6e05\u9664\u5bf9\u8c61\u5360\u7528\u7684\u8d44\u6e90\u662f\u65e0\u6761\u4ef6\u7684\uff0c\u4e0d\u9700\u8981\u4efb\u4f55\u9009\u9879\u3002\u56e0\u6b64\uff0c\u6790\u6784\u51fd\u6570\u6ca1\u6709\u53c2\u6570\uff0c\u4e14\u53ea\u6709\u4e00\u4e2a\uff0c\u5373\u6e05\u9664\u65b9\u5f0f\u552f\u4e00\u3002 \u8fd9\u5728\u4e0b\u4e00\u7ae0\u8282\u7684\u4f8b\u5b50\u4e2d\u6709\u6240\u4f53\u73b0\u3002 \u6ca1\u6709\u663e\u5f0f\u5b9a\u4e49\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u7cfb\u7edf\u8c03\u7528\u4e86\u9690\u5f0f\u751f\u6210\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u8fd9\u5f53\u7136\u662f\u6ca1\u6709\u8f93\u51fa\u7684\u3002\u5f62\u53c2\u7684\u6784\u9020\u7528\u7684\u662f\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u53ef\u662f\u6790\u6784\u5374\u662f\u5171\u7528\u7684\u4e00\u4e2a\u6790\u6784\u51fd\u6570\u3002 \u8bed\u6cd5 \u4e00\u4e2a\u7c7b\u53ea\u6709\u4e00\u4e2a\u6790\u6784\u51fd\u6570\uff0c\u540d\u79f0\u662f ~\u7c7b\u540d \uff0c\u6ca1\u6709\u51fd\u6570\u8fd4\u56de\u503c\uff0c\u6ca1\u6709\u51fd\u6570\u53c2\u6570\u3002\u7f16\u8bd1\u5668\u5728\u5bf9\u8c61\u751f\u547d\u671f\u7ed3\u675f\u65f6\u81ea\u52a8\u8c03\u7528\u7c7b\u7684\u6790\u6784\u51fd\u6570\uff0c\u4ee5\u4fbf\u91ca\u653e\u5bf9\u8c61\u5360\u7528\u7684\u8d44\u6e90\uff0c\u6216\u5176\u4ed6\u540e\u5904\u7406\u3002 1 2 3 4 5 6 7 8 9 10 class ClassRoom { int num ; int * ID_list ; public : ClassRoom () : num ( 0 ), ID_list ( nullptr ) {} ~ ClassRoom () { if ( ID_list ) delete [] ID_list ; } }; \u6ce8\u610f\u5230\u8fd9\u4e2a\u4f8b\u5b50\u4e5f\u4f53\u73b0\u4e86\u6307\u9488 delete \u4e4b\u524d\u5e94\u5148\u68c0\u6d4b\u662f\u5426\u4e3a\u7a7a\u6307\u9488\u3002 \u6790\u6784\u6392\u5e8f \u548c\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u4e00\u6837\uff0c\u6790\u6784\u51fd\u6570\u9664\u4e86\u6267\u884c\u51fd\u6570\u4f53\u5185\u58f0\u660e\u7684\u8bed\u53e5\uff0c\u7f16\u8bd1\u5668\u8fd8\u4f1a\u505a\u4e00\u4e9b\u989d\u5916\u64cd\u4f5c\u3002\u4f8b\u5982\u5728\u7ec4\u5408\u5f53\u4e2d\uff0c\u4f1a\u81ea\u52a8\u8c03\u7528\u6210\u5458\u53d8\u91cf\u7684\u6790\u6784\u51fd\u6570\uff0c\u5148\u6267\u884c\u81ea\u5df1\u7684\u6790\u6784\u51fd\u6570\uff0c\u518d\u8c03\u7528\u6210\u5458\u53d8\u91cf\u7684\u6790\u6784\uff08\u8fd9\u70b9\u4e0e\u6784\u9020\u51fd\u6570\u6070\u6070\u76f8\u53cd\uff09\u3002\u4ee5\u53ca\u6700\u57fa\u672c\u7684\uff0c\u5148\u6784\u9020\u7684\u540e\u6790\u6784\u3002 \u9ed8\u8ba4\u6790\u6784\u51fd\u6570 \u548c\u6784\u9020\u51fd\u6570\u7c7b\u4f3c\uff0c\u5f53\u7528\u6237\u6ca1\u6709\u81ea\u5b9a\u4e49\u6790\u6784\u51fd\u6570\u65f6\uff0c\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u5408\u6210\u4e00\u4e2a\u9690\u5f0f\u7684\u6790\u6784\u51fd\u6570\u3002 \u95ee\u9898\u5728\u4e8e\u9690\u5f0f\u5b9a\u4e49\u7684\u6790\u6784\u51fd\u6570\u4e0d\u4f1a\u91ca\u653e\u6307\u9488\u6210\u5458\uff0c\u53ef\u80fd\u9020\u6210\u5185\u5b58\u6cc4\u9732\u3002","title":"\u6790\u6784\u51fd\u6570"},{"location":"languages/c-oop/class-easy/#_9","text":"","title":"\u5bf9\u8c61\u7684\u6790\u6784\u4e0e\u6784\u9020"},{"location":"languages/c-oop/class-easy/#_10","text":"\u5b9a\u4e49 \u4f5c\u7528\u57df\u5b9a\u4e49\u4e3a\u67d0\u4e00\u4e2a\u53d8\u91cf\u80fd\u591f\u88ab\u5f15\u7528\u7684\u533a\u57df\u3002\u4f8b\u5982\uff0c\u82b1\u62ec\u53f7\u62ec\u8d77\u6765\u7684\u533a\u57df\u5c06\u4f1a\u5f62\u6210\u4e00\u4e2a\u4f5c\u7528\u57df\u3002 \u975e\u9759\u6001\u7684\u5c40\u90e8\u5bf9\u8c61\u3002\u5728\u7a0b\u5e8f\u6267\u884c\u5230\u8be5\u5c40\u90e8\u5bf9\u8c61\u7684\u4ee3\u7801\u65f6\u88ab\u521d\u59cb\u5316\u3002\u5728\u5c40\u90e8\u5bf9\u8c61\u751f\u547d\u5468\u671f\u7ed3\u675f\u3001\u5373\u6240\u5728\u4f5c\u7528\u57df\u7ed3\u675f\u540e\u88ab\u6790\u6784\u3002\u8fd9\u91cc\u6ce8\u610f\u4e0e\u9759\u6001\u7684\u5c40\u90e8\u5bf9\u8c61\u8fdb\u884c\u5bf9\u6bd4\u3002\u8be6\u89c1\u4e0b\u4e00\u7ae0\u8282\u3002 \u975e\u9759\u6001\u5168\u5c40\u53d8\u91cf\u3002\u5728\u4e3b\u51fd\u6570\u8c03\u7528\u4e4b\u524d\u8fdb\u884c\u521d\u59cb\u5316\u3002\u5728\u540c\u4e00\u7f16\u8bd1\u5355\u5143\u4e2d\uff0c\u6309\u7167\u5b9a\u4e49\u987a\u5e8f\u8fdb\u884c\u521d\u59cb\u5316\u3002 \u8fd9\u91cc\u540c\u4e00\u7f16\u8bd1\u5355\u5143\u901a\u5e38\u662f\u540c\u4e00\u6e90\u6587\u4ef6\u3002\u800c\u4e0d\u540c\u7f16\u8bd1\u5355\u5143\u95f4\uff0c\u5bf9\u8c61\u521d\u59cb\u5316\u987a\u5e8f\u4e0d\u786e\u5b9a\u3002 \u5728\u4e3b\u51fd\u6570\u6267\u884c\u5b8c\u8fd4\u56de\u4e4b\u540e\uff0c\u5bf9\u8c61\u88ab\u6790\u6784\u3002 \u5168\u5c40\u53d8\u91cf\u7684\u5c40\u9650\u6027 \u5c3d\u91cf\u5c11\u7528\u5168\u5c40\u5bf9\u8c61\u3002\u9996\u5148\uff0c\u5168\u5c40\u5bf9\u8c61\u7684\u6784\u9020\u987a\u5e8f\u4e0d\u80fd\u5b8c\u5168\u786e\u5b9a\uff0c\u6240\u4ee5\u5168\u5c40\u5bf9\u8c61\u4e4b\u95f4\u4e0d\u80fd\u6709\u4f9d\u8d56\u5173\u7cfb\uff0c\u5426\u5219\u4f1a\u51fa\u73b0\u95ee\u9898\u3002\u5176\u6b21\uff0c\u5168\u5c40\u5bf9\u8c61\u4f1a\u589e\u5927\u4ee3\u7801\u7684\u8026\u5408\u6027\uff0c\u5bfc\u81f4\u7a0b\u5e8f\u96be\u4ee5\u590d\u7528\u6216\u8005\u6d4b\u8bd5\u3002 \u8fd9\u9053\u9898\u5c31\u662f\u5f3a\u8c03\u4e86\u5168\u5c40\u53d8\u91cf\u4e3b\u51fd\u6570\u6267\u884c\u5b8c\u8fd4\u56de\u4e4b\u540e\u88ab\u6790\u6784\u3002\u800c local_obj \u76f8\u5f53\u4e8e\u662f main \u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u4f1a\u5728\u5168\u5c40\u53d8\u91cf\u540e\u6790\u6784\u3002","title":"\u5c40\u90e8\u5bf9\u8c61\u7684\u6790\u6784\u4e0e\u6784\u9020"},{"location":"languages/c-oop/class-easy/#_11","text":"","title":"\u5f15\u7528"},{"location":"languages/c-oop/class-easy/#_12","text":"\u540c\u4e00\u4e2a\u5185\u5b58\u5355\u5143\u7684\u4e24\u4e2a\u4e0d\u540c\u540d\u5b57\u3002\u521b\u5efa\u5f15\u7528\u8981\u7528\u5230 & \u7b26\u53f7\uff0c\u6bd4\u5982\u8bf4\u6574\u578b\u53d8\u91cf\u7684\u5f15\u7528\uff1a 1 2 int a = 1 ; int & b = a ; \u5f15\u7528\u5fc5\u987b\u5728\u5b9a\u4e49\u65f6\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u4e14\u4e0d\u80fd\u4fee\u6539\u5f15\u7528\u6307\u5411\uff0c\u8fd9\u70b9\u548c\u6307\u9488\u4e0d\u540c\u3002 \u88ab\u5f15\u7528\u53d8\u91cf\u540d\u53ef\u4ee5\u662f\u7c7b\u7684\u6210\u5458\u53d8\u91cf\uff0c\u5982 int& m = s.m \u3002","title":"\u5b9a\u4e49\u4e0e\u8bed\u6cd5"},{"location":"languages/c-oop/class-easy/#_13","text":"\u51fd\u6570\u53c2\u6570\u53ef\u4ee5\u662f\u5f15\u7528\u7c7b\u578b\uff0c\u8868\u793a\u51fd\u6570\u7684\u5f62\u5f0f\u53c2\u6570\u4e0e\u5b9e\u9645\u53c2\u6570\u662f\u540c\u4e00\u4e2a\u53d8\u91cf\uff0c\u6539\u53d8\u5f62\u53c2\u5c06\u6539\u53d8\u5b9e\u53c2\uff0c\u4f7f\u7528\u5f97\u5f53\u4e5f\u53ef\u907f\u514d\u8bb8\u591a\u4e0d\u5fc5\u8981\u7684\u5f62\u53c2\u62f7\u8d1d\u3002\u5982\u8c03\u7528\u4ee5\u4e0b\u51fd\u6570\u5c06\u4ea4\u6362\u5b9e\u53c2\u7684\u503c\uff1a 1 2 3 void swap ( int & a , int & b ) { int tmp = b ; b = a ; a = tmp ; } \u51fd\u6570\u8fd4\u56de\u503c\u53ef\u4ee5\u662f\u5f15\u7528\u7c7b\u578b\uff0c\u4f46\u4e0d\u5f97\u6307\u5411\u51fd\u6570\u7684\u975e\u9759\u6001\u7684\u4e34\u65f6\u53d8\u91cf\u3002\u6362\u8a00\u4e4b\uff0c\u4f60\u53ef\u4ee5\u8fd4\u56de\u4e34\u65f6\u53d8\u91cf\uff08\u8fd9\u76f8\u5f53\u4e8e\u628a\u5b83\u590d\u5236\u4e86\u4e00\u4efd\u7528\u4e8e\u8fd4\u56de\u51fa\u53bb\uff0c\u5b83\u672c\u8eab\u4f1a\u88ab\u9500\u6bc1\uff09\uff0c\u4f46\u4e0d\u80fd\u8fd4\u56de\u975e\u9759\u6001\u4e34\u65f6\u53d8\u91cf\u7684\u5f15\u7528\u3002\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u662f\u53ef\u4ee5\u4f5c\u4e3a\u8fd4\u56de\u503c\u7684\uff0c\u5e76\u4e14\u6709\u7740\u795e\u5947\u7684\u64cd\u4f5c\uff08\u8fd9\u4e00\u795e\u5947\u7684\u64cd\u4f5c\u6d89\u53ca\u5230\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u7684\u4f5c\u7528\uff0c\u8be6\u89c1\u4e0b\u4e00\u7ae0\u8282\uff09\u3002 \u8fd9\u6bb5\u4ee3\u7801\u5b58\u5728\u975e\u6cd5\u5185\u5b58\u8bbf\u95ee\u3002\u6ce8\u610f\u5230 func2 \u5b9a\u4e49\u7684\u5c40\u90e8\u53d8\u91cf tmp \u662f\u975e\u9759\u6001\u7684\uff0c\u6545\u800c func2 \u7ed3\u675f\u4e4b\u540e\u7acb\u523b\u6790\u6784\u3002\u800c f \u88ab\u5b9a\u4e49\u4e3a\u4e86 tmp \u7684\u5f15\u7528\uff0c tmp \u5df2\u7ecf\u88ab\u9500\u6bc1\u4e86\uff0c\u8fd9\u5757\u5185\u5b58\u7a7a\u95f4\u5df2\u7ecf\u88ab\u91ca\u653e\u3002 \u88ab\u91ca\u653e\u7684\u5185\u5b58\uff0c\u8bbf\u95ee\u662f\u5371\u9669\u7684\uff0c\u4f46\u5e76\u975e\u4e0d\u53ef\u8bbf\u95ee\u3002\u73b0\u5728\u4e00\u822c\u7684\u7f16\u8bd1\u5668\u90fd\u662f\u5141\u8bb8\u8bbf\u95ee\uff0c\u4f46\u8bbf\u95ee\u7684\u7ed3\u679c\u4e0d\u786e\u5b9a\uff0c\u6709\u53ef\u80fd\u662f\u8fd0\u884c\u9519\u8bef\uff0c\u6709\u53ef\u80fd\u662f\u4e0d\u786e\u5b9a\u7684\u503c\u3002\u8fd9\u4e2a\u53ef\u80fd\u9700\u8981\u7b49\u5230\u5b66\u6c47\u7f16\u4f1a\u4e86\u89e3\u7684\u66f4\u6e05\u695a\u3002 \u6545\u800c\u8fd9\u6bb5\u4ee3\u7801\u5728 glot \u7f16\u8bd1\u5668\u4e0a\u7684\u7ed3\u679c\u4e3a 4_0 \u3002 \u7136\u800c\u6211\u4eec\u5bf9\u5c40\u90e8\u53d8\u91cf tmp \u52a0\u4e0a static \u4fee\u9970\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #include <iostream> using namespace std ; class Int { public : int data ; Int () { data = 1 ; } Int ( int i ) : data ( i ) { } }; void func1 ( Int & a , Int b ) { a . data += b . data ; } Int & func2 ( Int & a , Int b ) { func1 ( a , b ); int static tmp ( a . data + b . data ); return tmp ; } int main () { int a , b ( 3 ); int & f = func2 ( a , b ); cout << a . data << \"_\" << f . data << endl ; // \"4_7\" return 0 ; } \u975e\u5e38\u795e\u5947\uff0c\u6211\u4eec\u4e0d\u4ec5\u901a\u8fc7 static \u4fee\u9970\u4fdd\u7559\u4e86\u5c40\u90e8\u53d8\u91cf\uff0c\u4f3c\u4e4e\u8fd8\u6539\u53d8\u4e86\u8fd9\u4e2a\u5c40\u90e8\u53d8\u91cf\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 #include <iostream> using namespace std ; class Int { public : int data ; Int () { data = 1 ; } Int ( int i ) : data ( i ) { } }; void func1 ( Int & a , Int b ) { a . data += b . data ; } Int & func2 ( Int & a , Int b ) { func1 ( a , b ); Int static tmp ( a . data + b . data ); return tmp ; } int main () { Int a , b ( 3 ); Int & f = func2 ( a , b ); cout << a . data << \"_\" << f . data << endl ; // \"4_7\" f . data ++ ; cout << a . data << \"_\" << func2 ( a , b ). data << \"_\" << a . data << endl ; // \"4_8_7\" return 0 ; } \u8fd9\u4f3c\u4e4e\u8fdd\u53cd\u4e86\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u53ea\u80fd\u591f\u88ab\u5b9a\u4e49\u5b83\u7684\u51fd\u6570\u4f53\u64cd\u4f5c\u8fd9\u4e00\u70b9\uff0c\u5b9e\u5219\u4e0d\u7136\u3002\u6211\u4eec\u4e4b\u524d\u53d9\u8ff0\u7684\u662f\uff0c\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u4e0d\u80fd\u5728\u51fd\u6570\u5916\u88ab\u4f7f\u7528\uff0c\u4f46\u662f\u4f46\u5b83\u7684\u5185\u5b58\u7a7a\u95f4\u53ef\u4ee5\u3002\u4e0a\u4f8b\u662f\u7ed5\u8fc7\u4e86\u8bed\u8a00\u5c42\u9762\uff0c\u76f4\u63a5\u5bf9\u4e8e\u5185\u5b58\u8fdb\u884c\u4e86\u64cd\u4f5c\u3002 \u5bf9\u4e8e\u53d8\u91cf\u7684\u64cd\u4f5c\uff0c\u662f\u6307\u4f8b\u5982\u7f16\u5199\u4e00\u884c C \u8bed\u8a00\u4ee3\u7801\uff0c\u660e\u786e\u5730\u64cd\u4f5c\u8fd9\u4e2a\u53d8\u91cf\uff0c\u6bd4\u5982 x++ \u3002\u4f46\u662f\u64cd\u4f5c\u53ef\u4ee5\u901a\u8fc7\u6307\u9488\uff0c\u6bd4\u5982\u5b9a\u4e49\u4e00\u4e2a\u6307\u9488 p \u6765\u6307\u5411\u8fd9\u4e2a\u5730\u5740\uff0c\u4e4b\u540e\u5bf9 *p \u8fdb\u884c\u5404\u7c7b\u64cd\u4f5c\u3002\u8fd9\u65f6\u5019\u7f16\u8bd1\u5668\u5e76\u4e0d\u77e5\u9053 *p \u6307\u5411\u7684\u5185\u5b58\u7a7a\u95f4\u7a76\u7adf\u600e\u4e48\u6765\u7684\uff0c\u5b83\u53ea\u77e5\u9053\u662f\u4e00\u6bb5\u5185\u5b58\u7a7a\u95f4\uff0c\u8fdb\u884c\u4e86\u4e00\u7cfb\u5217\u64cd\u4f5c\u3002 \u7b80\u800c\u8a00\u4e4b\uff0c\u4f60\u4e0d\u80fd\u5728\u51fd\u6570\u4f53\u5916\u4f7f\u7528\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u7684\u540d\u5b57\uff0c\u4f46\u662f\u53ef\u4ee5\u4f7f\u7528\u8fd9\u5757\u5185\u5b58\u7a7a\u95f4\u3002 \u53e6\u5916\uff0c\u6211\u5728 func2(a, b).data \u4e2d\u7b2c\u4e8c\u6b21\u8c03\u7528 func2(a, b) \u65f6\uff0c\u7531\u4e8e\u4e4b\u524d\u5df2\u7ecf\u5b9a\u4e49\u4e86 static int tmp \uff0c\u6240\u4ee5\u7b2c\u4e8c\u6b21\u4e0d\u518d\u7528 Int static tmp(a.data + b.data \u6765\u6784\u9020\u65b0\u7684 tmp \uff0c\u76f8\u5f53\u4e8e\u6784\u9020 tmp \u7684\u8fd9\u4e00\u884c\u5931\u6548\u4e86\uff0c\u4f46\u662f func1(a, b) \u4ecd\u7136\u4f1a\u8fdb\u884c\uff0c\u6545\u800c a \u8fd8\u662f\u52a0\u4e86 3 \u3002 \u53c8\u6bd4\u5982\u4e0b\u9762\u8fd9\u6bb5\u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 #include <iostream> using namespace std ; class Int { public : int data ; Int () { data = 1 ; } Int ( int i ) : data ( i ) { } }; void func1 ( Int & a , Int b ) { a . data += b . data ; } Int & func2 ( Int & a , Int b ) { func1 ( a , b ); Int static tmp ( a . data + b . data ); return tmp ; } int main () { Int a , b ( 3 ); Int & f = func2 ( a , b ); cout << a . data << \"_\" << f . data << endl ; // \"4_7\" func2 ( a , b ). data ++ ; cout << a . data << \"_\" << func2 ( a , b ). data << \"_\" << a . data << endl ; // \"7_8_10\" return 0 ; } \u6211\u4f01\u56fe\u76f4\u63a5 func2(a, b).data++ \uff0c\u56e0\u4e3a\u6211\u8fd4\u56de\u7c7b\u578b\u4e3a tmp \u7684\u5f15\u7528\uff0c\u4e5f\u6210\u529f\u5b9e\u73b0\u4e86\u5bf9\u4e8e tmp \u7684\u5185\u5b58\u7a7a\u95f4\u7684\u64cd\u4f5c\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 #include <iostream> using namespace std ; class Int { public : int data ; Int () { data = 1 ; } Int ( int i ) : data ( i ) { } }; void func1 ( Int & a , Int b ) { a . data += b . data ; } Int & func2 ( Int & a , Int b ) { func1 ( a , b ); Int static tmp ( a . data + b . data ); return tmp ; } int main () { Int a , b ( 3 ); Int & f = func2 ( a , b ); cout << a . data << \"_\" << f . data << endl ; tmp . data ++ ; cout << a . data << \"_\" << func2 ( a , b ). data << \"_\" << a . data << endl ; return 0 ; } /* error: use of undeclared identifier 'tmp' tmp.data++; ^ 1 error generated. */","title":"\u7ed3\u5408\u51fd\u6570\u4f7f\u7528"},{"location":"languages/c-oop/class-easy/#_14","text":"\u4e0d\u5b58\u5728\u7a7a\u5f15\u7528\u3002\u5f15\u7528\u5fc5\u987b\u8fde\u63a5\u5230\u4e00\u5757\u5408\u6cd5\u7684\u5185\u5b58\u3002 \u4e00\u65e6\u5f15\u7528\u88ab\u521d\u59cb\u5316\u4e3a\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5c31\u4e0d\u80fd\u88ab\u6307\u5411\u5230\u53e6\u4e00\u4e2a\u5bf9\u8c61\u3002\u6307\u9488\u53ef\u4ee5\u5728\u4efb\u4f55\u65f6\u5019\u6307\u5411\u5230\u53e6\u4e00\u4e2a\u5bf9\u8c61\u3002 \u5f15\u7528\u5fc5\u987b\u5728\u521b\u5efa\u65f6\u88ab\u521d\u59cb\u5316\u4e3a\u4e00\u4e2a\u5bf9\u8c61\u3002\u6307\u9488\u53ef\u4ee5\u5728\u521d\u59cb\u5316\u65f6\u7f6e\u7a7a\uff0c\u4e4b\u540e\u518d\u6307\u5411\u5bf9\u8c61\u3002 \u5f15\u7528\u7684\u4f18\u52bf\u4e3a\u66f4\u7075\u6d3b\u5730\u652f\u6301\u8fd0\u7b97\u7b26\u91cd\u8f7d\u3002 \u5f15\u7528\u7684\u7279\u6027\uff1a\u521b\u5efa\u65f6\u5fc5\u987b\u521d\u59cb\u5316\u3001\u521d\u59cb\u5316\u540e\u4fbf\u4e0d\u80fd\u6307\u5411\u5176\u4ed6\u5bf9\u8c61\uff0c\u4e0d\u5b58\u5728\u7a7a\u5f15\u7528\u3002","title":"\u5f15\u7528\u7684\u5176\u4ed6\u7279\u70b9"},{"location":"languages/c-oop/class-easy/#_15","text":"","title":"\u8fd0\u7b97\u7b26\u91cd\u8f7d"},{"location":"languages/c-oop/class-easy/#_16","text":"\u7528\u6237\u81ea\u5b9a\u4e49\u7c7b\uff0c\u6ca1\u6709\u5bf9\u5e38\u7528\u7684\u8fd0\u7b97\u7b26\u8fdb\u884c\u5b9a\u4e49\uff0c\u6bd4\u5982\u60f3\u8981\u8868\u793a\u4e24\u4e2a\u7c7b\u5bf9\u8c61\u76f8\u52a0\uff0c\u65e0\u6cd5\u91c7\u7528 a + b \u8fd9\u79cd\u65b9\u5f0f\u3002\u53ef\u4ee5\u91c7\u53d6\u5b9a\u4e49\u4e00\u4e2a add \u51fd\u6570\u7684\u65b9\u5f0f\uff0c\u89e3\u51b3\u8fd9\u79cd\u95ee\u9898\u3002\u4f46\u8fd9\u79cd\u5b9e\u73b0\u65b9\u5f0f\uff0c\u5728\u8c03\u7528\u7684\u65f6\u5019\uff0c\u4f1a\u548c\u57fa\u7840\u7c7b\u578b\u5dee\u522b\u5f88\u5927\uff0c\u7f3a\u5c11\u7f16\u7a0b\u7684\u4e00\u81f4\u6027\u3002\u9700\u8981\u8fc7\u591a\u5730\u533a\u5206\u81ea\u5b9a\u4e49\u7c7b\u548c\u57fa\u7840\u7c7b\u522b\uff0c\u8c03\u7528\u8d77\u6765\u4e5f\u4e0d\u65b9\u4fbf\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5f15\u5165\u8fd0\u7b97\u7b26\u91cd\u8f7d\u3002","title":"\u610f\u4e49"},{"location":"languages/c-oop/class-easy/#_17","text":"\u8fd0\u7b97\u7b26\u91cd\u8f7d\u9700\u8981\u6309\u89c4\u5219\u58f0\u660e\u6267\u884c\u8be5\u8fd0\u7b97\u7684\u51fd\u6570\u3002\u4f8b\u5982 + \u5bf9\u5e94 operator+ \u3002\u8fd0\u7b97\u7b26\u91cd\u8f7d\u4e00\u822c\u6709\u4e24\u79cd\u65b9\u5f0f\uff08\u6ce8\u610f\u53c2\u6570\u4e0d\u540c\uff09\uff0c\u4e14\u53ea\u80fd\u7528\u4e00\u79cd\u3002 \u5168\u5c40\u51fd\u6570\u578b\u8fd0\u7b97\u7b26\u91cd\u8f7d 1 2 3 4 A operator + ( A & a1 , A & a2 ) { A new_a ( a1 . data + a2 . data ); return new_a ; } \u4f7f\u7528\u5168\u5c40\u51fd\u6570\u578b\u91cd\u8f7d\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 #include <iostream> using namespace std ; class A { public : int data ; A ( int i ) { data = i ; } }; A operator + ( A & a1 , A & a2 ) { A new_a ( a1 . data + a2 . data ); return new_a ; } int main () { A a1 ( 2 ), a2 ( 3 ); cout << a1 . data << endl ; // 2 cout << ( a1 + a2 ). data << endl ; // 5 return 0 ; } \u8fd9\u91cc\u7684 a1 + a2 \u76f8\u5f53\u4e8e\u8c03\u7528\u51fd\u6570 operator+(a1, a2) \u3002 \u6210\u5458\u51fd\u6570\u578b\u8fd0\u7b97\u7b26\u91cd\u8f7d 1 2 3 4 5 6 7 8 class A { int data ; public : A operator + ( A & a ) { A new_a ( data + a . data ); return new_a ; } }; \u6ce8\u610f\u7406\u89e3\u53c2\u6570\u7684\u4e0d\u540c\u3002\u5b9a\u4e49\u4e3a\u5168\u5c40\u51fd\u6570\u578b\u8fd0\u7b97\u7b26\u91cd\u8f7d\u4e4b\u540e\uff0c\u9700\u8981\u6307\u51fa\u5bf9\u4e8e\u54ea\u4e24\u4e2a\u5bf9\u8c61\u8fdb\u884c\u64cd\u4f5c\u3002\u4f46\u662f\u5b9a\u4e49\u4e3a\u6210\u5458\u51fd\u6570\u578b\u8fd0\u7b97\u7b26\u91cd\u8f7d\u65f6\uff0c\u8fd9\u4e00\u51fd\u6570\u662f\u67d0\u4e00\u5bf9\u8c61\u7684\u6210\u5458\u51fd\u6570\u3002\u5982\u679c\u662f\u53cc\u76ee\u8fd0\u7b97\u7b26\u53ea\u9700\u6307\u660e\u53e6\u4e00\u4e2a\u6570\u636e\u4e3a\u53c2\u6570\u3002 \u4f7f\u7528\u6210\u5458\u51fd\u6570\u578b\u91cd\u8f7d\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #include <iostream> using namespace std ; class A { public : int data ; A ( int i ) { data = i ; } A & operator += ( A & a ) { data += a . data ; return * this ; } A operator + ( A & a ) { A new_a ( data + a . data ); return new_a ; } }; int main () { A a1 ( 2 ), a2 ( 3 ); a1 += a2 ; cout << a1 . data << endl ; // 5 cout << ( a1 + a2 ). data << endl ; // 8 return 0 ; } \u663e\u7136 += \u548c + \u90fd\u5e94\u8be5\u91cd\u8f7d\uff0c\u4e0d\u53ef\u80fd\u53ea\u91cd\u8f7d + \u5c31\u89e3\u51b3\u95ee\u9898\u3002\u8fd9\u91cc\u7684 a1 + a2 \u76f8\u5f53\u4e8e\u8c03\u7528\u51fd\u6570 a1.operator+(a2) \u3002","title":"\u8bed\u6cd5"},{"location":"languages/c-oop/class-easy/#_18","text":"","title":"\u5177\u4f53\u7684\u91cd\u8f7d\u5b9e\u4f8b"},{"location":"languages/c-oop/class-easy/#_19","text":"\u53cc\u76ee\u7b97\u672f\u8fd0\u7b97\u7b26\u3002 + \uff08\u52a0\uff09\u3001 - \uff08\u51cf\uff09\u3001 * \uff08\u4e58\uff09\u3001 / \uff08\u9664\uff09\u3001 % \uff08\u53d6\u6a21\uff09 \u5173\u7cfb\u8fd0\u7b97\u7b26\u3002 == \uff08\u7b49\u4e8e\uff09\u3001 != \uff08\u4e0d\u7b49\u4e8e\uff09\u3001 < \uff08\u5c0f\u4e8e\uff09\u3001 > \uff08\u5927\u4e8e\uff09\u3001 <= \uff08\u5c0f\u4e8e\u7b49\u4e8e\uff09\u3001 >= \uff08\u5927\u4e8e\u7b49\u4e8e\uff09 \u903b\u8f91\u8fd0\u7b97\u7b26\u3002 || \uff08\u903b\u8f91\u6216\uff09\u3001 && \uff08\u903b\u8f91\u4e0e\uff09\u3001 ! \uff08\u903b\u8f91\u975e\uff09 \u5355\u76ee\u8fd0\u7b97\u7b26\u3002 + \uff08\u6b63\uff09\u3001 - \uff08\u8d1f\uff09\u3001 * \uff08\u6307\u9488\uff09\u3001 & \uff08\u53d6\u5730\u5740\uff09 \u81ea\u589e\u81ea\u51cf\u8fd0\u7b97\u7b26\u3002 ++ \uff08\u81ea\u589e\uff09\u3001 -- \uff08\u81ea\u51cf\uff09 \u4f4d\u8fd0\u7b97\u7b26\u3002 | \uff08\u6309\u4f4d\u6216\uff09\u3001 & \uff08\u6309\u4f4d\u4e0e\uff09\u3001 ~ \uff08\u6309\u4f4d\u53d6\u53cd\uff09\u3001 ^ \uff08\u6309\u4f4d\u5f02\u6216\uff09\u3001 << \uff08\u5de6\u79fb\uff09\u3001 >> \uff08\u53f3\u79fb\uff09 \u8d4b\u503c\u8fd0\u7b97\u7b26\u3002 = \u3001 += \u3001 -= \u3001 *= \u3001 /= \u3001 %= \u3001 &= \u3001 |= \u3001 ^= \u3001 <<= \u3001 >>= \u7a7a\u95f4\u7533\u8bf7\u4e0e\u91ca\u653e\u3002 new \u3001 delete \u3001 new[] \u3001 delete[] \u5176\u4ed6\u8fd0\u7b97\u7b26\u3002 () \uff08\u51fd\u6570\u8c03\u7528\uff09\u3001 -> \uff08\u6210\u5458\u8bbf\u95ee\uff09\u3001 , \uff08\u9017\u53f7\uff09","title":"\u53ef\u91cd\u8f7d\u7684\u8fd0\u7b97\u7b26"},{"location":"languages/c-oop/class-easy/#_20","text":"\u58f0\u660e \u524d\u7f00\u8fd0\u7b97\u7b26\u91cd\u8f7d\u58f0\u660e\uff1a 1 2 ClassName operator ++ (); ClassName operator -- (); \u540e\u7f00\u8fd0\u7b97\u7b26\u91cd\u8f7d\u58f0\u660e\uff1a 1 ClassName operator ++ ( int dummy ); dummy \u8868\u793a\u54d1\u5143\uff0c\u5b9e\u9645\u4e0a\u54d1\u5143\u53ef\u4ee5\u6ca1\u6709\u540d\u5b57\u3002 ++a \u7b49\u4ef7\u4e8e operator++(a) \uff0c\u800c a++ \u7b49\u4ef7\u4e8e operator++(a, int) \u3002 \u54d1\u5143\u7684\u610f\u4e49\u5c31\u662f\uff0c\u8bbe\u60f3\u6ca1\u6709\u8fd9\u4e00\u54d1\u5143\uff0c\u90a3\u4e48 a++ \u548c ++a \u7684\u58f0\u660e\u5b8c\u5168\u76f8\u540c\u3002\u7136\u800c\u5b9e\u9645\u4e0a\uff0c\u4e24\u4e2a\u51fd\u6570\u7684\u529f\u80fd\u5b8c\u5168\u4e0d\u540c\uff0c\u9700\u8981\u5b9e\u73b0\u91cd\u8f7d\u3002\u8fd9\u4e00\u5b9e\u73b0\u5c31\u662f\u501f\u52a9\u54d1\u5143\u8fbe\u6210\u7684\u3002 \u7f16\u8bd1\u5668\u5728\u7f16\u8bd1 a++ \u65f6\uff0c\u7b49\u4ef7\u4e8e operator++(a,int) \uff0c\u4ece\u800c\u8c03\u7528\u4e86\u540e\u7f00\u8fd0\u7b97\u7b26\u3002\u7f16\u8bd1\u5668\u81ea\u52a8\u8bc6\u522b\uff0c\u5c31\u50cf\u662f a1 + a2 \u7b49\u4ef7\u4e8e a1.operator+(a2) \uff0c\u8fd9\u79cd\u7b49\u4ef7\u5c31\u662f\u7f16\u8bd1\u5668\u81ea\u52a8\u7b49\u4ef7\u3002 \u8bed\u4e49\u8bc6\u522b 1 2 int a = ++ b ; // \u5148\u5b8c\u6210 b + 1 \u64cd\u4f5c\uff0c\u518d\u8d4b\u503c int a = b ++ ; // \u5148\u5b8c\u6210\u8d4b\u503c\uff0c\u518d b + 1 \u64cd\u4f5c \u524d\u7f00\u8fd0\u7b97\u7b26\u91cd\u8f7d\u5b9e\u4f8b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 #include <iostream> using namespace std ; class Test { public : int data = 1 ; Test ( int d ) { data = d ; } Test & operator ++ () { ++ data ; return * this ; } }; int main () { Test test ( 1 ); ++ test ; return 0 ; } \u540e\u7f00\u8fd0\u7b97\u7b26\u91cd\u8f7d\u5b9e\u4f8b\uff08\u4e00\uff09 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 #include <iostream> using namespace std ; class Test { public : int data = 1 ; Test ( int d ) { data = d ; } Test operator ++ ( int ) { Test test ( data ); ++ data ; return test ; } }; int main () { Test test ( 1 ); test ++ ; return 0 ; } \u9996\u5148\u9700\u8981\u6307\u51fa\u7684\u662f\uff0c\u51fd\u6570\u7684\u8fd4\u56de\u503c\u5e76\u4e0d\u4e00\u5b9a\u9700\u8981\u4f7f\u7528\u3002\u8fd9\u4e00\u6bb5\u5c31\u662f\u5178\u578b\u7684\u4f8b\u5b50\uff0c\u5c3d\u7ba1\u6211\u8fd4\u56de\u7684\u662f\u4e2a Test \u5bf9\u8c61\uff0c\u4f46\u662f\u6ca1\u6709\u4eba\u63a5\u6536\u8fd9\u4e00\u5bf9\u8c61\uff0c\u4ed6\u4f1a\u5728\u4e3b\u51fd\u6570\u7684\u5bf9\u5e94\u8bed\u53e5\uff08\u4e5f\u5c31\u662f test++ \uff09\u7ed3\u675f\u540e\u88ab\u91ca\u653e\u3002\u867d\u7136\u5728\u8fd9\u4e2a\u4f8b\u5b50\u91cc\u9762\uff0c test++ \u5e76\u6ca1\u6709\u7528\u5230 Test \u7c7b\u578b\u7684\u8fd4\u56de\u503c\uff0c\u53ef\u4ee5\u6539\u4e3a void \uff0c\u4f46\u662f\u5728\u5176\u4ed6\u60c5\u51b5\u4e0b\u662f\u9700\u8981\u7528\u5230\u8fd9\u4e00\u4e2a\u8fd4\u56de\u503c\u7684\u3002 \u5173\u4e8e\u6790\u6784\u65f6\u673a \u5bf9\u4e8e\u6b64\u5904\u5c40\u90e8\u5bf9\u8c61\u7684\u6790\u6784\u65f6\u673a\uff0c\u7ed3\u5408\u4e0b\u8ff0\u8fdb\u884c\u4e00\u5b9a\u7684\u89e3\u8bfb\u3002 1 2 3 4 5 Test f1 ( Test a ) { a . print ( \"a\" ); return a ; } Test A = f1 ( a ); \u5bf9\u4e8e\u8fd9\u4e00\u8d4b\u503c\u6784\u9020\uff08\u6784\u9020\u5916\u9762\u7684 A \uff09\u548c\u51fd\u6570\u8c03\u7528\u8bed\u53e5\uff0c\u6784\u9020 A \u548c\u6790\u6784\u8fd4\u56de\u503c\u548c\u5f62\u53c2\u7684\u5148\u540e\u987a\u5e8f\u5e94\u8be5\u662f\uff0c\u5148\u6267\u884c\u5b8c f1 \u7684\u51fd\u6570\u4f53\uff0c\u6682\u4e0d\u6790\u6784\u3002\u7136\u540e\u6267\u884c\u5b8c\u6574\u4e2a\u8bed\u53e5\uff0c\u5177\u4f53\u5230\u8fd9\u4e2a\u8bed\u53e5\uff0c\u5c31\u662f\u5916\u90e8\u5bf9 A \u7684\u79fb\u52a8\u6784\u9020\uff0c\u518d\u6790\u6784\u3002 \u5b8c\u6210\u4e86\u5bf9 A \u7684\u79fb\u52a8\u6784\u9020\u4e4b\u540e\uff0c\u5c31\u5df2\u7ecf\u5b8c\u6210\u4e86\u4e24\u6b21\u5bf9\u5e94\u79fb\u52a8\u6784\u9020\u7684\u8f93\u51fa\u3002\u5206\u522b\u662f\u56e0\u4e3a\u8fd4\u56de\u503c\u4f18\u5316\u88ab\u7981\u7528\u800c\u5bf9\u8fd4\u56de\u503c\u8fdb\u884c\u7684\u89c4\u5b9a\u7684\u79fb\u52a8\u6784\u9020\uff0c\u4ee5\u53ca\u8fd4\u56de\u7684\u5bf9\u8c61\u5bf9\u4e8e A \u7684\u79fb\u52a8\u6784\u9020\u3002\u63a5\u4e0b\u6765\uff0c\u8fd9\u4e00\u8bed\u53e5\u6267\u884c\u5b8c\u6bd5\u540e\u624d\u8fdb\u884c\u51fd\u6570\u4f53\u7684\u6790\u6784\uff0c\u4e5f\u5c31\u662f\u8fde\u7eed\u7684\u4e24\u6b21\u6790\u6784\u3002\u7b2c\u4e00\u6b21\u6790\u6784\u6389\u8fd4\u56de\u503c\uff0c\u7b2c\u4e8c\u6b21\u6790\u6784\u6389\u5f62\u53c2\uff08\u5148\u6784\u9020\u7684\u540e\u6790\u6784\uff09\u3002 \u4f46\u662f\u8fd9\u91cc\u7684\u6790\u6784\u987a\u5e8f\u5176\u5b9e\u8fd8\u6709\u8fdb\u4e00\u6b65\u8ba8\u8bba\uff1a \u7531\u4e8e\u51fd\u6570\u8fd4\u56de\u503c\u662f\u5bf9\u8c61\u800c\u5728 return \u65f6\u4e5f\u4f1a\u4ea7\u751f\u4e00\u6b21\u5bf9\u8c61\u6784\u9020\uff08\u901a\u5e38\u4f1a\u88ab\u7f16\u8bd1\u5668\u4f18\u5316\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7\u5f00\u542f\u7f16\u8bd1\u6307\u4ee4 -fon-elide-constructors \u8ba9\u7f16\u8bd1\u5668\u4e0d\u4f18\u5316\uff09\uff0c\u8fd9\u4e2a\u4e34\u65f6\u5bf9\u8c61\u4f1a\u5728 return \u8bed\u53e5\u6267\u884c\u65f6\u88ab\u521b\u5efa\uff0c\u7b49 return \u8bed\u53e5\u7ed3\u675f\u540e\uff0c\u51fd\u6570\u4f53\u5185\u7684\u5bf9\u8c61\u88ab\u6790\u6784\uff0c\u7136\u540e\u8fd9\u4e2a\u4e34\u65f6\u53d8\u91cf\u88ab\u6790\u6784\uff0c\u6700\u540e\u624d\u5230\u4f5c\u4e3a\u53c2\u6570\u7684\u53d8\u91cf\u88ab\u6790\u6784\u3002 \u6790\u6784\u987a\u5e8f\u662f\u5148\u6790\u6784\u51fd\u6570\u4f53\u5185\u5bf9\u8c61\uff0c\u7136\u540e\u662f\u8fd4\u56de\u503c\u5bf9\u8c61\uff0c\u6700\u540e\u662f\u5f62\u53c2\u3002\u867d\u7136\u8fd9\u548c\u901a\u5e38\u610f\u4e49\u4e0a\u7684\u5148\u6784\u9020\u7684\u540e\u6790\u6784\u6709\u4e9b\u77db\u76fe\uff0c\u4f46\u662f\u7279\u4f8b\u8bb0\u4f4f\u5c31\u597d\u3002 \u81f3\u4e8e\u4e3a\u4ec0\u4e48\u5bf9 A \u662f\u79fb\u52a8\u6784\u9020\uff1a 1 Test A = f1 ( a ); f1(a) \u662f\u4e2a\u53f3\u503c\uff0c\u56e0\u4e3a\u4f60\u6ca1\u6cd5\u5bf9 f1(a)++ \u3002 f1(a) \u662f\u4e2a\u53f3\u503c\uff0c\u6545\u800c\u9ed8\u8ba4\u8c03\u7528\u4e86\u79fb\u52a8\u6784\u9020\u51fd\u6570\u3002 \u8fd9\u91cc\u9700\u8981\u610f\u8bc6\u5230\uff0c f1(a) \u672c\u8eab\u662f\u4e2a\u53f3\u503c\uff0c\u4f46\u662f A \u5c31\u662f\u4e2a\u5de6\u503c\u4e86\u3002 \u8fd8\u503c\u5f97\u8bf4\u660e\u7684\u662f\uff0c\u4e0a\u6587\u7684\u6790\u6784\u65f6\u673a\u662f\u5efa\u7acb\u5728\u4e3b\u51fd\u6570\u7684\u8bed\u53e5\u65e2\u6709\u8d4b\u503c\u53c8\u6709\u51fd\u6570\u8c03\u7528\u7684\u57fa\u7840\u4e0a\uff0c\u4e5f\u5c31\u662f\u51fd\u6570\u7684\u8fd4\u56de\u503c\u6709\u8d4b\u503c\u4f5c\u7528\u3002\u5982\u679c\u51fd\u6570\u8fd4\u56de\u503c\u6ca1\u6709\u8d4b\u503c\u7684\u4f5c\u7528\uff0c\u90a3\u4e48\u8fd4\u56de\u503c\u4f1a\u7acb\u523b\u5728\u51fd\u6570\u4f53\u7ed3\u675f\u540e\u88ab\u6790\u6784\uff0c\u800c\u4e0d\u662f\u4e3b\u51fd\u6570\u7684\u5bf9\u5e94\u8bed\u53e5\u7ed3\u675f\u540e\u6790\u6784\u3002\u8b6c\u5982\u4e0a\u6587\u7b80\u5355\u7684\u5199 a++ \u5c31\u4f1a\u8ba9 test \u7acb\u523b\u88ab\u6790\u6784\u3002 \u540e\u7f00\u8fd0\u7b97\u7b26\u91cd\u8f7d\u5b9e\u4f8b\uff08\u4e8c\uff09 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 #include <iostream> using namespace std ; class Test { public : int data = 1 ; Test ( int d ) { data = d ; } Test operator ++ ( int ) { Test test ( data ); ++ data ; return test ; } }; int main () { Test test ( 1 ); test = test ++ ; cout << test . data << endl ; // 1 return 0 ; } \u4e3a\u4ec0\u4e48\u4f1a\u8f93\u51fa 1 \uff1f\u6211\u4eec\u7ed3\u5408\u4fee\u6539\u540e\u7684\u4ee3\u7801\u8fdb\u884c\u89e3\u91ca\u3002 \u5148\u6784\u5efa\u4e86 new_test \uff0c\u7136\u540e\u5bf9\u539f\u6709\u7684 test.data++ \uff0c\u7136\u540e\u628a new_test \u8fd4\u56de\u7ed9\u4e86 test \u3002\u6ce8\u610f\u5230\u8fd9\u4e00\u903b\u8f91\u8fc7\u7a0b\u7684\u5148\u540e\u987a\u5e8f\uff0c\u6211\u867d\u7136\u5bf9\u4e8e test.data++ \u4e86\uff0c\u4f46\u8fd9\u6b65\u4e4b\u540e\u7528\u8fd4\u56de\u7684 new_test \uff08 data \u8fd8\u662f 1 \uff09\u5bf9 test \u8fdb\u884c\u4e86\u79fb\u52a8\u8d4b\u503c\uff0c\u8986\u76d6\u4e86 ++ \u7684\u6548\u679c\uff0c\u6545\u800c test.data \u8fd8\u662f 1 \u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u907f\u514d\u4e3b\u51fd\u6570\u7684\u5c40\u90e8\u53d8\u91cf\u548c\u51fd\u6570\u4f53\u5c40\u90e8\u53d8\u91cf\u91cd\u540d\u5fc5\u7136\u662f\u4e2a\u597d\u4e60\u60ef\uff01 \u5168\u5c40\u578b\u91cd\u8f7d\u524d\u540e\u7f00\u8fd0\u7b97\u7b26 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 #include <iostream> using namespace std ; class A { public : int data ; A () { data = 0 ; } A ( int i ) { data = i ; } }; A operator ++ ( A & a ) { ++ a . data ; return a ; } A operator ++ ( A & a , int ) { A new_a ( a . data ); ++ a . data ; return new_a ; } int main () { A a ( 1 ); cout << ( ++ a ). data << endl ; // 2 cout << ( a ++ ). data << endl ; // 2 cout << a . data << endl ; // 3 return 0 ; }","title":"\u524d\u540e\u7f00\u91cd\u8f7d"},{"location":"languages/c-oop/class-easy/#_21","text":"\u5728\u81ea\u5b9a\u4e49\u7c7b\u4e2d\u4e5f\u53ef\u4ee5\u91cd\u8f7d\u51fd\u6570\u8fd0\u7b97\u7b26 () \uff0c\u5b83\u4f7f\u5bf9\u8c61\u770b\u4e0a\u53bb\u5982\u540c\u662f\u4e00\u4e2a\u51fd\u6570\u540d\uff0c\u53ef\u4ee5\u79f0\u4e4b\u4e3a\u51fd\u6570\u5bf9\u8c61\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 #include <iostream> using namespace std ; class Test { public : int operator ()( int a , int b ) { cout << \"operator() called. \" << a << ' ' << b << endl ; return a + b ; } }; int main () { Test sum ; int s = sum ( 3 , 4 ); cout << \"a + b = \" << s << endl ; // 7 int t = sum . operator ()( 5 , 6 ); cout << \"a + b = \" << s << endl ; // 11 return 0 ; } \u5b9e\u9645\u4e0a\u5728\u8c03\u7528 Obj(real_parameters) \u65f6\uff0c\u7b49\u4ef7\u4e8e\u8c03\u7528\u4e86 Obj.operator()(real_parameters) \uff0c\u6ce8\u610f\u8fd9\u91cc\u8c03\u7528\u7684\u4e0d\u662f\u6784\u9020\u51fd\u6570\u3002","title":"\u51fd\u6570\u8fd0\u7b97\u7b26\u91cd\u8f7d"},{"location":"languages/c-oop/class-easy/#_22","text":"\u5373\u91cd\u8f7d [] \u8fd0\u7b97\u7b26\u3002 \u5982\u679c\u8fd4\u56de\u7c7b\u578b\u662f\u5f15\u7528\uff0c\u5219\u6570\u7ec4\u8fd0\u7b97\u7b26\u8c03\u7528\u53ef\u4ee5\u51fa\u73b0\u5728\u7b49\u53f7\u5de6\u8fb9\uff0c\u63a5\u53d7\u8d4b\u503c\uff0c\u5373 Obj[index] = value \uff08\u4e5f\u5c31\u662f\u8fd4\u56de\u5de6\u503c\uff09\u3002\u5982\u679c\u8fd4\u56de\u7c7b\u578b\u4e0d\u662f\u5f15\u7528\uff0c\u5219\u53ea\u80fd\u51fa\u73b0\u5728\u7b49\u53f7\u53f3\u8fb9 Var = Obj[index] \uff08\u4e5f\u5c31\u662f\u6210\u5458\u51fd\u6570\u51fd\u6570\u8fd4\u56de\u4e86\u53f3\u503c\uff0c\u4f46\u53f3\u503c\u4e0d\u53ef\u4ee5\u8d4b\u503c\uff09\u3002 \u6ce8\u610f\u5230\uff0c\u8fd9\u91cc Obj \u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u6570\u7ec4\u3002\u8fd9\u662f\u5bf9\u4e8e\u4e00\u4e2a\u7c7b\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6210\u5458\u51fd\u6570\u6765\u91cd\u8f7d\u6570\u7ec4\u4e0b\u6807\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 #include <iostream> #include <cstring> using namespace std ; char week_name [ 7 ][ 4 ] = { \"mon\" , \"tue\" , \"wed\" , \"thu\" , \"fri\" , \"sat\" , \"sun\" }; class WeekTemperature { int temperature [ 7 ]; int error_temperature ; public : int & operator [] ( const char * name ) { for ( int i = 0 ; i < 7 ; i ++ ) { if ( strcmp ( week_name [ i ], name ) == 0 ) return temperature [ i ]; } return error_temperature ; } }; int main () { WeekTemperature beijing ; beijing [ \"mon\" ] = -3 ; beijing [ \"tue\" ] = -1 ; cout << \"Monday Temperature: \" << beijing [ \"mon\" ] << endl ; // \"Monday Temperature: -3\" return 0 ; } const char* name \u8868\u793a\u4e00\u4e2a\u5e38\u91cf\u5b57\u7b26\u4e32\uff0c\u907f\u514d\u4fee\u6539\u3002\u8fd9\u4e2a\u5b57\u7b26\u4e32\u5e38\u91cf\u5c31\u662f\u5728 [] \u91cc\u9762\u7684\u5185\u5bb9\uff0c\u6bd4\u5982 [\"test\"] \u90a3\u4f60\u7684\u53c2\u6570\u5c31\u662f \"test\" \uff08\u6ce8\u610f\u5230\u5fc5\u987b\u8981\u6709\u53cc\u5f15\u53f7\u624d\u80fd\u662f\u5b57\u7b26\u4e32\uff09\u3002 \u6b64\u5904\uff0c\u5bf9\u4e8e private: \u505a\u4e00\u8bf4\u660e\uff0c temp \u662f\u79c1\u6709\u7684\uff0c\u6240\u4ee5\u76f4\u63a5\u8bbf\u95ee temp \u8fd9\u4e2a\u540d\u5b57\u4e0d\u53ef\u884c\uff0c\u4f46\u662f\u53ef\u901a\u8fc7\u5176\u4ed6\u65b9\u5f0f\u8bbf\u95ee\u5176\u5f15\u7528\uff0c\u8fdb\u800c\u53ef\u4fee\u6539\u5185\u5b58\u7a7a\u95f4\u3002 \u8fd9\u4e2a\u540d\u5b57\u88ab\u4fdd\u62a4\u4e86\uff0c\u4f46\u662f\u4ed6\u7684\u5185\u5b58\u5355\u5143\u6ca1\u6709\u88ab\u4fdd\u62a4\u3002 private: \u4e00\u822c\u7528\u4e8e\u4fee\u9970\u7c7b\u7684\u5185\u90e8\u5c5e\u6027\uff08\u53d8\u91cf\uff09\u548c\u65b9\u6cd5\uff08\u51fd\u6570\uff09\uff08\u5373\u90a3\u4e9b\u4e0d\u60f3\u66b4\u9732\u7ed9\u5916\u90e8\u7684\uff09\uff0c\u5b83\u4fdd\u8bc1\u4e86\u5b83\u4fee\u9970\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u4e0d\u80fd\u5728\u7c7b\u7684\u5916\u90e8\u88ab \u76f4\u63a5 \u8bbf\u95ee\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7\u7c7b\u7684\u4e00\u4e9b\u516c\u6709\u65b9\u6cd5\u5b9e\u73b0\u95f4\u63a5\u8bbf\u95ee\u3002\u4f8b\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 #include <iostream> using namespace std ; class Test { private : int i ; public : Test ( int j ) : i ( j ) { } void print () { cout << this -> i ; } }; int main () { Test test ( 1 ); int & b = test . i ; b ++ ; test . print (); return 0 ; } \u8fd9\u91cc\u5c06\u4f1a\u8bbf\u95ee\u5931\u8d25\uff0c\u56e0\u4e3a\u4e3b\u51fd\u6570\u5185\u4e0d\u53ef\u8bbf\u95ee\u76f4\u63a5 private \u6210\u5458\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 #include <iostream> using namespace std ; class Test { private : int i ; public : Test ( int j ) : i ( j ) { } void print () { cout << this -> i ; } int & setTest () { return this -> i ; } }; int main () { Test test ( 1 ); int & b = test . setTest (); b ++ ; test . print (); return 0 ; } \u6b64\u5904\uff0c\u6211\u901a\u8fc7 setTest \u8fd9\u4e00 public \u65b9\u6cd5\u5f97\u5230\u4e86 i \u7684\u5f15\u7528\uff0c\u518d\u6784\u9020\u4e86\u53e6\u5916\u4e00\u4e2a\u5f15\u7528\u3002\u76f4\u63a5\u7ed5\u8fc7\u4e86\u53d8\u91cf\uff0c\u5bf9\u5176\u6307\u5411\u7684\u5185\u5b58\u7a7a\u95f4\u8fdb\u884c\u4e86\u64cd\u4f5c\u3002","title":"\u6570\u7ec4\u4e0b\u6807\u91cd\u8f7d"},{"location":"languages/c-oop/class-easy/#_23","text":"= \u3001 [] \u3001 () \u3001 -> \u53ea\u80fd\u901a\u8fc7\u6210\u5458\u51fd\u6570\u6765\u91cd\u8f7d\u3002 \u8fd9\u91cc\u5176\u5b9e\u53ef\u4ee5\u8054\u7cfb\u5230\u4e4b\u540e\u5b66\u4e60\u7684\u62f7\u8d1d\u8d4b\u503c\u8fd0\u7b97\u548c\u79fb\u52a8\u8d4b\u503c\u8fd0\u7b97\uff0c\u56e0\u4e3a\u672c\u8d28\u4e0a\u4e8c\u8005\u5c31\u662f\u5b9e\u73b0\u65b9\u5f0f\u503c\u5f97\u63a8\u7a76\u7684\u4e24\u79cd\u8fd0\u7b97\u7b26\u91cd\u8f7d\u3002 \u5f53\u6211\u4eec\u6ca1\u6709\u663e\u5f0f\u5730\u5728\u7c7b\u5185\u5b9a\u4e49\u8fd9\u4e24\u4e2a\u8fd0\u7b97\u7b26\uff08\u91cd\u8f7d\uff09\u65f6\uff0c\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u751f\u6210\u7f3a\u5931\u7684\u90e8\u5206\u3002\u7f16\u8bd1\u5668\u65e0\u6cd5\u83b7\u77e5\uff08\u6216\u8005\u81f3\u5c11\u6ca1\u6709\u5c1d\u8bd5\u53bb\u83b7\u77e5\uff09\u7c7b\u4ee5\u5916\u5df2\u7ecf\u91cd\u8f7d\u4e86 operator= \uff0c\u5b83\u5728\u7f16\u8bd1\u8fd9\u4e2a\u7c7b\u65f6\u53d1\u73b0\u8fd9\u4e2a\u7c7b\u6ca1\u6709\u91cd\u8f7d operator= \uff0c\u4e8e\u662f\u5c31\u7ed9\u5b83\u8865\u4e0a\u4e86\u4e00\u4e2a\u3002\u4f46\u5982\u679c\u4e4b\u540e\u53c8\u5728\u7c7b\u4ee5\u5916\u91cd\u8f7d\u4e86\u4e00\u4e2a operator= \uff0c\u8fd9\u5c31\u4f1a\u5bfc\u81f4\u8c03\u7528\u7684\u65f6\u5019\u4e0d\u77e5\u9053\u7528\u54ea\u4e2a\uff0c\u4ea7\u751f\u6b67\u4e49\u3002\u7efc\u4e0a\uff0cC++ \u7981\u6b62\u4e86\u5728\u7c7b\u4ee5\u5916\u91cd\u8f7d operator= \u3002 \u6362\u8a00\u4e4b\uff0c\u7f16\u8bd1\u5668\u7f16\u8bd1\u7c7b\u65f6\u80fd\u770b\u5230\u7c7b\u5185\u91cd\u8f7d\u7684\u8d4b\u503c\u8fd0\u7b97\u7b26\uff0c\u5c31\u4e0d\u4f1a\u81ea\u52a8\u751f\u6210 = \u7684\u91cd\u8f7d\u3002\u4f46\u5168\u5c40\u7684\u7f16\u8bd1\u5668\u65e0\u6cd5\u5728\u7f16\u8bd1\u65f6\u68c0\u6d4b\u5230\uff0c\u53ea\u6709\u5728\u94fe\u63a5\u7684\u65f6\u5019\u624d\u80fd\u68c0\u6d4b\u5230\u3002\u800c\u6b64\u65f6\u4f1a\u94fe\u63a5\u6b67\u4e49\u51fd\u6570\u3002 \u4ec5\u4ec5\u662f\u53ea\u662f\u94fe\u63a5\u4e24\u4e2a\u6b67\u4e49\u51fd\u6570\u5e76\u4e0d\u4f1a\u51fa\u9519\uff0c\u5728\u53d1\u751f\u6709\u6b67\u4e49\u7684\u8c03\u7528\u7684\u65f6\u5019\u624d\u4f1a\u6709\u95ee\u9898\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u5728\u7c7b\u5916\u91cd\u8f7d operator= \uff0c\u800c\u4e0d\u8c03\u7528 = \uff0c\u662f\u4e0d\u4f1a warning \u6216\u8005 error \u7684\u3002\u6bd4\u5982\u6211\u4eec\u751a\u81f3\u53ef\u4ee5\u540c\u65f6\u5b9a\u4e49 int foo(int x, int y = 1) \u548c int foo(int x) \u8fd9\u4e24\u4e2a\u51fd\u6570\uff0c\u53ea\u6709\u4f7f\u7528\u4e86 foo(x) \u624d\u4f1a\u5bfc\u81f4 CE\u3002 1 2 3 4 5 6 7 8 9 #include <iostream> using namespace std ; void func ( int x ) { }; void func ( int x , int y = 0 ) { } int main () { cout << \"1\" << endl ; return 0 ; } // OK!","title":"\u53ea\u80fd\u6210\u5458\u51fd\u6570\u578b\u91cd\u8f7d\u7684\u8fd0\u7b97\u7b26"},{"location":"languages/c-oop/class-easy/#_24","text":"\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u7c7b\uff0c\u867d\u7136\u53ef\u4ee5\u50cf\u5185\u7f6e\u7c7b\u578b\u90a3\u6837\u5b9a\u4e49\u53d8\u91cf\uff08\u5bf9\u8c61\uff09\uff0c\u4f46\u60f3\u8981\u4f7f\u7528\u6d41\u8fd0\u7b97\u7b26\u8f93\u5165\u3001\u8f93\u51fa\u5bf9\u8c61\uff0c\u5219\u8fd8\u9700\u8981\u4e3a\u7c7b\u5b9a\u4e49\u6d41\u8fd0\u7b97\u7b26\u91cd\u8f7d\u3002 \u8bed\u6cd5 1 2 istream & operator >> ( istream & in , Test & dst ); ostream & operator << ( ostream & out , const Test & src ); \u51fd\u6570\u540d\u4e3a operator>> \u548c operator<< \u3002 \u4e0d\u4fee\u6539 istream \u548c ostream \u7c7b\u7684\u60c5\u51b5\u4e0b\uff0c\u53ea\u80fd\u4f7f\u7528\u5168\u5c40\u51fd\u6570\u91cd\u8f7d\u3002 \u8fd4\u56de\u503c\u4e3a istream& \u548c ostream& \u3002\u5747\u4e3a\u5f15\u7528\u3002 \u53c2\u6570\u5206\u522b\u4e3a\u6d41\u5bf9\u8c61\u7684\u5f15\u7528\u3001\u76ee\u6807\u5bf9\u8c61\u7684\u5f15\u7528\u3002\u5bf9\u4e8e\u8f93\u51fa\u6d41\uff0c\u76ee\u6807\u5bf9\u8c61\u4e00\u822c\u662f\u5e38\u91cf\u5f15\u7528\u3002 \u5907\u6ce8\uff0c\u56e0\u4e3a\u6d41\u8fd0\u7b97\u7b26\u5f80\u5f80\u9700\u8981\u8f93\u51fa private \u6570\u636e\uff0c\u6545\u800c\u5f80\u5f80\u8bbe\u4e3a\u53cb\u5143\u51fd\u6570\u5e76\u5728\u7c7b\u5185\u58f0\u660e\uff0c\u5e76\u5c3d\u91cf\u5728\u7c7b\u5916\u65f6\u5b9e\u73b0\u3002\u540c\u65f6\uff0c\u5728\u7c7b\u5916\u5b9e\u73b0\u65f6\uff0c\u5df2\u7ecf\u4e0d\u7528\u518d\u5199 friend \u4e86\uff0c friend \u53ea\u662f\u4e00\u4e2a\u5168\u5c40\u51fd\u6570\u5728\u7c7b\u5185\u7684\u6807\u8bb0\u3002 \u4e3a\u4ec0\u4e48\u6d41\u8fd0\u7b97\u7b26\u4e0d\u80fd\u662f\u6210\u5458\u51fd\u6570\u91cd\u8f7d\uff1f \u5b9e\u9645\u4e0a\uff0c\u8fd9\u53e5\u8bdd\u6307\u7684\u662f\uff0c\u6d41\u8fd0\u7b97\u7b26\u4e0d\u80fd\u662f\u67d0\u4e2a\u5bf9\u8c61\u7684\u6210\u5458\u51fd\u6570\u91cd\u8f7d\uff0c\u56e0\u4e3a\u6211\u4eec\u5728\u8c03\u7528\u6d41\u8fd0\u7b97\u7b26\u65f6\uff0c\u8c03\u7528\u987a\u5e8f\u662f cout << a \u800c\u4e0d\u662f a << cout \u3002\u4ece\u800c\u53ef\u4ee5\u770b\u51fa\uff0c\u8c03\u7528\u7684\u662f ostream \u7c7b\u7684\u4e00\u4e2a\u6210\u5458\u51fd\u6570\uff0c\u800c\u4e0d\u662f a \u7684\u7c7b\u7684\u6210\u5458\u51fd\u6570\u3002 \u5b9e\u4f8b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 #include <iostream> using namespace std ; class Test { int id ; public : Test ( int i ) : id ( i ) { cout << \"obj_\" << id << \" created \\n \" ; } friend istream & operator >> ( istream & in , Test & dst ); friend ostream & operator << ( ostream & out , const Test & src ); }; istream & operator >> ( istream & in , Test & dst ) { in >> dst . id ; return in ; } ostream & operator << ( ostream & out , const Test & src ) { out << src . id << endl ; return out ; } int main () { Test obj ( 1 ); cout << obj ; cin >> obj ; cout << obj ; return 0 ; } \u6ce8\u610f\u5230\uff0c\u51fd\u6570\u4f53\u5185\u7528\u7684\u90fd\u662f in \u548c out \uff0c\u800c\u4e0d\u662f cin \u548c cout \uff0c\u56e0\u4e3a\u4f60\u5728\u91cd\u8f7d out \uff0c\u4f60\u5e0c\u671b\u4f60\u7684 out \u5bf9\u4e8e\u6240\u6709\u7684\u8f93\u51fa\u6d41\u90fd\u9002\u7528\uff0c\u90a3\u4e48\u4e0d\u80fd\u5199 cout \u3002\u56e0\u4e3a\u8fd8\u6709 fout \u7b49\u7b49\u3002\u5982\u679c\u5199\u4e86 cout \uff0c\u6ca1\u6709\u95ee\u9898\uff0c\u4f46\u662f\u6ca1\u6cd5\u7ed9 fout \u8fd9\u4e9b\u7528\uff0c\u56e0\u6b64\u5199 out \u4e60\u60ef\u66f4\u597d\u3002","title":"\u6d41\u8fd0\u7b97\u7b26\u91cd\u8f7d"},{"location":"languages/c-oop/combination-and-derivation/","text":"\u7ec4\u5408\u4e0e\u7ee7\u627f \u00b6 \u7ec4\u5408 \u00b6 \u5b9a\u4e49 \u00b6 \u5982\u679c\u5bf9\u8c61 a \u662f\u5bf9\u8c61 b \u7684\u4e00\u4e2a\u7ec4\u6210\u90e8\u5206\uff0c\u5219\u79f0 b \u4e3a a \u7684\u6574\u4f53\u5bf9\u8c61\uff0c a \u4e3a b \u7684\u90e8\u5206\u5bf9\u8c61\u3002\u5e76\u628a b \u548c a \u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u79f0\u4e3a\u201c\u6574\u4f53-\u90e8\u5206\u201d\u5173\u7cfb\uff08\u4e5f\u53ef\u79f0\u4e3a\u201c\u7ec4\u5408\u201d\u6216\u201chas-a\u201d\u5173\u7cfb\uff09\u3002 \u4e24\u79cd\u5b9e\u73b0\u65b9\u5f0f \u00b6 \u516c\u6709\u6210\u5458 \u00b6 \u5df2\u6709\u7c7b\u7684\u5bf9\u8c61\u4f5c\u4e3a\u65b0\u7c7b\u7684\u516c\u6709\u6570\u636e\u6210\u5458\uff0c\u8fd9\u6837\u901a\u8fc7\u5141\u8bb8\u76f4\u63a5\u8bbf\u95ee\u5b50\u5bf9\u8c61\u800c\u201c\u63d0\u4f9b\u201d\u65e7\u7c7b\u63a5\u53e3\u3002 \u79c1\u6709\u6210\u5458 \u00b6 \u5df2\u6709\u7c7b\u7684\u5bf9\u8c61\u4f5c\u4e3a\u65b0\u7c7b\u7684\u79c1\u6709\u6570\u636e\u6210\u5458\u3002\u65b0\u7c7b\u53ef\u4ee5\u8c03\u6574\u65e7\u7c7b\u7684\u5bf9\u5916\u63a5\u53e3\uff0c\u53ef\u4ee5\u4e0d\u4f7f\u7528\u65e7\u7c7b\u539f\u6709\u7684\u63a5\u53e3\uff08\u76f8\u5f53\u4e8e\u5bf9\u63a5\u53e3\u4f5c\u4e86\u8f6c\u6362\uff09\u3002 \u6211\u4eec\u6709\u5982\u4e0b\u547d\u540d\u4e24\u7c7b\u7ec4\u5408\u65b9\u5f0f\uff1a 1 2 3 4 private : Wheel w ; // private \u7ec4\u5408 public : Engine e ; // public \u7ec4\u5408 public \u63a5\u53e3\u8bbf\u95ee private \u6570\u636e \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 #include <iostream> using namespace std ; class Wheel { int _num ; public : void set ( int n ) { _num = n ; } }; class Engine { public : int _num ; void set ( int n ) { _num = n ; } }; class Car { private : Wheel w ; public : Engine e ; // \u516c\u6709\u6210\u5458\uff0c\u76f4\u63a5\u8bbf\u95ee\u5176\u63a5\u53e3 void setWheel ( int n ) { w . set ( n ); } // \u63d0\u4f9b\u79c1\u6709\u6210\u5458\u7684\u8bbf\u95ee\u63a5\u53e3 }; int main () { Car c ; c . e . set ( 1 ); c . setWheel ( 4 ); return 0 ; } Car \u7531 Engine \u548c Wheel \u4e24\u90e8\u5206\u7ec4\u6210\u3002\u5982\u679c\u6211\u7684 Wheel \u8bbe\u4e3a\u79c1\u6709\uff0c\u90a3\u4e48\u6211\u6ca1\u6cd5\u76f4\u63a5\u5728\u7c7b\u5916\uff08\u4e3b\u51fd\u6570\u91cc\uff09\u8bbf\u95ee w.set(n) \uff0c\u56e0\u4e3a\u7c7b\u5916\u65e0\u6cd5\u8bbf\u95ee\u79c1\u6709\u6210\u5458\u3002\u79c1\u6709\u6210\u5458\u7684\u6240\u6709\u63a5\u53e3\u4f1a\u5728\u7c7b\u5916\u6574\u4f53\u79c1\u6709\u5316\uff0c\u4f46\u662f\u79c1\u6709\u6210\u5458\u7684 public \u63a5\u53e3\u4ecd\u7136\u53ef\u4ee5\u88ab\u7c7b\u5185\u51fd\u6570\u8c03\u7528\u3002\u53ef\u4ee5\u8bbe\u7f6e public \u63a5\u53e3 setWheel \uff0c setW Weel \u662f\u4e2a public \u7684\u7c7b\u5185\u51fd\u6570\uff0c\u53ef\u4ee5\u8bbf\u95ee\u7c7b\u5185 private \u6210\u5458\uff0c\u4ece\u800c\u6211\u80fd\u591f\u901a\u8fc7\u6b64\u63a5\u53e3\u8bbf\u95ee\u5230 private \u6570\u636e\u6210\u5458 Wheel w \u7684 public \u63a5\u53e3\uff0c\u4f46\u662f\u4e5f\u65e0\u6cd5\u76f4\u63a5\u8bbf\u95ee private \u90e8\u5206\u7684 private \u6570\u636e\u3002\u540c\u7406\uff0c\u89c2\u5bdf Wheel \u7c7b\u548c Engine \u7c7b\u7684\u5199\u6cd5\uff0c\u5176\u5b9e\u4e5f\u662f\u8fd9\u79cd\u7ed9 private \u5bf9\u8c61\u6dfb\u52a0 public \u63a5\u53e3\u7684\u601d\u60f3\u3002 \u5c06\u6b64\u4f8b\u5b50\u8fdb\u4e00\u6b65\u9610\u8ff0\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 #include <iostream> using namespace std ; class Wheel { int _num ; public : Wheel ( int x ) { _num = x ; } void set ( int n ) { _num = n ; } // \u6ca1\u6709 get \u51fd\u6570\u662f\u6ca1\u6cd5\u76f4\u63a5\u5728 Car \u7c7b\u91cc\u8bbf\u95ee\u5230 private \u6210\u5458\u7684 int getwheelvalue () { return this -> _num ; } }; class Engine { public : Engine ( int y ) { _num = y ; } int _num ; void set ( int n ) { _num = n ; } }; class Car { private : Wheel w ; public : Engine e ; // \u516c\u6709\u6210\u5458\uff0c\u76f4\u63a5\u8bbf\u95ee\u5176\u63a5\u53e3 void setWheel ( int n ) { w . set ( n ); } // \u63d0\u4f9b\u79c1\u6709\u6210\u5458\u7684\u8bbf\u95ee\u63a5\u53e3 Car ( int x , int y ) : w ( x ), e ( y ) { } void print () { cout << \"my Engine is \" << this -> e . _num << \" my Wheel is \" << this -> w . getwheelvalue () << endl ; } }; int main () { Car c ( 5 , 3 ); c . print (); c . e . set ( 1 ); c . print (); c . setWheel ( 4 ); c . print (); return 0 ; } /* output: my Engine is 3 my Wheel is 5 my Engine is 1 my Wheel is 5 my Engine is 1 my Wheel is 4 */ \u7b2c\u4e00\uff0c Wheel w \u662f Car \u7684\u79c1\u6709\u6210\u5458\uff0c Car \u7684 public \u63a5\u53e3\u53ef\u4ee5\u8bbf\u95ee Car \u7684 private \u6570\u636e\u6210\u5458\uff0c\u6545\u800c\u53ef\u4ee5\u8bbf\u95ee w \uff0c\u4f46\u662f\u65e0\u6cd5\u8bbf\u95ee\u79c1\u6709\u6570\u636e\u6210\u5458\u7684\u79c1\u6709\u6570\u636e\u6210\u5458\uff0c\u6545\u800c\u65e0\u6cd5\u76f4\u63a5\u5728 print \u4e2d\u8f93\u51fa w._num \uff0c\u6211\u4eec\u9009\u62e9\u4e86\u518d\u5bf9 Wheel \u8bbe\u8ba1\u79c1\u6709\u6570\u636e\u6210\u5458\u7684\u63a5\u53e3 getWheelValue \u6765\u8bbf\u95ee Wheel \u7684 _num \u3002 \u7b2c\u4e8c\uff0c\u5bf9\u4e8e Car \u7684\u6784\u9020\u51fd\u6570\u7684\u521d\u59cb\u5316\u5217\u8868\uff0c\u5f53 Car \u7684\u6570\u636e\u6210\u5458\u662f int x \u65f6\uff0c\u6211\u4eec\u5199\u7684\u662f x(i) \uff0c\u800c\u4e0d\u662f int(i) \uff08\u5426\u5219\uff0c\u5982\u679c\u6709\u591a\u4e2a int \u7c7b\u7684\u6210\u5458\uff0c\u521d\u59cb\u5316\u5c31\u65e0\u6cd5\u8fdb\u884c\u4e86\uff09\u3002\u6240\u4ee5\u8fd9\u91cc\u5199\u7684\u4e5f\u662f w(x) \uff0c\u800c\u4e0d\u662f Wheel(x) \u3002\u8fd9\u91cc\u5176\u5b9e\u4e5f\u4f53\u73b0\u4e86\u57fa\u672c\u6570\u636e\u548c\u81ea\u5b9a\u4e49\u7c7b\u7684\u7c7b\u6bd4\u5173\u7cfb\u3002 \u7b2c\u4e09\uff0c\u6211\u4eec\u8fd9\u91cc\u91c7\u7528\u4e86\u521d\u59cb\u5316\u5217\u8868\u6765\u6784\u9020 Car \uff0c\u800c\u4e0d\u662f\u91c7\u7528\u51fd\u6570\u4f53\u5185\u8d4b\u503c\u3002\u56e0\u4e3a C++11 \u76f4\u63a5\u7981\u6b62\u4e86\u8fd9\u7c7b\u7684\u51fd\u6570\u4f53\u5185\u8d4b\u503c\u3002 \u6211\u4eec\u5bf9\u6b64\u7684\u7406\u89e3\uff1a\u5982\u679c\u662f\u51fd\u6570\u4f53\u5185\u8d4b\u503c\u6765\u6784\u9020 Car \uff0c\u90a3\u4e48\u9700\u8981\u5b9a\u4e49 Wheel \u548c Engine \u7684\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff08\u5982\u679c\u6211\u4eec\u4e0d\u5b9a\u4e49\u5e26\u6709\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\uff0c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u751f\u6210\uff09\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u7c7b\u4f3c w = 5 \u8fd9\u6837\u7684\u8bed\u53e5\u8fd8\u9700\u8981\u9690\u5f0f\u8c03\u7528\u5e26\u6709\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\u751f\u6210 Wheel(5) \uff0c\u7136\u540e\u8c03\u7528\u9690\u5f0f\u751f\u6210\u7684\u79fb\u52a8\u8d4b\u503c\u8bed\u53e5\u7ed9 w \u8d4b\u503c\u3002\u8fd9\u4e2a\u65b9\u5f0f\u6bd4\u8d77\u521d\u59cb\u5316\u5217\u8868\u6548\u7387\u4f4e\u4e0b\u592a\u591a\uff08\u5982\u6b64\u7981\u6b62\u53ef\u80fd\u8fd8\u6709\u5176\u4ed6\u7684\u56e0\u679c\u5173\u7cfb\uff09\u3002 \u6784\u9020\u4e0e\u6790\u6784 \u00b6 \u5b50\u5bf9\u8c61\u53c2\u6570\u6784\u9020 \u00b6 \u5b50\u5bf9\u8c61\u6784\u9020\u65f6\u82e5\u9700\u8981\u53c2\u6570\uff0c\u5219\u5e94\u5728\u5f53\u524d\u7c7b\u7684\u6784\u9020\u51fd\u6570\u7684\u521d\u59cb\u5316\u5217\u8868\u4e2d\u8fdb\u884c\u3002\u4e0d\u80fd\u591f\u901a\u8fc7\u5148\u9ed8\u8ba4\u6784\u9020\u3002\u7136\u540e\u518d\u5728\u51fd\u6570\u4f53\u5185\u8d4b\u503c\u3002 \u5177\u4f53\u800c\u8a00\uff0cC++11 \u7684\u89c4\u5b9a\u662f\u5176\u4ed6\u7c7b\u7684\u5b50\u5bf9\u8c61\u5fc5\u987b\u8981\u901a\u8fc7\u521d\u59cb\u5316\u5217\u8868\u6765\u6784\u9020\uff0c\u5982\u679c\u4e0d\u5199\u5728\u521d\u59cb\u5316\u5217\u8868\u91cc\uff0c\u90a3\u4e48\u5c31\u8c03\u7528\u9ed8\u8ba4\u6784\u9020\u3002 \u5982\u679c A \u7c7b\u5185\u7ec4\u5408\u6709\u5176\u4ed6\u7c7b B \u7684\u5bf9\u8c61\uff0c\u90a3\u4e48 B \u7684\u5bf9\u8c61\u5fc5\u987b\u8981\u901a\u8fc7\u521d\u59cb\u5316\u5217\u8868\u6765\u6784\u9020\uff0c\u53ef\u4ee5\u4e0d\u5199\u521d\u59cb\u5316\u5217\u8868\uff0c\u90a3\u4e48\u4f1a\u8c03\u7528 B \u7684\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u3002\u4f46\u662f\u4e00\u5b9a\u4e0d\u80fd\u5728 A \u7684\u6784\u9020\u51fd\u6570\u4f53\u5185\u8fdb\u884c\u6784\u9020\uff0c\u6548\u7387\u592a\u4f4e\u3002 \u8fd9\u4e2a\u5730\u65b9\u611f\u89c9\u4f1a\u548c\u6211\u4eec\u7684\u7406\u89e3\u53d1\u751f\u51b2\u7a81\uff0c\u56e0\u4e3a\u7c7b\u5f53\u4e2d\u7ecf\u5e38\u4f1a\u9700\u8981 int \u6570\u636e\u6210\u5458\u3002 int \u662f\u4e00\u4e2a\u7c7b\uff0c\u90a3\u96be\u9053 int \u53ea\u80fd\u5728\u521d\u59cb\u5316\u5217\u8868\u91cc\u8d4b\u503c\u5417\uff1f \u8fd9\u4e2a\u7406\u89e3\u662f\u9519\u7684\u3002 int \u4e0d\u80fd\u7b97\u662f\u4e00\u4e2a\u7c7b\uff0c\u5b83\u548c char \u3001 long \u3001 double \u90fd\u53ea\u662f\u57fa\u672c\u7684\u53d8\u91cf\u7c7b\u578b\u3002\u7ec4\u5408\u6307\u7684\u662f\u7c7b\u548c\u7c7b\u4e4b\u95f4\uff0c\u6570\u636e\u6210\u5458\u91cc\u7684 int \uff0c\u8fd9\u4e0d\u662f\u7ec4\u5408\u3002\u57fa\u672c\u6570\u636e\u7c7b\u578b\u548c\u81ea\u5df1\u5199\u7684\u7c7b\u4e0d\u662f\u4e00\u4e2a\u4e1c\u897f\u3002\u800c\u4e14\u5bf9\u4e8e\u77ed\u8d4b\u503c\u8bed\u53e5\uff0c\u5c3d\u91cf\u80fd\u653e\u521d\u59cb\u5316\u5217\u8868\u5c31\u4e0d\u653e\u51fd\u6570\u4f53\u5185\uff0c\u524d\u8005\u6548\u7387\u66f4\u9ad8\u3002 \u4f46\u662f std::vector \u662f\u4e2a\u5c01\u88c5\u597d\u4e86\u7684\u7c7b\uff0c #include <vector> \u5c31\u662f\u628a\u5305\u542b\u5b83\u7684\u5e93\u641e\u5230\u4f60\u7684\u7a0b\u5e8f\u4e2d\u3002 \u5b50\u5bf9\u8c61\u9ed8\u8ba4\u6784\u9020 \u00b6 \u82e5\u4f7f\u7528\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u6765\u6784\u9020\u5b50\u5bf9\u8c61\uff0c\u5219\u4e0d\u7528\u505a\u4efb\u4f55\u5904\u7406\u3002 \u6784\u9020\u6b21\u5e8f \u00b6 \u5148\u5b8c\u6210\u5b50\u5bf9\u8c61\u6784\u9020\uff0c\u518d\u5b8c\u6210\u7236\u5bf9\u8c61\u6784\u9020\u3002 \u6790\u6784\u6b21\u5e8f \u00b6 \u5b50\u5bf9\u8c61\u6784\u9020\u7684\u6b21\u5e8f\u4ec5\u7531\u5728\u7c7b\u4e2d\u58f0\u660e\u7684\u6b21\u5e8f\u6240\u51b3\u5b9a\u3002 \u6790\u6784\u51fd\u6570\u7684\u6b21\u5e8f\u4e0e\u6784\u9020\u51fd\u6570\u76f8\u53cd\uff0c\u4e5f\u5c31\u662f\u5b8c\u5168\u53cd\u7740\u6790\u6784\u4e00\u6b21\u5373\u53ef\u3002 \u4f8b\u5b50 \u6784\u9020\u4e0e\u6790\u6784\u7684\u6267\u884c\u987a\u5e8f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 #include <iostream> using namespace std ; class S1 { // Single1 \u7c7b\u522b int ID ; public : S1 ( int id ) : ID ( id ) { cout << \"S1(int)\" << endl ; } ~ S1 () { cout << \"~S1()\" << endl ; } }; class S2 { // Single2 \u7c7b\u522b public : S2 () { cout << \"S2()\" << endl ; } ~ S2 () { cout << \"~S2()\" << endl ; } }; class C3 { // Composite3 \u7c7b\u522b int num ; S1 sub_obj1 ; // \u6784\u9020\u51fd\u6570\u5e26\u53c2\u6570 S2 sub_obj2 ; // \u6784\u9020\u51fd\u6570\u4e0d\u5e26\u53c2\u6570 public : C3 () : num ( 0 ), sub_obj1 ( 123 ) { // \u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u5217\u8868\u4e2d\u6784\u9020\u5b50\u5bf9\u8c61 cout << \"C3()\" << endl ; } C3 ( int n ) : num ( n ), sub_obj1 ( 123 ) { cout << \"C3(int)\" << endl ; } C3 ( int n , int k ) : num ( n ), sub_obj1 ( k ) { cout << \"C3(int, int)\" << endl ; } ~ C3 () { cout << \"~C3()\" << endl ; } }; int main () { C3 a , b ( 1 ), c ( 2 ), d ( 3 , 4 ); return 0 ; } /* output: S1(int) S2() C3() S1(int) S2() C3(int) S1(int) S2() C3(int) S1(int) S2() C3(int, int) ~C3() ~S2() ~S1() ~C3() ~S2() ~S1() ~C3() ~S2() ~S1() ~C3() ~S2() ~S1() */ \u8f93\u51fa\u7ed3\u679c\uff0c\u524d\u9762 12 \u884c\uff0c\u6bcf\u4e09\u884c\u4e3a\u4e00\u4e2a\u5355\u4f4d\uff0c\u662f\u4e00\u4e2a\u6784\u9020\u3002\u4e14\u5148\u6309\u7167\u58f0\u660e\u6b21\u5e8f\u6784\u9020\u5b50\u5bf9\u8c61 sub_obj1 \uff0c\u4e4b\u540e\u662f sub_obj2 \uff0c\u6700\u540e\u5b8c\u6210 C3 \u6784\u9020\u3002 \u81f3\u4e8e\u6790\u6784\u987a\u5e8f\uff0c\u90a3\u5c31\u7eaf\u7cb9\u662f\u628a\u524d 12 \u884c\u5411\u4e0b\u5bf9\u6298\u3002 \u5bf9\u8c61\u7ec4\u5408\u7684\u62f7\u8d1d\u4e0e\u8d4b\u503c\uff08\u5bf9\u8bfe\u4ef6\u4e0a\u7684\u4f8b\u5b50\u8fdb\u884c\u4f18\u5316\uff0c\u66f4\u6e05\u695a\u4e9b\uff09 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 #include <iostream> using namespace std ; class C1 { public : int i ; C1 ( int n ) : i ( n ) { cout << \"C1 with int: \" << n << endl ; } C1 ( const C1 & other ) { // \u663e\u5f0f\u5b9a\u4e49\u62f7\u8d1d\u6784\u9020\u51fd\u6570 i = other . i ; cout << \"C1(const C1 &other)\" << endl ; } }; class C2 { public : int j ; C2 ( int n ) : j ( n ) { cout << \"C2 with int: \" << n << endl ; } C2 & operator = ( const C2 & right ) { // \u663e\u5f0f\u5b9a\u4e49\u8d4b\u503c\u8fd0\u7b97\u7b26 if ( this != & right ) { j = right . j ; cout << \"operator=(const C2&)\" << endl ; } return * this ; } }; class C3 { public : C1 c1 ; C2 c2 ; C3 () : c1 ( 0 ), c2 ( 0 ) { cout << \"C3 without arg\" << endl ; } C3 ( int i , int j ) : c1 ( i ), c2 ( j ) { cout << \"C3 with i and j\" << endl ; } void print () { cout << \"c1.i = \" << c1 . i << \" c2.j = \" << c2 . j << endl ; } }; int main () { C3 a ( 1 , 2 ); C3 b ( a ); // C1 \u6267\u884c\u663e\u5f0f\u5b9a\u4e49\u7684\u62f7\u8d1d\u6784\u9020\uff0cC2 \u6267\u884c\u9690\u5f0f\u5b9a\u4e49\u7684\u62f7\u8d1d\u6784\u9020 cout << \"b: \" ; b . print (); C3 c ; cout << \"c: \" ; c . print (); c = a ; // C1 \u6267\u884c\u9690\u5f0f\u5b9a\u4e49\u7684\u62f7\u8d1d\u8d4b\u503c\uff0cC2 \u6267\u884c\u663e\u5f0f\u5b9a\u4e49\u7684\u62f7\u8d1d\u8d4b\u503c cout << \"c: \" ; c . print (); return 0 ; } /* output: C1 with int: 1 C2 with int: 2 C3 with i and j C1(const C1 &other) b: c1.i = 1 c2.j = 2 C1 with int: 0 C2 with int: 0 C3 without arg c: c1.i = 0 c2.j = 0 operator=(const C2&) c: c1.i = 1 c2.j = 2 */ \u533a\u5206\u6570\u636e\u6765\u6e90 \u9519\u8bef\u7684\u662f\uff1a \u6ce8\u610f\uff0c int data{2018} \u548c int data = 2018 \u8fd9\u4e24\u4e2a\u5199\u6cd5\u4e00\u81f4\u3002\u8fd9\u91cc B \u7c7b\u7684 print \u51fd\u6570\u8f93\u51fa\u7684\u662f B \u7684 data \uff0c\u800c\u4e0d\u662f\u6570\u636e\u6210\u5458 a \u7684 data \u3002\u4f46\u662f\u6784\u9020\u51fd\u6570 B(int i): a(i) \u662f\u7528 2019 \u5728\u6784\u9020 a \uff0c\u8fd9\u4e00\u4e2a\u5c0f\u7ec6\u8282\u6bd4\u8f83\u5751\u3002 \u7ee7\u627f \u00b6 \u5b9a\u4e49 \u00b6 \u201c\u4e00\u822c-\u7279\u6b8a\u201d\u7ed3\u6784\uff0c\u4e5f\u79f0\u201c\u5206\u7c7b\u7ed3\u6784\u201d\uff0c\u662f\u7531\u4e00\u7ec4\u5177\u6709\u201c\u4e00\u822c-\u7279\u6b8a\u201d\u5173\u7cfb\u7684\u7c7b\u6240\u7ec4\u6210\u7684\u7ed3\u6784\uff0cC++ \u4f7f\u7528\u7ee7\u627f\u6765\u8868\u8fbe\u7c7b\u95f4\u7684\u201c\u4e00\u822c-\u7279\u6b8a\u7ed3\u6784\u201d\u3002 A \u7ee7\u627f B \uff0c\u5219\uff1a \u5c5e\u6027\u548c\u670d\u52a1\u4e0a\uff1a\u7c7b A \u5177\u6709\u7c7b B \u5168\u90e8\u7684\u5c5e\u6027\u548c\u670d\u52a1\uff0c\u800c\u4e14\u5177\u6709\u81ea\u5df1\u7279\u6709\u7684\u67d0\u4e9b\u5c5e\u6027\u6216\u670d\u52a1\u3002 A \u4e3a B \u7684\u7279\u6b8a\u7c7b\uff0c B \u4e3a A \u7684\u4e00\u822c\u7c7b\u3002 \u5bf9\u8c61\u5173\u7cfb\u4e0a\uff1a\u7c7b A \u7684\u5168\u90e8\u5bf9\u8c61\u90fd\u662f\u7c7b B \u7684\u5bf9\u8c61\uff0c\u800c\u4e14\u7c7b B \u4e2d\u5b58\u5728\u4e0d\u5c5e\u4e8e\u7c7b A \u7684\u5bf9\u8c61\u3002 A \u662f B \u7684\u7279\u6b8a\u7c7b\uff0c B \u662f A \u7684\u4e00\u822c\u7c7b\u3002 \u7ee7\u627f\u65b9\u5f0f\u4e0e\u8bed\u6cd5 \u00b6 \u88ab\u7ee7\u627f\u7684\u5df2\u6709\u7c7b\uff0c\u88ab\u79f0\u4e3a\u57fa\u7c7b\uff0c\u4e5f\u79f0\u201c\u7236\u7c7b\u201d\u3001\u201c\u4e00\u822c\u7c7b\u201d\u3002 \u901a\u8fc7\u7ee7\u627f\u5f97\u5230\u7684\u65b0\u7c7b\uff0c\u88ab\u4e3a\u6d3e\u751f\u7c7b\uff0c\u4e5f\u79f0\u201c\u5b50\u7c7b\u201d\u3001\u201c\u6269\u5c55\u7c7b\u201d\u3001\u201c\u7279\u6b8a\u7c7b\u201d\u3002 \u5e38\u89c1\u7684\u7ee7\u627f\u65b9\u5f0f\uff1a public \u3001 private \u3002 class Derived: [private] Base { } \uff0c\u7f3a\u7701\u7ee7\u627f\u65b9\u5f0f\u4e3a private \u7ee7\u627f\u3002 class Derived: public Base { } \u3002 class Derived: protected Base { } \uff0c protected \u7ee7\u627f\u5f88\u5c11\u88ab\u4f7f\u7528\u3002 \u6ce8\u610f\uff0c protected \u6570\u636e\u7ecf\u8fc7\u7ee7\u627f\u53ef\u4ee5\u7ed9\u5b50\u7c7b\u8bbf\u95ee\uff0c\u4f46\u662f private \u6570\u636e\u7ecf\u8fc7\u7ee7\u627f\u4e0d\u80fd\u7ed9\u5b50\u7c7b\u8bbf\u95ee\uff0c\u4e14\u4e8c\u8005\u90fd\u4e0d\u80fd\u7c7b\u5916\u8bbf\u95ee\u3002\u8fd9\u91cc\u63cf\u8ff0\u7684\u662f protected \u6570\u636e\u7c7b\u578b\uff0c\u800c\u4e0d\u662f protected \u7ee7\u627f\uff0c protected \u7ee7\u627f\u5f88\u5c11\u7528\u5230\u3002 \u65e0\u6cd5\u7ee7\u627f \u00b6 \u6784\u9020\u51fd\u6570\uff1a\u521b\u5efa\u6d3e\u751f\u7c7b\u5bf9\u8c61\u65f6\uff0c\u5fc5\u987b\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u6784\u9020\u51fd\u6570\u3002\u6d3e\u751f\u7c7b\u6784\u9020\u51fd\u6570\u8c03\u7528\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff0c\u4ee5\u521b\u5efa\u6d3e\u751f\u5bf9\u8c61\u7684\u57fa\u7c7b\u90e8\u5206\u3002C++11 \u65b0\u589e\u4e86\u7ee7\u627f\u6784\u9020\u51fd\u6570\u7684\u673a\u5236\uff08\u4f7f\u7528 using \uff09\uff0c\u4f46\u9ed8\u8ba4\u4e0d\u7ee7\u627f\u3002 \u6790\u6784\u51fd\u6570\uff1a\u91ca\u653e\u5bf9\u8c61\u65f6\uff0c\u5148\u8c03\u7528\u6d3e\u751f\u7c7b\u6790\u6784\u51fd\u6570\uff0c\u518d\u8c03\u7528\u57fa\u7c7b\u6790\u6784\u51fd\u6570\u3002\u8fd9\u4e2a\u548c\u7ec4\u5408\u76f8\u4f3c\u3002 \u8d4b\u503c\u8fd0\u7b97\u7b26\uff1a\u7f16\u8bd1\u5668\u4e0d\u4f1a\u7ee7\u627f\u57fa\u7c7b\u7684\u8d4b\u503c\u8fd0\u7b97\u7b26\uff08\u53c2\u6570\u4e3a\u57fa\u7c7b\uff09\u3002\u4f46\u4f1a\u81ea\u52a8\u5408\u6210\u9690\u5f0f\u5b9a\u4e49\u7684\u6d3e\u751f\u7c7b\u7684\u8d4b\u503c\u8fd0\u7b97\u7b26\uff08\u53c2\u6570\u4e3a\u6d3e\u751f\u7c7b\uff09\uff0c\u5176\u529f\u80fd\u4e3a\u8c03\u7528\u57fa\u7c7b\u7684\u8d4b\u503c\u8fd0\u7b97\u7b26\u3002 \u53cb\u5143\u51fd\u6570\uff1a\u4e0d\u662f\u7c7b\u6210\u5458\uff0c\u6545\u800c\u65e0\u6cd5\u7ee7\u627f \u4f8b\u5b50\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 #include <iostream> using namespace std ; class Base { public : int k = 0 ; void f () { cout << \"Base::f()\" << endl ; } Base & operator = ( const Base & right ) { if ( this != & right ) { k = right . k ; cout << \"operator= (const Base &right)\" << endl ; } return * this ; } }; class Derive : public Base { }; int main () { Derive d , d2 ; cout << d . k << endl ; // Base \u6570\u636e\u6210\u5458\u88ab\u7ee7\u627f d . f (); // Base::f() \u88ab\u7ee7\u627f Base e ; // d = e; // \u7f16\u8bd1\u9519\u8bef\uff0cBase \u7684\u8d4b\u503c\u8fd0\u7b97\u7b26\u4e0d\u88ab\u7ee7\u627f d = d2 ; // \u8c03\u7528\u9690\u5f0f\u5b9a\u4e49\u7684\u8d4b\u503c\u8fd0\u7b97\u7b26\uff0c\u6d3e\u751f\u7c7b\u9690\u5f0f\u5408\u6210\u7684\u8d4b\u503c\u8fd0\u7b97\u7b26\u4f1a\u8c03\u7528\u57fa\u7c7b\u7684\u8d4b\u503c\u8fd0\u7b97\u7b26 return 0 ; } /* output: 0 Base::f() operator= (const Base &right) */ \u6ce8\u610f\u524d\u6587\u63d0\u53ca\u6d3e\u751f\u7c7b\u4f1a\u81ea\u52a8\u751f\u6210\u8d4b\u503c\u8fd0\u7b97\u7b26\uff0c\u53c2\u6570\u4e3a\u6d3e\u751f\u7c7b\u3002\u4e5f\u5c31\u662f\u4ec5\u4ec5\u5728\u6d3e\u751f\u7c7b\u5bf9\u8c61\u95f4\u8d4b\u503c\uff0c\u57fa\u7c7b\u548c\u6d3e\u751f\u7c7b\u76f8\u4e92\u8d4b\u503c\u5728\u4e0d\u5b9a\u4e49\u7c7b\u578b\u8f6c\u6362\u7684\u60c5\u51b5\u4e0b\u662f\u4e0d\u5141\u8bb8\u7684\u3002 \u6784\u9020\u4e0e\u6790\u6784 \u00b6 \u7ee7\u627f\u4e0e\u7ec4\u5408\u5728\u6784\u9020\u4ee5\u53ca\u6790\u6784\u4e0a\u7684\u6267\u884c\u987a\u5e8f\u7c7b\u4f3c\u3002 \u57fa\u7c7b\u4e2d\u7684\u6570\u636e\u6210\u5458\uff0c\u901a\u8fc7\u7ee7\u627f\u6210\u4e3a\u6d3e\u751f\u7c7b\u5bf9\u8c61\u7684\u4e00\u90e8\u5206\uff0c\u9700\u8981\u5728\u6784\u9020\u6d3e\u751f\u7c7b\u5bf9\u8c61\u7684\u8fc7\u7a0b\u4e2d\u8c03\u7528\u57fa\u7c7b\u6784\u9020\u51fd\u6570\u6765\u6b63\u786e\u521d\u59cb\u5316\u3002 \u82e5\u6ca1\u6709\u663e\u5f0f\u8c03\u7528\uff0c\u5219\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u8c03\u7528\u57fa\u7c7b\u7684\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u3002 \u82e5\u60f3\u8981\u663e\u5f0f\u8c03\u7528\uff0c\u5219\u53ea\u80fd\u5728\u6d3e\u751f\u7c7b\u6784\u9020\u51fd\u6570\u7684\u521d\u59cb\u5316\u6210\u5458\u5217\u8868\u4e2d\u8fdb\u884c\uff0c\u65e2\u53ef\u4ee5\u8c03\u7528\u57fa\u7c7b\u4e2d\u4e0d\u5e26\u53c2\u6570\u7684\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u4e5f\u53ef\u4ee5\u8c03\u7528\u5408\u9002\u7684\u5e26\u53c2\u6570\u7684\u5176\u4ed6\u6784\u9020\u51fd\u6570\u3002\u5148\u6267\u884c\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u6765\u521d\u59cb\u5316\u7ee7\u627f\u6765\u7684\u6570\u636e\uff0c\u518d\u6267\u884c\u6d3e\u751f\u7c7b\u7684\u6784\u9020\u51fd\u6570\u3002 \u5bf9\u8c61\u6790\u6784\u65f6\uff0c\u5148\u6267\u884c\u6d3e\u751f\u7c7b\u6790\u6784\u51fd\u6570\uff0c\u518d\u6267\u884c\u7531\u7f16\u8bd1\u5668\u81ea\u52a8\u8c03\u7528\u7684\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u3002 \u4f8b\u5b50 \u9690\u5f0f\u8c03\u7528\u9ed8\u8ba4\u6784\u9020\u51fd\u6570 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 class Base { int data ; public : Base () : data ( 0 ) { cout << \"Base::Base(\" << data << \") \\n \" ; } Base ( int i ) : data ( i ) { cout << \"Base::Base(\" << data << \") \\n \" ; } }; class Derive : public Base { public : Derive () { cout << \"Derive::Derive()\" << endl ; } // \u65e0\u663e\u5f0f\u8c03\u7528\u57fa\u7c7b\u6784\u9020\u51fd\u6570\uff0c\u5219\u8c03\u7528\u57fa\u7c7b\u9ed8\u8ba4\u6784\u9020\u51fd\u6570 }; int main () { Derive obj ; return 0 ; } // g++ 1.cpp \u2013o 1.out -std=c++11 /* output: Base::Base(0) Derive::Derive() */ \u5148\u5b8c\u6210\u4e86\u57fa\u7c7b\u90e8\u5206\u7684\u6784\u9020\uff0c\u518d\u5b8c\u6210\u4e86\u6d3e\u751f\u7c7b\u90e8\u5206\u7684\u6784\u9020\u3002 \u663e\u5f0f\u8c03\u7528\u4e86\u57fa\u7c7b\u5e26\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 class Base { int data ; public : Base () : data ( 0 ) { cout << \"Base::Base(\" << data << \") \\n \" ; } Base ( int i ) : data ( i ) { cout << \"Base::Base(\" << data << \") \\n \" ; } }; class Derive : public Base { public : Derive ( int i ) : Base ( i ) { cout << \"Derive::Derive()\" << endl ; } // \u663e\u5f0f\u8c03\u7528\u57fa\u7c7b\u6784\u9020\u51fd\u6570 }; int main () { Derive obj ( 356 ); return 0 ; } // g++ 1.cpp \u2013o 1.out -std=c++11 \u663e\u5f0f\u8c03\u7528\u4e86\u57fa\u7c7b\u7684\u5e26\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\u53ea\u80fd\u5728\u521d\u59cb\u5316\u5217\u8868\u4e2d\u8fdb\u884c\u3002 \u542f\u7528 using \u5173\u952e\u5b57 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 class Base { int data ; public : Base ( int i ) : data ( i ) { cout << \"Base::Base(\" << i << \") \\n \" ; } }; class Derive : public Base { public : using Base :: Base ; // \u76f8\u5f53\u4e8e Derive(int i): Base(i) { }; }; int main () { Derive obj ( 356 ); return 0 ; } // g++ 1.cpp \u2013o 1.out -std=c++11 /* output: Base::Base(356) */ \u5728\u6d3e\u751f\u7c7b\u4e2d\u4f7f\u7528 using Base::Base \u6765\u7ee7\u627f\u57fa\u7c7b\u6784\u9020\u51fd\u6570\uff0c\u76f8\u5f53\u4e8e\u7ed9\u6d3e\u751f\u7c7b\u201c\u5b9a\u4e49\u201d\u4e86\u76f8\u5e94\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\u3002\u5982\u679c\u57fa\u7c7b\u91cc\u6709\u591a\u4e2a\u4e0d\u540c\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\uff0c using \u8bed\u53e5\u4f1a\u5206\u522b\u6784\u9020\u5bf9\u5e94\u7684\u4e0d\u540c\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\u3002 using \u4e00\u5e76\u542f\u7528 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 class Base { int data ; public : Base ( int i ) : data ( i ) { cout << \"Base::Base(\" << i << \") \\n \" ; } Base ( int i , int j ) { cout << \"Base::Base(\" << i << \",\" << j << \") \\n \" ; } }; class Derive : public Base { public : using Base :: Base ; // \u76f8\u5f53\u4e8e Derive(int i): Base(i) { }; // \u52a0\u4e0a Derive(int i, int j): Base(i, j) { }; }; int main () { Derive obj1 ( 356 ); Derive obj2 ( 356 , 789 ); return 0 ; } // g++ 1.cpp \u2013o 1.out -std=c++11 /* output: Base::Base(356) Base::Base(356, 789) */ \u5f53\u57fa\u7c7b\u5b58\u5728\u591a\u4e2a\u6784\u9020\u51fd\u6570\u65f6\uff0c\u4f7f\u7528 using \u4f1a\u7ed9\u6d3e\u751f\u7c7b\u81ea\u52a8\u6784\u9020\u591a\u4e2a\u76f8\u5e94\u7684\u6784\u9020\u51fd\u6570\u3002\u6ce8\u610f\u8fd9\u91cc\u662f\u6307\u4e00\u4e2a\u57fa\u7c7b\u6709\u591a\u4e2a\u6784\u9020\u51fd\u6570\uff0c\u800c\u4e0d\u662f\u591a\u91cd\u7ee7\u627f\u3002 \u5982\u679c\u57fa\u7c7b\u7684\u67d0\u4e2a\u6784\u9020\u51fd\u6570\u88ab\u58f0\u660e\u4e3a\u79c1\u6709\u6210\u5458\u51fd\u6570\uff0c\u5219\u4e0d\u80fd\u5728\u6d3e\u751f\u7c7b\u4e2d\u58f0\u660e\u7ee7\u627f\u8be5\u6784\u9020\u51fd\u6570\uff08\u5728\u5148\u524d\u7ae0\u8282\u6709\u53d9\u8ff0\u8fc7\u7ed3\u5408\u59d4\u6d3e\u6784\u9020\u51fd\u6570\u5c06\u6784\u9020\u51fd\u6570\u8bbe\u7f6e\u4e3a\u79c1\u6709\u6210\u5458\u51fd\u6570\u7684\u4f8b\u5b50\uff09\u3002 \u5982\u679c\u6d3e\u751f\u7c7b\u4f7f\u7528\u4e86\u7ee7\u627f\u6784\u9020\u51fd\u6570\uff0c\u7f16\u8bd1\u5668\u5c31\u4e0d\u4f1a\u518d\u4e3a\u6d3e\u751f\u7c7b\u751f\u6210\u9690\u5f0f\u5b9a\u4e49\u7684\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u3002 \u901a\u8fc7 using Base::Base \u6765\u7ee7\u627f\u6784\u9020\u51fd\u6570\u6709\u9650\u5236\uff0c\u53ef\u80fd\u9700\u8981\u6d3e\u751f\u7c7b\u5728\u57fa\u7c7b\u57fa\u7840\u4e4b\u5916\u6ca1\u6709\u6ca1\u6709\u65b0\u7684\u6570\u636e\u6210\u5458\uff0c\u4f46\u662f\u6d3e\u751f\u7c7b\u53ef\u4ee5\u6709\u65b0\u7684\u65b9\u6cd5\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 #include <iostream> using namespace std ; class Base { int data ; public : Base ( int i ) : data ( i ) { cout << \"Base::Base(\" << i << \") \\n \" ; } }; class Derive : public Base { public : int a ; using Base :: Base ; // \u76f8\u5f53\u4e8e Derive(int i): Base(i) { }; }; int main () { Derive obj ( 356 ); cout << obj . a << endl ; return 0 ; } // g++ 1.cpp \u2013o 1.out -std=c++11 \u5f53 a \u4e0d\u5c31\u5730\u521d\u59cb\u5316\u65f6\uff0c\u901a\u8fc7 using Base::Base \u6765\u7684\u6784\u9020\u51fd\u6570\u4f1a\u4f7f\u5f97 a \u7684\u503c\u5b8c\u5168\u4e0d\u786e\u5b9a\uff0c\u800c\u5c31\u5730\u521d\u59cb\u5316\u5316\u540e\u53ef\u4ee5\u786e\u5b9a\u3002 \u4e24\u7c7b\u7ee7\u627f\u65b9\u5f0f\u7684\u9009\u62e9 \u00b6 public \u7ee7\u627f \u00b6 \u57fa\u7c7b\u4e2d\u516c\u6709\u6210\u5458\u4ecd\u80fd\u5728\u6d3e\u751f\u7c7b\u4e2d\u4fdd\u6301\u516c\u6709\u3002\u539f\u63a5\u53e3\u53ef\u6cbf\u7528\uff0c\u6700\u5e38\u7528\u3002 private \u7ee7\u627f \u00b6 is-implementing-in-terms-of\uff08\u7167\u6b64\u5b9e\u73b0\uff09\uff1a\u7528\u57fa\u7c7b\u63a5\u53e3\u5b9e\u73b0\u6d3e\u751f\u7c7b\u529f\u80fd\u3002\u79fb\u9664\u4e86 is-a \u5173\u7cfb\u3002 \u901a\u5e38\u4e0d\u4f7f\u7528\uff0c\u7528 private \u7ec4\u5408\u66ff\u4ee3\u3002\u53ef\u7528\u4e8e\u9690\u85cf\u6216\u516c\u5f00\u57fa\u7c7b\u7684\u90e8\u5206\u63a5\u53e3\u3002\u516c\u5f00\u65b9\u6cd5\uff1a using \u5173\u952e\u5b57\u3002 \u6210\u5458\u8bbf\u95ee\u6743\u9650 \u00b6 \u57fa\u7c7b\u4e2d\u7684\u79c1\u6709\u6210\u5458\uff0c\u4e0d\u5141\u8bb8\u5728\u6d3e\u751f\u7c7b\u6210\u5458\u51fd\u6570\u4e2d\u8bbf\u95ee\uff0c\u4e5f\u4e0d\u5141\u8bb8\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\u8bbf\u95ee\u5b83\u4eec\uff0c\u4ec5\u5141\u8bb8\u57fa\u7c7b\u7684\u516c\u5f00\u63a5\u53e3\u8bbf\u95ee\u4ed6\u4eec\uff0c\u4f46\u662f\u57fa\u7c7b\u7684\u516c\u5f00\u63a5\u53e3\u5728\u4e0d\u540c\u7684\u7ee7\u627f\u5f53\u4e2d\u8bbf\u95ee\u6743\u9650\u4e0d\u540c\u3002\uff08\u7ec4\u5408\u5f53\u4e2d\u4e5f\u662f\u5982\u6b64\uff09 \u90a3\u4e48\u5982\u4f55\u8bbf\u95ee\u57fa\u7c7b\u4e2d\u7684\u79c1\u6709\u6210\u5458\uff1f \u60c5\u51b5\u4e00\uff0c public \u7ee7\u627f\u3002\u6d3e\u751f\u7c7b\u5bf9\u8c61\u548c\u6d3e\u751f\u7c7b\u6210\u5458\u51fd\u6570\u53ef\u4ee5\u8bbf\u95ee\u57fa\u7c7b\u7684\u516c\u5f00\u63a5\u53e3\u4ece\u800c\u8bbf\u95ee\u57fa\u7c7b\u79c1\u6709\u6210\u5458\u3002 \u60c5\u51b5\u4e8c\uff0c private \u7ee7\u627f\u3002\u548c private \u7ec4\u5408\u540c\u7406\uff0c\u5728\u7c7b\u5916\u65e2\u65e0\u6cd5\u76f4\u63a5\u8bbf\u95ee\u57fa\u7c7b\u7684 private \u6210\u5458\uff0c\u4e5f\u65e0\u6cd5\u8bbf\u95ee\u57fa\u7c7b\u7684 public \u6210\u5458\uff08\u56e0\u4e3a\u7ee7\u627f\u4e4b\u540e\u88ab\u79c1\u6709\u5316\u4e86\uff09\u3002 \u4efb\u4f55\u7ee7\u627f\u5f53\u4e2d\uff0c\u57fa\u7c7b\u7684 private \u6210\u5458\u90fd\u65e0\u6cd5\u88ab\u6d3e\u751f\u7c7b\u7684\u5171\u6709\u63a5\u53e3\u8bbf\u95ee\uff0c\u4ec5\u4ec5\u53ef\u4ee5\u88ab\u57fa\u7c7b\u7684\u5171\u6709\u90e8\u5206\u8bbf\u95ee\u3002 private \u7ee7\u627f\u4e2d\uff0c\u57fa\u7c7b\u7684 public \u63a5\u53e3\u4e0d\u80fd\u6d3e\u751f\u7c7b\u5bf9\u8c61\u76f4\u63a5\u8bbf\u95ee\uff0c\u4f46\u662f\u53ef\u4ee5\u88ab\u6d3e\u751f\u7c7b\u5bf9\u8c61\u7684\u7684\u5171\u6709\u63a5\u53e3\u53ef\u4ee5\u8bbf\u95ee\u3002 \u6545\u800c\u6211\u4eec\u5148\u8bbe\u7f6e\u57fa\u7c7b\u7684\u516c\u6709\u63a5\u53e3\u8bbf\u95ee\u57fa\u7c7b\u7684\u79c1\u6709\u6210\u5458\uff0c\u63a5\u7740\u8bbe\u8ba1\u6d3e\u751f\u7c7b\u7684\u516c\u6709\u63a5\u53e3\u8bbf\u95ee\u57fa\u7c7b\u7684\u516c\u6709\u63a5\u53e3\uff0c\u4ece\u800c\u95f4\u63a5\u5b9e\u73b0\u4e86\u8bbf\u95ee\u57fa\u7c7b\u7684\u79c1\u6709\u6210\u5458\u3002 \u8bbf\u95ee\u57fa\u7c7b\u79c1\u6709\u90e8\u5206\u53ea\u80fd\u901a\u8fc7\u57fa\u7c7b\u7684 public \u63a5\u53e3\u5b9e\u73b0\u3002 private \u7ee7\u627f\u65f6\uff0c\u57fa\u7c7b public \u63a5\u53e3\u4ec5\u53ef\u6d3e\u751f\u7c7b\u6210\u5458\u51fd\u6570\u8bbf\u95ee\uff0c\u4ece\u800c\u8bbf\u95ee\u57fa\u7c7b\u79c1\u6709\u90e8\u5206\u9700\u8981\u4e24\u6b21\u95f4\u63a5\u8bbf\u95ee\u3002\u800c public \u7ee7\u627f\u65f6\uff0c\u57fa\u7c7b public \u63a5\u53e3\u5bf9\u6d3e\u751f\u7c7b\u51fd\u6570\u548c\u7c7b\u5916\u51fd\u6570\u90fd\u662f\u5f00\u653e\u7684\u3002\u53ef\u4ee5\u6d3e\u751f\u7c7b\u5bf9\u8c61\u76f4\u63a5\u8bbf\u95ee\u57fa\u7c7b public \u63a5\u53e3\uff0c\u4e5f\u53ef\u4ee5\u6d3e\u751f\u7c7b\u5bf9\u8c61\u7684\u6210\u5458\u51fd\u6570\u8bbf\u95ee\u57fa\u7c7b public \u63a5\u53e3\u3002 \u57fa\u7c7b\u4e2d\u7684\u516c\u6709\u6210\u5458 \u5141\u8bb8\u5728\u6d3e\u751f\u7c7b\u6210\u5458\u51fd\u6570\u4e2d\u88ab\u8bbf\u95ee\u3002 \u82e5\u662f\u4f7f\u7528 public \u7ee7\u627f\u65b9\u5f0f\uff0c\u5219\u6210\u4e3a\u6d3e\u751f\u7c7b\u516c\u6709\u6210\u5458\uff0c\u53ef\u4ee5\u88ab\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\u8bbf\u95ee\uff0c\u4e5f\u53ef\u4ee5\u88ab\u6d3e\u751f\u7c7b\u6210\u5458\u51fd\u6570\u8bbf\u95ee\u3002 \u82e5\u662f\u4f7f\u7528 private / protected \u7ee7\u627f\u65b9\u5f0f\uff0c\u5219\u6210\u4e3a\u6d3e\u751f\u7c7b\u79c1\u6709/\u4fdd\u62a4\u6210\u5458\uff0c\u4e0d\u80fd\u5728\u7c7b\u5916\u76f4\u63a5\u8bbf\u95ee\u3002\u82e5\u60f3\u8ba9\u67d0 public \u6210\u5458\u6570\u636e\u5728 private / protected \u7ee7\u627f\u540e\u80fd\u88ab\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\u8bbf\u95ee\uff0c\u53ef\u5728\u6d3e\u751f\u7c7b public \u90e8\u5206\u7528\u5173\u952e\u5b57 using \u58f0\u660e\u5b83\u7684\u540d\u5b57\uff08 .h \u6587\u4ef6\u91cc\uff09\u3002\u6216\u8005\u6309\u7167\u4e0a\u6587\u8bbe\u8ba1\u6d3e\u751f\u7c7b\u7684\u5171\u6709\u63a5\u53e3\u8bbf\u95ee\u57fa\u7c7b\u7684 public \u6210\u5458\uff0c\u4f46\u662f\u4e5f\u65e0\u6cd5\u76f4\u63a5\u8bbf\u95ee\u6d3e\u751f\u7c7b\u5bf9\u8c61\u7684\u57fa\u7c7b\u7684 public \u6210\u5458\u3002 \u6240\u8c13\u4e0d\u80fd\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\u8bbf\u95ee\uff1a\u8fd9\u91cc\u662f\u6307\u76f4\u63a5\u5728\u7c7b\u5916\u901a\u8fc7 obj.data \u7684\u65b9\u5f0f\u8bbf\u95ee\uff0c\u800c\u4e0d\u662f\u8bf4\u4e0d\u53ef\u4ee5\u901a\u8fc7\u6d3e\u751f\u7c7b\u7684\u6210\u5458\u51fd\u6570\u6765\u8bbf\u95ee\u3002 \u57fa\u7c7b\u4e2d\u7684\u4fdd\u62a4\u6210\u5458 \u4fdd\u62a4\u6210\u5458\u5141\u8bb8\u5728\u6d3e\u751f\u7c7b\u6210\u5458\u51fd\u6570\u4e2d\u88ab\u8bbf\u95ee\uff0c\u4f46\u4e0d\u80fd\u88ab\u5916\u90e8\u51fd\u6570\u8bbf\u95ee\uff0c\u4e5f\u4e0d\u5141\u8bb8\u5bf9\u8c61\u76f4\u63a5\u8bbf\u95ee\u3002 \u4f8b\u5b50 public \u76f4\u63a5\u7ee7\u627f\u57fa\u7c7b\u5171\u6709\u63a5\u53e3 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 #include <iostream> using namespace std ; class Base { public : void baseFunc () { cout << \"in Base::baseFunc()...\" << endl ; } }; class Derive1 : public Base { }; // D1 \u7c7b\u7684\u7ee7\u627f\u65b9\u5f0f\u662f public \u7ee7\u627f int main () { Derive1 obj1 ; cout << \"calling obj1.baseFunc()...\" << endl ; obj1 . baseFunc (); // \u57fa\u7c7b\u63a5\u53e3\u6210\u4e3a\u6d3e\u751f\u7c7b\u63a5\u53e3\u7684\u4e00\u90e8\u5206\uff0c\u6d3e\u751f\u7c7b\u5bf9\u8c61\u53ef\u8c03\u7528 return 0 ; } /* output: calling obj1.baseFunc()... in Base::baseFunc()... */ private \u95f4\u63a5\u8bbf\u95ee\u57fa\u7c7b\u5171\u6709\u63a5\u53e3 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 #include <iostream> using namespace std ; class Base { public : void baseFunc () { cout << \"in Base::baseFunc()...\" << endl ; } }; class Derive2 : private Base { // \u79c1\u6709\u7ee7\u627f\uff0c\u7528\u57fa\u7c7b\u63a5\u53e3\u5b9e\u73b0\u6d3e\u751f\u7c7b\u529f\u80fd public : void deriveFunc () { cout << \u201c in Derive2 :: deriveFunc (), calling Base :: baseFunc ()... \" << endl; baseFunc (); // \u79c1\u6709\u7ee7\u627f\u65f6\uff0c\u57fa\u7c7b\u63a5\u53e3\u5728\u6d3e\u751f\u7c7b\u6210\u5458\u51fd\u6570\u4e2d\u53ef\u4ee5\u4f7f\u7528 } }; int main () { Derive2 obj2 ; cout << \"calling obj2.deriveFunc()...\" << endl ; obj2 . deriveFunc (); // obj2.baseFunc(); // ERROR: \u4e0d\u5141\u8bb8\u5728\u7c7b\u5916\u76f4\u63a5\u8bbf\u95ee\u57fa\u7c7b\u63a5\u53e3 return 0 ; } private \u7ee7\u627f\u7ed3\u5408 using \u542f\u7528\u57fa\u7c7b\u5171\u6709\u63a5\u53e3 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 #include <iostream> using namespace std ; class Base { public : void baseFunc () { cout << \"in Base::baseFunc()...\" << endl ; } }; class Derive3 : private Base { // \u79c1\u6709\u7ee7\u627f public : // \u79c1\u6709\u7ee7\u627f\u65f6\uff0c\u5728\u6d3e\u751f\u7c7b public \u90e8\u5206\u58f0\u660e\u57fa\u7c7b\u6210\u5458\u540d\u5b57 using Base :: baseFunc ; }; int main () { Derive3 obj3 ; cout << \"calling obj3.baseFunc()...\" << endl ; obj3 . baseFunc (); // \u57fa\u7c7b\u63a5\u53e3\u5728\u6d3e\u751f\u7c7b public \u90e8\u5206\u58f0\u660e\uff0c\u5219\u6d3e\u751f\u7c7b\u5bf9\u8c61\u53ef\u8c03\u7528 return 0 ; } \u4fdd\u62a4\u6210\u5458\u7684\u8bbf\u95ee 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 #include <iostream> using namespace std ; class Base { private : int a { 0 }; protected : int b { 0 }; }; class Derive : private Base { public : void getA () { cout << a << endl ; } // \u7f16\u8bd1\u9519\u8bef\uff0c\u4e0d\u53ef\u8bbf\u95ee\u57fa\u7c7b\u4e2d\u79c1\u6709\u6210\u5458 void getB () { cout << b << endl ; } // \u53ef\u4ee5\u8bbf\u95ee\u57fa\u7c7b\u4e2d\u4fdd\u62a4\u6210\u5458 }; int main () { Derive d ; d . getB (); // cout << d.b; // \u7f16\u8bd1\u9519\u8bef\uff0c\u6d3e\u751f\u7c7b\u5bf9\u8c61\u4e0d\u53ef\u8bbf\u95ee\u57fa\u7c7b\u4e2d\u4fdd\u62a4\u6210\u5458 return 0 ; } \u5c0f\u7ed3\uff1a public \u7ee7\u627f\uff1a\u57fa\u7c7b\u7684\u516c\u6709\u6210\u5458\uff0c\u4fdd\u62a4\u6210\u5458\uff0c\u79c1\u6709\u6210\u5458\u4f5c\u4e3a\u6d3e\u751f\u7c7b\u7684\u6210\u5458\u65f6\uff0c\u90fd\u4fdd\u6301\u539f\u6709\u7684\u72b6\u6001\u3002 private \u7ee7\u627f\uff1a\u57fa\u7c7b\u7684\u516c\u6709\u6210\u5458\uff0c\u4fdd\u62a4\u6210\u5458\uff0c\u79c1\u6709\u6210\u5458\u4f5c\u4e3a\u6d3e\u751f\u7c7b\u7684\u6210\u5458\u65f6\uff0c\u90fd\u4f5c\u4e3a\u79c1\u6709\u6210\u5458\u3002 protected \u7ee7\u627f\uff1a\u57fa\u7c7b\u7684\u516c\u6709\u6210\u5458\uff0c\u4fdd\u62a4\u6210\u5458\u4f5c\u4e3a\u6d3e\u751f\u7c7b\u7684\u6210\u5458\u65f6\uff0c\u90fd\u6210\u4e3a\u4fdd\u62a4\u6210\u5458\uff0c\u57fa\u7c7b\u7684\u79c1\u6709\u6210\u5458\u4ecd\u7136\u662f\u79c1\u6709\u7684\u3002 \u603b\u7ed3 \u00b6 \u5148\u7406\u6e05\u695a\u57fa\u7c7b\u7684 public \u7684\u8bbf\u95ee\u6743\u9650\uff1a \u57fa\u7c7b\u7684 public \u5728 private \u7ee7\u627f\u4e2d\u6210\u4e3a private \uff0c\u4ec5\u5141\u8bb8\u6d3e\u751f\u7c7b\u7684\u6210\u5458\u51fd\u6570\u8bbf\u95ee\uff0c\u4e0d\u5141\u8bb8\u6d3e\u751f\u7c7b\u5bf9\u8c61\u76f4\u63a5\u8bbf\u95ee\u3002 \u57fa\u7c7b\u7684 public \u5728 protected \u7ee7\u627f\u4e2d\u6210\u4e3a protected \uff0c\u4ec5\u5141\u8bb8\u6d3e\u751f\u7c7b\u7684\u6210\u5458\u51fd\u6570\u8bbf\u95ee\uff0c\u4e0d\u5141\u8bb8\u6d3e\u751f\u7c7b\u5bf9\u8c61\u76f4\u63a5\u8bbf\u95ee\u3002 \u57fa\u7c7b\u7684 public \u5728 public \u7ee7\u627f\u4e2d\u8fd8\u662f public \uff0c\u53ef\u4ee5\u5728\u6d3e\u751f\u7c7b\u6210\u5458\u51fd\u6570\u4e2d\u8bbf\u95ee\uff0c\u4e5f\u53ef\u4ee5\u6d3e\u751f\u7c7b\u5bf9\u8c61\u76f4\u63a5\u8bbf\u95ee\u3002 \u4e4b\u540e\u662f\u57fa\u7c7b\u7684 private \u7684\u8bbf\u95ee\u6743\u9650\uff1a \u57fa\u7c7b\u7684 private \uff0c\u5728\u4e09\u79cd\u7ee7\u627f\u65b9\u5f0f\u4e2d\u5747\u662f private \uff0c\u53ea\u80fd\u901a\u8fc7\u57fa\u7c7b\u7684 public \u51fd\u6570\u8bbf\u95ee\uff0c\u4e0d\u53ef\u4ee5\u6d3e\u751f\u7c7b\u5bf9\u8c61\u76f4\u63a5\u8bbf\u95ee\u3002\u57fa\u7c7b\u7684 public \u51fd\u6570\u5728\u4e09\u79cd\u7ee7\u627f\u65b9\u5f0f\u4e2d\u8bbf\u95ee\u6743\u9650\u4e0d\u540c\u3002 public \u7ee7\u627f\uff0c\u5219\u57fa\u7c7b\u7684 public \u51fd\u6570\u53ef\u4ee5\u7c7b\u5916\u76f4\u63a5\u8bbf\u95ee\u3002 protected \u548c private \u7ee7\u627f\uff0c\u57fa\u7c7b\u7684 public \u51fd\u6570\u53ea\u5141\u8bb8\u6d3e\u751f\u7c7b\u51fd\u6570\u8bbf\u95ee\u3002 \u6700\u540e\u662f\u57fa\u7c7b\u7684 protected \u7684\u8bbf\u95ee\u6743\u9650\uff1a \u57fa\u7c7b\u7684 protected \u5f88\u7b80\u5355\uff0c\u4e09\u79cd\u7ee7\u627f\u90fd\u662f\u5fc5\u7136\u5141\u8bb8\u6d3e\u751f\u7c7b\u7684\u6210\u5458\u51fd\u6570\u8bbf\u95ee\uff0c\u4e0d\u5141\u8bb8\u5bf9\u8c61\u76f4\u63a5\u8bbf\u95ee\u3002\u57fa\u7c7b\u7684 protected \u5728 public \u4e0e protected \u7ee7\u627f\u4e2d\u8fd8\u662f protected \uff0c\u4f46\u5728 private \u7ee7\u627f\u540e\u867d\u7136\u662f private \u5c5e\u6027\uff0c\u4f46\u4e5f\u5141\u8bb8\u57fa\u7c7b\u7684 public \u51fd\u6570\u4e0e\u6d3e\u751f\u7c7b\u7684 public \u51fd\u6570\u8bbf\u95ee\uff0c\u4e0d\u80fd\u5bf9\u8c61\u76f4\u63a5\u8bbf\u95ee\u3002 \u5355\u72ec\u8ba8\u8bba protected \u7ee7\u627f\uff1a protected \u7ee7\u627f\u4f1a\u4f7f\u5f97\u57fa\u7c7b\u7684 public \u548c protected \u6210\u4e3a protected \uff0c\u53ea\u80fd\u6d3e\u751f\u7c7b\u6210\u5458\u51fd\u6570\u8bbf\u95ee\u3002\u800c private \u7ecf\u8fc7 protected \u7ee7\u627f\uff0c\u8fd8\u662f\u53ea\u80fd\u57fa\u7c7b\u7684 public \u51fd\u6570\u8bbf\u95ee\uff0c\u800c\u57fa\u7c7b\u7684 public \u6210\u5458\u51fd\u6570\u53ea\u80fd\u6d3e\u751f\u7c7b\u6210\u5458\u51fd\u6570\u8bbf\u95ee\uff0c\u6d3e\u751f\u7c7b\u6210\u5458\u51fd\u6570\u65e0\u6cd5\u76f4\u63a5\u8bbf\u95ee\u6b64\u65f6\u7684\u57fa\u7c7b private \u6570\u636e\u3002 \u4f8b\u9898 protected \u5bf9\u8c61\u4e0d\u53ef\u7c7b\u5916\u8bbf\u95ee\uff0c\u4f46\u662f\u53ef\u4ee5\u88ab\u7ee7\u627f\u7c7b\u7684\u6210\u5458\u51fd\u6570\u8bbf\u95ee\u3002 \u7ec4\u5408\u4e0e\u7ee7\u627f\u7684\u5173\u7cfb \u00b6 \u4f18\u70b9\uff1a\u652f\u6301\u589e\u91cf\u5f00\u53d1\uff0c\u5f15\u5165\u65b0\u4ee3\u7801\u800c\u4e0d\u5f71\u54cd\u5df2\u6709\u4ee3\u7801\u6b63\u786e\u6027\u3002 \u76f8\u4f3c\u70b9\uff1a\u5b9e\u73b0\u4ee3\u7801\u91cd\u7528\u3002\u5c06\u5b50\u5bf9\u8c61\u5f15\u5165\u65b0\u7c7b\uff0c\u4f7f\u7528\u6784\u9020\u51fd\u6570\u7684\u521d\u59cb\u5316\u6210\u5458\u5217\u8868\u521d\u59cb\u5316\u3002 \u4e0d\u540c\u70b9\uff1a \u7ec4\u5408\u3002\u5d4c\u5165\u4e00\u4e2a\u5bf9\u8c61\u4ee5\u5b9e\u73b0\u65b0\u7c7b\u7684\u529f\u80fd\uff0chas-a \u5173\u7cfb\uff0c\u65e0\u91cd\u5199\u9690\u85cf\u3002 \u7ee7\u627f\u3002\u6cbf\u7528\u5df2\u5b58\u5728\u7684\u7c7b\u63d0\u4f9b\u7684\u63a5\u53e3\uff0cis-a \u4e0e is-implementing-in-terms-of\uff0c\u6709\u91cd\u5199\u9690\u85cf\u3002 \u91cd\u8f7d\u4e0e\u91cd\u5199\u9690\u85cf \u00b6 \u5b9a\u4e49 \u00b6 \u91cd\u8f7d\uff08\u82f1\u8bed\uff1aoverload\uff09 \u76ee\u7684\uff1a\u63d0\u4f9b\u540c\u540d\u51fd\u6570\u7684\u4e0d\u540c\u5b9e\u73b0\uff0c\u5c5e\u4e8e\u9759\u6001\u591a\u6001\u3002 \u51fd\u6570\u540d\u5fc5\u987b\u76f8\u540c\uff0c\u51fd\u6570\u53c2\u6570\u5fc5\u987b\u4e0d\u540c\uff0c\u4f5c\u7528\u57df\u76f8\u540c\uff08\u5982\u4f4d\u4e8e\u540c\u4e00\u4e2a\u7c7b\u4e2d\u6216\u540c\u540d\u5168\u5c40\u51fd\u6570\uff09\u3002 \u91cd\u5199\u9690\u85cf\uff08\u82f1\u8bed\uff1aredefining\uff09 \u76ee\u7684\uff1a\u5728\u6d3e\u751f\u7c7b\u4e2d\u91cd\u65b0\u5b9a\u4e49\u57fa\u7c7b\u51fd\u6570\uff0c\u5b9e\u73b0\u6d3e\u751f\u7c7b\u7684\u7279\u6b8a\u529f\u80fd\u3002 \u5c4f\u853d\u4e86\u57fa\u7c7b\u7684\u6240\u6709\u5176\u5b83\u540c\u540d\u51fd\u6570\u3002 \u51fd\u6570\u540d\u5fc5\u987b\u76f8\u540c\uff0c\u51fd\u6570\u53c2\u6570\u53ef\u4ee5\u4e0d\u540c\u3002 \u7ec4\u5408\u4e0d\u4f1a\u53d1\u751f\u91cd\u5199\u9690\u85cf\uff0c\u4f46\u662f\u7ee7\u627f\u4f1a\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 #include <iostream> using namespace std ; class Wheel { public : void inflate () { cout << \"Wheel::inflate\" << endl ; } void start () { cout << \"Wheel::start\" << endl ; } }; class Engine { public : void start () { cout << \"Engine::start\" << endl ; } void stop () { } }; class Car { public : Engine engine ; Wheel wheel [ 4 ]; void start () { cout << \"Car::start\" << endl ; } }; int main () { Car car ; car . wheel [ 0 ]. inflate (); car . engine . start (); car . wheel [ 2 ]. start (); car . start (); return 0 ; } /* output: Wheel::inflate Engine::start Wheel::start Car::start */ \u5728\u7ec4\u5408\u4e2d\uff0c\u6211\u4eec\u5b9e\u73b0\u4e86\u5bf9\u4e8e\u6bcf\u4e00\u7c7b\u7684\u540c\u540d\u51fd\u6570\u8c03\u7528\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 #include <iostream> using namespace std ; class Pet { public : void eat () { cout << \"Pet eat\" << endl ; } void sleep () { cout << \"Pet sleep\" << endl ; } }; class Duck : public Pet { public : void eat () { cout << \"Duck eat\" << endl ; } }; int main () { Duck duck ; duck . eat (); duck . sleep (); return 0 ; } /* output: Duck eat Pet sleep */ \u7136\u800c\u5728\u7ee7\u627f\u4e2d\uff0c\u5f88\u660e\u663e Pet \u7c7b\u7684 eat \u51fd\u6570\u88ab\u6d3e\u751f\u7c7b\u91cd\u5b9a\u4e49\uff0c\u65e0\u6cd5\u88ab\u8c03\u7528\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 #include <iostream> using namespace std ; class T { }; class Base { public : void f () { cout << \"B::f() \\n \" ; } void f ( int i ) { cout << \"Base::f(\" << i << \") \\n \" ; } // \u91cd\u8f7d void f ( double d ) { cout << \"Base::f(\" << d << \") \\n \" ; } // \u91cd\u8f7d void f ( T ) { cout << \"Base::f(T) \\n \" ; } // \u91cd\u8f7d }; class Derive : public Base { public : void f ( int i ) { cout << \"Derive::f(\" << i << \") \\n \" ; } // \u91cd\u5199\u9690\u85cf }; int main () { Derive d ; d . f ( 10 ); d . f ( 4.9 ); // \u7f16\u8bd1\u8b66\u544a\u3002\u6267\u884c\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362\u3002 // d.f(); // \u88ab\u5c4f\u853d\uff0c\u7f16\u8bd1\u9519\u8bef // d.f(T()); // \u88ab\u5c4f\u853d\uff0c\u7f16\u8bd1\u9519\u8bef return 0 ; } \u5728 retexter_gcc \u7f16\u8bd1\u5668\u4e0a\u65e0\u6cd5\u8b66\u544a\uff0c\u4f46\u662f\u4f7f\u7528 clang \u7f16\u8bd1\u5668\u7684\u8b66\u544a\u5982\u4e0b\uff1a 1 2 3 4 1869255217/source.cpp:18:7: warning: implicit conversion from 'double' to 'int' changes value from 4.9 to 4 [-Wliteral-conversion] d.f(4.9); ~ ^~~ 1 warning generated. using \u4e00\u5e76\u4f7f\u7528 \u00b6 \u548c\u5bf9\u6784\u9020\u51fd\u6570\u7684\u7ee7\u627f\u4e00\u6837\uff0c using \u53ef\u4ee5\u4e00\u5e76\u542f\u7528\u6240\u6709\u88ab\u91cd\u5199\u8986\u76d6\u7684\u540c\u540d\u51fd\u6570\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 #include <iostream> using namespace std ; class T { }; class Base { public : void f () { cout << \"Base::f() \\n \" ; } void f ( int i ) { cout << \"Base::f(\" << i << \") \\n \" ; } void f ( double d ) { cout << \"Base::f(\" << d << \") \\n \" ; } void f ( T ) { cout << \"Base::f(T) \\n \" ; } }; class Derive : public Base { public : using Base :: f ; void f ( int i ) { cout << \"Derive::f(\" << i << \") \\n \" ; } }; int main () { Derive d ; d . f ( 10 ); d . f ( 4.9 ); d . f (); d . f ( T ()); return 0 ; } /* output: Derive::f(10) Base::f(4.9) Base::f() Base::f(T) */ \u5e76\u4e14\u6ce8\u610f\u5230\uff0c Derive \u548c Base \u90fd\u6709 void f(int i) \u51fd\u6570\uff0c\u6b64\u5904\u6ca1\u6709\u53d1\u751f\u91cd\u5b9a\u4e49\uff0c\u800c\u662f\u8c03\u7528\u4e86\u6d3e\u751f\u7c7b\u7684 void f(int i) \u3002 \u53e6\u5916\u4e00\u79cd\u5728\u6d3e\u751f\u7c7b\u4e2d\u8c03\u7528\u57fa\u7c7b\u540c\u540d\u51fd\u6570\u7684\u65b9\u6cd5\u662f\u76f4\u63a5\u4f7f\u7528\u5bf9\u5e94\u7684\u7c7b\u540d\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 #include <iostream> using namespace std ; class Base { public : void print () { cout << \"Base::print()\" << endl ; } }; class Derive : public Base { public : void print () { cout << \"Derive::print()\" << endl ; } }; void fun ( Base obj ) { obj . print (); } int main () { Derive d ; d . Base :: print (); fun ( d ); return 0 ; } /* output: Base::print() Base::print() */ \u6b64\u5904\u8c03\u7528 d.Base::print() \u6ca1\u6709\u5bfc\u81f4\u4efb\u4f55\u4e00\u4e2a\u540c\u540d\u51fd\u6570\u88ab\u8986\u76d6\u3002 \u603b\u7ed3 \u00b6 \u6240\u8c13\u7684\u91cd\u5199\u9690\u85cf\u5176\u5b9e\u672c\u8d28\u4e0a\u662f\u4e00\u79cd\u8c03\u7528\u4f18\u5148\u7ea7\u95ee\u9898\u3002\u6d3e\u751f\u7c7b\u9ed8\u8ba4\u4f18\u5148\u8c03\u7528\u81ea\u8eab\u7684\u51fd\u6570\u3002\u5982\u679c\u4e0d\u542f\u7528 using \u5173\u952e\u5b57\uff0c\u90a3\u4e48\u9664\u975e\u4f7f\u7528\u7c7b\u540d\uff0c\u5426\u5219\u65e0\u6cd5\u8c03\u7528\u57fa\u7c7b\u7684\u51fd\u6570\uff0c\u54ea\u6015\u53d1\u751f\u7c7b\u578b\u8f6c\u6362\u63d0\u793a warning \u4e5f\u8981\u4f18\u5148\u8c03\u7528\u81ea\u8eab\u7684\u51fd\u6570\u3002\u800c\u542f\u7528\u4e86 using \u5173\u952e\u5b57\u540e\uff0c\u4e0d\u4f7f\u7528\u547d\u540d\u7a7a\u95f4\u65f6\uff0c\u4ecd\u7136\u4f18\u5148\u8c03\u7528\u81ea\u8eab\u7684\u51fd\u6570\u3002\u4f46\u662f\u4e0d\u540c\u4e8e\u6ca1\u6709\u542f\u7528 using \u5173\u952e\u5b57\u7684\u65f6\u5019\uff0c\u6b64\u65f6\u5982\u679c\u65e0\u6cd5\u76f4\u63a5\u8c03\u7528\u81ea\u8eab\u7684\u51fd\u6570\uff08\u6bd4\u5982\u9700\u8981\u7c7b\u578b\u8f6c\u6362\uff09\uff0c\u90a3\u4e48\u54ea\u6015\u5f3a\u5236\u4f7f\u7528\u6d3e\u751f\u7c7b\u7684\u7c7b\u540d\u4e5f\u4f1a\u8c03\u7528\u57fa\u7c7b\u7684\u51fd\u6570\u3002 \u6b64\u5904\u542f\u7528 using \u5173\u952e\u5b57\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 #include <iostream> using namespace std ; class T { }; class Base { public : void f () { cout << \"Base::f() \\n \" ; } void f ( int i ) { cout << \"Base::f(\" << i << \") \\n \" ; } void f ( double d ) { cout << \"Base::f(\" << d << \") \\n \" ; } void f ( T ) { cout << \"Base::f(T) \\n \" ; } }; class Derive : public Base { public : using Base :: f ; void f ( int i ) { cout << \"Derive::f(\" << i << \") \\n \" ; } }; int main () { Derive d ; d . f ( 10 ); d . Base :: f ( 10 ); d . f ( 4.9 ); d . Derive :: f ( 4.9 ); d . f (); d . f ( T ()); return 0 ; } /* output: Derive::f(10) Base::f(10) Base::f(4.9) Base::f(4.9) Base::f() Base::f(T) */ \u6b64\u5904\u4e0d\u542f\u7528 using \u5173\u952e\u5b57\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 #include <iostream> using namespace std ; class T { }; class Base { public : void f () { cout << \"Base::f() \\n \" ; } void f ( int i ) { cout << \"Base::f(\" << i << \") \\n \" ; } void f ( double d ) { cout << \"Base::f(\" << d << \") \\n \" ; } void f ( T ) { cout << \"Base::f(T) \\n \" ; } }; class Derive : public Base { public : void f ( int i ) { cout << \"Derive::f(\" << i << \") \\n \" ; } }; int main () { Derive d ; d . f ( 10 ); d . Base :: f ( 10 ); d . f ( 4.9 ); d . Base :: f ( 4.9 ); d . Base :: f (); d . Base :: f ( T ()); return 0 ; } /* output: Derive::f(10) Base::f(10) Derive::f(4) Base::f(4.9) Base::f() Base::f(T) */ \u4e0d\u542f\u7528 using \u5173\u952e\u5b57\u65f6\u76f4\u63a5\u8c03\u7528 f() \u548c f(T) \u662f\u4e0d\u5408\u6cd5\u7684\u3002 using \u5173\u952e\u5b57\u4f5c\u7528\u603b\u7ed3 \u00b6 \uff08\u5728\u6d3e\u751f\u7c7b\u4e2d\uff09\u7ee7\u627f\u57fa\u7c7b\u6240\u6709\u6784\u9020\u51fd\u6570\u3001\u6062\u590d\u88ab\u5c4f\u853d\u7684\u6240\u6709\u540c\u540d\u57fa\u7c7b\u6210\u5458\u51fd\u6570 \u6307\u793a\u547d\u540d\u7a7a\u95f4\uff0c\u5982 using namespace std \u5c06\u53e6\u4e00\u4e2a\u547d\u540d\u7a7a\u95f4\u7684\u6210\u5458\u5f15\u5165\u5f53\u524d\u547d\u540d\u7a7a\u95f4\uff0c\u5982 using std::cout \u5b9a\u4e49\u7c7b\u578b\u522b\u540d\uff0c\u5982 using a = int; \u4f8b\u9898\uff1a D \u9009\u9879\uff0c\u6ce8\u610f\u5230 B \u4e2d\u53ea using \u4e86 A \u7684\u6784\u9020\u51fd\u6570\uff0c\u6ca1\u6709\u6062\u590d A \u7684 f \u51fd\u6570\u3002 \u591a\u91cd\u7ee7\u627f \u00b6 \u5b9a\u4e49\u3001\u610f\u4e49\u548c\u6f5c\u5728\u98ce\u9669 \u00b6 \u6d3e\u751f\u7c7b\u540c\u65f6\u7ee7\u627f\u591a\u4e2a\u57fa\u7c7b\u3002 \u683c\u5f0f\uff1a 1 class Derive : public MiddleA , public MiddleB { }; \u6570\u636e\u5b58\u50a8\u98ce\u9669 \u5982\u679c\u6d3e\u751f\u7c7b D \u7ee7\u627f\u7684\u4e24\u4e2a\u57fa\u7c7b A \u3001 B \uff0c\u662f\u540c\u4e00\u57fa\u7c7b Base \u7684\u4e0d\u540c\u7ee7\u627f\uff0c\u5219 A \u3001 B \u4e2d\u7ee7\u627f\u81ea Base \u7684\u6570\u636e\u6210\u5458\u4f1a\u5728 D \u6709\u4e24\u4efd\u72ec\u7acb\u7684\u526f\u672c\uff0c\u53ef\u80fd\u5e26\u6765\u6570\u636e\u5197\u4f59\u3002 \u4e8c\u4e49\u6027\u98ce\u9669 \u5982\u679c\u6d3e\u751f\u7c7b D \u7ee7\u627f\u7684\u4e24\u4e2a\u57fa\u7c7b A \u3001 B \uff0c\u6709\u540c\u540d\u6210\u5458\u51fd\u6570\u6216\u540c\u540d\u6210\u5458\u6570\u636e a \uff0c\u5219\u8bbf\u95ee D \u4e2d a \u65f6\uff0c\u7f16\u8bd1\u5668\u65e0\u6cd5\u5224\u65ad\u8981\u8bbf\u95ee\u7684\u54ea\u4e00\u4e2a\u57fa\u7c7b\u6210\u5458\u3002 \u4e8c\u4e49\u6027\u4f8b\u5b50\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 #include <iostream> using namespace std ; class Base { public : int a { 0 }; }; class MiddleA : public Base { public : void addA () { cout << \"a=\" << ++ a << endl ; }; void bar () { cout << \"A::bar\" << endl ; }; }; class MiddleB : public Base { public : void addB () { cout << \"a=\" << ++ a << endl ; }; void bar () { cout << \"B::bar\" << endl ; }; }; class Derive : public MiddleA , public MiddleB { }; int main () { Derive d ; d . bar (); } /* output: main.cpp:22:7: error: member 'bar' found in multiple base classes of different types d.bar(); ^ main.cpp:10:8: note: member found by ambiguous name lookup void bar() { cout << \"A::bar\" << endl; }; ^ main.cpp:15:8: note: member found by ambiguous name lookup void bar() { cout << \"B::bar\" << endl; }; ^ 1 error generated. */ \u7a0d\u4f5c\u4fee\u6539\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 #include <iostream> using namespace std ; class Base { public : int a { 0 }; }; class MiddleA : public Base { public : void addA () { cout << \"a=\" << ++ a << endl ; }; void abar () { cout << \"A::bar\" << endl ; }; }; class MiddleB : public Base { public : void addB () { cout << \"a=\" << ++ a << endl ; }; void bbar () { cout << \"B::bar\" << endl ; }; }; class Derive : public MiddleA , public MiddleB { }; int main () { Derive d ; d . abar (); d . bbar (); } /* output: A::bar B::bar */ \u53e6\u5916\u4e00\u4f8b\uff0c\u540c\u540d\u6210\u5458\u64cd\u4f5c\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 #include <iostream> using namespace std ; class Base { public : int a { 0 }; }; class MiddleA : public Base { public : void addA () { cout << \"a=\" << ++ a << endl ; }; void bar () { cout << \"A::bar\" << endl ; }; }; class MiddleB : public Base { public : void addB () { cout << \"a=\" << ++ a << endl ; }; void bar () { cout << \"B::bar\" << endl ; }; }; class Derive : public MiddleA , public MiddleB { }; int main () { Derive d ; d . addA (); d . addB (); d . addB (); cout << d . MiddleA :: a << endl ; cout << d . MiddleB :: a << endl ; d . MiddleA :: bar (); d . MiddleB :: bar (); return 0 ; } /* output: a=1 a=1 a=2 1 2 A::bar B::bar */ \u6ce8\u610f\u5230\uff0c\u591a\u91cd\u7ee7\u627f\u7684\u4e8c\u4e49\u6027\u5e76\u6ca1\u6709\u5bfc\u81f4\u91cd\u590d\u5b9a\u4e49\uff0c\u7f16\u8bd1\u5668\u901a\u8fc7\u547d\u540d\u7a7a\u95f4\u533a\u5206\u4e86\u4e8c\u8005\u4e0d\u540c\u7684 a \u4e0e bar \u3002\u4f46\u662f\u4e0d\u52a0\u547d\u540d\u7a7a\u95f4\uff0c\u5219\u65e0\u6cd5\u533a\u5206\u3002 \u591a\u91cd\u7ee7\u627f\u7684\u6790\u6784\u987a\u5e8f \u00b6 \u7ed3\u5408\u4e4b\u540e\u63d0\u5230\u7684\u865a\u51fd\u6570\uff0c\u591a\u91cd\u7ee7\u627f\u4e5f\u4f1a\u914d\u5408\u591a\u6001\u4f1a\u52a8\u6001\u8c03\u7528\u6790\u6784\u51fd\u6570\uff0c\u5148\u6790\u6784\u57fa\u7c7b\u90e8\u5206\uff0c\u518d\u6790\u6784\u6d3e\u751f\u7c7b\u90e8\u5206\u3002\u6790\u6784\u987a\u5e8f\u4e5f\u662f\u548c\u6784\u9020\u987a\u5e8f\u53cd\u5411\uff0c\u4f46\u662f\u6784\u9020\u987a\u5e8f\u662f\u6309\u7167\u7533\u660e\u987a\u5e8f\u6765\u7684\u3002\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 // what.h #pragma once class WhatCanSpeak { public : virtual ~ WhatCanSpeak () { cout << \"obj cannot speak\" << endl ; } virtual void speak () = 0 ; virtual void stop () = 0 ; }; class WhatCanMotion { public : virtual ~ WhatCanMotion () { cout << \"obj cannot move\" << endl ; } virtual void motion () = 0 ; virtual void stop () = 0 ; }; // main.cpp #include \"what.h\" class Alien : public WhatCanMotion , public WhatCanSpeak { public : std :: string name ; Alien ( std :: string x ) : name ( x ) { } void speak () { std :: cout << name << \" is speaking\" << std :: endl ; } void stop () { std :: cout << name << \" stops\" << std :: endl ; } void motion () { std :: cout << name << \" is moving\" << std :: endl ; } ~ Alien () { }; }; \u5bf9\u4e8e Alien \u7684\u6790\u6784\u662f\u6784\u9020\u7684\u53cd\u5411\u3002\u800c\u6784\u9020\u662f\u5148\u6784\u9020 WhatCanMotion \uff0c\u4e4b\u540e WhatCanSpeak \uff0c\u6700\u540e\u518d\u662f\u6d3e\u751f\u7c7b\u90e8\u5206\uff0c\u6545\u800c\u6790\u6784\u987a\u5e8f\u662f\u5148\u6d3e\u751f\u7c7b\uff0c\u4e4b\u540e WhatCanSpeak \uff0c\u6700\u540e WhatCanMotion \u3002","title":"\u7ec4\u5408\u4e0e\u7ee7\u627f"},{"location":"languages/c-oop/combination-and-derivation/#_1","text":"","title":"\u7ec4\u5408\u4e0e\u7ee7\u627f"},{"location":"languages/c-oop/combination-and-derivation/#_2","text":"","title":"\u7ec4\u5408"},{"location":"languages/c-oop/combination-and-derivation/#_3","text":"\u5982\u679c\u5bf9\u8c61 a \u662f\u5bf9\u8c61 b \u7684\u4e00\u4e2a\u7ec4\u6210\u90e8\u5206\uff0c\u5219\u79f0 b \u4e3a a \u7684\u6574\u4f53\u5bf9\u8c61\uff0c a \u4e3a b \u7684\u90e8\u5206\u5bf9\u8c61\u3002\u5e76\u628a b \u548c a \u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u79f0\u4e3a\u201c\u6574\u4f53-\u90e8\u5206\u201d\u5173\u7cfb\uff08\u4e5f\u53ef\u79f0\u4e3a\u201c\u7ec4\u5408\u201d\u6216\u201chas-a\u201d\u5173\u7cfb\uff09\u3002","title":"\u5b9a\u4e49"},{"location":"languages/c-oop/combination-and-derivation/#_4","text":"","title":"\u4e24\u79cd\u5b9e\u73b0\u65b9\u5f0f"},{"location":"languages/c-oop/combination-and-derivation/#_5","text":"\u5df2\u6709\u7c7b\u7684\u5bf9\u8c61\u4f5c\u4e3a\u65b0\u7c7b\u7684\u516c\u6709\u6570\u636e\u6210\u5458\uff0c\u8fd9\u6837\u901a\u8fc7\u5141\u8bb8\u76f4\u63a5\u8bbf\u95ee\u5b50\u5bf9\u8c61\u800c\u201c\u63d0\u4f9b\u201d\u65e7\u7c7b\u63a5\u53e3\u3002","title":"\u516c\u6709\u6210\u5458"},{"location":"languages/c-oop/combination-and-derivation/#_6","text":"\u5df2\u6709\u7c7b\u7684\u5bf9\u8c61\u4f5c\u4e3a\u65b0\u7c7b\u7684\u79c1\u6709\u6570\u636e\u6210\u5458\u3002\u65b0\u7c7b\u53ef\u4ee5\u8c03\u6574\u65e7\u7c7b\u7684\u5bf9\u5916\u63a5\u53e3\uff0c\u53ef\u4ee5\u4e0d\u4f7f\u7528\u65e7\u7c7b\u539f\u6709\u7684\u63a5\u53e3\uff08\u76f8\u5f53\u4e8e\u5bf9\u63a5\u53e3\u4f5c\u4e86\u8f6c\u6362\uff09\u3002 \u6211\u4eec\u6709\u5982\u4e0b\u547d\u540d\u4e24\u7c7b\u7ec4\u5408\u65b9\u5f0f\uff1a 1 2 3 4 private : Wheel w ; // private \u7ec4\u5408 public : Engine e ; // public \u7ec4\u5408","title":"\u79c1\u6709\u6210\u5458"},{"location":"languages/c-oop/combination-and-derivation/#public-private","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 #include <iostream> using namespace std ; class Wheel { int _num ; public : void set ( int n ) { _num = n ; } }; class Engine { public : int _num ; void set ( int n ) { _num = n ; } }; class Car { private : Wheel w ; public : Engine e ; // \u516c\u6709\u6210\u5458\uff0c\u76f4\u63a5\u8bbf\u95ee\u5176\u63a5\u53e3 void setWheel ( int n ) { w . set ( n ); } // \u63d0\u4f9b\u79c1\u6709\u6210\u5458\u7684\u8bbf\u95ee\u63a5\u53e3 }; int main () { Car c ; c . e . set ( 1 ); c . setWheel ( 4 ); return 0 ; } Car \u7531 Engine \u548c Wheel \u4e24\u90e8\u5206\u7ec4\u6210\u3002\u5982\u679c\u6211\u7684 Wheel \u8bbe\u4e3a\u79c1\u6709\uff0c\u90a3\u4e48\u6211\u6ca1\u6cd5\u76f4\u63a5\u5728\u7c7b\u5916\uff08\u4e3b\u51fd\u6570\u91cc\uff09\u8bbf\u95ee w.set(n) \uff0c\u56e0\u4e3a\u7c7b\u5916\u65e0\u6cd5\u8bbf\u95ee\u79c1\u6709\u6210\u5458\u3002\u79c1\u6709\u6210\u5458\u7684\u6240\u6709\u63a5\u53e3\u4f1a\u5728\u7c7b\u5916\u6574\u4f53\u79c1\u6709\u5316\uff0c\u4f46\u662f\u79c1\u6709\u6210\u5458\u7684 public \u63a5\u53e3\u4ecd\u7136\u53ef\u4ee5\u88ab\u7c7b\u5185\u51fd\u6570\u8c03\u7528\u3002\u53ef\u4ee5\u8bbe\u7f6e public \u63a5\u53e3 setWheel \uff0c setW Weel \u662f\u4e2a public \u7684\u7c7b\u5185\u51fd\u6570\uff0c\u53ef\u4ee5\u8bbf\u95ee\u7c7b\u5185 private \u6210\u5458\uff0c\u4ece\u800c\u6211\u80fd\u591f\u901a\u8fc7\u6b64\u63a5\u53e3\u8bbf\u95ee\u5230 private \u6570\u636e\u6210\u5458 Wheel w \u7684 public \u63a5\u53e3\uff0c\u4f46\u662f\u4e5f\u65e0\u6cd5\u76f4\u63a5\u8bbf\u95ee private \u90e8\u5206\u7684 private \u6570\u636e\u3002\u540c\u7406\uff0c\u89c2\u5bdf Wheel \u7c7b\u548c Engine \u7c7b\u7684\u5199\u6cd5\uff0c\u5176\u5b9e\u4e5f\u662f\u8fd9\u79cd\u7ed9 private \u5bf9\u8c61\u6dfb\u52a0 public \u63a5\u53e3\u7684\u601d\u60f3\u3002 \u5c06\u6b64\u4f8b\u5b50\u8fdb\u4e00\u6b65\u9610\u8ff0\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 #include <iostream> using namespace std ; class Wheel { int _num ; public : Wheel ( int x ) { _num = x ; } void set ( int n ) { _num = n ; } // \u6ca1\u6709 get \u51fd\u6570\u662f\u6ca1\u6cd5\u76f4\u63a5\u5728 Car \u7c7b\u91cc\u8bbf\u95ee\u5230 private \u6210\u5458\u7684 int getwheelvalue () { return this -> _num ; } }; class Engine { public : Engine ( int y ) { _num = y ; } int _num ; void set ( int n ) { _num = n ; } }; class Car { private : Wheel w ; public : Engine e ; // \u516c\u6709\u6210\u5458\uff0c\u76f4\u63a5\u8bbf\u95ee\u5176\u63a5\u53e3 void setWheel ( int n ) { w . set ( n ); } // \u63d0\u4f9b\u79c1\u6709\u6210\u5458\u7684\u8bbf\u95ee\u63a5\u53e3 Car ( int x , int y ) : w ( x ), e ( y ) { } void print () { cout << \"my Engine is \" << this -> e . _num << \" my Wheel is \" << this -> w . getwheelvalue () << endl ; } }; int main () { Car c ( 5 , 3 ); c . print (); c . e . set ( 1 ); c . print (); c . setWheel ( 4 ); c . print (); return 0 ; } /* output: my Engine is 3 my Wheel is 5 my Engine is 1 my Wheel is 5 my Engine is 1 my Wheel is 4 */ \u7b2c\u4e00\uff0c Wheel w \u662f Car \u7684\u79c1\u6709\u6210\u5458\uff0c Car \u7684 public \u63a5\u53e3\u53ef\u4ee5\u8bbf\u95ee Car \u7684 private \u6570\u636e\u6210\u5458\uff0c\u6545\u800c\u53ef\u4ee5\u8bbf\u95ee w \uff0c\u4f46\u662f\u65e0\u6cd5\u8bbf\u95ee\u79c1\u6709\u6570\u636e\u6210\u5458\u7684\u79c1\u6709\u6570\u636e\u6210\u5458\uff0c\u6545\u800c\u65e0\u6cd5\u76f4\u63a5\u5728 print \u4e2d\u8f93\u51fa w._num \uff0c\u6211\u4eec\u9009\u62e9\u4e86\u518d\u5bf9 Wheel \u8bbe\u8ba1\u79c1\u6709\u6570\u636e\u6210\u5458\u7684\u63a5\u53e3 getWheelValue \u6765\u8bbf\u95ee Wheel \u7684 _num \u3002 \u7b2c\u4e8c\uff0c\u5bf9\u4e8e Car \u7684\u6784\u9020\u51fd\u6570\u7684\u521d\u59cb\u5316\u5217\u8868\uff0c\u5f53 Car \u7684\u6570\u636e\u6210\u5458\u662f int x \u65f6\uff0c\u6211\u4eec\u5199\u7684\u662f x(i) \uff0c\u800c\u4e0d\u662f int(i) \uff08\u5426\u5219\uff0c\u5982\u679c\u6709\u591a\u4e2a int \u7c7b\u7684\u6210\u5458\uff0c\u521d\u59cb\u5316\u5c31\u65e0\u6cd5\u8fdb\u884c\u4e86\uff09\u3002\u6240\u4ee5\u8fd9\u91cc\u5199\u7684\u4e5f\u662f w(x) \uff0c\u800c\u4e0d\u662f Wheel(x) \u3002\u8fd9\u91cc\u5176\u5b9e\u4e5f\u4f53\u73b0\u4e86\u57fa\u672c\u6570\u636e\u548c\u81ea\u5b9a\u4e49\u7c7b\u7684\u7c7b\u6bd4\u5173\u7cfb\u3002 \u7b2c\u4e09\uff0c\u6211\u4eec\u8fd9\u91cc\u91c7\u7528\u4e86\u521d\u59cb\u5316\u5217\u8868\u6765\u6784\u9020 Car \uff0c\u800c\u4e0d\u662f\u91c7\u7528\u51fd\u6570\u4f53\u5185\u8d4b\u503c\u3002\u56e0\u4e3a C++11 \u76f4\u63a5\u7981\u6b62\u4e86\u8fd9\u7c7b\u7684\u51fd\u6570\u4f53\u5185\u8d4b\u503c\u3002 \u6211\u4eec\u5bf9\u6b64\u7684\u7406\u89e3\uff1a\u5982\u679c\u662f\u51fd\u6570\u4f53\u5185\u8d4b\u503c\u6765\u6784\u9020 Car \uff0c\u90a3\u4e48\u9700\u8981\u5b9a\u4e49 Wheel \u548c Engine \u7684\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff08\u5982\u679c\u6211\u4eec\u4e0d\u5b9a\u4e49\u5e26\u6709\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\uff0c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u751f\u6210\uff09\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u7c7b\u4f3c w = 5 \u8fd9\u6837\u7684\u8bed\u53e5\u8fd8\u9700\u8981\u9690\u5f0f\u8c03\u7528\u5e26\u6709\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\u751f\u6210 Wheel(5) \uff0c\u7136\u540e\u8c03\u7528\u9690\u5f0f\u751f\u6210\u7684\u79fb\u52a8\u8d4b\u503c\u8bed\u53e5\u7ed9 w \u8d4b\u503c\u3002\u8fd9\u4e2a\u65b9\u5f0f\u6bd4\u8d77\u521d\u59cb\u5316\u5217\u8868\u6548\u7387\u4f4e\u4e0b\u592a\u591a\uff08\u5982\u6b64\u7981\u6b62\u53ef\u80fd\u8fd8\u6709\u5176\u4ed6\u7684\u56e0\u679c\u5173\u7cfb\uff09\u3002","title":"public \u63a5\u53e3\u8bbf\u95ee private \u6570\u636e"},{"location":"languages/c-oop/combination-and-derivation/#_7","text":"","title":"\u6784\u9020\u4e0e\u6790\u6784"},{"location":"languages/c-oop/combination-and-derivation/#_8","text":"\u5b50\u5bf9\u8c61\u6784\u9020\u65f6\u82e5\u9700\u8981\u53c2\u6570\uff0c\u5219\u5e94\u5728\u5f53\u524d\u7c7b\u7684\u6784\u9020\u51fd\u6570\u7684\u521d\u59cb\u5316\u5217\u8868\u4e2d\u8fdb\u884c\u3002\u4e0d\u80fd\u591f\u901a\u8fc7\u5148\u9ed8\u8ba4\u6784\u9020\u3002\u7136\u540e\u518d\u5728\u51fd\u6570\u4f53\u5185\u8d4b\u503c\u3002 \u5177\u4f53\u800c\u8a00\uff0cC++11 \u7684\u89c4\u5b9a\u662f\u5176\u4ed6\u7c7b\u7684\u5b50\u5bf9\u8c61\u5fc5\u987b\u8981\u901a\u8fc7\u521d\u59cb\u5316\u5217\u8868\u6765\u6784\u9020\uff0c\u5982\u679c\u4e0d\u5199\u5728\u521d\u59cb\u5316\u5217\u8868\u91cc\uff0c\u90a3\u4e48\u5c31\u8c03\u7528\u9ed8\u8ba4\u6784\u9020\u3002 \u5982\u679c A \u7c7b\u5185\u7ec4\u5408\u6709\u5176\u4ed6\u7c7b B \u7684\u5bf9\u8c61\uff0c\u90a3\u4e48 B \u7684\u5bf9\u8c61\u5fc5\u987b\u8981\u901a\u8fc7\u521d\u59cb\u5316\u5217\u8868\u6765\u6784\u9020\uff0c\u53ef\u4ee5\u4e0d\u5199\u521d\u59cb\u5316\u5217\u8868\uff0c\u90a3\u4e48\u4f1a\u8c03\u7528 B \u7684\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u3002\u4f46\u662f\u4e00\u5b9a\u4e0d\u80fd\u5728 A \u7684\u6784\u9020\u51fd\u6570\u4f53\u5185\u8fdb\u884c\u6784\u9020\uff0c\u6548\u7387\u592a\u4f4e\u3002 \u8fd9\u4e2a\u5730\u65b9\u611f\u89c9\u4f1a\u548c\u6211\u4eec\u7684\u7406\u89e3\u53d1\u751f\u51b2\u7a81\uff0c\u56e0\u4e3a\u7c7b\u5f53\u4e2d\u7ecf\u5e38\u4f1a\u9700\u8981 int \u6570\u636e\u6210\u5458\u3002 int \u662f\u4e00\u4e2a\u7c7b\uff0c\u90a3\u96be\u9053 int \u53ea\u80fd\u5728\u521d\u59cb\u5316\u5217\u8868\u91cc\u8d4b\u503c\u5417\uff1f \u8fd9\u4e2a\u7406\u89e3\u662f\u9519\u7684\u3002 int \u4e0d\u80fd\u7b97\u662f\u4e00\u4e2a\u7c7b\uff0c\u5b83\u548c char \u3001 long \u3001 double \u90fd\u53ea\u662f\u57fa\u672c\u7684\u53d8\u91cf\u7c7b\u578b\u3002\u7ec4\u5408\u6307\u7684\u662f\u7c7b\u548c\u7c7b\u4e4b\u95f4\uff0c\u6570\u636e\u6210\u5458\u91cc\u7684 int \uff0c\u8fd9\u4e0d\u662f\u7ec4\u5408\u3002\u57fa\u672c\u6570\u636e\u7c7b\u578b\u548c\u81ea\u5df1\u5199\u7684\u7c7b\u4e0d\u662f\u4e00\u4e2a\u4e1c\u897f\u3002\u800c\u4e14\u5bf9\u4e8e\u77ed\u8d4b\u503c\u8bed\u53e5\uff0c\u5c3d\u91cf\u80fd\u653e\u521d\u59cb\u5316\u5217\u8868\u5c31\u4e0d\u653e\u51fd\u6570\u4f53\u5185\uff0c\u524d\u8005\u6548\u7387\u66f4\u9ad8\u3002 \u4f46\u662f std::vector \u662f\u4e2a\u5c01\u88c5\u597d\u4e86\u7684\u7c7b\uff0c #include <vector> \u5c31\u662f\u628a\u5305\u542b\u5b83\u7684\u5e93\u641e\u5230\u4f60\u7684\u7a0b\u5e8f\u4e2d\u3002","title":"\u5b50\u5bf9\u8c61\u53c2\u6570\u6784\u9020"},{"location":"languages/c-oop/combination-and-derivation/#_9","text":"\u82e5\u4f7f\u7528\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u6765\u6784\u9020\u5b50\u5bf9\u8c61\uff0c\u5219\u4e0d\u7528\u505a\u4efb\u4f55\u5904\u7406\u3002","title":"\u5b50\u5bf9\u8c61\u9ed8\u8ba4\u6784\u9020"},{"location":"languages/c-oop/combination-and-derivation/#_10","text":"\u5148\u5b8c\u6210\u5b50\u5bf9\u8c61\u6784\u9020\uff0c\u518d\u5b8c\u6210\u7236\u5bf9\u8c61\u6784\u9020\u3002","title":"\u6784\u9020\u6b21\u5e8f"},{"location":"languages/c-oop/combination-and-derivation/#_11","text":"\u5b50\u5bf9\u8c61\u6784\u9020\u7684\u6b21\u5e8f\u4ec5\u7531\u5728\u7c7b\u4e2d\u58f0\u660e\u7684\u6b21\u5e8f\u6240\u51b3\u5b9a\u3002 \u6790\u6784\u51fd\u6570\u7684\u6b21\u5e8f\u4e0e\u6784\u9020\u51fd\u6570\u76f8\u53cd\uff0c\u4e5f\u5c31\u662f\u5b8c\u5168\u53cd\u7740\u6790\u6784\u4e00\u6b21\u5373\u53ef\u3002 \u4f8b\u5b50 \u6784\u9020\u4e0e\u6790\u6784\u7684\u6267\u884c\u987a\u5e8f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 #include <iostream> using namespace std ; class S1 { // Single1 \u7c7b\u522b int ID ; public : S1 ( int id ) : ID ( id ) { cout << \"S1(int)\" << endl ; } ~ S1 () { cout << \"~S1()\" << endl ; } }; class S2 { // Single2 \u7c7b\u522b public : S2 () { cout << \"S2()\" << endl ; } ~ S2 () { cout << \"~S2()\" << endl ; } }; class C3 { // Composite3 \u7c7b\u522b int num ; S1 sub_obj1 ; // \u6784\u9020\u51fd\u6570\u5e26\u53c2\u6570 S2 sub_obj2 ; // \u6784\u9020\u51fd\u6570\u4e0d\u5e26\u53c2\u6570 public : C3 () : num ( 0 ), sub_obj1 ( 123 ) { // \u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u5217\u8868\u4e2d\u6784\u9020\u5b50\u5bf9\u8c61 cout << \"C3()\" << endl ; } C3 ( int n ) : num ( n ), sub_obj1 ( 123 ) { cout << \"C3(int)\" << endl ; } C3 ( int n , int k ) : num ( n ), sub_obj1 ( k ) { cout << \"C3(int, int)\" << endl ; } ~ C3 () { cout << \"~C3()\" << endl ; } }; int main () { C3 a , b ( 1 ), c ( 2 ), d ( 3 , 4 ); return 0 ; } /* output: S1(int) S2() C3() S1(int) S2() C3(int) S1(int) S2() C3(int) S1(int) S2() C3(int, int) ~C3() ~S2() ~S1() ~C3() ~S2() ~S1() ~C3() ~S2() ~S1() ~C3() ~S2() ~S1() */ \u8f93\u51fa\u7ed3\u679c\uff0c\u524d\u9762 12 \u884c\uff0c\u6bcf\u4e09\u884c\u4e3a\u4e00\u4e2a\u5355\u4f4d\uff0c\u662f\u4e00\u4e2a\u6784\u9020\u3002\u4e14\u5148\u6309\u7167\u58f0\u660e\u6b21\u5e8f\u6784\u9020\u5b50\u5bf9\u8c61 sub_obj1 \uff0c\u4e4b\u540e\u662f sub_obj2 \uff0c\u6700\u540e\u5b8c\u6210 C3 \u6784\u9020\u3002 \u81f3\u4e8e\u6790\u6784\u987a\u5e8f\uff0c\u90a3\u5c31\u7eaf\u7cb9\u662f\u628a\u524d 12 \u884c\u5411\u4e0b\u5bf9\u6298\u3002 \u5bf9\u8c61\u7ec4\u5408\u7684\u62f7\u8d1d\u4e0e\u8d4b\u503c\uff08\u5bf9\u8bfe\u4ef6\u4e0a\u7684\u4f8b\u5b50\u8fdb\u884c\u4f18\u5316\uff0c\u66f4\u6e05\u695a\u4e9b\uff09 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 #include <iostream> using namespace std ; class C1 { public : int i ; C1 ( int n ) : i ( n ) { cout << \"C1 with int: \" << n << endl ; } C1 ( const C1 & other ) { // \u663e\u5f0f\u5b9a\u4e49\u62f7\u8d1d\u6784\u9020\u51fd\u6570 i = other . i ; cout << \"C1(const C1 &other)\" << endl ; } }; class C2 { public : int j ; C2 ( int n ) : j ( n ) { cout << \"C2 with int: \" << n << endl ; } C2 & operator = ( const C2 & right ) { // \u663e\u5f0f\u5b9a\u4e49\u8d4b\u503c\u8fd0\u7b97\u7b26 if ( this != & right ) { j = right . j ; cout << \"operator=(const C2&)\" << endl ; } return * this ; } }; class C3 { public : C1 c1 ; C2 c2 ; C3 () : c1 ( 0 ), c2 ( 0 ) { cout << \"C3 without arg\" << endl ; } C3 ( int i , int j ) : c1 ( i ), c2 ( j ) { cout << \"C3 with i and j\" << endl ; } void print () { cout << \"c1.i = \" << c1 . i << \" c2.j = \" << c2 . j << endl ; } }; int main () { C3 a ( 1 , 2 ); C3 b ( a ); // C1 \u6267\u884c\u663e\u5f0f\u5b9a\u4e49\u7684\u62f7\u8d1d\u6784\u9020\uff0cC2 \u6267\u884c\u9690\u5f0f\u5b9a\u4e49\u7684\u62f7\u8d1d\u6784\u9020 cout << \"b: \" ; b . print (); C3 c ; cout << \"c: \" ; c . print (); c = a ; // C1 \u6267\u884c\u9690\u5f0f\u5b9a\u4e49\u7684\u62f7\u8d1d\u8d4b\u503c\uff0cC2 \u6267\u884c\u663e\u5f0f\u5b9a\u4e49\u7684\u62f7\u8d1d\u8d4b\u503c cout << \"c: \" ; c . print (); return 0 ; } /* output: C1 with int: 1 C2 with int: 2 C3 with i and j C1(const C1 &other) b: c1.i = 1 c2.j = 2 C1 with int: 0 C2 with int: 0 C3 without arg c: c1.i = 0 c2.j = 0 operator=(const C2&) c: c1.i = 1 c2.j = 2 */ \u533a\u5206\u6570\u636e\u6765\u6e90 \u9519\u8bef\u7684\u662f\uff1a \u6ce8\u610f\uff0c int data{2018} \u548c int data = 2018 \u8fd9\u4e24\u4e2a\u5199\u6cd5\u4e00\u81f4\u3002\u8fd9\u91cc B \u7c7b\u7684 print \u51fd\u6570\u8f93\u51fa\u7684\u662f B \u7684 data \uff0c\u800c\u4e0d\u662f\u6570\u636e\u6210\u5458 a \u7684 data \u3002\u4f46\u662f\u6784\u9020\u51fd\u6570 B(int i): a(i) \u662f\u7528 2019 \u5728\u6784\u9020 a \uff0c\u8fd9\u4e00\u4e2a\u5c0f\u7ec6\u8282\u6bd4\u8f83\u5751\u3002","title":"\u6790\u6784\u6b21\u5e8f"},{"location":"languages/c-oop/combination-and-derivation/#_12","text":"","title":"\u7ee7\u627f"},{"location":"languages/c-oop/combination-and-derivation/#_13","text":"\u201c\u4e00\u822c-\u7279\u6b8a\u201d\u7ed3\u6784\uff0c\u4e5f\u79f0\u201c\u5206\u7c7b\u7ed3\u6784\u201d\uff0c\u662f\u7531\u4e00\u7ec4\u5177\u6709\u201c\u4e00\u822c-\u7279\u6b8a\u201d\u5173\u7cfb\u7684\u7c7b\u6240\u7ec4\u6210\u7684\u7ed3\u6784\uff0cC++ \u4f7f\u7528\u7ee7\u627f\u6765\u8868\u8fbe\u7c7b\u95f4\u7684\u201c\u4e00\u822c-\u7279\u6b8a\u7ed3\u6784\u201d\u3002 A \u7ee7\u627f B \uff0c\u5219\uff1a \u5c5e\u6027\u548c\u670d\u52a1\u4e0a\uff1a\u7c7b A \u5177\u6709\u7c7b B \u5168\u90e8\u7684\u5c5e\u6027\u548c\u670d\u52a1\uff0c\u800c\u4e14\u5177\u6709\u81ea\u5df1\u7279\u6709\u7684\u67d0\u4e9b\u5c5e\u6027\u6216\u670d\u52a1\u3002 A \u4e3a B \u7684\u7279\u6b8a\u7c7b\uff0c B \u4e3a A \u7684\u4e00\u822c\u7c7b\u3002 \u5bf9\u8c61\u5173\u7cfb\u4e0a\uff1a\u7c7b A \u7684\u5168\u90e8\u5bf9\u8c61\u90fd\u662f\u7c7b B \u7684\u5bf9\u8c61\uff0c\u800c\u4e14\u7c7b B \u4e2d\u5b58\u5728\u4e0d\u5c5e\u4e8e\u7c7b A \u7684\u5bf9\u8c61\u3002 A \u662f B \u7684\u7279\u6b8a\u7c7b\uff0c B \u662f A \u7684\u4e00\u822c\u7c7b\u3002","title":"\u5b9a\u4e49"},{"location":"languages/c-oop/combination-and-derivation/#_14","text":"\u88ab\u7ee7\u627f\u7684\u5df2\u6709\u7c7b\uff0c\u88ab\u79f0\u4e3a\u57fa\u7c7b\uff0c\u4e5f\u79f0\u201c\u7236\u7c7b\u201d\u3001\u201c\u4e00\u822c\u7c7b\u201d\u3002 \u901a\u8fc7\u7ee7\u627f\u5f97\u5230\u7684\u65b0\u7c7b\uff0c\u88ab\u4e3a\u6d3e\u751f\u7c7b\uff0c\u4e5f\u79f0\u201c\u5b50\u7c7b\u201d\u3001\u201c\u6269\u5c55\u7c7b\u201d\u3001\u201c\u7279\u6b8a\u7c7b\u201d\u3002 \u5e38\u89c1\u7684\u7ee7\u627f\u65b9\u5f0f\uff1a public \u3001 private \u3002 class Derived: [private] Base { } \uff0c\u7f3a\u7701\u7ee7\u627f\u65b9\u5f0f\u4e3a private \u7ee7\u627f\u3002 class Derived: public Base { } \u3002 class Derived: protected Base { } \uff0c protected \u7ee7\u627f\u5f88\u5c11\u88ab\u4f7f\u7528\u3002 \u6ce8\u610f\uff0c protected \u6570\u636e\u7ecf\u8fc7\u7ee7\u627f\u53ef\u4ee5\u7ed9\u5b50\u7c7b\u8bbf\u95ee\uff0c\u4f46\u662f private \u6570\u636e\u7ecf\u8fc7\u7ee7\u627f\u4e0d\u80fd\u7ed9\u5b50\u7c7b\u8bbf\u95ee\uff0c\u4e14\u4e8c\u8005\u90fd\u4e0d\u80fd\u7c7b\u5916\u8bbf\u95ee\u3002\u8fd9\u91cc\u63cf\u8ff0\u7684\u662f protected \u6570\u636e\u7c7b\u578b\uff0c\u800c\u4e0d\u662f protected \u7ee7\u627f\uff0c protected \u7ee7\u627f\u5f88\u5c11\u7528\u5230\u3002","title":"\u7ee7\u627f\u65b9\u5f0f\u4e0e\u8bed\u6cd5"},{"location":"languages/c-oop/combination-and-derivation/#_15","text":"\u6784\u9020\u51fd\u6570\uff1a\u521b\u5efa\u6d3e\u751f\u7c7b\u5bf9\u8c61\u65f6\uff0c\u5fc5\u987b\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u6784\u9020\u51fd\u6570\u3002\u6d3e\u751f\u7c7b\u6784\u9020\u51fd\u6570\u8c03\u7528\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff0c\u4ee5\u521b\u5efa\u6d3e\u751f\u5bf9\u8c61\u7684\u57fa\u7c7b\u90e8\u5206\u3002C++11 \u65b0\u589e\u4e86\u7ee7\u627f\u6784\u9020\u51fd\u6570\u7684\u673a\u5236\uff08\u4f7f\u7528 using \uff09\uff0c\u4f46\u9ed8\u8ba4\u4e0d\u7ee7\u627f\u3002 \u6790\u6784\u51fd\u6570\uff1a\u91ca\u653e\u5bf9\u8c61\u65f6\uff0c\u5148\u8c03\u7528\u6d3e\u751f\u7c7b\u6790\u6784\u51fd\u6570\uff0c\u518d\u8c03\u7528\u57fa\u7c7b\u6790\u6784\u51fd\u6570\u3002\u8fd9\u4e2a\u548c\u7ec4\u5408\u76f8\u4f3c\u3002 \u8d4b\u503c\u8fd0\u7b97\u7b26\uff1a\u7f16\u8bd1\u5668\u4e0d\u4f1a\u7ee7\u627f\u57fa\u7c7b\u7684\u8d4b\u503c\u8fd0\u7b97\u7b26\uff08\u53c2\u6570\u4e3a\u57fa\u7c7b\uff09\u3002\u4f46\u4f1a\u81ea\u52a8\u5408\u6210\u9690\u5f0f\u5b9a\u4e49\u7684\u6d3e\u751f\u7c7b\u7684\u8d4b\u503c\u8fd0\u7b97\u7b26\uff08\u53c2\u6570\u4e3a\u6d3e\u751f\u7c7b\uff09\uff0c\u5176\u529f\u80fd\u4e3a\u8c03\u7528\u57fa\u7c7b\u7684\u8d4b\u503c\u8fd0\u7b97\u7b26\u3002 \u53cb\u5143\u51fd\u6570\uff1a\u4e0d\u662f\u7c7b\u6210\u5458\uff0c\u6545\u800c\u65e0\u6cd5\u7ee7\u627f \u4f8b\u5b50\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 #include <iostream> using namespace std ; class Base { public : int k = 0 ; void f () { cout << \"Base::f()\" << endl ; } Base & operator = ( const Base & right ) { if ( this != & right ) { k = right . k ; cout << \"operator= (const Base &right)\" << endl ; } return * this ; } }; class Derive : public Base { }; int main () { Derive d , d2 ; cout << d . k << endl ; // Base \u6570\u636e\u6210\u5458\u88ab\u7ee7\u627f d . f (); // Base::f() \u88ab\u7ee7\u627f Base e ; // d = e; // \u7f16\u8bd1\u9519\u8bef\uff0cBase \u7684\u8d4b\u503c\u8fd0\u7b97\u7b26\u4e0d\u88ab\u7ee7\u627f d = d2 ; // \u8c03\u7528\u9690\u5f0f\u5b9a\u4e49\u7684\u8d4b\u503c\u8fd0\u7b97\u7b26\uff0c\u6d3e\u751f\u7c7b\u9690\u5f0f\u5408\u6210\u7684\u8d4b\u503c\u8fd0\u7b97\u7b26\u4f1a\u8c03\u7528\u57fa\u7c7b\u7684\u8d4b\u503c\u8fd0\u7b97\u7b26 return 0 ; } /* output: 0 Base::f() operator= (const Base &right) */ \u6ce8\u610f\u524d\u6587\u63d0\u53ca\u6d3e\u751f\u7c7b\u4f1a\u81ea\u52a8\u751f\u6210\u8d4b\u503c\u8fd0\u7b97\u7b26\uff0c\u53c2\u6570\u4e3a\u6d3e\u751f\u7c7b\u3002\u4e5f\u5c31\u662f\u4ec5\u4ec5\u5728\u6d3e\u751f\u7c7b\u5bf9\u8c61\u95f4\u8d4b\u503c\uff0c\u57fa\u7c7b\u548c\u6d3e\u751f\u7c7b\u76f8\u4e92\u8d4b\u503c\u5728\u4e0d\u5b9a\u4e49\u7c7b\u578b\u8f6c\u6362\u7684\u60c5\u51b5\u4e0b\u662f\u4e0d\u5141\u8bb8\u7684\u3002","title":"\u65e0\u6cd5\u7ee7\u627f"},{"location":"languages/c-oop/combination-and-derivation/#_16","text":"\u7ee7\u627f\u4e0e\u7ec4\u5408\u5728\u6784\u9020\u4ee5\u53ca\u6790\u6784\u4e0a\u7684\u6267\u884c\u987a\u5e8f\u7c7b\u4f3c\u3002 \u57fa\u7c7b\u4e2d\u7684\u6570\u636e\u6210\u5458\uff0c\u901a\u8fc7\u7ee7\u627f\u6210\u4e3a\u6d3e\u751f\u7c7b\u5bf9\u8c61\u7684\u4e00\u90e8\u5206\uff0c\u9700\u8981\u5728\u6784\u9020\u6d3e\u751f\u7c7b\u5bf9\u8c61\u7684\u8fc7\u7a0b\u4e2d\u8c03\u7528\u57fa\u7c7b\u6784\u9020\u51fd\u6570\u6765\u6b63\u786e\u521d\u59cb\u5316\u3002 \u82e5\u6ca1\u6709\u663e\u5f0f\u8c03\u7528\uff0c\u5219\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u8c03\u7528\u57fa\u7c7b\u7684\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u3002 \u82e5\u60f3\u8981\u663e\u5f0f\u8c03\u7528\uff0c\u5219\u53ea\u80fd\u5728\u6d3e\u751f\u7c7b\u6784\u9020\u51fd\u6570\u7684\u521d\u59cb\u5316\u6210\u5458\u5217\u8868\u4e2d\u8fdb\u884c\uff0c\u65e2\u53ef\u4ee5\u8c03\u7528\u57fa\u7c7b\u4e2d\u4e0d\u5e26\u53c2\u6570\u7684\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u4e5f\u53ef\u4ee5\u8c03\u7528\u5408\u9002\u7684\u5e26\u53c2\u6570\u7684\u5176\u4ed6\u6784\u9020\u51fd\u6570\u3002\u5148\u6267\u884c\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u6765\u521d\u59cb\u5316\u7ee7\u627f\u6765\u7684\u6570\u636e\uff0c\u518d\u6267\u884c\u6d3e\u751f\u7c7b\u7684\u6784\u9020\u51fd\u6570\u3002 \u5bf9\u8c61\u6790\u6784\u65f6\uff0c\u5148\u6267\u884c\u6d3e\u751f\u7c7b\u6790\u6784\u51fd\u6570\uff0c\u518d\u6267\u884c\u7531\u7f16\u8bd1\u5668\u81ea\u52a8\u8c03\u7528\u7684\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u3002 \u4f8b\u5b50 \u9690\u5f0f\u8c03\u7528\u9ed8\u8ba4\u6784\u9020\u51fd\u6570 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 class Base { int data ; public : Base () : data ( 0 ) { cout << \"Base::Base(\" << data << \") \\n \" ; } Base ( int i ) : data ( i ) { cout << \"Base::Base(\" << data << \") \\n \" ; } }; class Derive : public Base { public : Derive () { cout << \"Derive::Derive()\" << endl ; } // \u65e0\u663e\u5f0f\u8c03\u7528\u57fa\u7c7b\u6784\u9020\u51fd\u6570\uff0c\u5219\u8c03\u7528\u57fa\u7c7b\u9ed8\u8ba4\u6784\u9020\u51fd\u6570 }; int main () { Derive obj ; return 0 ; } // g++ 1.cpp \u2013o 1.out -std=c++11 /* output: Base::Base(0) Derive::Derive() */ \u5148\u5b8c\u6210\u4e86\u57fa\u7c7b\u90e8\u5206\u7684\u6784\u9020\uff0c\u518d\u5b8c\u6210\u4e86\u6d3e\u751f\u7c7b\u90e8\u5206\u7684\u6784\u9020\u3002 \u663e\u5f0f\u8c03\u7528\u4e86\u57fa\u7c7b\u5e26\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 class Base { int data ; public : Base () : data ( 0 ) { cout << \"Base::Base(\" << data << \") \\n \" ; } Base ( int i ) : data ( i ) { cout << \"Base::Base(\" << data << \") \\n \" ; } }; class Derive : public Base { public : Derive ( int i ) : Base ( i ) { cout << \"Derive::Derive()\" << endl ; } // \u663e\u5f0f\u8c03\u7528\u57fa\u7c7b\u6784\u9020\u51fd\u6570 }; int main () { Derive obj ( 356 ); return 0 ; } // g++ 1.cpp \u2013o 1.out -std=c++11 \u663e\u5f0f\u8c03\u7528\u4e86\u57fa\u7c7b\u7684\u5e26\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\u53ea\u80fd\u5728\u521d\u59cb\u5316\u5217\u8868\u4e2d\u8fdb\u884c\u3002 \u542f\u7528 using \u5173\u952e\u5b57 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 class Base { int data ; public : Base ( int i ) : data ( i ) { cout << \"Base::Base(\" << i << \") \\n \" ; } }; class Derive : public Base { public : using Base :: Base ; // \u76f8\u5f53\u4e8e Derive(int i): Base(i) { }; }; int main () { Derive obj ( 356 ); return 0 ; } // g++ 1.cpp \u2013o 1.out -std=c++11 /* output: Base::Base(356) */ \u5728\u6d3e\u751f\u7c7b\u4e2d\u4f7f\u7528 using Base::Base \u6765\u7ee7\u627f\u57fa\u7c7b\u6784\u9020\u51fd\u6570\uff0c\u76f8\u5f53\u4e8e\u7ed9\u6d3e\u751f\u7c7b\u201c\u5b9a\u4e49\u201d\u4e86\u76f8\u5e94\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\u3002\u5982\u679c\u57fa\u7c7b\u91cc\u6709\u591a\u4e2a\u4e0d\u540c\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\uff0c using \u8bed\u53e5\u4f1a\u5206\u522b\u6784\u9020\u5bf9\u5e94\u7684\u4e0d\u540c\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\u3002 using \u4e00\u5e76\u542f\u7528 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 class Base { int data ; public : Base ( int i ) : data ( i ) { cout << \"Base::Base(\" << i << \") \\n \" ; } Base ( int i , int j ) { cout << \"Base::Base(\" << i << \",\" << j << \") \\n \" ; } }; class Derive : public Base { public : using Base :: Base ; // \u76f8\u5f53\u4e8e Derive(int i): Base(i) { }; // \u52a0\u4e0a Derive(int i, int j): Base(i, j) { }; }; int main () { Derive obj1 ( 356 ); Derive obj2 ( 356 , 789 ); return 0 ; } // g++ 1.cpp \u2013o 1.out -std=c++11 /* output: Base::Base(356) Base::Base(356, 789) */ \u5f53\u57fa\u7c7b\u5b58\u5728\u591a\u4e2a\u6784\u9020\u51fd\u6570\u65f6\uff0c\u4f7f\u7528 using \u4f1a\u7ed9\u6d3e\u751f\u7c7b\u81ea\u52a8\u6784\u9020\u591a\u4e2a\u76f8\u5e94\u7684\u6784\u9020\u51fd\u6570\u3002\u6ce8\u610f\u8fd9\u91cc\u662f\u6307\u4e00\u4e2a\u57fa\u7c7b\u6709\u591a\u4e2a\u6784\u9020\u51fd\u6570\uff0c\u800c\u4e0d\u662f\u591a\u91cd\u7ee7\u627f\u3002 \u5982\u679c\u57fa\u7c7b\u7684\u67d0\u4e2a\u6784\u9020\u51fd\u6570\u88ab\u58f0\u660e\u4e3a\u79c1\u6709\u6210\u5458\u51fd\u6570\uff0c\u5219\u4e0d\u80fd\u5728\u6d3e\u751f\u7c7b\u4e2d\u58f0\u660e\u7ee7\u627f\u8be5\u6784\u9020\u51fd\u6570\uff08\u5728\u5148\u524d\u7ae0\u8282\u6709\u53d9\u8ff0\u8fc7\u7ed3\u5408\u59d4\u6d3e\u6784\u9020\u51fd\u6570\u5c06\u6784\u9020\u51fd\u6570\u8bbe\u7f6e\u4e3a\u79c1\u6709\u6210\u5458\u51fd\u6570\u7684\u4f8b\u5b50\uff09\u3002 \u5982\u679c\u6d3e\u751f\u7c7b\u4f7f\u7528\u4e86\u7ee7\u627f\u6784\u9020\u51fd\u6570\uff0c\u7f16\u8bd1\u5668\u5c31\u4e0d\u4f1a\u518d\u4e3a\u6d3e\u751f\u7c7b\u751f\u6210\u9690\u5f0f\u5b9a\u4e49\u7684\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u3002 \u901a\u8fc7 using Base::Base \u6765\u7ee7\u627f\u6784\u9020\u51fd\u6570\u6709\u9650\u5236\uff0c\u53ef\u80fd\u9700\u8981\u6d3e\u751f\u7c7b\u5728\u57fa\u7c7b\u57fa\u7840\u4e4b\u5916\u6ca1\u6709\u6ca1\u6709\u65b0\u7684\u6570\u636e\u6210\u5458\uff0c\u4f46\u662f\u6d3e\u751f\u7c7b\u53ef\u4ee5\u6709\u65b0\u7684\u65b9\u6cd5\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 #include <iostream> using namespace std ; class Base { int data ; public : Base ( int i ) : data ( i ) { cout << \"Base::Base(\" << i << \") \\n \" ; } }; class Derive : public Base { public : int a ; using Base :: Base ; // \u76f8\u5f53\u4e8e Derive(int i): Base(i) { }; }; int main () { Derive obj ( 356 ); cout << obj . a << endl ; return 0 ; } // g++ 1.cpp \u2013o 1.out -std=c++11 \u5f53 a \u4e0d\u5c31\u5730\u521d\u59cb\u5316\u65f6\uff0c\u901a\u8fc7 using Base::Base \u6765\u7684\u6784\u9020\u51fd\u6570\u4f1a\u4f7f\u5f97 a \u7684\u503c\u5b8c\u5168\u4e0d\u786e\u5b9a\uff0c\u800c\u5c31\u5730\u521d\u59cb\u5316\u5316\u540e\u53ef\u4ee5\u786e\u5b9a\u3002","title":"\u6784\u9020\u4e0e\u6790\u6784"},{"location":"languages/c-oop/combination-and-derivation/#_17","text":"","title":"\u4e24\u7c7b\u7ee7\u627f\u65b9\u5f0f\u7684\u9009\u62e9"},{"location":"languages/c-oop/combination-and-derivation/#public","text":"\u57fa\u7c7b\u4e2d\u516c\u6709\u6210\u5458\u4ecd\u80fd\u5728\u6d3e\u751f\u7c7b\u4e2d\u4fdd\u6301\u516c\u6709\u3002\u539f\u63a5\u53e3\u53ef\u6cbf\u7528\uff0c\u6700\u5e38\u7528\u3002","title":"public \u7ee7\u627f"},{"location":"languages/c-oop/combination-and-derivation/#private","text":"is-implementing-in-terms-of\uff08\u7167\u6b64\u5b9e\u73b0\uff09\uff1a\u7528\u57fa\u7c7b\u63a5\u53e3\u5b9e\u73b0\u6d3e\u751f\u7c7b\u529f\u80fd\u3002\u79fb\u9664\u4e86 is-a \u5173\u7cfb\u3002 \u901a\u5e38\u4e0d\u4f7f\u7528\uff0c\u7528 private \u7ec4\u5408\u66ff\u4ee3\u3002\u53ef\u7528\u4e8e\u9690\u85cf\u6216\u516c\u5f00\u57fa\u7c7b\u7684\u90e8\u5206\u63a5\u53e3\u3002\u516c\u5f00\u65b9\u6cd5\uff1a using \u5173\u952e\u5b57\u3002","title":"private \u7ee7\u627f"},{"location":"languages/c-oop/combination-and-derivation/#_18","text":"\u57fa\u7c7b\u4e2d\u7684\u79c1\u6709\u6210\u5458\uff0c\u4e0d\u5141\u8bb8\u5728\u6d3e\u751f\u7c7b\u6210\u5458\u51fd\u6570\u4e2d\u8bbf\u95ee\uff0c\u4e5f\u4e0d\u5141\u8bb8\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\u8bbf\u95ee\u5b83\u4eec\uff0c\u4ec5\u5141\u8bb8\u57fa\u7c7b\u7684\u516c\u5f00\u63a5\u53e3\u8bbf\u95ee\u4ed6\u4eec\uff0c\u4f46\u662f\u57fa\u7c7b\u7684\u516c\u5f00\u63a5\u53e3\u5728\u4e0d\u540c\u7684\u7ee7\u627f\u5f53\u4e2d\u8bbf\u95ee\u6743\u9650\u4e0d\u540c\u3002\uff08\u7ec4\u5408\u5f53\u4e2d\u4e5f\u662f\u5982\u6b64\uff09 \u90a3\u4e48\u5982\u4f55\u8bbf\u95ee\u57fa\u7c7b\u4e2d\u7684\u79c1\u6709\u6210\u5458\uff1f \u60c5\u51b5\u4e00\uff0c public \u7ee7\u627f\u3002\u6d3e\u751f\u7c7b\u5bf9\u8c61\u548c\u6d3e\u751f\u7c7b\u6210\u5458\u51fd\u6570\u53ef\u4ee5\u8bbf\u95ee\u57fa\u7c7b\u7684\u516c\u5f00\u63a5\u53e3\u4ece\u800c\u8bbf\u95ee\u57fa\u7c7b\u79c1\u6709\u6210\u5458\u3002 \u60c5\u51b5\u4e8c\uff0c private \u7ee7\u627f\u3002\u548c private \u7ec4\u5408\u540c\u7406\uff0c\u5728\u7c7b\u5916\u65e2\u65e0\u6cd5\u76f4\u63a5\u8bbf\u95ee\u57fa\u7c7b\u7684 private \u6210\u5458\uff0c\u4e5f\u65e0\u6cd5\u8bbf\u95ee\u57fa\u7c7b\u7684 public \u6210\u5458\uff08\u56e0\u4e3a\u7ee7\u627f\u4e4b\u540e\u88ab\u79c1\u6709\u5316\u4e86\uff09\u3002 \u4efb\u4f55\u7ee7\u627f\u5f53\u4e2d\uff0c\u57fa\u7c7b\u7684 private \u6210\u5458\u90fd\u65e0\u6cd5\u88ab\u6d3e\u751f\u7c7b\u7684\u5171\u6709\u63a5\u53e3\u8bbf\u95ee\uff0c\u4ec5\u4ec5\u53ef\u4ee5\u88ab\u57fa\u7c7b\u7684\u5171\u6709\u90e8\u5206\u8bbf\u95ee\u3002 private \u7ee7\u627f\u4e2d\uff0c\u57fa\u7c7b\u7684 public \u63a5\u53e3\u4e0d\u80fd\u6d3e\u751f\u7c7b\u5bf9\u8c61\u76f4\u63a5\u8bbf\u95ee\uff0c\u4f46\u662f\u53ef\u4ee5\u88ab\u6d3e\u751f\u7c7b\u5bf9\u8c61\u7684\u7684\u5171\u6709\u63a5\u53e3\u53ef\u4ee5\u8bbf\u95ee\u3002 \u6545\u800c\u6211\u4eec\u5148\u8bbe\u7f6e\u57fa\u7c7b\u7684\u516c\u6709\u63a5\u53e3\u8bbf\u95ee\u57fa\u7c7b\u7684\u79c1\u6709\u6210\u5458\uff0c\u63a5\u7740\u8bbe\u8ba1\u6d3e\u751f\u7c7b\u7684\u516c\u6709\u63a5\u53e3\u8bbf\u95ee\u57fa\u7c7b\u7684\u516c\u6709\u63a5\u53e3\uff0c\u4ece\u800c\u95f4\u63a5\u5b9e\u73b0\u4e86\u8bbf\u95ee\u57fa\u7c7b\u7684\u79c1\u6709\u6210\u5458\u3002 \u8bbf\u95ee\u57fa\u7c7b\u79c1\u6709\u90e8\u5206\u53ea\u80fd\u901a\u8fc7\u57fa\u7c7b\u7684 public \u63a5\u53e3\u5b9e\u73b0\u3002 private \u7ee7\u627f\u65f6\uff0c\u57fa\u7c7b public \u63a5\u53e3\u4ec5\u53ef\u6d3e\u751f\u7c7b\u6210\u5458\u51fd\u6570\u8bbf\u95ee\uff0c\u4ece\u800c\u8bbf\u95ee\u57fa\u7c7b\u79c1\u6709\u90e8\u5206\u9700\u8981\u4e24\u6b21\u95f4\u63a5\u8bbf\u95ee\u3002\u800c public \u7ee7\u627f\u65f6\uff0c\u57fa\u7c7b public \u63a5\u53e3\u5bf9\u6d3e\u751f\u7c7b\u51fd\u6570\u548c\u7c7b\u5916\u51fd\u6570\u90fd\u662f\u5f00\u653e\u7684\u3002\u53ef\u4ee5\u6d3e\u751f\u7c7b\u5bf9\u8c61\u76f4\u63a5\u8bbf\u95ee\u57fa\u7c7b public \u63a5\u53e3\uff0c\u4e5f\u53ef\u4ee5\u6d3e\u751f\u7c7b\u5bf9\u8c61\u7684\u6210\u5458\u51fd\u6570\u8bbf\u95ee\u57fa\u7c7b public \u63a5\u53e3\u3002 \u57fa\u7c7b\u4e2d\u7684\u516c\u6709\u6210\u5458 \u5141\u8bb8\u5728\u6d3e\u751f\u7c7b\u6210\u5458\u51fd\u6570\u4e2d\u88ab\u8bbf\u95ee\u3002 \u82e5\u662f\u4f7f\u7528 public \u7ee7\u627f\u65b9\u5f0f\uff0c\u5219\u6210\u4e3a\u6d3e\u751f\u7c7b\u516c\u6709\u6210\u5458\uff0c\u53ef\u4ee5\u88ab\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\u8bbf\u95ee\uff0c\u4e5f\u53ef\u4ee5\u88ab\u6d3e\u751f\u7c7b\u6210\u5458\u51fd\u6570\u8bbf\u95ee\u3002 \u82e5\u662f\u4f7f\u7528 private / protected \u7ee7\u627f\u65b9\u5f0f\uff0c\u5219\u6210\u4e3a\u6d3e\u751f\u7c7b\u79c1\u6709/\u4fdd\u62a4\u6210\u5458\uff0c\u4e0d\u80fd\u5728\u7c7b\u5916\u76f4\u63a5\u8bbf\u95ee\u3002\u82e5\u60f3\u8ba9\u67d0 public \u6210\u5458\u6570\u636e\u5728 private / protected \u7ee7\u627f\u540e\u80fd\u88ab\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\u8bbf\u95ee\uff0c\u53ef\u5728\u6d3e\u751f\u7c7b public \u90e8\u5206\u7528\u5173\u952e\u5b57 using \u58f0\u660e\u5b83\u7684\u540d\u5b57\uff08 .h \u6587\u4ef6\u91cc\uff09\u3002\u6216\u8005\u6309\u7167\u4e0a\u6587\u8bbe\u8ba1\u6d3e\u751f\u7c7b\u7684\u5171\u6709\u63a5\u53e3\u8bbf\u95ee\u57fa\u7c7b\u7684 public \u6210\u5458\uff0c\u4f46\u662f\u4e5f\u65e0\u6cd5\u76f4\u63a5\u8bbf\u95ee\u6d3e\u751f\u7c7b\u5bf9\u8c61\u7684\u57fa\u7c7b\u7684 public \u6210\u5458\u3002 \u6240\u8c13\u4e0d\u80fd\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\u8bbf\u95ee\uff1a\u8fd9\u91cc\u662f\u6307\u76f4\u63a5\u5728\u7c7b\u5916\u901a\u8fc7 obj.data \u7684\u65b9\u5f0f\u8bbf\u95ee\uff0c\u800c\u4e0d\u662f\u8bf4\u4e0d\u53ef\u4ee5\u901a\u8fc7\u6d3e\u751f\u7c7b\u7684\u6210\u5458\u51fd\u6570\u6765\u8bbf\u95ee\u3002 \u57fa\u7c7b\u4e2d\u7684\u4fdd\u62a4\u6210\u5458 \u4fdd\u62a4\u6210\u5458\u5141\u8bb8\u5728\u6d3e\u751f\u7c7b\u6210\u5458\u51fd\u6570\u4e2d\u88ab\u8bbf\u95ee\uff0c\u4f46\u4e0d\u80fd\u88ab\u5916\u90e8\u51fd\u6570\u8bbf\u95ee\uff0c\u4e5f\u4e0d\u5141\u8bb8\u5bf9\u8c61\u76f4\u63a5\u8bbf\u95ee\u3002 \u4f8b\u5b50 public \u76f4\u63a5\u7ee7\u627f\u57fa\u7c7b\u5171\u6709\u63a5\u53e3 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 #include <iostream> using namespace std ; class Base { public : void baseFunc () { cout << \"in Base::baseFunc()...\" << endl ; } }; class Derive1 : public Base { }; // D1 \u7c7b\u7684\u7ee7\u627f\u65b9\u5f0f\u662f public \u7ee7\u627f int main () { Derive1 obj1 ; cout << \"calling obj1.baseFunc()...\" << endl ; obj1 . baseFunc (); // \u57fa\u7c7b\u63a5\u53e3\u6210\u4e3a\u6d3e\u751f\u7c7b\u63a5\u53e3\u7684\u4e00\u90e8\u5206\uff0c\u6d3e\u751f\u7c7b\u5bf9\u8c61\u53ef\u8c03\u7528 return 0 ; } /* output: calling obj1.baseFunc()... in Base::baseFunc()... */ private \u95f4\u63a5\u8bbf\u95ee\u57fa\u7c7b\u5171\u6709\u63a5\u53e3 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 #include <iostream> using namespace std ; class Base { public : void baseFunc () { cout << \"in Base::baseFunc()...\" << endl ; } }; class Derive2 : private Base { // \u79c1\u6709\u7ee7\u627f\uff0c\u7528\u57fa\u7c7b\u63a5\u53e3\u5b9e\u73b0\u6d3e\u751f\u7c7b\u529f\u80fd public : void deriveFunc () { cout << \u201c in Derive2 :: deriveFunc (), calling Base :: baseFunc ()... \" << endl; baseFunc (); // \u79c1\u6709\u7ee7\u627f\u65f6\uff0c\u57fa\u7c7b\u63a5\u53e3\u5728\u6d3e\u751f\u7c7b\u6210\u5458\u51fd\u6570\u4e2d\u53ef\u4ee5\u4f7f\u7528 } }; int main () { Derive2 obj2 ; cout << \"calling obj2.deriveFunc()...\" << endl ; obj2 . deriveFunc (); // obj2.baseFunc(); // ERROR: \u4e0d\u5141\u8bb8\u5728\u7c7b\u5916\u76f4\u63a5\u8bbf\u95ee\u57fa\u7c7b\u63a5\u53e3 return 0 ; } private \u7ee7\u627f\u7ed3\u5408 using \u542f\u7528\u57fa\u7c7b\u5171\u6709\u63a5\u53e3 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 #include <iostream> using namespace std ; class Base { public : void baseFunc () { cout << \"in Base::baseFunc()...\" << endl ; } }; class Derive3 : private Base { // \u79c1\u6709\u7ee7\u627f public : // \u79c1\u6709\u7ee7\u627f\u65f6\uff0c\u5728\u6d3e\u751f\u7c7b public \u90e8\u5206\u58f0\u660e\u57fa\u7c7b\u6210\u5458\u540d\u5b57 using Base :: baseFunc ; }; int main () { Derive3 obj3 ; cout << \"calling obj3.baseFunc()...\" << endl ; obj3 . baseFunc (); // \u57fa\u7c7b\u63a5\u53e3\u5728\u6d3e\u751f\u7c7b public \u90e8\u5206\u58f0\u660e\uff0c\u5219\u6d3e\u751f\u7c7b\u5bf9\u8c61\u53ef\u8c03\u7528 return 0 ; } \u4fdd\u62a4\u6210\u5458\u7684\u8bbf\u95ee 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 #include <iostream> using namespace std ; class Base { private : int a { 0 }; protected : int b { 0 }; }; class Derive : private Base { public : void getA () { cout << a << endl ; } // \u7f16\u8bd1\u9519\u8bef\uff0c\u4e0d\u53ef\u8bbf\u95ee\u57fa\u7c7b\u4e2d\u79c1\u6709\u6210\u5458 void getB () { cout << b << endl ; } // \u53ef\u4ee5\u8bbf\u95ee\u57fa\u7c7b\u4e2d\u4fdd\u62a4\u6210\u5458 }; int main () { Derive d ; d . getB (); // cout << d.b; // \u7f16\u8bd1\u9519\u8bef\uff0c\u6d3e\u751f\u7c7b\u5bf9\u8c61\u4e0d\u53ef\u8bbf\u95ee\u57fa\u7c7b\u4e2d\u4fdd\u62a4\u6210\u5458 return 0 ; } \u5c0f\u7ed3\uff1a public \u7ee7\u627f\uff1a\u57fa\u7c7b\u7684\u516c\u6709\u6210\u5458\uff0c\u4fdd\u62a4\u6210\u5458\uff0c\u79c1\u6709\u6210\u5458\u4f5c\u4e3a\u6d3e\u751f\u7c7b\u7684\u6210\u5458\u65f6\uff0c\u90fd\u4fdd\u6301\u539f\u6709\u7684\u72b6\u6001\u3002 private \u7ee7\u627f\uff1a\u57fa\u7c7b\u7684\u516c\u6709\u6210\u5458\uff0c\u4fdd\u62a4\u6210\u5458\uff0c\u79c1\u6709\u6210\u5458\u4f5c\u4e3a\u6d3e\u751f\u7c7b\u7684\u6210\u5458\u65f6\uff0c\u90fd\u4f5c\u4e3a\u79c1\u6709\u6210\u5458\u3002 protected \u7ee7\u627f\uff1a\u57fa\u7c7b\u7684\u516c\u6709\u6210\u5458\uff0c\u4fdd\u62a4\u6210\u5458\u4f5c\u4e3a\u6d3e\u751f\u7c7b\u7684\u6210\u5458\u65f6\uff0c\u90fd\u6210\u4e3a\u4fdd\u62a4\u6210\u5458\uff0c\u57fa\u7c7b\u7684\u79c1\u6709\u6210\u5458\u4ecd\u7136\u662f\u79c1\u6709\u7684\u3002","title":"\u6210\u5458\u8bbf\u95ee\u6743\u9650"},{"location":"languages/c-oop/combination-and-derivation/#_19","text":"\u5148\u7406\u6e05\u695a\u57fa\u7c7b\u7684 public \u7684\u8bbf\u95ee\u6743\u9650\uff1a \u57fa\u7c7b\u7684 public \u5728 private \u7ee7\u627f\u4e2d\u6210\u4e3a private \uff0c\u4ec5\u5141\u8bb8\u6d3e\u751f\u7c7b\u7684\u6210\u5458\u51fd\u6570\u8bbf\u95ee\uff0c\u4e0d\u5141\u8bb8\u6d3e\u751f\u7c7b\u5bf9\u8c61\u76f4\u63a5\u8bbf\u95ee\u3002 \u57fa\u7c7b\u7684 public \u5728 protected \u7ee7\u627f\u4e2d\u6210\u4e3a protected \uff0c\u4ec5\u5141\u8bb8\u6d3e\u751f\u7c7b\u7684\u6210\u5458\u51fd\u6570\u8bbf\u95ee\uff0c\u4e0d\u5141\u8bb8\u6d3e\u751f\u7c7b\u5bf9\u8c61\u76f4\u63a5\u8bbf\u95ee\u3002 \u57fa\u7c7b\u7684 public \u5728 public \u7ee7\u627f\u4e2d\u8fd8\u662f public \uff0c\u53ef\u4ee5\u5728\u6d3e\u751f\u7c7b\u6210\u5458\u51fd\u6570\u4e2d\u8bbf\u95ee\uff0c\u4e5f\u53ef\u4ee5\u6d3e\u751f\u7c7b\u5bf9\u8c61\u76f4\u63a5\u8bbf\u95ee\u3002 \u4e4b\u540e\u662f\u57fa\u7c7b\u7684 private \u7684\u8bbf\u95ee\u6743\u9650\uff1a \u57fa\u7c7b\u7684 private \uff0c\u5728\u4e09\u79cd\u7ee7\u627f\u65b9\u5f0f\u4e2d\u5747\u662f private \uff0c\u53ea\u80fd\u901a\u8fc7\u57fa\u7c7b\u7684 public \u51fd\u6570\u8bbf\u95ee\uff0c\u4e0d\u53ef\u4ee5\u6d3e\u751f\u7c7b\u5bf9\u8c61\u76f4\u63a5\u8bbf\u95ee\u3002\u57fa\u7c7b\u7684 public \u51fd\u6570\u5728\u4e09\u79cd\u7ee7\u627f\u65b9\u5f0f\u4e2d\u8bbf\u95ee\u6743\u9650\u4e0d\u540c\u3002 public \u7ee7\u627f\uff0c\u5219\u57fa\u7c7b\u7684 public \u51fd\u6570\u53ef\u4ee5\u7c7b\u5916\u76f4\u63a5\u8bbf\u95ee\u3002 protected \u548c private \u7ee7\u627f\uff0c\u57fa\u7c7b\u7684 public \u51fd\u6570\u53ea\u5141\u8bb8\u6d3e\u751f\u7c7b\u51fd\u6570\u8bbf\u95ee\u3002 \u6700\u540e\u662f\u57fa\u7c7b\u7684 protected \u7684\u8bbf\u95ee\u6743\u9650\uff1a \u57fa\u7c7b\u7684 protected \u5f88\u7b80\u5355\uff0c\u4e09\u79cd\u7ee7\u627f\u90fd\u662f\u5fc5\u7136\u5141\u8bb8\u6d3e\u751f\u7c7b\u7684\u6210\u5458\u51fd\u6570\u8bbf\u95ee\uff0c\u4e0d\u5141\u8bb8\u5bf9\u8c61\u76f4\u63a5\u8bbf\u95ee\u3002\u57fa\u7c7b\u7684 protected \u5728 public \u4e0e protected \u7ee7\u627f\u4e2d\u8fd8\u662f protected \uff0c\u4f46\u5728 private \u7ee7\u627f\u540e\u867d\u7136\u662f private \u5c5e\u6027\uff0c\u4f46\u4e5f\u5141\u8bb8\u57fa\u7c7b\u7684 public \u51fd\u6570\u4e0e\u6d3e\u751f\u7c7b\u7684 public \u51fd\u6570\u8bbf\u95ee\uff0c\u4e0d\u80fd\u5bf9\u8c61\u76f4\u63a5\u8bbf\u95ee\u3002 \u5355\u72ec\u8ba8\u8bba protected \u7ee7\u627f\uff1a protected \u7ee7\u627f\u4f1a\u4f7f\u5f97\u57fa\u7c7b\u7684 public \u548c protected \u6210\u4e3a protected \uff0c\u53ea\u80fd\u6d3e\u751f\u7c7b\u6210\u5458\u51fd\u6570\u8bbf\u95ee\u3002\u800c private \u7ecf\u8fc7 protected \u7ee7\u627f\uff0c\u8fd8\u662f\u53ea\u80fd\u57fa\u7c7b\u7684 public \u51fd\u6570\u8bbf\u95ee\uff0c\u800c\u57fa\u7c7b\u7684 public \u6210\u5458\u51fd\u6570\u53ea\u80fd\u6d3e\u751f\u7c7b\u6210\u5458\u51fd\u6570\u8bbf\u95ee\uff0c\u6d3e\u751f\u7c7b\u6210\u5458\u51fd\u6570\u65e0\u6cd5\u76f4\u63a5\u8bbf\u95ee\u6b64\u65f6\u7684\u57fa\u7c7b private \u6570\u636e\u3002 \u4f8b\u9898 protected \u5bf9\u8c61\u4e0d\u53ef\u7c7b\u5916\u8bbf\u95ee\uff0c\u4f46\u662f\u53ef\u4ee5\u88ab\u7ee7\u627f\u7c7b\u7684\u6210\u5458\u51fd\u6570\u8bbf\u95ee\u3002","title":"\u603b\u7ed3"},{"location":"languages/c-oop/combination-and-derivation/#_20","text":"\u4f18\u70b9\uff1a\u652f\u6301\u589e\u91cf\u5f00\u53d1\uff0c\u5f15\u5165\u65b0\u4ee3\u7801\u800c\u4e0d\u5f71\u54cd\u5df2\u6709\u4ee3\u7801\u6b63\u786e\u6027\u3002 \u76f8\u4f3c\u70b9\uff1a\u5b9e\u73b0\u4ee3\u7801\u91cd\u7528\u3002\u5c06\u5b50\u5bf9\u8c61\u5f15\u5165\u65b0\u7c7b\uff0c\u4f7f\u7528\u6784\u9020\u51fd\u6570\u7684\u521d\u59cb\u5316\u6210\u5458\u5217\u8868\u521d\u59cb\u5316\u3002 \u4e0d\u540c\u70b9\uff1a \u7ec4\u5408\u3002\u5d4c\u5165\u4e00\u4e2a\u5bf9\u8c61\u4ee5\u5b9e\u73b0\u65b0\u7c7b\u7684\u529f\u80fd\uff0chas-a \u5173\u7cfb\uff0c\u65e0\u91cd\u5199\u9690\u85cf\u3002 \u7ee7\u627f\u3002\u6cbf\u7528\u5df2\u5b58\u5728\u7684\u7c7b\u63d0\u4f9b\u7684\u63a5\u53e3\uff0cis-a \u4e0e is-implementing-in-terms-of\uff0c\u6709\u91cd\u5199\u9690\u85cf\u3002","title":"\u7ec4\u5408\u4e0e\u7ee7\u627f\u7684\u5173\u7cfb"},{"location":"languages/c-oop/combination-and-derivation/#_21","text":"","title":"\u91cd\u8f7d\u4e0e\u91cd\u5199\u9690\u85cf"},{"location":"languages/c-oop/combination-and-derivation/#_22","text":"\u91cd\u8f7d\uff08\u82f1\u8bed\uff1aoverload\uff09 \u76ee\u7684\uff1a\u63d0\u4f9b\u540c\u540d\u51fd\u6570\u7684\u4e0d\u540c\u5b9e\u73b0\uff0c\u5c5e\u4e8e\u9759\u6001\u591a\u6001\u3002 \u51fd\u6570\u540d\u5fc5\u987b\u76f8\u540c\uff0c\u51fd\u6570\u53c2\u6570\u5fc5\u987b\u4e0d\u540c\uff0c\u4f5c\u7528\u57df\u76f8\u540c\uff08\u5982\u4f4d\u4e8e\u540c\u4e00\u4e2a\u7c7b\u4e2d\u6216\u540c\u540d\u5168\u5c40\u51fd\u6570\uff09\u3002 \u91cd\u5199\u9690\u85cf\uff08\u82f1\u8bed\uff1aredefining\uff09 \u76ee\u7684\uff1a\u5728\u6d3e\u751f\u7c7b\u4e2d\u91cd\u65b0\u5b9a\u4e49\u57fa\u7c7b\u51fd\u6570\uff0c\u5b9e\u73b0\u6d3e\u751f\u7c7b\u7684\u7279\u6b8a\u529f\u80fd\u3002 \u5c4f\u853d\u4e86\u57fa\u7c7b\u7684\u6240\u6709\u5176\u5b83\u540c\u540d\u51fd\u6570\u3002 \u51fd\u6570\u540d\u5fc5\u987b\u76f8\u540c\uff0c\u51fd\u6570\u53c2\u6570\u53ef\u4ee5\u4e0d\u540c\u3002 \u7ec4\u5408\u4e0d\u4f1a\u53d1\u751f\u91cd\u5199\u9690\u85cf\uff0c\u4f46\u662f\u7ee7\u627f\u4f1a\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 #include <iostream> using namespace std ; class Wheel { public : void inflate () { cout << \"Wheel::inflate\" << endl ; } void start () { cout << \"Wheel::start\" << endl ; } }; class Engine { public : void start () { cout << \"Engine::start\" << endl ; } void stop () { } }; class Car { public : Engine engine ; Wheel wheel [ 4 ]; void start () { cout << \"Car::start\" << endl ; } }; int main () { Car car ; car . wheel [ 0 ]. inflate (); car . engine . start (); car . wheel [ 2 ]. start (); car . start (); return 0 ; } /* output: Wheel::inflate Engine::start Wheel::start Car::start */ \u5728\u7ec4\u5408\u4e2d\uff0c\u6211\u4eec\u5b9e\u73b0\u4e86\u5bf9\u4e8e\u6bcf\u4e00\u7c7b\u7684\u540c\u540d\u51fd\u6570\u8c03\u7528\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 #include <iostream> using namespace std ; class Pet { public : void eat () { cout << \"Pet eat\" << endl ; } void sleep () { cout << \"Pet sleep\" << endl ; } }; class Duck : public Pet { public : void eat () { cout << \"Duck eat\" << endl ; } }; int main () { Duck duck ; duck . eat (); duck . sleep (); return 0 ; } /* output: Duck eat Pet sleep */ \u7136\u800c\u5728\u7ee7\u627f\u4e2d\uff0c\u5f88\u660e\u663e Pet \u7c7b\u7684 eat \u51fd\u6570\u88ab\u6d3e\u751f\u7c7b\u91cd\u5b9a\u4e49\uff0c\u65e0\u6cd5\u88ab\u8c03\u7528\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 #include <iostream> using namespace std ; class T { }; class Base { public : void f () { cout << \"B::f() \\n \" ; } void f ( int i ) { cout << \"Base::f(\" << i << \") \\n \" ; } // \u91cd\u8f7d void f ( double d ) { cout << \"Base::f(\" << d << \") \\n \" ; } // \u91cd\u8f7d void f ( T ) { cout << \"Base::f(T) \\n \" ; } // \u91cd\u8f7d }; class Derive : public Base { public : void f ( int i ) { cout << \"Derive::f(\" << i << \") \\n \" ; } // \u91cd\u5199\u9690\u85cf }; int main () { Derive d ; d . f ( 10 ); d . f ( 4.9 ); // \u7f16\u8bd1\u8b66\u544a\u3002\u6267\u884c\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362\u3002 // d.f(); // \u88ab\u5c4f\u853d\uff0c\u7f16\u8bd1\u9519\u8bef // d.f(T()); // \u88ab\u5c4f\u853d\uff0c\u7f16\u8bd1\u9519\u8bef return 0 ; } \u5728 retexter_gcc \u7f16\u8bd1\u5668\u4e0a\u65e0\u6cd5\u8b66\u544a\uff0c\u4f46\u662f\u4f7f\u7528 clang \u7f16\u8bd1\u5668\u7684\u8b66\u544a\u5982\u4e0b\uff1a 1 2 3 4 1869255217/source.cpp:18:7: warning: implicit conversion from 'double' to 'int' changes value from 4.9 to 4 [-Wliteral-conversion] d.f(4.9); ~ ^~~ 1 warning generated.","title":"\u5b9a\u4e49"},{"location":"languages/c-oop/combination-and-derivation/#using","text":"\u548c\u5bf9\u6784\u9020\u51fd\u6570\u7684\u7ee7\u627f\u4e00\u6837\uff0c using \u53ef\u4ee5\u4e00\u5e76\u542f\u7528\u6240\u6709\u88ab\u91cd\u5199\u8986\u76d6\u7684\u540c\u540d\u51fd\u6570\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 #include <iostream> using namespace std ; class T { }; class Base { public : void f () { cout << \"Base::f() \\n \" ; } void f ( int i ) { cout << \"Base::f(\" << i << \") \\n \" ; } void f ( double d ) { cout << \"Base::f(\" << d << \") \\n \" ; } void f ( T ) { cout << \"Base::f(T) \\n \" ; } }; class Derive : public Base { public : using Base :: f ; void f ( int i ) { cout << \"Derive::f(\" << i << \") \\n \" ; } }; int main () { Derive d ; d . f ( 10 ); d . f ( 4.9 ); d . f (); d . f ( T ()); return 0 ; } /* output: Derive::f(10) Base::f(4.9) Base::f() Base::f(T) */ \u5e76\u4e14\u6ce8\u610f\u5230\uff0c Derive \u548c Base \u90fd\u6709 void f(int i) \u51fd\u6570\uff0c\u6b64\u5904\u6ca1\u6709\u53d1\u751f\u91cd\u5b9a\u4e49\uff0c\u800c\u662f\u8c03\u7528\u4e86\u6d3e\u751f\u7c7b\u7684 void f(int i) \u3002 \u53e6\u5916\u4e00\u79cd\u5728\u6d3e\u751f\u7c7b\u4e2d\u8c03\u7528\u57fa\u7c7b\u540c\u540d\u51fd\u6570\u7684\u65b9\u6cd5\u662f\u76f4\u63a5\u4f7f\u7528\u5bf9\u5e94\u7684\u7c7b\u540d\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 #include <iostream> using namespace std ; class Base { public : void print () { cout << \"Base::print()\" << endl ; } }; class Derive : public Base { public : void print () { cout << \"Derive::print()\" << endl ; } }; void fun ( Base obj ) { obj . print (); } int main () { Derive d ; d . Base :: print (); fun ( d ); return 0 ; } /* output: Base::print() Base::print() */ \u6b64\u5904\u8c03\u7528 d.Base::print() \u6ca1\u6709\u5bfc\u81f4\u4efb\u4f55\u4e00\u4e2a\u540c\u540d\u51fd\u6570\u88ab\u8986\u76d6\u3002","title":"using \u4e00\u5e76\u4f7f\u7528"},{"location":"languages/c-oop/combination-and-derivation/#_23","text":"\u6240\u8c13\u7684\u91cd\u5199\u9690\u85cf\u5176\u5b9e\u672c\u8d28\u4e0a\u662f\u4e00\u79cd\u8c03\u7528\u4f18\u5148\u7ea7\u95ee\u9898\u3002\u6d3e\u751f\u7c7b\u9ed8\u8ba4\u4f18\u5148\u8c03\u7528\u81ea\u8eab\u7684\u51fd\u6570\u3002\u5982\u679c\u4e0d\u542f\u7528 using \u5173\u952e\u5b57\uff0c\u90a3\u4e48\u9664\u975e\u4f7f\u7528\u7c7b\u540d\uff0c\u5426\u5219\u65e0\u6cd5\u8c03\u7528\u57fa\u7c7b\u7684\u51fd\u6570\uff0c\u54ea\u6015\u53d1\u751f\u7c7b\u578b\u8f6c\u6362\u63d0\u793a warning \u4e5f\u8981\u4f18\u5148\u8c03\u7528\u81ea\u8eab\u7684\u51fd\u6570\u3002\u800c\u542f\u7528\u4e86 using \u5173\u952e\u5b57\u540e\uff0c\u4e0d\u4f7f\u7528\u547d\u540d\u7a7a\u95f4\u65f6\uff0c\u4ecd\u7136\u4f18\u5148\u8c03\u7528\u81ea\u8eab\u7684\u51fd\u6570\u3002\u4f46\u662f\u4e0d\u540c\u4e8e\u6ca1\u6709\u542f\u7528 using \u5173\u952e\u5b57\u7684\u65f6\u5019\uff0c\u6b64\u65f6\u5982\u679c\u65e0\u6cd5\u76f4\u63a5\u8c03\u7528\u81ea\u8eab\u7684\u51fd\u6570\uff08\u6bd4\u5982\u9700\u8981\u7c7b\u578b\u8f6c\u6362\uff09\uff0c\u90a3\u4e48\u54ea\u6015\u5f3a\u5236\u4f7f\u7528\u6d3e\u751f\u7c7b\u7684\u7c7b\u540d\u4e5f\u4f1a\u8c03\u7528\u57fa\u7c7b\u7684\u51fd\u6570\u3002 \u6b64\u5904\u542f\u7528 using \u5173\u952e\u5b57\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 #include <iostream> using namespace std ; class T { }; class Base { public : void f () { cout << \"Base::f() \\n \" ; } void f ( int i ) { cout << \"Base::f(\" << i << \") \\n \" ; } void f ( double d ) { cout << \"Base::f(\" << d << \") \\n \" ; } void f ( T ) { cout << \"Base::f(T) \\n \" ; } }; class Derive : public Base { public : using Base :: f ; void f ( int i ) { cout << \"Derive::f(\" << i << \") \\n \" ; } }; int main () { Derive d ; d . f ( 10 ); d . Base :: f ( 10 ); d . f ( 4.9 ); d . Derive :: f ( 4.9 ); d . f (); d . f ( T ()); return 0 ; } /* output: Derive::f(10) Base::f(10) Base::f(4.9) Base::f(4.9) Base::f() Base::f(T) */ \u6b64\u5904\u4e0d\u542f\u7528 using \u5173\u952e\u5b57\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 #include <iostream> using namespace std ; class T { }; class Base { public : void f () { cout << \"Base::f() \\n \" ; } void f ( int i ) { cout << \"Base::f(\" << i << \") \\n \" ; } void f ( double d ) { cout << \"Base::f(\" << d << \") \\n \" ; } void f ( T ) { cout << \"Base::f(T) \\n \" ; } }; class Derive : public Base { public : void f ( int i ) { cout << \"Derive::f(\" << i << \") \\n \" ; } }; int main () { Derive d ; d . f ( 10 ); d . Base :: f ( 10 ); d . f ( 4.9 ); d . Base :: f ( 4.9 ); d . Base :: f (); d . Base :: f ( T ()); return 0 ; } /* output: Derive::f(10) Base::f(10) Derive::f(4) Base::f(4.9) Base::f() Base::f(T) */ \u4e0d\u542f\u7528 using \u5173\u952e\u5b57\u65f6\u76f4\u63a5\u8c03\u7528 f() \u548c f(T) \u662f\u4e0d\u5408\u6cd5\u7684\u3002","title":"\u603b\u7ed3"},{"location":"languages/c-oop/combination-and-derivation/#using_1","text":"\uff08\u5728\u6d3e\u751f\u7c7b\u4e2d\uff09\u7ee7\u627f\u57fa\u7c7b\u6240\u6709\u6784\u9020\u51fd\u6570\u3001\u6062\u590d\u88ab\u5c4f\u853d\u7684\u6240\u6709\u540c\u540d\u57fa\u7c7b\u6210\u5458\u51fd\u6570 \u6307\u793a\u547d\u540d\u7a7a\u95f4\uff0c\u5982 using namespace std \u5c06\u53e6\u4e00\u4e2a\u547d\u540d\u7a7a\u95f4\u7684\u6210\u5458\u5f15\u5165\u5f53\u524d\u547d\u540d\u7a7a\u95f4\uff0c\u5982 using std::cout \u5b9a\u4e49\u7c7b\u578b\u522b\u540d\uff0c\u5982 using a = int; \u4f8b\u9898\uff1a D \u9009\u9879\uff0c\u6ce8\u610f\u5230 B \u4e2d\u53ea using \u4e86 A \u7684\u6784\u9020\u51fd\u6570\uff0c\u6ca1\u6709\u6062\u590d A \u7684 f \u51fd\u6570\u3002","title":"using \u5173\u952e\u5b57\u4f5c\u7528\u603b\u7ed3"},{"location":"languages/c-oop/combination-and-derivation/#_24","text":"","title":"\u591a\u91cd\u7ee7\u627f"},{"location":"languages/c-oop/combination-and-derivation/#_25","text":"\u6d3e\u751f\u7c7b\u540c\u65f6\u7ee7\u627f\u591a\u4e2a\u57fa\u7c7b\u3002 \u683c\u5f0f\uff1a 1 class Derive : public MiddleA , public MiddleB { }; \u6570\u636e\u5b58\u50a8\u98ce\u9669 \u5982\u679c\u6d3e\u751f\u7c7b D \u7ee7\u627f\u7684\u4e24\u4e2a\u57fa\u7c7b A \u3001 B \uff0c\u662f\u540c\u4e00\u57fa\u7c7b Base \u7684\u4e0d\u540c\u7ee7\u627f\uff0c\u5219 A \u3001 B \u4e2d\u7ee7\u627f\u81ea Base \u7684\u6570\u636e\u6210\u5458\u4f1a\u5728 D \u6709\u4e24\u4efd\u72ec\u7acb\u7684\u526f\u672c\uff0c\u53ef\u80fd\u5e26\u6765\u6570\u636e\u5197\u4f59\u3002 \u4e8c\u4e49\u6027\u98ce\u9669 \u5982\u679c\u6d3e\u751f\u7c7b D \u7ee7\u627f\u7684\u4e24\u4e2a\u57fa\u7c7b A \u3001 B \uff0c\u6709\u540c\u540d\u6210\u5458\u51fd\u6570\u6216\u540c\u540d\u6210\u5458\u6570\u636e a \uff0c\u5219\u8bbf\u95ee D \u4e2d a \u65f6\uff0c\u7f16\u8bd1\u5668\u65e0\u6cd5\u5224\u65ad\u8981\u8bbf\u95ee\u7684\u54ea\u4e00\u4e2a\u57fa\u7c7b\u6210\u5458\u3002 \u4e8c\u4e49\u6027\u4f8b\u5b50\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 #include <iostream> using namespace std ; class Base { public : int a { 0 }; }; class MiddleA : public Base { public : void addA () { cout << \"a=\" << ++ a << endl ; }; void bar () { cout << \"A::bar\" << endl ; }; }; class MiddleB : public Base { public : void addB () { cout << \"a=\" << ++ a << endl ; }; void bar () { cout << \"B::bar\" << endl ; }; }; class Derive : public MiddleA , public MiddleB { }; int main () { Derive d ; d . bar (); } /* output: main.cpp:22:7: error: member 'bar' found in multiple base classes of different types d.bar(); ^ main.cpp:10:8: note: member found by ambiguous name lookup void bar() { cout << \"A::bar\" << endl; }; ^ main.cpp:15:8: note: member found by ambiguous name lookup void bar() { cout << \"B::bar\" << endl; }; ^ 1 error generated. */ \u7a0d\u4f5c\u4fee\u6539\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 #include <iostream> using namespace std ; class Base { public : int a { 0 }; }; class MiddleA : public Base { public : void addA () { cout << \"a=\" << ++ a << endl ; }; void abar () { cout << \"A::bar\" << endl ; }; }; class MiddleB : public Base { public : void addB () { cout << \"a=\" << ++ a << endl ; }; void bbar () { cout << \"B::bar\" << endl ; }; }; class Derive : public MiddleA , public MiddleB { }; int main () { Derive d ; d . abar (); d . bbar (); } /* output: A::bar B::bar */ \u53e6\u5916\u4e00\u4f8b\uff0c\u540c\u540d\u6210\u5458\u64cd\u4f5c\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 #include <iostream> using namespace std ; class Base { public : int a { 0 }; }; class MiddleA : public Base { public : void addA () { cout << \"a=\" << ++ a << endl ; }; void bar () { cout << \"A::bar\" << endl ; }; }; class MiddleB : public Base { public : void addB () { cout << \"a=\" << ++ a << endl ; }; void bar () { cout << \"B::bar\" << endl ; }; }; class Derive : public MiddleA , public MiddleB { }; int main () { Derive d ; d . addA (); d . addB (); d . addB (); cout << d . MiddleA :: a << endl ; cout << d . MiddleB :: a << endl ; d . MiddleA :: bar (); d . MiddleB :: bar (); return 0 ; } /* output: a=1 a=1 a=2 1 2 A::bar B::bar */ \u6ce8\u610f\u5230\uff0c\u591a\u91cd\u7ee7\u627f\u7684\u4e8c\u4e49\u6027\u5e76\u6ca1\u6709\u5bfc\u81f4\u91cd\u590d\u5b9a\u4e49\uff0c\u7f16\u8bd1\u5668\u901a\u8fc7\u547d\u540d\u7a7a\u95f4\u533a\u5206\u4e86\u4e8c\u8005\u4e0d\u540c\u7684 a \u4e0e bar \u3002\u4f46\u662f\u4e0d\u52a0\u547d\u540d\u7a7a\u95f4\uff0c\u5219\u65e0\u6cd5\u533a\u5206\u3002","title":"\u5b9a\u4e49\u3001\u610f\u4e49\u548c\u6f5c\u5728\u98ce\u9669"},{"location":"languages/c-oop/combination-and-derivation/#_26","text":"\u7ed3\u5408\u4e4b\u540e\u63d0\u5230\u7684\u865a\u51fd\u6570\uff0c\u591a\u91cd\u7ee7\u627f\u4e5f\u4f1a\u914d\u5408\u591a\u6001\u4f1a\u52a8\u6001\u8c03\u7528\u6790\u6784\u51fd\u6570\uff0c\u5148\u6790\u6784\u57fa\u7c7b\u90e8\u5206\uff0c\u518d\u6790\u6784\u6d3e\u751f\u7c7b\u90e8\u5206\u3002\u6790\u6784\u987a\u5e8f\u4e5f\u662f\u548c\u6784\u9020\u987a\u5e8f\u53cd\u5411\uff0c\u4f46\u662f\u6784\u9020\u987a\u5e8f\u662f\u6309\u7167\u7533\u660e\u987a\u5e8f\u6765\u7684\u3002\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 // what.h #pragma once class WhatCanSpeak { public : virtual ~ WhatCanSpeak () { cout << \"obj cannot speak\" << endl ; } virtual void speak () = 0 ; virtual void stop () = 0 ; }; class WhatCanMotion { public : virtual ~ WhatCanMotion () { cout << \"obj cannot move\" << endl ; } virtual void motion () = 0 ; virtual void stop () = 0 ; }; // main.cpp #include \"what.h\" class Alien : public WhatCanMotion , public WhatCanSpeak { public : std :: string name ; Alien ( std :: string x ) : name ( x ) { } void speak () { std :: cout << name << \" is speaking\" << std :: endl ; } void stop () { std :: cout << name << \" stops\" << std :: endl ; } void motion () { std :: cout << name << \" is moving\" << std :: endl ; } ~ Alien () { }; }; \u5bf9\u4e8e Alien \u7684\u6790\u6784\u662f\u6784\u9020\u7684\u53cd\u5411\u3002\u800c\u6784\u9020\u662f\u5148\u6784\u9020 WhatCanMotion \uff0c\u4e4b\u540e WhatCanSpeak \uff0c\u6700\u540e\u518d\u662f\u6d3e\u751f\u7c7b\u90e8\u5206\uff0c\u6545\u800c\u6790\u6784\u987a\u5e8f\u662f\u5148\u6d3e\u751f\u7c7b\uff0c\u4e4b\u540e WhatCanSpeak \uff0c\u6700\u540e WhatCanMotion \u3002","title":"\u591a\u91cd\u7ee7\u627f\u7684\u6790\u6784\u987a\u5e8f"},{"location":"languages/c-oop/environment/","text":"\u7f16\u7a0b\u73af\u5883 \u00b6 \u4ece\u5355\u4e2a C++ \u4ee3\u7801\u6587\u4ef6\u5230\u591a\u4e2a C++ \u4ee3\u7801\u6587\u4ef6 \u5728\u8bb2\u89e3\u9762\u5411\u5bf9\u8c61\u8fd9\u4e2a\u7f16\u7a0b\u6982\u5ff5\u4e4b\u524d\uff0c\u6211\u4eec\u8ba4\u4e3a\u6709\u5fc5\u8981\u7b80\u5355\u4ecb\u7ecd\u6211\u4eec\u662f\u5982\u4f55\u4ece C++ \u4ee3\u7801\u6587\u4ef6\u5f97\u5230\u53ef\u6267\u884c\u6587\u4ef6\u7684\uff0c\u4ee5\u53ca\u5982\u4f55\u7f16\u8bd1\u591a\u4e2a C++ \u4ee3\u7801\u6587\u4ef6\u3002\u7b80\u5355\u4e86\u89e3\u8fd9\u4e9b\u77e5\u8bc6\u6709\u52a9\u4e8e\u8bfb\u8005\u540e\u7eed\u7406\u89e3\u3002 \u6e90\u7a0b\u5e8f\u7684\u7ed3\u6784\u4e0e\u9884\u7f16\u8bd1 \u00b6 \u6e90\u7a0b\u5e8f\u7684\u7ed3\u6784 \u00b6 \u4e00\u4e2a\u7ecf\u5178\u7684 C++ \u4ee3\u7801\u6587\u4ef6\u7684\u7ed3\u6784\u4e3a\uff1a 1 2 3 4 5 6 7 8 9 #include <iostream> using namespace std ; // \u5934\u6587\u4ef6\u4e0e\u7f16\u8bd1\u6307\u4ee4 int add ( int a , int b ) { return a + b ; } // \u8f85\u52a9\u51fd\u6570\u5b9a\u4e49 int main () { // \u4e3b\u51fd\u6570\u5b9a\u4e49 cout << add ( 3 , 4 ); return 0 ; } \u9884\u7f16\u8bd1\u6307\u4ee4 \u00b6 \u5b9a\u4e49 \u4e0a\u6587\u4ee3\u7801\u4e2d\u63d0\u53ca\u7684\u201c\u5934\u6587\u4ef6\u4e0e\u7f16\u8bd1\u6307\u4ee4\u201d\u4e2d\u7684\u7f16\u8bd1\u6307\u4ee4\u5b9e\u9645\u4e0a\u662f\u9884\u7f16\u8bd1\u6307\u4ee4\u7684\u610f\u601d\uff0c\u800c\u9884\u7f16\u8bd1\u4e0e\u9884\u5904\u7406\u662f\u540c\u4e00\u6982\u5ff5\u3002 C/C++ \u7f16\u8bd1\u7cfb\u7edf\u7f16\u8bd1\u7a0b\u5e8f\u7684\u8fc7\u7a0b\u4e3a\u9884\u7f16\u8bd1\u3001\u7f16\u8bd1\u3001\u94fe\u63a5\u3002\u9884\u5904\u7406\u5668\u5728\u7a0b\u5e8f\u6e90\u6587\u4ef6\u88ab\u7f16\u8bd1\u4e4b\u524d\u6839\u636e\u9884\u5904\u7406\u6307\u4ee4\u5bf9\u7a0b\u5e8f\u6e90\u6587\u4ef6\u8fdb\u884c\u5904\u7406\u3002 \u800c\u9884\u5904\u7406\u5668\u6307\u4ee4\u4ee5 # \u53f7\u5f00\u5934\u6807\u8bc6\uff0c\u5e76\u4e0d\u662f\u4e00\u53e5\u6307\u4ee4\uff0c\u672b\u5c3e\u4e0d\u5305\u542b\u5206\u53f7\u3002\u9884\u5904\u7406\u547d\u4ee4\u4e0d\u662f C/C++ \u8bed\u8a00\u672c\u8eab\u7684\u7ec4\u6210\u90e8\u5206\uff0c\u4e0d\u80fd\u76f4\u63a5\u5bf9\u5b83\u4eec\u8fdb\u884c\u7f16\u8bd1\u548c\u94fe\u63a5\u3002C/C++ \u8bed\u8a00\u7684\u4e00\u4e2a\u91cd\u8981\u529f\u80fd\u662f\u53ef\u4ee5\u4f7f\u7528\u9884\u5904\u7406\u6307\u4ee4\u548c\u5177\u6709\u9884\u5904\u7406\u7684\u529f\u80fd\u3002\u4e8c\u8005\u63d0\u4f9b\u7684\u9884\u5904\u7406\u529f\u80fd\u4e3b\u8981\u6709\u6587\u4ef6\u5305\u542b\u3001\u5b8f\u66ff\u6362\u3001\u6761\u4ef6\u7f16\u8bd1\u7b49\u3002 \u6587\u4ef6\u5305\u542b \u9884\u5904\u7406\u6307\u4ee4 #include \u5c06\u88ab\u5305\u542b\u7684\u6587\u4ef6\u4ee3\u7801\uff0c\u76f4\u63a5\u590d\u5236\u5230\u5f53\u524d\u6587\u4ef6\uff0c\u4e00\u822c\u88ab\u7528\u4e8e\u5305\u542b\u5934\u6587\u4ef6\uff08\u5b9e\u9645\u4e5f\u80fd\u5305\u542b\u4efb\u610f\u4ee3\u7801\uff09\u3002\u6709\u4e24\u79cd\u5f62\u5f0f\uff1a #include <xxx.h> \u4ee5\u53ca #include \"xxx.h\" \u3002\u5c16\u62ec\u53f7\u5f62\u5f0f\u8868\u793a\u88ab\u5305\u542b\u7684\u6587\u4ef6\u5728\u7cfb\u7edf\u76ee\u5f55\u4e2d\u3002\u5982\u679c\u88ab\u5305\u542b\u7684\u6587\u4ef6\u4e0d\u4e00\u5b9a\u5728\u7cfb\u7edf\u76ee\u5f55\u4e2d\uff0c\u5e94\u8be5\u7528\u53cc\u5f15\u53f7\u5f62\u5f0f\uff08\u6ce8\u610f\u5230\u662f\u5e94\u8be5\u7528\uff0c\u4e0d\u662f\u6700\u597d\u7528\uff09\u3002 \u5728\u53cc\u5f15\u53f7\u5f62\u5f0f\u4e2d\u53ef\u4ee5\u6307\u51fa\u6587\u4ef6\u8def\u5f84\u548c\u6587\u4ef6\u540d\u3002\u5982\u679c\u5728\u53cc\u5f15\u53f7\u4e2d\u6ca1\u6709\u7ed9\u51fa\u7edd\u5bf9\u8def\u5f84\uff0c\u5219\u9ed8\u8ba4\u4e3a\u7528\u6237\u5f53\u524d\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\uff0c\u6b64\u65f6\u7cfb\u7edf\u9996\u5148\u5728\u7528\u6237\u5f53\u524d\u76ee\u5f55\u4e2d\u5bfb\u627e\u8981\u5305\u542b\u7684\u6587\u4ef6\uff0c\u82e5\u627e\u4e0d\u5230\u518d\u5728\u7cfb\u7edf\u76ee\u5f55\u4e2d\u67e5\u627e\u3002\u5bf9\u4e8e\u7528\u6237\u81ea\u5df1\u7f16\u5199\u7684\u5934\u6587\u4ef6\uff0c\u5e94\u7528\u53cc\u5f15\u53f7\u5f62\u5f0f\u3002\u5bf9\u4e8e\u7cfb\u7edf\u63d0\u4f9b\u7684\u5934\u6587\u4ef6\uff0c\u65e2\u53ef\u4ee5\u7528\u5c16\u62ec\u53f7\u5f62\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u7528\u53cc\u5f15\u53f7\u5f62\u5f0f\uff0c\u90fd\u80fd\u627e\u5230\u88ab\u5305\u542b\u7684\u6587\u4ef6\uff0c\u4f46\u4f7f\u7528\u7528\u5c16\u62ec\u53f7\u5f62\u5f0f\u66f4\u76f4\u622a\u4e86\u5f53\uff0c\u6548\u7387\u66f4\u9ad8\u3002 \u5b8f\u66ff\u6362 \u610f\u4e49 #define \u662f C++ \u8bed\u8a00\u4e2d\u7684\u4e00\u4e2a\u9884\u7f16\u8bd1\u6307\u4ee4\uff0c\u5b83\u7528\u6765\u5c06\u4e00\u4e2a\u6807\u8bc6\u7b26\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8be5\u6807\u8bc6\u7b26\u88ab\u79f0\u4e3a\u5b8f\u540d\uff0c\u88ab\u5b9a\u4e49\u7684\u5b57\u7b26\u4e32\u79f0\u4e3a\u66ff\u6362\u6587\u672c\u3002\u5728\u7a0b\u5e8f\u88ab\u7f16\u8bd1\u524d\uff0c\u5148\u5c06\u5b8f\u540d\u7528\u88ab\u5b9a\u4e49\u7684\u5b57\u7b26\u4e32\u66ff\u6362\uff0c\u8fd9\u79f0\u4e3a\u5b8f\u66ff\u6362\uff0c\u66ff\u6362\u540e\u624d\u8fdb\u884c\u7f16\u8bd1\uff0c\u5b8f\u66ff\u6362\u662f\u7b80\u5355\u7684\u66ff\u6362\u3002 \u5b8f\u5b9a\u4e49 \u5b8f\u5b9a\u4e49\u5305\u62ec\u65e0\u53c2\u6570\u5b8f\u5b9a\u4e49\u548c\u5e26\u53c2\u6570\u5b8f\u5b9a\u4e49\u4e24\u7c7b\u3002\u5b8f\u540d\u548c\u5b8f\u53c2\u6570\u6240\u4ee3\u8868\u7684\u4ee3\u7801\u5e8f\u5217\u53ef\u4ee5\u662f\u4efb\u4f55\u610f\u4e49\u7684\u5185\u5bb9\uff0c\u5982\u7c7b\u578b\u3001\u5e38\u91cf\u3001\u53d8\u91cf\u3001\u64cd\u4f5c\u7b26\u3001\u8868\u8fbe\u5f0f\u3001\u8bed\u53e5\u3001\u51fd\u6570\u3001\u4ee3\u7801\u5757\u7b49\u3002\u4f46\u662f\u5b8f\u540d\u548c\u5b8f\u53c2\u6570\u5fc5\u987b\u662f\u5408\u6cd5\u7684\u6807\u8bc6\u7b26\uff0c\u5176\u6240\u4ee3\u8868\u7684\u5185\u5bb9\u53ca\u610f\u4e49\u5728\u5b8f\u5c55\u5f00\u524d\u540e\u5fc5\u987b\u4e00\u76f4\u662f\u72ec\u7acb\u4e14\u4fdd\u6301\u4e0d\u53d8\u7684\uff0c\u4e0d\u80fd\u5206\u5f00\u89e3\u91ca\u548c\u6267\u884c\u3002 \u65e0\u53c2\u6570\u5b8f \u7528\u4e00\u4e2a\u7528\u6237\u6307\u5b9a\u7684\u79f0\u4e3a\u5b8f\u540d\u7684\u6807\u8bc6\u7b26\u6765\u4ee3\u8868\u4e00\u4e2a\u4ee3\u7801\u5e8f\u5217\uff0c\u8fd9\u79cd\u5b9a\u4e49\u7684\u4e00\u822c\u5f62\u5f0f\u4e3a #define \u6807\u8bc6\u7b26 \u4ee3\u7801\u5e8f\u5217 \u3002\u5176\u4e2d #define \u4e4b\u540e\u7684\u6807\u8bc6\u7b26\u79f0\u4e3a\u5b8f\u5b9a\u4e49\u540d\uff08\u7b80\u79f0\u5b8f\u540d\uff09\uff0c\u5728\u5b8f\u5b9a\u4e49 #define \u4e4b\u524d\u53ef\u4ee5\u6709\u82e5\u5e72\u4e2a\u7a7a\u683c\u3001\u5236\u8868\u7b26\uff0c\u4f46\u4e0d\u5141\u8bb8\u6709\u5176\u5b83\u5b57\u7b26\uff0c\u5b8f\u540d\u4e0e\u4ee3\u7801\u5e8f\u5217\u4e4b\u95f4\u7528\u7a7a\u683c\u7b26\u5206\u9694\u3002\u4f8b\u5982\uff1a 1 #define PI 3.1415926535 \u5728 C++ \u4e2d\uff0c\u8fd9\u79cd\u66ff\u6362\u4e00\u822c\u88ab const \u53d6\u4ee3\uff0c\u8fdb\u800c\u80fd\u4fdd\u8bc1\u7c7b\u578b\u7684\u6b63\u786e\u6027\u3002 1 const double PI = 3.1415926535 \u5e26\u53c2\u6570\u5b8f \u5e26\u53c2\u6570\u5b8f\u5b9a\u4e49\u8fdb\u4e00\u6b65\u6269\u5145\u4e86\u65e0\u53c2\u6570\u5b8f\u5b9a\u4e49\u7684\u80fd\u529b\uff0c\u8fd9\u65f6\u7684\u5b8f\u5c55\u5f00\u65e2\u8fdb\u884c\u5b8f\u540d\u7684\u66ff\u6362\u53c8\u8fdb\u884c\u5b8f\u53c2\u6570\u7684\u66ff\u6362\u3002\u5e26\u53c2\u6570\u7684\u5b8f\u5b9a\u4e49\u7684\u4e00\u822c\u5f62\u5f0f\u4e3a #define \u6807\u8bc6\u7b26(\u53c2\u6570\u8868) \u4ee3\u7801\u5e8f\u5217 \uff0c\u5176\u4e2d\u53c2\u6570\u8868\u4e2d\u7684\u53c2\u6570\u4e4b\u95f4\u7528\u9017\u53f7\u5206\u9694\uff0c\u5728\u4ee3\u7801\u5e8f\u5217\u4e2d\u5fc5\u987b\u8981\u5305\u542b\u53c2\u6570\u8868\u4e2d\u7684\u7684\u53c2\u6570\u3002\u5728\u5b9a\u4e49\u5e26\u53c2\u6570\u7684\u5b8f\u65f6\uff0c\u5b8f\u540d\u4e0e\u5de6\u5706\u62ec\u53f7\u4e4b\u95f4\u4e0d\u5141\u8bb8\u6709\u7a7a\u767d\u7b26\uff0c\u5e94\u7d27\u63a5\u5728\u4e00\u8d77\uff0c\u5426\u5219\u53d8\u6210\u4e86\u65e0\u53c2\u6570\u7684\u5b8f\u5b9a\u4e49\u3002\u5e26\u53c2\u6570\u5b8f\u8c03\u7528\u63d0\u4f9b\u7684\u5b9e\u5728\u53c2\u6570\u4e2a\u6570\u5fc5\u987b\u4e0e\u5b8f\u5b9a\u4e49\u4e2d\u7684\u5f62\u5f0f\u53c2\u6570\u4e2a\u6570\u76f8\u540c\u3002\u4f8b\u5982\uff1a 1 2 #define sqr(x) ((x) * (x)) sqr ( 3 + 2 ); // ((3 + 2) * (3 + 2)); \u5728 C++ \u4e2d\uff0c\u8fd9\u79cd\u66ff\u4ee3\u4e00\u822c\u88ab\u5185\u8054\u51fd\u6570\u53d6\u4ee3\uff0c\u8fdb\u800c\u80fd\u4fdd\u8bc1\u7c7b\u578b\u7684\u6b63\u786e\u6027\u3002\u5185\u8054\u51fd\u6570\u6211\u4eec\u4f1a\u5728\u540e\u7eed\u7ae0\u8282\u4e2d\u8bb2\u89e3\u3002 1 inline double sqr ( double x ) { return x * x ; } \u5b8f\u4f5c\u7528\u57df \u5b8f\u5b9a\u4e49\u7684\u6709\u6548\u8303\u56f4\u79f0\u4e3a\u5b8f\u540d\u7684\u4f5c\u7528\u57df\uff0c\u5b8f\u540d\u7684\u4f5c\u7528\u57df\u4ece\u5b8f\u5b9a\u4e49\u7684\u7ed3\u675f\u5904\u5f00\u59cb\u5230\u5176\u6240\u5728\u7684\u6e90\u4ee3\u7801\u6587\u4ef6\u672b\u5c3e\u3002\u5b8f\u540d\u7684\u4f5c\u7528\u57df\u4e0d\u53d7\u5206\u7a0b\u5e8f\u7ed3\u6784\u7684\u5f71\u54cd\u3002\u5982\u679c\u9700\u8981\u7ec8\u6b62\u5b8f\u540d\u7684\u4f5c\u7528\u57df\uff0c\u53ef\u4ee5\u7528\u9884\u5904\u7406\u6307\u4ee4 #undef \u52a0\u4e0a\u5b8f\u540d\u3002 \u5b8f\u5c55\u5f00 \u9884\u5904\u7406\u5668\u5728\u5904\u7406\u5b8f\u5b9a\u4e49\u65f6\uff0c\u4f1a\u5bf9\u5b8f\u8fdb\u884c\u5c55\u5f00\uff08\u5373\u5b8f\u66ff\u6362\uff09\u3002\u5b8f\u66ff\u6362\u9996\u5148\u5c06\u6e90\u6587\u4ef6\u4e2d\u5728\u5b8f\u5b9a\u4e49\u968f\u540e\u6240\u6709\u51fa\u73b0\u7684\u5b8f\u540d\u5747\u7528\u5176\u6240\u4ee3\u8868\u7684\u4ee3\u7801\u5e8f\u5217\u66ff\u6362\u4e4b\uff0c\u5982\u679c\u662f\u5e26\u53c2\u6570\u5b8f\u5219\u63a5\u7740\u5c06\u4ee3\u7801\u5e8f\u5217\u4e2d\u7684\u5b8f\u5f62\u53c2\u540d\u66ff\u6362\u4e3a\u5b8f\u5b9e\u53c2\u540d\u3002 \u5b8f\u66ff\u6362\u53ea\u4f5c\u4ee3\u7801\u5b57\u7b26\u5e8f\u5217\u7684\u66ff\u6362\u5de5\u4f5c\uff0c\u4e0d\u4f5c\u4efb\u4f55\u8bed\u6cd5\u7684\u68c0\u67e5\uff0c\u4e5f\u4e0d\u4f5c\u4efb\u4f55\u7684\u4e2d\u95f4\u8ba1\u7b97\uff0c\u4e00\u5207\u5176\u5b83\u64cd\u4f5c\u90fd\u8981\u5728\u66ff\u6362\u5b8c\u540e\u624d\u80fd\u8fdb\u884c\u3002\u5982\u679c\u5b8f\u5b9a\u4e49\u4e0d\u5f53\uff0c\u9519\u8bef\u8981\u5230\u9884\u5904\u7406\u4e4b\u540e\u7684\u7f16\u8bd1\u9636\u6bb5\u624d\u80fd\u53d1\u73b0\u3002 \u6e90\u4ee3\u7801\u4e2d\u7684\u5b8f\u540d\u548c\u5b8f\u5b9a\u4e49\u4ee3\u7801\u5e8f\u5217\u4e2d\u7684\u5b8f\u5f62\u53c2\u540d\u5fc5\u987b\u662f\u6807\u8bc6\u7b26\u624d\u4f1a\u88ab\u66ff\u6362\uff0c\u5373\u53ea\u66ff\u6362\u6807\u8bc6\u7b26\uff0c\u4e0d\u66ff\u6362\u522b\u7684\u4e1c\u897f\uff0c\u50cf\u6ce8\u91ca\u3001\u5b57\u7b26\u4e32\u5e38\u91cf\u4ee5\u53ca\u6807\u8bc6\u7b26\u5185\u51fa\u73b0\u7684\u5b8f\u540d\u6216\u5b8f\u5f62\u53c2\u540d\u5219\u4e0d\u4f1a\u88ab\u66ff\u6362\u3002\u4f8b\u5982\u4e0b\u5217\u5b8f\uff1a 1 #define NAME vrmozart \u5b8f\u66ff\u6362\u4e0d\u4f1a\u66ff\u6362\u6389 // NAME \u3001 /* NAME */ \u3001 \"NAME\" \u3001 my_NAME_blog \u4e2d\u7684 NAME \u3002 \u6807\u8bc6\u7b26\u7684\u6982\u5ff5\u5728\u540e\u7eed\u7ae0\u8282\u4e2d\u9610\u8ff0\u3002 \u5b8f\u7684\u72ec\u7acb\u6027 \u524d\u6587\u63d0\u53ca\uff0c\u5b8f\u540d\u548c\u5b8f\u5f62\u53c2\u540d\u6240\u4ee3\u8868\u7684\u5185\u5bb9\u53ca\u610f\u4e49\u5728\u5b8f\u5c55\u5f00\u524d\u540e\u5fc5\u987b\u4e00\u76f4\u662f\u72ec\u7acb\u4e14\u4fdd\u6301\u4e0d\u53d8\u7684\uff0c\u4e0d\u80fd\u5206\u5f00\u89e3\u91ca\u548c\u6267\u884c\u3002\u7136\u800c\uff0c\u5728\u5b8f\u8c03\u7528\u65f6\uff0c\u9884\u5904\u7406\u5668\u7528\u5b8f\u5b9a\u4e49\u7684\u4ee3\u7801\u5e8f\u5217\u66ff\u6362\u5b8f\u540d\uff0c\u7528\u5b8f\u5b9e\u53c2\u540d\u66ff\u6362\u5b8f\u5f62\u53c2\u540d\u3002\u66ff\u6362\u540e\uff0c\u5b8f\u5b9a\u4e49\u7684\u4ee3\u7801\u5e8f\u5217\u5c31\u4e0e\u6e90\u6587\u4ef6\u4e2d\u76f8\u90bb\u7684\u4ee3\u7801\u81ea\u7136\u8fde\u63a5\uff0c\u5b8f\u5b9e\u53c2\u540d\u4e5f\u4e0e\u4ee3\u7801\u5e8f\u5217\u4e2d\u76f8\u90bb\u7684\u4ee3\u7801\u81ea\u7136\u8fde\u63a5\uff0c\u5b8f\u5b9a\u4e49\u7684\u4ee3\u7801\u5e8f\u5217\u548c\u5b8f\u5b9e\u53c2\u540d\u7684\u72ec\u7acb\u6027\u5c31\u4e0d\u4e00\u5b9a\u4f9d\u65e7\u5b58\u5728\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u5e0c\u671b\u4f7f\u7528\u4e0b\u5217\u5b8f\u5b9e\u73b0\u5e73\u65b9\u64cd\u4f5c\uff1a 1 #define SQR(x) x * x \u5bf9\u4e8e\u5b8f\u8c03\u7528 p = SQR(y) \uff0c\u80fd\u5f97\u5230\u5e0c\u671b\u7684\u5b8f\u5c55\u5f00 p = y * y \u3002\u4f46\u5bf9\u4e8e\u5b8f\u8c03\u7528 q = SQR(u + v) \uff0c\u5f97\u5230\u7684\u5b8f\u5c55\u5f00\u662f q = u + v * u + v \u3002\u663e\u7136\uff0c\u540e\u8005\u7684\u5c55\u5f00\u7ed3\u679c\u4e0d\u662f\u7a0b\u5e8f\u8bbe\u8ba1\u8005\u6240\u5e0c\u671b\u7684\u3002\u4e3a\u80fd\u4fdd\u6301\u5b8f\u5b9e\u53c2\u540d\u66ff\u6362\u540e\u7684\u72ec\u7acb\u6027\uff0c\u5e94\u5728\u5b8f\u5b9a\u4e49\u4e2d\u7ed9\u5f62\u5f0f\u53c2\u6570\u52a0\u4e0a\u62ec\u53f7\u3002\u8fdb\u4e00\u6b65\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u5b8f\u540d\u8c03\u7528\u7684\u72ec\u7acb\u6027\uff0c\u4f5c\u4e3a\u7b97\u5f0f\u7684\u5b8f\u5b9a\u4e49\u4ee3\u7801\u5e8f\u5217\u4e5f\u5e94\u52a0\u62ec\u53f7\u3002 SQR \u5b8f\u5b9a\u4e49\u6539\u5199\u6210 #define SQR(x) ((x) * (x)) \u624d\u662f\u6b63\u786e\u7684\u5b8f\u5b9a\u4e49\u3002\u5373\u4fbf\u5982\u6b64\uff0c\u8fd9\u6837\u7684\u5b8f\u5b9a\u4e49\u4f9d\u7136\u5f88\u5371\u9669\u3002 \u5b8f\u8c03\u7528\u4e0e\u51fd\u6570\u8c03\u7528 \u51fd\u6570\u8c03\u7528\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u5b9e\u884c\uff0c\u800c\u5b8f\u5c55\u5f00\u662f\u5728\u7f16\u8bd1\u7684\u9884\u5904\u7406\u9636\u6bb5\u8fdb\u884c\u3002\u51fd\u6570\u8c03\u7528\u5360\u7528\u7a0b\u5e8f\u8fd0\u884c\u65f6\u95f4\uff0c\u5b8f\u8c03\u7528\u53ea\u5360\u7f16\u8bd1\u65f6\u95f4\u3002\u51fd\u6570\u8c03\u7528\u5bf9\u5b9e\u53c2\u6709\u7c7b\u578b\u8981\u6c42\uff0c\u800c\u5b8f\u8c03\u7528\u5b9e\u5728\u53c2\u6570\u4e0e\u5b8f\u5b9a\u4e49\u5f62\u5f0f\u53c2\u6570\u4e4b\u95f4\u6ca1\u6709\u7c7b\u578b\u7684\u6982\u5ff5\uff0c\u53ea\u6709\u5b57\u7b26\u5e8f\u5217\u7684\u5bf9\u5e94\u5173\u7cfb\u3002\u51fd\u6570\u8c03\u7528\u53ef\u8fd4\u56de\u4e00\u4e2a\u503c\uff0c\u5b8f\u8c03\u7528\u83b7\u5f97\u5e0c\u671b\u7684\u4ee3\u7801\u5e8f\u5217\u3002 \u5176\u4ed6\u6027\u8d28 \u5b8f\u540d\u4e00\u822c\u7528\u5927\u5199\u5b57\u6bcd\uff0c\u4ee5\u4fbf\u4e0e\u53d8\u91cf\u540d\u533a\u522b\u3002\u5982\u6709\u5fc5\u8981\uff0c\u5b8f\u540d\u53ef\u88ab\u91cd\u590d\u5b9a\u4e49\uff0c\u88ab\u91cd\u590d\u5b9a\u4e49\u540e\uff0c\u5b8f\u540d\u539f\u5148\u7684\u610f\u4e49\u88ab\u65b0\u610f\u4e49\u6240\u4ee3\u66ff\u3002 \u5b8f\u5b9a\u4e49\u4ee3\u7801\u5e8f\u5217\u4e2d\u53ef\u4ee5\u5f15\u7528\u5df2\u7ecf\u5b9a\u4e49\u7684\u5b8f\u540d\uff0c\u5373\u5b8f\u5b9a\u4e49\u53ef\u4ee5\u5d4c\u5957\u3002 \u6761\u4ef6\u7f16\u8bd1\u6307\u4ee4 \u00b6 \u5b9a\u4e49 \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u5728\u8fdb\u884c\u7f16\u8bd1\u65f6\u5bf9\u6e90\u7a0b\u5e8f\u4e2d\u7684\u6bcf\u4e00\u884c\u90fd\u8981\u7f16\u8bd1\uff0c\u4f46\u662f\u6709\u65f6\u5e0c\u671b\u7a0b\u5e8f\u4e2d\u67d0\u4e00\u90e8\u5206\u5185\u5bb9\u53ea\u5728\u6ee1\u8db3\u4e00\u5b9a\u6761\u4ef6\u65f6\u624d\u8fdb\u884c\u7f16\u8bd1\uff0c\u5982\u679c\u4e0d\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\uff0c\u5c31\u4e0d\u7f16\u8bd1\u8fd9\u90e8\u5206\u5185\u5bb9\uff0c\u8fd9\u5c31\u662f\u6761\u4ef6\u7f16\u8bd1\u3002\u6761\u4ef6\u7f16\u8bd1\u4e3b\u8981\u662f\u8fdb\u884c\u7f16\u8bd1\u65f6\u8fdb\u884c\u6709\u9009\u62e9\u7684\u6311\u9009\uff0c\u6ce8\u91ca\u6389\u4e00\u4e9b\u6307\u5b9a\u7684\u4ee3\u7801\uff0c\u4ee5\u8fbe\u5230\u591a\u4e2a\u7248\u672c\u63a7\u5236\u3001\u9632\u6b62\u5bf9\u6587\u4ef6\u91cd\u590d\u5305\u542b\u3002 #if \u3001 #ifndef \u3001 #ifdef \u3001 #else \u3001 #elif \u3001 #endif \u662f\u6bd4\u8f83\u5e38\u89c1\u6761\u4ef6\u7f16\u8bd1\u9884\u5904\u7406\u6307\u4ee4\uff0c\u53ef\u6839\u636e\u8868\u8fbe\u5f0f\u7684\u503c\u6216\u67d0\u4e2a\u7279\u5b9a\u5b8f\u662f\u5426\u88ab\u5b9a\u4e49\u6765\u786e\u5b9a\u7f16\u8bd1\u6761\u4ef6\u3002 \u6307\u4ee4\u542b\u4e49 #if \u8868\u793a\u8868\u8fbe\u5f0f\u975e\u96f6\u5c31\u5bf9\u4ee3\u7801\u8fdb\u884c\u7f16\u8bd1\u3002 #ifdef \u8868\u793a\u5982\u679c\u5b8f\u88ab\u5b9a\u4e49\u5c31\u8fdb\u884c\u7f16\u8bd1\u3002 #ifndef \u8868\u793a\u5982\u679c\u5b8f\u672a\u88ab\u5b9a\u4e49\u5c31\u8fdb\u884c\u7f16\u8bd1\u3002 #else \u4f5c\u4e3a\u5176\u5b83\u9884\u5904\u7406\u7684\u5269\u4f59\u9009\u9879\u3002 #elif \u662f\u4e00\u79cd #else \u548c #if \u7684\u7ec4\u5408\u9009\u9879\u3002 #endif \u7ed3\u675f\u7f16\u8bd1\u5757\u7684\u63a7\u5236\u3002 \u9632\u6b62\u5934\u6587\u4ef6\u91cd\u590d\u5305\u542b \u6211\u4eec\u5148\u524d\u63d0\u5230\u8fc7 #include \u6307\u4ee4\u7684\u6548\u679c\u662f\u628a\u6e90\u6587\u4ef6 \u76f4\u63a5\u590d\u5236 \u5230\u6e90\u4ee3\u7801\u4e2d\uff0c\u90a3\u4e48\u8003\u8651\u8fd9\u6837\u7684\u591a\u6587\u4ef6\u3002\u5934\u6587\u4ef6 A.h \u4e2d\u5305\u542b\u4e86\u5934\u6587\u4ef6 B.h \uff1a 1 2 3 // A.h #include \"B.h\" /* A.h CODE */ \u800c\u4e3b\u6587\u4ef6\u540c\u65f6\u5305\u542b A.h \u548c B.h \uff1a 1 2 3 4 5 // main.cpp #include \"A.h\" #include \"B.h\" int main () { } \u9884\u5904\u7406\u5668\u5904\u7406\u5230\u4e3b\u6587\u4ef6\u7684 #include \"A.h\" \u7684\u65f6\u5019\u76f4\u63a5\u5c06 A.h \u7684\u5185\u5bb9\u590d\u5236\u8fc7\u6765\uff1a 1 2 3 4 5 6 // main.cpp #include \"B.h\" /* A.h CODE */ #include \"B.h\" int main () { } \u4f1a\u53d1\u73b0\u8fd9\u91cc\u51fa\u73b0\u4e86\u91cd\u590d\u5305\u542b\uff0c\u5982\u679c B.h \u4e2d\u6709\u51fd\u6570\u5b9a\u4e49\uff0c\u5219\u6709\u53ef\u80fd\u5bfc\u81f4\u51b2\u7a81\uff0c\u4ece\u800c\u65e0\u6cd5\u7f16\u8bd1\u6210\u529f\u3002\u90a3\u4e48\u4e3a\u4e86\u9632\u6b62\u8fd9\u6837\u7684\u5934\u6587\u4ef6\u91cd\u590d\u5305\u542b\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed9\u6bcf\u4e00\u4e2a\u5934\u6587\u4ef6\u6309\u7167\u8fd9\u6837\u7684\u683c\u5f0f\u7f16\u5199\uff0c\u5982 B.h \uff1a 1 2 3 4 5 6 7 // B.h #ifndef B_H #define B_H /* B.h CODE */ #endif // B_H \u8fd9\u6837\u5373\u4f7f\u51fa\u73b0\u91cd\u590d\u5305\u542b\uff0c\u7531\u4e8e\u7b2c\u4e00\u6b21\u5305\u542b\u7684\u65f6\u5019 B_H \u5b8f\u5c31\u5df2\u7ecf\u5b9a\u4e49\u8fc7\u4e86\uff0c\u6240\u4ee5\u540e\u9762\u7684 #ifndef \u5c31\u4f1a\u4fdd\u8bc1 B.h \u7684\u4ee3\u7801\u4e0d\u4f1a\u518d\u6b21\u5305\u542b\u8fdb\u6765\u3002 \u4e8b\u5b9e\u4e0a\u73b0\u5728\u66f4\u5e38\u7528\u7684\u9632\u6b62\u91cd\u590d\u5305\u542b\u7684\u9884\u7f16\u8bd1\u6307\u4ee4\u4e3a #pragma once \u3002 \u9884\u5904\u7406\u5668\u8868\u8fbe\u5f0f \u9884\u5904\u7406\u5668\u8868\u8fbe\u5f0f\u5305\u62ec\u7684\u64cd\u4f5c\u7b26\u4e3b\u8981\u6d89\u53ca\u5230\u5355\u4e2a\u6570\u7684\u64cd\u4f5c\uff08 + \u3001 - \u3001 ~ \u3001 << \u3001 >> \uff09\u3001\u591a\u4e2a\u6570\u7684\u8fd0\u7b97\uff08 * \u3001 / \u3001 % \u3001 + \u3001 - \u3001 & \u3001 ^ \u3001 | \uff09\u3001\u5173\u7cfb\u6bd4\u8f83\uff08 < \u3001 <= \u3001 > \u3001 >= \u3001 == \u3001 != \uff09\u3001\u5b8f\u5b9a\u4e49\u5224\u65ad\uff08 defined \uff09\u3001\u903b\u8f91\u64cd\u4f5c\uff08 ! \u3001 && \u3001 || \uff09\uff0c\u5176\u4f18\u5148\u7ea7\u548c\u884c\u4e3a\u65b9\u5f0f\u4e0e C++ \u8868\u8fbe\u5f0f\u64cd\u4f5c\u7b26\u76f8\u540c\u3002\u9884\u5904\u7406\u5668\u8868\u8fbe\u5f0f\u5728\u7f16\u8bd1\u5668\u9884\u5904\u7406\u5668\u4e0a\u6267\u884c\uff0c\u5728\u7f16\u8bd1\u524d\u8fdb\u884c\u3002 \u4f8b\u5982 #ifndef \u4e0e #if !defined \u610f\u4e49\u76f8\u540c\uff0c #ifdef \u4e0e #if defined \u610f\u4e49\u76f8\u540c\u3002 \u5176\u5b83\u9884\u5904\u7406\u6307\u4ee4 \u00b6 \u9664\u4e86\u4e0a\u9762\u8ba8\u8bba\u7684\u5e38\u7528\u9884\u5904\u7406\u6307\u4ee4\u5916\uff0c\u8fd8\u6709\u4e09\u4e2a\u4e0d\u592a\u5e38\u89c1\u7684\u9884\u5904\u7406\u6307\u4ee4\uff1a #line \u3001 #error \u3001 #pragma \uff0c\u4e0b\u9762\u5206\u522b\u4ecb\u7ecd\u3002 #line #line \u6307\u4ee4\u7528\u4e8e\u91cd\u65b0\u8bbe\u5b9a\u5f53\u524d\u7531 __FILE__ \u548c __LINE__ \u5b8f\u6307\u5b9a\u7684\u6e90\u6587\u4ef6\u540d\u5b57\u548c\u884c\u53f7\u3002 #line \u4e00\u822c\u5f62\u5f0f\u4e3a #line number \"filename\" \uff0c\u5176\u4e2d\u884c\u53f7 number \u4e3a\u4efb\u4f55\u6b63\u6574\u6570\uff0c\u6587\u4ef6\u540d filename \u53ef\u9009\u3002 #line \u4e3b\u8981\u7528\u4e8e\u8c03\u8bd5\u53ca\u5176\u5b83\u7279\u6b8a\u5e94\u7528\uff0c\u6ce8\u610f\u5728 #line \u540e\u9762\u6307\u5b9a\u7684\u884c\u53f7\u6570\u5b57\u662f\u8868\u793a\u4ece\u4e0b\u4e00\u884c\u5f00\u59cb\u7684\u884c\u53f7\u3002 #error #error \u6307\u4ee4\u4f7f\u9884\u5904\u7406\u5668\u53d1\u51fa\u4e00\u6761\u9519\u8bef\u6d88\u606f\uff0c\u7136\u540e\u505c\u6b62\u6267\u884c\u9884\u5904\u7406\u3002\u4e00\u822c\u5f62\u5f0f\u4e3a #error info \uff0c\u5982 #error MFC requires C++ compilation \u3002 #pragma #pragma \u6307\u4ee4\u53ef\u80fd\u662f\u6700\u590d\u6742\u7684\u9884\u5904\u7406\u6307\u4ee4\uff08\u4e5f\u6700\u65b9\u4fbf\uff09\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u8bbe\u5b9a\u7f16\u8bd1\u5668\u7684\u72b6\u6001\u6216\u6307\u793a\u7f16\u8bd1\u5668\u5b8c\u6210\u4e00\u4e9b\u7279\u5b9a\u7684\u52a8\u4f5c\u3002\u4e00\u822c\u5f62\u5f0f\u4e3a #pragma para \uff0c\u5176\u4e2d para \u4e3a\u53c2\u6570\uff0c\u4e0b\u9762\u4ecb\u7ecd\u4e00\u4e9b\u5e38\u7528\u7684\u53c2\u6570\u3002 1 2 3 4 - `#pragma once`\uff0c\u53ea\u8981\u5728\u5934\u6587\u4ef6\u7684\u6700\u5f00\u59cb\u52a0\u5165\u8fd9\u6761\u6307\u4ee4\u5c31\u80fd\u591f\u4fdd\u8bc1\u5934\u6587\u4ef6\u88ab\u7f16\u8bd1\u4e00\u6b21\u3002 - `#pragma message(\"info\")`\uff0c\u5728\u7f16\u8bd1\u4fe1\u606f\u8f93\u51fa\u7a97\u53e3\u4e2d\u8f93\u51fa\u76f8\u5e94\u7684\u4fe1\u606f\uff0c\u4f8b\u5982 `#pragma message(\"Hello\")`\u3002 - `#pragma warning`\uff0c\u8bbe\u7f6e\u7f16\u8bd1\u5668\u5904\u7406\u7f16\u8bd1\u8b66\u544a\u4fe1\u606f\u7684\u65b9\u5f0f\uff0c\u4f8b\u5982 `#pragma warning(disable: 4507 34; once: 4385; error: 164)` \u8868\u793a\u4e0d\u663e\u793a 4507 \u548c 34 \u53f7\u8b66\u544a\u4fe1\u606f\u30014385 \u53f7\u8b66\u544a\u4fe1\u606f\u4ec5\u62a5\u544a\u4e00\u6b21\u3001\u628a 164 \u53f7\u8b66\u544a\u4fe1\u606f\u4f5c\u4e3a\u4e00\u4e2a\u9519\u8bef\u3002 - `#pragma comment(...)`\uff0c\u8bbe\u7f6e\u4e00\u4e2a\u6ce8\u91ca\u8bb0\u5f55\u5230\u5bf9\u8c61\u6587\u4ef6\u6216\u8005\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\u3002\u5e38\u7528 `lib` \u6ce8\u91ca\u7c7b\u578b\uff0c\u7528\u6765\u5c06\u4e00\u4e2a\u5e93\u6587\u4ef6\u94fe\u63a5\u5230\u76ee\u6807\u6587\u4ef6\u4e2d\uff0c\u4e00\u822c\u5f62\u5f0f\u4e3a `#pragma comment(lib, \"*.lib\")`\uff0c\u5176\u4f5c\u7528\u4e0e\u5728\u9879\u76ee\u5c5e\u6027\u94fe\u63a5\u5668\u201c\u9644\u52a0\u4f9d\u8d56\u9879\u201d\u4e2d\u8f93\u5165\u5e93\u6587\u4ef6\u7684\u6548\u679c\u76f8\u540c\u3002 \u6807\u8bc6\u7b26 \u00b6 \u5b9a\u4e49 \u00b6 \u6807\u8bc6\u7b26\u5373\u4e3a\u7f16\u7a0b\u7684\u65f6\u5019\u4f7f\u7528\u7684\u201c\u540d\u5b57\u201d, \u7ed9\u7c7b\u3001\u63a5\u53e3\u3001\u65b9\u6cd5\u3001\u53d8\u91cf\u3001\u5e38\u91cf\u540d\u7b49\u8d77\u540d\u5b57\u7684\u5b57\u7b26\u5e8f\u5217\u3002 \u7ec4\u6210 \u00b6 \u82f1\u6587\u5927\u5c0f\u5199\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u4e0b\u5212\u7ebf\uff08 _ \uff09\u548c\u7f8e\u5143\u7b26\u53f7\uff08 $ \uff09\u3002\u53ef\u4ee5\u4f7f\u7528\u6c49\u5b57\u6216\u5176\u4ed6\u5408\u6cd5\u5b57\u7b26\u547d\u540d\uff0c\u4f46\u662f\u4e0d\u63a8\u8350\u3002 \u5b9a\u4e49\u89c4\u5219 \u00b6 \u4e0d\u80fd\u4ee5\u6570\u5b57\u5f00\u5934\uff0c\u4e0d\u80fd\u662f\u5173\u952e\u5b57\uff0c\u4e25\u683c\u533a\u5206\u5927\u5c0f\u5199\u3002\u53ef\u4ee5\u662f\u6c49\u5b57\u6216\u5176\u4ed6\u5408\u6cd5\u5b57\u7b26\u547d\u540d\uff0c\u4f46\u4e0d\u63a8\u8350\u3002 \u547d\u540d\u89c4\u8303\uff08\u975e\u5f3a\u5236\uff09 \u00b6 \u7c7b\u548c\u63a5\u53e3\u3002\u9996\u4e2a\u5b57\u6bcd\u5927\u5199\uff0c\u5982\u679c\u6709\u591a\u4e2a\u5355\u8bcd\uff0c\u6bcf\u4e2a\u5355\u8bcd\u9996\u5b57\u6bcd\u5927\u5199\u3002\u5982 HelloWorld \u3001 Student \u53d8\u91cf\u548c\u65b9\u6cd5\u3002\u9996\u5b57\u6bcd\u5c0f\u5199\uff0c\u5982\u679c\u6709\u591a\u4e2a\u5355\u8bcd\uff0c\u4ece\u7b2c\u4e8c\u4e2a\u5355\u8bcd\u5f00\u59cb\u9996\u5b57\u6bcd\u5927\u5199\u3002\u5982 getName \u3001 studyJava \u5e38\u91cf\u540d\uff08\u81ea\u5b9a\u4e49\u5e38\u91cf\uff09\u3002\u6240\u6709\u5b57\u6bcd\u90fd\u5927\u5199\uff0c\u591a\u4e2a\u5355\u8bcd\u7528\u4e0b\u5212\u7ebf\u9694\u5f00\u3002\u5982 MAX_VALUE \u7f16\u8bd1\u4e0e\u94fe\u63a5 \u00b6 \u8fc7\u7a0b \u00b6 \u9884\u5904\u7406\u3002\u9884\u5904\u7406\u5668\u5728\u7a0b\u5e8f\u6e90\u6587\u4ef6\u88ab\u7f16\u8bd1\u4e4b\u524d\u6839\u636e\u9884\u5904\u7406\u6307\u4ee4\u5bf9\u7a0b\u5e8f\u6e90\u6587\u4ef6\u8fdb\u884c\u5904\u7406\uff0cC/C++ \u4e3b\u8981\u7684\u9884\u5904\u7406\u529f\u80fd\u6709\u6587\u4ef6\u5305\u542b\u3001\u5b8f\u66ff\u6362\u3001\u6761\u4ef6\u7f16\u8bd1\u7b49\u3002 \u7f16\u8bd1\u3002\u7f16\u8bd1\u9636\u6bb5\u662f\u68c0\u67e5\u8bed\u6cd5\uff0c\u751f\u6210\u6c47\u7f16\u3002\u7b2c\u4e00\u904d\u6267\u884c\u8bed\u6cd5\u5206\u6790\u548c\u9759\u6001\u7c7b\u578b\u68c0\u67e5\uff0c\u5c06\u6e90\u4ee3\u7801\u89e3\u6790\u4e3a\u8bed\u6cd5\u5206\u6790\u6811\u7684\u7ed3\u6784\u3002\u7b2c\u4e8c\u904d\u7531\u4ee3\u7801\u751f\u6210\u5668\u904d\u5386\u8bed\u6cd5\u5206\u6790\u6811\uff0c\u628a\u6811\u7684\u6bcf\u4e2a\u8282\u70b9\u8f6c\u6362\u4e3a\u6c47\u7f16\u8bed\u8a00\u6216\u673a\u5668\u4ee3\u7801\uff0c\u751f\u6210\u76ee\u6807\u6a21\u5757\uff08 .o \u6216 .obj \u6587\u4ef6\uff09 \u6c47\u7f16\u3002\u6c47\u7f16\u4ee3\u7801\u8f6c\u6362\u673a\u5668\u7801\u3002\u975e\u5e95\u5c42\u7684\u7a0b\u5e8f\u5458\u4e0d\u9700\u8981\u8003\u8651\u8fd9\u4e00\u9636\u6bb5\uff0c\u7f16\u8bd1\u5668\u4e5f\u4e0d\u4f1a\u51fa\u9519\u3002\u6c47\u7f16\u4e0e C/C++\u5f00\u53d1\u8005\u65e0\u5173\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u53cd\u6c47\u7f16\u6765\u8c03\u8bd5\u4ee3\u7801\uff0c\u5b66\u4e60\u6c47\u7f16\u8bed\u8a00\u4f9d\u7136\u662f\u5fc5\u5907\u7684\u3002 \u94fe\u63a5\u3002\u628a\u4e00\u7ec4\u76ee\u6807\u6a21\u5757\u94fe\u63a5\u4e3a\u53ef\u6267\u884c\u7a0b\u5e8f\uff0c\u4f7f\u5f97\u64cd\u4f5c\u7cfb\u7edf\u53ef\u4ee5\u6267\u884c\u5b83\u3002\u5904\u7406\u76ee\u6807\u6a21\u5757\u4e2d\u7684\u51fd\u6570\u6216\u53d8\u91cf\u5f15\u7528\uff0c\u5fc5\u8981\u65f6\u641c\u7d22\u5e93\u6587\u4ef6\u5904\u7406\u6240\u6709\u7684\u5f15\u7528\u3002 \u7f16\u8bd1\u6307\u4ee4 \u00b6 \u8fd9\u91cc\u6211\u4eec\u4f7f\u7528 g++ \u7f16\u8bd1\u5668\u8bb2\u89e3\u7f16\u8bd1\u6307\u4ee4\u3002 g++ -c \u8868\u793a\u53ea\u7f16\u8bd1\u4e0d\u94fe\u63a5 g++ -o ex1.out ex1.o \u8868\u793a\u5c06 ex1.o \u94fe\u63a5\u4e3a\u53ef\u6267\u884c\u6587\u4ef6 ex1.out g++ ex5_main.cpp func.cpp -o \u76f4\u63a5\u7f16\u8bd1\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\uff08`g++ \u5e2e\u6211\u4eec\u7701\u7565\u4e86\u4e00\u4e9b\u6b65\u9aa4\uff09 \u94fe\u63a5 \u00b6 \u5c06\u5404\u4e2a\u76ee\u6807\u6587\u4ef6\u4e2d\u7684\u5404\u6bb5\u4ee3\u7801\u8fdb\u884c\u5730\u5740\u5b9a\u4f4d\uff0c\u751f\u6210\u4e0e\u7279\u5b9a\u5e73\u53f0\u76f8\u5173\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002\u5916\u90e8\u51fd\u6570\u7684\u58f0\u660e\uff08\u4e00\u822c\u58f0\u660e\u5728\u5934\u6587\u4ef6\u4e2d\uff09\u53ea\u662f\u4ee4\u7a0b\u5e8f\u987a\u5229\u901a\u8fc7\u7f16\u8bd1\uff0c\u6b64\u65f6\u5e76\u4e0d\u9700\u8981\u641c\u7d22\u5230\u5916\u90e8\u51fd\u6570\u7684\u5b9e\u73b0\uff08\u6216\u5b9a\u4e49\uff09\u3002\u5728\u94fe\u63a5\u8fc7\u7a0b\u4e2d\uff0c\u5916\u90e8\u51fd\u6570\u7684\u5b9e\u73b0\uff08\u6216\u5b9a\u4e49\uff09\u624d\u4f1a\u88ab\u5bfb\u627e\u548c\u6dfb\u52a0\u8fdb\u7a0b\u5e8f\uff0c\u4e00\u65e6\u6ca1\u6709\u627e\u5230\u51fd\u6570\u5b9e\u73b0\uff0c\u5c31\u65e0\u6cd5\u6210\u529f\u94fe\u63a5\u3002 \u5934\u6587\u4ef6 \u00b6 \u610f\u4e49 \u00b6 \u6709\u65f6\u8f85\u52a9\u51fd\u6570\uff08\u5982\u5168\u5c40\u51fd\u6570\uff09\u4f1a\u5728\u591a\u4e2a\u6e90\u6587\u4ef6\u4e2d\u88ab\u4f7f\u7528\u3002\u5c06\u8f85\u52a9\u51fd\u6570\u7f16\u5165\u5934\u6587\u4ef6\u4e2d\uff0c\u4ece\u800c\u907f\u514d\u53cd\u590d\u7f16\u5199\u540c\u4e00\u6bb5\u58f0\u660e\uff0c\u4e5f\u80fd\u591f\u7edf\u4e00\u8f85\u52a9\u51fd\u6570\u7684\u58f0\u660e\uff0c\u907f\u514d\u9519\u8bef\u3002 \u4f8b\u5b50 \u00b6 \u7a0b\u5e8f\u5728\u8fde\u63a5\u65f6\uff0c\u641c\u7d22\u4e86\u7f16\u8bd1\u547d\u4ee4\u91cc\u7684\u6240\u6709\u6587\u4ef6\uff0c\u672c\u9898\u4e2d\u5373\u4e3a\u4e24\u4e2a C++ \u6587\u4ef6\u3002\u56e0\u4e3a main.cpp \u91cc\u9762\u5199\u4e86 #include \"func.h\" \uff0c\u6240\u4ee5\u80fd\u627e\u5230 func.h \u3002\u5982\u679c\u628a main.cpp \u91cc\u7684 #include \u4e5f\u53bb\u6389\uff0c\u5c31\u65e0\u6cd5\u7f16\u8bd1\u4e86\u3002 \u51fd\u6570\u7684\u58f0\u660e\u4e0e\u5b9a\u4e49 \u00b6 \u6982\u5ff5 \u00b6 \u51fd\u6570\u58f0\u660e\u7684\u8bed\u6cd5\u4e3a\uff1a 1 2 int add ( int a , int b ); int add ( int , int ); // \u53d8\u91cf\u540d\u53ef\u7701\u7565\uff0c\u4f8b\u5982\u540e\u7f00\u8fd0\u7b97\u7b26\u91cd\u8f7d\u4e2d\u7684\u54d1\u5143 \u51fd\u6570\u5b9a\u4e49\uff08\u5373\u5b9e\u73b0\uff09\u7684\u8bed\u6cd5\u4e3a\uff1a 1 int add ( int a , int b ) { return a + b ; } \u540c\u4e00\u4e2a\u51fd\u6570\u53ef\u4ee5\u6709\u591a\u6b21\u58f0\u660e\uff0c\u4f46\u53ea\u80fd\u6709\u4e00\u6b21\u5b9e\u73b0\uff0c\u591a\u6b21\u5b9e\u73b0\u4f1a\u5bfc\u81f4\u94fe\u63a5\u9519\u8bef\u3002\u6ce8\u610f\u8fd9\u548c\u91cd\u8f7d\u7684\u533a\u522b\uff0c\u91cd\u8f7d\u662f\u540c\u540d\u51fd\u6570\u4f46\u662f\u53c2\u6570\u4e0d\u540c\uff0c\u91cd\u8f7d\u6211\u4eec\u540e\u7eed\u4ecb\u7ecd\u3002 \u53d8\u91cf\u7684\u58f0\u660e\u4e0e\u5b9a\u4e49 \u00b6 TODO \u5173\u4e8e\u53d8\u91cf\u7684\u58f0\u660e\u4e0e\u5b9a\u4e49\u66f4\u52a0\u8be6\u7ec6\u7684\u8ba8\u8bba\u5728L5-\u521b\u5efa\u4e0e\u9500\u6bc1\u00b7\u4e8c1.3.0\u8282\uff0c\u6b64\u5904\u4e0d\u518d\u8d58\u8ff0\u3002 extern \u5173\u952e\u5b57 \u00b6 TODO \u5173\u4e8e extern \u4fee\u9970\u7b26\u66f4\u52a0\u8be6\u7ec6\u7684\u8ba8\u8bba\u5728L5-\u521b\u5efa\u4e0e\u9500\u6bc1\u00b7\u4e8c1.2.5\u8282\uff0c\u6b64\u5904\u4e0d\u518d\u8d58\u8ff0\u3002 \u4e00\u4e9b\u7f16\u7a0b\u5efa\u8bae \u00b6 \u5bf9\u4e8e\u5934\u6587\u4ef6\uff0c\u5c3d\u91cf\u53ea\u58f0\u660e\u51fd\u6570\u800c\u4e0d\u5b9e\u73b0\u51fd\u6570\u3002\u5c3d\u91cf\u53ea\u58f0\u660e\u5168\u5c40\u53d8\u91cf\u800c\u4e0d\u5b9a\u4e49\u5168\u5c40\u53d8\u91cf\u3002","title":"\u7f16\u7a0b\u73af\u5883"},{"location":"languages/c-oop/environment/#_1","text":"\u4ece\u5355\u4e2a C++ \u4ee3\u7801\u6587\u4ef6\u5230\u591a\u4e2a C++ \u4ee3\u7801\u6587\u4ef6 \u5728\u8bb2\u89e3\u9762\u5411\u5bf9\u8c61\u8fd9\u4e2a\u7f16\u7a0b\u6982\u5ff5\u4e4b\u524d\uff0c\u6211\u4eec\u8ba4\u4e3a\u6709\u5fc5\u8981\u7b80\u5355\u4ecb\u7ecd\u6211\u4eec\u662f\u5982\u4f55\u4ece C++ \u4ee3\u7801\u6587\u4ef6\u5f97\u5230\u53ef\u6267\u884c\u6587\u4ef6\u7684\uff0c\u4ee5\u53ca\u5982\u4f55\u7f16\u8bd1\u591a\u4e2a C++ \u4ee3\u7801\u6587\u4ef6\u3002\u7b80\u5355\u4e86\u89e3\u8fd9\u4e9b\u77e5\u8bc6\u6709\u52a9\u4e8e\u8bfb\u8005\u540e\u7eed\u7406\u89e3\u3002","title":"\u7f16\u7a0b\u73af\u5883"},{"location":"languages/c-oop/environment/#_2","text":"","title":"\u6e90\u7a0b\u5e8f\u7684\u7ed3\u6784\u4e0e\u9884\u7f16\u8bd1"},{"location":"languages/c-oop/environment/#_3","text":"\u4e00\u4e2a\u7ecf\u5178\u7684 C++ \u4ee3\u7801\u6587\u4ef6\u7684\u7ed3\u6784\u4e3a\uff1a 1 2 3 4 5 6 7 8 9 #include <iostream> using namespace std ; // \u5934\u6587\u4ef6\u4e0e\u7f16\u8bd1\u6307\u4ee4 int add ( int a , int b ) { return a + b ; } // \u8f85\u52a9\u51fd\u6570\u5b9a\u4e49 int main () { // \u4e3b\u51fd\u6570\u5b9a\u4e49 cout << add ( 3 , 4 ); return 0 ; }","title":"\u6e90\u7a0b\u5e8f\u7684\u7ed3\u6784"},{"location":"languages/c-oop/environment/#_4","text":"\u5b9a\u4e49 \u4e0a\u6587\u4ee3\u7801\u4e2d\u63d0\u53ca\u7684\u201c\u5934\u6587\u4ef6\u4e0e\u7f16\u8bd1\u6307\u4ee4\u201d\u4e2d\u7684\u7f16\u8bd1\u6307\u4ee4\u5b9e\u9645\u4e0a\u662f\u9884\u7f16\u8bd1\u6307\u4ee4\u7684\u610f\u601d\uff0c\u800c\u9884\u7f16\u8bd1\u4e0e\u9884\u5904\u7406\u662f\u540c\u4e00\u6982\u5ff5\u3002 C/C++ \u7f16\u8bd1\u7cfb\u7edf\u7f16\u8bd1\u7a0b\u5e8f\u7684\u8fc7\u7a0b\u4e3a\u9884\u7f16\u8bd1\u3001\u7f16\u8bd1\u3001\u94fe\u63a5\u3002\u9884\u5904\u7406\u5668\u5728\u7a0b\u5e8f\u6e90\u6587\u4ef6\u88ab\u7f16\u8bd1\u4e4b\u524d\u6839\u636e\u9884\u5904\u7406\u6307\u4ee4\u5bf9\u7a0b\u5e8f\u6e90\u6587\u4ef6\u8fdb\u884c\u5904\u7406\u3002 \u800c\u9884\u5904\u7406\u5668\u6307\u4ee4\u4ee5 # \u53f7\u5f00\u5934\u6807\u8bc6\uff0c\u5e76\u4e0d\u662f\u4e00\u53e5\u6307\u4ee4\uff0c\u672b\u5c3e\u4e0d\u5305\u542b\u5206\u53f7\u3002\u9884\u5904\u7406\u547d\u4ee4\u4e0d\u662f C/C++ \u8bed\u8a00\u672c\u8eab\u7684\u7ec4\u6210\u90e8\u5206\uff0c\u4e0d\u80fd\u76f4\u63a5\u5bf9\u5b83\u4eec\u8fdb\u884c\u7f16\u8bd1\u548c\u94fe\u63a5\u3002C/C++ \u8bed\u8a00\u7684\u4e00\u4e2a\u91cd\u8981\u529f\u80fd\u662f\u53ef\u4ee5\u4f7f\u7528\u9884\u5904\u7406\u6307\u4ee4\u548c\u5177\u6709\u9884\u5904\u7406\u7684\u529f\u80fd\u3002\u4e8c\u8005\u63d0\u4f9b\u7684\u9884\u5904\u7406\u529f\u80fd\u4e3b\u8981\u6709\u6587\u4ef6\u5305\u542b\u3001\u5b8f\u66ff\u6362\u3001\u6761\u4ef6\u7f16\u8bd1\u7b49\u3002 \u6587\u4ef6\u5305\u542b \u9884\u5904\u7406\u6307\u4ee4 #include \u5c06\u88ab\u5305\u542b\u7684\u6587\u4ef6\u4ee3\u7801\uff0c\u76f4\u63a5\u590d\u5236\u5230\u5f53\u524d\u6587\u4ef6\uff0c\u4e00\u822c\u88ab\u7528\u4e8e\u5305\u542b\u5934\u6587\u4ef6\uff08\u5b9e\u9645\u4e5f\u80fd\u5305\u542b\u4efb\u610f\u4ee3\u7801\uff09\u3002\u6709\u4e24\u79cd\u5f62\u5f0f\uff1a #include <xxx.h> \u4ee5\u53ca #include \"xxx.h\" \u3002\u5c16\u62ec\u53f7\u5f62\u5f0f\u8868\u793a\u88ab\u5305\u542b\u7684\u6587\u4ef6\u5728\u7cfb\u7edf\u76ee\u5f55\u4e2d\u3002\u5982\u679c\u88ab\u5305\u542b\u7684\u6587\u4ef6\u4e0d\u4e00\u5b9a\u5728\u7cfb\u7edf\u76ee\u5f55\u4e2d\uff0c\u5e94\u8be5\u7528\u53cc\u5f15\u53f7\u5f62\u5f0f\uff08\u6ce8\u610f\u5230\u662f\u5e94\u8be5\u7528\uff0c\u4e0d\u662f\u6700\u597d\u7528\uff09\u3002 \u5728\u53cc\u5f15\u53f7\u5f62\u5f0f\u4e2d\u53ef\u4ee5\u6307\u51fa\u6587\u4ef6\u8def\u5f84\u548c\u6587\u4ef6\u540d\u3002\u5982\u679c\u5728\u53cc\u5f15\u53f7\u4e2d\u6ca1\u6709\u7ed9\u51fa\u7edd\u5bf9\u8def\u5f84\uff0c\u5219\u9ed8\u8ba4\u4e3a\u7528\u6237\u5f53\u524d\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\uff0c\u6b64\u65f6\u7cfb\u7edf\u9996\u5148\u5728\u7528\u6237\u5f53\u524d\u76ee\u5f55\u4e2d\u5bfb\u627e\u8981\u5305\u542b\u7684\u6587\u4ef6\uff0c\u82e5\u627e\u4e0d\u5230\u518d\u5728\u7cfb\u7edf\u76ee\u5f55\u4e2d\u67e5\u627e\u3002\u5bf9\u4e8e\u7528\u6237\u81ea\u5df1\u7f16\u5199\u7684\u5934\u6587\u4ef6\uff0c\u5e94\u7528\u53cc\u5f15\u53f7\u5f62\u5f0f\u3002\u5bf9\u4e8e\u7cfb\u7edf\u63d0\u4f9b\u7684\u5934\u6587\u4ef6\uff0c\u65e2\u53ef\u4ee5\u7528\u5c16\u62ec\u53f7\u5f62\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u7528\u53cc\u5f15\u53f7\u5f62\u5f0f\uff0c\u90fd\u80fd\u627e\u5230\u88ab\u5305\u542b\u7684\u6587\u4ef6\uff0c\u4f46\u4f7f\u7528\u7528\u5c16\u62ec\u53f7\u5f62\u5f0f\u66f4\u76f4\u622a\u4e86\u5f53\uff0c\u6548\u7387\u66f4\u9ad8\u3002 \u5b8f\u66ff\u6362 \u610f\u4e49 #define \u662f C++ \u8bed\u8a00\u4e2d\u7684\u4e00\u4e2a\u9884\u7f16\u8bd1\u6307\u4ee4\uff0c\u5b83\u7528\u6765\u5c06\u4e00\u4e2a\u6807\u8bc6\u7b26\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8be5\u6807\u8bc6\u7b26\u88ab\u79f0\u4e3a\u5b8f\u540d\uff0c\u88ab\u5b9a\u4e49\u7684\u5b57\u7b26\u4e32\u79f0\u4e3a\u66ff\u6362\u6587\u672c\u3002\u5728\u7a0b\u5e8f\u88ab\u7f16\u8bd1\u524d\uff0c\u5148\u5c06\u5b8f\u540d\u7528\u88ab\u5b9a\u4e49\u7684\u5b57\u7b26\u4e32\u66ff\u6362\uff0c\u8fd9\u79f0\u4e3a\u5b8f\u66ff\u6362\uff0c\u66ff\u6362\u540e\u624d\u8fdb\u884c\u7f16\u8bd1\uff0c\u5b8f\u66ff\u6362\u662f\u7b80\u5355\u7684\u66ff\u6362\u3002 \u5b8f\u5b9a\u4e49 \u5b8f\u5b9a\u4e49\u5305\u62ec\u65e0\u53c2\u6570\u5b8f\u5b9a\u4e49\u548c\u5e26\u53c2\u6570\u5b8f\u5b9a\u4e49\u4e24\u7c7b\u3002\u5b8f\u540d\u548c\u5b8f\u53c2\u6570\u6240\u4ee3\u8868\u7684\u4ee3\u7801\u5e8f\u5217\u53ef\u4ee5\u662f\u4efb\u4f55\u610f\u4e49\u7684\u5185\u5bb9\uff0c\u5982\u7c7b\u578b\u3001\u5e38\u91cf\u3001\u53d8\u91cf\u3001\u64cd\u4f5c\u7b26\u3001\u8868\u8fbe\u5f0f\u3001\u8bed\u53e5\u3001\u51fd\u6570\u3001\u4ee3\u7801\u5757\u7b49\u3002\u4f46\u662f\u5b8f\u540d\u548c\u5b8f\u53c2\u6570\u5fc5\u987b\u662f\u5408\u6cd5\u7684\u6807\u8bc6\u7b26\uff0c\u5176\u6240\u4ee3\u8868\u7684\u5185\u5bb9\u53ca\u610f\u4e49\u5728\u5b8f\u5c55\u5f00\u524d\u540e\u5fc5\u987b\u4e00\u76f4\u662f\u72ec\u7acb\u4e14\u4fdd\u6301\u4e0d\u53d8\u7684\uff0c\u4e0d\u80fd\u5206\u5f00\u89e3\u91ca\u548c\u6267\u884c\u3002 \u65e0\u53c2\u6570\u5b8f \u7528\u4e00\u4e2a\u7528\u6237\u6307\u5b9a\u7684\u79f0\u4e3a\u5b8f\u540d\u7684\u6807\u8bc6\u7b26\u6765\u4ee3\u8868\u4e00\u4e2a\u4ee3\u7801\u5e8f\u5217\uff0c\u8fd9\u79cd\u5b9a\u4e49\u7684\u4e00\u822c\u5f62\u5f0f\u4e3a #define \u6807\u8bc6\u7b26 \u4ee3\u7801\u5e8f\u5217 \u3002\u5176\u4e2d #define \u4e4b\u540e\u7684\u6807\u8bc6\u7b26\u79f0\u4e3a\u5b8f\u5b9a\u4e49\u540d\uff08\u7b80\u79f0\u5b8f\u540d\uff09\uff0c\u5728\u5b8f\u5b9a\u4e49 #define \u4e4b\u524d\u53ef\u4ee5\u6709\u82e5\u5e72\u4e2a\u7a7a\u683c\u3001\u5236\u8868\u7b26\uff0c\u4f46\u4e0d\u5141\u8bb8\u6709\u5176\u5b83\u5b57\u7b26\uff0c\u5b8f\u540d\u4e0e\u4ee3\u7801\u5e8f\u5217\u4e4b\u95f4\u7528\u7a7a\u683c\u7b26\u5206\u9694\u3002\u4f8b\u5982\uff1a 1 #define PI 3.1415926535 \u5728 C++ \u4e2d\uff0c\u8fd9\u79cd\u66ff\u6362\u4e00\u822c\u88ab const \u53d6\u4ee3\uff0c\u8fdb\u800c\u80fd\u4fdd\u8bc1\u7c7b\u578b\u7684\u6b63\u786e\u6027\u3002 1 const double PI = 3.1415926535 \u5e26\u53c2\u6570\u5b8f \u5e26\u53c2\u6570\u5b8f\u5b9a\u4e49\u8fdb\u4e00\u6b65\u6269\u5145\u4e86\u65e0\u53c2\u6570\u5b8f\u5b9a\u4e49\u7684\u80fd\u529b\uff0c\u8fd9\u65f6\u7684\u5b8f\u5c55\u5f00\u65e2\u8fdb\u884c\u5b8f\u540d\u7684\u66ff\u6362\u53c8\u8fdb\u884c\u5b8f\u53c2\u6570\u7684\u66ff\u6362\u3002\u5e26\u53c2\u6570\u7684\u5b8f\u5b9a\u4e49\u7684\u4e00\u822c\u5f62\u5f0f\u4e3a #define \u6807\u8bc6\u7b26(\u53c2\u6570\u8868) \u4ee3\u7801\u5e8f\u5217 \uff0c\u5176\u4e2d\u53c2\u6570\u8868\u4e2d\u7684\u53c2\u6570\u4e4b\u95f4\u7528\u9017\u53f7\u5206\u9694\uff0c\u5728\u4ee3\u7801\u5e8f\u5217\u4e2d\u5fc5\u987b\u8981\u5305\u542b\u53c2\u6570\u8868\u4e2d\u7684\u7684\u53c2\u6570\u3002\u5728\u5b9a\u4e49\u5e26\u53c2\u6570\u7684\u5b8f\u65f6\uff0c\u5b8f\u540d\u4e0e\u5de6\u5706\u62ec\u53f7\u4e4b\u95f4\u4e0d\u5141\u8bb8\u6709\u7a7a\u767d\u7b26\uff0c\u5e94\u7d27\u63a5\u5728\u4e00\u8d77\uff0c\u5426\u5219\u53d8\u6210\u4e86\u65e0\u53c2\u6570\u7684\u5b8f\u5b9a\u4e49\u3002\u5e26\u53c2\u6570\u5b8f\u8c03\u7528\u63d0\u4f9b\u7684\u5b9e\u5728\u53c2\u6570\u4e2a\u6570\u5fc5\u987b\u4e0e\u5b8f\u5b9a\u4e49\u4e2d\u7684\u5f62\u5f0f\u53c2\u6570\u4e2a\u6570\u76f8\u540c\u3002\u4f8b\u5982\uff1a 1 2 #define sqr(x) ((x) * (x)) sqr ( 3 + 2 ); // ((3 + 2) * (3 + 2)); \u5728 C++ \u4e2d\uff0c\u8fd9\u79cd\u66ff\u4ee3\u4e00\u822c\u88ab\u5185\u8054\u51fd\u6570\u53d6\u4ee3\uff0c\u8fdb\u800c\u80fd\u4fdd\u8bc1\u7c7b\u578b\u7684\u6b63\u786e\u6027\u3002\u5185\u8054\u51fd\u6570\u6211\u4eec\u4f1a\u5728\u540e\u7eed\u7ae0\u8282\u4e2d\u8bb2\u89e3\u3002 1 inline double sqr ( double x ) { return x * x ; } \u5b8f\u4f5c\u7528\u57df \u5b8f\u5b9a\u4e49\u7684\u6709\u6548\u8303\u56f4\u79f0\u4e3a\u5b8f\u540d\u7684\u4f5c\u7528\u57df\uff0c\u5b8f\u540d\u7684\u4f5c\u7528\u57df\u4ece\u5b8f\u5b9a\u4e49\u7684\u7ed3\u675f\u5904\u5f00\u59cb\u5230\u5176\u6240\u5728\u7684\u6e90\u4ee3\u7801\u6587\u4ef6\u672b\u5c3e\u3002\u5b8f\u540d\u7684\u4f5c\u7528\u57df\u4e0d\u53d7\u5206\u7a0b\u5e8f\u7ed3\u6784\u7684\u5f71\u54cd\u3002\u5982\u679c\u9700\u8981\u7ec8\u6b62\u5b8f\u540d\u7684\u4f5c\u7528\u57df\uff0c\u53ef\u4ee5\u7528\u9884\u5904\u7406\u6307\u4ee4 #undef \u52a0\u4e0a\u5b8f\u540d\u3002 \u5b8f\u5c55\u5f00 \u9884\u5904\u7406\u5668\u5728\u5904\u7406\u5b8f\u5b9a\u4e49\u65f6\uff0c\u4f1a\u5bf9\u5b8f\u8fdb\u884c\u5c55\u5f00\uff08\u5373\u5b8f\u66ff\u6362\uff09\u3002\u5b8f\u66ff\u6362\u9996\u5148\u5c06\u6e90\u6587\u4ef6\u4e2d\u5728\u5b8f\u5b9a\u4e49\u968f\u540e\u6240\u6709\u51fa\u73b0\u7684\u5b8f\u540d\u5747\u7528\u5176\u6240\u4ee3\u8868\u7684\u4ee3\u7801\u5e8f\u5217\u66ff\u6362\u4e4b\uff0c\u5982\u679c\u662f\u5e26\u53c2\u6570\u5b8f\u5219\u63a5\u7740\u5c06\u4ee3\u7801\u5e8f\u5217\u4e2d\u7684\u5b8f\u5f62\u53c2\u540d\u66ff\u6362\u4e3a\u5b8f\u5b9e\u53c2\u540d\u3002 \u5b8f\u66ff\u6362\u53ea\u4f5c\u4ee3\u7801\u5b57\u7b26\u5e8f\u5217\u7684\u66ff\u6362\u5de5\u4f5c\uff0c\u4e0d\u4f5c\u4efb\u4f55\u8bed\u6cd5\u7684\u68c0\u67e5\uff0c\u4e5f\u4e0d\u4f5c\u4efb\u4f55\u7684\u4e2d\u95f4\u8ba1\u7b97\uff0c\u4e00\u5207\u5176\u5b83\u64cd\u4f5c\u90fd\u8981\u5728\u66ff\u6362\u5b8c\u540e\u624d\u80fd\u8fdb\u884c\u3002\u5982\u679c\u5b8f\u5b9a\u4e49\u4e0d\u5f53\uff0c\u9519\u8bef\u8981\u5230\u9884\u5904\u7406\u4e4b\u540e\u7684\u7f16\u8bd1\u9636\u6bb5\u624d\u80fd\u53d1\u73b0\u3002 \u6e90\u4ee3\u7801\u4e2d\u7684\u5b8f\u540d\u548c\u5b8f\u5b9a\u4e49\u4ee3\u7801\u5e8f\u5217\u4e2d\u7684\u5b8f\u5f62\u53c2\u540d\u5fc5\u987b\u662f\u6807\u8bc6\u7b26\u624d\u4f1a\u88ab\u66ff\u6362\uff0c\u5373\u53ea\u66ff\u6362\u6807\u8bc6\u7b26\uff0c\u4e0d\u66ff\u6362\u522b\u7684\u4e1c\u897f\uff0c\u50cf\u6ce8\u91ca\u3001\u5b57\u7b26\u4e32\u5e38\u91cf\u4ee5\u53ca\u6807\u8bc6\u7b26\u5185\u51fa\u73b0\u7684\u5b8f\u540d\u6216\u5b8f\u5f62\u53c2\u540d\u5219\u4e0d\u4f1a\u88ab\u66ff\u6362\u3002\u4f8b\u5982\u4e0b\u5217\u5b8f\uff1a 1 #define NAME vrmozart \u5b8f\u66ff\u6362\u4e0d\u4f1a\u66ff\u6362\u6389 // NAME \u3001 /* NAME */ \u3001 \"NAME\" \u3001 my_NAME_blog \u4e2d\u7684 NAME \u3002 \u6807\u8bc6\u7b26\u7684\u6982\u5ff5\u5728\u540e\u7eed\u7ae0\u8282\u4e2d\u9610\u8ff0\u3002 \u5b8f\u7684\u72ec\u7acb\u6027 \u524d\u6587\u63d0\u53ca\uff0c\u5b8f\u540d\u548c\u5b8f\u5f62\u53c2\u540d\u6240\u4ee3\u8868\u7684\u5185\u5bb9\u53ca\u610f\u4e49\u5728\u5b8f\u5c55\u5f00\u524d\u540e\u5fc5\u987b\u4e00\u76f4\u662f\u72ec\u7acb\u4e14\u4fdd\u6301\u4e0d\u53d8\u7684\uff0c\u4e0d\u80fd\u5206\u5f00\u89e3\u91ca\u548c\u6267\u884c\u3002\u7136\u800c\uff0c\u5728\u5b8f\u8c03\u7528\u65f6\uff0c\u9884\u5904\u7406\u5668\u7528\u5b8f\u5b9a\u4e49\u7684\u4ee3\u7801\u5e8f\u5217\u66ff\u6362\u5b8f\u540d\uff0c\u7528\u5b8f\u5b9e\u53c2\u540d\u66ff\u6362\u5b8f\u5f62\u53c2\u540d\u3002\u66ff\u6362\u540e\uff0c\u5b8f\u5b9a\u4e49\u7684\u4ee3\u7801\u5e8f\u5217\u5c31\u4e0e\u6e90\u6587\u4ef6\u4e2d\u76f8\u90bb\u7684\u4ee3\u7801\u81ea\u7136\u8fde\u63a5\uff0c\u5b8f\u5b9e\u53c2\u540d\u4e5f\u4e0e\u4ee3\u7801\u5e8f\u5217\u4e2d\u76f8\u90bb\u7684\u4ee3\u7801\u81ea\u7136\u8fde\u63a5\uff0c\u5b8f\u5b9a\u4e49\u7684\u4ee3\u7801\u5e8f\u5217\u548c\u5b8f\u5b9e\u53c2\u540d\u7684\u72ec\u7acb\u6027\u5c31\u4e0d\u4e00\u5b9a\u4f9d\u65e7\u5b58\u5728\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u5e0c\u671b\u4f7f\u7528\u4e0b\u5217\u5b8f\u5b9e\u73b0\u5e73\u65b9\u64cd\u4f5c\uff1a 1 #define SQR(x) x * x \u5bf9\u4e8e\u5b8f\u8c03\u7528 p = SQR(y) \uff0c\u80fd\u5f97\u5230\u5e0c\u671b\u7684\u5b8f\u5c55\u5f00 p = y * y \u3002\u4f46\u5bf9\u4e8e\u5b8f\u8c03\u7528 q = SQR(u + v) \uff0c\u5f97\u5230\u7684\u5b8f\u5c55\u5f00\u662f q = u + v * u + v \u3002\u663e\u7136\uff0c\u540e\u8005\u7684\u5c55\u5f00\u7ed3\u679c\u4e0d\u662f\u7a0b\u5e8f\u8bbe\u8ba1\u8005\u6240\u5e0c\u671b\u7684\u3002\u4e3a\u80fd\u4fdd\u6301\u5b8f\u5b9e\u53c2\u540d\u66ff\u6362\u540e\u7684\u72ec\u7acb\u6027\uff0c\u5e94\u5728\u5b8f\u5b9a\u4e49\u4e2d\u7ed9\u5f62\u5f0f\u53c2\u6570\u52a0\u4e0a\u62ec\u53f7\u3002\u8fdb\u4e00\u6b65\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u5b8f\u540d\u8c03\u7528\u7684\u72ec\u7acb\u6027\uff0c\u4f5c\u4e3a\u7b97\u5f0f\u7684\u5b8f\u5b9a\u4e49\u4ee3\u7801\u5e8f\u5217\u4e5f\u5e94\u52a0\u62ec\u53f7\u3002 SQR \u5b8f\u5b9a\u4e49\u6539\u5199\u6210 #define SQR(x) ((x) * (x)) \u624d\u662f\u6b63\u786e\u7684\u5b8f\u5b9a\u4e49\u3002\u5373\u4fbf\u5982\u6b64\uff0c\u8fd9\u6837\u7684\u5b8f\u5b9a\u4e49\u4f9d\u7136\u5f88\u5371\u9669\u3002 \u5b8f\u8c03\u7528\u4e0e\u51fd\u6570\u8c03\u7528 \u51fd\u6570\u8c03\u7528\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u5b9e\u884c\uff0c\u800c\u5b8f\u5c55\u5f00\u662f\u5728\u7f16\u8bd1\u7684\u9884\u5904\u7406\u9636\u6bb5\u8fdb\u884c\u3002\u51fd\u6570\u8c03\u7528\u5360\u7528\u7a0b\u5e8f\u8fd0\u884c\u65f6\u95f4\uff0c\u5b8f\u8c03\u7528\u53ea\u5360\u7f16\u8bd1\u65f6\u95f4\u3002\u51fd\u6570\u8c03\u7528\u5bf9\u5b9e\u53c2\u6709\u7c7b\u578b\u8981\u6c42\uff0c\u800c\u5b8f\u8c03\u7528\u5b9e\u5728\u53c2\u6570\u4e0e\u5b8f\u5b9a\u4e49\u5f62\u5f0f\u53c2\u6570\u4e4b\u95f4\u6ca1\u6709\u7c7b\u578b\u7684\u6982\u5ff5\uff0c\u53ea\u6709\u5b57\u7b26\u5e8f\u5217\u7684\u5bf9\u5e94\u5173\u7cfb\u3002\u51fd\u6570\u8c03\u7528\u53ef\u8fd4\u56de\u4e00\u4e2a\u503c\uff0c\u5b8f\u8c03\u7528\u83b7\u5f97\u5e0c\u671b\u7684\u4ee3\u7801\u5e8f\u5217\u3002 \u5176\u4ed6\u6027\u8d28 \u5b8f\u540d\u4e00\u822c\u7528\u5927\u5199\u5b57\u6bcd\uff0c\u4ee5\u4fbf\u4e0e\u53d8\u91cf\u540d\u533a\u522b\u3002\u5982\u6709\u5fc5\u8981\uff0c\u5b8f\u540d\u53ef\u88ab\u91cd\u590d\u5b9a\u4e49\uff0c\u88ab\u91cd\u590d\u5b9a\u4e49\u540e\uff0c\u5b8f\u540d\u539f\u5148\u7684\u610f\u4e49\u88ab\u65b0\u610f\u4e49\u6240\u4ee3\u66ff\u3002 \u5b8f\u5b9a\u4e49\u4ee3\u7801\u5e8f\u5217\u4e2d\u53ef\u4ee5\u5f15\u7528\u5df2\u7ecf\u5b9a\u4e49\u7684\u5b8f\u540d\uff0c\u5373\u5b8f\u5b9a\u4e49\u53ef\u4ee5\u5d4c\u5957\u3002","title":"\u9884\u7f16\u8bd1\u6307\u4ee4"},{"location":"languages/c-oop/environment/#_5","text":"\u5b9a\u4e49 \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u5728\u8fdb\u884c\u7f16\u8bd1\u65f6\u5bf9\u6e90\u7a0b\u5e8f\u4e2d\u7684\u6bcf\u4e00\u884c\u90fd\u8981\u7f16\u8bd1\uff0c\u4f46\u662f\u6709\u65f6\u5e0c\u671b\u7a0b\u5e8f\u4e2d\u67d0\u4e00\u90e8\u5206\u5185\u5bb9\u53ea\u5728\u6ee1\u8db3\u4e00\u5b9a\u6761\u4ef6\u65f6\u624d\u8fdb\u884c\u7f16\u8bd1\uff0c\u5982\u679c\u4e0d\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\uff0c\u5c31\u4e0d\u7f16\u8bd1\u8fd9\u90e8\u5206\u5185\u5bb9\uff0c\u8fd9\u5c31\u662f\u6761\u4ef6\u7f16\u8bd1\u3002\u6761\u4ef6\u7f16\u8bd1\u4e3b\u8981\u662f\u8fdb\u884c\u7f16\u8bd1\u65f6\u8fdb\u884c\u6709\u9009\u62e9\u7684\u6311\u9009\uff0c\u6ce8\u91ca\u6389\u4e00\u4e9b\u6307\u5b9a\u7684\u4ee3\u7801\uff0c\u4ee5\u8fbe\u5230\u591a\u4e2a\u7248\u672c\u63a7\u5236\u3001\u9632\u6b62\u5bf9\u6587\u4ef6\u91cd\u590d\u5305\u542b\u3002 #if \u3001 #ifndef \u3001 #ifdef \u3001 #else \u3001 #elif \u3001 #endif \u662f\u6bd4\u8f83\u5e38\u89c1\u6761\u4ef6\u7f16\u8bd1\u9884\u5904\u7406\u6307\u4ee4\uff0c\u53ef\u6839\u636e\u8868\u8fbe\u5f0f\u7684\u503c\u6216\u67d0\u4e2a\u7279\u5b9a\u5b8f\u662f\u5426\u88ab\u5b9a\u4e49\u6765\u786e\u5b9a\u7f16\u8bd1\u6761\u4ef6\u3002 \u6307\u4ee4\u542b\u4e49 #if \u8868\u793a\u8868\u8fbe\u5f0f\u975e\u96f6\u5c31\u5bf9\u4ee3\u7801\u8fdb\u884c\u7f16\u8bd1\u3002 #ifdef \u8868\u793a\u5982\u679c\u5b8f\u88ab\u5b9a\u4e49\u5c31\u8fdb\u884c\u7f16\u8bd1\u3002 #ifndef \u8868\u793a\u5982\u679c\u5b8f\u672a\u88ab\u5b9a\u4e49\u5c31\u8fdb\u884c\u7f16\u8bd1\u3002 #else \u4f5c\u4e3a\u5176\u5b83\u9884\u5904\u7406\u7684\u5269\u4f59\u9009\u9879\u3002 #elif \u662f\u4e00\u79cd #else \u548c #if \u7684\u7ec4\u5408\u9009\u9879\u3002 #endif \u7ed3\u675f\u7f16\u8bd1\u5757\u7684\u63a7\u5236\u3002 \u9632\u6b62\u5934\u6587\u4ef6\u91cd\u590d\u5305\u542b \u6211\u4eec\u5148\u524d\u63d0\u5230\u8fc7 #include \u6307\u4ee4\u7684\u6548\u679c\u662f\u628a\u6e90\u6587\u4ef6 \u76f4\u63a5\u590d\u5236 \u5230\u6e90\u4ee3\u7801\u4e2d\uff0c\u90a3\u4e48\u8003\u8651\u8fd9\u6837\u7684\u591a\u6587\u4ef6\u3002\u5934\u6587\u4ef6 A.h \u4e2d\u5305\u542b\u4e86\u5934\u6587\u4ef6 B.h \uff1a 1 2 3 // A.h #include \"B.h\" /* A.h CODE */ \u800c\u4e3b\u6587\u4ef6\u540c\u65f6\u5305\u542b A.h \u548c B.h \uff1a 1 2 3 4 5 // main.cpp #include \"A.h\" #include \"B.h\" int main () { } \u9884\u5904\u7406\u5668\u5904\u7406\u5230\u4e3b\u6587\u4ef6\u7684 #include \"A.h\" \u7684\u65f6\u5019\u76f4\u63a5\u5c06 A.h \u7684\u5185\u5bb9\u590d\u5236\u8fc7\u6765\uff1a 1 2 3 4 5 6 // main.cpp #include \"B.h\" /* A.h CODE */ #include \"B.h\" int main () { } \u4f1a\u53d1\u73b0\u8fd9\u91cc\u51fa\u73b0\u4e86\u91cd\u590d\u5305\u542b\uff0c\u5982\u679c B.h \u4e2d\u6709\u51fd\u6570\u5b9a\u4e49\uff0c\u5219\u6709\u53ef\u80fd\u5bfc\u81f4\u51b2\u7a81\uff0c\u4ece\u800c\u65e0\u6cd5\u7f16\u8bd1\u6210\u529f\u3002\u90a3\u4e48\u4e3a\u4e86\u9632\u6b62\u8fd9\u6837\u7684\u5934\u6587\u4ef6\u91cd\u590d\u5305\u542b\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed9\u6bcf\u4e00\u4e2a\u5934\u6587\u4ef6\u6309\u7167\u8fd9\u6837\u7684\u683c\u5f0f\u7f16\u5199\uff0c\u5982 B.h \uff1a 1 2 3 4 5 6 7 // B.h #ifndef B_H #define B_H /* B.h CODE */ #endif // B_H \u8fd9\u6837\u5373\u4f7f\u51fa\u73b0\u91cd\u590d\u5305\u542b\uff0c\u7531\u4e8e\u7b2c\u4e00\u6b21\u5305\u542b\u7684\u65f6\u5019 B_H \u5b8f\u5c31\u5df2\u7ecf\u5b9a\u4e49\u8fc7\u4e86\uff0c\u6240\u4ee5\u540e\u9762\u7684 #ifndef \u5c31\u4f1a\u4fdd\u8bc1 B.h \u7684\u4ee3\u7801\u4e0d\u4f1a\u518d\u6b21\u5305\u542b\u8fdb\u6765\u3002 \u4e8b\u5b9e\u4e0a\u73b0\u5728\u66f4\u5e38\u7528\u7684\u9632\u6b62\u91cd\u590d\u5305\u542b\u7684\u9884\u7f16\u8bd1\u6307\u4ee4\u4e3a #pragma once \u3002 \u9884\u5904\u7406\u5668\u8868\u8fbe\u5f0f \u9884\u5904\u7406\u5668\u8868\u8fbe\u5f0f\u5305\u62ec\u7684\u64cd\u4f5c\u7b26\u4e3b\u8981\u6d89\u53ca\u5230\u5355\u4e2a\u6570\u7684\u64cd\u4f5c\uff08 + \u3001 - \u3001 ~ \u3001 << \u3001 >> \uff09\u3001\u591a\u4e2a\u6570\u7684\u8fd0\u7b97\uff08 * \u3001 / \u3001 % \u3001 + \u3001 - \u3001 & \u3001 ^ \u3001 | \uff09\u3001\u5173\u7cfb\u6bd4\u8f83\uff08 < \u3001 <= \u3001 > \u3001 >= \u3001 == \u3001 != \uff09\u3001\u5b8f\u5b9a\u4e49\u5224\u65ad\uff08 defined \uff09\u3001\u903b\u8f91\u64cd\u4f5c\uff08 ! \u3001 && \u3001 || \uff09\uff0c\u5176\u4f18\u5148\u7ea7\u548c\u884c\u4e3a\u65b9\u5f0f\u4e0e C++ \u8868\u8fbe\u5f0f\u64cd\u4f5c\u7b26\u76f8\u540c\u3002\u9884\u5904\u7406\u5668\u8868\u8fbe\u5f0f\u5728\u7f16\u8bd1\u5668\u9884\u5904\u7406\u5668\u4e0a\u6267\u884c\uff0c\u5728\u7f16\u8bd1\u524d\u8fdb\u884c\u3002 \u4f8b\u5982 #ifndef \u4e0e #if !defined \u610f\u4e49\u76f8\u540c\uff0c #ifdef \u4e0e #if defined \u610f\u4e49\u76f8\u540c\u3002","title":"\u6761\u4ef6\u7f16\u8bd1\u6307\u4ee4"},{"location":"languages/c-oop/environment/#_6","text":"\u9664\u4e86\u4e0a\u9762\u8ba8\u8bba\u7684\u5e38\u7528\u9884\u5904\u7406\u6307\u4ee4\u5916\uff0c\u8fd8\u6709\u4e09\u4e2a\u4e0d\u592a\u5e38\u89c1\u7684\u9884\u5904\u7406\u6307\u4ee4\uff1a #line \u3001 #error \u3001 #pragma \uff0c\u4e0b\u9762\u5206\u522b\u4ecb\u7ecd\u3002 #line #line \u6307\u4ee4\u7528\u4e8e\u91cd\u65b0\u8bbe\u5b9a\u5f53\u524d\u7531 __FILE__ \u548c __LINE__ \u5b8f\u6307\u5b9a\u7684\u6e90\u6587\u4ef6\u540d\u5b57\u548c\u884c\u53f7\u3002 #line \u4e00\u822c\u5f62\u5f0f\u4e3a #line number \"filename\" \uff0c\u5176\u4e2d\u884c\u53f7 number \u4e3a\u4efb\u4f55\u6b63\u6574\u6570\uff0c\u6587\u4ef6\u540d filename \u53ef\u9009\u3002 #line \u4e3b\u8981\u7528\u4e8e\u8c03\u8bd5\u53ca\u5176\u5b83\u7279\u6b8a\u5e94\u7528\uff0c\u6ce8\u610f\u5728 #line \u540e\u9762\u6307\u5b9a\u7684\u884c\u53f7\u6570\u5b57\u662f\u8868\u793a\u4ece\u4e0b\u4e00\u884c\u5f00\u59cb\u7684\u884c\u53f7\u3002 #error #error \u6307\u4ee4\u4f7f\u9884\u5904\u7406\u5668\u53d1\u51fa\u4e00\u6761\u9519\u8bef\u6d88\u606f\uff0c\u7136\u540e\u505c\u6b62\u6267\u884c\u9884\u5904\u7406\u3002\u4e00\u822c\u5f62\u5f0f\u4e3a #error info \uff0c\u5982 #error MFC requires C++ compilation \u3002 #pragma #pragma \u6307\u4ee4\u53ef\u80fd\u662f\u6700\u590d\u6742\u7684\u9884\u5904\u7406\u6307\u4ee4\uff08\u4e5f\u6700\u65b9\u4fbf\uff09\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u8bbe\u5b9a\u7f16\u8bd1\u5668\u7684\u72b6\u6001\u6216\u6307\u793a\u7f16\u8bd1\u5668\u5b8c\u6210\u4e00\u4e9b\u7279\u5b9a\u7684\u52a8\u4f5c\u3002\u4e00\u822c\u5f62\u5f0f\u4e3a #pragma para \uff0c\u5176\u4e2d para \u4e3a\u53c2\u6570\uff0c\u4e0b\u9762\u4ecb\u7ecd\u4e00\u4e9b\u5e38\u7528\u7684\u53c2\u6570\u3002 1 2 3 4 - `#pragma once`\uff0c\u53ea\u8981\u5728\u5934\u6587\u4ef6\u7684\u6700\u5f00\u59cb\u52a0\u5165\u8fd9\u6761\u6307\u4ee4\u5c31\u80fd\u591f\u4fdd\u8bc1\u5934\u6587\u4ef6\u88ab\u7f16\u8bd1\u4e00\u6b21\u3002 - `#pragma message(\"info\")`\uff0c\u5728\u7f16\u8bd1\u4fe1\u606f\u8f93\u51fa\u7a97\u53e3\u4e2d\u8f93\u51fa\u76f8\u5e94\u7684\u4fe1\u606f\uff0c\u4f8b\u5982 `#pragma message(\"Hello\")`\u3002 - `#pragma warning`\uff0c\u8bbe\u7f6e\u7f16\u8bd1\u5668\u5904\u7406\u7f16\u8bd1\u8b66\u544a\u4fe1\u606f\u7684\u65b9\u5f0f\uff0c\u4f8b\u5982 `#pragma warning(disable: 4507 34; once: 4385; error: 164)` \u8868\u793a\u4e0d\u663e\u793a 4507 \u548c 34 \u53f7\u8b66\u544a\u4fe1\u606f\u30014385 \u53f7\u8b66\u544a\u4fe1\u606f\u4ec5\u62a5\u544a\u4e00\u6b21\u3001\u628a 164 \u53f7\u8b66\u544a\u4fe1\u606f\u4f5c\u4e3a\u4e00\u4e2a\u9519\u8bef\u3002 - `#pragma comment(...)`\uff0c\u8bbe\u7f6e\u4e00\u4e2a\u6ce8\u91ca\u8bb0\u5f55\u5230\u5bf9\u8c61\u6587\u4ef6\u6216\u8005\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\u3002\u5e38\u7528 `lib` \u6ce8\u91ca\u7c7b\u578b\uff0c\u7528\u6765\u5c06\u4e00\u4e2a\u5e93\u6587\u4ef6\u94fe\u63a5\u5230\u76ee\u6807\u6587\u4ef6\u4e2d\uff0c\u4e00\u822c\u5f62\u5f0f\u4e3a `#pragma comment(lib, \"*.lib\")`\uff0c\u5176\u4f5c\u7528\u4e0e\u5728\u9879\u76ee\u5c5e\u6027\u94fe\u63a5\u5668\u201c\u9644\u52a0\u4f9d\u8d56\u9879\u201d\u4e2d\u8f93\u5165\u5e93\u6587\u4ef6\u7684\u6548\u679c\u76f8\u540c\u3002","title":"\u5176\u5b83\u9884\u5904\u7406\u6307\u4ee4"},{"location":"languages/c-oop/environment/#_7","text":"","title":"\u6807\u8bc6\u7b26"},{"location":"languages/c-oop/environment/#_8","text":"\u6807\u8bc6\u7b26\u5373\u4e3a\u7f16\u7a0b\u7684\u65f6\u5019\u4f7f\u7528\u7684\u201c\u540d\u5b57\u201d, \u7ed9\u7c7b\u3001\u63a5\u53e3\u3001\u65b9\u6cd5\u3001\u53d8\u91cf\u3001\u5e38\u91cf\u540d\u7b49\u8d77\u540d\u5b57\u7684\u5b57\u7b26\u5e8f\u5217\u3002","title":"\u5b9a\u4e49"},{"location":"languages/c-oop/environment/#_9","text":"\u82f1\u6587\u5927\u5c0f\u5199\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u4e0b\u5212\u7ebf\uff08 _ \uff09\u548c\u7f8e\u5143\u7b26\u53f7\uff08 $ \uff09\u3002\u53ef\u4ee5\u4f7f\u7528\u6c49\u5b57\u6216\u5176\u4ed6\u5408\u6cd5\u5b57\u7b26\u547d\u540d\uff0c\u4f46\u662f\u4e0d\u63a8\u8350\u3002","title":"\u7ec4\u6210"},{"location":"languages/c-oop/environment/#_10","text":"\u4e0d\u80fd\u4ee5\u6570\u5b57\u5f00\u5934\uff0c\u4e0d\u80fd\u662f\u5173\u952e\u5b57\uff0c\u4e25\u683c\u533a\u5206\u5927\u5c0f\u5199\u3002\u53ef\u4ee5\u662f\u6c49\u5b57\u6216\u5176\u4ed6\u5408\u6cd5\u5b57\u7b26\u547d\u540d\uff0c\u4f46\u4e0d\u63a8\u8350\u3002","title":"\u5b9a\u4e49\u89c4\u5219"},{"location":"languages/c-oop/environment/#_11","text":"\u7c7b\u548c\u63a5\u53e3\u3002\u9996\u4e2a\u5b57\u6bcd\u5927\u5199\uff0c\u5982\u679c\u6709\u591a\u4e2a\u5355\u8bcd\uff0c\u6bcf\u4e2a\u5355\u8bcd\u9996\u5b57\u6bcd\u5927\u5199\u3002\u5982 HelloWorld \u3001 Student \u53d8\u91cf\u548c\u65b9\u6cd5\u3002\u9996\u5b57\u6bcd\u5c0f\u5199\uff0c\u5982\u679c\u6709\u591a\u4e2a\u5355\u8bcd\uff0c\u4ece\u7b2c\u4e8c\u4e2a\u5355\u8bcd\u5f00\u59cb\u9996\u5b57\u6bcd\u5927\u5199\u3002\u5982 getName \u3001 studyJava \u5e38\u91cf\u540d\uff08\u81ea\u5b9a\u4e49\u5e38\u91cf\uff09\u3002\u6240\u6709\u5b57\u6bcd\u90fd\u5927\u5199\uff0c\u591a\u4e2a\u5355\u8bcd\u7528\u4e0b\u5212\u7ebf\u9694\u5f00\u3002\u5982 MAX_VALUE","title":"\u547d\u540d\u89c4\u8303\uff08\u975e\u5f3a\u5236\uff09"},{"location":"languages/c-oop/environment/#_12","text":"","title":"\u7f16\u8bd1\u4e0e\u94fe\u63a5"},{"location":"languages/c-oop/environment/#_13","text":"\u9884\u5904\u7406\u3002\u9884\u5904\u7406\u5668\u5728\u7a0b\u5e8f\u6e90\u6587\u4ef6\u88ab\u7f16\u8bd1\u4e4b\u524d\u6839\u636e\u9884\u5904\u7406\u6307\u4ee4\u5bf9\u7a0b\u5e8f\u6e90\u6587\u4ef6\u8fdb\u884c\u5904\u7406\uff0cC/C++ \u4e3b\u8981\u7684\u9884\u5904\u7406\u529f\u80fd\u6709\u6587\u4ef6\u5305\u542b\u3001\u5b8f\u66ff\u6362\u3001\u6761\u4ef6\u7f16\u8bd1\u7b49\u3002 \u7f16\u8bd1\u3002\u7f16\u8bd1\u9636\u6bb5\u662f\u68c0\u67e5\u8bed\u6cd5\uff0c\u751f\u6210\u6c47\u7f16\u3002\u7b2c\u4e00\u904d\u6267\u884c\u8bed\u6cd5\u5206\u6790\u548c\u9759\u6001\u7c7b\u578b\u68c0\u67e5\uff0c\u5c06\u6e90\u4ee3\u7801\u89e3\u6790\u4e3a\u8bed\u6cd5\u5206\u6790\u6811\u7684\u7ed3\u6784\u3002\u7b2c\u4e8c\u904d\u7531\u4ee3\u7801\u751f\u6210\u5668\u904d\u5386\u8bed\u6cd5\u5206\u6790\u6811\uff0c\u628a\u6811\u7684\u6bcf\u4e2a\u8282\u70b9\u8f6c\u6362\u4e3a\u6c47\u7f16\u8bed\u8a00\u6216\u673a\u5668\u4ee3\u7801\uff0c\u751f\u6210\u76ee\u6807\u6a21\u5757\uff08 .o \u6216 .obj \u6587\u4ef6\uff09 \u6c47\u7f16\u3002\u6c47\u7f16\u4ee3\u7801\u8f6c\u6362\u673a\u5668\u7801\u3002\u975e\u5e95\u5c42\u7684\u7a0b\u5e8f\u5458\u4e0d\u9700\u8981\u8003\u8651\u8fd9\u4e00\u9636\u6bb5\uff0c\u7f16\u8bd1\u5668\u4e5f\u4e0d\u4f1a\u51fa\u9519\u3002\u6c47\u7f16\u4e0e C/C++\u5f00\u53d1\u8005\u65e0\u5173\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u53cd\u6c47\u7f16\u6765\u8c03\u8bd5\u4ee3\u7801\uff0c\u5b66\u4e60\u6c47\u7f16\u8bed\u8a00\u4f9d\u7136\u662f\u5fc5\u5907\u7684\u3002 \u94fe\u63a5\u3002\u628a\u4e00\u7ec4\u76ee\u6807\u6a21\u5757\u94fe\u63a5\u4e3a\u53ef\u6267\u884c\u7a0b\u5e8f\uff0c\u4f7f\u5f97\u64cd\u4f5c\u7cfb\u7edf\u53ef\u4ee5\u6267\u884c\u5b83\u3002\u5904\u7406\u76ee\u6807\u6a21\u5757\u4e2d\u7684\u51fd\u6570\u6216\u53d8\u91cf\u5f15\u7528\uff0c\u5fc5\u8981\u65f6\u641c\u7d22\u5e93\u6587\u4ef6\u5904\u7406\u6240\u6709\u7684\u5f15\u7528\u3002","title":"\u8fc7\u7a0b"},{"location":"languages/c-oop/environment/#_14","text":"\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528 g++ \u7f16\u8bd1\u5668\u8bb2\u89e3\u7f16\u8bd1\u6307\u4ee4\u3002 g++ -c \u8868\u793a\u53ea\u7f16\u8bd1\u4e0d\u94fe\u63a5 g++ -o ex1.out ex1.o \u8868\u793a\u5c06 ex1.o \u94fe\u63a5\u4e3a\u53ef\u6267\u884c\u6587\u4ef6 ex1.out g++ ex5_main.cpp func.cpp -o \u76f4\u63a5\u7f16\u8bd1\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\uff08`g++ \u5e2e\u6211\u4eec\u7701\u7565\u4e86\u4e00\u4e9b\u6b65\u9aa4\uff09","title":"\u7f16\u8bd1\u6307\u4ee4"},{"location":"languages/c-oop/environment/#_15","text":"\u5c06\u5404\u4e2a\u76ee\u6807\u6587\u4ef6\u4e2d\u7684\u5404\u6bb5\u4ee3\u7801\u8fdb\u884c\u5730\u5740\u5b9a\u4f4d\uff0c\u751f\u6210\u4e0e\u7279\u5b9a\u5e73\u53f0\u76f8\u5173\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002\u5916\u90e8\u51fd\u6570\u7684\u58f0\u660e\uff08\u4e00\u822c\u58f0\u660e\u5728\u5934\u6587\u4ef6\u4e2d\uff09\u53ea\u662f\u4ee4\u7a0b\u5e8f\u987a\u5229\u901a\u8fc7\u7f16\u8bd1\uff0c\u6b64\u65f6\u5e76\u4e0d\u9700\u8981\u641c\u7d22\u5230\u5916\u90e8\u51fd\u6570\u7684\u5b9e\u73b0\uff08\u6216\u5b9a\u4e49\uff09\u3002\u5728\u94fe\u63a5\u8fc7\u7a0b\u4e2d\uff0c\u5916\u90e8\u51fd\u6570\u7684\u5b9e\u73b0\uff08\u6216\u5b9a\u4e49\uff09\u624d\u4f1a\u88ab\u5bfb\u627e\u548c\u6dfb\u52a0\u8fdb\u7a0b\u5e8f\uff0c\u4e00\u65e6\u6ca1\u6709\u627e\u5230\u51fd\u6570\u5b9e\u73b0\uff0c\u5c31\u65e0\u6cd5\u6210\u529f\u94fe\u63a5\u3002","title":"\u94fe\u63a5"},{"location":"languages/c-oop/environment/#_16","text":"","title":"\u5934\u6587\u4ef6"},{"location":"languages/c-oop/environment/#_17","text":"\u6709\u65f6\u8f85\u52a9\u51fd\u6570\uff08\u5982\u5168\u5c40\u51fd\u6570\uff09\u4f1a\u5728\u591a\u4e2a\u6e90\u6587\u4ef6\u4e2d\u88ab\u4f7f\u7528\u3002\u5c06\u8f85\u52a9\u51fd\u6570\u7f16\u5165\u5934\u6587\u4ef6\u4e2d\uff0c\u4ece\u800c\u907f\u514d\u53cd\u590d\u7f16\u5199\u540c\u4e00\u6bb5\u58f0\u660e\uff0c\u4e5f\u80fd\u591f\u7edf\u4e00\u8f85\u52a9\u51fd\u6570\u7684\u58f0\u660e\uff0c\u907f\u514d\u9519\u8bef\u3002","title":"\u610f\u4e49"},{"location":"languages/c-oop/environment/#_18","text":"\u7a0b\u5e8f\u5728\u8fde\u63a5\u65f6\uff0c\u641c\u7d22\u4e86\u7f16\u8bd1\u547d\u4ee4\u91cc\u7684\u6240\u6709\u6587\u4ef6\uff0c\u672c\u9898\u4e2d\u5373\u4e3a\u4e24\u4e2a C++ \u6587\u4ef6\u3002\u56e0\u4e3a main.cpp \u91cc\u9762\u5199\u4e86 #include \"func.h\" \uff0c\u6240\u4ee5\u80fd\u627e\u5230 func.h \u3002\u5982\u679c\u628a main.cpp \u91cc\u7684 #include \u4e5f\u53bb\u6389\uff0c\u5c31\u65e0\u6cd5\u7f16\u8bd1\u4e86\u3002","title":"\u4f8b\u5b50"},{"location":"languages/c-oop/environment/#_19","text":"","title":"\u51fd\u6570\u7684\u58f0\u660e\u4e0e\u5b9a\u4e49"},{"location":"languages/c-oop/environment/#_20","text":"\u51fd\u6570\u58f0\u660e\u7684\u8bed\u6cd5\u4e3a\uff1a 1 2 int add ( int a , int b ); int add ( int , int ); // \u53d8\u91cf\u540d\u53ef\u7701\u7565\uff0c\u4f8b\u5982\u540e\u7f00\u8fd0\u7b97\u7b26\u91cd\u8f7d\u4e2d\u7684\u54d1\u5143 \u51fd\u6570\u5b9a\u4e49\uff08\u5373\u5b9e\u73b0\uff09\u7684\u8bed\u6cd5\u4e3a\uff1a 1 int add ( int a , int b ) { return a + b ; } \u540c\u4e00\u4e2a\u51fd\u6570\u53ef\u4ee5\u6709\u591a\u6b21\u58f0\u660e\uff0c\u4f46\u53ea\u80fd\u6709\u4e00\u6b21\u5b9e\u73b0\uff0c\u591a\u6b21\u5b9e\u73b0\u4f1a\u5bfc\u81f4\u94fe\u63a5\u9519\u8bef\u3002\u6ce8\u610f\u8fd9\u548c\u91cd\u8f7d\u7684\u533a\u522b\uff0c\u91cd\u8f7d\u662f\u540c\u540d\u51fd\u6570\u4f46\u662f\u53c2\u6570\u4e0d\u540c\uff0c\u91cd\u8f7d\u6211\u4eec\u540e\u7eed\u4ecb\u7ecd\u3002","title":"\u6982\u5ff5"},{"location":"languages/c-oop/environment/#_21","text":"TODO \u5173\u4e8e\u53d8\u91cf\u7684\u58f0\u660e\u4e0e\u5b9a\u4e49\u66f4\u52a0\u8be6\u7ec6\u7684\u8ba8\u8bba\u5728L5-\u521b\u5efa\u4e0e\u9500\u6bc1\u00b7\u4e8c1.3.0\u8282\uff0c\u6b64\u5904\u4e0d\u518d\u8d58\u8ff0\u3002","title":"\u53d8\u91cf\u7684\u58f0\u660e\u4e0e\u5b9a\u4e49"},{"location":"languages/c-oop/environment/#extern","text":"TODO \u5173\u4e8e extern \u4fee\u9970\u7b26\u66f4\u52a0\u8be6\u7ec6\u7684\u8ba8\u8bba\u5728L5-\u521b\u5efa\u4e0e\u9500\u6bc1\u00b7\u4e8c1.2.5\u8282\uff0c\u6b64\u5904\u4e0d\u518d\u8d58\u8ff0\u3002","title":"extern \u5173\u952e\u5b57"},{"location":"languages/c-oop/environment/#_22","text":"\u5bf9\u4e8e\u5934\u6587\u4ef6\uff0c\u5c3d\u91cf\u53ea\u58f0\u660e\u51fd\u6570\u800c\u4e0d\u5b9e\u73b0\u51fd\u6570\u3002\u5c3d\u91cf\u53ea\u58f0\u660e\u5168\u5c40\u53d8\u91cf\u800c\u4e0d\u5b9a\u4e49\u5168\u5c40\u53d8\u91cf\u3002","title":"\u4e00\u4e9b\u7f16\u7a0b\u5efa\u8bae"},{"location":"languages/c-oop/function-object-and-smart-pointers/","text":"\u51fd\u6570\u5bf9\u8c61\u548c\u667a\u80fd\u6307\u9488 \u00b6 \u51fd\u6570\u5bf9\u8c61 \u00b6 \u4ec0\u4e48\u662f\u51fd\u6570\u6307\u9488 \u00b6 \u51fd\u6570\u672c\u8d28\u4e0a\u5b58\u5728\u4e8e\u4ee3\u7801\u6bb5\uff0c\u56e0\u6b64\uff0c\u6bcf\u4e2a\u51fd\u6570\u5728\u4ee3\u7801\u6bb5\u4e2d\uff0c\u4e5f\u6709\u7740\u81ea\u5df1\u7684\u5165\u53e3\u5730\u5740\u3002 \u51fd\u6570\u6307\u9488\u662f\u4e00\u4e2a\u6307\u9488\u7c7b\u578b\u7684\u53d8\u91cf\u3002 \u5b83\u6307\u5411\u4ee3\u7801\u6bb5\u4e2d\u51fd\u6570\u5165\u53e3\u7684\u5730\u5740 \u3002 \u51fd\u6570\u6307\u9488\u7684\u58f0\u660e \u00b6 \u58f0\u660e\u683c\u5f0f\u5982\u4e0b\uff1a 1 ret ( * func )( args , ...); \u5176\u4e2d\uff0c ret \u662f\u51fd\u6570\u6307\u9488\u6307\u5411\u7684\u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b\uff0c func \u662f\u8be5\u6307\u9488\u7684\u540d\u5b57\uff0c\u800c args, ... \u662f\u8be5\u6307\u9488\u6307\u5411\u7684\u51fd\u6570\u7684\u53c2\u6570\u5217\u8868\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u4e2a\u540d\u4e3a func \u7684\u6307\u9488\u53ea\u80fd\u6307\u5411\u8fd4\u56de\u503c\u7c7b\u578b\u3001\u53c2\u6570\u7c7b\u578b\u90fd\u76f8\u540c\u7684 \u90a3\u4e9b\u51fd\u6570 \u3002 \u51fd\u6570\u6307\u9488\u7531\u4e8e\u8fd4\u56de\u503c\u3001\u53c2\u6570\u4e0d\u540c\u800c\u6709\u5f88\u591a\u79cd\u7c7b\u578b\u3002\u6bcf\u79cd\u7c7b\u578b\u53ea\u80fd\u6307\u5411\u7279\u5b9a\u7684 \u4e00\u4e9b\u51fd\u6570 \u3002 \u7531\u4e8e\u51fd\u6570\u7684\u7c7b\u578b\u6bd4\u8f83\u96be\u5199\uff0c\u5e38\u5e38\u7528 auto \u5173\u952e\u5b57 \u63a8\u65ad\u51fd\u6570\u6307\u9488\u7c7b\u578b \uff0c\u76f4\u63a5\u4ee4\u51fd\u6570\u6307\u9488\u7b49\u4e8e\u67d0\u4e00\u51fd\u6570\u540d\u3002\u6ce8\u610f\u5982\u679c\u7528 auto \uff0c\u5728\u5bf9\u51fd\u6570\u6307\u9488\u58f0\u660e\u7684\u540c\u65f6\u5fc5\u987b\u5bf9\u5176\u521d\u59cb\u5316\uff0c\u5426\u5219\u7f16\u8bd1\u5668\u65e0\u6cd5\u81ea\u52a8\u63a8\u5bfc\u6307\u9488\u7c7b\u578b\u3002\u4f8b\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 #include <iostream> int arr [ 5 ] = { 5 , 2 , 3 , 1 , 7 }; void increase ( int & x ) { x ++ ; } void decrease ( int & x ) { x -- ; } int main () { int flag ; std :: cin >> flag ; auto func = flag == 1 ? increase : decrease ; for ( int & x : arr ) { func ( x ); cout << x ; } return 0 ; } \u51fd\u6570\u6307\u9488\u7684\u521d\u59cb\u5316 \u00b6 \u7ed9\u4f60\u4e00\u4e2a\u51fd\u6570\uff0c\u600e\u4e48\u8ba9\u4e00\u4e2a\u6307\u9488\u6307\u5411\u5b83\u5462\uff1f \u4e0e\u6570\u7ec4\u7c7b\u4f3c\uff0c\u5728\u6570\u7ec4\u4e2d\uff0c \u6570\u7ec4\u540d\u5c31\u662f \u8be5\u6570\u7ec4\u7684 \u9996\u5730\u5740 \uff0c\u51fd\u6570\u4e5f\u662f\u4e00\u6837\uff0c\u51fd\u6570\u540d\u5c31\u662f \u8be5\u51fd\u6570\u7684\u5165\u53e3\u5730\u5740 \uff0c\u56e0\u6b64\uff0c\u51fd\u6570\u540d\u5c31\u662f\u8be5\u51fd\u6570\u7684\u51fd\u6570\u6307\u9488\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u51fd\u6570\u540d A \u662f\u4e2a\u6307\u9488\uff0c\u8be5\u6307\u9488\u6307\u5411\u7684\u5185\u5b58\u7a7a\u95f4\u548c\u50a8\u5b58\u8be5\u6307\u9488\u7684\u5185\u5b58\u7a7a\u95f4\u662f\u540c\u4e00\u5757\uff0c\u5c31\u662f\u50a8\u5b58\u8be5\u51fd\u6570\u7684\u5185\u5b58\u7a7a\u95f4\u7684\u5934\u90e8\u4f4d\u7f6e\u3002\u4f46\u662f\u5982\u679c\u7528\u522b\u7684\u6307\u9488 B \u6307\u5411\u4e86\u51fd\u6570\uff0c\u90a3\u4e48\u50a8\u5b58 B \u7684\u5185\u5b58\u7a7a\u95f4\u548c B \u6307\u5411\u7684\u5143\u7d20\u7684\u5185\u5b58\u7a7a\u95f4\u4e0d\u662f\u540c\u4e00\u5757\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 #include <iostream> using namespace std ; void func () { } int main () { int arrow [ 10 ]; auto p = func ; cout << arrow << endl ; cout << & arrow << endl ; cout << func << endl ; cout << & func << endl ; cout << p << endl ; cout << & p << endl ; } /* output: 0x7fff7a33d6b0 0x7fff7a33d6b0 1 1 1 0x7fff7a33d6a8 */ \u51fd\u6570\u6307\u9488\u7684\u7528\u9014 \u00b6 \u51fd\u6570\u6307\u9488\u4e3b\u8981\u6709\u4e24\u4e2a\u7528\u9014\uff1a\u505a\u51fd\u6570\u7684\u53c2\u6570\u3001\u8c03\u7528\u51fd\u6570\u3002 \u51fd\u6570\u6307\u9488\u8c03\u7528\u51fd\u6570 \u00b6 \u7528\u51fd\u6570\u6307\u9488\u8c03\u7528\u51fd\u6570\u6709\u4e24\u79cd\u65b9\u6cd5\uff0c\u90fd\u4e0d\u8981\u5fd8\u8bb0\u53c2\u6570\u5217\u8868\u7684\u5706\u62ec\u53f7 () \u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 #include <iostream> #include <string> using namespace std ; string func () { return \"I love my darling, mua!\" ; } void fun () { cout << \"love you too!\" << endl ; } int main () { string zcy = ( * func )(); // \u8fd9\u79cd\u5199\u6cd5\u66f4\u80fd\u4f53\u73b0\u6307\u9488 cout << zcy << endl ; auto x = fun ; x (); } \u51fd\u6570\u6307\u9488\u505a\u51fd\u6570\u53c2\u6570 \u00b6 \u56de\u5fc6\u6765\u81ea <algorithm> \u7684 sort \u51fd\u6570\u3002\u5b83\u6709\u4e24\u79cd\u8c03\u7528\u65b9\u6cd5\uff1a 1 2 sort ( arr , arr + 5 ); sort ( arr , arr + 5 , comp ); // \u7528\u81ea\u5b9a\u4e49\u7684 comp \u51fd\u6570\u6765 sort \u7b2c\u4e8c\u79cd\u5b9a\u4e49\u65b9\u5f0f\u91cc\uff0c\u6211\u4eec\u628a comp \u8fd9\u4e2a\u51fd\u6570\u540d\uff08 \u51fd\u6570\u540d\u4e5f\u5c31\u662f\u51fd\u6570\u6307\u9488 \uff09\u4f5c\u4e3a\u53c2\u6570\u4f20\u4e86\u8fdb\u53bb\u3002\u6211\u4eec\u77e5\u9053\u51fd\u6570\u540d\u5b9e\u9645\u4e0a\u50a8\u5b58\u7740\u51fd\u6570\u5730\u5740\u3002\u6240\u4ee5\u8fd9\u5b9e\u9645\u4e0a\u5c31\u662f\u4f20\u8fdb\u4e86\u51fd\u6570\u6307\u9488\u505a\u53c2\u6570\u3002 \u7528\u81ea\u5b9a\u4e49\u7684 comp \u51fd\u6570\u5b9e\u73b0\u9006\u5e8f sort \uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 #include <algorithm> #include <iostream> using namespace std ; bool comp ( int a , int b ) { return a > b ; } int main () { int arr [ 5 ] = { 5 , 2 , 3 , 1 , 7 }; std :: sort ( arr , arr + 5 , comp ); for ( int x : arr ) { cout << x << \" \" ; } return 0 ; } /* output: 7 5 3 2 1 */ \u5bf9 sort \u51fd\u6570\u6765\u8bf4\uff0c\u5b83\u7684\u7b2c\u4e09\u4e2a\u53c2\u6570\u662f\u51fd\u6570\u6307\u9488\uff0c\u56e0\u4e3a\u6211\u4eec\u4f20\u5165\u7684\u662f comp() \u51fd\u6570\u7684\u5934\u6307\u9488\uff0c\u5373 comp \uff0c\u800c\u4e0d\u662f comp() \u3002 \u8fd9\u4e2a\u51fd\u6570\u6307\u9488\u7684\u7c7b\u578b\u662f\uff1a 1 bool ( * )( T , T ); \u8fd9\u662f\u4e00\u79cd\u53eb Compare \u7c7b\u578b\u7684\u7279\u6b8a\u51fd\u6570\u6307\u9488\u7c7b\u578b\u3002 \u51fd\u6570\u5bf9\u8c61 \u00b6 \u9664\u4e86\u81ea\u5b9a\u4e49\u7684 comp \uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u7528 STL \u63d0\u4f9b\u7684\u9884\u5b9a\u4e49\u7684\u6bd4\u8f83\u51fd\u6570\uff08\u9700\u8981 #include <functional> \uff09\u3002 1 2 sort ( arr , arr + 5 , less < int > ()); // \u4ece\u5c0f\u5230\u5927 sort ( arr , arr + 5 , greater < int > ()); // \u4ece\u5927\u5230\u5c0f \u6ce8\u610f\u5230\u51fd\u6570\u5bf9\u8c61\u672c\u8d28\u4e0a\u662f\u91cd\u8f7d\u4e86 () \uff0c\u4f46\u662f greater<int>() \u8868\u793a\u7684\u662f\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u8fd9\u91cc\u4f20\u5165\u7684\u53c2\u6570\u662f\u4e00\u4e2a\u5bf9\u8c61\u3002 greater<int>()() \u7684\u7b2c\u4e00\u4e2a\u62ec\u53f7\u662f\u8c03\u7528\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u7b2c\u4e8c\u4e2a\u62ec\u53f7\u662f\u91cd\u8f7d () \u3002 less<int>() \u3001 greater<int>() \u548c comp \u4e00\u6837\uff0c\u5b83\u4eec\u6709 Compare \u7c7b\u578b\u51fd\u6570\u6307\u9488\u7684\u529f\u80fd\uff0c\u4f46\u5b83\u5176\u5b9e\u662f \u4e00\u4e2a\u51fd\u6570\u5bf9\u8c61 \uff01 \u4ee5 greater<int>() \u4e3a\u4f8b\uff0c\u5176\u5185\u90e8\u5b9e\u73b0\u673a\u5236\u5982\u4e0b\u3002 \u6ce8\u610f\u5230\uff0c greater \u7684\u5b9e\u73b0\u5df2\u7ecf\u5185\u7f6e\u5728\u4e86 <functional> \u4e2d\uff0c\u5373\u4ee5\u4e0b\u4ee3\u7801\u5728\u5b9e\u9645\u5e94\u7528\u65f6\u4e0d\u5fc5\u5199\u51fa\u3002\u6b64\u5904\u4e3a\u4e86\u907f\u514d\u5173\u952e\u5b57\u51b2\u7a81\uff0c\u5c06 greater \u5199\u4e3a Greater \u3002\u8fd9\u5c31\u597d\u6bd4 std \u91cc\u7684 swap \u548c\u81ea\u5df1\u624b\u5199\u7684 swap \u4e00\u6837\u3002 1 2 3 4 5 6 7 8 9 10 #include <iostream> using namespace std ; template < class T > class Greater { public : Greater () { }; bool operator ()( const T & a , const T & b ) const { return a > b ; } }; \u901a\u8fc7\u5728 public \u4e2d\u5b8c\u6210\u5bf9 operator() \u7684\u91cd\u8f7d\uff0c\u5f53\u8be5\u6a21\u7248\u88ab\u5b9e\u4f8b\u5316\u4e3a\u4e00\u4e2a\u5bf9\u8c61\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7 () \u8c03\u7528\u8be5\u5bf9\u8c61\uff0c\u770b\u8d77\u6765\u5c31\u50cf\u4e00\u4e2a\u51fd\u6570\u3002\u8fd9\u6837\u7684 \u91cd\u8f7d\u4e86 () \u7684\u5bf9\u8c61\u79f0\u4e3a\u201c\u51fd\u6570\u5bf9\u8c61\u201d\u3002 \u8c03\u7528\u51fd\u6570\u5bf9\u8c61\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 #include <iostream> using namespace std ; template < class T > class Greater { public : Greater () { }; bool operator ()( const T & a , const T & b ) const { return a > b ; } }; int main () { auto func = Greater < int > (); cout << func ( 2 , 1 ) << endl ; // true cout << func ( 1 , 1 ) << endl ; // false cout << func ( 1 , 2 ) << endl ; // false return 0 ; } \u6ce8\u610f\uff0c\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u5f88 \u4f18\u96c5 \u5730\u5199 func(1,2) \u662f\u56e0\u4e3a\u4e4b\u524d\u5df2\u7ecf\u628a\u540d\u53eb Greater \u7684\u7c7b\u6a21\u7248\u5b9e\u4f8b\u5316\u4e3a\u4e86\u4e00\u4e2a\u5bf9\u8c61\u3002\u5b9e\u9645\u4e0a\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u5b9e\u4f8b\u5316\u800c\u76f4\u63a5\u8c03\u7528\u3002\u4f46\u8fd9\u65f6\u4e00\u5b9a\u4e0d\u8981\u5fd8\u8bb0 () \uff0c\u7b2c\u4e00\u4e2a () \u4ee3\u8868\u6784\u9020\u51fd\u6570\uff0c\u7b2c\u4e8c\u4e2a () \u624d\u4ee3\u8868\u5bf9\u62ec\u53f7\u7684\u91cd\u8f7d\u3002 1 2 3 4 5 6 7 8 #include <algorithm> #include <iostream> #include <functional> using namespace std ; int main () { cout << greater < int > ()( 1 , 2 ); return 0 ; } \u4ee5 greater<int>() \u4e3a\u53c2\u6570\u8c03\u7528 sort \uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #include <functional> #include <iostream> #include <algorithm> using namespace std ; int main () { auto func = greater < int > (); int arr [ 5 ] = { 1 , 4 , 2 , 8 , 3 }; sort ( arr , arr + 5 , greater < int > ()); for ( int i : arr ) { cout << i << ' ' ; } return 0 ; } /* output: 8 4 3 2 1 */ \u6240\u4ee5\uff0c std::sort \u65e2\u53ef\u4ee5\u63a5\u53d7\u51fd\u6570\u6307\u9488\uff0c\u53c8\u53ef\u63a5\u53d7\u51fd\u6570\u5bf9\u8c61 \u4f5c\u4e3a\u7b2c\u4e09\u4e2a\u53c2\u6570\u3002\u5b9e\u9645\u4e0a\uff0c sort \u662f\u4e00\u4e2a\u51fd\u6570\u6a21\u677f\uff0c\u5176\u6a21\u7248\u53c2\u6570\u662f\u5f85 sort \u7684\u6570\u7ec4\u7684\u7c7b\u578b\u548c\u4e00\u4e2a Compare \u7c7b\u578b\u7684\u51fd\u6570\u6307\u9488\u3002\u8c03\u7528 sort \u7684\u683c\u5f0f\u5982\u4e0b\uff1a 1 sort ( Iterator first , Iterator last , Compare comp ); \u8c03\u7528\u65f6\uff0c\u7cfb\u7edf\u4f1a\u81ea\u884c\u63a8\u5bfc\u51fd\u6570\u6a21\u7248\u53c2\u6570\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u5fc5\u624b\u5de5\u6307\u5b9a\u3002 \u6700\u540e\uff0c\u5173\u4e8e sort \u51fd\u6570\u7684\u4e00\u4e2a\u7ec6\u8282\uff1a sort \u51fd\u6570\u4e0d\u4ec5\u53ef\u4ee5\u7528\u6765 sort \u6570\u7ec4\uff0c\u8fd8\u53ef\u4ee5 sort \u4efb\u4f55 \u6709\u5e8f\u7684 \u5bb9\u5668\u3002\u6bd4\u5982 vector \u3002\u65e0\u8bba\u662f\u6570\u7ec4\u3001 list \u8fd8\u662f vector \uff0c sort \u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u90fd\u5e94\u8be5\u6307\u5411\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u800c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u5219\u6307\u5411 \u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4e4b\u540e \u7684\u90a3\u4e2a\u4f4d\u7f6e\uff0c \u800c\u4e0d\u662f\u6700\u540e\u4e00\u4e2a\u5143\u7d20 \u3002 \u5f53\u7136\uff0c vec \u91cc\u9762\u7684\u6570\u636e\u5f97\u5148\u80fd compare\u3002 1 2 3 4 int arr [ 5 ] = { 1 , 3 , 2 , 6 , 4 }; vector < int > vec = { 1 , 3 , 2 , 6 , 4 }; sort ( arr , arr + 5 ); sort ( vec . begin (), vec . end ()); \u66f4\u5177\u4f53\u7684\u4f8b\u5b50\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 #include <functional> #include <vector> #include <iostream> #include <algorithm> using namespace std ; int main () { auto func = greater < int > (); vector < int > vec = { 1 , 3 , 2 , 6 , 4 }; sort ( vec . begin (), vec . end ()); for ( int i : vec ) { cout << i << ' ' ; } cout << endl ; sort ( vec . begin (), vec . end (), func ); for ( int i : vec ) { cout << i << ' ' ; } return 0 ; } /* output: 1 2 3 4 6 6 4 3 2 1 */ std::function \u7c7b \u00b6 \u7531\u5bf9 sort \u7684\u8ba8\u8bba\uff0c\u6211\u4eec\u53d1\u73b0\u51fd\u6570\u6307\u9488\u548c\u51fd\u6570\u5bf9\u8c61\u6709\u9ad8\u5ea6\u7684\u4e00\u81f4\u6027\u3002\u4f46\u53e6\u4e00\u65b9\u9762\uff0c\u5b83\u4eec\u7684\u5f62\u5f0f\u53c8\u4e0d\u7edf\u4e00\u3002 \u5728\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u4ece\u5c4f\u5e55\u3001\u6587\u4ef6\u8bfb\u53d6\u8fd9\u4e24\u4e2a\u51fd\u6570\u4e0d\u80fd\u88ab\u540c\u4e00\u4e2a\u6570\u7ec4\u7edf\u4e00\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #include <iostream> #include <fstream> #include <functional> #include <cstring> using namespace std ; string readFromScreen () { string input ; getline ( cin , input ); return input ; } class ReadFromFile { public : string operator ()() { string input ; getline ( ifstream ( \"input.txt\" ), input ); return input ; } }; int main () { auto readArr [] = { readFromScreen , ReadFromFile ()}; // \u63a8\u5bfc\u5931\u8d25 return 0 ; } \u89e3\u51b3\u65b9\u6cd5\uff1a std::function \u7c7b\uff0c\u6765\u81ea <functional> \u5934\u6587\u4ef6\u3002 function \u7c7b\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u7c7b\u6a21\u7248 \u00b6 function \u7c7b\u662f\u4e00\u79cd\u7279\u6b8a\u7684 \u7c7b\u6a21\u677f \uff0c\u6a21\u677f\u53c2\u6570\u662f\u51fd\u6570\u8fd4\u56de\u503c\u7c7b\u578b\u548c\u53c2\u6570\u7c7b\u578b\u3002\u4f46\u662f\u7279\u6b8a\u7684\u662f\uff0c function \u53ea\u6709\u6210\u5458\u51fd\u6570\uff0c\u65e0\u6570\u636e\u6210\u5458\u3002 function \u7c7b\u7684\u5b9e\u4f8b\u5316 \u00b6 function \u7c7b\u4e3a\u51fd\u6570\u6307\u9488\u4e0e\u5bf9\u8c61\u63d0\u4f9b\u4e86\u7edf\u4e00\u7684\u63a5\u53e3\u3002\u5b9e\u9645\u4e0a\uff0c function \u7684\u5b9e\u4f8b\u53ef\u4ee5\u5b58\u50a8\u3001\u590d\u5236\u548c\u8c03\u7528\u7684\u4e0d\u4ec5\u4ec5\u662f\u51fd\u6570\u6307\u9488\u4e0e\u5bf9\u8c61\uff0c\u8fd8\u5305\u62ec lambda \u8868\u8fbe\u5f0f\uff0c\u7ed1\u5b9a\u8868\u8fbe\u5f0f\u548c\u6307\u5411\u6210\u5458\u51fd\u6570\u548c\u6307\u5411\u6570\u636e\u6210\u5458\u7684\u6307\u9488\u3002\u4e0d\u7ba1\u91c7\u7528\u54ea\u79cd\u65b9\u5f0f\uff0c\u53ea\u8981\u8c03\u7528\u5f62\u5f0f\u4e00\u6837\uff08\u8fd4\u56de\u503c\u7c7b\u578b\u3001\u5b9e\u53c2\u7c7b\u578b\uff09\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528 function \u7c7b\u578b\u6765\u7edf\u4e00\u3002 function \u7c7b\u7684\u5b9e\u4f8b\u5316\u683c\u5f0f\u5982\u4e0b\uff1a 1 function < ret ( args ...) > Func ; \u5176\u4e2d ret \u662f\u51fd\u6570\u8fd4\u56de\u503c\u7c7b\u578b\uff0c () \u4e2d\u662f\u53c2\u6570\u7c7b\u578b\u5217\u8868\uff0c Func \u662f\u8be5 function \u7c7b\u5bf9\u8c61\u7684\u540d\u5b57\u3002 function \u7c7b\u7684\u5e94\u7528 \u00b6 \u4e0a\u9762\u7684\u4e24\u4e2a\u8bfb\u53d6\u51fd\u6570\u53ef\u4ee5\u7edf\u4e00\u5728 function \u7c7b\u4e2d\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 #include <iostream> #include <fstream> #include <functional> #include <cstring> using namespace std ; string readFromScreen () { string input ; getline ( cin , input ); return input ; } class ReadFromFile { public : string operator ()() { string input ; getline ( ifstream ( \"input.txt\" ), input ); return input ; } }; int main () { function < string () > readArr [] = { readFromScreen , ReadFromFile ()}; function < string () > readFunc ; readFunc = readFromScreen ; readFunc = ReadFromFile (); string ( * readFunc2 )(); readFunc2 = readFromScreen ; // readFunc2 = ReadFromFile(); // \u4e0d\u80fd\u88ab\u51fd\u6570\u5bf9\u8c61\u8d4b\u503c return 0 ; } \u7528 function \u5b9e\u73b0\u591a\u6001 \u00b6 \u6b63\u5982 sort \u51fd\u6570\u6240\u5b9e\u73b0\u7684\u90a3\u6837\uff0c\u901a\u8fc7\u5c06 function \u7c7b\u578b\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\uff0c\u53ef\u4ee5\u7edf\u4e00\u51fd\u6570\u5bf9\u8c61\u548c\u51fd\u6570\u6307\u9488\u3002\u4ee5 function \u7c7b\u578b\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u7684\u51fd\u6570\u53ef\u4ee5\u4ec5\u4ec5\u6539\u53d8\u53c2\u6570\uff0c\u83b7\u5f97\u4e0d\u540c\u7684\u529f\u80fd\u3002 \u4f8b\u5b50 \u4f8b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 #include <iostream> #include <fstream> #include <functional> using namespace std ; // \u7701\u7565 readFromScreen\u3001ReadFromFile\u3001calculateAdd\u3001writeToScreen void process ( function < string () > read , function < string ( string ) > calculate , function < void ( string ) > write ) { string data = read (); string output = calculate ( data ); write ( output ); } int main () { process ( readFromScreen , calculateAdd , writeToScreen ); process ( ReadFromFile (), calculateAdd , writeToScreen ); // \u591a\u6001 return 0 ; } \u53e6\u4e00\u4e2a\u4f8b\u5b50: \u5f53 process \u7684\u53c2\u6570\u7c7b\u578b\u662f function<string()> \u65f6\uff0c\u53ef\u4ee5\u540c\u65f6\u63a5\u53d7 func1 \u3001 func2 \u3001 func3 \u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u3002 \u5982\u679c process \u7684\u53c2\u6570\u7c7b\u578b\u662f string (*func)() \uff0c\u5c31\u65e0\u6cd5\u63a5\u53d7 func2 \u3001 func3 \u3002 \u5982\u679c process \u7684\u53c2\u6570\u7c7b\u578b\u662f Func2 \u7c7b\u5bf9\u8c61\uff0c\u5c31\u65e0\u6cd5\u63a5\u53d7 func1 \u3001 func3 \u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #include <string> #include <iostream> #include <functional> using namespace std ; string func1 (); class Func2 { public : string operator ()(); }; Func2 func2 ; function < string () > func3 ; void process ( function < string () > func ) { string str = func (); cout << str ; } int main () { process ( func1 ); process ( func2 ); process ( func3 ); return 0 ; } STL \u4e2d\u5927\u91cf\u51fd\u6570\u7528\u5230\u4e86\u51fd\u6570\u5bf9\u8c61\u3002\u4ee5\u4e0b\u8fd9\u4e9b\u51fd\u6570\u90fd\u8c03\u7528\u4e86\u51fd\u6570\u6307\u9488\u6216\u8005\u51fd\u6570\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570\u3002 for_each \u3002\u5bf9\u5e8f\u5217\u8fdb\u884c\u6307\u5b9a\u64cd\u4f5c find_if \u3002\u627e\u5230\u6ee1\u8db3\u6761\u4ef6\u7684\u5bf9\u8c61 count_if \u3002\u5bf9\u6ee1\u8db3\u6761\u4ef6\u7684\u5bf9\u8c61\u8ba1\u6570 binary_search \u3002\u4e8c\u5206\u67e5\u627e\u6ee1\u8db3\u6761\u4ef6\u7684\u5bf9\u8c61 \u5e76\u4e14\u4e5f\u6709\u8bb8\u591a\u9884\u7f6e\u7684\u51fd\u6570\u5bf9\u8c61\uff1a less \u3002\u6bd4\u8f83 a < b equal_to \u3002\u6bd4\u8f83 a == b greater \u3002\u6bd4\u8f83 a > b plus \u3002\u8fd4\u56de a + b \u719f\u7ec3\u4f7f\u7528\u51fd\u6570\u5bf9\u8c61 \u6709\u52a9\u4e8e\u5b9e\u73b0\u590d\u6742\u7684\u529f\u80fd\u3002\u4ee5 for_each \u4e3a\u4f8b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 #include <iostream> #include <algorithm> #include <vector> void myfunction ( int & i ) { i ++ ; std :: cout << i << ' ' ; } struct myclass { void operator ()( int & i ) { i += 2 ; std :: cout << i << ' ' ; } } myobject ; int main () { std :: vector < int > myvector ; myvector . push_back ( 10 ); myvector . push_back ( 20 ); myvector . push_back ( 30 ); std :: cout << \"after myfunction, now myvector contains: \" ; for_each ( myvector . begin (), myvector . end (), myfunction ); // \u4f20\u8fdb\u51fd\u6570\u6307\u9488\u4f5c\u4e3a\u53c2\u6570 std :: cout << std :: endl ; std :: cout << \"after myobject, now myvector contains: \" ; for_each ( myvector . begin (), myvector . end (), myobject ); // \u4f20\u8fdb\u51fd\u6570\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570 // \u5b8c\u5168\u7b49\u4ef7\u4e8e for_each(myvector.begin(), myvector.end(), myclass()) return 0 ; } /* output: after myfunction, now myvector contains: 11 21 31 after myobject, now myvector contains: 13 23 33 */ \u4e24\u6b21\u8c03\u7528\u4e86 for_each \u51fd\u6570\uff0c\u5206\u522b\u5bf9 vector \u91cc\u9762\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u6267\u884c\u4e86 myfunction \u548c myobject \u3002\u56e0\u4e3a\u8fd9\u4e24\u4e2a\u51fd\u6570\u7684 \u51fd\u6570\u53c2\u6570\u90fd\u662f\u5f15\u7528 \uff0c\u4e3b\u51fd\u6570\u4e2d\u7684\u53d8\u91cf\u4e5f\u4f1a\u88ab\u4fee\u6539\u3002 \u53e6\u4e00\u4e2a count_if \u7684\u4f8b\u5b50\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 #include <iostream> #include <algorithm> #include <vector> bool IsOdd ( int i ) { return (( i % 2 ) == 1 ); } int main () { std :: vector < int > myvector ; for ( int i = 1 ; i < 10 ; i ++ ) myvector . push_back ( i ); // myvector: 1 2 3 4 5 6 7 8 9 int mycount = count_if ( myvector . begin (), myvector . end (), IsOdd ); std :: cout << \"myvector contains \" << mycount << \" odd values. \\n \" ; return 0 ; } /* output: myvector contains 5 odd values. */ count_if \u51fd\u6570\u9700\u8981\u4f20\u8fdb\u4e00\u4e2a\u8fd4\u56de\u503c\u4e3a bool \u7c7b\u578b\u7684\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u3002 \u4e0e\u5176\u4ed6\u591a\u6001\u5b9e\u73b0\u65b9\u5f0f\u7684\u5bf9\u6bd4 \u00b6 \u4f7f\u7528\u865a\u51fd\u6570\u5b9e\u73b0 \u5bf9\u57fa\u7c7b\u7684\u6307\u9488\u6216\u8005\u5f15\u7528\uff0c\u5728\u8fd0\u884c\u65f6\u901a\u8fc7\u865a\u51fd\u6570\u8868\u786e\u8ba4\u8be5 \u6307\u9488\u6216\u5f15\u7528 \u7684\u5b9e\u9645\u7c7b\u578b\uff0c\u5e76\u8c03\u7528\u5b9e\u9645\u7c7b\u578b\u7684\u91cd\u5199\u8986\u76d6\u540e\u7684\u51fd\u6570\uff0c\u4ee5\u5b9e\u73b0\u591a\u6001\u3002\u662f\u665a\u7ed1\u5b9a\uff08\u8fd0\u884c\u65f6\u7ed1\u5b9a\uff09\u3002 \u4f7f\u7528\u6a21\u677f\u5b9e\u73b0 \u4e0a\u6587\u4e2d\u7684 greater<int>() \u5c31\u662f\u6a21\u7248\u5b9e\u73b0\u591a\u6001\u7684\u4f8b\u5b50\u3002\u901a\u8fc7\u4f20\u5165\u4e0d\u540c\u7684\u6a21\u7248\u53c2\u6570\uff0c\u81ea\u52a8\u5b9e\u73b0\u91cd\u8f7d\uff0c\u53ef\u4ee5\u5b9e\u73b0\u51fd\u6570\u5bf9\u8c61\u548c\u51fd\u6570\u6307\u9488\u7684\u591a\u6001\u3002\u662f\u65e9\u7ed1\u5b9a\uff08\u7f16\u8bd1\u671f\u7ed1\u5b9a\uff09\u3002 \u4f7f\u7528 std::function \u5b9e\u73b0 \u4e5f\u53ef\u4ee5\u652f\u6301\u51fd\u6570\u6307\u9488\u548c\u51fd\u6570\u5bf9\u8c61\uff08\u901a\u8fc7 function \u7684\u591a\u6001\uff09\u3002\u662f\u665a\u7ed1\u5b9a\uff08\u8fd0\u884c\u65f6\u7ed1\u5b9a\uff09\u3002 \u610f\u4e49 \u00b6 \u5c06\u51fd\u6570\u4e5f\u5bf9\u8c61\u5316\u3002\u51fd\u6570\u53ef\u4ee5\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\uff0c\u51fd\u6570\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u53d8\u91cf\u50a8\u5b58\uff0c\u5e76\u4e14\u53ea\u8981\u51fd\u6570\u7684\u53c2\u6570\u548c\u8fd4\u56de\u503c\u76f8\u540c\uff0c\u5c31\u53ef\u4ee5\u88ab\u89c6\u4e3a\u540c\u4e00\u79cd\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u4e0d\u518d\u9700\u8981\u6a21\u677f\u6765\u8c03\u7528\u4e0d\u540c\u7684\u51fd\u6570\u3002 \u667a\u80fd\u6307\u9488 \u00b6 \u5f53\u4e24\u4e2a\u6307\u9488 A \u3001 B \u540c\u65f6\u6307\u5411\u4e00\u4e2a\u53d8\u91cf C \u7684\u65f6\u5019\uff0c\u6211\u4eec\u5e0c\u671b\u53ea\u6709 A \u3001 B \u5747\u88ab\u6790\u6784\u7684\u65f6\u5019\uff0c C \u624d\u88ab\u6790\u6784\u3002 \u5982\u4f55\u505a\u5230\uff1f\u5f15\u5165\u667a\u80fd\u6307\u9488\uff08\u5305\u542b\u5728\u5934\u6587\u4ef6 <memory> \u4e2d\uff09\u3002 \u6784\u9020\u667a\u80fd\u6307\u9488 \u00b6 \u667a\u80fd\u6307\u9488\u7684\u521b\u5efa\uff1a 1 2 3 4 5 shared_ptr < int > p1 ( new int ( 1 )); // \u6307\u5411\u5185\u5bb9\u4e3a 1 \u7684\u4e00\u5757\u5185\u5b58 shared_ptr < int > p2 ; // \u7a7a\u6307\u9488\uff08\u4e0d\u521d\u59cb\u5316\uff09 auto p3 = make_shared < int > ( 3 ); // make_shared<T>(args) \u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u8fd4\u56de\u503c\u662f\u4e00\u4e2a share_ptr int a ; shared_ptr < int > p4 ( a ); // \u7528\u5df2\u6709\u5bf9\u8c61\u521b\u5efa\u667a\u80fd\u6307\u9488\uff0cp4 \u6307\u5411 a \u8ba9\u4e24\u4e2a\u6307\u9488\u6307\u5411\u540c\u4e00\u4e2a\u4f4d\u7f6e\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 #include <iostream> #include <memory> using namespace std ; class Myclass { public : int myint ; Myclass ( int i ) : myint ( i ) { }; }; int main () { shared_ptr < Myclass > p2 = make_shared < Myclass > ( 2 ); shared_ptr < Myclass > p3 = p2 ; // p2 \u548c p3 \u6307\u5411\u540c\u4e00\u5757\u5185\u5b58 // p2\u3001p3 \u90fd\u662f\u667a\u80fd\u6307\u9488\uff0c\u6307\u5411\u540c\u4e00\u5757\u5185\u5b58\u3002 // auto p3(p2) \u548c\u4e0a\u9762\u7684\u53e5\u5b50\u7b49\u4ef7 shared_ptr < Myclass > p4 ; p4 = p3 ; // \u5bf9\u5df2\u6709\u7684\u667a\u80fd\u6307\u9488\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u8fdb\u884c\u8d4b\u503c // \u5982\u679c p4 \u539f\u672c\u6307\u5411\u67d0\u4e2a\u5185\u5b58\u7a7a\u95f4\uff0c\u8be5\u5185\u5b58\u7a7a\u95f4\u7684\u6240\u6709\u667a\u80fd\u6307\u9488\u7684\u5f15\u7528\u8ba1\u6570\u51cf\u4e00 // \u7136\u540e p3 \u6307\u5411\u7a7a\u95f4\u7684\u6240\u6709\u667a\u80fd\u6307\u9488\u5f15\u7528\u8ba1\u6570\u52a0\u4e00 // \u6b64\u5904 p4 \u6784\u9020\u4e4b\u540e\u662f\u4e2a\u7a7a\u6307\u9488\uff0c\u6240\u4ee5\u53ea\u4f1a\u7ed9 p3 \u7684\u5185\u5b58\u7a7a\u95f4\u5f15\u7528\u8ba1\u6570\u52a0\u4e00 cout << p2 << endl ; cout << p3 << endl ; cout << p4 << endl ; } /* output: 0x14b0e80 0x14b0e80 0x14b0e80 */ \u5f15\u7528\u8ba1\u6570 use_count() \u00b6 \u7528 obj.use_count() \u51fd\u6570\uff0c\u53ef\u4ee5\u5f97\u5230\u667a\u80fd\u6307\u9488 obj \u6b64\u523b\u6307\u5411\u7684\u7269\u4f53\uff08\u5305\u62ec obj \u81ea\u5df1\u5728\u5185\uff09\u5171\u6709\u51e0\u4e2a\u667a\u80fd\u6307\u9488\u6307\u5411\u5b83\u3002 \u4ee3\u7801\u793a\u4f8b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 #include <memory> #include <iostream> using namespace std ; int main () { shared_ptr < int > p1 ( new int ( 4 )); cout << p1 . use_count () << ' ' ; // 1 { shared_ptr < int > p2 = p1 ; cout << p1 . use_count () << ' ' ; // 2 cout << p2 . use_count () << ' ' ; // 2 } // p2 \u51fa\u4f5c\u7528\u57df cout << p1 . use_count () << ' ' ; // 1 } \u5982\u679c\u51fd\u6570\u53c2\u6570\u662f\u667a\u80fd\u6307\u9488\u7c7b\u578b\uff0c\u5219\u5728\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u7531\u4e8e\u8c03\u7528\u4e86\u62f7\u8d1d\u6784\u9020\u6784\u9020\u667a\u80fd\u6307\u9488\u4f5c\u4e3a\u53c2\u6570\uff0c\u65b0\u6784\u9020\u51fa\u7684\u667a\u80fd\u6307\u9488\u6307\u5411\u540c\u4e00\u5bf9\u8c61\uff0c\u4f1a\u53d1\u751f count \u589e\u52a0\u3002\u5982\u679c\u60f3\u8981\u907f\u514d\uff0c\u53ef\u4ee5\u5c06\u51fd\u6570\u53c2\u6570\u7c7b\u578b\u6539\u4e3a\u667a\u80fd\u6307\u9488\u7684\u5f15\u7528\u3002 \u4e0d\u7528\u8003\u8651\u7684\u592a\u590d\u6742\uff0c \u5f15\u7528\u4f20\u53c2\u672c\u6765\u5c31\u4e0d\u53d1\u751f\u6784\u9020\u548c\u6790\u6784 \u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 #include <memory> #include <iostream> using namespace std ; void f1 ( shared_ptr < int > p1 ) { // \u62f7\u8d1d\u6784\u9020\u4e86\u667a\u80fd\u6307\u9488\u4f5c\u4e3a\u53c2\u6570 cout << p1 . use_count (); // \u6b64\u65f6 count \u4e3a 2 } void f2 ( shared_ptr < int > & p1 ) { // \u53c2\u6570\u662f\u667a\u80fd\u6307\u9488\u5f15\u7528 cout << p1 . use_count (); // \u6b64\u65f6 count \u4ecd\u4e3a 1 } int main () { shared_ptr < int > p1 ( new int ); // \u6b64\u65f6 count \u4e3a 1 f1 ( p1 ); cout << p1 . use_count (); // \u51fa f1 \u51fd\u6570\u4f53\u65f6\uff0c\u53c2\u6570\u88ab\u6790\u6784\uff0ccount \u56de\u5f52\u5230 1 f2 ( p1 ); cout << p1 . use_count (); return 0 ; } /* output: 2111 */ \u667a\u80fd\u6307\u9488\u7684\u5b9e\u73b0\u539f\u7406 \u00b6 \u667a\u80fd\u6307\u9488\u6307\u5411\u7684\u662f\u8f85\u52a9\u6307\u9488 Uptr \uff0c\u8f85\u52a9\u6307\u9488\u518d\u6307\u5411\u771f\u6b63\u6307\u5411\u6570\u636e\u5b58\u653e\u4f4d\u7f6e\u7684\u6307\u9488 p \u3002 \u8f85\u52a9\u6307\u9488 Uptr \u6709\u4e24\u4e2a\u529f\u80fd\uff1a\u4e00\u65b9\u9762\uff0c\u5b83\u6307\u5411\u771f\u6b63\u6307\u5411\u6570\u636e\u5b58\u653e\u4f4d\u7f6e\u7684\u6307\u9488 p \uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u5b83\u5177\u6709\u6210\u5458 count \uff0c\u8bb0\u5f55\u6709\u51e0\u4e2a\u667a\u80fd\u6307\u9488\u6307\u5411\u81ea\u5df1\u3002\u6bcf\u4e2a\u6307\u5411\u201c\u771f\u6b63\u7684\u201d\u6570\u636e\u7684\u6307\u9488 p \u90fd\u53ea\u88ab\u4e00\u4e2a\u8f85\u52a9\u6307\u9488\u6307\u5411\uff0c p \u548c Uptr \u4e00\u4e00\u5bf9\u5e94\u3002 \u57fa\u4e8e\u4e0a\u56fe\u539f\u7406\u7ed9\u51fa\u4ee5\u4e0b\u7ed3\u8bba\uff1a \u4e0d\u80fd\u76f4\u63a5\u7528\u667a\u80fd\u6307\u9488\u7ed9\u666e\u901a\u6307\u9488\u8d4b\u503c\uff0c\u56e0\u4e3a\u666e\u901a\u6307\u9488\u6ca1\u6709\u8f85\u52a9\u6307\u9488\u3002 \u4e00\u4e2a\u666e\u901a\u6307\u9488\u6700\u591a\u7ed9\u4e00\u4e2a\u667a\u80fd\u6307\u9488\u8d4b\u503c\uff0c\u5426\u5219\u4f1a\u51fa\u73b0\u591a\u4e2a\u8f85\u52a9\u6307\u9488\u3002 \u667a\u80fd\u6307\u9488\u4e4b\u95f4\u53ef\u4ee5\u76f8\u4e92\u8d4b\u503c\uff0c\u5171\u540c\u6307\u5411\u8f85\u52a9\u6307\u9488\u5373\u53ef\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #include <memory> #include <iostream> using namespace std ; int main () { shared_ptr < int > p1 ( new int ( 4 )); cout << p1 . use_count () << ' ' ; // 1 int * normal = p1 ; // \u6211\u4eec\u5e0c\u671b normal \u53ef\u4ee5\u548c p1 \u6307\u5411\u76f8\u540c\u7684\u5185\u5b58 return 0 ; } /* output: .code.tio.cpp:8:7: error: no viable conversion from 'shared_ptr<int>' to 'int *' int *normal=p1; ^ ~~ */ \u90a3\u5982\u679c\u60f3\u8ba9\u666e\u901a\u6307\u9488\u6307\u5411\u667a\u80fd\u6307\u9488\u771f\u6b63\u6307\u5411\u7684\u4f4d\u7f6e\u8be5\u600e\u4e48\u529e\u5462\uff1f\u5229\u7528 p.get() \u51fd\u6570\uff01 p.get() \u8fd4\u56de\u667a\u80fd\u6307\u9488 p \u771f\u6b63\u6307\u5411\u7684\u6570\u636e\u7684 \u88f8\u6307\u9488 \u3002 1 int * normal = p1 . get (); \u66f4\u5177\u4f53\u7684\u793a\u4f8b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 #include <memory> #include <iostream> using namespace std ; int main () { int * pi = new int ( 2 ); shared_ptr < int > ptr ( pi ); // \u7528\u5df2\u6709\u5bf9\u8c61\u521d\u59cb\u5316 cout << \"ptr now points to \" ; cout << ptr . get () << endl ; int * p = ptr . get (); cout << \"p now points to \" ; cout << p << endl ; cout << \"But the count of ptr is \" << ptr . use_count (); return 0 ; } /* output: ptr now points to 0x1557e70 p now points to 0x1557e70 But the count of ptr is 1 */ \u4e0a\u9762\u7684\u4f8b\u5b50\u8bf4\u660e\uff0c \u867d\u7136\u7406\u8bba\u4e0a\u53ef\u4ee5\u8fd9\u4e48\u505a\uff0c\u4f46\u56e0\u4e3a\u666e\u901a\u6307\u9488\u4e0d\u548c\u8f85\u52a9\u6307\u9488\u53d1\u751f\u5173\u7cfb\uff0c\u65e0\u6cd5\u589e\u52a0 count \u7684\u6570\u91cf\u3002\u56e0\u6b64\u4e00\u822c \u4e0d\u80fd\u6df7\u5408\u4f7f\u7528\u666e\u901a\u6307\u9488\u548c\u667a\u80fd\u6307\u9488 \u3002\u5982\u679c\u6211\u4eec\u5e0c\u671b\u6709\u4e00\u4e2a\u6307\u5411\u8be5\u7269\u4f53\u7684\u6307\u9488\uff0c\u5e76\u4e14\u4e0d\u88ab\u8bb0\u5165 count \uff0c\u8003\u8651\u5230\u5b89\u5168\u6027\uff0c\u53ef\u4ee5\u4f7f\u7528 weak_ptr \u4ee3\u66ff\u666e\u901a\u6307\u9488\u3002 \u667a\u80fd\u6307\u9488\u7684\u521d\u59cb\u5316 \u00b6 \u53ef\u4ee5\u7528\u667a\u80fd\u6307\u9488\u521d\u59cb\u5316\u53e6\u4e00\u4e2a\u667a\u80fd\u6307\u9488\uff1a 1 2 shared_ptr < int > ptr2 ( new int ( 3 )); shared_ptr < int > ptr3 ( ptr2 ); \u4f46\u662f\u4e0d\u80fd\u4f7f\u7528\u540c\u4e00\u88f8\u6307\u9488\u521d\u59cb\u5316\u591a\u4e2a\u667a\u80fd\u6307\u9488\uff08\u8fd9\u6837\u4f1a\u51fa\u73b0\u591a\u4e2a\u8f85\u52a9\u6307\u9488\uff09\u3002 \u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\u662f\u9519\u7684\u3002 1 2 3 int * p = new int (); shared_ptr < int > p1 ( p ); shared_ptr < int > p2 ( p ); \u667a\u80fd\u6307\u9488\u7684\u6790\u6784 \u00b6 \u667a\u80fd\u6307\u9488\u6790\u6784\u7684\u65f6\u5019\uff0c\u5176\u5185\u90e8\u7684\u6210\u5458\u8f85\u52a9\u6307\u9488\u5e76\u4e0d\u4e00\u5b9a\u4f1a\u88ab\u6790\u6784\uff0c\u56e0\u4e3a\u8fd8\u53ef\u80fd\u6709\u5176\u4ed6\u667a\u80fd\u6307\u9488\u6307\u5411\u8be5\u8f85\u52a9\u6307\u9488\u3002\u5728\u667a\u80fd\u6307\u9488\u6790\u6784\u7684\u65f6\u5019\u65f6\uff0c\u5176\u8f85\u52a9\u6307\u9488\u5185\u8bb0\u5f55\u667a\u80fd\u6307\u9488\u6570\u91cf\u7684\u6210\u5458 count \u53d1\u751f count-- \u3002 \u53ea\u6709 count-- \u540e\u4e3a 0 \u7684\u65f6\u5019\uff0c\u8f85\u52a9\u6307\u9488\u624d\u4f1a\u88ab\u540c\u65f6\u6790\u6784\u3002 \u667a\u80fd\u6307\u9488\u7684\u5176\u4ed6\u64cd\u4f5c \u00b6 1 2 3 4 p . get (); // \u83b7\u53d6\u88f8\u6307\u9488\uff0c\u5373\u83b7\u5f97\u5b9e\u9645\u6307\u9488\u7684\u60c5\u51b5 p . reset (); // \u6e05\u9664\u6307\u9488\u5e76\u51cf\u5c11\u5f15\u7528\u8ba1\u6570\uff0c\u89c1\u4e0b shared_ptr < myType > q = static_pointer_cast < myType > ( p ); // \u4e0d\u505a\u7c7b\u578b\u68c0\u67e5\uff0c\u76f4\u63a5\u628a\u4e00\u4e2a\u5176\u4ed6\u7c7b\u7c7b\u667a\u80fd\u6307\u9488\u8f6c\u5316\u4e3a myType \u7c7b\u667a\u80fd\u6307\u9488 shared_ptr < Base > q = dynamic_pointer_cast < Base > ( p ); // \u628a\u4e00\u4e2a\u5176\u4ed6\u7c7b\u667a\u80fd\u6307\u9488\u8f6c\u5316\u4e3a Base \u7c7b\u667a\u80fd\u6307\u9488\uff0c\u8fd8\u505a\u7c7b\u578b\u68c0\u67e5 \u5176\u4e2d\uff0c dynamic_pointer_cast \u548c static_pointer_cast \u6240\u9075\u5faa\u7684\u89c4\u5219\u548c\u6211\u4eec\u5728\u591a\u6001\u4e0e\u6a21\u677f\u4e2d\u5b66\u8fc7\u7684 dynamic_cast \u3001 static_cast \u76f8\u540c\u3002 \u4f46\u662f\u5176\u53c2\u6570\u548c\u8fd4\u56de\u503c\u90fd\u662f shared_ptr \u3002 \u8fd9\u91cc\u5bf9 dynamic_cast \u505a\u4e00\u4e2a\u8bf4\u660e \uff1a T2* pObj = dynamic_cast<T2*>(obj_p) \u8fd9\u4e00\u4e2a\u8bed\u53e5\u91cc\u4f1a\u51fa\u73b0\u4e24\u4e2a T2 \uff0c\u7b2c\u4e00\u4e2a\u662f pObj \u7684\u7c7b\u578b\uff0c\u7b2c\u4e8c\u4e2a\u662f obj_p \u7684\u8f6c\u6362\u76ee\u6807\u3002 dynamic_cast \u4e00\u822c\u7528\u6765\u505a\u5411\u4e0b\u7c7b\u578b\u8f6c\u6362\uff0c\u56e0\u4e3a\u5411\u4e0a\u7c7b\u578b\u8f6c\u6362\u76f4\u63a5\u8d4b\u503c\u5c31\u53ef\u4ee5\u4e86\u3002 dynamic_pointer_cast \u53c2\u6570\u90fd\u662f\u667a\u80fd\u6307\u9488\u3002 1 2 shared_ptr < Base > q = dynamic_pointer_cast < Base > ( p ); // \u8be5 dynamic_cast \u4f5c\u7528\u7c7b\u4f3c\u4e8e\u4e0b\u9762\u7684\u8bed\u53e5\uff0c\u4f46\u662f\u7ed3\u679c\u662f\u4e2a shared_ptr Base * q = dynamic_cast < Base *> ( p . get ()); \u5907\u6ce8\uff1a\u6307\u5411\u540c\u4e00\u5757\u5185\u5b58\u7a7a\u95f4\u7684\u6240\u6709 shared_ptr \uff0c \u4e0d\u8bba\u6307\u9488\u672c\u8eab\u7684\u7c7b\u578b \uff0c\u90fd\u4f1a\u7ed9 use_count++ \u3002 reset \u51fd\u6570\uff1a\u5c06 p \u6307\u5411\u53e6\u5916\u4e00\u4e2a\u5bf9\u8c61\u3002\u5f53 () \u4e3a\u7a7a\u7684\u65f6\u5019\uff0c p \u6307\u5411 null \uff0c\u5f53\u4f7f\u7528 reset \u51fd\u6570\u65f6\uff0c\u539f\u6765 p \u6307\u5411\u7684\u5bf9\u8c61\u7684 count \u4f1a\u51cf\u4e00\u3002 reset \u548c\u76f4\u63a5\u5bf9\u6307\u9488\u8d4b\u503c\u7684\u533a\u522b\uff1a reset \u7684\u53c2\u6570\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u4f46\u662f\u76f4\u63a5\u5bf9\u6307\u9488\u8d4b\u503c\u7684\u53c2\u6570\u662f\u4e00\u4e2a\u5730\u5740\u6216\u8005\u522b\u7684\u6307\u9488\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 #include <iostream> #include <memory> using namespace std ; int main () { shared_ptr < int > sp ( new int ( 1 )) ; cout << \"the address is \" << sp << '\\n' ; sp . reset ( new int ( 2 )); cout << \"the address is \" << sp << '\\n' ; sp . reset (); cout << \"the address is \" << sp << '\\n' ; return 0 ; } /* output: the address is 0x17e1e70 the address is 0x17e1eb0 the address is 0 */ \u667a\u80fd\u6307\u9488\u7684\u95ee\u9898 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 #include <memory> #include <iostream> using namespace std ; class Child ; // \u5148\u58f0\u660e\uff0c\u540e\u5b9a\u4e49 class Parent { shared_ptr < Child > child ; public : Parent () { cout << \"parent constructing\" << endl ; } ~ Parent () { cout << \"parent destructing\" << endl ; } void setChild ( shared_ptr < Child > c ) { child = c ; } }; class Child { shared_ptr < Parent > parent ; public : Child () { cout << \"child constructing\" << endl ; } ~ Child () { cout << \"child destructing\" << endl ; } void setParent ( shared_ptr < Parent > p ) { parent = p ; } }; void test () { shared_ptr < Parent > p ( new Parent ()); shared_ptr < Child > c ( new Child ()); p -> setChild ( c ); c -> setParent ( p ); // p \u548c c \u88ab\u9500\u6bc1 } int main () { test (); return 0 ; } /* output: parent constructing child constructing */ Parent \u548c Child \u4e24\u4e2a\u5bf9\u8c61\u4e2d\u7684\u6210\u5458\u5206\u522b\u662f\u6307\u5411\u5bf9\u65b9\u7684\u667a\u80fd\u6307\u9488\uff0c\u5bfc\u81f4 p \u3001 c \u88ab\u6790\u6784\u4e4b\u540e\uff0c Parent \u548c Child \u6240\u5728\u5185\u5b58\u6ca1\u6709\u88ab\u6790\u6784\u3002 \u89e3\u51b3\u65b9\u6cd5\uff1a weak_ptr \u3002 \u5f31\u5f15\u7528 weak_ptr \u00b6 \u5f31\u5f15\u7528\u6307\u9488\u6307\u5411\u5bf9\u8c61\u7684\u65f6\u5019\uff0c\u4e0d\u4f1a\u88ab count \u8ba1\u6570\u3002 weak_ptr \u5fc5\u987b\u7531 shared_ptr \u6784\u9020\uff0c\u4f46\u662f\u4e0d\u4f1a\u8ba1\u6570\uff0c \u76f8\u5f53\u4e8e\u4e00\u4e2a\u80fd\u591f\u88ab\u667a\u80fd\u6307\u9488\u8d4b\u503c\u7684\u201c\u666e\u901a\u6307\u9488\u201d \u3002 \u6784\u9020\u5f31\u5f15\u7528\u6307\u9488 \u00b6 1 2 shared_ptr < int > sp ( new int ( 3 )); weak_ptr < int > wp1 = sp ; // weak_ptr \u5fc5\u987b\u7531 shared_ptr \u6784\u9020 \u5f31\u5f15\u7528\u6307\u9488\u7684\u64cd\u4f5c \u00b6 1 2 3 4 wp . use_count (); // \u83b7\u53d6\u5f15\u7528\u8ba1\u6570\uff0c\u867d\u7136\u5f31\u5f15\u7528\u6307\u9488\u4e0d\u88ab count \u8ba1\u6570\uff0c\u4f46\u4ecd\u7136\u53ef\u4ee5\u83b7\u53d6\u5f15\u7528\u6b21\u6570 count\uff0ccount \u503c\u4e3a\u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61\u7684\u667a\u80fd\u6307\u9488\u7684\u6570\u91cf\u3002 wp . reset (); // \u6e05\u9664\u6307\u9488 wp . expired (); // \u5f53\u5f31\u5f15\u7528\u6307\u9488\u7684 count == 0 \u65f6\uff0c\u5931\u6548\uff0c\u8fd4\u56de true\u3002\u5426\u5219\u8fd4\u56de false sp = wp . lock (); // \u4ece\u5f31\u5f15\u7528 wp \u83b7\u5f97\u4e00\u4e2a\u667a\u80fd\u6307\u9488 sp\uff0c\u8be5\u667a\u80fd\u6307\u9488\u4f1a\u589e\u52a0 count \u72ec\u4eab\u6240\u6709\u6743 unique_ptr \u00b6 unique_ptr \uff1a\u6bcf\u4e2a\u5bf9\u8c61\u53ea\u80fd\u7531\u4e00\u4e2a unique_ptr \u6307\u5411\u5b83\u3002\u8be5\u5bf9\u8c61\u4e0d\u80fd\u88ab\u5176\u4ed6 shared_ptr \u3001 weak_ptr \u6307\u5411\u3002 \u67d0\u4e2a\u65f6\u523b\u53ea\u80fd\u6709\u4e00\u4e2a unique_ptr \u6307\u5411\u4e00\u4e2a\u7ed9\u5b9a\u5bf9\u8c61 \uff0c\u7531\u4e8e\u4e00\u4e2a unique_ptr \u201c\u62e5\u6709\u201d\u5b83\u6307\u5411\u7684\u5bf9\u8c61\uff0c\u56e0\u6b64 unique_ptr \u4e0d\u652f\u6301\u666e\u901a\u7684\u62f7\u8d1d\u6216\u8d4b\u503c\u64cd\u4f5c\u3002 \u6ce8\u610f\u5230 unique \u53ea\u662f\u548c shared \u4e0e weak \u4e0d\u80fd\u5171\u4eab\uff0c \u4f46\u662f\u4ecd\u7136\u53ef\u4ee5\u548c\u666e\u901a\u6307\u9488\u548c\u5f15\u7528\u5171\u4eab \u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 #include <memory> #include <utility> #include <iostream> using namespace std ; int main () { int a = 1 ; auto u4 = make_unique < int > ( a ); // \u521b\u5efa\u65b9\u5f0f\u5728\u4e4b\u540e\u8bb2\u8ff0 int & b = a ; int * x = & a ; cout << * x << endl ; cout << b << endl ; cout << * u4 << endl ; return 0 ; } /* output: 1 1 1 */ unique_ptr \u7684\u521b\u5efa \u00b6 1 2 3 4 5 6 7 unique_ptr < int > u1 ; // \u7a7a\u6307\u9488 unique_ptr < int > u2 ( new int ( 3 )); // \u65b0\u5206\u914d\u4e00\u5757\u5185\u5b58\u7ed9 unique_ptr int a = 1 ; unique_ptr < int > u3 ( a ); // \u7528\u5df2\u6709\u5bf9\u8c61 a \u521b\u5efa unique_ptr auto u4 = std :: make_unique < int > ( 20 ); // \u4e5f\u662f\u65b0\u5206\u914d\u4e00\u5757\u5185\u5b58\u7ed9 unique_ptr // make_unique \u51fd\u6570\u81ea\u52a8\u8fd4\u56de unique_ptr \u7c7b\u578b\u7684\u8fd4\u56de\u503c // \u4f9b\u7f16\u8bd1\u5668\u63a8\u5bfc u4 \u7684\u7c7b\u578b \u548c weak_ptr \u4e0d\u540c\uff0c unique_ptr \u4e0d\u9700\u8981\u548c shared_ptr \u5171\u540c\u4f7f\u7528\u3002\u5b9e\u9645\u4e0a\uff0c unique_ptr \u4e0d\u80fd\u548c shared_ptr \u540c\u65f6\u6307\u5411\u4e00\u4e2a\u5bf9\u8c61\uff0c\u4e5f\u4e0d\u80fd\u7528 shared_ptr \u6784\u9020 unique_ptr \u3002 \u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\u5c31\u662f\u9519\u7684\u3002 1 2 shared_ptr < int > sp ( new int ( 1 )); unique_ptr < int > up ( sp ); \u5148\u7ed9\u51fa\u7ed3\u8bba \uff0c unique_ptr \u76f8\u6bd4\u4e8e\u666e\u901a\u6307\u9488\u5177\u6709\u5982\u4e0b\u7684\u7279\u70b9\uff1a \u4e0d\u53ef\u7528 unique_ptr \u7ed9\u5176\u4ed6\u6307\u9488\u8d4b\u503c 1 2 3 4 int * p = new int ( 20 ); int & b = * p ; // \u53ef\u4ee5 auto p = make_unique < int > ( 20 ); int * g = * p ; // \u4e0d\u53ef\u4ee5 \u4e0d\u53ef\u4ee5\u8f93\u51fa 1 2 auto p = make_unique < int > ( 20 ); cout << p << endl ; // \u4e0d\u53ef\u4ee5 \u4e0d\u53ef\u4ee5 delete 1 2 3 4 5 6 7 8 9 10 auto p = make_unique < int > ( 20 ); delete p ; /* output: 1152177172/source.cpp: In function 'int main()': 1152177172/source.cpp:7:12: error: type 'class std::unique_ptr<int, std::default_delete<int> >' argument given to 'delete', expected pointer delete p; ^ */ unique_ptr \u7684\u64cd\u4f5c \u00b6 1 2 3 4 unique_ptr < int > u1 ; // \u521b\u5efa\u7a7a unique_ptr u1 = nullptr ; // \u6b64\u65f6\u4f1a\u91ca\u653e u1 \u6307\u5411\u7684\u5bf9\u8c61\u7684\u6743\u9650\uff0c\u4f46\u662f\u5bf9\u8c61\u4e0d\u4f1a\u88ab\u6790\u6784 u1 . release (); // \u8fd9\u4e2a\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u6307\u5411\u8be5\u5bf9\u8c61\u7684\u666e\u901a\u6307\u9488\uff0c\u6b64\u65f6 u1 \u6307\u9488\u88ab\u7834\u574f\uff0c\u5177\u4f53\u89c1\u4e0b u1 . reset (); // \u5728\u6539\u53d8 u1 \u6307\u5411\u7684\u540c\u65f6\uff0c\u4f1a\u91ca\u653e u1 \u6307\u5411\u7684\u5bf9\u8c61 \u5bf9\u4e8e release \u7684\u8bf4\u660e\uff08\u8fd9\u4e9b\u8bf4\u660e\u90fd\u662f\u57fa\u4e8e retexter \uff0c\u6211\u53d1\u73b0 glot \u6839\u672c\u4e0d\u652f\u6301 make_unique \uff0c\u800c tio \u4e0d\u4f1a\u62a5\u9519\u3002\u518d\u6b21\u4f53\u73b0\u4e86\u4e09\u4e2a\u5e73\u53f0\u90fd\u5f88\u6709\u7528\uff0c\u90fd\u5f97\u7528\u60ef\uff09\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 #include <memory> #include <utility> #include <iostream> using namespace std ; int main () { int a = 1 ; auto u4 = make_unique < int > (); cout << * u4 << endl ; cout << \"====================\" << endl ; u4 . release (); // cout << *u4 << endl; return 0 ; } /* output: 0 ==================== */ \u5982\u679c\u6211\u4eec\u628a\u7b2c 11 \u884c\u7684\u6ce8\u91ca\u53bb\u6389\uff0c\u8bd5\u56fe\u6253\u5370\u51fa release \u540e\u7684 unique_ptr \u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 #include <memory> #include <utility> #include <iostream> using namespace std ; int main () { int a = 1 ; auto u4 = make_unique < int > (); cout << * u4 << endl ; cout << \"====================\" << endl ; u4 . release (); cout << a << endl ; cout << * u4 << endl ; return 0 ; } /* output: Invalid memory reference (SIGSEGV) 0 ==================== 1 */ \u53ef\u4ee5\u89c1\u5f97\uff0c\u6700\u540e\u90a3\u4e2a\u8f93\u51fa\u8bed\u53e5\u4e00\u5b9a\u662f\u975e\u6cd5\u7684\uff0c release \u76f8\u5f53\u4e8e\u7834\u574f\u4e86 u4 \uff0c\u8fd4\u56de\u4e86\u4e00\u4e2a\u88f8\u6307\u9488\uff0c u4 \u5c06\u65e0\u6cd5\u88ab\u590d\u7528\u3002 \u503c\u5f97\u6ce8\u610f \u7684\u662f\uff0c\u5982\u679c\u6211\u4eec\u4ea4\u6362 11\u300112 \u884c\uff0c\u5148\u6253\u5370\u5df2\u7ecf\u88ab release \u7684 u4 \u518d\u6253\u5370 a \uff0c\u65e0\u6cd5\u628a a \u6253\u5370\u51fa\u6765\uff0c\u56e0\u4e3a\u5f53\u6211\u4eec\u8bd5\u56fe\u6253\u5370 *u4 \u7684\u65f6\u5019\uff0c\u7a0b\u5e8f\u5c31\u7ed3\u675f\u4e86\uff0c\u56e0\u800c\u8f93\u51fa\u662f\u8fd9\u6837\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 #include <memory> #include <utility> #include <iostream> using namespace std ; int main () { int a = 1 ; auto u4 = make_unique < int > (); cout << * u4 << endl ; cout << \"====================\" << endl ; u4 . release (); cout << * u4 << endl ; cout << a << endl ; return 0 ; } /* output: Invalid memory reference (SIGSEGV) 0 ==================== */ \u5c06\u4e00\u4e2a\u5bf9\u8c61\u7684\u6240\u6709\u6743\u5728\u4e24\u4e2a unique_ptr \u4e4b\u95f4\u8f6c\u6362\u7684\u65b9\u6cd5 \u00b6 1 2 3 4 5 6 7 8 // \u5c06 p1 \u6307\u5411\u7684\u5bf9\u8c61\u8f6c\u79fb\u7ed9 p2 unique_ptr < int > p1 ( new int ( 1 )); unique_ptr < int > p2 ( p1 . release ()); // release \u5c06 p1 \u7f6e\u4e3a\u7a7a\uff0c\u5e76\u4e14\u8fd4\u56de\u88f8\u6307\u9488 // \u5c06 p3 \u6307\u5411\u7684\u5bf9\u8c61\u8f6c\u79fb\u7ed9 p2 unique_ptr < int > p3 ( new int ( 3 )); p2 . reset ( p3 . release ()); // reset \u91ca\u653e\u4e86 p2 \u539f\u6765\u6307\u5411\u7684\u5185\u5b58 release \u6210\u5458\u8fd4\u56de unique_ptr \u5f53\u524d\u4fdd\u5b58\u7684\u6307\u9488\u5e76\u5c06\u5176\u7f6e\u4e3a\u7a7a\u3002\u56e0\u6b64\uff0c p2 \u88ab\u521d\u59cb\u5316\u4e3a p1 \u539f\u6765\u4fdd\u5b58\u7684\u6307\u9488\uff0c\u800c p1 \u88ab\u7f6e\u4e3a\u7a7a\u3002 reset \u6210\u5458\u63a5\u53d7\u4e00\u4e2a\u53ef\u9009\u7684\u6307\u9488\u53c2\u6570\uff0c\u4ee4 unique_ptr \u91cd\u65b0\u6307\u5411\u7ed9\u5b9a\u7684\u6307\u9488\u3002 \u8c03\u7528 release \u4f1a\u5207\u65ad unique_ptr \u548c\u5b83\u539f\u6765\u7ba1\u7406\u7684\u7684\u5bf9\u8c61\u95f4\u7684\u8054\u7cfb\u3002 release \u8fd4\u56de\u7684\u6307\u9488\u901a\u5e38\u88ab\u7528\u6765\u521d\u59cb\u5316\u53e6\u4e00\u4e2a\u667a\u80fd\u6307\u9488\u6216\u7ed9\u53e6\u4e00\u4e2a\u667a\u80fd\u6307\u9488\u8d4b\u503c\u3002 1 2 3 4 5 6 7 // \u6ce8\u610f\u8fd9\u91cc\u975e\u5e38\u795e\u5947\uff0c\u6211\u4eec\u5728\u4e4b\u524d\u7ed9\u7684\u6784\u9020\u65b9\u6cd5\u4e2d\uff0c\u8981\u4e48\u662f\u7528\u6784\u9020\u65b0\u6307\u9488\u6307\u5411\u67d0\u4e2a\u5bf9\u8c61\uff0c\u6bd4\u5982\uff1a int a = 20 ; unique_ptr < int > p2 ( a ); // \u8981\u4e48\u662f\u5148\u6784\u9020\u65b0\u6307\u9488\uff0c\u518d\u7528\u522b\u7684\u6307\u9488\u7ed9\u4ed6\u8d4b\u503c\uff0c\u6bd4\u5982 unique_ptr < int > u1 ; // \u7a7a\u6307\u9488 int a = 20 ; u1 = & a ; \u4f8b\u5b50\uff1a 1 2 3 4 5 6 7 8 9 10 11 #include <memory> #include <utility> using namespace std ; int main () { auto up1 = std :: make_unique < int > ( 20 ); // unique_ptr<int> up2 = up1; // \u9519\u8bef\uff0c\u4e0d\u80fd\u590d\u5236 unique \u6307\u9488 unique_ptr < int > up2 = std :: move ( up1 ); // \u53ef\u4ee5\u79fb\u52a8 unique \u6307\u9488 int * p = up2 . release (); // \u653e\u5f03\u6307\u9488\u63a7\u5236\u6743\uff0c\u8fd4\u56de\u88f8\u6307\u9488 delete p ; return 0 ; } \u603b\u7ed3 \u00b6 \u667a\u80fd\u6307\u9488\u53ef\u4ee5\u5e2e\u52a9\u7ba1\u7406\u5185\u5b58\uff0c\u907f\u514d\u5185\u5b58\u6cc4\u9732\u3002\u5728\u624b\u52a8\u7ef4\u62a4\u6307\u9488\u4e0d\u53ef\u884c\u3001\u590d\u5236\u5bf9\u8c61\u5f00\u9500\u592a\u5927\u65f6\uff0c\u667a\u80fd\u6307\u9488\u662f\u552f\u4e00\u9009\u62e9\u3002 \u7f3a\u70b9\uff1a \u5f15\u7528\u8ba1\u6570\u4f1a\u5f71\u54cd\u6027\u80fd \u667a\u80fd\u6307\u9488\u4e0d\u603b\u662f\u667a\u80fd\uff0c\u9700\u8981\u4e86\u89e3\u5185\u90e8\u539f\u7406 \u9700\u8981\u5c0f\u5fc3\u73af\u72b6\u7ed3\u6784\u548c\u6570\u7ec4\u6307\u9488","title":"\u51fd\u6570\u5bf9\u8c61\u548c\u667a\u80fd\u6307\u9488"},{"location":"languages/c-oop/function-object-and-smart-pointers/#_1","text":"","title":"\u51fd\u6570\u5bf9\u8c61\u548c\u667a\u80fd\u6307\u9488"},{"location":"languages/c-oop/function-object-and-smart-pointers/#_2","text":"","title":"\u51fd\u6570\u5bf9\u8c61"},{"location":"languages/c-oop/function-object-and-smart-pointers/#_3","text":"\u51fd\u6570\u672c\u8d28\u4e0a\u5b58\u5728\u4e8e\u4ee3\u7801\u6bb5\uff0c\u56e0\u6b64\uff0c\u6bcf\u4e2a\u51fd\u6570\u5728\u4ee3\u7801\u6bb5\u4e2d\uff0c\u4e5f\u6709\u7740\u81ea\u5df1\u7684\u5165\u53e3\u5730\u5740\u3002 \u51fd\u6570\u6307\u9488\u662f\u4e00\u4e2a\u6307\u9488\u7c7b\u578b\u7684\u53d8\u91cf\u3002 \u5b83\u6307\u5411\u4ee3\u7801\u6bb5\u4e2d\u51fd\u6570\u5165\u53e3\u7684\u5730\u5740 \u3002","title":"\u4ec0\u4e48\u662f\u51fd\u6570\u6307\u9488"},{"location":"languages/c-oop/function-object-and-smart-pointers/#_4","text":"\u58f0\u660e\u683c\u5f0f\u5982\u4e0b\uff1a 1 ret ( * func )( args , ...); \u5176\u4e2d\uff0c ret \u662f\u51fd\u6570\u6307\u9488\u6307\u5411\u7684\u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b\uff0c func \u662f\u8be5\u6307\u9488\u7684\u540d\u5b57\uff0c\u800c args, ... \u662f\u8be5\u6307\u9488\u6307\u5411\u7684\u51fd\u6570\u7684\u53c2\u6570\u5217\u8868\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u4e2a\u540d\u4e3a func \u7684\u6307\u9488\u53ea\u80fd\u6307\u5411\u8fd4\u56de\u503c\u7c7b\u578b\u3001\u53c2\u6570\u7c7b\u578b\u90fd\u76f8\u540c\u7684 \u90a3\u4e9b\u51fd\u6570 \u3002 \u51fd\u6570\u6307\u9488\u7531\u4e8e\u8fd4\u56de\u503c\u3001\u53c2\u6570\u4e0d\u540c\u800c\u6709\u5f88\u591a\u79cd\u7c7b\u578b\u3002\u6bcf\u79cd\u7c7b\u578b\u53ea\u80fd\u6307\u5411\u7279\u5b9a\u7684 \u4e00\u4e9b\u51fd\u6570 \u3002 \u7531\u4e8e\u51fd\u6570\u7684\u7c7b\u578b\u6bd4\u8f83\u96be\u5199\uff0c\u5e38\u5e38\u7528 auto \u5173\u952e\u5b57 \u63a8\u65ad\u51fd\u6570\u6307\u9488\u7c7b\u578b \uff0c\u76f4\u63a5\u4ee4\u51fd\u6570\u6307\u9488\u7b49\u4e8e\u67d0\u4e00\u51fd\u6570\u540d\u3002\u6ce8\u610f\u5982\u679c\u7528 auto \uff0c\u5728\u5bf9\u51fd\u6570\u6307\u9488\u58f0\u660e\u7684\u540c\u65f6\u5fc5\u987b\u5bf9\u5176\u521d\u59cb\u5316\uff0c\u5426\u5219\u7f16\u8bd1\u5668\u65e0\u6cd5\u81ea\u52a8\u63a8\u5bfc\u6307\u9488\u7c7b\u578b\u3002\u4f8b\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 #include <iostream> int arr [ 5 ] = { 5 , 2 , 3 , 1 , 7 }; void increase ( int & x ) { x ++ ; } void decrease ( int & x ) { x -- ; } int main () { int flag ; std :: cin >> flag ; auto func = flag == 1 ? increase : decrease ; for ( int & x : arr ) { func ( x ); cout << x ; } return 0 ; }","title":"\u51fd\u6570\u6307\u9488\u7684\u58f0\u660e"},{"location":"languages/c-oop/function-object-and-smart-pointers/#_5","text":"\u7ed9\u4f60\u4e00\u4e2a\u51fd\u6570\uff0c\u600e\u4e48\u8ba9\u4e00\u4e2a\u6307\u9488\u6307\u5411\u5b83\u5462\uff1f \u4e0e\u6570\u7ec4\u7c7b\u4f3c\uff0c\u5728\u6570\u7ec4\u4e2d\uff0c \u6570\u7ec4\u540d\u5c31\u662f \u8be5\u6570\u7ec4\u7684 \u9996\u5730\u5740 \uff0c\u51fd\u6570\u4e5f\u662f\u4e00\u6837\uff0c\u51fd\u6570\u540d\u5c31\u662f \u8be5\u51fd\u6570\u7684\u5165\u53e3\u5730\u5740 \uff0c\u56e0\u6b64\uff0c\u51fd\u6570\u540d\u5c31\u662f\u8be5\u51fd\u6570\u7684\u51fd\u6570\u6307\u9488\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u51fd\u6570\u540d A \u662f\u4e2a\u6307\u9488\uff0c\u8be5\u6307\u9488\u6307\u5411\u7684\u5185\u5b58\u7a7a\u95f4\u548c\u50a8\u5b58\u8be5\u6307\u9488\u7684\u5185\u5b58\u7a7a\u95f4\u662f\u540c\u4e00\u5757\uff0c\u5c31\u662f\u50a8\u5b58\u8be5\u51fd\u6570\u7684\u5185\u5b58\u7a7a\u95f4\u7684\u5934\u90e8\u4f4d\u7f6e\u3002\u4f46\u662f\u5982\u679c\u7528\u522b\u7684\u6307\u9488 B \u6307\u5411\u4e86\u51fd\u6570\uff0c\u90a3\u4e48\u50a8\u5b58 B \u7684\u5185\u5b58\u7a7a\u95f4\u548c B \u6307\u5411\u7684\u5143\u7d20\u7684\u5185\u5b58\u7a7a\u95f4\u4e0d\u662f\u540c\u4e00\u5757\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 #include <iostream> using namespace std ; void func () { } int main () { int arrow [ 10 ]; auto p = func ; cout << arrow << endl ; cout << & arrow << endl ; cout << func << endl ; cout << & func << endl ; cout << p << endl ; cout << & p << endl ; } /* output: 0x7fff7a33d6b0 0x7fff7a33d6b0 1 1 1 0x7fff7a33d6a8 */","title":"\u51fd\u6570\u6307\u9488\u7684\u521d\u59cb\u5316"},{"location":"languages/c-oop/function-object-and-smart-pointers/#_6","text":"\u51fd\u6570\u6307\u9488\u4e3b\u8981\u6709\u4e24\u4e2a\u7528\u9014\uff1a\u505a\u51fd\u6570\u7684\u53c2\u6570\u3001\u8c03\u7528\u51fd\u6570\u3002","title":"\u51fd\u6570\u6307\u9488\u7684\u7528\u9014"},{"location":"languages/c-oop/function-object-and-smart-pointers/#_7","text":"\u7528\u51fd\u6570\u6307\u9488\u8c03\u7528\u51fd\u6570\u6709\u4e24\u79cd\u65b9\u6cd5\uff0c\u90fd\u4e0d\u8981\u5fd8\u8bb0\u53c2\u6570\u5217\u8868\u7684\u5706\u62ec\u53f7 () \u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 #include <iostream> #include <string> using namespace std ; string func () { return \"I love my darling, mua!\" ; } void fun () { cout << \"love you too!\" << endl ; } int main () { string zcy = ( * func )(); // \u8fd9\u79cd\u5199\u6cd5\u66f4\u80fd\u4f53\u73b0\u6307\u9488 cout << zcy << endl ; auto x = fun ; x (); }","title":"\u51fd\u6570\u6307\u9488\u8c03\u7528\u51fd\u6570"},{"location":"languages/c-oop/function-object-and-smart-pointers/#_8","text":"\u56de\u5fc6\u6765\u81ea <algorithm> \u7684 sort \u51fd\u6570\u3002\u5b83\u6709\u4e24\u79cd\u8c03\u7528\u65b9\u6cd5\uff1a 1 2 sort ( arr , arr + 5 ); sort ( arr , arr + 5 , comp ); // \u7528\u81ea\u5b9a\u4e49\u7684 comp \u51fd\u6570\u6765 sort \u7b2c\u4e8c\u79cd\u5b9a\u4e49\u65b9\u5f0f\u91cc\uff0c\u6211\u4eec\u628a comp \u8fd9\u4e2a\u51fd\u6570\u540d\uff08 \u51fd\u6570\u540d\u4e5f\u5c31\u662f\u51fd\u6570\u6307\u9488 \uff09\u4f5c\u4e3a\u53c2\u6570\u4f20\u4e86\u8fdb\u53bb\u3002\u6211\u4eec\u77e5\u9053\u51fd\u6570\u540d\u5b9e\u9645\u4e0a\u50a8\u5b58\u7740\u51fd\u6570\u5730\u5740\u3002\u6240\u4ee5\u8fd9\u5b9e\u9645\u4e0a\u5c31\u662f\u4f20\u8fdb\u4e86\u51fd\u6570\u6307\u9488\u505a\u53c2\u6570\u3002 \u7528\u81ea\u5b9a\u4e49\u7684 comp \u51fd\u6570\u5b9e\u73b0\u9006\u5e8f sort \uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 #include <algorithm> #include <iostream> using namespace std ; bool comp ( int a , int b ) { return a > b ; } int main () { int arr [ 5 ] = { 5 , 2 , 3 , 1 , 7 }; std :: sort ( arr , arr + 5 , comp ); for ( int x : arr ) { cout << x << \" \" ; } return 0 ; } /* output: 7 5 3 2 1 */ \u5bf9 sort \u51fd\u6570\u6765\u8bf4\uff0c\u5b83\u7684\u7b2c\u4e09\u4e2a\u53c2\u6570\u662f\u51fd\u6570\u6307\u9488\uff0c\u56e0\u4e3a\u6211\u4eec\u4f20\u5165\u7684\u662f comp() \u51fd\u6570\u7684\u5934\u6307\u9488\uff0c\u5373 comp \uff0c\u800c\u4e0d\u662f comp() \u3002 \u8fd9\u4e2a\u51fd\u6570\u6307\u9488\u7684\u7c7b\u578b\u662f\uff1a 1 bool ( * )( T , T ); \u8fd9\u662f\u4e00\u79cd\u53eb Compare \u7c7b\u578b\u7684\u7279\u6b8a\u51fd\u6570\u6307\u9488\u7c7b\u578b\u3002","title":"\u51fd\u6570\u6307\u9488\u505a\u51fd\u6570\u53c2\u6570"},{"location":"languages/c-oop/function-object-and-smart-pointers/#_9","text":"\u9664\u4e86\u81ea\u5b9a\u4e49\u7684 comp \uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u7528 STL \u63d0\u4f9b\u7684\u9884\u5b9a\u4e49\u7684\u6bd4\u8f83\u51fd\u6570\uff08\u9700\u8981 #include <functional> \uff09\u3002 1 2 sort ( arr , arr + 5 , less < int > ()); // \u4ece\u5c0f\u5230\u5927 sort ( arr , arr + 5 , greater < int > ()); // \u4ece\u5927\u5230\u5c0f \u6ce8\u610f\u5230\u51fd\u6570\u5bf9\u8c61\u672c\u8d28\u4e0a\u662f\u91cd\u8f7d\u4e86 () \uff0c\u4f46\u662f greater<int>() \u8868\u793a\u7684\u662f\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u8fd9\u91cc\u4f20\u5165\u7684\u53c2\u6570\u662f\u4e00\u4e2a\u5bf9\u8c61\u3002 greater<int>()() \u7684\u7b2c\u4e00\u4e2a\u62ec\u53f7\u662f\u8c03\u7528\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u7b2c\u4e8c\u4e2a\u62ec\u53f7\u662f\u91cd\u8f7d () \u3002 less<int>() \u3001 greater<int>() \u548c comp \u4e00\u6837\uff0c\u5b83\u4eec\u6709 Compare \u7c7b\u578b\u51fd\u6570\u6307\u9488\u7684\u529f\u80fd\uff0c\u4f46\u5b83\u5176\u5b9e\u662f \u4e00\u4e2a\u51fd\u6570\u5bf9\u8c61 \uff01 \u4ee5 greater<int>() \u4e3a\u4f8b\uff0c\u5176\u5185\u90e8\u5b9e\u73b0\u673a\u5236\u5982\u4e0b\u3002 \u6ce8\u610f\u5230\uff0c greater \u7684\u5b9e\u73b0\u5df2\u7ecf\u5185\u7f6e\u5728\u4e86 <functional> \u4e2d\uff0c\u5373\u4ee5\u4e0b\u4ee3\u7801\u5728\u5b9e\u9645\u5e94\u7528\u65f6\u4e0d\u5fc5\u5199\u51fa\u3002\u6b64\u5904\u4e3a\u4e86\u907f\u514d\u5173\u952e\u5b57\u51b2\u7a81\uff0c\u5c06 greater \u5199\u4e3a Greater \u3002\u8fd9\u5c31\u597d\u6bd4 std \u91cc\u7684 swap \u548c\u81ea\u5df1\u624b\u5199\u7684 swap \u4e00\u6837\u3002 1 2 3 4 5 6 7 8 9 10 #include <iostream> using namespace std ; template < class T > class Greater { public : Greater () { }; bool operator ()( const T & a , const T & b ) const { return a > b ; } }; \u901a\u8fc7\u5728 public \u4e2d\u5b8c\u6210\u5bf9 operator() \u7684\u91cd\u8f7d\uff0c\u5f53\u8be5\u6a21\u7248\u88ab\u5b9e\u4f8b\u5316\u4e3a\u4e00\u4e2a\u5bf9\u8c61\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7 () \u8c03\u7528\u8be5\u5bf9\u8c61\uff0c\u770b\u8d77\u6765\u5c31\u50cf\u4e00\u4e2a\u51fd\u6570\u3002\u8fd9\u6837\u7684 \u91cd\u8f7d\u4e86 () \u7684\u5bf9\u8c61\u79f0\u4e3a\u201c\u51fd\u6570\u5bf9\u8c61\u201d\u3002 \u8c03\u7528\u51fd\u6570\u5bf9\u8c61\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 #include <iostream> using namespace std ; template < class T > class Greater { public : Greater () { }; bool operator ()( const T & a , const T & b ) const { return a > b ; } }; int main () { auto func = Greater < int > (); cout << func ( 2 , 1 ) << endl ; // true cout << func ( 1 , 1 ) << endl ; // false cout << func ( 1 , 2 ) << endl ; // false return 0 ; } \u6ce8\u610f\uff0c\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u5f88 \u4f18\u96c5 \u5730\u5199 func(1,2) \u662f\u56e0\u4e3a\u4e4b\u524d\u5df2\u7ecf\u628a\u540d\u53eb Greater \u7684\u7c7b\u6a21\u7248\u5b9e\u4f8b\u5316\u4e3a\u4e86\u4e00\u4e2a\u5bf9\u8c61\u3002\u5b9e\u9645\u4e0a\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u5b9e\u4f8b\u5316\u800c\u76f4\u63a5\u8c03\u7528\u3002\u4f46\u8fd9\u65f6\u4e00\u5b9a\u4e0d\u8981\u5fd8\u8bb0 () \uff0c\u7b2c\u4e00\u4e2a () \u4ee3\u8868\u6784\u9020\u51fd\u6570\uff0c\u7b2c\u4e8c\u4e2a () \u624d\u4ee3\u8868\u5bf9\u62ec\u53f7\u7684\u91cd\u8f7d\u3002 1 2 3 4 5 6 7 8 #include <algorithm> #include <iostream> #include <functional> using namespace std ; int main () { cout << greater < int > ()( 1 , 2 ); return 0 ; } \u4ee5 greater<int>() \u4e3a\u53c2\u6570\u8c03\u7528 sort \uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #include <functional> #include <iostream> #include <algorithm> using namespace std ; int main () { auto func = greater < int > (); int arr [ 5 ] = { 1 , 4 , 2 , 8 , 3 }; sort ( arr , arr + 5 , greater < int > ()); for ( int i : arr ) { cout << i << ' ' ; } return 0 ; } /* output: 8 4 3 2 1 */ \u6240\u4ee5\uff0c std::sort \u65e2\u53ef\u4ee5\u63a5\u53d7\u51fd\u6570\u6307\u9488\uff0c\u53c8\u53ef\u63a5\u53d7\u51fd\u6570\u5bf9\u8c61 \u4f5c\u4e3a\u7b2c\u4e09\u4e2a\u53c2\u6570\u3002\u5b9e\u9645\u4e0a\uff0c sort \u662f\u4e00\u4e2a\u51fd\u6570\u6a21\u677f\uff0c\u5176\u6a21\u7248\u53c2\u6570\u662f\u5f85 sort \u7684\u6570\u7ec4\u7684\u7c7b\u578b\u548c\u4e00\u4e2a Compare \u7c7b\u578b\u7684\u51fd\u6570\u6307\u9488\u3002\u8c03\u7528 sort \u7684\u683c\u5f0f\u5982\u4e0b\uff1a 1 sort ( Iterator first , Iterator last , Compare comp ); \u8c03\u7528\u65f6\uff0c\u7cfb\u7edf\u4f1a\u81ea\u884c\u63a8\u5bfc\u51fd\u6570\u6a21\u7248\u53c2\u6570\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u5fc5\u624b\u5de5\u6307\u5b9a\u3002 \u6700\u540e\uff0c\u5173\u4e8e sort \u51fd\u6570\u7684\u4e00\u4e2a\u7ec6\u8282\uff1a sort \u51fd\u6570\u4e0d\u4ec5\u53ef\u4ee5\u7528\u6765 sort \u6570\u7ec4\uff0c\u8fd8\u53ef\u4ee5 sort \u4efb\u4f55 \u6709\u5e8f\u7684 \u5bb9\u5668\u3002\u6bd4\u5982 vector \u3002\u65e0\u8bba\u662f\u6570\u7ec4\u3001 list \u8fd8\u662f vector \uff0c sort \u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u90fd\u5e94\u8be5\u6307\u5411\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u800c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u5219\u6307\u5411 \u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4e4b\u540e \u7684\u90a3\u4e2a\u4f4d\u7f6e\uff0c \u800c\u4e0d\u662f\u6700\u540e\u4e00\u4e2a\u5143\u7d20 \u3002 \u5f53\u7136\uff0c vec \u91cc\u9762\u7684\u6570\u636e\u5f97\u5148\u80fd compare\u3002 1 2 3 4 int arr [ 5 ] = { 1 , 3 , 2 , 6 , 4 }; vector < int > vec = { 1 , 3 , 2 , 6 , 4 }; sort ( arr , arr + 5 ); sort ( vec . begin (), vec . end ()); \u66f4\u5177\u4f53\u7684\u4f8b\u5b50\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 #include <functional> #include <vector> #include <iostream> #include <algorithm> using namespace std ; int main () { auto func = greater < int > (); vector < int > vec = { 1 , 3 , 2 , 6 , 4 }; sort ( vec . begin (), vec . end ()); for ( int i : vec ) { cout << i << ' ' ; } cout << endl ; sort ( vec . begin (), vec . end (), func ); for ( int i : vec ) { cout << i << ' ' ; } return 0 ; } /* output: 1 2 3 4 6 6 4 3 2 1 */","title":"\u51fd\u6570\u5bf9\u8c61"},{"location":"languages/c-oop/function-object-and-smart-pointers/#stdfunction","text":"\u7531\u5bf9 sort \u7684\u8ba8\u8bba\uff0c\u6211\u4eec\u53d1\u73b0\u51fd\u6570\u6307\u9488\u548c\u51fd\u6570\u5bf9\u8c61\u6709\u9ad8\u5ea6\u7684\u4e00\u81f4\u6027\u3002\u4f46\u53e6\u4e00\u65b9\u9762\uff0c\u5b83\u4eec\u7684\u5f62\u5f0f\u53c8\u4e0d\u7edf\u4e00\u3002 \u5728\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u4ece\u5c4f\u5e55\u3001\u6587\u4ef6\u8bfb\u53d6\u8fd9\u4e24\u4e2a\u51fd\u6570\u4e0d\u80fd\u88ab\u540c\u4e00\u4e2a\u6570\u7ec4\u7edf\u4e00\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #include <iostream> #include <fstream> #include <functional> #include <cstring> using namespace std ; string readFromScreen () { string input ; getline ( cin , input ); return input ; } class ReadFromFile { public : string operator ()() { string input ; getline ( ifstream ( \"input.txt\" ), input ); return input ; } }; int main () { auto readArr [] = { readFromScreen , ReadFromFile ()}; // \u63a8\u5bfc\u5931\u8d25 return 0 ; } \u89e3\u51b3\u65b9\u6cd5\uff1a std::function \u7c7b\uff0c\u6765\u81ea <functional> \u5934\u6587\u4ef6\u3002","title":"std::function \u7c7b"},{"location":"languages/c-oop/function-object-and-smart-pointers/#function","text":"function \u7c7b\u662f\u4e00\u79cd\u7279\u6b8a\u7684 \u7c7b\u6a21\u677f \uff0c\u6a21\u677f\u53c2\u6570\u662f\u51fd\u6570\u8fd4\u56de\u503c\u7c7b\u578b\u548c\u53c2\u6570\u7c7b\u578b\u3002\u4f46\u662f\u7279\u6b8a\u7684\u662f\uff0c function \u53ea\u6709\u6210\u5458\u51fd\u6570\uff0c\u65e0\u6570\u636e\u6210\u5458\u3002","title":"function \u7c7b\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u7c7b\u6a21\u7248"},{"location":"languages/c-oop/function-object-and-smart-pointers/#function_1","text":"function \u7c7b\u4e3a\u51fd\u6570\u6307\u9488\u4e0e\u5bf9\u8c61\u63d0\u4f9b\u4e86\u7edf\u4e00\u7684\u63a5\u53e3\u3002\u5b9e\u9645\u4e0a\uff0c function \u7684\u5b9e\u4f8b\u53ef\u4ee5\u5b58\u50a8\u3001\u590d\u5236\u548c\u8c03\u7528\u7684\u4e0d\u4ec5\u4ec5\u662f\u51fd\u6570\u6307\u9488\u4e0e\u5bf9\u8c61\uff0c\u8fd8\u5305\u62ec lambda \u8868\u8fbe\u5f0f\uff0c\u7ed1\u5b9a\u8868\u8fbe\u5f0f\u548c\u6307\u5411\u6210\u5458\u51fd\u6570\u548c\u6307\u5411\u6570\u636e\u6210\u5458\u7684\u6307\u9488\u3002\u4e0d\u7ba1\u91c7\u7528\u54ea\u79cd\u65b9\u5f0f\uff0c\u53ea\u8981\u8c03\u7528\u5f62\u5f0f\u4e00\u6837\uff08\u8fd4\u56de\u503c\u7c7b\u578b\u3001\u5b9e\u53c2\u7c7b\u578b\uff09\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528 function \u7c7b\u578b\u6765\u7edf\u4e00\u3002 function \u7c7b\u7684\u5b9e\u4f8b\u5316\u683c\u5f0f\u5982\u4e0b\uff1a 1 function < ret ( args ...) > Func ; \u5176\u4e2d ret \u662f\u51fd\u6570\u8fd4\u56de\u503c\u7c7b\u578b\uff0c () \u4e2d\u662f\u53c2\u6570\u7c7b\u578b\u5217\u8868\uff0c Func \u662f\u8be5 function \u7c7b\u5bf9\u8c61\u7684\u540d\u5b57\u3002","title":"function \u7c7b\u7684\u5b9e\u4f8b\u5316"},{"location":"languages/c-oop/function-object-and-smart-pointers/#function_2","text":"\u4e0a\u9762\u7684\u4e24\u4e2a\u8bfb\u53d6\u51fd\u6570\u53ef\u4ee5\u7edf\u4e00\u5728 function \u7c7b\u4e2d\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 #include <iostream> #include <fstream> #include <functional> #include <cstring> using namespace std ; string readFromScreen () { string input ; getline ( cin , input ); return input ; } class ReadFromFile { public : string operator ()() { string input ; getline ( ifstream ( \"input.txt\" ), input ); return input ; } }; int main () { function < string () > readArr [] = { readFromScreen , ReadFromFile ()}; function < string () > readFunc ; readFunc = readFromScreen ; readFunc = ReadFromFile (); string ( * readFunc2 )(); readFunc2 = readFromScreen ; // readFunc2 = ReadFromFile(); // \u4e0d\u80fd\u88ab\u51fd\u6570\u5bf9\u8c61\u8d4b\u503c return 0 ; }","title":"function \u7c7b\u7684\u5e94\u7528"},{"location":"languages/c-oop/function-object-and-smart-pointers/#function_3","text":"\u6b63\u5982 sort \u51fd\u6570\u6240\u5b9e\u73b0\u7684\u90a3\u6837\uff0c\u901a\u8fc7\u5c06 function \u7c7b\u578b\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\uff0c\u53ef\u4ee5\u7edf\u4e00\u51fd\u6570\u5bf9\u8c61\u548c\u51fd\u6570\u6307\u9488\u3002\u4ee5 function \u7c7b\u578b\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u7684\u51fd\u6570\u53ef\u4ee5\u4ec5\u4ec5\u6539\u53d8\u53c2\u6570\uff0c\u83b7\u5f97\u4e0d\u540c\u7684\u529f\u80fd\u3002 \u4f8b\u5b50 \u4f8b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 #include <iostream> #include <fstream> #include <functional> using namespace std ; // \u7701\u7565 readFromScreen\u3001ReadFromFile\u3001calculateAdd\u3001writeToScreen void process ( function < string () > read , function < string ( string ) > calculate , function < void ( string ) > write ) { string data = read (); string output = calculate ( data ); write ( output ); } int main () { process ( readFromScreen , calculateAdd , writeToScreen ); process ( ReadFromFile (), calculateAdd , writeToScreen ); // \u591a\u6001 return 0 ; } \u53e6\u4e00\u4e2a\u4f8b\u5b50: \u5f53 process \u7684\u53c2\u6570\u7c7b\u578b\u662f function<string()> \u65f6\uff0c\u53ef\u4ee5\u540c\u65f6\u63a5\u53d7 func1 \u3001 func2 \u3001 func3 \u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u3002 \u5982\u679c process \u7684\u53c2\u6570\u7c7b\u578b\u662f string (*func)() \uff0c\u5c31\u65e0\u6cd5\u63a5\u53d7 func2 \u3001 func3 \u3002 \u5982\u679c process \u7684\u53c2\u6570\u7c7b\u578b\u662f Func2 \u7c7b\u5bf9\u8c61\uff0c\u5c31\u65e0\u6cd5\u63a5\u53d7 func1 \u3001 func3 \u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #include <string> #include <iostream> #include <functional> using namespace std ; string func1 (); class Func2 { public : string operator ()(); }; Func2 func2 ; function < string () > func3 ; void process ( function < string () > func ) { string str = func (); cout << str ; } int main () { process ( func1 ); process ( func2 ); process ( func3 ); return 0 ; } STL \u4e2d\u5927\u91cf\u51fd\u6570\u7528\u5230\u4e86\u51fd\u6570\u5bf9\u8c61\u3002\u4ee5\u4e0b\u8fd9\u4e9b\u51fd\u6570\u90fd\u8c03\u7528\u4e86\u51fd\u6570\u6307\u9488\u6216\u8005\u51fd\u6570\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570\u3002 for_each \u3002\u5bf9\u5e8f\u5217\u8fdb\u884c\u6307\u5b9a\u64cd\u4f5c find_if \u3002\u627e\u5230\u6ee1\u8db3\u6761\u4ef6\u7684\u5bf9\u8c61 count_if \u3002\u5bf9\u6ee1\u8db3\u6761\u4ef6\u7684\u5bf9\u8c61\u8ba1\u6570 binary_search \u3002\u4e8c\u5206\u67e5\u627e\u6ee1\u8db3\u6761\u4ef6\u7684\u5bf9\u8c61 \u5e76\u4e14\u4e5f\u6709\u8bb8\u591a\u9884\u7f6e\u7684\u51fd\u6570\u5bf9\u8c61\uff1a less \u3002\u6bd4\u8f83 a < b equal_to \u3002\u6bd4\u8f83 a == b greater \u3002\u6bd4\u8f83 a > b plus \u3002\u8fd4\u56de a + b \u719f\u7ec3\u4f7f\u7528\u51fd\u6570\u5bf9\u8c61 \u6709\u52a9\u4e8e\u5b9e\u73b0\u590d\u6742\u7684\u529f\u80fd\u3002\u4ee5 for_each \u4e3a\u4f8b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 #include <iostream> #include <algorithm> #include <vector> void myfunction ( int & i ) { i ++ ; std :: cout << i << ' ' ; } struct myclass { void operator ()( int & i ) { i += 2 ; std :: cout << i << ' ' ; } } myobject ; int main () { std :: vector < int > myvector ; myvector . push_back ( 10 ); myvector . push_back ( 20 ); myvector . push_back ( 30 ); std :: cout << \"after myfunction, now myvector contains: \" ; for_each ( myvector . begin (), myvector . end (), myfunction ); // \u4f20\u8fdb\u51fd\u6570\u6307\u9488\u4f5c\u4e3a\u53c2\u6570 std :: cout << std :: endl ; std :: cout << \"after myobject, now myvector contains: \" ; for_each ( myvector . begin (), myvector . end (), myobject ); // \u4f20\u8fdb\u51fd\u6570\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570 // \u5b8c\u5168\u7b49\u4ef7\u4e8e for_each(myvector.begin(), myvector.end(), myclass()) return 0 ; } /* output: after myfunction, now myvector contains: 11 21 31 after myobject, now myvector contains: 13 23 33 */ \u4e24\u6b21\u8c03\u7528\u4e86 for_each \u51fd\u6570\uff0c\u5206\u522b\u5bf9 vector \u91cc\u9762\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u6267\u884c\u4e86 myfunction \u548c myobject \u3002\u56e0\u4e3a\u8fd9\u4e24\u4e2a\u51fd\u6570\u7684 \u51fd\u6570\u53c2\u6570\u90fd\u662f\u5f15\u7528 \uff0c\u4e3b\u51fd\u6570\u4e2d\u7684\u53d8\u91cf\u4e5f\u4f1a\u88ab\u4fee\u6539\u3002 \u53e6\u4e00\u4e2a count_if \u7684\u4f8b\u5b50\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 #include <iostream> #include <algorithm> #include <vector> bool IsOdd ( int i ) { return (( i % 2 ) == 1 ); } int main () { std :: vector < int > myvector ; for ( int i = 1 ; i < 10 ; i ++ ) myvector . push_back ( i ); // myvector: 1 2 3 4 5 6 7 8 9 int mycount = count_if ( myvector . begin (), myvector . end (), IsOdd ); std :: cout << \"myvector contains \" << mycount << \" odd values. \\n \" ; return 0 ; } /* output: myvector contains 5 odd values. */ count_if \u51fd\u6570\u9700\u8981\u4f20\u8fdb\u4e00\u4e2a\u8fd4\u56de\u503c\u4e3a bool \u7c7b\u578b\u7684\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u3002","title":"\u7528 function \u5b9e\u73b0\u591a\u6001"},{"location":"languages/c-oop/function-object-and-smart-pointers/#_10","text":"\u4f7f\u7528\u865a\u51fd\u6570\u5b9e\u73b0 \u5bf9\u57fa\u7c7b\u7684\u6307\u9488\u6216\u8005\u5f15\u7528\uff0c\u5728\u8fd0\u884c\u65f6\u901a\u8fc7\u865a\u51fd\u6570\u8868\u786e\u8ba4\u8be5 \u6307\u9488\u6216\u5f15\u7528 \u7684\u5b9e\u9645\u7c7b\u578b\uff0c\u5e76\u8c03\u7528\u5b9e\u9645\u7c7b\u578b\u7684\u91cd\u5199\u8986\u76d6\u540e\u7684\u51fd\u6570\uff0c\u4ee5\u5b9e\u73b0\u591a\u6001\u3002\u662f\u665a\u7ed1\u5b9a\uff08\u8fd0\u884c\u65f6\u7ed1\u5b9a\uff09\u3002 \u4f7f\u7528\u6a21\u677f\u5b9e\u73b0 \u4e0a\u6587\u4e2d\u7684 greater<int>() \u5c31\u662f\u6a21\u7248\u5b9e\u73b0\u591a\u6001\u7684\u4f8b\u5b50\u3002\u901a\u8fc7\u4f20\u5165\u4e0d\u540c\u7684\u6a21\u7248\u53c2\u6570\uff0c\u81ea\u52a8\u5b9e\u73b0\u91cd\u8f7d\uff0c\u53ef\u4ee5\u5b9e\u73b0\u51fd\u6570\u5bf9\u8c61\u548c\u51fd\u6570\u6307\u9488\u7684\u591a\u6001\u3002\u662f\u65e9\u7ed1\u5b9a\uff08\u7f16\u8bd1\u671f\u7ed1\u5b9a\uff09\u3002 \u4f7f\u7528 std::function \u5b9e\u73b0 \u4e5f\u53ef\u4ee5\u652f\u6301\u51fd\u6570\u6307\u9488\u548c\u51fd\u6570\u5bf9\u8c61\uff08\u901a\u8fc7 function \u7684\u591a\u6001\uff09\u3002\u662f\u665a\u7ed1\u5b9a\uff08\u8fd0\u884c\u65f6\u7ed1\u5b9a\uff09\u3002","title":"\u4e0e\u5176\u4ed6\u591a\u6001\u5b9e\u73b0\u65b9\u5f0f\u7684\u5bf9\u6bd4"},{"location":"languages/c-oop/function-object-and-smart-pointers/#_11","text":"\u5c06\u51fd\u6570\u4e5f\u5bf9\u8c61\u5316\u3002\u51fd\u6570\u53ef\u4ee5\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\uff0c\u51fd\u6570\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u53d8\u91cf\u50a8\u5b58\uff0c\u5e76\u4e14\u53ea\u8981\u51fd\u6570\u7684\u53c2\u6570\u548c\u8fd4\u56de\u503c\u76f8\u540c\uff0c\u5c31\u53ef\u4ee5\u88ab\u89c6\u4e3a\u540c\u4e00\u79cd\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u4e0d\u518d\u9700\u8981\u6a21\u677f\u6765\u8c03\u7528\u4e0d\u540c\u7684\u51fd\u6570\u3002","title":"\u610f\u4e49"},{"location":"languages/c-oop/function-object-and-smart-pointers/#_12","text":"\u5f53\u4e24\u4e2a\u6307\u9488 A \u3001 B \u540c\u65f6\u6307\u5411\u4e00\u4e2a\u53d8\u91cf C \u7684\u65f6\u5019\uff0c\u6211\u4eec\u5e0c\u671b\u53ea\u6709 A \u3001 B \u5747\u88ab\u6790\u6784\u7684\u65f6\u5019\uff0c C \u624d\u88ab\u6790\u6784\u3002 \u5982\u4f55\u505a\u5230\uff1f\u5f15\u5165\u667a\u80fd\u6307\u9488\uff08\u5305\u542b\u5728\u5934\u6587\u4ef6 <memory> \u4e2d\uff09\u3002","title":"\u667a\u80fd\u6307\u9488"},{"location":"languages/c-oop/function-object-and-smart-pointers/#_13","text":"\u667a\u80fd\u6307\u9488\u7684\u521b\u5efa\uff1a 1 2 3 4 5 shared_ptr < int > p1 ( new int ( 1 )); // \u6307\u5411\u5185\u5bb9\u4e3a 1 \u7684\u4e00\u5757\u5185\u5b58 shared_ptr < int > p2 ; // \u7a7a\u6307\u9488\uff08\u4e0d\u521d\u59cb\u5316\uff09 auto p3 = make_shared < int > ( 3 ); // make_shared<T>(args) \u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u8fd4\u56de\u503c\u662f\u4e00\u4e2a share_ptr int a ; shared_ptr < int > p4 ( a ); // \u7528\u5df2\u6709\u5bf9\u8c61\u521b\u5efa\u667a\u80fd\u6307\u9488\uff0cp4 \u6307\u5411 a \u8ba9\u4e24\u4e2a\u6307\u9488\u6307\u5411\u540c\u4e00\u4e2a\u4f4d\u7f6e\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 #include <iostream> #include <memory> using namespace std ; class Myclass { public : int myint ; Myclass ( int i ) : myint ( i ) { }; }; int main () { shared_ptr < Myclass > p2 = make_shared < Myclass > ( 2 ); shared_ptr < Myclass > p3 = p2 ; // p2 \u548c p3 \u6307\u5411\u540c\u4e00\u5757\u5185\u5b58 // p2\u3001p3 \u90fd\u662f\u667a\u80fd\u6307\u9488\uff0c\u6307\u5411\u540c\u4e00\u5757\u5185\u5b58\u3002 // auto p3(p2) \u548c\u4e0a\u9762\u7684\u53e5\u5b50\u7b49\u4ef7 shared_ptr < Myclass > p4 ; p4 = p3 ; // \u5bf9\u5df2\u6709\u7684\u667a\u80fd\u6307\u9488\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u8fdb\u884c\u8d4b\u503c // \u5982\u679c p4 \u539f\u672c\u6307\u5411\u67d0\u4e2a\u5185\u5b58\u7a7a\u95f4\uff0c\u8be5\u5185\u5b58\u7a7a\u95f4\u7684\u6240\u6709\u667a\u80fd\u6307\u9488\u7684\u5f15\u7528\u8ba1\u6570\u51cf\u4e00 // \u7136\u540e p3 \u6307\u5411\u7a7a\u95f4\u7684\u6240\u6709\u667a\u80fd\u6307\u9488\u5f15\u7528\u8ba1\u6570\u52a0\u4e00 // \u6b64\u5904 p4 \u6784\u9020\u4e4b\u540e\u662f\u4e2a\u7a7a\u6307\u9488\uff0c\u6240\u4ee5\u53ea\u4f1a\u7ed9 p3 \u7684\u5185\u5b58\u7a7a\u95f4\u5f15\u7528\u8ba1\u6570\u52a0\u4e00 cout << p2 << endl ; cout << p3 << endl ; cout << p4 << endl ; } /* output: 0x14b0e80 0x14b0e80 0x14b0e80 */","title":"\u6784\u9020\u667a\u80fd\u6307\u9488"},{"location":"languages/c-oop/function-object-and-smart-pointers/#use_count","text":"\u7528 obj.use_count() \u51fd\u6570\uff0c\u53ef\u4ee5\u5f97\u5230\u667a\u80fd\u6307\u9488 obj \u6b64\u523b\u6307\u5411\u7684\u7269\u4f53\uff08\u5305\u62ec obj \u81ea\u5df1\u5728\u5185\uff09\u5171\u6709\u51e0\u4e2a\u667a\u80fd\u6307\u9488\u6307\u5411\u5b83\u3002 \u4ee3\u7801\u793a\u4f8b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 #include <memory> #include <iostream> using namespace std ; int main () { shared_ptr < int > p1 ( new int ( 4 )); cout << p1 . use_count () << ' ' ; // 1 { shared_ptr < int > p2 = p1 ; cout << p1 . use_count () << ' ' ; // 2 cout << p2 . use_count () << ' ' ; // 2 } // p2 \u51fa\u4f5c\u7528\u57df cout << p1 . use_count () << ' ' ; // 1 } \u5982\u679c\u51fd\u6570\u53c2\u6570\u662f\u667a\u80fd\u6307\u9488\u7c7b\u578b\uff0c\u5219\u5728\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u7531\u4e8e\u8c03\u7528\u4e86\u62f7\u8d1d\u6784\u9020\u6784\u9020\u667a\u80fd\u6307\u9488\u4f5c\u4e3a\u53c2\u6570\uff0c\u65b0\u6784\u9020\u51fa\u7684\u667a\u80fd\u6307\u9488\u6307\u5411\u540c\u4e00\u5bf9\u8c61\uff0c\u4f1a\u53d1\u751f count \u589e\u52a0\u3002\u5982\u679c\u60f3\u8981\u907f\u514d\uff0c\u53ef\u4ee5\u5c06\u51fd\u6570\u53c2\u6570\u7c7b\u578b\u6539\u4e3a\u667a\u80fd\u6307\u9488\u7684\u5f15\u7528\u3002 \u4e0d\u7528\u8003\u8651\u7684\u592a\u590d\u6742\uff0c \u5f15\u7528\u4f20\u53c2\u672c\u6765\u5c31\u4e0d\u53d1\u751f\u6784\u9020\u548c\u6790\u6784 \u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 #include <memory> #include <iostream> using namespace std ; void f1 ( shared_ptr < int > p1 ) { // \u62f7\u8d1d\u6784\u9020\u4e86\u667a\u80fd\u6307\u9488\u4f5c\u4e3a\u53c2\u6570 cout << p1 . use_count (); // \u6b64\u65f6 count \u4e3a 2 } void f2 ( shared_ptr < int > & p1 ) { // \u53c2\u6570\u662f\u667a\u80fd\u6307\u9488\u5f15\u7528 cout << p1 . use_count (); // \u6b64\u65f6 count \u4ecd\u4e3a 1 } int main () { shared_ptr < int > p1 ( new int ); // \u6b64\u65f6 count \u4e3a 1 f1 ( p1 ); cout << p1 . use_count (); // \u51fa f1 \u51fd\u6570\u4f53\u65f6\uff0c\u53c2\u6570\u88ab\u6790\u6784\uff0ccount \u56de\u5f52\u5230 1 f2 ( p1 ); cout << p1 . use_count (); return 0 ; } /* output: 2111 */","title":"\u5f15\u7528\u8ba1\u6570 use_count()"},{"location":"languages/c-oop/function-object-and-smart-pointers/#_14","text":"\u667a\u80fd\u6307\u9488\u6307\u5411\u7684\u662f\u8f85\u52a9\u6307\u9488 Uptr \uff0c\u8f85\u52a9\u6307\u9488\u518d\u6307\u5411\u771f\u6b63\u6307\u5411\u6570\u636e\u5b58\u653e\u4f4d\u7f6e\u7684\u6307\u9488 p \u3002 \u8f85\u52a9\u6307\u9488 Uptr \u6709\u4e24\u4e2a\u529f\u80fd\uff1a\u4e00\u65b9\u9762\uff0c\u5b83\u6307\u5411\u771f\u6b63\u6307\u5411\u6570\u636e\u5b58\u653e\u4f4d\u7f6e\u7684\u6307\u9488 p \uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u5b83\u5177\u6709\u6210\u5458 count \uff0c\u8bb0\u5f55\u6709\u51e0\u4e2a\u667a\u80fd\u6307\u9488\u6307\u5411\u81ea\u5df1\u3002\u6bcf\u4e2a\u6307\u5411\u201c\u771f\u6b63\u7684\u201d\u6570\u636e\u7684\u6307\u9488 p \u90fd\u53ea\u88ab\u4e00\u4e2a\u8f85\u52a9\u6307\u9488\u6307\u5411\uff0c p \u548c Uptr \u4e00\u4e00\u5bf9\u5e94\u3002 \u57fa\u4e8e\u4e0a\u56fe\u539f\u7406\u7ed9\u51fa\u4ee5\u4e0b\u7ed3\u8bba\uff1a \u4e0d\u80fd\u76f4\u63a5\u7528\u667a\u80fd\u6307\u9488\u7ed9\u666e\u901a\u6307\u9488\u8d4b\u503c\uff0c\u56e0\u4e3a\u666e\u901a\u6307\u9488\u6ca1\u6709\u8f85\u52a9\u6307\u9488\u3002 \u4e00\u4e2a\u666e\u901a\u6307\u9488\u6700\u591a\u7ed9\u4e00\u4e2a\u667a\u80fd\u6307\u9488\u8d4b\u503c\uff0c\u5426\u5219\u4f1a\u51fa\u73b0\u591a\u4e2a\u8f85\u52a9\u6307\u9488\u3002 \u667a\u80fd\u6307\u9488\u4e4b\u95f4\u53ef\u4ee5\u76f8\u4e92\u8d4b\u503c\uff0c\u5171\u540c\u6307\u5411\u8f85\u52a9\u6307\u9488\u5373\u53ef\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #include <memory> #include <iostream> using namespace std ; int main () { shared_ptr < int > p1 ( new int ( 4 )); cout << p1 . use_count () << ' ' ; // 1 int * normal = p1 ; // \u6211\u4eec\u5e0c\u671b normal \u53ef\u4ee5\u548c p1 \u6307\u5411\u76f8\u540c\u7684\u5185\u5b58 return 0 ; } /* output: .code.tio.cpp:8:7: error: no viable conversion from 'shared_ptr<int>' to 'int *' int *normal=p1; ^ ~~ */ \u90a3\u5982\u679c\u60f3\u8ba9\u666e\u901a\u6307\u9488\u6307\u5411\u667a\u80fd\u6307\u9488\u771f\u6b63\u6307\u5411\u7684\u4f4d\u7f6e\u8be5\u600e\u4e48\u529e\u5462\uff1f\u5229\u7528 p.get() \u51fd\u6570\uff01 p.get() \u8fd4\u56de\u667a\u80fd\u6307\u9488 p \u771f\u6b63\u6307\u5411\u7684\u6570\u636e\u7684 \u88f8\u6307\u9488 \u3002 1 int * normal = p1 . get (); \u66f4\u5177\u4f53\u7684\u793a\u4f8b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 #include <memory> #include <iostream> using namespace std ; int main () { int * pi = new int ( 2 ); shared_ptr < int > ptr ( pi ); // \u7528\u5df2\u6709\u5bf9\u8c61\u521d\u59cb\u5316 cout << \"ptr now points to \" ; cout << ptr . get () << endl ; int * p = ptr . get (); cout << \"p now points to \" ; cout << p << endl ; cout << \"But the count of ptr is \" << ptr . use_count (); return 0 ; } /* output: ptr now points to 0x1557e70 p now points to 0x1557e70 But the count of ptr is 1 */ \u4e0a\u9762\u7684\u4f8b\u5b50\u8bf4\u660e\uff0c \u867d\u7136\u7406\u8bba\u4e0a\u53ef\u4ee5\u8fd9\u4e48\u505a\uff0c\u4f46\u56e0\u4e3a\u666e\u901a\u6307\u9488\u4e0d\u548c\u8f85\u52a9\u6307\u9488\u53d1\u751f\u5173\u7cfb\uff0c\u65e0\u6cd5\u589e\u52a0 count \u7684\u6570\u91cf\u3002\u56e0\u6b64\u4e00\u822c \u4e0d\u80fd\u6df7\u5408\u4f7f\u7528\u666e\u901a\u6307\u9488\u548c\u667a\u80fd\u6307\u9488 \u3002\u5982\u679c\u6211\u4eec\u5e0c\u671b\u6709\u4e00\u4e2a\u6307\u5411\u8be5\u7269\u4f53\u7684\u6307\u9488\uff0c\u5e76\u4e14\u4e0d\u88ab\u8bb0\u5165 count \uff0c\u8003\u8651\u5230\u5b89\u5168\u6027\uff0c\u53ef\u4ee5\u4f7f\u7528 weak_ptr \u4ee3\u66ff\u666e\u901a\u6307\u9488\u3002","title":"\u667a\u80fd\u6307\u9488\u7684\u5b9e\u73b0\u539f\u7406"},{"location":"languages/c-oop/function-object-and-smart-pointers/#_15","text":"\u53ef\u4ee5\u7528\u667a\u80fd\u6307\u9488\u521d\u59cb\u5316\u53e6\u4e00\u4e2a\u667a\u80fd\u6307\u9488\uff1a 1 2 shared_ptr < int > ptr2 ( new int ( 3 )); shared_ptr < int > ptr3 ( ptr2 ); \u4f46\u662f\u4e0d\u80fd\u4f7f\u7528\u540c\u4e00\u88f8\u6307\u9488\u521d\u59cb\u5316\u591a\u4e2a\u667a\u80fd\u6307\u9488\uff08\u8fd9\u6837\u4f1a\u51fa\u73b0\u591a\u4e2a\u8f85\u52a9\u6307\u9488\uff09\u3002 \u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\u662f\u9519\u7684\u3002 1 2 3 int * p = new int (); shared_ptr < int > p1 ( p ); shared_ptr < int > p2 ( p );","title":"\u667a\u80fd\u6307\u9488\u7684\u521d\u59cb\u5316"},{"location":"languages/c-oop/function-object-and-smart-pointers/#_16","text":"\u667a\u80fd\u6307\u9488\u6790\u6784\u7684\u65f6\u5019\uff0c\u5176\u5185\u90e8\u7684\u6210\u5458\u8f85\u52a9\u6307\u9488\u5e76\u4e0d\u4e00\u5b9a\u4f1a\u88ab\u6790\u6784\uff0c\u56e0\u4e3a\u8fd8\u53ef\u80fd\u6709\u5176\u4ed6\u667a\u80fd\u6307\u9488\u6307\u5411\u8be5\u8f85\u52a9\u6307\u9488\u3002\u5728\u667a\u80fd\u6307\u9488\u6790\u6784\u7684\u65f6\u5019\u65f6\uff0c\u5176\u8f85\u52a9\u6307\u9488\u5185\u8bb0\u5f55\u667a\u80fd\u6307\u9488\u6570\u91cf\u7684\u6210\u5458 count \u53d1\u751f count-- \u3002 \u53ea\u6709 count-- \u540e\u4e3a 0 \u7684\u65f6\u5019\uff0c\u8f85\u52a9\u6307\u9488\u624d\u4f1a\u88ab\u540c\u65f6\u6790\u6784\u3002","title":"\u667a\u80fd\u6307\u9488\u7684\u6790\u6784"},{"location":"languages/c-oop/function-object-and-smart-pointers/#_17","text":"1 2 3 4 p . get (); // \u83b7\u53d6\u88f8\u6307\u9488\uff0c\u5373\u83b7\u5f97\u5b9e\u9645\u6307\u9488\u7684\u60c5\u51b5 p . reset (); // \u6e05\u9664\u6307\u9488\u5e76\u51cf\u5c11\u5f15\u7528\u8ba1\u6570\uff0c\u89c1\u4e0b shared_ptr < myType > q = static_pointer_cast < myType > ( p ); // \u4e0d\u505a\u7c7b\u578b\u68c0\u67e5\uff0c\u76f4\u63a5\u628a\u4e00\u4e2a\u5176\u4ed6\u7c7b\u7c7b\u667a\u80fd\u6307\u9488\u8f6c\u5316\u4e3a myType \u7c7b\u667a\u80fd\u6307\u9488 shared_ptr < Base > q = dynamic_pointer_cast < Base > ( p ); // \u628a\u4e00\u4e2a\u5176\u4ed6\u7c7b\u667a\u80fd\u6307\u9488\u8f6c\u5316\u4e3a Base \u7c7b\u667a\u80fd\u6307\u9488\uff0c\u8fd8\u505a\u7c7b\u578b\u68c0\u67e5 \u5176\u4e2d\uff0c dynamic_pointer_cast \u548c static_pointer_cast \u6240\u9075\u5faa\u7684\u89c4\u5219\u548c\u6211\u4eec\u5728\u591a\u6001\u4e0e\u6a21\u677f\u4e2d\u5b66\u8fc7\u7684 dynamic_cast \u3001 static_cast \u76f8\u540c\u3002 \u4f46\u662f\u5176\u53c2\u6570\u548c\u8fd4\u56de\u503c\u90fd\u662f shared_ptr \u3002 \u8fd9\u91cc\u5bf9 dynamic_cast \u505a\u4e00\u4e2a\u8bf4\u660e \uff1a T2* pObj = dynamic_cast<T2*>(obj_p) \u8fd9\u4e00\u4e2a\u8bed\u53e5\u91cc\u4f1a\u51fa\u73b0\u4e24\u4e2a T2 \uff0c\u7b2c\u4e00\u4e2a\u662f pObj \u7684\u7c7b\u578b\uff0c\u7b2c\u4e8c\u4e2a\u662f obj_p \u7684\u8f6c\u6362\u76ee\u6807\u3002 dynamic_cast \u4e00\u822c\u7528\u6765\u505a\u5411\u4e0b\u7c7b\u578b\u8f6c\u6362\uff0c\u56e0\u4e3a\u5411\u4e0a\u7c7b\u578b\u8f6c\u6362\u76f4\u63a5\u8d4b\u503c\u5c31\u53ef\u4ee5\u4e86\u3002 dynamic_pointer_cast \u53c2\u6570\u90fd\u662f\u667a\u80fd\u6307\u9488\u3002 1 2 shared_ptr < Base > q = dynamic_pointer_cast < Base > ( p ); // \u8be5 dynamic_cast \u4f5c\u7528\u7c7b\u4f3c\u4e8e\u4e0b\u9762\u7684\u8bed\u53e5\uff0c\u4f46\u662f\u7ed3\u679c\u662f\u4e2a shared_ptr Base * q = dynamic_cast < Base *> ( p . get ()); \u5907\u6ce8\uff1a\u6307\u5411\u540c\u4e00\u5757\u5185\u5b58\u7a7a\u95f4\u7684\u6240\u6709 shared_ptr \uff0c \u4e0d\u8bba\u6307\u9488\u672c\u8eab\u7684\u7c7b\u578b \uff0c\u90fd\u4f1a\u7ed9 use_count++ \u3002 reset \u51fd\u6570\uff1a\u5c06 p \u6307\u5411\u53e6\u5916\u4e00\u4e2a\u5bf9\u8c61\u3002\u5f53 () \u4e3a\u7a7a\u7684\u65f6\u5019\uff0c p \u6307\u5411 null \uff0c\u5f53\u4f7f\u7528 reset \u51fd\u6570\u65f6\uff0c\u539f\u6765 p \u6307\u5411\u7684\u5bf9\u8c61\u7684 count \u4f1a\u51cf\u4e00\u3002 reset \u548c\u76f4\u63a5\u5bf9\u6307\u9488\u8d4b\u503c\u7684\u533a\u522b\uff1a reset \u7684\u53c2\u6570\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u4f46\u662f\u76f4\u63a5\u5bf9\u6307\u9488\u8d4b\u503c\u7684\u53c2\u6570\u662f\u4e00\u4e2a\u5730\u5740\u6216\u8005\u522b\u7684\u6307\u9488\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 #include <iostream> #include <memory> using namespace std ; int main () { shared_ptr < int > sp ( new int ( 1 )) ; cout << \"the address is \" << sp << '\\n' ; sp . reset ( new int ( 2 )); cout << \"the address is \" << sp << '\\n' ; sp . reset (); cout << \"the address is \" << sp << '\\n' ; return 0 ; } /* output: the address is 0x17e1e70 the address is 0x17e1eb0 the address is 0 */","title":"\u667a\u80fd\u6307\u9488\u7684\u5176\u4ed6\u64cd\u4f5c"},{"location":"languages/c-oop/function-object-and-smart-pointers/#_18","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 #include <memory> #include <iostream> using namespace std ; class Child ; // \u5148\u58f0\u660e\uff0c\u540e\u5b9a\u4e49 class Parent { shared_ptr < Child > child ; public : Parent () { cout << \"parent constructing\" << endl ; } ~ Parent () { cout << \"parent destructing\" << endl ; } void setChild ( shared_ptr < Child > c ) { child = c ; } }; class Child { shared_ptr < Parent > parent ; public : Child () { cout << \"child constructing\" << endl ; } ~ Child () { cout << \"child destructing\" << endl ; } void setParent ( shared_ptr < Parent > p ) { parent = p ; } }; void test () { shared_ptr < Parent > p ( new Parent ()); shared_ptr < Child > c ( new Child ()); p -> setChild ( c ); c -> setParent ( p ); // p \u548c c \u88ab\u9500\u6bc1 } int main () { test (); return 0 ; } /* output: parent constructing child constructing */ Parent \u548c Child \u4e24\u4e2a\u5bf9\u8c61\u4e2d\u7684\u6210\u5458\u5206\u522b\u662f\u6307\u5411\u5bf9\u65b9\u7684\u667a\u80fd\u6307\u9488\uff0c\u5bfc\u81f4 p \u3001 c \u88ab\u6790\u6784\u4e4b\u540e\uff0c Parent \u548c Child \u6240\u5728\u5185\u5b58\u6ca1\u6709\u88ab\u6790\u6784\u3002 \u89e3\u51b3\u65b9\u6cd5\uff1a weak_ptr \u3002","title":"\u667a\u80fd\u6307\u9488\u7684\u95ee\u9898"},{"location":"languages/c-oop/function-object-and-smart-pointers/#weak_ptr","text":"\u5f31\u5f15\u7528\u6307\u9488\u6307\u5411\u5bf9\u8c61\u7684\u65f6\u5019\uff0c\u4e0d\u4f1a\u88ab count \u8ba1\u6570\u3002 weak_ptr \u5fc5\u987b\u7531 shared_ptr \u6784\u9020\uff0c\u4f46\u662f\u4e0d\u4f1a\u8ba1\u6570\uff0c \u76f8\u5f53\u4e8e\u4e00\u4e2a\u80fd\u591f\u88ab\u667a\u80fd\u6307\u9488\u8d4b\u503c\u7684\u201c\u666e\u901a\u6307\u9488\u201d \u3002","title":"\u5f31\u5f15\u7528 weak_ptr"},{"location":"languages/c-oop/function-object-and-smart-pointers/#_19","text":"1 2 shared_ptr < int > sp ( new int ( 3 )); weak_ptr < int > wp1 = sp ; // weak_ptr \u5fc5\u987b\u7531 shared_ptr \u6784\u9020","title":"\u6784\u9020\u5f31\u5f15\u7528\u6307\u9488"},{"location":"languages/c-oop/function-object-and-smart-pointers/#_20","text":"1 2 3 4 wp . use_count (); // \u83b7\u53d6\u5f15\u7528\u8ba1\u6570\uff0c\u867d\u7136\u5f31\u5f15\u7528\u6307\u9488\u4e0d\u88ab count \u8ba1\u6570\uff0c\u4f46\u4ecd\u7136\u53ef\u4ee5\u83b7\u53d6\u5f15\u7528\u6b21\u6570 count\uff0ccount \u503c\u4e3a\u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61\u7684\u667a\u80fd\u6307\u9488\u7684\u6570\u91cf\u3002 wp . reset (); // \u6e05\u9664\u6307\u9488 wp . expired (); // \u5f53\u5f31\u5f15\u7528\u6307\u9488\u7684 count == 0 \u65f6\uff0c\u5931\u6548\uff0c\u8fd4\u56de true\u3002\u5426\u5219\u8fd4\u56de false sp = wp . lock (); // \u4ece\u5f31\u5f15\u7528 wp \u83b7\u5f97\u4e00\u4e2a\u667a\u80fd\u6307\u9488 sp\uff0c\u8be5\u667a\u80fd\u6307\u9488\u4f1a\u589e\u52a0 count","title":"\u5f31\u5f15\u7528\u6307\u9488\u7684\u64cd\u4f5c"},{"location":"languages/c-oop/function-object-and-smart-pointers/#unique_ptr","text":"unique_ptr \uff1a\u6bcf\u4e2a\u5bf9\u8c61\u53ea\u80fd\u7531\u4e00\u4e2a unique_ptr \u6307\u5411\u5b83\u3002\u8be5\u5bf9\u8c61\u4e0d\u80fd\u88ab\u5176\u4ed6 shared_ptr \u3001 weak_ptr \u6307\u5411\u3002 \u67d0\u4e2a\u65f6\u523b\u53ea\u80fd\u6709\u4e00\u4e2a unique_ptr \u6307\u5411\u4e00\u4e2a\u7ed9\u5b9a\u5bf9\u8c61 \uff0c\u7531\u4e8e\u4e00\u4e2a unique_ptr \u201c\u62e5\u6709\u201d\u5b83\u6307\u5411\u7684\u5bf9\u8c61\uff0c\u56e0\u6b64 unique_ptr \u4e0d\u652f\u6301\u666e\u901a\u7684\u62f7\u8d1d\u6216\u8d4b\u503c\u64cd\u4f5c\u3002 \u6ce8\u610f\u5230 unique \u53ea\u662f\u548c shared \u4e0e weak \u4e0d\u80fd\u5171\u4eab\uff0c \u4f46\u662f\u4ecd\u7136\u53ef\u4ee5\u548c\u666e\u901a\u6307\u9488\u548c\u5f15\u7528\u5171\u4eab \u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 #include <memory> #include <utility> #include <iostream> using namespace std ; int main () { int a = 1 ; auto u4 = make_unique < int > ( a ); // \u521b\u5efa\u65b9\u5f0f\u5728\u4e4b\u540e\u8bb2\u8ff0 int & b = a ; int * x = & a ; cout << * x << endl ; cout << b << endl ; cout << * u4 << endl ; return 0 ; } /* output: 1 1 1 */","title":"\u72ec\u4eab\u6240\u6709\u6743 unique_ptr"},{"location":"languages/c-oop/function-object-and-smart-pointers/#unique_ptr_1","text":"1 2 3 4 5 6 7 unique_ptr < int > u1 ; // \u7a7a\u6307\u9488 unique_ptr < int > u2 ( new int ( 3 )); // \u65b0\u5206\u914d\u4e00\u5757\u5185\u5b58\u7ed9 unique_ptr int a = 1 ; unique_ptr < int > u3 ( a ); // \u7528\u5df2\u6709\u5bf9\u8c61 a \u521b\u5efa unique_ptr auto u4 = std :: make_unique < int > ( 20 ); // \u4e5f\u662f\u65b0\u5206\u914d\u4e00\u5757\u5185\u5b58\u7ed9 unique_ptr // make_unique \u51fd\u6570\u81ea\u52a8\u8fd4\u56de unique_ptr \u7c7b\u578b\u7684\u8fd4\u56de\u503c // \u4f9b\u7f16\u8bd1\u5668\u63a8\u5bfc u4 \u7684\u7c7b\u578b \u548c weak_ptr \u4e0d\u540c\uff0c unique_ptr \u4e0d\u9700\u8981\u548c shared_ptr \u5171\u540c\u4f7f\u7528\u3002\u5b9e\u9645\u4e0a\uff0c unique_ptr \u4e0d\u80fd\u548c shared_ptr \u540c\u65f6\u6307\u5411\u4e00\u4e2a\u5bf9\u8c61\uff0c\u4e5f\u4e0d\u80fd\u7528 shared_ptr \u6784\u9020 unique_ptr \u3002 \u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\u5c31\u662f\u9519\u7684\u3002 1 2 shared_ptr < int > sp ( new int ( 1 )); unique_ptr < int > up ( sp ); \u5148\u7ed9\u51fa\u7ed3\u8bba \uff0c unique_ptr \u76f8\u6bd4\u4e8e\u666e\u901a\u6307\u9488\u5177\u6709\u5982\u4e0b\u7684\u7279\u70b9\uff1a \u4e0d\u53ef\u7528 unique_ptr \u7ed9\u5176\u4ed6\u6307\u9488\u8d4b\u503c 1 2 3 4 int * p = new int ( 20 ); int & b = * p ; // \u53ef\u4ee5 auto p = make_unique < int > ( 20 ); int * g = * p ; // \u4e0d\u53ef\u4ee5 \u4e0d\u53ef\u4ee5\u8f93\u51fa 1 2 auto p = make_unique < int > ( 20 ); cout << p << endl ; // \u4e0d\u53ef\u4ee5 \u4e0d\u53ef\u4ee5 delete 1 2 3 4 5 6 7 8 9 10 auto p = make_unique < int > ( 20 ); delete p ; /* output: 1152177172/source.cpp: In function 'int main()': 1152177172/source.cpp:7:12: error: type 'class std::unique_ptr<int, std::default_delete<int> >' argument given to 'delete', expected pointer delete p; ^ */","title":"unique_ptr \u7684\u521b\u5efa"},{"location":"languages/c-oop/function-object-and-smart-pointers/#unique_ptr_2","text":"1 2 3 4 unique_ptr < int > u1 ; // \u521b\u5efa\u7a7a unique_ptr u1 = nullptr ; // \u6b64\u65f6\u4f1a\u91ca\u653e u1 \u6307\u5411\u7684\u5bf9\u8c61\u7684\u6743\u9650\uff0c\u4f46\u662f\u5bf9\u8c61\u4e0d\u4f1a\u88ab\u6790\u6784 u1 . release (); // \u8fd9\u4e2a\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u6307\u5411\u8be5\u5bf9\u8c61\u7684\u666e\u901a\u6307\u9488\uff0c\u6b64\u65f6 u1 \u6307\u9488\u88ab\u7834\u574f\uff0c\u5177\u4f53\u89c1\u4e0b u1 . reset (); // \u5728\u6539\u53d8 u1 \u6307\u5411\u7684\u540c\u65f6\uff0c\u4f1a\u91ca\u653e u1 \u6307\u5411\u7684\u5bf9\u8c61 \u5bf9\u4e8e release \u7684\u8bf4\u660e\uff08\u8fd9\u4e9b\u8bf4\u660e\u90fd\u662f\u57fa\u4e8e retexter \uff0c\u6211\u53d1\u73b0 glot \u6839\u672c\u4e0d\u652f\u6301 make_unique \uff0c\u800c tio \u4e0d\u4f1a\u62a5\u9519\u3002\u518d\u6b21\u4f53\u73b0\u4e86\u4e09\u4e2a\u5e73\u53f0\u90fd\u5f88\u6709\u7528\uff0c\u90fd\u5f97\u7528\u60ef\uff09\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 #include <memory> #include <utility> #include <iostream> using namespace std ; int main () { int a = 1 ; auto u4 = make_unique < int > (); cout << * u4 << endl ; cout << \"====================\" << endl ; u4 . release (); // cout << *u4 << endl; return 0 ; } /* output: 0 ==================== */ \u5982\u679c\u6211\u4eec\u628a\u7b2c 11 \u884c\u7684\u6ce8\u91ca\u53bb\u6389\uff0c\u8bd5\u56fe\u6253\u5370\u51fa release \u540e\u7684 unique_ptr \u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 #include <memory> #include <utility> #include <iostream> using namespace std ; int main () { int a = 1 ; auto u4 = make_unique < int > (); cout << * u4 << endl ; cout << \"====================\" << endl ; u4 . release (); cout << a << endl ; cout << * u4 << endl ; return 0 ; } /* output: Invalid memory reference (SIGSEGV) 0 ==================== 1 */ \u53ef\u4ee5\u89c1\u5f97\uff0c\u6700\u540e\u90a3\u4e2a\u8f93\u51fa\u8bed\u53e5\u4e00\u5b9a\u662f\u975e\u6cd5\u7684\uff0c release \u76f8\u5f53\u4e8e\u7834\u574f\u4e86 u4 \uff0c\u8fd4\u56de\u4e86\u4e00\u4e2a\u88f8\u6307\u9488\uff0c u4 \u5c06\u65e0\u6cd5\u88ab\u590d\u7528\u3002 \u503c\u5f97\u6ce8\u610f \u7684\u662f\uff0c\u5982\u679c\u6211\u4eec\u4ea4\u6362 11\u300112 \u884c\uff0c\u5148\u6253\u5370\u5df2\u7ecf\u88ab release \u7684 u4 \u518d\u6253\u5370 a \uff0c\u65e0\u6cd5\u628a a \u6253\u5370\u51fa\u6765\uff0c\u56e0\u4e3a\u5f53\u6211\u4eec\u8bd5\u56fe\u6253\u5370 *u4 \u7684\u65f6\u5019\uff0c\u7a0b\u5e8f\u5c31\u7ed3\u675f\u4e86\uff0c\u56e0\u800c\u8f93\u51fa\u662f\u8fd9\u6837\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 #include <memory> #include <utility> #include <iostream> using namespace std ; int main () { int a = 1 ; auto u4 = make_unique < int > (); cout << * u4 << endl ; cout << \"====================\" << endl ; u4 . release (); cout << * u4 << endl ; cout << a << endl ; return 0 ; } /* output: Invalid memory reference (SIGSEGV) 0 ==================== */","title":"unique_ptr \u7684\u64cd\u4f5c"},{"location":"languages/c-oop/function-object-and-smart-pointers/#unique_ptr_3","text":"1 2 3 4 5 6 7 8 // \u5c06 p1 \u6307\u5411\u7684\u5bf9\u8c61\u8f6c\u79fb\u7ed9 p2 unique_ptr < int > p1 ( new int ( 1 )); unique_ptr < int > p2 ( p1 . release ()); // release \u5c06 p1 \u7f6e\u4e3a\u7a7a\uff0c\u5e76\u4e14\u8fd4\u56de\u88f8\u6307\u9488 // \u5c06 p3 \u6307\u5411\u7684\u5bf9\u8c61\u8f6c\u79fb\u7ed9 p2 unique_ptr < int > p3 ( new int ( 3 )); p2 . reset ( p3 . release ()); // reset \u91ca\u653e\u4e86 p2 \u539f\u6765\u6307\u5411\u7684\u5185\u5b58 release \u6210\u5458\u8fd4\u56de unique_ptr \u5f53\u524d\u4fdd\u5b58\u7684\u6307\u9488\u5e76\u5c06\u5176\u7f6e\u4e3a\u7a7a\u3002\u56e0\u6b64\uff0c p2 \u88ab\u521d\u59cb\u5316\u4e3a p1 \u539f\u6765\u4fdd\u5b58\u7684\u6307\u9488\uff0c\u800c p1 \u88ab\u7f6e\u4e3a\u7a7a\u3002 reset \u6210\u5458\u63a5\u53d7\u4e00\u4e2a\u53ef\u9009\u7684\u6307\u9488\u53c2\u6570\uff0c\u4ee4 unique_ptr \u91cd\u65b0\u6307\u5411\u7ed9\u5b9a\u7684\u6307\u9488\u3002 \u8c03\u7528 release \u4f1a\u5207\u65ad unique_ptr \u548c\u5b83\u539f\u6765\u7ba1\u7406\u7684\u7684\u5bf9\u8c61\u95f4\u7684\u8054\u7cfb\u3002 release \u8fd4\u56de\u7684\u6307\u9488\u901a\u5e38\u88ab\u7528\u6765\u521d\u59cb\u5316\u53e6\u4e00\u4e2a\u667a\u80fd\u6307\u9488\u6216\u7ed9\u53e6\u4e00\u4e2a\u667a\u80fd\u6307\u9488\u8d4b\u503c\u3002 1 2 3 4 5 6 7 // \u6ce8\u610f\u8fd9\u91cc\u975e\u5e38\u795e\u5947\uff0c\u6211\u4eec\u5728\u4e4b\u524d\u7ed9\u7684\u6784\u9020\u65b9\u6cd5\u4e2d\uff0c\u8981\u4e48\u662f\u7528\u6784\u9020\u65b0\u6307\u9488\u6307\u5411\u67d0\u4e2a\u5bf9\u8c61\uff0c\u6bd4\u5982\uff1a int a = 20 ; unique_ptr < int > p2 ( a ); // \u8981\u4e48\u662f\u5148\u6784\u9020\u65b0\u6307\u9488\uff0c\u518d\u7528\u522b\u7684\u6307\u9488\u7ed9\u4ed6\u8d4b\u503c\uff0c\u6bd4\u5982 unique_ptr < int > u1 ; // \u7a7a\u6307\u9488 int a = 20 ; u1 = & a ; \u4f8b\u5b50\uff1a 1 2 3 4 5 6 7 8 9 10 11 #include <memory> #include <utility> using namespace std ; int main () { auto up1 = std :: make_unique < int > ( 20 ); // unique_ptr<int> up2 = up1; // \u9519\u8bef\uff0c\u4e0d\u80fd\u590d\u5236 unique \u6307\u9488 unique_ptr < int > up2 = std :: move ( up1 ); // \u53ef\u4ee5\u79fb\u52a8 unique \u6307\u9488 int * p = up2 . release (); // \u653e\u5f03\u6307\u9488\u63a7\u5236\u6743\uff0c\u8fd4\u56de\u88f8\u6307\u9488 delete p ; return 0 ; }","title":"\u5c06\u4e00\u4e2a\u5bf9\u8c61\u7684\u6240\u6709\u6743\u5728\u4e24\u4e2a unique_ptr \u4e4b\u95f4\u8f6c\u6362\u7684\u65b9\u6cd5"},{"location":"languages/c-oop/function-object-and-smart-pointers/#_21","text":"\u667a\u80fd\u6307\u9488\u53ef\u4ee5\u5e2e\u52a9\u7ba1\u7406\u5185\u5b58\uff0c\u907f\u514d\u5185\u5b58\u6cc4\u9732\u3002\u5728\u624b\u52a8\u7ef4\u62a4\u6307\u9488\u4e0d\u53ef\u884c\u3001\u590d\u5236\u5bf9\u8c61\u5f00\u9500\u592a\u5927\u65f6\uff0c\u667a\u80fd\u6307\u9488\u662f\u552f\u4e00\u9009\u62e9\u3002 \u7f3a\u70b9\uff1a \u5f15\u7528\u8ba1\u6570\u4f1a\u5f71\u54cd\u6027\u80fd \u667a\u80fd\u6307\u9488\u4e0d\u603b\u662f\u667a\u80fd\uff0c\u9700\u8981\u4e86\u89e3\u5185\u90e8\u539f\u7406 \u9700\u8981\u5c0f\u5fc3\u73af\u72b6\u7ed3\u6784\u548c\u6570\u7ec4\u6307\u9488","title":"\u603b\u7ed3"},{"location":"languages/c-oop/function/","text":"C++ \u8bed\u8a00\u51fd\u6570\u8fdb\u9636 \u00b6 \u4e00\u4e9b\u65b0\u4e1c\u897f \u6211\u4eec\u76f8\u4fe1\u8bfb\u8005\u5df2\u7ecf\u77e5\u6653\u5982\u4f55\u7f16\u5199 C/C++ \u8bed\u8a00\u4e4b\u4e2d\u7684\u51fd\u6570\uff0c\u73b0\u5728\u6211\u4eec\u5c06\u8981\u8bb2\u89e3\u4e00\u4e9b\u7c7b\u4f3c\u51fd\u6570\u91cd\u8f7d\u3001\u9ed8\u8ba4\u53c2\u6570\u7b49\u8fdb\u9636\u529f\u80fd\u3002\u5229\u7528\u597d\u8fd9\u4e9b\u529f\u80fd\u53ef\u4ee5\u7b80\u5316\u7f16\u5199\u4ee3\u7801\u7684\u8fc7\u7a0b\u3002 \u51fd\u6570\u91cd\u8f7d \u00b6 \u5b9a\u4e49\u4e0e\u610f\u4e49 \u00b6 \u540c\u4e00\u540d\u79f0\u7684\u51fd\u6570\uff0c\u6709\u4e24\u4e2a\u4ee5\u4e0a\u4e0d\u540c\u7684\u51fd\u6570\u5b9e\u73b0\uff0c\u88ab\u79f0\u4e3a \u51fd\u6570\u91cd\u8f7d \uff08\u82f1\u8bed\uff1aOverload\uff09\u3002 \u533a\u522b\u65b9\u6cd5 \u00b6 \u591a\u4e2a\u540c\u540d\u7684\u51fd\u6570\u5b9e\u73b0\u4e4b\u95f4\uff0c\u5fc5\u987b\u4fdd\u8bc1\u81f3\u5c11\u6709\u4e00\u4e2a\u51fd\u6570\u53c2\u6570\u7684\u7c7b\u578b\u6709\u533a\u522b\u3002\u5373\u8fd9\u4e9b\u540c\u540d\u51fd\u6570\u7684\u5f62\u5f0f\u53c2\u6570\u7684\u4e2a\u6570\u3001\u7c7b\u578b\u6216\u8005\u987a\u5e8f\u5fc5\u987b\u4e0d\u540c\uff0c\u800c\u8fd4\u56de\u503c\u3001\u53c2\u6570\u540d\u79f0\u7b49\u4e0d\u80fd\u4f5c\u4e3a\u533a\u5206\u6807\u8bc6\u3002 1 2 3 4 5 6 float f ( int s ) { return s / 2.0 ; } int f ( int s ) { return s * 2 ; } int main () { cout << f ( 3 ) << endl ; return 0 ; } \u4e0a\u8ff0\u4e24\u4e2a f \u51fd\u6570\u5e76\u4e0d\u662f\u51fd\u6570\u91cd\u8f7d\uff0c\u56e0\u4e3a\u5176\u53ea\u6709\u8fd4\u56de\u503c\u7c7b\u578b\u4e0d\u540c\u3002\u5728\u4e3b\u51fd\u6570\u4e2d\u8c03\u7528 f(3) \u65f6\uff0c\u7f16\u8bd1\u5668\u4f9d\u7136\u65e0\u6cd5\u786e\u5b9a\u8c03\u7528\u54ea\u4e00\u4e2a\u51fd\u6570\u3002 \u81ea\u52a8\u7c7b\u578b\u8f6c\u6362 \u00b6 \u5b9a\u4e49\u4e0e\u6027\u8d28 \u5982\u679c\u51fd\u6570\u8c03\u7528\u8bed\u53e5\u7684\u5b9e\u53c2\u4e0e\u51fd\u6570\u5b9a\u4e49\u4e2d\u7684\u5f62\u53c2\u6570\u636e\u7c7b\u578b\u4e0d\u540c\uff0c\u4e14\u4e24\u79cd\u6570\u636e\u7c7b\u578b\u5728 C++ \u4e2d\u53ef\u4ee5\u8fdb\u884c\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362\uff08\u5982 int \u548c float \uff0c float \u5728\u81ea\u52a8\u8f6c\u6362\u6210 int \u65f6\u662f\u5411\u4e0b\u53d6\u6574\uff09\uff0c\u5219\u5b9e\u53c2\u4f1a\u88ab\u8f6c\u6362\u4e3a\u5f62\u53c2\u7684\u7c7b\u578b\u3002\u4f8b\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 #include <iostream> using namespace std ; void print ( float score ) { cout << \"score =\" << score << endl ; } int main () { int a = 1 ; print ( a ); // \u6b64\u65f6 a \u4f1a\u88ab\u8f6c\u6362\u4e3a float \u578b return 0 ; } \u53c8\u4f8b\u5982\uff0c\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362\u4e5f\u53ef\u4ee5\u901a\u8fc7\u81ea\u5b9a\u4e49\u7684\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\u6765\u5b8c\u6210\u3002\u8fd9\u4e9b\u5c06\u4f1a\u5728\u540e\u7eed\u7ae0\u8282\u4e2d\u9610\u8ff0\u3002 \u4f18\u5148\u5339\u914d\u8c03\u7528 \u5f53\u51fd\u6570\u91cd\u8f7d\u65f6\uff0c\u4f1a\u4f18\u5148\u8c03\u7528\u7c7b\u578b\u5339\u914d\u7684\u51fd\u6570\u5b9e\u73b0\uff0c\u5426\u5219\u624d\u4f1a\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\u3002\u4f8b\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 #include <iostream> using namespace std ; void print ( int score ) { cout << score << endl ; } void print ( float score ) { cout << score << endl ; } int main () { float a = 1.0 ; print ( a ); // 1 return 0 ; } \u8fd9\u91cc\u770b\u4e0a\u53bb\u548c\u4f18\u5148\u5339\u914d\u8c03\u7528\u76f8\u4e92\u77db\u76fe\uff0c\u5176\u5b9e\u5e76\u4e0d\u662f\uff0c\u8fd9\u662f\u7531\u4e8e float \u8f93\u51fa\u7cbe\u5ea6\u7684\u95ee\u9898\u3002\u6211\u4eec\u7a0d\u4f5c\u4fee\u6539\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 #include <iostream> #include <iomanip> using namespace std ; void print ( int score ) { cout << \"int = \" << score << endl ; } void print ( float score ) { cout << \"float = \" << fixed << setprecision ( 2 ) << score << endl ; } int main () { float a = 1.0 ; print ( a ); // \"float = 1.00\" return 0 ; } \u8fd9\u91cc\u8c03\u7528\u4e86 float \u4f7f\u7528\u7684\u63a7\u5236\u7cbe\u5ea6\u7684\u5e93 <iomanip> \u3002 \u53c2\u6570\u7f3a\u7701\u503c \u00b6 \u5b9a\u4e49 \u00b6 \u51fd\u6570\u53c2\u6570\u53ef\u4ee5\u5728\u5b9a\u4e49\u65f6\u8bbe\u7f6e\u9ed8\u8ba4\u503c\uff08\u7f3a\u7701\u503c\uff09\uff0c\u8fd9\u6837\u5728\u8c03\u7528\u8be5\u51fd\u6570\u65f6\uff0c\u82e5\u4e0d\u63d0\u4f9b\u76f8\u5e94\u7684\u5b9e\u53c2\uff0c\u5219\u7f16\u8bd1\u81ea\u52a8\u5c06\u76f8\u5e94\u5f62\u53c2\u8bbe\u7f6e\u6210\u7f3a\u7701\u503c\u3002\u4f8b\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 #include <iostream> using namespace std ; void print ( const char * msg = \"hello\" ) { cout << msg << '#' ; } int main () { print (); // \"hello#\" return 0 ; } \u8bed\u6cd5 \u00b6 \u7f3a\u7701\u503c\u5fc5\u987b\u653e\u5728\u6ca1\u6709\u7f3a\u7701\u503c\u7684\u53c2\u6570\u4e4b\u540e\uff0c\u6709\u591a\u4e2a\u7f3a\u7701\u503c\u65f6\u540c\u7406\u3002 \u7f3a\u7701\u503c\u4fdd\u62a4 \u00b6 \u5982\u679c\u56e0\u4e3a\u51fd\u6570\u7f3a\u7701\u503c\uff0c\u5bfc\u81f4\u4e86\u51fd\u6570\u8c03\u7528\u7684\u4e8c\u4e49\u6027\uff0c\u7f16\u8bd1\u5668\u5c06\u62d2\u7edd\u4ee3\u7801\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u53c2\u6570\u7c7b\u578b\u53ef\u4ee5\u53d1\u751f\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362\u7684\u51fd\u6570\u91cd\u8f7d\u662f\u5408\u6cd5\u7684\uff0c\u56e0\u4e3a\u7f16\u8bd1\u5668\u6709\u8c03\u7528\u7684\u4f18\u5148\u7ea7\u3002\u4f46\u662f\u7f3a\u7701\u503c\u5e26\u6765\u7684\u53c2\u6570\u7c7b\u578b\u91cd\u590d\u5374\u662f\u4e0d\u5408\u6cd5\u7684\u3002\u5982\u4e0b\u9762\u4ee3\u7801\uff0c\u4f1a\u5bfc\u81f4\u7f16\u8bd1\u4e0d\u901a\u8fc7\uff1a 1 2 3 4 5 6 7 8 void fun ( int a , int b = 1 ) { cout << a + b << endl ; } void fun ( int a ) { cout << a << endl ; } fun ( 2 ); \u6b64\u65f6\u7f16\u8bd1\u5668\u65e0\u6cd5\u5224\u5b9a\u8be5\u8c03\u7528\u54ea\u4e00\u4e2a\u51fd\u6570\u3002 \u4f8b\u9898 \u3010\u4f8b\u9898 1\u3011 \u5176\u4ed6\u9009\u9879\u9519\u8bef\u7684\u539f\u56e0\u5206\u522b\u4e3a\uff1a A. \u4e0d\u53ef\u6839\u636e\u5f62\u53c2\u540d\u5b57\u4e0e\u6709\u65e0\u5f62\u53c2\u6765\u533a\u522b\u51fd\u6570\u3002 B. \u4e0d\u53ef\u6839\u636e\u8fd4\u56de\u503c\u7c7b\u578b\u4e0d\u540c\u6765\u533a\u522b\u51fd\u6570\u3002 D. \u7f3a\u7701\u503c\u9020\u6210\u4e8c\u4e49\u6027\uff0c\u7f16\u8bd1\u5931\u8d25\u3002 \u3010\u4f8b\u9898 2\u3011 1 2 3 4 5 6 7 8 9 10 11 12 #include <iostream> using namespace std ; int fun ( int a ) { return a + 1 ; } float fun ( float a ) { return a ; } int fun ( int a , int b ) { return a + b ; } int main () { float a = 1.5 ; int b = 2 ; cout << fun ( fun ( a , b )) + fun ( fun ( a ), b ) << endl ; return 0 ; } fun(fun(a, b)) \u4e2d\u91cc\u5c42\u7684 fun(a, b) \u8c03\u7528 int fun(int a, int b) \uff0c\u76f4\u63a5\u5bf9 float a \u8fdb\u884c\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u5e76\u5411\u4e0b\u53d6\u6574\uff0c\u5373 fun(1, 2) \uff0c\u6545\u800c\u8fd4\u56de 3 \u4e14\u4e3a int \u7c7b\u578b\u3002\u8c03\u7528 int fun(int a = 1) \uff0c\u8fd4\u56de 4 \u3002 fun(fun(a), b) \u4e2d\u91cc\u5c42 fun(a) \u8c03\u7528 float fun(float a) \uff0c\u8fd4\u56de float 1.5 \uff0c\u63a5\u7740 fun(1.5, 2) \uff0c\u6b64\u5904\u4ec5\u53ef\u4ee5\u8c03\u7528 int fun(int a, int b) \uff0c\u6545\u800c\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u4e14\u5411\u4e0b\u53d6\u6574\uff0c\u5373 fun(1, 2) \u3002\u8fd4\u56de 3 \u3002 \u7efc\u4e0a\uff0c\u7b54\u6848\u4e3a 7 \u3002 auto \u4e0e decltype \u7c7b\u578b\u63a8\u65ad \u00b6 \u4f5c\u7528\u4e0e\u610f\u4e49 \u00b6 \u81ea\u52a8\u786e\u5b9a\u53d8\u91cf\u7684\u7c7b\u578b auto \u5173\u952e\u5b57\u53ef\u4ee5\u5141\u8bb8\u7531\u7f16\u8bd1\u5668\u6839\u636e\u4e0a\u4e0b\u6587\u81ea\u52a8\u786e\u5b9a\u53d8\u91cf\u7c7b\u578b\u3002\u4f8b\u5982\uff1a 1 2 3 4 5 auto i = 3 ; // i \u662f int \u578b\u53d8\u91cf auto f = 4.0f ; // f \u662f float \u578b\u53d8\u91cf auto a ( 'c' ); // a \u662f char \u578b\u53d8\u91cf auto b = a ; // b \u662f char \u578b\u53d8\u91cf auto * x = new auto ( 3 ); // x \u662f int* \u578b\u53d8\u91cf \u8ffd\u8e2a\u8fd4\u56de\u7c7b\u578b\u7684\u51fd\u6570 \u53ef\u4ee5\u5c06\u51fd\u6570\u8fd4\u56de\u7c7b\u578b\u7684\u58f0\u660e\u4fe1\u606f\u653e\u5230\u51fd\u6570\u53c2\u6570\u5217\u8868\u540e\u8fdb\u884c\u58f0\u660e\u3002 1 2 3 4 // \u666e\u901a\u51fd\u6570\u58f0\u660e\u5f62\u5f0f int func ( char * ptr , int val ); // \u8ffd\u8e2a\u8fd4\u56de\u7c7b\u578b\u7684\u51fd\u6570\u58f0\u660e\u5f62\u5f0f auto func ( char * ptr , int val ) -> int ; \u8ffd\u8e2a\u8fd4\u56de\u7c7b\u578b\u5728\u539f\u672c\u51fd\u6570\u8fd4\u56de\u503c\u7684\u4f4d\u7f6e\u4f7f\u7528 auto \u5173\u952e\u5b57\u3002 \u5728\u8fd9\u4e00\u4f8b\u5b50\u4e2d\uff0c auto \u5173\u952e\u5b57\u5e76\u6ca1\u6709\u5b9e\u8d28\u4f5c\u7528\uff0c\u7136\u800c\u5728\u6cdb\u578b\u7f16\u7a0b\u4e2d\uff0c auto \u6709\u7740\u5de8\u5927\u7684\u4f5c\u7528\u3002 \u5728\u6a21\u677f\u7c7b\u578b\u63a8\u5bfc\u8fc7\u7a0b\u4e2d\uff0c\u6bd4\u5982\u4e0b\u5217\u4ee3\u7801\uff1a 1 2 3 4 template < typename T1 , typename T2 > decltype ( t1 + t2 ) sum ( T1 & t1 , T2 & t2 ) { return t1 + t2 ; } \u5728\u4e0a\u9762\u8fd9\u4e2a\u51fd\u6570\u5b9a\u4e49\u4e2d\uff0c decltype \u65e0\u6cd5\u63a8\u5bfc\u51fa t1 + t2 \u7684\u7c7b\u578b\uff0c\u56e0\u4e3a\u7f16\u8bd1\u5668\u662f\u4ece\u5de6\u5411\u53f3\u5904\u7406\u7684\uff0c\u5f53\u5904\u7406\u5230 decltype \u7684\u65f6\u5019\uff0c\u7f16\u8bd1\u5668\u8fd8\u4e0d\u77e5\u9053 t1 + t2 \u7684\u7c7b\u578b\u3002\u8ffd\u8e2a\u8fd4\u56de\u51fd\u6570\u5c31\u662f\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u800c\u751f\u7684\uff0c\u4e0a\u9762\u7684\u51fd\u6570\u6211\u4eec\u53ef\u4ee5\u58f0\u660e\u5982\u4e0b\uff1a 1 2 3 4 template < typename T1 , typename T2 > auto sum ( T1 & t1 , T2 & t2 ) -> decltype ( t1 + t2 ) { return t1 + t2 ; } \u5982\u6b64\uff0c decltype \u5c31\u53ef\u4ee5\u6839\u636e t1 \u3001 t2 \u7684\u7c7b\u578b\u63a8\u5bfc\u51fa\u51fd\u6570 sum \u7684\u8fd4\u56de\u7c7b\u578b\u3002 auto \u7684\u8fdb\u4e00\u6b65\u9610\u8ff0 auto \u5e76\u4e0d\u80fd\u4ee3\u8868\u4e00\u4e2a\u5b9e\u9645\u7684\u7c7b\u578b\u58f0\u660e\uff0c\u53ea\u662f\u4e00\u4e2a\u7c7b\u578b\u58f0\u660e\u7684\u201c\u5360\u4f4d\u7b26\u201d\u3002\u4f7f\u7528 auto \u58f0\u660e\u7684\u53d8\u91cf\u5fc5\u987b\u9a6c\u4e0a\u521d\u59cb\u5316\uff0c\u4ee5\u8ba9\u7f16\u8bd1\u5668\u63a8\u65ad\u51fa\u5b83\u7684\u7c7b\u578b\uff0c\u5e76\u4e14\u5728\u7f16\u8bd1\u65f6\u5c06 auto \u5360\u4f4d\u7b26\u66ff\u6362\u4e3a\u771f\u6b63\u7684\u7c7b\u578b\u3002 auto \u7684\u5176\u4ed6\u6027\u8d28 \u00b6 auto \u53d8\u91cf\u5fc5\u987b\u5728\u7f16\u8bd1\u671f\u786e\u5b9a\u5176\u7c7b\u578b auto \u53d8\u91cf\u5fc5\u987b\u5728\u5b9a\u4e49\u65f6\u521d\u59cb\u5316\uff1a 1 auto a ; // \u9519\u8bef\uff0c\u672a\u521d\u59cb\u5316 \u540c\u4e00\u4e2a auto \u5173\u952e\u5b57\u5e94\u5c06\u53d8\u91cf\u63a8\u5bfc\u4e3a\u540c\u4e00\u7c7b\u578b\uff1a 1 auto b4 = 10 , b5 = 20.0 , b6 = 'a' ; // \u9519\u8bef\uff0c\u6ca1\u6709\u63a8\u5bfc\u4e3a\u540c\u4e00\u7c7b\u578b \u53c2\u6570\u4e0d\u80fd\u88ab\u58f0\u660e\u4e3a auto \uff1a 1 void func ( auto a ) { } // \u9519\u8bef auto \u5e76\u4e0d\u662f\u4e00\u4e2a\u771f\u6b63\u7684\u7c7b\u578b\u3002\u4e0d\u80fd\u4f7f\u7528\u4e00\u4e9b\u4ee5\u7c7b\u578b\u4e3a\u64cd\u4f5c\u6570\u7684\u64cd\u4f5c\u7b26\uff0c\u5982 sizeof \u6216\u8005 typeid \uff1a 1 cout << sizeof ( auto ) << endl ; // \u9519\u8bef decltype \u5173\u952e\u5b57 \u00b6 \u914d\u5408 auto \u5173\u952e\u5b57\u4e00\u540c\u4f7f\u7528\uff0c\u4e3b\u8981\u7528\u4e8e\u6cdb\u578b\u7f16\u7a0b\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #include <bits/stdc++.h> using namespace std ; struct { char * name ; } anon_u ; struct { int d ; decltype ( anon_u ) id ; // \u6ca1\u6709\u544a\u8bc9 id \u7684\u7c7b\u578b\uff0c\u7528 decltype \u81ea\u52a8\u63a8\u5bfc } anon_s [ 100 ]; // \u533f\u540d\u7684 struct \u6570\u7ec4 int main () { decltype ( anon_s ) as ; // \u6ce8\u610f as \u7684\u7c7b\u578b\u3002 cin >> as [ 0 ]. id . name ; return 0 ; } \u7b2c\u4e00\u4e2a decltype \u7684\u7406\u89e3\u662f\uff0c\u7f16\u8bd1\u5668\u6839\u636e anon_u \u7684\u7ed3\u6784\u63a8\u5bfc\u51fa\u4e00\u4e2a\u7c7b\u578b\uff0c\u5e76\u521b\u5efa\u4e86\u8fd9\u4e2a\u7c7b\u578b\u7684\u65b0\u53d8\u91cf id \u3002 \u7b2c\u4e8c\u4e2a decltype \u7684\u7406\u89e3\u662f\uff0c\u7f16\u8bd1\u5668\u6839\u636e anon_s \u7684\u7ed3\u6784\u63a8\u5bfc\u51fa\u4e00\u4e2a\u7c7b\u578b\uff0c\u8fd9\u4e2a\u7c7b\u578b\u662f\u67d0\u4e2a\u533f\u540d\u7684\u7ed3\u6784\u4f53\u6570\u7ec4\u3002\u5e76\u521b\u5efa\u4e86\u8fd9\u4e2a\u7ed3\u6784\u4f53\u6570\u7ec4\u7c7b\u578b\u7684\u65b0\u53d8\u91cf as \uff0c as \u4e5f\u662f\u4e00\u4e2a\u7ed3\u6784\u4f53\u6570\u7ec4\uff08\u5982\u679c decltype \u62ec\u53f7\u91cc\u9762\u7684\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u90a3\u4e48\u63a8\u5bfc\u51fa\u7684\u7c7b\u578b\u4e5f\u662f\u4e2a\u6570\u7ec4\uff0c\u800c\u4e0d\u662f\u8fd9\u4e2a\u6570\u7ec4\u91cc\u6bcf\u4e00\u4e2a\u5143\u7d20\u7684\u7c7b\u578b\uff09\u3002 \u914d\u5408 auto \u63a8\u5bfc\u51fa\u8fd4\u56de\u503c\u7c7b\u578b\uff1a 1 2 3 auto func ( int x , int y ) -> decltype ( x + y ) { return x + y ; } C++14 \u4e2d\u4e0d\u518d\u9700\u8981\u663e\u5f0f\u6307\u5b9a\u8fd4\u56de\u7c7b\u578b\uff1a 1 auto func ( int x , int y ) { return x + y ; } auto \u7684\u4f18\u52bf \u00b6 \u7528\u4e8e\u4ee3\u66ff\u5197\u957f\u590d\u6742\u3001\u53d8\u91cf\u4f7f\u7528\u8303\u56f4\u4e13\u4e00\u7684\u53d8\u91cf\u58f0\u660e\u3002\u6211\u4eec\u73b0\u5728\u5b66\u4e60\u7684\u7c7b\u578b\u90fd\u5e76\u4e0d\u590d\u6742\uff0c\u968f\u7740\u6a21\u677f\u7684\u5b66\u4e60\uff0c\u7c7b\u578b\u4f1a\u8d8a\u53d1\u590d\u6742\u3002 1 2 3 std :: vector < std :: string > vs ; for ( std :: vector < std :: string >:: iterator i = vs . begin (); i != vs . end (); i ++ ) { } \u4e0a\u8ff0\u4ee3\u7801\u53ef\u4ee5\u7b49\u4ef7\u66ff\u6362\u4e3a\uff1a 1 2 std :: vector < std :: string > vs ; for ( auto i = vs . begin (); i != vs . end (); i ++ ) { } \u53e6\u5916\uff0c\u6709\u65f6\u5019\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u786e\u5b9a\u6a21\u677f\u51fd\u6570\u7684\u8fd4\u56de\u503c\u7684\u7c7b\u578b\uff0c\u5219\u53ef\u5728\u5b9a\u4e49\u6a21\u677f\u51fd\u6570\u65f6\uff0c\u7528\u4e8e\u58f0\u660e\u4f9d\u8d56\u6a21\u677f\u53c2\u6570\u7684\u53d8\u91cf\u7c7b\u578b\u3002 1 2 3 4 5 template < typename _Tx , typename _Ty > void multiply ( _Tx x , _Ty y ) { auto v = x * y ; std :: cout << v ; } \u7ed3\u5408 auto \u548c decltype \uff0c\u8fd8\u53ef\u4ee5\u81ea\u52a8\u8ffd\u8e2a\u8fd4\u56de\u7c7b\u578b\uff1a 1 2 3 4 template < typename _Tx , typename _Ty > auto multiply ( _Tx x , _Ty y ) -> decltype ( x * y ) { return x * y ; } \u4f8b\u9898 \u3010\u4f8b\u9898 1\u3011 \u8be5\u9898\u975e\u5e38\u8be6\u7ec6\u7684\u89e3\u7b54\u5728 OOP \u8bfe\u7a0b\u7684 QA \u5899 \u4e0a\u3002 \u3010\u4f8b\u9898 2\u3011 \u9898\u76ee\u5e76\u4e0d\u96be\uff0c\u4f46\u662f\u6b64\u5904\u7684\u904d\u5386\u8fd9\u5f88\u6709\u8bb2\u7a76\u3002 1 2 3 4 5 6 7 8 #include <iostream> using namespace std ; int main () { for ( auto x : \"123\" ) { cout << x << '-' ; } // \"1-2-3--\" return 0 ; } \u6ce8\u610f\u5230 3 \u4e4b\u540e\u6709\u4e24\u4e2a - \u3002\u6211\u4eec\u66f4\u6362\u5faa\u73af\u65b9\u5f0f\uff1a 1 2 3 4 5 6 7 8 #include <iostream> using namespace std ; int main () { for ( auto x : { 1 , 2 , 3 }) { cout << x << '-' ; } // \"1-2-3-\" return 0 ; } \u5176\u5b9e\u662f\u5b57\u7b26\u6570\u7ec4\u7ed3\u5c3e\u7684 \\0 \u4e5f\u88ab\u904d\u5386\u4e86\uff0c\u4f46\u662f\u65e0\u6cd5\u8f93\u51fa\u3002 \u4e0b\u9762\u7b80\u5355\u8bf4\u660e \\0 \u548c\u7a7a\u683c\u7684\u5dee\u522b\uff1a \u7a7a\u5b57\u7b26\u7684\u957f\u5ea6\u4e3a 0\uff0c\u7a7a\u683c\u7b26\u7684\u957f\u5ea6\u4e3a 1\u3002 1 2 3 4 char a [] = \" \\0 \" ; char b [] = \" \" ; cout << strlen ( a ) << endl ; // 0 cout << strlen ( b ) << endl ; // 1 \\0 \u6807\u8bb0\u5b57\u7b26\u4e32\u7ed3\u675f\u3002 1 2 3 4 char crr [] = \"a b\" ; char brr [] = \"a \\0 b\" ; cout << strlen ( crr ) << endl ; // 3 cout << strlen ( brr ) << endl ; // 1 \u8f93\u51fa\u5230\u5c4f\u5e55\u4e0a\uff0c \\0 \u4ec0\u4e48\u90fd\u6ca1\u6709\uff0c\u800c\u7a7a\u683c\u662f\u7a7a\u683c\u3002 \u5c01\u88c5\u4e0e\u5185\u8054\u51fd\u6570 \u00b6 \u51fd\u6570\u6743\u9650\u548c\u51fd\u6570\u91cd\u8f7d\u7684\u5148\u540e \u00b6 \u8fd9\u91cc\u4f7f\u7528\u4e86\u7c7b\u7684\u8bed\u6cd5\uff0c\u8fd9\u7c7b\u8bed\u6cd5\u4f1a\u5728\u540e\u7eed\u8bb2\u89e3\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 #include <iostream> using namespace std ; class A { private : int a ; void f ( int i = 2 ) { a = i ; } public : void f ( int i , int j = 2 ) { a = i + j ; } int get_a () { return a ; } }; int main () { A aa ; aa . f ( 1 ); cout << aa . get_a () << endl ; return 0 ; } \u8fd9\u6bb5\u4ee3\u7801\u4f1a\u62a5\u9519 call to member function 'f' is ambiguous \u3002 \u4e0d\u8fc7\u7ed9\u4eba\u7684\u611f\u89c9\u662f\uff0c\u6211\u7684 void f(int i = 2) \u662f\u4e00\u4e2a\u79c1\u6709\u51fd\u6570\uff0c\u7406\u8bba\u4e0a\u5728\u4e3b\u51fd\u6570\u91cc\u9762\u662f\u65e0\u6cd5\u8bbf\u95ee\u7684\uff0c\u6240\u4ee5\u4e0d\u5e94\u8be5\u4f1a\u53d1\u751f\u8c03\u7528\u3002 \u5b9e\u9645\u4e0a\uff0c\u7f16\u8bd1\u5668\u770b\u5230 aa.f \u7684\u65f6\u5019\u4f1a\u5148\u627e\u51fa\u6240\u6709\u7684 f \uff0c\u5224\u65ad\u8c03\u7528\u6b63\u786e\u4e4b\u540e\u624d\u5224\u65ad\u6743\u9650\u662f\u5426\u6b63\u786e\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u51fd\u6570\u8c03\u7528\u4f18\u5148\u5339\u914d\u53c2\u6570\u5bf9\u5e94\u6027\uff0c\u518d\u5224\u65ad\u6743\u9650\u5408\u7406\u6027\u3002\u7f16\u8bd1\u4e3a\u6c47\u7f16\u8bed\u8a00\u540e\u7684\u7a0b\u5e8f\u91cc\u4e24\u4e2a f \u662f\u4e0d\u5206\u662f\u5426\u662f\u79c1\u6709\u7684\uff0c\u6743\u9650\u7684\u8bed\u6cd5\u68c0\u67e5\u5728\u7f16\u8bd1\u4e4b\u540e\u3002 \u5185\u8054\u51fd\u6570 \u00b6 \u5b9a\u4e49\u4e0e\u610f\u4e49 \u51fd\u6570\u8c03\u7528\u8981\u8fdb\u884c\u4e00\u7cfb\u5217\u51c6\u5907\u548c\u540e\u5904\u7406\u5de5\u4f5c\uff08\u538b\u6808\u3001\u8df3\u8f6c\u3001\u9000\u6808\u3001\u8fd4\u56de\u7b49\uff09\uff0c\u6240\u4ee5\u51fd\u6570\u8c03\u7528\u662f\u4e00\u4e2a\u6bd4\u8f83\u6162\u7684\u8fc7\u7a0b\u3002\u5982\u679c\u5bf9\u4e8e\u4e00\u4e2a\u7b80\u5355\u7684\u51fd\u6570\u8fdb\u884c\u5927\u91cf\u7684\u8c03\u7528\uff0c\u4f1a\u964d\u4f4e\u7a0b\u5e8f\u6548\u7387\u3002 \u6bd4\u8f83\u4e0b\u9762\u4e24\u79cd\u5b9e\u73b0\u65b9\u5f0f\uff0c\u51fd\u6570\u6bd4\u7b49\u4ef7\u7684\u8868\u8fbe\u5f0f\u6548\u7387\u66f4\u4f4e\u3002 1 2 cout << max ( a , b ) << endl ; cout << ( a > b ? a : b ) << endl ; \u4f7f\u7528\u5185\u8054\u51fd\u6570\uff0c\u7f16\u8bd1\u5668\u81ea\u52a8\u4ea7\u751f\u7b49\u4ef7\u7684\u8868\u8fbe\u5f0f\u3002 1 2 3 4 inline int max ( int a , int b ) { return a > b ? a : b ; } cout << max ( a , b ) << endl ; \u4e0a\u8ff0\u4ee3\u7801\u7b49\u4ef7\u4e8e\uff1a 1 cout << ( a > b ? a : b ) << endl ; \u5185\u8054\u51fd\u6570\u548c\u5b8f\u5b9a\u4e49\u7684\u533a\u522b \u5728\u5e26\u53c2\u6570\u5b8f\u7684\u90e8\u5206\u4e2d\u6211\u4eec\u63d0\u5230\u8fc7\uff0c\u7531\u4e8e\u5e26\u53c2\u6570\u5b8f\u5177\u6709\u9ad8\u5ea6\u6b67\u4e49\u6027\uff0c\u6545\u800c\u5f80\u5f80\u88ab\u5185\u8054\u51fd\u6570\u66ff\u4ee3\u3002\u4e24\u8005\u533a\u522b\u5728\uff1a \u5b8f\u5b9a\u4e49\u53ea\u662f\u62f7\u8d1d\u4ee3\u7801\u5230\u88ab\u8c03\u7528\u7684\u5730\u65b9\uff0c\u800c\u5185\u8054\u51fd\u6570\u5219\u662f\u751f\u6210\u548c\u51fd\u6570\u7b49\u4ef7\u7684\u8868\u8fbe\u5f0f\u3002 \u5185\u8054\u51fd\u6570\u53ef\u4ee5\u6267\u884c\u7c7b\u578b\u68c0\u67e5\uff0c\u8fdb\u884c\u7f16\u8bd1\u671f\u9519\u8bef\u68c0\u67e5\u3002 \u5185\u8054\u51fd\u6570\u53ef\u8c03\u8bd5\uff0c\u800c\u5b8f\u5b9a\u4e49\u7684\u51fd\u6570\u4e0d\u53ef\u8c03\u8bd5\u3002 \u5728 Debug \u7248\u672c\uff0c\u5185\u8054\u51fd\u6570\u6ca1\u6709\u771f\u6b63\u5185\u8054\uff0c\u800c\u662f\u548c\u4e00\u822c\u51fd\u6570\u4e00\u6837\uff0c\u56e0\u6b64\u5728\u8be5\u9636\u6bb5\u53ef\u4ee5\u88ab\u8c03\u8bd5\u3002 \u5728 Release \u7248\u672c\uff0c\u5185\u8054\u51fd\u6570\u5b9e\u73b0\u4e86\u771f\u6b63\u7684\u5185\u8054\uff0c\u589e\u52a0\u6267\u884c\u6548\u7387\u3002 \u5b8f\u5b9a\u4e49\u7684\u51fd\u6570\u65e0\u6cd5\u64cd\u4f5c\u79c1\u6709\u6570\u636e\u6210\u5458\u3002 \u5185\u8054\u51fd\u6570\u7684\u6ce8\u610f\u4e8b\u9879 \u907f\u514d\u5bf9\u5927\u6bb5\u4ee3\u7801\u4f7f\u7528\u5185\u8054\u4fee\u9970\u7b26\u3002\u8fd9\u662f\u56e0\u4e3a\u5185\u8054\u4fee\u9970\u7b26\u76f8\u5f53\u4e8e\u628a\u8be5\u51fd\u6570\u5728\u6240\u6709\u88ab\u8c03\u7528\u7684\u5730\u65b9\u62f7\u8d1d\u4e86\u4e00\u4efd\uff0c\u6240\u4ee5\u5927\u6bb5\u4ee3\u7801\u7684\u5185\u8054\u4fee\u9970\u4f1a\u589e\u52a0\u8d1f\u62c5\u3002 \u907f\u514d\u5bf9\u5305\u542b\u5faa\u73af\u6216\u8005\u590d\u6742\u63a7\u5236\u7ed3\u6784\u7684\u51fd\u6570\u4f7f\u7528\u5185\u8054\u5b9a\u4e49\u3002\u56e0\u4e3a\u5185\u8054\u51fd\u6570\u4f18\u5316\u7684\uff0c\u53ea\u662f\u5728\u51fd\u6570\u8c03\u7528\u7684\u65f6\u5019\uff0c\u4f1a\u4ea7\u751f\u7684\u538b\u6808\u3001\u8df3\u8f6c\u3001\u9000\u6808\u548c\u8fd4\u56de\u7b49\u64cd\u4f5c\u3002\u6240\u4ee5\u5982\u679c\u51fd\u6570\u5185\u90e8\u6267\u884c\u4ee3\u7801\u7684\u65f6\u95f4\u6bd4\u51fd\u6570\u8c03\u7528\u7684\u65f6\u95f4\u957f\u5f97\u591a\uff0c\u4f18\u5316\u51e0\u4e4e\u53ef\u4ee5\u5ffd\u7565\u3002 \u4e0d\u53ef\u5c06\u5185\u8054\u51fd\u6570\u7684\u58f0\u660e\u548c\u5b9a\u4e49\u5206\u5f00\uff08\u4e0d\u540c\u4e8e\u5927\u591a\u6570\u51fd\u6570\u5c06\u751f\u547d\u548c\u5b9a\u4e49\u5206\u522b\u5199\u5728\u5934\u6587\u4ef6\u548c\u6e90\u6587\u4ef6\u91cc\uff09\u3002\u7f16\u8bd1\u5668\u7f16\u8bd1\u65f6\u9700\u8981\u5f97\u5230\u5185\u8054\u51fd\u6570\u7684\u5b9e\u73b0\uff0c\u56e0\u6b64\u591a\u6587\u4ef6\u7f16\u8bd1\u65f6\u5185\u8054\u51fd\u6570\u5148\u9700\u8981\u5c06\u5b9e\u73b0\u5199\u5728\u5934\u6587\u4ef6\u4e2d\uff0c\u5426\u5219\u65e0\u6cd5\u5b9e\u73b0\u5185\u8054\u6548\u679c\u3002 \u5b9a\u4e49\u5728\u7c7b\u58f0\u660e\u4e2d\u7684\u51fd\u6570\u9ed8\u8ba4\u4e3a\u5185\u8054\u51fd\u6570\uff08\u4f46\u51fd\u6570\u4e00\u822c\u90fd\u4e0d\u5b9a\u4e49\u5728\u7c7b\u58f0\u660e\u5185\uff09\u3002\u4e00\u822c\u6784\u9020\u51fd\u6570\u3001\u6790\u6784\u51fd\u6570\u90fd\u88ab\u5b9a\u4e49\u4e3a\u5185\u8054\u51fd\u6570\u3002 \u5185\u8054\u4fee\u9970\u7b26\u66f4\u50cf\u662f\u5efa\u8bae\u800c\u4e0d\u662f\u547d\u4ee4\u3002\u7f16\u8bd1\u5668 \u6709\u6743 \u62d2\u7edd\u4e0d\u5408\u7406\u7684\u8bf7\u6c42\uff0c\u4f8b\u5982\u7f16\u8bd1\u5668\u8ba4\u4e3a\u67d0\u4e2a\u51fd\u6570\u4e0d\u503c\u5f97\u5185\u8054\uff0c\u5c31\u4f1a\u5ffd\u7565\u5185\u8054\u4fee\u9970\u7b26\u3002 \u7f16\u8bd1\u5668\u4f1a\u5bf9\u4e00\u4e9b\u6ca1\u6709\u5185\u8054\u4fee\u9970\u7b26\u7684\u51fd\u6570\uff0c\u81ea\u884c\u5224\u65ad\u53ef\u5426\u8f6c\u5316\u4e3a\u5185\u8054\u51fd\u6570\uff0c\u4e00\u822c\u4f1a\u9009\u62e9\u77ed\u5c0f\u7684\u51fd\u6570\u3002","title":"C++ \u8bed\u8a00\u51fd\u6570\u8fdb\u9636"},{"location":"languages/c-oop/function/#c","text":"\u4e00\u4e9b\u65b0\u4e1c\u897f \u6211\u4eec\u76f8\u4fe1\u8bfb\u8005\u5df2\u7ecf\u77e5\u6653\u5982\u4f55\u7f16\u5199 C/C++ \u8bed\u8a00\u4e4b\u4e2d\u7684\u51fd\u6570\uff0c\u73b0\u5728\u6211\u4eec\u5c06\u8981\u8bb2\u89e3\u4e00\u4e9b\u7c7b\u4f3c\u51fd\u6570\u91cd\u8f7d\u3001\u9ed8\u8ba4\u53c2\u6570\u7b49\u8fdb\u9636\u529f\u80fd\u3002\u5229\u7528\u597d\u8fd9\u4e9b\u529f\u80fd\u53ef\u4ee5\u7b80\u5316\u7f16\u5199\u4ee3\u7801\u7684\u8fc7\u7a0b\u3002","title":"C++ \u8bed\u8a00\u51fd\u6570\u8fdb\u9636"},{"location":"languages/c-oop/function/#_1","text":"","title":"\u51fd\u6570\u91cd\u8f7d"},{"location":"languages/c-oop/function/#_2","text":"\u540c\u4e00\u540d\u79f0\u7684\u51fd\u6570\uff0c\u6709\u4e24\u4e2a\u4ee5\u4e0a\u4e0d\u540c\u7684\u51fd\u6570\u5b9e\u73b0\uff0c\u88ab\u79f0\u4e3a \u51fd\u6570\u91cd\u8f7d \uff08\u82f1\u8bed\uff1aOverload\uff09\u3002","title":"\u5b9a\u4e49\u4e0e\u610f\u4e49"},{"location":"languages/c-oop/function/#_3","text":"\u591a\u4e2a\u540c\u540d\u7684\u51fd\u6570\u5b9e\u73b0\u4e4b\u95f4\uff0c\u5fc5\u987b\u4fdd\u8bc1\u81f3\u5c11\u6709\u4e00\u4e2a\u51fd\u6570\u53c2\u6570\u7684\u7c7b\u578b\u6709\u533a\u522b\u3002\u5373\u8fd9\u4e9b\u540c\u540d\u51fd\u6570\u7684\u5f62\u5f0f\u53c2\u6570\u7684\u4e2a\u6570\u3001\u7c7b\u578b\u6216\u8005\u987a\u5e8f\u5fc5\u987b\u4e0d\u540c\uff0c\u800c\u8fd4\u56de\u503c\u3001\u53c2\u6570\u540d\u79f0\u7b49\u4e0d\u80fd\u4f5c\u4e3a\u533a\u5206\u6807\u8bc6\u3002 1 2 3 4 5 6 float f ( int s ) { return s / 2.0 ; } int f ( int s ) { return s * 2 ; } int main () { cout << f ( 3 ) << endl ; return 0 ; } \u4e0a\u8ff0\u4e24\u4e2a f \u51fd\u6570\u5e76\u4e0d\u662f\u51fd\u6570\u91cd\u8f7d\uff0c\u56e0\u4e3a\u5176\u53ea\u6709\u8fd4\u56de\u503c\u7c7b\u578b\u4e0d\u540c\u3002\u5728\u4e3b\u51fd\u6570\u4e2d\u8c03\u7528 f(3) \u65f6\uff0c\u7f16\u8bd1\u5668\u4f9d\u7136\u65e0\u6cd5\u786e\u5b9a\u8c03\u7528\u54ea\u4e00\u4e2a\u51fd\u6570\u3002","title":"\u533a\u522b\u65b9\u6cd5"},{"location":"languages/c-oop/function/#_4","text":"\u5b9a\u4e49\u4e0e\u6027\u8d28 \u5982\u679c\u51fd\u6570\u8c03\u7528\u8bed\u53e5\u7684\u5b9e\u53c2\u4e0e\u51fd\u6570\u5b9a\u4e49\u4e2d\u7684\u5f62\u53c2\u6570\u636e\u7c7b\u578b\u4e0d\u540c\uff0c\u4e14\u4e24\u79cd\u6570\u636e\u7c7b\u578b\u5728 C++ \u4e2d\u53ef\u4ee5\u8fdb\u884c\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362\uff08\u5982 int \u548c float \uff0c float \u5728\u81ea\u52a8\u8f6c\u6362\u6210 int \u65f6\u662f\u5411\u4e0b\u53d6\u6574\uff09\uff0c\u5219\u5b9e\u53c2\u4f1a\u88ab\u8f6c\u6362\u4e3a\u5f62\u53c2\u7684\u7c7b\u578b\u3002\u4f8b\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 #include <iostream> using namespace std ; void print ( float score ) { cout << \"score =\" << score << endl ; } int main () { int a = 1 ; print ( a ); // \u6b64\u65f6 a \u4f1a\u88ab\u8f6c\u6362\u4e3a float \u578b return 0 ; } \u53c8\u4f8b\u5982\uff0c\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362\u4e5f\u53ef\u4ee5\u901a\u8fc7\u81ea\u5b9a\u4e49\u7684\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\u6765\u5b8c\u6210\u3002\u8fd9\u4e9b\u5c06\u4f1a\u5728\u540e\u7eed\u7ae0\u8282\u4e2d\u9610\u8ff0\u3002 \u4f18\u5148\u5339\u914d\u8c03\u7528 \u5f53\u51fd\u6570\u91cd\u8f7d\u65f6\uff0c\u4f1a\u4f18\u5148\u8c03\u7528\u7c7b\u578b\u5339\u914d\u7684\u51fd\u6570\u5b9e\u73b0\uff0c\u5426\u5219\u624d\u4f1a\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\u3002\u4f8b\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 #include <iostream> using namespace std ; void print ( int score ) { cout << score << endl ; } void print ( float score ) { cout << score << endl ; } int main () { float a = 1.0 ; print ( a ); // 1 return 0 ; } \u8fd9\u91cc\u770b\u4e0a\u53bb\u548c\u4f18\u5148\u5339\u914d\u8c03\u7528\u76f8\u4e92\u77db\u76fe\uff0c\u5176\u5b9e\u5e76\u4e0d\u662f\uff0c\u8fd9\u662f\u7531\u4e8e float \u8f93\u51fa\u7cbe\u5ea6\u7684\u95ee\u9898\u3002\u6211\u4eec\u7a0d\u4f5c\u4fee\u6539\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 #include <iostream> #include <iomanip> using namespace std ; void print ( int score ) { cout << \"int = \" << score << endl ; } void print ( float score ) { cout << \"float = \" << fixed << setprecision ( 2 ) << score << endl ; } int main () { float a = 1.0 ; print ( a ); // \"float = 1.00\" return 0 ; } \u8fd9\u91cc\u8c03\u7528\u4e86 float \u4f7f\u7528\u7684\u63a7\u5236\u7cbe\u5ea6\u7684\u5e93 <iomanip> \u3002","title":"\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362"},{"location":"languages/c-oop/function/#_5","text":"","title":"\u53c2\u6570\u7f3a\u7701\u503c"},{"location":"languages/c-oop/function/#_6","text":"\u51fd\u6570\u53c2\u6570\u53ef\u4ee5\u5728\u5b9a\u4e49\u65f6\u8bbe\u7f6e\u9ed8\u8ba4\u503c\uff08\u7f3a\u7701\u503c\uff09\uff0c\u8fd9\u6837\u5728\u8c03\u7528\u8be5\u51fd\u6570\u65f6\uff0c\u82e5\u4e0d\u63d0\u4f9b\u76f8\u5e94\u7684\u5b9e\u53c2\uff0c\u5219\u7f16\u8bd1\u81ea\u52a8\u5c06\u76f8\u5e94\u5f62\u53c2\u8bbe\u7f6e\u6210\u7f3a\u7701\u503c\u3002\u4f8b\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 #include <iostream> using namespace std ; void print ( const char * msg = \"hello\" ) { cout << msg << '#' ; } int main () { print (); // \"hello#\" return 0 ; }","title":"\u5b9a\u4e49"},{"location":"languages/c-oop/function/#_7","text":"\u7f3a\u7701\u503c\u5fc5\u987b\u653e\u5728\u6ca1\u6709\u7f3a\u7701\u503c\u7684\u53c2\u6570\u4e4b\u540e\uff0c\u6709\u591a\u4e2a\u7f3a\u7701\u503c\u65f6\u540c\u7406\u3002","title":"\u8bed\u6cd5"},{"location":"languages/c-oop/function/#_8","text":"\u5982\u679c\u56e0\u4e3a\u51fd\u6570\u7f3a\u7701\u503c\uff0c\u5bfc\u81f4\u4e86\u51fd\u6570\u8c03\u7528\u7684\u4e8c\u4e49\u6027\uff0c\u7f16\u8bd1\u5668\u5c06\u62d2\u7edd\u4ee3\u7801\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u53c2\u6570\u7c7b\u578b\u53ef\u4ee5\u53d1\u751f\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362\u7684\u51fd\u6570\u91cd\u8f7d\u662f\u5408\u6cd5\u7684\uff0c\u56e0\u4e3a\u7f16\u8bd1\u5668\u6709\u8c03\u7528\u7684\u4f18\u5148\u7ea7\u3002\u4f46\u662f\u7f3a\u7701\u503c\u5e26\u6765\u7684\u53c2\u6570\u7c7b\u578b\u91cd\u590d\u5374\u662f\u4e0d\u5408\u6cd5\u7684\u3002\u5982\u4e0b\u9762\u4ee3\u7801\uff0c\u4f1a\u5bfc\u81f4\u7f16\u8bd1\u4e0d\u901a\u8fc7\uff1a 1 2 3 4 5 6 7 8 void fun ( int a , int b = 1 ) { cout << a + b << endl ; } void fun ( int a ) { cout << a << endl ; } fun ( 2 ); \u6b64\u65f6\u7f16\u8bd1\u5668\u65e0\u6cd5\u5224\u5b9a\u8be5\u8c03\u7528\u54ea\u4e00\u4e2a\u51fd\u6570\u3002 \u4f8b\u9898 \u3010\u4f8b\u9898 1\u3011 \u5176\u4ed6\u9009\u9879\u9519\u8bef\u7684\u539f\u56e0\u5206\u522b\u4e3a\uff1a A. \u4e0d\u53ef\u6839\u636e\u5f62\u53c2\u540d\u5b57\u4e0e\u6709\u65e0\u5f62\u53c2\u6765\u533a\u522b\u51fd\u6570\u3002 B. \u4e0d\u53ef\u6839\u636e\u8fd4\u56de\u503c\u7c7b\u578b\u4e0d\u540c\u6765\u533a\u522b\u51fd\u6570\u3002 D. \u7f3a\u7701\u503c\u9020\u6210\u4e8c\u4e49\u6027\uff0c\u7f16\u8bd1\u5931\u8d25\u3002 \u3010\u4f8b\u9898 2\u3011 1 2 3 4 5 6 7 8 9 10 11 12 #include <iostream> using namespace std ; int fun ( int a ) { return a + 1 ; } float fun ( float a ) { return a ; } int fun ( int a , int b ) { return a + b ; } int main () { float a = 1.5 ; int b = 2 ; cout << fun ( fun ( a , b )) + fun ( fun ( a ), b ) << endl ; return 0 ; } fun(fun(a, b)) \u4e2d\u91cc\u5c42\u7684 fun(a, b) \u8c03\u7528 int fun(int a, int b) \uff0c\u76f4\u63a5\u5bf9 float a \u8fdb\u884c\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u5e76\u5411\u4e0b\u53d6\u6574\uff0c\u5373 fun(1, 2) \uff0c\u6545\u800c\u8fd4\u56de 3 \u4e14\u4e3a int \u7c7b\u578b\u3002\u8c03\u7528 int fun(int a = 1) \uff0c\u8fd4\u56de 4 \u3002 fun(fun(a), b) \u4e2d\u91cc\u5c42 fun(a) \u8c03\u7528 float fun(float a) \uff0c\u8fd4\u56de float 1.5 \uff0c\u63a5\u7740 fun(1.5, 2) \uff0c\u6b64\u5904\u4ec5\u53ef\u4ee5\u8c03\u7528 int fun(int a, int b) \uff0c\u6545\u800c\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u4e14\u5411\u4e0b\u53d6\u6574\uff0c\u5373 fun(1, 2) \u3002\u8fd4\u56de 3 \u3002 \u7efc\u4e0a\uff0c\u7b54\u6848\u4e3a 7 \u3002","title":"\u7f3a\u7701\u503c\u4fdd\u62a4"},{"location":"languages/c-oop/function/#auto-decltype","text":"","title":"auto \u4e0e decltype \u7c7b\u578b\u63a8\u65ad"},{"location":"languages/c-oop/function/#_9","text":"\u81ea\u52a8\u786e\u5b9a\u53d8\u91cf\u7684\u7c7b\u578b auto \u5173\u952e\u5b57\u53ef\u4ee5\u5141\u8bb8\u7531\u7f16\u8bd1\u5668\u6839\u636e\u4e0a\u4e0b\u6587\u81ea\u52a8\u786e\u5b9a\u53d8\u91cf\u7c7b\u578b\u3002\u4f8b\u5982\uff1a 1 2 3 4 5 auto i = 3 ; // i \u662f int \u578b\u53d8\u91cf auto f = 4.0f ; // f \u662f float \u578b\u53d8\u91cf auto a ( 'c' ); // a \u662f char \u578b\u53d8\u91cf auto b = a ; // b \u662f char \u578b\u53d8\u91cf auto * x = new auto ( 3 ); // x \u662f int* \u578b\u53d8\u91cf \u8ffd\u8e2a\u8fd4\u56de\u7c7b\u578b\u7684\u51fd\u6570 \u53ef\u4ee5\u5c06\u51fd\u6570\u8fd4\u56de\u7c7b\u578b\u7684\u58f0\u660e\u4fe1\u606f\u653e\u5230\u51fd\u6570\u53c2\u6570\u5217\u8868\u540e\u8fdb\u884c\u58f0\u660e\u3002 1 2 3 4 // \u666e\u901a\u51fd\u6570\u58f0\u660e\u5f62\u5f0f int func ( char * ptr , int val ); // \u8ffd\u8e2a\u8fd4\u56de\u7c7b\u578b\u7684\u51fd\u6570\u58f0\u660e\u5f62\u5f0f auto func ( char * ptr , int val ) -> int ; \u8ffd\u8e2a\u8fd4\u56de\u7c7b\u578b\u5728\u539f\u672c\u51fd\u6570\u8fd4\u56de\u503c\u7684\u4f4d\u7f6e\u4f7f\u7528 auto \u5173\u952e\u5b57\u3002 \u5728\u8fd9\u4e00\u4f8b\u5b50\u4e2d\uff0c auto \u5173\u952e\u5b57\u5e76\u6ca1\u6709\u5b9e\u8d28\u4f5c\u7528\uff0c\u7136\u800c\u5728\u6cdb\u578b\u7f16\u7a0b\u4e2d\uff0c auto \u6709\u7740\u5de8\u5927\u7684\u4f5c\u7528\u3002 \u5728\u6a21\u677f\u7c7b\u578b\u63a8\u5bfc\u8fc7\u7a0b\u4e2d\uff0c\u6bd4\u5982\u4e0b\u5217\u4ee3\u7801\uff1a 1 2 3 4 template < typename T1 , typename T2 > decltype ( t1 + t2 ) sum ( T1 & t1 , T2 & t2 ) { return t1 + t2 ; } \u5728\u4e0a\u9762\u8fd9\u4e2a\u51fd\u6570\u5b9a\u4e49\u4e2d\uff0c decltype \u65e0\u6cd5\u63a8\u5bfc\u51fa t1 + t2 \u7684\u7c7b\u578b\uff0c\u56e0\u4e3a\u7f16\u8bd1\u5668\u662f\u4ece\u5de6\u5411\u53f3\u5904\u7406\u7684\uff0c\u5f53\u5904\u7406\u5230 decltype \u7684\u65f6\u5019\uff0c\u7f16\u8bd1\u5668\u8fd8\u4e0d\u77e5\u9053 t1 + t2 \u7684\u7c7b\u578b\u3002\u8ffd\u8e2a\u8fd4\u56de\u51fd\u6570\u5c31\u662f\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u800c\u751f\u7684\uff0c\u4e0a\u9762\u7684\u51fd\u6570\u6211\u4eec\u53ef\u4ee5\u58f0\u660e\u5982\u4e0b\uff1a 1 2 3 4 template < typename T1 , typename T2 > auto sum ( T1 & t1 , T2 & t2 ) -> decltype ( t1 + t2 ) { return t1 + t2 ; } \u5982\u6b64\uff0c decltype \u5c31\u53ef\u4ee5\u6839\u636e t1 \u3001 t2 \u7684\u7c7b\u578b\u63a8\u5bfc\u51fa\u51fd\u6570 sum \u7684\u8fd4\u56de\u7c7b\u578b\u3002 auto \u7684\u8fdb\u4e00\u6b65\u9610\u8ff0 auto \u5e76\u4e0d\u80fd\u4ee3\u8868\u4e00\u4e2a\u5b9e\u9645\u7684\u7c7b\u578b\u58f0\u660e\uff0c\u53ea\u662f\u4e00\u4e2a\u7c7b\u578b\u58f0\u660e\u7684\u201c\u5360\u4f4d\u7b26\u201d\u3002\u4f7f\u7528 auto \u58f0\u660e\u7684\u53d8\u91cf\u5fc5\u987b\u9a6c\u4e0a\u521d\u59cb\u5316\uff0c\u4ee5\u8ba9\u7f16\u8bd1\u5668\u63a8\u65ad\u51fa\u5b83\u7684\u7c7b\u578b\uff0c\u5e76\u4e14\u5728\u7f16\u8bd1\u65f6\u5c06 auto \u5360\u4f4d\u7b26\u66ff\u6362\u4e3a\u771f\u6b63\u7684\u7c7b\u578b\u3002","title":"\u4f5c\u7528\u4e0e\u610f\u4e49"},{"location":"languages/c-oop/function/#auto","text":"auto \u53d8\u91cf\u5fc5\u987b\u5728\u7f16\u8bd1\u671f\u786e\u5b9a\u5176\u7c7b\u578b auto \u53d8\u91cf\u5fc5\u987b\u5728\u5b9a\u4e49\u65f6\u521d\u59cb\u5316\uff1a 1 auto a ; // \u9519\u8bef\uff0c\u672a\u521d\u59cb\u5316 \u540c\u4e00\u4e2a auto \u5173\u952e\u5b57\u5e94\u5c06\u53d8\u91cf\u63a8\u5bfc\u4e3a\u540c\u4e00\u7c7b\u578b\uff1a 1 auto b4 = 10 , b5 = 20.0 , b6 = 'a' ; // \u9519\u8bef\uff0c\u6ca1\u6709\u63a8\u5bfc\u4e3a\u540c\u4e00\u7c7b\u578b \u53c2\u6570\u4e0d\u80fd\u88ab\u58f0\u660e\u4e3a auto \uff1a 1 void func ( auto a ) { } // \u9519\u8bef auto \u5e76\u4e0d\u662f\u4e00\u4e2a\u771f\u6b63\u7684\u7c7b\u578b\u3002\u4e0d\u80fd\u4f7f\u7528\u4e00\u4e9b\u4ee5\u7c7b\u578b\u4e3a\u64cd\u4f5c\u6570\u7684\u64cd\u4f5c\u7b26\uff0c\u5982 sizeof \u6216\u8005 typeid \uff1a 1 cout << sizeof ( auto ) << endl ; // \u9519\u8bef","title":"auto \u7684\u5176\u4ed6\u6027\u8d28"},{"location":"languages/c-oop/function/#decltype","text":"\u914d\u5408 auto \u5173\u952e\u5b57\u4e00\u540c\u4f7f\u7528\uff0c\u4e3b\u8981\u7528\u4e8e\u6cdb\u578b\u7f16\u7a0b\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #include <bits/stdc++.h> using namespace std ; struct { char * name ; } anon_u ; struct { int d ; decltype ( anon_u ) id ; // \u6ca1\u6709\u544a\u8bc9 id \u7684\u7c7b\u578b\uff0c\u7528 decltype \u81ea\u52a8\u63a8\u5bfc } anon_s [ 100 ]; // \u533f\u540d\u7684 struct \u6570\u7ec4 int main () { decltype ( anon_s ) as ; // \u6ce8\u610f as \u7684\u7c7b\u578b\u3002 cin >> as [ 0 ]. id . name ; return 0 ; } \u7b2c\u4e00\u4e2a decltype \u7684\u7406\u89e3\u662f\uff0c\u7f16\u8bd1\u5668\u6839\u636e anon_u \u7684\u7ed3\u6784\u63a8\u5bfc\u51fa\u4e00\u4e2a\u7c7b\u578b\uff0c\u5e76\u521b\u5efa\u4e86\u8fd9\u4e2a\u7c7b\u578b\u7684\u65b0\u53d8\u91cf id \u3002 \u7b2c\u4e8c\u4e2a decltype \u7684\u7406\u89e3\u662f\uff0c\u7f16\u8bd1\u5668\u6839\u636e anon_s \u7684\u7ed3\u6784\u63a8\u5bfc\u51fa\u4e00\u4e2a\u7c7b\u578b\uff0c\u8fd9\u4e2a\u7c7b\u578b\u662f\u67d0\u4e2a\u533f\u540d\u7684\u7ed3\u6784\u4f53\u6570\u7ec4\u3002\u5e76\u521b\u5efa\u4e86\u8fd9\u4e2a\u7ed3\u6784\u4f53\u6570\u7ec4\u7c7b\u578b\u7684\u65b0\u53d8\u91cf as \uff0c as \u4e5f\u662f\u4e00\u4e2a\u7ed3\u6784\u4f53\u6570\u7ec4\uff08\u5982\u679c decltype \u62ec\u53f7\u91cc\u9762\u7684\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u90a3\u4e48\u63a8\u5bfc\u51fa\u7684\u7c7b\u578b\u4e5f\u662f\u4e2a\u6570\u7ec4\uff0c\u800c\u4e0d\u662f\u8fd9\u4e2a\u6570\u7ec4\u91cc\u6bcf\u4e00\u4e2a\u5143\u7d20\u7684\u7c7b\u578b\uff09\u3002 \u914d\u5408 auto \u63a8\u5bfc\u51fa\u8fd4\u56de\u503c\u7c7b\u578b\uff1a 1 2 3 auto func ( int x , int y ) -> decltype ( x + y ) { return x + y ; } C++14 \u4e2d\u4e0d\u518d\u9700\u8981\u663e\u5f0f\u6307\u5b9a\u8fd4\u56de\u7c7b\u578b\uff1a 1 auto func ( int x , int y ) { return x + y ; }","title":"decltype \u5173\u952e\u5b57"},{"location":"languages/c-oop/function/#auto_1","text":"\u7528\u4e8e\u4ee3\u66ff\u5197\u957f\u590d\u6742\u3001\u53d8\u91cf\u4f7f\u7528\u8303\u56f4\u4e13\u4e00\u7684\u53d8\u91cf\u58f0\u660e\u3002\u6211\u4eec\u73b0\u5728\u5b66\u4e60\u7684\u7c7b\u578b\u90fd\u5e76\u4e0d\u590d\u6742\uff0c\u968f\u7740\u6a21\u677f\u7684\u5b66\u4e60\uff0c\u7c7b\u578b\u4f1a\u8d8a\u53d1\u590d\u6742\u3002 1 2 3 std :: vector < std :: string > vs ; for ( std :: vector < std :: string >:: iterator i = vs . begin (); i != vs . end (); i ++ ) { } \u4e0a\u8ff0\u4ee3\u7801\u53ef\u4ee5\u7b49\u4ef7\u66ff\u6362\u4e3a\uff1a 1 2 std :: vector < std :: string > vs ; for ( auto i = vs . begin (); i != vs . end (); i ++ ) { } \u53e6\u5916\uff0c\u6709\u65f6\u5019\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u786e\u5b9a\u6a21\u677f\u51fd\u6570\u7684\u8fd4\u56de\u503c\u7684\u7c7b\u578b\uff0c\u5219\u53ef\u5728\u5b9a\u4e49\u6a21\u677f\u51fd\u6570\u65f6\uff0c\u7528\u4e8e\u58f0\u660e\u4f9d\u8d56\u6a21\u677f\u53c2\u6570\u7684\u53d8\u91cf\u7c7b\u578b\u3002 1 2 3 4 5 template < typename _Tx , typename _Ty > void multiply ( _Tx x , _Ty y ) { auto v = x * y ; std :: cout << v ; } \u7ed3\u5408 auto \u548c decltype \uff0c\u8fd8\u53ef\u4ee5\u81ea\u52a8\u8ffd\u8e2a\u8fd4\u56de\u7c7b\u578b\uff1a 1 2 3 4 template < typename _Tx , typename _Ty > auto multiply ( _Tx x , _Ty y ) -> decltype ( x * y ) { return x * y ; } \u4f8b\u9898 \u3010\u4f8b\u9898 1\u3011 \u8be5\u9898\u975e\u5e38\u8be6\u7ec6\u7684\u89e3\u7b54\u5728 OOP \u8bfe\u7a0b\u7684 QA \u5899 \u4e0a\u3002 \u3010\u4f8b\u9898 2\u3011 \u9898\u76ee\u5e76\u4e0d\u96be\uff0c\u4f46\u662f\u6b64\u5904\u7684\u904d\u5386\u8fd9\u5f88\u6709\u8bb2\u7a76\u3002 1 2 3 4 5 6 7 8 #include <iostream> using namespace std ; int main () { for ( auto x : \"123\" ) { cout << x << '-' ; } // \"1-2-3--\" return 0 ; } \u6ce8\u610f\u5230 3 \u4e4b\u540e\u6709\u4e24\u4e2a - \u3002\u6211\u4eec\u66f4\u6362\u5faa\u73af\u65b9\u5f0f\uff1a 1 2 3 4 5 6 7 8 #include <iostream> using namespace std ; int main () { for ( auto x : { 1 , 2 , 3 }) { cout << x << '-' ; } // \"1-2-3-\" return 0 ; } \u5176\u5b9e\u662f\u5b57\u7b26\u6570\u7ec4\u7ed3\u5c3e\u7684 \\0 \u4e5f\u88ab\u904d\u5386\u4e86\uff0c\u4f46\u662f\u65e0\u6cd5\u8f93\u51fa\u3002 \u4e0b\u9762\u7b80\u5355\u8bf4\u660e \\0 \u548c\u7a7a\u683c\u7684\u5dee\u522b\uff1a \u7a7a\u5b57\u7b26\u7684\u957f\u5ea6\u4e3a 0\uff0c\u7a7a\u683c\u7b26\u7684\u957f\u5ea6\u4e3a 1\u3002 1 2 3 4 char a [] = \" \\0 \" ; char b [] = \" \" ; cout << strlen ( a ) << endl ; // 0 cout << strlen ( b ) << endl ; // 1 \\0 \u6807\u8bb0\u5b57\u7b26\u4e32\u7ed3\u675f\u3002 1 2 3 4 char crr [] = \"a b\" ; char brr [] = \"a \\0 b\" ; cout << strlen ( crr ) << endl ; // 3 cout << strlen ( brr ) << endl ; // 1 \u8f93\u51fa\u5230\u5c4f\u5e55\u4e0a\uff0c \\0 \u4ec0\u4e48\u90fd\u6ca1\u6709\uff0c\u800c\u7a7a\u683c\u662f\u7a7a\u683c\u3002","title":"auto \u7684\u4f18\u52bf"},{"location":"languages/c-oop/function/#_10","text":"","title":"\u5c01\u88c5\u4e0e\u5185\u8054\u51fd\u6570"},{"location":"languages/c-oop/function/#_11","text":"\u8fd9\u91cc\u4f7f\u7528\u4e86\u7c7b\u7684\u8bed\u6cd5\uff0c\u8fd9\u7c7b\u8bed\u6cd5\u4f1a\u5728\u540e\u7eed\u8bb2\u89e3\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 #include <iostream> using namespace std ; class A { private : int a ; void f ( int i = 2 ) { a = i ; } public : void f ( int i , int j = 2 ) { a = i + j ; } int get_a () { return a ; } }; int main () { A aa ; aa . f ( 1 ); cout << aa . get_a () << endl ; return 0 ; } \u8fd9\u6bb5\u4ee3\u7801\u4f1a\u62a5\u9519 call to member function 'f' is ambiguous \u3002 \u4e0d\u8fc7\u7ed9\u4eba\u7684\u611f\u89c9\u662f\uff0c\u6211\u7684 void f(int i = 2) \u662f\u4e00\u4e2a\u79c1\u6709\u51fd\u6570\uff0c\u7406\u8bba\u4e0a\u5728\u4e3b\u51fd\u6570\u91cc\u9762\u662f\u65e0\u6cd5\u8bbf\u95ee\u7684\uff0c\u6240\u4ee5\u4e0d\u5e94\u8be5\u4f1a\u53d1\u751f\u8c03\u7528\u3002 \u5b9e\u9645\u4e0a\uff0c\u7f16\u8bd1\u5668\u770b\u5230 aa.f \u7684\u65f6\u5019\u4f1a\u5148\u627e\u51fa\u6240\u6709\u7684 f \uff0c\u5224\u65ad\u8c03\u7528\u6b63\u786e\u4e4b\u540e\u624d\u5224\u65ad\u6743\u9650\u662f\u5426\u6b63\u786e\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u51fd\u6570\u8c03\u7528\u4f18\u5148\u5339\u914d\u53c2\u6570\u5bf9\u5e94\u6027\uff0c\u518d\u5224\u65ad\u6743\u9650\u5408\u7406\u6027\u3002\u7f16\u8bd1\u4e3a\u6c47\u7f16\u8bed\u8a00\u540e\u7684\u7a0b\u5e8f\u91cc\u4e24\u4e2a f \u662f\u4e0d\u5206\u662f\u5426\u662f\u79c1\u6709\u7684\uff0c\u6743\u9650\u7684\u8bed\u6cd5\u68c0\u67e5\u5728\u7f16\u8bd1\u4e4b\u540e\u3002","title":"\u51fd\u6570\u6743\u9650\u548c\u51fd\u6570\u91cd\u8f7d\u7684\u5148\u540e"},{"location":"languages/c-oop/function/#_12","text":"\u5b9a\u4e49\u4e0e\u610f\u4e49 \u51fd\u6570\u8c03\u7528\u8981\u8fdb\u884c\u4e00\u7cfb\u5217\u51c6\u5907\u548c\u540e\u5904\u7406\u5de5\u4f5c\uff08\u538b\u6808\u3001\u8df3\u8f6c\u3001\u9000\u6808\u3001\u8fd4\u56de\u7b49\uff09\uff0c\u6240\u4ee5\u51fd\u6570\u8c03\u7528\u662f\u4e00\u4e2a\u6bd4\u8f83\u6162\u7684\u8fc7\u7a0b\u3002\u5982\u679c\u5bf9\u4e8e\u4e00\u4e2a\u7b80\u5355\u7684\u51fd\u6570\u8fdb\u884c\u5927\u91cf\u7684\u8c03\u7528\uff0c\u4f1a\u964d\u4f4e\u7a0b\u5e8f\u6548\u7387\u3002 \u6bd4\u8f83\u4e0b\u9762\u4e24\u79cd\u5b9e\u73b0\u65b9\u5f0f\uff0c\u51fd\u6570\u6bd4\u7b49\u4ef7\u7684\u8868\u8fbe\u5f0f\u6548\u7387\u66f4\u4f4e\u3002 1 2 cout << max ( a , b ) << endl ; cout << ( a > b ? a : b ) << endl ; \u4f7f\u7528\u5185\u8054\u51fd\u6570\uff0c\u7f16\u8bd1\u5668\u81ea\u52a8\u4ea7\u751f\u7b49\u4ef7\u7684\u8868\u8fbe\u5f0f\u3002 1 2 3 4 inline int max ( int a , int b ) { return a > b ? a : b ; } cout << max ( a , b ) << endl ; \u4e0a\u8ff0\u4ee3\u7801\u7b49\u4ef7\u4e8e\uff1a 1 cout << ( a > b ? a : b ) << endl ; \u5185\u8054\u51fd\u6570\u548c\u5b8f\u5b9a\u4e49\u7684\u533a\u522b \u5728\u5e26\u53c2\u6570\u5b8f\u7684\u90e8\u5206\u4e2d\u6211\u4eec\u63d0\u5230\u8fc7\uff0c\u7531\u4e8e\u5e26\u53c2\u6570\u5b8f\u5177\u6709\u9ad8\u5ea6\u6b67\u4e49\u6027\uff0c\u6545\u800c\u5f80\u5f80\u88ab\u5185\u8054\u51fd\u6570\u66ff\u4ee3\u3002\u4e24\u8005\u533a\u522b\u5728\uff1a \u5b8f\u5b9a\u4e49\u53ea\u662f\u62f7\u8d1d\u4ee3\u7801\u5230\u88ab\u8c03\u7528\u7684\u5730\u65b9\uff0c\u800c\u5185\u8054\u51fd\u6570\u5219\u662f\u751f\u6210\u548c\u51fd\u6570\u7b49\u4ef7\u7684\u8868\u8fbe\u5f0f\u3002 \u5185\u8054\u51fd\u6570\u53ef\u4ee5\u6267\u884c\u7c7b\u578b\u68c0\u67e5\uff0c\u8fdb\u884c\u7f16\u8bd1\u671f\u9519\u8bef\u68c0\u67e5\u3002 \u5185\u8054\u51fd\u6570\u53ef\u8c03\u8bd5\uff0c\u800c\u5b8f\u5b9a\u4e49\u7684\u51fd\u6570\u4e0d\u53ef\u8c03\u8bd5\u3002 \u5728 Debug \u7248\u672c\uff0c\u5185\u8054\u51fd\u6570\u6ca1\u6709\u771f\u6b63\u5185\u8054\uff0c\u800c\u662f\u548c\u4e00\u822c\u51fd\u6570\u4e00\u6837\uff0c\u56e0\u6b64\u5728\u8be5\u9636\u6bb5\u53ef\u4ee5\u88ab\u8c03\u8bd5\u3002 \u5728 Release \u7248\u672c\uff0c\u5185\u8054\u51fd\u6570\u5b9e\u73b0\u4e86\u771f\u6b63\u7684\u5185\u8054\uff0c\u589e\u52a0\u6267\u884c\u6548\u7387\u3002 \u5b8f\u5b9a\u4e49\u7684\u51fd\u6570\u65e0\u6cd5\u64cd\u4f5c\u79c1\u6709\u6570\u636e\u6210\u5458\u3002 \u5185\u8054\u51fd\u6570\u7684\u6ce8\u610f\u4e8b\u9879 \u907f\u514d\u5bf9\u5927\u6bb5\u4ee3\u7801\u4f7f\u7528\u5185\u8054\u4fee\u9970\u7b26\u3002\u8fd9\u662f\u56e0\u4e3a\u5185\u8054\u4fee\u9970\u7b26\u76f8\u5f53\u4e8e\u628a\u8be5\u51fd\u6570\u5728\u6240\u6709\u88ab\u8c03\u7528\u7684\u5730\u65b9\u62f7\u8d1d\u4e86\u4e00\u4efd\uff0c\u6240\u4ee5\u5927\u6bb5\u4ee3\u7801\u7684\u5185\u8054\u4fee\u9970\u4f1a\u589e\u52a0\u8d1f\u62c5\u3002 \u907f\u514d\u5bf9\u5305\u542b\u5faa\u73af\u6216\u8005\u590d\u6742\u63a7\u5236\u7ed3\u6784\u7684\u51fd\u6570\u4f7f\u7528\u5185\u8054\u5b9a\u4e49\u3002\u56e0\u4e3a\u5185\u8054\u51fd\u6570\u4f18\u5316\u7684\uff0c\u53ea\u662f\u5728\u51fd\u6570\u8c03\u7528\u7684\u65f6\u5019\uff0c\u4f1a\u4ea7\u751f\u7684\u538b\u6808\u3001\u8df3\u8f6c\u3001\u9000\u6808\u548c\u8fd4\u56de\u7b49\u64cd\u4f5c\u3002\u6240\u4ee5\u5982\u679c\u51fd\u6570\u5185\u90e8\u6267\u884c\u4ee3\u7801\u7684\u65f6\u95f4\u6bd4\u51fd\u6570\u8c03\u7528\u7684\u65f6\u95f4\u957f\u5f97\u591a\uff0c\u4f18\u5316\u51e0\u4e4e\u53ef\u4ee5\u5ffd\u7565\u3002 \u4e0d\u53ef\u5c06\u5185\u8054\u51fd\u6570\u7684\u58f0\u660e\u548c\u5b9a\u4e49\u5206\u5f00\uff08\u4e0d\u540c\u4e8e\u5927\u591a\u6570\u51fd\u6570\u5c06\u751f\u547d\u548c\u5b9a\u4e49\u5206\u522b\u5199\u5728\u5934\u6587\u4ef6\u548c\u6e90\u6587\u4ef6\u91cc\uff09\u3002\u7f16\u8bd1\u5668\u7f16\u8bd1\u65f6\u9700\u8981\u5f97\u5230\u5185\u8054\u51fd\u6570\u7684\u5b9e\u73b0\uff0c\u56e0\u6b64\u591a\u6587\u4ef6\u7f16\u8bd1\u65f6\u5185\u8054\u51fd\u6570\u5148\u9700\u8981\u5c06\u5b9e\u73b0\u5199\u5728\u5934\u6587\u4ef6\u4e2d\uff0c\u5426\u5219\u65e0\u6cd5\u5b9e\u73b0\u5185\u8054\u6548\u679c\u3002 \u5b9a\u4e49\u5728\u7c7b\u58f0\u660e\u4e2d\u7684\u51fd\u6570\u9ed8\u8ba4\u4e3a\u5185\u8054\u51fd\u6570\uff08\u4f46\u51fd\u6570\u4e00\u822c\u90fd\u4e0d\u5b9a\u4e49\u5728\u7c7b\u58f0\u660e\u5185\uff09\u3002\u4e00\u822c\u6784\u9020\u51fd\u6570\u3001\u6790\u6784\u51fd\u6570\u90fd\u88ab\u5b9a\u4e49\u4e3a\u5185\u8054\u51fd\u6570\u3002 \u5185\u8054\u4fee\u9970\u7b26\u66f4\u50cf\u662f\u5efa\u8bae\u800c\u4e0d\u662f\u547d\u4ee4\u3002\u7f16\u8bd1\u5668 \u6709\u6743 \u62d2\u7edd\u4e0d\u5408\u7406\u7684\u8bf7\u6c42\uff0c\u4f8b\u5982\u7f16\u8bd1\u5668\u8ba4\u4e3a\u67d0\u4e2a\u51fd\u6570\u4e0d\u503c\u5f97\u5185\u8054\uff0c\u5c31\u4f1a\u5ffd\u7565\u5185\u8054\u4fee\u9970\u7b26\u3002 \u7f16\u8bd1\u5668\u4f1a\u5bf9\u4e00\u4e9b\u6ca1\u6709\u5185\u8054\u4fee\u9970\u7b26\u7684\u51fd\u6570\uff0c\u81ea\u884c\u5224\u65ad\u53ef\u5426\u8f6c\u5316\u4e3a\u5185\u8054\u51fd\u6570\uff0c\u4e00\u822c\u4f1a\u9009\u62e9\u77ed\u5c0f\u7684\u51fd\u6570\u3002","title":"\u5185\u8054\u51fd\u6570"},{"location":"languages/c-oop/polymorphism-and-templates/","text":"\u591a\u6001\u4e0e\u6a21\u677f \u00b6 \u62bd\u8c61\u7c7b\u4e0e\u7eaf\u865a\u51fd\u6570 \u00b6 \u5b9a\u4e49 \u00b6 \u865a\u51fd\u6570\u8fd8\u53ef\u4ee5\u8fdb\u4e00\u6b65\u58f0\u660e\u4e3a\u7eaf\u865a\u51fd\u6570\uff0c\u53ea\u8981\u5305\u542b\u6709\u4e00\u4e2a\u7eaf\u865a\u51fd\u6570\u7684\u7c7b\uff0c\u5373\u4e3a\u201c\u62bd\u8c61\u7c7b\u201d\u3002\u8bed\u6cd5\u4e3a\u51fd\u6570\u6700\u540e\u52a0\u4e0a = 0 \u3002 \u9700\u8981\u6ce8\u610f\uff0c \u62bd\u8c61\u7c7b\u4e0d\u5141\u8bb8\u5b9a\u4e49\u5bf9\u8c61 \u3002 \u5b9a\u4e49\u57fa\u7c7b\u4e3a\u62bd\u8c61\u7c7b\uff0c\u4e3b\u8981\u7528\u9014\u662f\u4e3a\u6d3e\u751f\u7c7b\u89c4\u5b9a\u5171\u6027\u201c\u63a5\u53e3\u201d\u3002\u6b64\u5916\uff0c\u62bd\u8c61\u7c7b\u7684\u5b9a\u4e49\u80fd\u907f\u514d\u8d4b\u503c\u578b\u5bf9\u8c61\u5207\u7247\uff0c\u4fdd\u8bc1\u53ea\u6709\u6307\u9488\u548c\u5f15\u7528\u80fd\u88ab\u5411\u4e0a\u7c7b\u578b\u8f6c\u6362\uff08\u56e0\u4e3a\u62bd\u8c61\u7c7b\u65e0\u6cd5\u5b9a\u4e49\u5bf9\u8c61\uff0c\u4f46\u662f\u53ef\u4ee5\u6709\u6307\u9488\u548c\u5f15\u7528\u6307\u5411\u5b83\uff09\u3002 \u4f8b\u5982\uff1a 1 2 3 4 5 class A { public : virtual void f () = 0 ; // \u53ef\u5728\u7c7b\u5916\u5b9a\u4e49\u51fd\u6570\u4f53\u63d0\u4f9b\u9ed8\u8ba4\u5b9e\u73b0\u3002\u6d3e\u751f\u7c7b\u901a\u8fc7 A::f() \u8c03\u7528 }; A obj ; // \u4e0d\u51c6\u62bd\u8c61\u7c7b\u5b9a\u4e49\u5bf9\u8c61\uff01\u7f16\u8bd1\u4e0d\u901a\u8fc7\uff01 \u4ee5\u53ca\u66f4\u4e3a\u5177\u4f53\u7684\u4f8b\u5b50\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 #include <iostream> using namespace std ; class Pet { public : virtual void motion () = 0 ; }; void Pet::motion () { cout << \"Pet motion: \" << endl ; } class Dog : public Pet { public : void motion () override { Pet :: motion (); cout << \"dog run\" << endl ; } }; // \u91cd\u5199\u8986\u76d6\u540e\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5982 d1.Base::foo() \u6765\u8c03\u7528\u57fa\u7c7b\u51fd\u6570 class Bird : public Pet { public : void motion () override { Pet :: motion (); cout << \"bird fly\" << endl ; } }; int main () { Pet * p = new Dog ; // \u5411\u4e0a\u7c7b\u578b\u8f6c\u6362 p -> motion (); p = new Bird ; // \u5411\u4e0a\u7c7b\u578b\u8f6c\u6362 p -> motion (); // p = new Pet; // \u4e0d\u5141\u8bb8\u5b9a\u4e49\u62bd\u8c61\u7c7b\u5bf9\u8c61 return 0 ; } /* output: Pet motion: dog run Pet motion: bird fly */ \u6ce8\u610f\u5230\u5148\u524d\u6709\u63d0\u5230\u8fc7\uff0c\u91cd\u5199\u8986\u76d6 override \u4e0e\u91cd\u5199\u9690\u85cf redefining \u76f8\u4f3c\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5982 d1.Base::foo() \u6765\u8c03\u7528\u57fa\u7c7b\u51fd\u6570\u3002\u6b64\u4f8b\u4e2d\u867d\u7136\u53d1\u751f\u4e86\u91cd\u5199\u8986\u76d6\uff0c\u4f46\u662f\u901a\u8fc7\u76f4\u63a5\u8c03\u7528 Pet::motion() \u6765\u8c03\u7528\u4e86\u57fa\u7c7b\u51fd\u6570\u3002 \u62bd\u8c61\u7c7b\u7ee7\u627f \u00b6 \u57fa\u7c7b\u7eaf\u865a\u51fd\u6570\u88ab\u6d3e\u751f\u7c7b\u91cd\u5199\u8986\u76d6\u4e4b\u524d\u4ecd\u662f\u7eaf\u865a\u51fd\u6570\u3002\u56e0\u6b64\u5f53\u7ee7\u627f\u4e00\u4e2a\u62bd\u8c61\u7c7b\u65f6\uff0c\u9664\u7eaf\u865a\u6790\u6784\u51fd\u6570\u5916\uff08\u968f\u540e\u89e3\u91ca\uff09\uff0c\u5fc5\u987b\u5b9e\u73b0\u6240\u6709\u7eaf\u865a\u51fd\u6570\uff0c\u5426\u5219\u7ee7\u627f\u51fa\u7684\u7c7b\u4e5f\u662f\u62bd\u8c61\u7c7b\u3002 \u7eaf\u865a\u6790\u6784\u51fd\u6570 \u00b6 \u6790\u6784\u51fd\u6570\u4e5f\u53ef\u4ee5\u662f\u7eaf\u865a\u51fd\u6570\uff0c \u7eaf\u865a\u6790\u6784\u51fd\u6570\u4ecd\u7136\u9700\u8981\u51fd\u6570\u4f53 \u3002 \u76ee\u7684\uff1a\u4f7f\u57fa\u7c7b\u6210\u4e3a\u62bd\u8c61\u7c7b\uff0c\u4e0d\u80fd\u521b\u5efa\u57fa\u7c7b\u7684\u5bf9\u8c61\u3002\u5982\u679c\u6709\u5176\u4ed6\u51fd\u6570\u662f\u7eaf\u865a\u51fd\u6570\uff0c\u5219\u6790\u6784\u51fd\u6570\u65e0\u8bba\u662f\u5426\u4e3a\u7eaf\u865a\u7684\uff0c\u57fa\u7c7b\u5747\u4e3a\u62bd\u8c61\u7c7b\u3002 \u5b9e\u9645\u4e0a\u7f16\u7a0b\u7684\u65f6\u5019\u4e0d\u4f1a\u5199\u7eaf\u865a\u6790\u6784\u51fd\u6570\uff0c\u53ea\u9700\u8981\u5199\u865a\u6790\u6784\u51fd\u6570\u5c31\u53ef\u4ee5\u4e86\u3002 \u7eaf\u865a\u6790\u6784\u51fd\u6570\u548c\u5176\u4ed6\u7eaf\u865a\u51fd\u6570\u7684\u533a\u522b \u00b6 \u4e00\u822c\u7684\u7eaf\u865a\u51fd\u6570\u88ab\u6d3e\u751f\u7c7b\u91cd\u5199\u8986\u76d6\u4e4b\u524d\u4ecd\u662f\u7eaf\u865a\u51fd\u6570\u3002\u5982\u679c\u6d3e\u751f\u7c7b\u4e0d\u8986\u76d6\u7eaf\u865a\u51fd\u6570\uff0c\u90a3\u4e48\u6d3e\u751f\u7c7b\u4e5f\u662f\u62bd\u8c61\u7c7b\u3002 \u4f46\u5bf9\u4e8e\u5bf9\u4e8e\u7eaf\u865a\u6790\u6784\u51fd\u6570\u800c\u8a00\uff0c\u5373\u4fbf\u6d3e\u751f\u7c7b\u4e2d\u4e0d\u663e\u5f0f\u5b9e\u73b0\u6790\u6784\u51fd\u6570\uff0c\u7f16\u8bd1\u5668\u4e5f\u4f1a\u81ea\u52a8\u5408\u6210\u9ed8\u8ba4\u6790\u6784\u51fd\u6570\uff0c\u5b8c\u6210\u91cd\u5199\u8986\u76d6\uff0c\u4f7f\u5f97\u6d3e\u751f\u7c7b\u4e0d\u662f\u62bd\u8c61\u7c7b\u3002\u6545\u800c\uff0c\u5373\u4f7f\u6d3e\u751f\u7c7b\u4e0d\u663e\u5f0f\u8986\u76d6\u7eaf\u865a\u6790\u6784\u51fd\u6570\uff0c\u53ea\u8981\u6d3e\u751f\u7c7b\u5b8c\u5168\u8986\u76d6\u4e86\u5176\u4ed6\u7eaf\u865a\u51fd\u6570\uff0c\u8be5\u6d3e\u751f\u7c7b\u5c31\u4e0d\u662f\u62bd\u8c61\u7c7b\uff0c\u53ef\u4ee5\u5b9a\u4e49\u6d3e\u751f\u7c7b\u5bf9\u8c61\u3002 \u4f8b\u5b50 \u4f8b 1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 #include <iostream> using namespace std ; class Base { public : virtual void func () = 0 ; }; class Derive1 : public Base { }; // Derive1 \u4ecd\u4e3a\u62bd\u8c61\u7c7b class Derive2 : public Base { public : void func () { cout << \"Derive2::func\" << endl ; } }; int main () { // Derive1 d1; // \u7f16\u8bd1\u9519\u8bef\uff0cDerive1 \u4ecd\u4e3a\u62bd\u8c61\u7c7b Derive2 d2 ; d2 . func (); return 0 ; } /* output: Derive2::func */ \u4f8b 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 #include <iostream> using namespace std ; class Base { public : virtual ~ Base () = 0 ; }; Base ::~ Base () { cout << \"Base destroyed\" << endl ; } class Derive1 : public Base { }; class Derive2 : public Base { public : virtual ~ Derive2 () { cout << \"Derive2 destroyed\" << endl ; } }; int main () { Base * p1 = new Derive1 ; Base * p2 = new Derive2 ; delete p1 ; cout << \"------\" << endl ; delete p2 ; return 0 ; } /* output: Base destroyed ------ Derive2 destroyed Base destroyed */ \u4f8b\u9898 \u4e00\u4e9b\u9009\u9879\u7684\u89e3\u91ca\uff1a A. \u665a\u6346\u7ed1\u4f9d\u8d56\u4e8e\u865a\u51fd\u6570\u8868\u4e0e\u865a\u51fd\u6570\uff0c\u53ea\u5bf9\u7c7b\u4e2d\u865a\u51fd\u6570\u8d77\u4f5c\u7528\uff0c\u5e76\u4e14\u53ea\u5bf9\u57fa\u7c7b\u6307\u9488\u548c\u5f15\u7528\u8d77\u4f5c\u7528\u3002 D. \u4e00\u4e2a\u7eaf\u865a\u51fd\u6570\u5c31\u4f1a\u4f7f\u5f97\u4e00\u4e2a\u7c7b\u6210\u4e3a\u7eaf\u865a\u51fd\u6570\u3002 \u5411\u4e0b\u7c7b\u578b\u8f6c\u6362 \u00b6 \u5b9a\u4e49 \u00b6 \u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61\u7684\u57fa\u7c7b\u6307\u9488\u3001\u5f15\u7528\u8f6c\u6362\u6210\u6d3e\u751f\u7c7b\u6307\u9488\u3001\u5f15\u7528\uff0c\u5219\u79f0\u4e3a\u5411\u4e0b\u7c7b\u578b\u8f6c\u6362\uff08\u7c7b\u5c42\u6b21\u4e2d\u5411\u4e0b\u79fb\u52a8\uff09\u3002 \u5f53\u6211\u4eec\u7528\u57fa\u7c7b\u6307\u9488\u8868\u793a\u5404\u79cd\u6d3e\u751f\u7c7b\u65f6\uff08\u5411\u4e0a\u7c7b\u578b\u8f6c\u6362\uff09\uff0c\u4fdd\u7559\u4e86\u4ed6\u4eec\u7684\u5171\u6027\uff0c\u4f46\u662f\u4e22\u5931\u4e86\u4ed6\u4eec\u7684\u7279\u6027\u3002\u5982\u679c\u6b64\u65f6\u8981\u8868\u73b0\u7279\u6027\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u5411\u4e0b\u7c7b\u578b\u8f6c\u6362\u3002 \u6bd4\u5982\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u57fa\u7c7b\u6307\u9488\u6570\u7ec4\u5bf9\u5404\u79cd\u6d3e\u751f\u7c7b\u5bf9\u8c61\u8fdb\u884c\u7ba1\u7406\uff0c\u5f53\u5177\u4f53\u5904\u7406\u65f6\u6211\u4eec\u53ef\u4ee5\u5c06\u57fa\u7c7b\u6307\u9488\u8f6c\u6362\u4e3a\u5b9e\u9645\u7684\u6d3e\u751f\u7c7b\u6307\u9488\uff0c\u8fdb\u800c\u8c03\u7528\u6d3e\u751f\u7c7b\u4e13\u6709\u7684\u63a5\u53e3\u3002 \u4f46\u662f\u9700\u8981\u6ce8\u610f\u5230\uff0c\u8fd9\u91cc\u662f\u8bf4\u7528\u57fa\u7c7b\u6307\u9488\u53ef\u4ee5\u7ba1\u7406\u6d3e\u751f\u7c7b\uff0c\u6545\u800c\u53ef\u4ee5\u628a\u8fd9\u4e2a\u6307\u9488\u5411\u4e0b\u8f6c\u6362\uff0c\u751f\u6210\u5b9e\u9645\u4f7f\u7528\u7684\u6d3e\u751f\u7c7b\u6307\u9488\u3002\u4f46\u662f\uff0c\u5982\u679c\u662f\u57fa\u7c7b\u6307\u9488\u7ba1\u7406\u57fa\u7c7b\u5bf9\u8c61\uff0c\u4e5f\u5c31\u662f\u57fa\u7c7b\u6307\u9488\u672c\u6765\u5c31\u6307\u5411\u57fa\u7c7b\u5bf9\u8c61\u65f6\uff0c\u57fa\u7c7b\u5bf9\u8c61\u672c\u8eab\u5c31\u6ca1\u6709\u6d3e\u751f\u7c7b\u591a\u51fa\u7684\u6570\u636e\u548c\u670d\u52a1\uff0c\u8fd8\u8981\u628a\u8fd9\u4e2a\u57fa\u7c7b\u6307\u9488\u5411\u4e0b\u8f6c\u6362\u4e3a\u6d3e\u751f\u7c7b\u6307\u9488\uff0c\u8981\u4e48\u662f\u9519\u7684\uff0c\u8981\u4e48\u662f\u5371\u9669\u7684\u3002 \u8f6c\u6362\u65b9\u5f0f \u00b6 \u5b89\u5168\u5411\u4e0b\u7c7b\u578b\u8f6c\u6362\uff08\u57fa\u7c7b\u5411\u6d3e\u751f\u7c7b\u7684\u8f6c\u6362\uff09 \u00b6 C++ \u63d0\u4f9b\u4e86\u4e00\u4e2a\u7279\u6b8a\u7684\u663e\u5f0f\u7c7b\u578b\u8f6c\u6362\uff0c\u79f0\u4e3a dynamic_cast \uff0c\u662f\u4e00\u79cd\u5b89\u5168\u7684\u5411\u4e0b\u7c7b\u578b\u8f6c\u6362\u3002\u4f7f\u7528 dynamic_cast \u7684\u5bf9\u8c61\u5fc5\u987b\u6709\u865a\u51fd\u6570\uff0c\u56e0\u4e3a\u5b83\u4f7f\u7528\u4e86\u5b58\u50a8\u5728\u865a\u51fd\u6570\u8868\u4e2d\u7684\u4fe1\u606f\u5224\u65ad\u5b9e\u9645\u7684\u7c7b\u578b\u3002 \u6240\u8c13\u5bf9\u8c61\u5fc5\u987b\u6709\u865a\u51fd\u6570\uff0c\u5b9e\u9645\u4e0a\u662f\u6307\u6709\u7ee7\u627f\u5173\u7cfb\u65f6\uff0c\u57fa\u7c7b\u548c\u6d3e\u751f\u7c7b\u90fd\u6709\u865a\u51fd\u6570\u3002\u57fa\u7c7b\u6709\u865a\u51fd\u6570\uff0c\u662f\u591a\u6001\u7684\uff0c\u90a3\u4e48\u6d3e\u751f\u7c7b\u5f53\u7136\u4e5f\u6709\u865a\u51fd\u6570\u3002\u91cd\u5199\u8986\u76d6\u662f\u7528\u865a\u51fd\u6570\u8986\u76d6\u865a\u51fd\u6570\uff0c\u4ecd\u7136\u53ef\u4ee5\u7528 Base:: \u7684\u65b9\u5f0f\u8c03\u7528\u57fa\u7c7b\u865a\u51fd\u6570\uff0c\u4e0d\u7834\u574f\u591a\u6001\u6027\u3002\u800c\u91cd\u5199\u9690\u85cf\u66f4\u4e0d\u4f1a\u7834\u574f\u5176\u591a\u6001\u6027\u3002 \u8bed\u6cd5\uff1a T2 \u662f T1 \u7684\u6d3e\u751f\u7c7b\uff0c obj_p \u3001 obj_r \u5206\u522b\u662f T1 \u7c7b\u578b\u7684\u6307\u9488\u548c\u5f15\u7528\uff0c\u4e8c\u8005\u90fd\u6307\u5411\u4e00\u4e2a\u6d3e\u751f\u7c7b T2 \u7684\u5bf9\u8c61\u3002 1 2 T2 * pObj = dynamic_cast < T2 *> ( obj_p ); // \u5931\u8d25\u65f6\u8fd4\u56de nullptr T2 & refObj = dynamic_cast < T2 &> ( obj_r ); // \u5931\u8d25\u65f6\u5f02\u5e38 \u5feb\u901f\u5411\u4e0b\u7c7b\u578b\u8f6c\u6362 \u00b6 \u5982\u679c\u6211\u4eec\u77e5\u9053\u76ee\u6807\u7684\u64cd\u4f5c\u662f\u5b89\u5168\u7684\uff0c\u53ef\u4ee5\u4f7f\u7528 static_cast \u6765\u52a0\u5feb\u901f\u5ea6\u3002 static_cast \u5728\u7f16\u8bd1\u65f6\u9759\u6001\u6d4f\u89c8\u7c7b\u5c42\u6b21\uff0c\u53ea\u68c0\u67e5\u7ee7\u627f\u5173\u7cfb\u3002\u6ca1\u6709\u7ee7\u627f\u5173\u7cfb\u7684\u7c7b\u4e4b\u95f4\uff0c\u5fc5\u987b\u5177\u6709\u8f6c\u6362\u9014\u5f84\u624d\u80fd\u8fdb\u884c\u8f6c\u6362\uff08\u8981\u4e48\u81ea\u5b9a\u4e49\uff0c\u8981\u4e48\u662f\u8bed\u8a00\u8bed\u6cd5\u652f\u6301\uff09\uff0c\u5426\u5219\u4e0d\u8fc7\u7f16\u8bd1\u3002\u56e0\u4e3a\u5feb\u901f\uff0c static_cast \u8fd0\u884c\u65f6\u65e0\u6cd5\u786e\u8ba4\u662f\u5426\u6b63\u786e\u8f6c\u6362\u3002 \u8bed\u6cd5\uff1a T2 \u662f T1 \u7684\u6d3e\u751f\u7c7b\uff0c obj_p \u3001 obj_r \u5206\u522b\u662f T1 \u7c7b\u578b\u7684\u6307\u9488\u548c\u5f15\u7528\uff0c\u4e8c\u8005\u90fd\u6307\u5411\u4e00\u4e2a\u6d3e\u751f\u7c7b T2 \u7684\u5bf9\u8c61\u3002 1 2 T2 * pObj = static_cast < T2 *> ( obj_p ); // \u8f6c\u6362\u4e3a T2 \u6307\u9488 T2 & refObj = static_cast < T2 &> ( obj_r ); // \u8f6c\u6362\u4e3a T2 \u5f15\u7528 \u4e0d\u5b89\u5168\uff1a\u5982\u679c\u57fa\u7c7b\u6307\u9488\u672c\u6765\u5c31\u6307\u5411\u57fa\u7c7b\u5bf9\u8c61\uff0c\u5411\u4e0b\u7c7b\u578b\u8f6c\u6362\u5c31\u662f\u4e0d\u5408\u6cd5\u7684\u3002\u6b64\u65f6\u4e0d\u4fdd\u8bc1\u6307\u5411\u76ee\u6807\u662f T2 \u5bf9\u8c61\uff0c\u53ef\u80fd\u5bfc\u81f4\u975e\u6cd5\u5185\u5b58\u8bbf\u95ee\u3002 \u4f8b\u5b50 \u7b2c\u4e00\u7c7b\u4e0d\u5408\u6cd5\u8f6c\u6362 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 #include <iostream> using namespace std ; class B { public : virtual void f () { } }; class D : public B { public : int i { 2018 }; }; int main () { D d ; B b ; // D d1 = static_cast<D>(b); // \u672a\u5b9a\u4e49\u7c7b\u578b\u8f6c\u6362\u65b9\u5f0f\uff0c\u6ce8\u610f\u8fd9\u4e2a\u76f4\u63a5\u662f\u5bf9\u8c61\u7684\u8f6c\u6362\u800c\u4e0d\u662f\u6307\u9488\u7684\u8f6c\u6362 // D d2 = dynamic_cast<D>(b); // \u8fd9\u662f\u4e0d\u5408\u6cd5\u7684\uff0cdynamic_cast \u53ea\u5141\u8bb8\u6307\u9488\u548c\u5f15\u7528\u8f6c\u6362 D * pd1 = static_cast < D *> ( & b ); // \u6709\u7ee7\u627f\u5173\u7cfb\uff0c\u5141\u8bb8\u8f6c\u6362\uff0c\u8ba9 D \u7c7b\u578b\u6307\u9488 pd1 \u6307\u5411\u4e86 B \u7c7b\u578b\u7684\u5bf9\u8c61 b if ( pd1 != nullptr ) { cout << \"static_cast, B*(B) --> D*: OK\" << endl ; cout << \"D::i=\" << pd1 -> i << endl ; } // \u4f46\u662f\u4e0d\u5b89\u5168\uff0cpd1 \u8bbf\u95ee D \u4e2d\u6210\u5458 i \u65f6\uff0c\u53ef\u80fd\u662f\u975e\u6cd5\u8bbf\u95ee D * pd2 = dynamic_cast < D *> ( & b ); if ( pd2 == nullptr ) // \u4e0d\u5141\u8bb8\u4e0d\u5b89\u5168\u7684\u8f6c\u6362 cout << \"dynamic_cast, B*(B) --> D*: FAILED\" << endl ; B * pb = & d ; D * pd3 = static_cast < D *> ( pb ); if ( pd3 != nullptr ) { cout << \"static_cast, B*(D) --> D*: OK\" << endl ; cout << \"D::i=\" << pd3 -> i << endl ; } D * pd4 = dynamic_cast < D *> ( pb ); if ( pd4 != nullptr ) { // \u8f6c\u6362\u6b63\u786e cout << \"dynamic_cast, B*(D) --> D*: OK\" << endl ; cout << \"D::i=\" << pd4 -> i << endl ; } return 0 ; } /* output: static_cast, B*(B) --> D*: OK D::i=4817112 dynamic_cast, B*(B) --> D*: FAILED static_cast, B*(D) --> D*: OK D::i=2018 dynamic_cast, B*(D) --> D*: OK D::i=2018 */ \u6ce8\u610f\u5230\u524d\u6587\u63d0\u8fc7\u5371\u9669\u8f6c\u6362\u7684\u60c5\u51b5\uff0c\u5982\u679c\u57fa\u7c7b\u6307\u9488\u672c\u6765\u5c31\u6307\u5411\u57fa\u7c7b\u5bf9\u8c61\uff0c\u5411\u4e0b\u7c7b\u578b\u8f6c\u6362\u5c31\u662f\u4e0d\u5408\u6cd5\u7684\u3002\u4ece\u800c\u6211\u4eec\u89c2\u5bdf\u5230\uff0c\u4f7f\u7528 dynamic_cast \u5c06 &b \u8f6c\u4e3a D \u7684\u6307\u9488\u662f\u9519\u8bef\u7684\uff0c\u8fd4\u56de\u4e86\u7a7a\u6307\u9488\u3002\u800c static_cast \u867d\u7136\u5b9e\u73b0\u4e86\u8f6c\u6362\uff0c\u4f46\u662f\u8f93\u51fa\u7684\u5b8c\u5168\u662f\u975e\u6cd5\u5185\u5b58\u3002\u4e14\u5728\u5927\u591a\u6570\u7f16\u8bd1\u5668\u4e0a\uff0c static_cast \u8fd9\u6837\u64cd\u4f5c\u4f1a RE\u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u6211\u4eec\u73b0\u5728\u8ba8\u8bba\u7684\u7684\u90fd\u662f\u6307\u9488\u8f6c\u6362\uff0c\u800c\u5bf9\u8c61\u7684\u76f4\u63a5\u8f6c\u6362\u662f\u7c7b\u578b\u8f6c\u6362\uff0c\u6545\u800c\u4e0d\u52a0\u5176\u4ed6\u5b9a\u4e49\u65f6\u7528 static_cast \u548c dynamic_cast \u90fd\u662f\u4e0d\u5b89\u5168\u7684\u3002 \u7b2c\u4e8c\u7c7b\u4e0d\u5408\u6cd5\u8f6c\u6362 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 #pragma once #include <string> #include <iostream> class Animal { private : std :: string name , type ; Animal ( const std :: string & _name , const std :: string & _type ) : name ( _name ), type ( _type ) { } }; class Dog : public Animal { public : Dog ( const std :: string & _name ) : Animal ( _name , \"dog\" ) { }; }; class Bird : public Animal { public : Bird ( const std :: string & _name ) : Animal ( _name , \"bird\" ) { }; }; void action ( Animal * animal , std :: vector < Dog >& dogzone , std :: vector < Bird >& birdzone ) { Dog * point1 = dynamic_cast < Dog *> ( animal ); Bird * point2 = dynamic_cast < Bird *> ( animal ); if ( point1 != nullptr ) { dogzone . push_back ( std :: move ( * point1 )); } else { birdzone . push_back ( std :: move ( * point2 )); } } \u8fd9\u4e2a\u9898\u653e\u4e0a\u4e86\u4f2a\u4ee3\u7801\uff0c\u7ed9\u51fa\u4e86\u7b2c\u4e8c\u7c7b\u975e\u6cd5\u8f6c\u6362\u7684\u4f8b\u5b50\u3002\u4e00\u4e2a\u57fa\u7c7b\u6d3e D \u751f\u51fa\u4e86\u591a\u4e2a\u6d3e\u751f\u7c7b A \u3001 B \u3001 C \u3002\u6bd4\u5982\u57fa\u7c7b\u6307\u9488 d \u6307\u5411\u4e86\u6d3e\u751f\u7c7b A \u5bf9\u8c61 a \uff0c\u4f46\u662f\u5982\u679c\u6211\u4eec\u628a d \u5411\u4e0b\u7c7b\u578b\u8f6c\u6362\u4e3a B \u7c7b\u6307\u9488\uff0c\u4e5f\u662f\u975e\u6cd5\u8f6c\u6362\u3002\u4ece\u8fd9\u4e2a\u89d2\u5ea6\u53ef\u4ee5\u770b\u51fa\uff0c\u5728\u4e0a\u4f8b\u4e2d\uff0c Animal \u7c7b\u7684 type \u662f private \uff0c\u6ca1\u6709\u63a5\u53e3\u662f\u6ca1\u6cd5\u8bbf\u95ee\u7684\u3002\u6211\u4eec\u672c\u6765\u9700\u8981\u6839\u636e type \u6765\u51b3\u5b9a\u5411\u4e0b\u8f6c\u6362\u7684\u7c7b\u578b\uff0c\u4f46\u662f\u8bbf\u95ee\u4e0d\u4e86\u3002\u4e8e\u662f\u6211\u4eec\u76f4\u63a5\u5411\u4e0b\u7c7b\u578b\u8f6c\u6362\uff0c\u76f4\u63a5\u901a\u8fc7\u662f\u5426\u8f6c\u4e3a nullptr \u6765\u68c0\u6d4b\u662f\u5426\u8f6c\u6362\u6b63\u786e\u3002 \u603b\u7ed3 \u00b6 dynamic_cast \u4e0e static_cast \u76f8\u6bd4\uff1a \u76f8\u540c\u70b9\uff1a\u90fd\u53ef\u5b8c\u6210\u5411\u4e0b\u7c7b\u578b\u8f6c\u6362 \u4e0d\u540c\u70b9\uff1a static_cast \u5728\u7f16\u8bd1\u65f6\u9759\u6001\u6267\u884c\u5411\u4e0b\u7c7b\u578b\u8f6c\u6362 dynamic_cast \u4f1a\u5728\u8fd0\u884c\u65f6\u68c0\u67e5\u88ab\u8f6c\u6362\u7684\u5bf9\u8c61\u662f\u5426\u786e\u5b9e\u662f\u6b63\u786e\u7684\u6d3e\u751f\u7c7b\u3002\u989d\u5916\u7684\u68c0\u67e5\u9700\u8981 RTTI\uff08\u82f1\u8bed\uff1aRun-Time Type Information\uff09\uff0c\u56e0\u6b64\u8981\u6bd4 static_cast \u6162\u4e00\u4e9b\uff0c\u4f46\u662f\u66f4\u5b89\u5168\u3002 \u4e00\u822c\u4f7f\u7528 dynamic_cast \u8fdb\u884c\u5411\u4e0b\u7c7b\u578b\u8f6c\u6362 \u3002 \u6307\u9488\u8f6c\u6362\u7684\u91cd\u8981\u539f\u5219\uff1a\u6e05\u695a\u6307\u9488\u6240\u6307\u5411\u7684\u771f\u6b63\u5bf9\u8c61\u3002 \u6307\u9488\u6216\u5f15\u7528\u7684\u5411\u4e0a\u8f6c\u6362\u603b\u662f\u5b89\u5168\u7684\u3002 \u5411\u4e0b\u8f6c\u6362\u65f6\u7528 dynamic_cast \uff0c\u5b89\u5168\u68c0\u67e5\u3002 \u907f\u514d\u5bf9\u8c61\u4e4b\u95f4\u7684\u8f6c\u6362\u3002\u5c3d\u53ef\u80fd\u7528\u6307\u9488\u3001\u5f15\u7528\u8fdb\u884c\u8f6c\u6362\u3002\u8fd9\u6837\u53ef\u4ee5\u901a\u8fc7\u9a8c\u8bc1\u865a\u51fd\u6570\u8868\u5224\u65ad\u8f6c\u6362\u662f\u5426\u5b89\u5168\u3002 \u5386\u53f2\u9057\u7559\u95ee\u9898\uff0c\u5173\u4e8e\u4f20\u53c2\u7684\u672c\u8d28\uff08\u4e0b\u9762\u8fd9\u4e2a\u7a0b\u5e8f\u6709\u5f88\u5927\u95ee\u9898\uff09\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 #include <iostream> using namespace std ; void swap ( int * a , int * b ) { int tmp = * a ; * a = * b ; * b = tmp ; } int main () { int x = 1 , y ( 2 ); swap ( x , y ); cout << x << endl ; return 0 ; } /* output: 2 */ \u6211\u4eec\u8bd5\u56fe\u8fd0\u884c\u8be5\u7a0b\u5e8f\uff0c\u5f88\u663e\u7136\uff0c\u8f93\u51fa\u4e86 2 \u3002\u6211\u4eec\u4f3c\u4e4e\u5df2\u7ecf\u5bdf\u89c9\u5230\u4e86\u5730\u5740\u548c\u6307\u9488\u4e4b\u95f4\u7684\u7f8e\u5999\u5173\u7cfb\uff0c\u4e5f\u5c31\u662f\u76f4\u63a5\u8f93\u51fa\u6307\u9488\u7684\u503c\u5c31\u662f\u6307\u9488\u6307\u5411\u7684\u5730\u5740\u3002\u6211\u4eec\u9690\u7ea6\u5bdf\u89c9\u5230\uff0c\u8fd9\u91cc int* a \u8c8c\u4f3c\u4f1a\u6307\u5411 x \u7684\u5730\u5740\uff0c\u6240\u4ee5\u6211\u4eec\u8bd5\u56fe\u628a\u5730\u5740\u6253\u5370\u51fa\u6765\u3002 \uff08\u4e0b\u9762\u8fd9\u4e2a\u7a0b\u5e8f\u6709\u5f88\u5927\u95ee\u9898\uff09 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 #include <iostream> using namespace std ; void swap ( int * a , int * b ) { cout << a << endl ; int tmp = * a ; * a = * b ; * b = tmp ; } int main () { int x = 1 , y ( 2 ); swap ( x , y ); cout << & x << endl ; cout << x << endl ; return 0 ; } /* output: 0x7ffebcbe46e8 2 */ \u770b\u4e0a\u53bb\u5f88\u5bf9\uff0c\u4f46\u662f\uff0c\u4f3c\u4e4e\u5c11\u4e86\u70b9\u4ec0\u4e48\uff1f\u6211\u4eec swap \u51fd\u6570\u91cc\u5bf9 int* a \u7684\u8f93\u51fa\u5462\uff1f\u8fd9\u4e9b\u7a0b\u5e8f\u6709\u4ec0\u4e48\u95ee\u9898\uff1f \u539f\u56e0\u662f\uff0c\u5728 std \u7a7a\u95f4\u91cc\u672c\u8eab\u5c31\u5305\u542b\u6709 swap \u51fd\u6570\uff0c\u8fd9\u4e48\u5199 swap \u6839\u672c\u65e0\u6cd5\u8c03\u7528\u6211\u4eec\u81ea\u5df1\u5b9a\u4e49\u7684 swap \uff0c\u6545\u800c\u4e0d\u53ef\u4f7f\u7528 std \u7a7a\u95f4\uff08\u8fd9\u4e5f\u544a\u8beb\u4e86\u6211\u4eec\u5c11\u7528 std \u7a7a\u95f4\uff0c\u6216\u8005\u628a\u51fd\u6570\u540d\u5b57\u8d77\u7684\u590d\u6742\u70b9\uff09\u3002 \u6211\u4eec\u7981\u7528\u4e86 std \u7a7a\u95f4\u540e\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #include <iostream> // using namespace std; void swap ( int * a , int * b ) { int tmp = * a ; * a = * b ; * b = tmp ; } int main () { int x = 1 , y ( 2 ); swap ( x , y ); std :: cout << x << std :: endl ; return 0 ; } /* output: main.cpp:11:2: error: no matching function for call to 'swap' swap(x,y); ^~~~ main.cpp:3:6: note: candidate function not viable: no known conversion from 'int' to 'int *' for 1st argument; take the address of the argument with & void swap(int *a, int *b) ^ 1 error generated. */ \u6211\u4eec\u7ec8\u4e8e\u53d1\u73b0\u4e86\u95ee\u9898\uff0c\u5728\u8c03\u7528\u53c2\u6570\u7684\u65f6\u5019\uff0c\u6211\u4eec\u6839\u672c\u65e0\u6cd5\u8ba9\u4e00\u4e2a int x \u4f20\u5165 int* a \u3002\u9996\u5148\uff0c\u4f20\u53c2\u6570\u7684\u8fc7\u7a0b\u53ef\u4ee5\u7406\u89e3\u4e3a\u8d4b\u503c\u8bed\u53e5\uff1a\u6bd4\u5982\u6211\u4eec\u51fd\u6570\u5b9a\u4e49 void swap(int a, int b) \u3002\u90a3\u4e48\u8c03\u7528\u65f6\uff0c swap(x,y) \u9700\u8981 int a = x, int b = y \u8fd9\u4e24\u4e2a\u8d4b\u503c\u8bed\u53e5\u90fd\u6ca1\u6cd5\u5b9e\u73b0\u3002\u4f46\u662f\u6211\u4eec\u8c03\u7528 swap(&x, &y) \u65f6\uff0c\u5b9e\u9645\u4e0a\u662f int* a = &x, int* b = &y \uff0c\u8fd9\u4e24\u4e2a\u8d4b\u503c\u90fd\u53ef\u4ee5\u5b9e\u73b0\uff0c\u4e14 &x \u548c &y \u5b9e\u9645\u4e0a\u662f\u53d6\u5730\u5740\u800c\u4e0d\u662f\u53d6\u5f15\u7528\u7684\u610f\u601d\u3002 \u4fee\u6539\u597d\u7684\u7a0b\u5e8f\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 #include <iostream> // using namespace std; void swap ( int * a , int * b ) { std :: cout << a << std :: endl ; int tmp = * a ; * a = * b ; * b = tmp ; } int main () { int a = 1 , b ( 2 ); std :: cout << & a << std :: endl ; swap ( & a , & b ); std :: cout << a << std :: endl ; return 0 ; } /* output: 0x7fff8f992eb8 0x7fff8f992eb8 2 */ \u4ece\u8fd9\u4e2a\u4f8b\u5b50\u53ef\u4ee5\u770b\u51fa\u6765\uff0c\u5bf9\u5b9e\u53c2\u53d6\u5730\u5740\uff0c\u7136\u540e int* a = &x \uff0c\u5c31\u4f1a\u4f7f\u5f97 a \u6307\u9488\u786e\u5207\u7684\u6307\u5411 x \u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7\u6307\u9488 a \u63a7\u5236 x \u7684\u5185\u5b58\u7a7a\u95f4\u3002\u54ea\u6015 x \u7684\u751f\u547d\u5468\u671f\u7ed3\u675f\u4e86\uff0c\u9000\u51fa\u4e86\u51fd\u6570\u4f53\u4e4b\u540e\u628a a \u6307\u9488\u6790\u6784\u6389\uff0c\u56e0\u4e3a\u6211\u4eec\u6ca1\u6709\u4eba\u4e3a\u5b9a\u4e49 delete a \uff0c\u800c\u9ed8\u8ba4\u6790\u6784\u51fd\u6570\u4e0d\u4f1a delete a \uff0c\u6545\u800c\u4e5f\u4e0d\u4f1a\u5f71\u54cd x \u7684\u5185\u5b58\u7a7a\u95f4\u3002\u7efc\u4e0a\u6240\u8ff0\uff0c\u7ec8\u4e8e\u89e3\u51b3\u4e86\u5386\u53f2\u9057\u7559\u95ee\u9898\u3002\u6211\u4eec\u518d\u505a\u4e24\u4e2a\u5b9e\u9a8c\u6765\u9a8c\u8bc1\u4e0b\uff1a \u5b9e\u9a8c\u4e00\uff0c\u5728\u51fd\u6570\u4f53\u5185 delete a \uff0c\u679c\u7136\u6e05\u9664\u4e86 x \u5185\u5b58\u7a7a\u95f4\uff0c\u5bfc\u81f4 x \u975e\u6cd5\u8bbf\u95ee\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 #include <iostream> void swap ( int * a , int * b ) { std :: cout << a << std :: endl ; int tmp = * a ; * a = * b ; * b = tmp ; delete a ; return ; } int main () { int x = 1 , y ( 2 ); std :: cout << & x << std :: endl ; swap ( & x , & y ); std :: cout << x << std :: endl ; return 0 ; } /* output: free(): invalid pointer */ \u5b9e\u9a8c\u4e8c\uff0c\u4f20\u5f15\u7528\u4e5f\u662f\u5982\u6b64\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 #include <iostream> void swap ( int & a , int & b ) { std :: cout << & a << std :: endl ; int tmp = a ; a = b ; b = tmp ; return ; } int main () { int x = 1 , y ( 2 ); std :: cout << & x << std :: endl ; swap ( x , y ); std :: cout << x << std :: endl ; return 0 ; } /* output: 0x7fff2af01638 0x7fff2af01638 2 */ \u57fa\u4e8e\u4e0a\u8ff0\u5f15\u4f8b\uff0c\u8003\u5bdf\u4e0b\u8fd9\u4e2a\u4f8b\u5b50\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 #include <iostream> using namespace std ; class Pet { public : virtual ~ Pet () { } }; class Dog : public Pet { public : void run () { cout << \"dog run\" << endl ; } }; class Bird : public Pet { public : void fly () { cout << \"bird fly\" << endl ; } }; void action ( Pet * p ) { auto d = dynamic_cast < Dog *> ( p ); auto b = dynamic_cast < Bird *> ( p ); if ( d ) d -> run (); else if ( b ) b -> fly (); } int main () { Pet * p [ 2 ]; p [ 0 ] = new Dog ; p [ 1 ] = new Bird ; for ( int i = 0 ; i < 2 ; ++ i ) { action ( p [ i ]); } return 0 ; } /* output: dog run bird fly */ \u6ce8\u610f\u5230\uff0c\u5728\u8fd9\u4e2a\u4f8b\u5b50\u91cc\u9762\uff0c\u5411\u4e0b\u7c7b\u578b\u8f6c\u6362\u90fd\u4e0d\u662f\u91cd\u70b9\uff0c\u91cd\u70b9\u5728\u4f20\u53c2\u7684\u8fd9\u4e00\u6b65\u3002\u56e0\u4e3a\u6211\u4eec\u7684 p[i] \u662f\u7684\u7c7b\u578b\u662f Pet* \uff0c\u6307\u5411\u7684\u5185\u5b58\u7a7a\u95f4\u662f Dog \u6216\u8005 Bird \uff0c\u6240\u4ee5\u8fd9\u4e2a\u4f20\u53c2\u662f\u5408\u6cd5\u7684\uff01\u4e5f\u5c31\u662f\u8d4b\u503c\u8bed\u53e5\uff0c\u4f20\u53c2\u8fc7\u7a0b\u4e2d Pet* p = p[i] \u662f\u5408\u6cd5\u7684\uff0c\u8fd9\u4e2a\u4f20\u53c2\u5c31\u662f\u5408\u6cd5\u7684\uff08\u5c06\u4f20\u53c2\u89c6\u4e3a\u7ed9\u51fd\u6570\u53c2\u6570\u5217\u8868\u91cc\u7684\u5f62\u53c2\u8d4b\u503c\u7684\u8fc7\u7a0b\uff09\u3002 \u62bd\u8c61\u7c7b\u4e0e\u7eaf\u865a\u51fd\u6570 \u00b6 \u591a\u91cd\u7ee7\u627f \u00b6 \u4f18\u70b9\uff1a\u6e05\u6670\uff0c\u7b26\u5408\u76f4\u89c9\u3002\u7ed3\u5408\u591a\u4e2a\u63a5\u53e3 \u7f3a\u70b9\uff1a \u4e8c\u4e49\u6027\uff1a\u5982\u679c\u6d3e\u751f\u7c7b D \u7ee7\u627f\u7684\u4e24\u4e2a\u57fa\u7c7b A \u3001 B \uff0c\u6709\u540c\u540d\u6210\u5458 a\uff0c\u5219\u8bbf\u95ee D \u4e2d a \u65f6\uff0c\u7f16\u8bd1\u5668\u65e0\u6cd5\u5224\u65ad\u8981\u8bbf\u95ee\u7684\u54ea\u4e00\u4e2a\u57fa\u7c7b\u6210\u5458\u3002 \u94bb\u77f3\u578b\u7ee7\u627f\u6811\u5e26\u6765\u7684\u6570\u636e\u5197\u4f59\uff1a\u53f3\u56fe\u4e2d\u5982\u679c InputFile \u548c OutputFile \u90fd\u542b\u6709\u7ee7\u627f\u81ea File \u7684 filename \u53d8\u91cf\uff0c\u5219 IOFile \u4f1a\u6709\u4e24\u4efd\u72ec\u7acb\u7684 filename \uff0c\u800c\u8fd9\u5b9e\u9645\u4e0a\u5e76\u4e0d\u9700\u8981\u3002 \u4f18\u5316\u65b9\u6848\uff1a \u6700\u591a\u7ee7\u627f\u4e00\u4e2a\u975e\u62bd\u8c61\u7c7b\uff08has-a\uff09\uff0c\u53ef\u4ee5\u7ee7\u627f\u591a\u4e2a\u62bd\u8c61\u7c7b\uff08\u63a5\u53e3\uff09\u3002\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u591a\u91cd\u7ee7\u627f\u7684\u4e8c\u4e49\u6027\uff0c\u4e5f\u53ef\u4ee5\u4e00\u4e2a\u5bf9\u8c61\u53ef\u4ee5\u5b9e\u73b0\u591a\u4e2a\u63a5\u53e3\u3002 \u4f8b\u5b50 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 #include <iostream> using namespace std ; class WhatCanSpeak { public : virtual ~ WhatCanSpeak () { } virtual void speak () = 0 ; }; class WhatCanMotion { public : virtual ~ WhatCanMotion () { } virtual void motion () = 0 ; }; class Human : public WhatCanSpeak , public WhatCanMotion { void speak () { cout << \"say\" << endl ; } void motion () { cout << \"walk\" << endl ; } }; void doSpeak ( WhatCanSpeak * obj ) { obj -> speak (); } void doMotion ( WhatCanMotion * obj ) { obj -> motion (); } int main () { Human human ; doSpeak ( & human ); doMotion ( & human ); return 0 ; } /* output: say walk */ \u591a\u6001 \u00b6 \u5b9a\u4e49 \u00b6 \u6309\u7167\u57fa\u7c7b\u7684\u63a5\u53e3\u5b9a\u4e49\uff0c\u8c03\u7528\u6307\u9488\u6216\u5f15\u7528\u6240\u6307\u5bf9\u8c61\u7684\u63a5\u53e3\u51fd\u6570\uff0c\u51fd\u6570\u6267\u884c\u8fc7\u7a0b\u56e0\u5bf9\u8c61\u5b9e\u9645\u6240\u5c5e\u6d3e\u751f\u7c7b\u7684\u4e0d\u540c\u800c\u5448\u73b0\u4e0d\u540c\u7684\u6548\u679c\uff08\u8868\u73b0\uff09\uff0c\u8fd9\u4e2a\u73b0\u8c61\u88ab\u79f0\u4e3a\u201c\u591a\u6001\u201d\u3002\u8fd9\u4e2a\u5b9a\u4e49\u975e\u5e38\u7e41\u7410\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u6309\u7167\u5b9e\u9645\u7c7b\u578b\u8c03\u7528\u51fd\u6570\u7f62\u4e86\u3002 \u5f53\u5229\u7528\u57fa\u7c7b\u6307\u9488\u3001\u5f15\u7528\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u865a\u51fd\u6570\u5728\u8fd0\u884c\u65f6\u786e\u5b9a\u6267\u884c\u54ea\u4e2a\u7248\u672c\uff0c\u53d6\u51b3\u4e8e\u5f15\u7528\u6216\u6307\u9488\u5bf9\u8c61\u7684\u771f\u5b9e\u7c7b\u578b\u3002 \u975e\u865a\u51fd\u6570\u5728\u7f16\u8bd1\u65f6\u7ed1\u5b9a\uff0c\u6545\u800c\u8c03\u7528\u5728\u6307\u9488\u6743\u9650\u8303\u56f4\u5185\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\u51fd\u6570\u3002\u5173\u4e8e\u6307\u9488\u7684\u6743\u9650\u8303\u56f4\u5728\u5148\u524d\u5df2\u7ecf\u53d9\u8ff0\u8fc7\u3002 \u5f53\u5229\u7528\u7c7b\u7684\u5bf9\u8c61\u76f4\u63a5\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u65e0\u8bba\u4ec0\u4e48\u51fd\u6570\uff0c\u5747\u5728\u7f16\u8bd1\u65f6\u7ed1\u5b9a\u3002 \u4ea7\u751f\u591a\u6001\u6548\u679c\u7684\u6761\u4ef6\uff1a\u7ee7\u627f\u3001\u865a\u51fd\u6570\u3001\u5f15\u7528\u6216\u6307\u9488\u3002 \u4f18\u52bf \u00b6 \u5168\u90e8\u8bbe\u8ba1\u62bd\u8c61\u7c7b\u6307\u9488\u6307\u5411\u6d3e\u751f\u7c7b\u540e\uff0cC++ \u8bed\u8a00\u53ef\u4ee5\u7528\u4e00\u6bb5\u76f8\u540c\u7684\u4ee3\u7801\uff0c\u5728\u8fd0\u884c\u65f6\u5b8c\u6210\u4e0d\u540c\u7684\u4efb\u52a1\uff0c\u8fd9\u4e9b\u4e0d\u540c\u8fd0\u884c\u7ed3\u679c\u7684\u5dee\u5f02\u7531\u6d3e\u751f\u7c7b\u4e4b\u95f4\u7684\u5dee\u5f02\u51b3\u5b9a\uff0c\u4e0d\u5fc5\u5bf9\u6bcf\u4e00\u4e2a\u6d3e\u751f\u7c7b\u7279\u6b8a\u5904\u7406\uff0c\u53ea\u9700\u8981\u8c03\u7528\u62bd\u8c61\u57fa\u7c7b\u7684\u63a5\u53e3\u5373\u53ef\u3002\u5927\u5927\u63d0\u9ad8\u7a0b\u5e8f\u7684\u53ef\u590d\u7528\u6027\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u4e0d\u540c\u6d3e\u751f\u7c7b\u5bf9\u540c\u4e00\u63a5\u53e3\u7684\u5b9e\u73b0\u4e0d\u540c\uff0c\u80fd\u8fbe\u5230\u4e0d\u540c\u7684\u6548\u679c\uff0c\u63d0\u9ad8\u4e86\u7a0b\u5e8f\u53ef\u62d3\u5c55\u6027\u548c\u53ef\u7ef4\u62a4\u6027\u3002 \u4f8b\u5b50\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 #include <iostream> using namespace std ; class Animal { public : void action () { speak (); motion (); } virtual void speak () { cout << \"Animal speak\" << endl ; } virtual void motion () { cout << \"Animal motion\" << endl ; } }; class Bird : public Animal { public : void speak () { cout << \"Bird singing\" << endl ; } void motion () { cout << \"Bird flying\" << endl ; } }; class Fish : public Animal { public : void speak () { cout << \"Fish cannot speak ...\" << endl ; } void motion () { cout << \"Fish swimming\" << endl ; } }; int main () { Fish fish ; Bird bird ; fish . action (); bird . action (); Animal * pBase1 = new Fish ; Animal * pBase2 = new Bird ; pBase1 -> action (); pBase2 -> action (); return 0 ; } /* output: Fish cannot speak ... Fish swimming Bird singing Bird flying Fish cannot speak ... Fish swimming Bird singing Bird flying */ \u5f88\u6709\u610f\u601d\u7684\u662f\uff0c\u76f4\u63a5\u901a\u8fc7\u6d3e\u751f\u7c7b\u5bf9\u8c61\u8c03\u7528 action \u51fd\u6570\u65f6\uff0c\u7531\u4e8e\u6d3e\u751f\u7c7b\u6ca1\u6709\u91cd\u5b9a\u4e49 action \uff0c\u6545\u800c\u76f4\u63a5\u8c03\u7528\u4e86\u57fa\u7c7b\u7684 action \u3002\u4e4b\u540e\u4ee5 fish \u4e3a\u4f8b\uff0c\u8c03\u7528\u4e86 fish.speak() \u548c fish.motion() \u3002\u7136\u800c\u6ce8\u610f\u5230\uff0c Fish \u7c7b\u5df2\u7ecf\u91cd\u5199\u8986\u76d6\u4e86 Animal \u7684\u865a\u51fd\u6570 speak() \uff0c\u6545\u800c\u4f1a\u8c03\u7528\u81ea\u8eab\u91cd\u5b9a\u4e49\u7684 speak() \u3001 motion() \u540c\u7406\u3002 \u4e0b\u65b9\u7684\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u8c03\u7528\u5c31\u662f\u5178\u578b\u7684\u91cd\u5199\u8986\u76d6\u4e0e\u52a8\u6001\u7ed1\u5b9a\u3002 \u51fd\u6570\u6a21\u677f\u4e0e\u7c7b\u6a21\u677f \u00b6 \u610f\u4e49\u4e0e\u5b9a\u4e49 \u00b6 \u5982\u679c\u6211\u4eec\u60f3\u5b9e\u73b0\u5bf9\u4e8e\u6574\u6570\u3001\u6d6e\u70b9\u6570\u3001\u81ea\u5b9a\u4e49\u7c7b\u7684\u6392\u5e8f\u51fd\u6570\uff0c\u8fd9\u4e9b\u6392\u5e8f\u672c\u8d28\u4e0a\u7b97\u6cd5\u662f\u76f8\u540c\u7684\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u80fd\u9700\u8981\u5199\u5f88\u591a\u4e2a\u76f8\u4f3c\u7684\u51fd\u6570\u3002 \u6709\u4e9b\u7b97\u6cd5\u5b9e\u73b0\u4e0e\u7c7b\u578b\u65e0\u5173\uff0c\u6240\u4ee5\u53ef\u4ee5\u5c06\u51fd\u6570\u7684\u53c2\u6570\u7c7b\u578b\u4e5f\u5b9a\u4e49\u4e3a\u4e00\u79cd\u7279\u6b8a\u7684\u201c\u53c2\u6570\u201d\uff0c\u8fd9\u6837\u5c31\u5f97\u5230\u4e86\u201c\u51fd\u6570\u6a21\u677f\u201d\u3002 \u5b9a\u4e49\u51fd\u6570\u6a21\u677f\u7684\u65b9\u6cd5\uff08\u53ef\u4ee5\u4e0d\u5199\u5728\u5206\u5f00\u7684\u4e24\u884c\uff09\u3002 1 2 template < typename T > ReturnType Func ( Args ); \u5982\uff1a\u4efb\u610f\u7c7b\u578b\u4e24\u4e2a\u53d8\u91cf\u76f8\u52a0\u7684\u201c\u51fd\u6570\u6a21\u677f\u201d\uff1a 1 2 template < typename T > T sum ( T a , T b ) { return a + b ; } \u6ce8\uff1a typename \u4e5f\u53ef\u6362\u4e3a class \u3002 1 2 template < class T > T sum ( T a , T b ) { return a + b ; } \u6a21\u677f\u5fc5\u987b\u5728\u5934\u6587\u4ef6\u4e2d\u5b9e\u73b0\uff0c\u539f\u56e0\u6bd4\u8f83\u590d\u6742\uff0c\u6d89\u53ca\u94fe\u63a5\u539f\u7406\uff0c\u4e0d\u505a\u8d58\u8ff0\u3002 \u5b9e\u4f8b\u5316\u4e0e\u81ea\u52a8\u63a8\u5bfc \u00b6 \u51fd\u6570\u6a21\u677f\u5728\u8c03\u7528\u65f6\uff0c\u7f16\u8bd1\u5668\u80fd\u81ea\u52a8\u63a8\u5bfc\u51fa\u5b9e\u9645\u53c2\u6570\u7684\u7c7b\u578b\uff08\u8fd9\u4e2a\u8fc7\u7a0b\u53eb\u505a\u5b9e\u4f8b\u5316\uff09\u3002\u6240\u4ee5\uff0c\u5f62\u5f0f\u4e0a\u8c03\u7528\u4e00\u4e2a\u51fd\u6570\u6a21\u677f\u4e0e\u666e\u901a\u51fd\u6570\u6ca1\u6709\u533a\u522b\uff0c\u5982\uff1a 1 2 cout << sum ( 9 , 3 ); cout << sum ( 2.1 , 5.7 ); \u8c03\u7528\u7c7b\u578b\u9700\u8981\u6ee1\u8db3\u51fd\u6570\u7684\u8981\u6c42\u3002\u672c\u4f8b\u4e2d\uff0c\u8981\u6c42\u7c7b\u578b T \u5b9a\u4e49\u4e86\u52a0\u6cd5\u8fd0\u7b97\u7b26\u3002 \u5f53\u591a\u4e2a\u53c2\u6570\u7684\u7c7b\u578b\u4e0d\u4e00\u81f4\u5e76\u4e14\u4e0d\u5f3a\u5236\u8981\u6c42\u7c7b\u578b\u63a8\u5bfc\u65f6\uff0c\u65e0\u6cd5\u63a8\u5bfc\uff1a cout << sum(9, 2.1) \u3002 \u53ef\u4ee5\u5f3a\u5236\u6307\u5b9a\u7c7b\u578b\u63a8\u5bfc\u65b9\u5f0f\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 #include <iostream> using namespace std ; template < class T > T sum ( T a , T b ) { return a + b ; } int main () { cout << sum < int > ( 9.9 , 2.5 ) << endl ; cout << sum < float > ( 9.9 , 2.5 ) << endl ; cout << sum < double > ( 9.9 , 2.5 ) << endl ; } /* output: 11 12.4 12.4 */ \u4ece\u4e0a\u4f8b\u4e2d\u53ef\u770b\u51fa\u5148\u8f6c\u6362\u518d\u8fdb\u884c\u52a0\u6cd5\u3002 \u4f8b\u5b50 \u793a\u4f8b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 #include <iostream> #include <algorithm> template < class T > void sort ( T * data , int len ) { for ( int i = 0 ; i < len ; i ++ ) { // \u9009\u62e9\u6392\u5e8f for ( int j = i + 1 ; j < len ; j ++ ) { if ( data [ i ] > data [ j ]) std :: swap ( data [ i ], data [ j ]); // \u4ea4\u6362\u5143\u7d20\u4f4d\u7f6e } } } template < class T > void output ( T * data , int len ) { for ( int i = 0 ; i < len ; i ++ ) std :: cout << data [ i ] << \" \" ; std :: cout << std :: endl ; } int main () { int arr_a [] = { 3 , 2 , 4 , 1 , 5 }; sort ( arr_a , 5 ); // \u8c03\u7528 int \u7c7b\u578b\u7684 sort output ( arr_a , 5 ); // \u8c03\u7528 int \u7c7b\u578b\u7684 output float arr_b [] = { 3.2 , 2.1 , 4.3 , 1.5 , 5.7 }; sort ( arr_b , 5 ); // \u8c03\u7528 float \u7c7b\u578b\u7684 sort output ( arr_b , 5 ); // \u8c03\u7528 float \u7c7b\u578b\u7684 output return 0 ; } /* output: 1 2 3 4 5 1.5 2.1 3.2 4.3 5.7 */ \u53e6\u4e00\u4e2a\u4f8b\u5b50 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 #include <iostream> #include <algorithm> template < class T > void sort ( T * data , int len ) { for ( int i = 0 ; i < len ; i ++ ) { // \u9009\u62e9\u6392\u5e8f for ( int j = i + 1 ; j < len ; j ++ ) { if ( data [ i ] > data [ j ]) std :: swap ( data [ i ], data [ j ]); // \u4ea4\u6362\u5143\u7d20\u4f4d\u7f6e } } } template < class T > void output ( T * data , int len ) { for ( int i = 0 ; i < len ; i ++ ) std :: cout << data [ i ] << \" \" ; std :: cout << std :: endl ; } class MyInt { public : int data ; MyInt ( int val ) : data ( val ) { }; } int main () { MyInt arr_c [] = { 3 , 2 , 4 , 1 , 5 }; sort ( arr_c , 5 ); output ( arr_c , 5 ); return 0 ; } /* output: main.cpp: In instantiation of 'void sort(T*, int) [with T = MyInt]': main.cpp:33:15: required from here main.cpp:9:15: error: no match for 'operator>' (operand types are 'MyInt' and 'MyInt') */ \u6a21\u677f\u7f16\u8bd1\u9519\u8bef\u4f1a\u5f15\u8d77\u4e0a\u767e\u884c\u7684\u9519\u8bef\uff0c\u5173\u6ce8\u4e0a\u65b9\u51e0\u884c\u3002 sort \u4e2d\u9700\u8981 operator> \u4f46 MyInt \u5e76\u4e0d\u652f\u6301\u3002 \u7a0d\u4f5c\u4fee\u6539\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 #include <iostream> #include <algorithm> template < class T > void sort ( T * data , int len ) { for ( int i = 0 ; i < len ; i ++ ) { // \u9009\u62e9\u6392\u5e8f for ( int j = i + 1 ; j < len ; j ++ ) { if ( data [ i ] > data [ j ]) std :: swap ( data [ i ], data [ j ]); // \u4ea4\u6362\u5143\u7d20\u4f4d\u7f6e } } } template < class T > void output ( T * data , int len ) { for ( int i = 0 ; i < len ; i ++ ) std :: cout << data [ i ] << \" \" ; std :: cout << std :: endl ; } class MyInt { public : int data ; MyInt ( int val ) : data ( val ) { }; bool operator > ( const MyInt & b ) { //\u7528\u4e8esort return data > b . data ; } friend std :: ostream & operator << ( std :: ostream & out , const MyInt & obj ) { out << obj . data ; return out ; } }; int main () { MyInt arr_c [] = { 3 , 2 , 4 , 1 , 5 }; sort ( arr_c , 5 ); output ( arr_c , 5 ); return 0 ; } /* output: 1 2 3 4 5 */ \u5b8c\u5168\u91cd\u8f7d\u4e86\u6d41\u8fd0\u7b97\u7b26\u548c\u5927\u5c0f\u8fd0\u7b97\u7b26\u3002 \u6a21\u677f\u539f\u7406 \u00b6 \u5bf9\u51fd\u6570\u6a21\u677f\u7684\u5904\u7406\u662f\u5728\u7f16\u8bd1\u671f\u8fdb\u884c\u7684\uff0c \u6bcf\u5f53\u7f16\u8bd1\u5668\u53d1\u73b0\u5bf9\u6a21\u677f\u7684\u4e00\u79cd\u53c2\u6570\u7684\u4f7f\u7528\uff0c\u5c31\u751f\u6210\u5bf9\u5e94\u53c2\u6570\u7684\u4e00\u4efd\u4ee3\u7801 \u3002 1 2 3 4 5 6 7 8 template < typename T > T sum ( T a , T b ) { return a + b ; } int main () { int a = sum ( 1 , 2 ); // \u751f\u6210\u5e76\u7f16\u8bd1 int sum(int, int) double b = sum ( 1.0 , 2.0 ); // \u751f\u6210\u5e76\u7f16\u8bd1 double sum(double, double) return 0 ; } \u7c7b\u6a21\u677f \u00b6 \u5b9a\u4e49 \u00b6 \u5728\u5b9a\u4e49\u7c7b\u65f6\u4e5f\u53ef\u4ee5\u5c06\u4e00\u4e9b\u7c7b\u578b\u4fe1\u606f\u62bd\u53d6\u51fa\u6765\uff0c\u7528\u6a21\u677f\u53c2\u6570\u6765\u66ff\u6362\uff0c\u4ece\u800c\u4f7f\u7c7b\u66f4\u5177\u901a\u7528\u6027\u3002\u8fd9\u79cd\u7c7b\u88ab\u79f0\u4e3a\u201c\u7c7b\u6a21\u677f\u201d\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #include <iostream> using namespace std ; template < typename T > class A { T data ; public : A ( T _data ) : data ( _data ) { } void print () { cout << data << endl ; } }; int main () { A < int > a ( 1 ); // \u51fd\u6570\u6a21\u677f\u53ef\u4ee5\u81ea\u52a8\u63a8\u5bfc\u7c7b\u578b\uff0c\u4f46\u662f\u7c7b\u6a21\u677f\u4e0d\u53ef\u4ee5 a . print (); return 0 ; } \u6210\u5458\u51fd\u6570\u4e5f\u53ef\u4ee5\u5982\u6b64\u5b9a\u4e49\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 #include <iostream> using namespace std ; template < typename T > class A { T data ; public : A ( T _data ) : data ( _data ) { } void print (); }; template < typename T > void A < T >:: print () { cout << data << endl ; } int main () { A < int > a ( 1 ); a . print (); return 0 ; } \u6a21\u677f\u53c2\u6570 \u00b6 \u6211\u4eec\u53ef\u4ee5\u5c06\u7c7b\u6a21\u677f\u89c6\u4e3a\u4e00\u79cd\u7279\u6b8a\u7684\u201c\u51fd\u6570\u201d\uff0c\u9700\u8981\u5411\u5176\u4e2d\u4f20\u5165\u53c2\u6570\u624d\u80fd\u591f\u5b9a\u4e49\u4e00\u4e2a\u5b8c\u6574\u7684\u7c7b\uff0c\u800c\u8fd9\u4e9b\u4f20\u5165\u7684\u53c2\u6570\u6709\u4e24\u79cd\u3002\u4e00\u79cd\u662f\u7c7b\u578b\u53c2\u6570\uff0c\u4e5f\u5c31\u662f\u5728 typename \u6216\u8005 class \u4e4b\u540e\u7684\u53c2\u6570\uff08\u4e0b\u4f8b\u4e2d\u7684\u5c0f T \uff09\uff0c\u7b2c\u4e8c\u79cd\u662f\u975e\u7c7b\u578b\u53c2\u6570\uff0c\u8fd9\u4e2a\u53ef\u80fd\u6709\u975e\u5e38\u591a\u79cd\uff0c\u6bd4\u5982\u6574\u6570\u3001\u679a\u4e3e\u3001\u6307\u9488\uff08\u6307\u5411\u5bf9\u8c61\u6216\u51fd\u6570\uff09\uff0c\u5f15\u7528\uff08\u5f15\u7528\u5bf9\u8c61\u6216\u5f15\u7528\u51fd\u6570\uff09\uff0c\u65e0\u7b26\u53f7\u6574\u6570\u7b49\u7b49\uff0c\u6bd4\u5982\u4e0b\u4f8b\u5c31\u662f\u65e0\u7b26\u53f7\u6574\u6570\u6765\u5b9a\u4e49\u4e86\u6570\u7ec4\u7684\u5927\u5c0f\u3002 \u5b9e\u9645\u4e0a\uff0c\u6a21\u677f\u6bd4\u8f83\u590d\u6742\u65f6\uff0c\u5c16\u62ec\u53f7\u91cc\u53ef\u4ee5\u653e\u5f88\u591a\uff0c\u53ef\u4ee5\u662f\u7c7b\u578b\u4e5f\u53ef\u4ee5\u662f\u975e\u7c7b\u578b\u3002\u5f53\u7136\u7c7b\u578b\u53c2\u6570\u4e5f\u53ef\u4ee5\u6709\u591a\u4e2a\u3002 1 2 3 4 5 6 template < typename T , unsigned size > class array { T elems [ size ]; }; array < char , 10 > array0 ; \u6ce8\u610f\u5230\uff0c size \u53ea\u662f\u4e00\u4e2a\u65e0\u7b26\u53f7\u6574\u6570\u7684\u540d\u5b57\u800c\u5df2\uff0c unsigned \u548c typename \u624d\u662f\u5173\u952e\uff0c\u5b8c\u6574\u7684\u4f20\u5165\u4e24\u4e2a\u53c2\u6570\u624d\u53ef\u5f62\u6210\u4e00\u4e2a\u5b8c\u6574\u7684\u7c7b\uff0c\u5e76\u5b9a\u4e49\u8fd9\u4e2a\u7c7b\u7684\u5bf9\u8c61\u3002 \u4e00\u4e2a\u6a21\u677f\u53ef\u80fd\u4f1a\u5199\u51fa\u591a\u4e2a\u65b0\u7684\u7c7b\uff0c\u8fd9\u4e9b\u7c7b\u662f\u4e0d\u540c\u7684\uff0c\u4e0d\u8fc7\u78b0\u5de7\u90fd\u7528\u4e86\u540c\u4e00\u4e2a\u6a21\u677f\u7684\u540d\u5b57\uff08\u6bd4\u5982\u4e0a\u4f8b\u4e2d\u7684 array \u6a21\u677f\u540d\u5b57\uff09\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 template < typename T , unsigned size > class array { T elems [ size ]; }; int main () { int n = 5 ; // array<char, n> array0; // \u4e0d\u80fd\u4f7f\u7528\u53d8\u91cf const int m = 5 ; array < char , m > array1 ; // \u53ef\u4ee5\u4f7f\u7528\u5e38\u91cf array < char , 5 > array2 ; // \u6216\u5177\u4f53\u6570\u503c return 0 ; } \u6240\u6709\u6a21\u677f\u53c2\u6570\u5fc5\u987b\u5728\u7f16\u8bd1\u671f\u786e\u5b9a\uff0c\u56e0\u800c\u4e0d\u53ef\u4ee5\u4f7f\u7528\u53d8\u91cf\u3002 \u4f8b\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 #include <iostream> #include <algorithm> template < class T , unsigned size > class MyArr { T data [ size ]; public : void sort () { for ( int i = 0 ; i < size ; i ++ ) { // \u9009\u62e9\u6392\u5e8f for ( int j = i + 1 ; j < size ; j ++ ) { if ( data [ i ] > data [ j ]) std :: swap ( data [ i ], data [ j ]); // \u4ea4\u6362\u4e24\u8005\u4f4d\u7f6e } } } void output () { for ( int i = 0 ; i < size ; i ++ ) std :: cout << data [ i ] << \" \" ; std :: cout << std :: endl ; } void input () { for ( int i = 0 ; i < size ; i ++ ) std :: cin >> data [ i ]; } }; int main () { MyArr < int , 5 > arr_a ; arr_a . input (); arr_a . sort (); arr_a . output (); MyArr < float , 5 > arr_b ; arr_b . input (); arr_b . sort (); arr_b . output (); return 0 ; } /* input: 3 2 4 1 5 3.2 2.1 4.3 1.5 5.7 output: 1 2 3 4 5 1.5 2.1 3.2 4.3 5.7 */ \u6a21\u677f\u4e0e\u591a\u6001 \u00b6 \u6a21\u677f\u4f7f\u7528\u6cdb\u578b\u6807\u8bb0\uff0c\u4f7f\u7528\u540c\u4e00\u6bb5\u4ee3\u7801\uff0c\u6765\u5173\u8054\u4e0d\u540c\u4f46\u76f8\u4f3c\u7684\u7279\u5b9a\u884c\u4e3a\uff0c\u6700\u540e\u53ef\u4ee5\u83b7\u5f97\u4e0d\u540c\u7684\u7ed3\u679c\u3002\u6a21\u677f\u4e5f\u662f\u591a\u6001\u7684\u4e00\u79cd\u4f53\u73b0\u3002 \u4f46\u6a21\u677f\u7684\u5173\u8054\u662f\u5728\u7f16\u8bd1\u671f\u5904\u7406\uff0c\u79f0\u4e3a \u9759\u591a\u6001 \u3002 \u6a21\u677f\u7684\u7279\u70b9\uff1a \u5f80\u5f80\u548c \u51fd\u6570\u91cd\u8f7d \u540c\u65f6\u4f7f\u7528 \u9ad8\u6548\uff0c\u7701\u53bb\u51fd\u6570\u8c03\u7528 \u7f16\u8bd1\u540e\u4ee3\u7801\u589e\u591a \u57fa\u4e8e\u7ee7\u627f\u548c\u865a\u51fd\u6570\u7684\u591a\u6001\u5728\u8fd0\u884c\u671f\u5904\u7406\uff0c\u79f0\u4e3a\u52a8\u591a\u6001\u3002 \u865a\u51fd\u6570\u7684\u7279\u70b9\uff1a \u8fd0\u884c\u65f6\uff0c\u7075\u6d3b\u65b9\u4fbf \u4fb5\u5165\u5f0f\uff0c\u5fc5\u987b\u7ee7\u627f \u5b58\u5728\u51fd\u6570\u8c03\u7528 \u6240\u8c13\u7684\u7701\u53bb\u51fd\u6570\u8c03\u7528\u662f\u6307\uff0c\u5982\u679c doSomethingOnA \u548c doSomethingOnB \u7684\u5b9e\u73b0\u9664\u4e86\u7c7b\u578b\u4e0d\u540c\uff0c\u5176\u4ed6\u57fa\u672c\u4e00\u81f4\u7684\u8bdd\u5219\u53ef\u7701\u53bb\u5982\u4e0b\u4ee3\u7801\u3002 1 2 3 4 5 if ( typeof ( a ) == A ) { doSomethingOnA ( a ); } else if ( typeof ( a ) == B ) { doSomethingOnB ( a ); } \u76f4\u63a5\u5199\u4e00\u4e2a\u6a21\u677f\u7136\u540e dosomethingOnWhatever \u3002","title":"\u591a\u6001\u4e0e\u6a21\u677f"},{"location":"languages/c-oop/polymorphism-and-templates/#_1","text":"","title":"\u591a\u6001\u4e0e\u6a21\u677f"},{"location":"languages/c-oop/polymorphism-and-templates/#_2","text":"","title":"\u62bd\u8c61\u7c7b\u4e0e\u7eaf\u865a\u51fd\u6570"},{"location":"languages/c-oop/polymorphism-and-templates/#_3","text":"\u865a\u51fd\u6570\u8fd8\u53ef\u4ee5\u8fdb\u4e00\u6b65\u58f0\u660e\u4e3a\u7eaf\u865a\u51fd\u6570\uff0c\u53ea\u8981\u5305\u542b\u6709\u4e00\u4e2a\u7eaf\u865a\u51fd\u6570\u7684\u7c7b\uff0c\u5373\u4e3a\u201c\u62bd\u8c61\u7c7b\u201d\u3002\u8bed\u6cd5\u4e3a\u51fd\u6570\u6700\u540e\u52a0\u4e0a = 0 \u3002 \u9700\u8981\u6ce8\u610f\uff0c \u62bd\u8c61\u7c7b\u4e0d\u5141\u8bb8\u5b9a\u4e49\u5bf9\u8c61 \u3002 \u5b9a\u4e49\u57fa\u7c7b\u4e3a\u62bd\u8c61\u7c7b\uff0c\u4e3b\u8981\u7528\u9014\u662f\u4e3a\u6d3e\u751f\u7c7b\u89c4\u5b9a\u5171\u6027\u201c\u63a5\u53e3\u201d\u3002\u6b64\u5916\uff0c\u62bd\u8c61\u7c7b\u7684\u5b9a\u4e49\u80fd\u907f\u514d\u8d4b\u503c\u578b\u5bf9\u8c61\u5207\u7247\uff0c\u4fdd\u8bc1\u53ea\u6709\u6307\u9488\u548c\u5f15\u7528\u80fd\u88ab\u5411\u4e0a\u7c7b\u578b\u8f6c\u6362\uff08\u56e0\u4e3a\u62bd\u8c61\u7c7b\u65e0\u6cd5\u5b9a\u4e49\u5bf9\u8c61\uff0c\u4f46\u662f\u53ef\u4ee5\u6709\u6307\u9488\u548c\u5f15\u7528\u6307\u5411\u5b83\uff09\u3002 \u4f8b\u5982\uff1a 1 2 3 4 5 class A { public : virtual void f () = 0 ; // \u53ef\u5728\u7c7b\u5916\u5b9a\u4e49\u51fd\u6570\u4f53\u63d0\u4f9b\u9ed8\u8ba4\u5b9e\u73b0\u3002\u6d3e\u751f\u7c7b\u901a\u8fc7 A::f() \u8c03\u7528 }; A obj ; // \u4e0d\u51c6\u62bd\u8c61\u7c7b\u5b9a\u4e49\u5bf9\u8c61\uff01\u7f16\u8bd1\u4e0d\u901a\u8fc7\uff01 \u4ee5\u53ca\u66f4\u4e3a\u5177\u4f53\u7684\u4f8b\u5b50\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 #include <iostream> using namespace std ; class Pet { public : virtual void motion () = 0 ; }; void Pet::motion () { cout << \"Pet motion: \" << endl ; } class Dog : public Pet { public : void motion () override { Pet :: motion (); cout << \"dog run\" << endl ; } }; // \u91cd\u5199\u8986\u76d6\u540e\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5982 d1.Base::foo() \u6765\u8c03\u7528\u57fa\u7c7b\u51fd\u6570 class Bird : public Pet { public : void motion () override { Pet :: motion (); cout << \"bird fly\" << endl ; } }; int main () { Pet * p = new Dog ; // \u5411\u4e0a\u7c7b\u578b\u8f6c\u6362 p -> motion (); p = new Bird ; // \u5411\u4e0a\u7c7b\u578b\u8f6c\u6362 p -> motion (); // p = new Pet; // \u4e0d\u5141\u8bb8\u5b9a\u4e49\u62bd\u8c61\u7c7b\u5bf9\u8c61 return 0 ; } /* output: Pet motion: dog run Pet motion: bird fly */ \u6ce8\u610f\u5230\u5148\u524d\u6709\u63d0\u5230\u8fc7\uff0c\u91cd\u5199\u8986\u76d6 override \u4e0e\u91cd\u5199\u9690\u85cf redefining \u76f8\u4f3c\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5982 d1.Base::foo() \u6765\u8c03\u7528\u57fa\u7c7b\u51fd\u6570\u3002\u6b64\u4f8b\u4e2d\u867d\u7136\u53d1\u751f\u4e86\u91cd\u5199\u8986\u76d6\uff0c\u4f46\u662f\u901a\u8fc7\u76f4\u63a5\u8c03\u7528 Pet::motion() \u6765\u8c03\u7528\u4e86\u57fa\u7c7b\u51fd\u6570\u3002","title":"\u5b9a\u4e49"},{"location":"languages/c-oop/polymorphism-and-templates/#_4","text":"\u57fa\u7c7b\u7eaf\u865a\u51fd\u6570\u88ab\u6d3e\u751f\u7c7b\u91cd\u5199\u8986\u76d6\u4e4b\u524d\u4ecd\u662f\u7eaf\u865a\u51fd\u6570\u3002\u56e0\u6b64\u5f53\u7ee7\u627f\u4e00\u4e2a\u62bd\u8c61\u7c7b\u65f6\uff0c\u9664\u7eaf\u865a\u6790\u6784\u51fd\u6570\u5916\uff08\u968f\u540e\u89e3\u91ca\uff09\uff0c\u5fc5\u987b\u5b9e\u73b0\u6240\u6709\u7eaf\u865a\u51fd\u6570\uff0c\u5426\u5219\u7ee7\u627f\u51fa\u7684\u7c7b\u4e5f\u662f\u62bd\u8c61\u7c7b\u3002","title":"\u62bd\u8c61\u7c7b\u7ee7\u627f"},{"location":"languages/c-oop/polymorphism-and-templates/#_5","text":"\u6790\u6784\u51fd\u6570\u4e5f\u53ef\u4ee5\u662f\u7eaf\u865a\u51fd\u6570\uff0c \u7eaf\u865a\u6790\u6784\u51fd\u6570\u4ecd\u7136\u9700\u8981\u51fd\u6570\u4f53 \u3002 \u76ee\u7684\uff1a\u4f7f\u57fa\u7c7b\u6210\u4e3a\u62bd\u8c61\u7c7b\uff0c\u4e0d\u80fd\u521b\u5efa\u57fa\u7c7b\u7684\u5bf9\u8c61\u3002\u5982\u679c\u6709\u5176\u4ed6\u51fd\u6570\u662f\u7eaf\u865a\u51fd\u6570\uff0c\u5219\u6790\u6784\u51fd\u6570\u65e0\u8bba\u662f\u5426\u4e3a\u7eaf\u865a\u7684\uff0c\u57fa\u7c7b\u5747\u4e3a\u62bd\u8c61\u7c7b\u3002 \u5b9e\u9645\u4e0a\u7f16\u7a0b\u7684\u65f6\u5019\u4e0d\u4f1a\u5199\u7eaf\u865a\u6790\u6784\u51fd\u6570\uff0c\u53ea\u9700\u8981\u5199\u865a\u6790\u6784\u51fd\u6570\u5c31\u53ef\u4ee5\u4e86\u3002","title":"\u7eaf\u865a\u6790\u6784\u51fd\u6570"},{"location":"languages/c-oop/polymorphism-and-templates/#_6","text":"\u4e00\u822c\u7684\u7eaf\u865a\u51fd\u6570\u88ab\u6d3e\u751f\u7c7b\u91cd\u5199\u8986\u76d6\u4e4b\u524d\u4ecd\u662f\u7eaf\u865a\u51fd\u6570\u3002\u5982\u679c\u6d3e\u751f\u7c7b\u4e0d\u8986\u76d6\u7eaf\u865a\u51fd\u6570\uff0c\u90a3\u4e48\u6d3e\u751f\u7c7b\u4e5f\u662f\u62bd\u8c61\u7c7b\u3002 \u4f46\u5bf9\u4e8e\u5bf9\u4e8e\u7eaf\u865a\u6790\u6784\u51fd\u6570\u800c\u8a00\uff0c\u5373\u4fbf\u6d3e\u751f\u7c7b\u4e2d\u4e0d\u663e\u5f0f\u5b9e\u73b0\u6790\u6784\u51fd\u6570\uff0c\u7f16\u8bd1\u5668\u4e5f\u4f1a\u81ea\u52a8\u5408\u6210\u9ed8\u8ba4\u6790\u6784\u51fd\u6570\uff0c\u5b8c\u6210\u91cd\u5199\u8986\u76d6\uff0c\u4f7f\u5f97\u6d3e\u751f\u7c7b\u4e0d\u662f\u62bd\u8c61\u7c7b\u3002\u6545\u800c\uff0c\u5373\u4f7f\u6d3e\u751f\u7c7b\u4e0d\u663e\u5f0f\u8986\u76d6\u7eaf\u865a\u6790\u6784\u51fd\u6570\uff0c\u53ea\u8981\u6d3e\u751f\u7c7b\u5b8c\u5168\u8986\u76d6\u4e86\u5176\u4ed6\u7eaf\u865a\u51fd\u6570\uff0c\u8be5\u6d3e\u751f\u7c7b\u5c31\u4e0d\u662f\u62bd\u8c61\u7c7b\uff0c\u53ef\u4ee5\u5b9a\u4e49\u6d3e\u751f\u7c7b\u5bf9\u8c61\u3002 \u4f8b\u5b50 \u4f8b 1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 #include <iostream> using namespace std ; class Base { public : virtual void func () = 0 ; }; class Derive1 : public Base { }; // Derive1 \u4ecd\u4e3a\u62bd\u8c61\u7c7b class Derive2 : public Base { public : void func () { cout << \"Derive2::func\" << endl ; } }; int main () { // Derive1 d1; // \u7f16\u8bd1\u9519\u8bef\uff0cDerive1 \u4ecd\u4e3a\u62bd\u8c61\u7c7b Derive2 d2 ; d2 . func (); return 0 ; } /* output: Derive2::func */ \u4f8b 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 #include <iostream> using namespace std ; class Base { public : virtual ~ Base () = 0 ; }; Base ::~ Base () { cout << \"Base destroyed\" << endl ; } class Derive1 : public Base { }; class Derive2 : public Base { public : virtual ~ Derive2 () { cout << \"Derive2 destroyed\" << endl ; } }; int main () { Base * p1 = new Derive1 ; Base * p2 = new Derive2 ; delete p1 ; cout << \"------\" << endl ; delete p2 ; return 0 ; } /* output: Base destroyed ------ Derive2 destroyed Base destroyed */ \u4f8b\u9898 \u4e00\u4e9b\u9009\u9879\u7684\u89e3\u91ca\uff1a A. \u665a\u6346\u7ed1\u4f9d\u8d56\u4e8e\u865a\u51fd\u6570\u8868\u4e0e\u865a\u51fd\u6570\uff0c\u53ea\u5bf9\u7c7b\u4e2d\u865a\u51fd\u6570\u8d77\u4f5c\u7528\uff0c\u5e76\u4e14\u53ea\u5bf9\u57fa\u7c7b\u6307\u9488\u548c\u5f15\u7528\u8d77\u4f5c\u7528\u3002 D. \u4e00\u4e2a\u7eaf\u865a\u51fd\u6570\u5c31\u4f1a\u4f7f\u5f97\u4e00\u4e2a\u7c7b\u6210\u4e3a\u7eaf\u865a\u51fd\u6570\u3002","title":"\u7eaf\u865a\u6790\u6784\u51fd\u6570\u548c\u5176\u4ed6\u7eaf\u865a\u51fd\u6570\u7684\u533a\u522b"},{"location":"languages/c-oop/polymorphism-and-templates/#_7","text":"","title":"\u5411\u4e0b\u7c7b\u578b\u8f6c\u6362"},{"location":"languages/c-oop/polymorphism-and-templates/#_8","text":"\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61\u7684\u57fa\u7c7b\u6307\u9488\u3001\u5f15\u7528\u8f6c\u6362\u6210\u6d3e\u751f\u7c7b\u6307\u9488\u3001\u5f15\u7528\uff0c\u5219\u79f0\u4e3a\u5411\u4e0b\u7c7b\u578b\u8f6c\u6362\uff08\u7c7b\u5c42\u6b21\u4e2d\u5411\u4e0b\u79fb\u52a8\uff09\u3002 \u5f53\u6211\u4eec\u7528\u57fa\u7c7b\u6307\u9488\u8868\u793a\u5404\u79cd\u6d3e\u751f\u7c7b\u65f6\uff08\u5411\u4e0a\u7c7b\u578b\u8f6c\u6362\uff09\uff0c\u4fdd\u7559\u4e86\u4ed6\u4eec\u7684\u5171\u6027\uff0c\u4f46\u662f\u4e22\u5931\u4e86\u4ed6\u4eec\u7684\u7279\u6027\u3002\u5982\u679c\u6b64\u65f6\u8981\u8868\u73b0\u7279\u6027\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u5411\u4e0b\u7c7b\u578b\u8f6c\u6362\u3002 \u6bd4\u5982\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u57fa\u7c7b\u6307\u9488\u6570\u7ec4\u5bf9\u5404\u79cd\u6d3e\u751f\u7c7b\u5bf9\u8c61\u8fdb\u884c\u7ba1\u7406\uff0c\u5f53\u5177\u4f53\u5904\u7406\u65f6\u6211\u4eec\u53ef\u4ee5\u5c06\u57fa\u7c7b\u6307\u9488\u8f6c\u6362\u4e3a\u5b9e\u9645\u7684\u6d3e\u751f\u7c7b\u6307\u9488\uff0c\u8fdb\u800c\u8c03\u7528\u6d3e\u751f\u7c7b\u4e13\u6709\u7684\u63a5\u53e3\u3002 \u4f46\u662f\u9700\u8981\u6ce8\u610f\u5230\uff0c\u8fd9\u91cc\u662f\u8bf4\u7528\u57fa\u7c7b\u6307\u9488\u53ef\u4ee5\u7ba1\u7406\u6d3e\u751f\u7c7b\uff0c\u6545\u800c\u53ef\u4ee5\u628a\u8fd9\u4e2a\u6307\u9488\u5411\u4e0b\u8f6c\u6362\uff0c\u751f\u6210\u5b9e\u9645\u4f7f\u7528\u7684\u6d3e\u751f\u7c7b\u6307\u9488\u3002\u4f46\u662f\uff0c\u5982\u679c\u662f\u57fa\u7c7b\u6307\u9488\u7ba1\u7406\u57fa\u7c7b\u5bf9\u8c61\uff0c\u4e5f\u5c31\u662f\u57fa\u7c7b\u6307\u9488\u672c\u6765\u5c31\u6307\u5411\u57fa\u7c7b\u5bf9\u8c61\u65f6\uff0c\u57fa\u7c7b\u5bf9\u8c61\u672c\u8eab\u5c31\u6ca1\u6709\u6d3e\u751f\u7c7b\u591a\u51fa\u7684\u6570\u636e\u548c\u670d\u52a1\uff0c\u8fd8\u8981\u628a\u8fd9\u4e2a\u57fa\u7c7b\u6307\u9488\u5411\u4e0b\u8f6c\u6362\u4e3a\u6d3e\u751f\u7c7b\u6307\u9488\uff0c\u8981\u4e48\u662f\u9519\u7684\uff0c\u8981\u4e48\u662f\u5371\u9669\u7684\u3002","title":"\u5b9a\u4e49"},{"location":"languages/c-oop/polymorphism-and-templates/#_9","text":"","title":"\u8f6c\u6362\u65b9\u5f0f"},{"location":"languages/c-oop/polymorphism-and-templates/#_10","text":"C++ \u63d0\u4f9b\u4e86\u4e00\u4e2a\u7279\u6b8a\u7684\u663e\u5f0f\u7c7b\u578b\u8f6c\u6362\uff0c\u79f0\u4e3a dynamic_cast \uff0c\u662f\u4e00\u79cd\u5b89\u5168\u7684\u5411\u4e0b\u7c7b\u578b\u8f6c\u6362\u3002\u4f7f\u7528 dynamic_cast \u7684\u5bf9\u8c61\u5fc5\u987b\u6709\u865a\u51fd\u6570\uff0c\u56e0\u4e3a\u5b83\u4f7f\u7528\u4e86\u5b58\u50a8\u5728\u865a\u51fd\u6570\u8868\u4e2d\u7684\u4fe1\u606f\u5224\u65ad\u5b9e\u9645\u7684\u7c7b\u578b\u3002 \u6240\u8c13\u5bf9\u8c61\u5fc5\u987b\u6709\u865a\u51fd\u6570\uff0c\u5b9e\u9645\u4e0a\u662f\u6307\u6709\u7ee7\u627f\u5173\u7cfb\u65f6\uff0c\u57fa\u7c7b\u548c\u6d3e\u751f\u7c7b\u90fd\u6709\u865a\u51fd\u6570\u3002\u57fa\u7c7b\u6709\u865a\u51fd\u6570\uff0c\u662f\u591a\u6001\u7684\uff0c\u90a3\u4e48\u6d3e\u751f\u7c7b\u5f53\u7136\u4e5f\u6709\u865a\u51fd\u6570\u3002\u91cd\u5199\u8986\u76d6\u662f\u7528\u865a\u51fd\u6570\u8986\u76d6\u865a\u51fd\u6570\uff0c\u4ecd\u7136\u53ef\u4ee5\u7528 Base:: \u7684\u65b9\u5f0f\u8c03\u7528\u57fa\u7c7b\u865a\u51fd\u6570\uff0c\u4e0d\u7834\u574f\u591a\u6001\u6027\u3002\u800c\u91cd\u5199\u9690\u85cf\u66f4\u4e0d\u4f1a\u7834\u574f\u5176\u591a\u6001\u6027\u3002 \u8bed\u6cd5\uff1a T2 \u662f T1 \u7684\u6d3e\u751f\u7c7b\uff0c obj_p \u3001 obj_r \u5206\u522b\u662f T1 \u7c7b\u578b\u7684\u6307\u9488\u548c\u5f15\u7528\uff0c\u4e8c\u8005\u90fd\u6307\u5411\u4e00\u4e2a\u6d3e\u751f\u7c7b T2 \u7684\u5bf9\u8c61\u3002 1 2 T2 * pObj = dynamic_cast < T2 *> ( obj_p ); // \u5931\u8d25\u65f6\u8fd4\u56de nullptr T2 & refObj = dynamic_cast < T2 &> ( obj_r ); // \u5931\u8d25\u65f6\u5f02\u5e38","title":"\u5b89\u5168\u5411\u4e0b\u7c7b\u578b\u8f6c\u6362\uff08\u57fa\u7c7b\u5411\u6d3e\u751f\u7c7b\u7684\u8f6c\u6362\uff09"},{"location":"languages/c-oop/polymorphism-and-templates/#_11","text":"\u5982\u679c\u6211\u4eec\u77e5\u9053\u76ee\u6807\u7684\u64cd\u4f5c\u662f\u5b89\u5168\u7684\uff0c\u53ef\u4ee5\u4f7f\u7528 static_cast \u6765\u52a0\u5feb\u901f\u5ea6\u3002 static_cast \u5728\u7f16\u8bd1\u65f6\u9759\u6001\u6d4f\u89c8\u7c7b\u5c42\u6b21\uff0c\u53ea\u68c0\u67e5\u7ee7\u627f\u5173\u7cfb\u3002\u6ca1\u6709\u7ee7\u627f\u5173\u7cfb\u7684\u7c7b\u4e4b\u95f4\uff0c\u5fc5\u987b\u5177\u6709\u8f6c\u6362\u9014\u5f84\u624d\u80fd\u8fdb\u884c\u8f6c\u6362\uff08\u8981\u4e48\u81ea\u5b9a\u4e49\uff0c\u8981\u4e48\u662f\u8bed\u8a00\u8bed\u6cd5\u652f\u6301\uff09\uff0c\u5426\u5219\u4e0d\u8fc7\u7f16\u8bd1\u3002\u56e0\u4e3a\u5feb\u901f\uff0c static_cast \u8fd0\u884c\u65f6\u65e0\u6cd5\u786e\u8ba4\u662f\u5426\u6b63\u786e\u8f6c\u6362\u3002 \u8bed\u6cd5\uff1a T2 \u662f T1 \u7684\u6d3e\u751f\u7c7b\uff0c obj_p \u3001 obj_r \u5206\u522b\u662f T1 \u7c7b\u578b\u7684\u6307\u9488\u548c\u5f15\u7528\uff0c\u4e8c\u8005\u90fd\u6307\u5411\u4e00\u4e2a\u6d3e\u751f\u7c7b T2 \u7684\u5bf9\u8c61\u3002 1 2 T2 * pObj = static_cast < T2 *> ( obj_p ); // \u8f6c\u6362\u4e3a T2 \u6307\u9488 T2 & refObj = static_cast < T2 &> ( obj_r ); // \u8f6c\u6362\u4e3a T2 \u5f15\u7528 \u4e0d\u5b89\u5168\uff1a\u5982\u679c\u57fa\u7c7b\u6307\u9488\u672c\u6765\u5c31\u6307\u5411\u57fa\u7c7b\u5bf9\u8c61\uff0c\u5411\u4e0b\u7c7b\u578b\u8f6c\u6362\u5c31\u662f\u4e0d\u5408\u6cd5\u7684\u3002\u6b64\u65f6\u4e0d\u4fdd\u8bc1\u6307\u5411\u76ee\u6807\u662f T2 \u5bf9\u8c61\uff0c\u53ef\u80fd\u5bfc\u81f4\u975e\u6cd5\u5185\u5b58\u8bbf\u95ee\u3002 \u4f8b\u5b50 \u7b2c\u4e00\u7c7b\u4e0d\u5408\u6cd5\u8f6c\u6362 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 #include <iostream> using namespace std ; class B { public : virtual void f () { } }; class D : public B { public : int i { 2018 }; }; int main () { D d ; B b ; // D d1 = static_cast<D>(b); // \u672a\u5b9a\u4e49\u7c7b\u578b\u8f6c\u6362\u65b9\u5f0f\uff0c\u6ce8\u610f\u8fd9\u4e2a\u76f4\u63a5\u662f\u5bf9\u8c61\u7684\u8f6c\u6362\u800c\u4e0d\u662f\u6307\u9488\u7684\u8f6c\u6362 // D d2 = dynamic_cast<D>(b); // \u8fd9\u662f\u4e0d\u5408\u6cd5\u7684\uff0cdynamic_cast \u53ea\u5141\u8bb8\u6307\u9488\u548c\u5f15\u7528\u8f6c\u6362 D * pd1 = static_cast < D *> ( & b ); // \u6709\u7ee7\u627f\u5173\u7cfb\uff0c\u5141\u8bb8\u8f6c\u6362\uff0c\u8ba9 D \u7c7b\u578b\u6307\u9488 pd1 \u6307\u5411\u4e86 B \u7c7b\u578b\u7684\u5bf9\u8c61 b if ( pd1 != nullptr ) { cout << \"static_cast, B*(B) --> D*: OK\" << endl ; cout << \"D::i=\" << pd1 -> i << endl ; } // \u4f46\u662f\u4e0d\u5b89\u5168\uff0cpd1 \u8bbf\u95ee D \u4e2d\u6210\u5458 i \u65f6\uff0c\u53ef\u80fd\u662f\u975e\u6cd5\u8bbf\u95ee D * pd2 = dynamic_cast < D *> ( & b ); if ( pd2 == nullptr ) // \u4e0d\u5141\u8bb8\u4e0d\u5b89\u5168\u7684\u8f6c\u6362 cout << \"dynamic_cast, B*(B) --> D*: FAILED\" << endl ; B * pb = & d ; D * pd3 = static_cast < D *> ( pb ); if ( pd3 != nullptr ) { cout << \"static_cast, B*(D) --> D*: OK\" << endl ; cout << \"D::i=\" << pd3 -> i << endl ; } D * pd4 = dynamic_cast < D *> ( pb ); if ( pd4 != nullptr ) { // \u8f6c\u6362\u6b63\u786e cout << \"dynamic_cast, B*(D) --> D*: OK\" << endl ; cout << \"D::i=\" << pd4 -> i << endl ; } return 0 ; } /* output: static_cast, B*(B) --> D*: OK D::i=4817112 dynamic_cast, B*(B) --> D*: FAILED static_cast, B*(D) --> D*: OK D::i=2018 dynamic_cast, B*(D) --> D*: OK D::i=2018 */ \u6ce8\u610f\u5230\u524d\u6587\u63d0\u8fc7\u5371\u9669\u8f6c\u6362\u7684\u60c5\u51b5\uff0c\u5982\u679c\u57fa\u7c7b\u6307\u9488\u672c\u6765\u5c31\u6307\u5411\u57fa\u7c7b\u5bf9\u8c61\uff0c\u5411\u4e0b\u7c7b\u578b\u8f6c\u6362\u5c31\u662f\u4e0d\u5408\u6cd5\u7684\u3002\u4ece\u800c\u6211\u4eec\u89c2\u5bdf\u5230\uff0c\u4f7f\u7528 dynamic_cast \u5c06 &b \u8f6c\u4e3a D \u7684\u6307\u9488\u662f\u9519\u8bef\u7684\uff0c\u8fd4\u56de\u4e86\u7a7a\u6307\u9488\u3002\u800c static_cast \u867d\u7136\u5b9e\u73b0\u4e86\u8f6c\u6362\uff0c\u4f46\u662f\u8f93\u51fa\u7684\u5b8c\u5168\u662f\u975e\u6cd5\u5185\u5b58\u3002\u4e14\u5728\u5927\u591a\u6570\u7f16\u8bd1\u5668\u4e0a\uff0c static_cast \u8fd9\u6837\u64cd\u4f5c\u4f1a RE\u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u6211\u4eec\u73b0\u5728\u8ba8\u8bba\u7684\u7684\u90fd\u662f\u6307\u9488\u8f6c\u6362\uff0c\u800c\u5bf9\u8c61\u7684\u76f4\u63a5\u8f6c\u6362\u662f\u7c7b\u578b\u8f6c\u6362\uff0c\u6545\u800c\u4e0d\u52a0\u5176\u4ed6\u5b9a\u4e49\u65f6\u7528 static_cast \u548c dynamic_cast \u90fd\u662f\u4e0d\u5b89\u5168\u7684\u3002 \u7b2c\u4e8c\u7c7b\u4e0d\u5408\u6cd5\u8f6c\u6362 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 #pragma once #include <string> #include <iostream> class Animal { private : std :: string name , type ; Animal ( const std :: string & _name , const std :: string & _type ) : name ( _name ), type ( _type ) { } }; class Dog : public Animal { public : Dog ( const std :: string & _name ) : Animal ( _name , \"dog\" ) { }; }; class Bird : public Animal { public : Bird ( const std :: string & _name ) : Animal ( _name , \"bird\" ) { }; }; void action ( Animal * animal , std :: vector < Dog >& dogzone , std :: vector < Bird >& birdzone ) { Dog * point1 = dynamic_cast < Dog *> ( animal ); Bird * point2 = dynamic_cast < Bird *> ( animal ); if ( point1 != nullptr ) { dogzone . push_back ( std :: move ( * point1 )); } else { birdzone . push_back ( std :: move ( * point2 )); } } \u8fd9\u4e2a\u9898\u653e\u4e0a\u4e86\u4f2a\u4ee3\u7801\uff0c\u7ed9\u51fa\u4e86\u7b2c\u4e8c\u7c7b\u975e\u6cd5\u8f6c\u6362\u7684\u4f8b\u5b50\u3002\u4e00\u4e2a\u57fa\u7c7b\u6d3e D \u751f\u51fa\u4e86\u591a\u4e2a\u6d3e\u751f\u7c7b A \u3001 B \u3001 C \u3002\u6bd4\u5982\u57fa\u7c7b\u6307\u9488 d \u6307\u5411\u4e86\u6d3e\u751f\u7c7b A \u5bf9\u8c61 a \uff0c\u4f46\u662f\u5982\u679c\u6211\u4eec\u628a d \u5411\u4e0b\u7c7b\u578b\u8f6c\u6362\u4e3a B \u7c7b\u6307\u9488\uff0c\u4e5f\u662f\u975e\u6cd5\u8f6c\u6362\u3002\u4ece\u8fd9\u4e2a\u89d2\u5ea6\u53ef\u4ee5\u770b\u51fa\uff0c\u5728\u4e0a\u4f8b\u4e2d\uff0c Animal \u7c7b\u7684 type \u662f private \uff0c\u6ca1\u6709\u63a5\u53e3\u662f\u6ca1\u6cd5\u8bbf\u95ee\u7684\u3002\u6211\u4eec\u672c\u6765\u9700\u8981\u6839\u636e type \u6765\u51b3\u5b9a\u5411\u4e0b\u8f6c\u6362\u7684\u7c7b\u578b\uff0c\u4f46\u662f\u8bbf\u95ee\u4e0d\u4e86\u3002\u4e8e\u662f\u6211\u4eec\u76f4\u63a5\u5411\u4e0b\u7c7b\u578b\u8f6c\u6362\uff0c\u76f4\u63a5\u901a\u8fc7\u662f\u5426\u8f6c\u4e3a nullptr \u6765\u68c0\u6d4b\u662f\u5426\u8f6c\u6362\u6b63\u786e\u3002","title":"\u5feb\u901f\u5411\u4e0b\u7c7b\u578b\u8f6c\u6362"},{"location":"languages/c-oop/polymorphism-and-templates/#_12","text":"dynamic_cast \u4e0e static_cast \u76f8\u6bd4\uff1a \u76f8\u540c\u70b9\uff1a\u90fd\u53ef\u5b8c\u6210\u5411\u4e0b\u7c7b\u578b\u8f6c\u6362 \u4e0d\u540c\u70b9\uff1a static_cast \u5728\u7f16\u8bd1\u65f6\u9759\u6001\u6267\u884c\u5411\u4e0b\u7c7b\u578b\u8f6c\u6362 dynamic_cast \u4f1a\u5728\u8fd0\u884c\u65f6\u68c0\u67e5\u88ab\u8f6c\u6362\u7684\u5bf9\u8c61\u662f\u5426\u786e\u5b9e\u662f\u6b63\u786e\u7684\u6d3e\u751f\u7c7b\u3002\u989d\u5916\u7684\u68c0\u67e5\u9700\u8981 RTTI\uff08\u82f1\u8bed\uff1aRun-Time Type Information\uff09\uff0c\u56e0\u6b64\u8981\u6bd4 static_cast \u6162\u4e00\u4e9b\uff0c\u4f46\u662f\u66f4\u5b89\u5168\u3002 \u4e00\u822c\u4f7f\u7528 dynamic_cast \u8fdb\u884c\u5411\u4e0b\u7c7b\u578b\u8f6c\u6362 \u3002 \u6307\u9488\u8f6c\u6362\u7684\u91cd\u8981\u539f\u5219\uff1a\u6e05\u695a\u6307\u9488\u6240\u6307\u5411\u7684\u771f\u6b63\u5bf9\u8c61\u3002 \u6307\u9488\u6216\u5f15\u7528\u7684\u5411\u4e0a\u8f6c\u6362\u603b\u662f\u5b89\u5168\u7684\u3002 \u5411\u4e0b\u8f6c\u6362\u65f6\u7528 dynamic_cast \uff0c\u5b89\u5168\u68c0\u67e5\u3002 \u907f\u514d\u5bf9\u8c61\u4e4b\u95f4\u7684\u8f6c\u6362\u3002\u5c3d\u53ef\u80fd\u7528\u6307\u9488\u3001\u5f15\u7528\u8fdb\u884c\u8f6c\u6362\u3002\u8fd9\u6837\u53ef\u4ee5\u901a\u8fc7\u9a8c\u8bc1\u865a\u51fd\u6570\u8868\u5224\u65ad\u8f6c\u6362\u662f\u5426\u5b89\u5168\u3002 \u5386\u53f2\u9057\u7559\u95ee\u9898\uff0c\u5173\u4e8e\u4f20\u53c2\u7684\u672c\u8d28\uff08\u4e0b\u9762\u8fd9\u4e2a\u7a0b\u5e8f\u6709\u5f88\u5927\u95ee\u9898\uff09\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 #include <iostream> using namespace std ; void swap ( int * a , int * b ) { int tmp = * a ; * a = * b ; * b = tmp ; } int main () { int x = 1 , y ( 2 ); swap ( x , y ); cout << x << endl ; return 0 ; } /* output: 2 */ \u6211\u4eec\u8bd5\u56fe\u8fd0\u884c\u8be5\u7a0b\u5e8f\uff0c\u5f88\u663e\u7136\uff0c\u8f93\u51fa\u4e86 2 \u3002\u6211\u4eec\u4f3c\u4e4e\u5df2\u7ecf\u5bdf\u89c9\u5230\u4e86\u5730\u5740\u548c\u6307\u9488\u4e4b\u95f4\u7684\u7f8e\u5999\u5173\u7cfb\uff0c\u4e5f\u5c31\u662f\u76f4\u63a5\u8f93\u51fa\u6307\u9488\u7684\u503c\u5c31\u662f\u6307\u9488\u6307\u5411\u7684\u5730\u5740\u3002\u6211\u4eec\u9690\u7ea6\u5bdf\u89c9\u5230\uff0c\u8fd9\u91cc int* a \u8c8c\u4f3c\u4f1a\u6307\u5411 x \u7684\u5730\u5740\uff0c\u6240\u4ee5\u6211\u4eec\u8bd5\u56fe\u628a\u5730\u5740\u6253\u5370\u51fa\u6765\u3002 \uff08\u4e0b\u9762\u8fd9\u4e2a\u7a0b\u5e8f\u6709\u5f88\u5927\u95ee\u9898\uff09 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 #include <iostream> using namespace std ; void swap ( int * a , int * b ) { cout << a << endl ; int tmp = * a ; * a = * b ; * b = tmp ; } int main () { int x = 1 , y ( 2 ); swap ( x , y ); cout << & x << endl ; cout << x << endl ; return 0 ; } /* output: 0x7ffebcbe46e8 2 */ \u770b\u4e0a\u53bb\u5f88\u5bf9\uff0c\u4f46\u662f\uff0c\u4f3c\u4e4e\u5c11\u4e86\u70b9\u4ec0\u4e48\uff1f\u6211\u4eec swap \u51fd\u6570\u91cc\u5bf9 int* a \u7684\u8f93\u51fa\u5462\uff1f\u8fd9\u4e9b\u7a0b\u5e8f\u6709\u4ec0\u4e48\u95ee\u9898\uff1f \u539f\u56e0\u662f\uff0c\u5728 std \u7a7a\u95f4\u91cc\u672c\u8eab\u5c31\u5305\u542b\u6709 swap \u51fd\u6570\uff0c\u8fd9\u4e48\u5199 swap \u6839\u672c\u65e0\u6cd5\u8c03\u7528\u6211\u4eec\u81ea\u5df1\u5b9a\u4e49\u7684 swap \uff0c\u6545\u800c\u4e0d\u53ef\u4f7f\u7528 std \u7a7a\u95f4\uff08\u8fd9\u4e5f\u544a\u8beb\u4e86\u6211\u4eec\u5c11\u7528 std \u7a7a\u95f4\uff0c\u6216\u8005\u628a\u51fd\u6570\u540d\u5b57\u8d77\u7684\u590d\u6742\u70b9\uff09\u3002 \u6211\u4eec\u7981\u7528\u4e86 std \u7a7a\u95f4\u540e\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #include <iostream> // using namespace std; void swap ( int * a , int * b ) { int tmp = * a ; * a = * b ; * b = tmp ; } int main () { int x = 1 , y ( 2 ); swap ( x , y ); std :: cout << x << std :: endl ; return 0 ; } /* output: main.cpp:11:2: error: no matching function for call to 'swap' swap(x,y); ^~~~ main.cpp:3:6: note: candidate function not viable: no known conversion from 'int' to 'int *' for 1st argument; take the address of the argument with & void swap(int *a, int *b) ^ 1 error generated. */ \u6211\u4eec\u7ec8\u4e8e\u53d1\u73b0\u4e86\u95ee\u9898\uff0c\u5728\u8c03\u7528\u53c2\u6570\u7684\u65f6\u5019\uff0c\u6211\u4eec\u6839\u672c\u65e0\u6cd5\u8ba9\u4e00\u4e2a int x \u4f20\u5165 int* a \u3002\u9996\u5148\uff0c\u4f20\u53c2\u6570\u7684\u8fc7\u7a0b\u53ef\u4ee5\u7406\u89e3\u4e3a\u8d4b\u503c\u8bed\u53e5\uff1a\u6bd4\u5982\u6211\u4eec\u51fd\u6570\u5b9a\u4e49 void swap(int a, int b) \u3002\u90a3\u4e48\u8c03\u7528\u65f6\uff0c swap(x,y) \u9700\u8981 int a = x, int b = y \u8fd9\u4e24\u4e2a\u8d4b\u503c\u8bed\u53e5\u90fd\u6ca1\u6cd5\u5b9e\u73b0\u3002\u4f46\u662f\u6211\u4eec\u8c03\u7528 swap(&x, &y) \u65f6\uff0c\u5b9e\u9645\u4e0a\u662f int* a = &x, int* b = &y \uff0c\u8fd9\u4e24\u4e2a\u8d4b\u503c\u90fd\u53ef\u4ee5\u5b9e\u73b0\uff0c\u4e14 &x \u548c &y \u5b9e\u9645\u4e0a\u662f\u53d6\u5730\u5740\u800c\u4e0d\u662f\u53d6\u5f15\u7528\u7684\u610f\u601d\u3002 \u4fee\u6539\u597d\u7684\u7a0b\u5e8f\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 #include <iostream> // using namespace std; void swap ( int * a , int * b ) { std :: cout << a << std :: endl ; int tmp = * a ; * a = * b ; * b = tmp ; } int main () { int a = 1 , b ( 2 ); std :: cout << & a << std :: endl ; swap ( & a , & b ); std :: cout << a << std :: endl ; return 0 ; } /* output: 0x7fff8f992eb8 0x7fff8f992eb8 2 */ \u4ece\u8fd9\u4e2a\u4f8b\u5b50\u53ef\u4ee5\u770b\u51fa\u6765\uff0c\u5bf9\u5b9e\u53c2\u53d6\u5730\u5740\uff0c\u7136\u540e int* a = &x \uff0c\u5c31\u4f1a\u4f7f\u5f97 a \u6307\u9488\u786e\u5207\u7684\u6307\u5411 x \u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7\u6307\u9488 a \u63a7\u5236 x \u7684\u5185\u5b58\u7a7a\u95f4\u3002\u54ea\u6015 x \u7684\u751f\u547d\u5468\u671f\u7ed3\u675f\u4e86\uff0c\u9000\u51fa\u4e86\u51fd\u6570\u4f53\u4e4b\u540e\u628a a \u6307\u9488\u6790\u6784\u6389\uff0c\u56e0\u4e3a\u6211\u4eec\u6ca1\u6709\u4eba\u4e3a\u5b9a\u4e49 delete a \uff0c\u800c\u9ed8\u8ba4\u6790\u6784\u51fd\u6570\u4e0d\u4f1a delete a \uff0c\u6545\u800c\u4e5f\u4e0d\u4f1a\u5f71\u54cd x \u7684\u5185\u5b58\u7a7a\u95f4\u3002\u7efc\u4e0a\u6240\u8ff0\uff0c\u7ec8\u4e8e\u89e3\u51b3\u4e86\u5386\u53f2\u9057\u7559\u95ee\u9898\u3002\u6211\u4eec\u518d\u505a\u4e24\u4e2a\u5b9e\u9a8c\u6765\u9a8c\u8bc1\u4e0b\uff1a \u5b9e\u9a8c\u4e00\uff0c\u5728\u51fd\u6570\u4f53\u5185 delete a \uff0c\u679c\u7136\u6e05\u9664\u4e86 x \u5185\u5b58\u7a7a\u95f4\uff0c\u5bfc\u81f4 x \u975e\u6cd5\u8bbf\u95ee\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 #include <iostream> void swap ( int * a , int * b ) { std :: cout << a << std :: endl ; int tmp = * a ; * a = * b ; * b = tmp ; delete a ; return ; } int main () { int x = 1 , y ( 2 ); std :: cout << & x << std :: endl ; swap ( & x , & y ); std :: cout << x << std :: endl ; return 0 ; } /* output: free(): invalid pointer */ \u5b9e\u9a8c\u4e8c\uff0c\u4f20\u5f15\u7528\u4e5f\u662f\u5982\u6b64\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 #include <iostream> void swap ( int & a , int & b ) { std :: cout << & a << std :: endl ; int tmp = a ; a = b ; b = tmp ; return ; } int main () { int x = 1 , y ( 2 ); std :: cout << & x << std :: endl ; swap ( x , y ); std :: cout << x << std :: endl ; return 0 ; } /* output: 0x7fff2af01638 0x7fff2af01638 2 */ \u57fa\u4e8e\u4e0a\u8ff0\u5f15\u4f8b\uff0c\u8003\u5bdf\u4e0b\u8fd9\u4e2a\u4f8b\u5b50\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 #include <iostream> using namespace std ; class Pet { public : virtual ~ Pet () { } }; class Dog : public Pet { public : void run () { cout << \"dog run\" << endl ; } }; class Bird : public Pet { public : void fly () { cout << \"bird fly\" << endl ; } }; void action ( Pet * p ) { auto d = dynamic_cast < Dog *> ( p ); auto b = dynamic_cast < Bird *> ( p ); if ( d ) d -> run (); else if ( b ) b -> fly (); } int main () { Pet * p [ 2 ]; p [ 0 ] = new Dog ; p [ 1 ] = new Bird ; for ( int i = 0 ; i < 2 ; ++ i ) { action ( p [ i ]); } return 0 ; } /* output: dog run bird fly */ \u6ce8\u610f\u5230\uff0c\u5728\u8fd9\u4e2a\u4f8b\u5b50\u91cc\u9762\uff0c\u5411\u4e0b\u7c7b\u578b\u8f6c\u6362\u90fd\u4e0d\u662f\u91cd\u70b9\uff0c\u91cd\u70b9\u5728\u4f20\u53c2\u7684\u8fd9\u4e00\u6b65\u3002\u56e0\u4e3a\u6211\u4eec\u7684 p[i] \u662f\u7684\u7c7b\u578b\u662f Pet* \uff0c\u6307\u5411\u7684\u5185\u5b58\u7a7a\u95f4\u662f Dog \u6216\u8005 Bird \uff0c\u6240\u4ee5\u8fd9\u4e2a\u4f20\u53c2\u662f\u5408\u6cd5\u7684\uff01\u4e5f\u5c31\u662f\u8d4b\u503c\u8bed\u53e5\uff0c\u4f20\u53c2\u8fc7\u7a0b\u4e2d Pet* p = p[i] \u662f\u5408\u6cd5\u7684\uff0c\u8fd9\u4e2a\u4f20\u53c2\u5c31\u662f\u5408\u6cd5\u7684\uff08\u5c06\u4f20\u53c2\u89c6\u4e3a\u7ed9\u51fd\u6570\u53c2\u6570\u5217\u8868\u91cc\u7684\u5f62\u53c2\u8d4b\u503c\u7684\u8fc7\u7a0b\uff09\u3002","title":"\u603b\u7ed3"},{"location":"languages/c-oop/polymorphism-and-templates/#_13","text":"","title":"\u62bd\u8c61\u7c7b\u4e0e\u7eaf\u865a\u51fd\u6570"},{"location":"languages/c-oop/polymorphism-and-templates/#_14","text":"\u4f18\u70b9\uff1a\u6e05\u6670\uff0c\u7b26\u5408\u76f4\u89c9\u3002\u7ed3\u5408\u591a\u4e2a\u63a5\u53e3 \u7f3a\u70b9\uff1a \u4e8c\u4e49\u6027\uff1a\u5982\u679c\u6d3e\u751f\u7c7b D \u7ee7\u627f\u7684\u4e24\u4e2a\u57fa\u7c7b A \u3001 B \uff0c\u6709\u540c\u540d\u6210\u5458 a\uff0c\u5219\u8bbf\u95ee D \u4e2d a \u65f6\uff0c\u7f16\u8bd1\u5668\u65e0\u6cd5\u5224\u65ad\u8981\u8bbf\u95ee\u7684\u54ea\u4e00\u4e2a\u57fa\u7c7b\u6210\u5458\u3002 \u94bb\u77f3\u578b\u7ee7\u627f\u6811\u5e26\u6765\u7684\u6570\u636e\u5197\u4f59\uff1a\u53f3\u56fe\u4e2d\u5982\u679c InputFile \u548c OutputFile \u90fd\u542b\u6709\u7ee7\u627f\u81ea File \u7684 filename \u53d8\u91cf\uff0c\u5219 IOFile \u4f1a\u6709\u4e24\u4efd\u72ec\u7acb\u7684 filename \uff0c\u800c\u8fd9\u5b9e\u9645\u4e0a\u5e76\u4e0d\u9700\u8981\u3002 \u4f18\u5316\u65b9\u6848\uff1a \u6700\u591a\u7ee7\u627f\u4e00\u4e2a\u975e\u62bd\u8c61\u7c7b\uff08has-a\uff09\uff0c\u53ef\u4ee5\u7ee7\u627f\u591a\u4e2a\u62bd\u8c61\u7c7b\uff08\u63a5\u53e3\uff09\u3002\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u591a\u91cd\u7ee7\u627f\u7684\u4e8c\u4e49\u6027\uff0c\u4e5f\u53ef\u4ee5\u4e00\u4e2a\u5bf9\u8c61\u53ef\u4ee5\u5b9e\u73b0\u591a\u4e2a\u63a5\u53e3\u3002","title":"\u591a\u91cd\u7ee7\u627f"},{"location":"languages/c-oop/polymorphism-and-templates/#_15","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 #include <iostream> using namespace std ; class WhatCanSpeak { public : virtual ~ WhatCanSpeak () { } virtual void speak () = 0 ; }; class WhatCanMotion { public : virtual ~ WhatCanMotion () { } virtual void motion () = 0 ; }; class Human : public WhatCanSpeak , public WhatCanMotion { void speak () { cout << \"say\" << endl ; } void motion () { cout << \"walk\" << endl ; } }; void doSpeak ( WhatCanSpeak * obj ) { obj -> speak (); } void doMotion ( WhatCanMotion * obj ) { obj -> motion (); } int main () { Human human ; doSpeak ( & human ); doMotion ( & human ); return 0 ; } /* output: say walk */","title":"\u4f8b\u5b50"},{"location":"languages/c-oop/polymorphism-and-templates/#_16","text":"","title":"\u591a\u6001"},{"location":"languages/c-oop/polymorphism-and-templates/#_17","text":"\u6309\u7167\u57fa\u7c7b\u7684\u63a5\u53e3\u5b9a\u4e49\uff0c\u8c03\u7528\u6307\u9488\u6216\u5f15\u7528\u6240\u6307\u5bf9\u8c61\u7684\u63a5\u53e3\u51fd\u6570\uff0c\u51fd\u6570\u6267\u884c\u8fc7\u7a0b\u56e0\u5bf9\u8c61\u5b9e\u9645\u6240\u5c5e\u6d3e\u751f\u7c7b\u7684\u4e0d\u540c\u800c\u5448\u73b0\u4e0d\u540c\u7684\u6548\u679c\uff08\u8868\u73b0\uff09\uff0c\u8fd9\u4e2a\u73b0\u8c61\u88ab\u79f0\u4e3a\u201c\u591a\u6001\u201d\u3002\u8fd9\u4e2a\u5b9a\u4e49\u975e\u5e38\u7e41\u7410\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u6309\u7167\u5b9e\u9645\u7c7b\u578b\u8c03\u7528\u51fd\u6570\u7f62\u4e86\u3002 \u5f53\u5229\u7528\u57fa\u7c7b\u6307\u9488\u3001\u5f15\u7528\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u865a\u51fd\u6570\u5728\u8fd0\u884c\u65f6\u786e\u5b9a\u6267\u884c\u54ea\u4e2a\u7248\u672c\uff0c\u53d6\u51b3\u4e8e\u5f15\u7528\u6216\u6307\u9488\u5bf9\u8c61\u7684\u771f\u5b9e\u7c7b\u578b\u3002 \u975e\u865a\u51fd\u6570\u5728\u7f16\u8bd1\u65f6\u7ed1\u5b9a\uff0c\u6545\u800c\u8c03\u7528\u5728\u6307\u9488\u6743\u9650\u8303\u56f4\u5185\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\u51fd\u6570\u3002\u5173\u4e8e\u6307\u9488\u7684\u6743\u9650\u8303\u56f4\u5728\u5148\u524d\u5df2\u7ecf\u53d9\u8ff0\u8fc7\u3002 \u5f53\u5229\u7528\u7c7b\u7684\u5bf9\u8c61\u76f4\u63a5\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u65e0\u8bba\u4ec0\u4e48\u51fd\u6570\uff0c\u5747\u5728\u7f16\u8bd1\u65f6\u7ed1\u5b9a\u3002 \u4ea7\u751f\u591a\u6001\u6548\u679c\u7684\u6761\u4ef6\uff1a\u7ee7\u627f\u3001\u865a\u51fd\u6570\u3001\u5f15\u7528\u6216\u6307\u9488\u3002","title":"\u5b9a\u4e49"},{"location":"languages/c-oop/polymorphism-and-templates/#_18","text":"\u5168\u90e8\u8bbe\u8ba1\u62bd\u8c61\u7c7b\u6307\u9488\u6307\u5411\u6d3e\u751f\u7c7b\u540e\uff0cC++ \u8bed\u8a00\u53ef\u4ee5\u7528\u4e00\u6bb5\u76f8\u540c\u7684\u4ee3\u7801\uff0c\u5728\u8fd0\u884c\u65f6\u5b8c\u6210\u4e0d\u540c\u7684\u4efb\u52a1\uff0c\u8fd9\u4e9b\u4e0d\u540c\u8fd0\u884c\u7ed3\u679c\u7684\u5dee\u5f02\u7531\u6d3e\u751f\u7c7b\u4e4b\u95f4\u7684\u5dee\u5f02\u51b3\u5b9a\uff0c\u4e0d\u5fc5\u5bf9\u6bcf\u4e00\u4e2a\u6d3e\u751f\u7c7b\u7279\u6b8a\u5904\u7406\uff0c\u53ea\u9700\u8981\u8c03\u7528\u62bd\u8c61\u57fa\u7c7b\u7684\u63a5\u53e3\u5373\u53ef\u3002\u5927\u5927\u63d0\u9ad8\u7a0b\u5e8f\u7684\u53ef\u590d\u7528\u6027\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u4e0d\u540c\u6d3e\u751f\u7c7b\u5bf9\u540c\u4e00\u63a5\u53e3\u7684\u5b9e\u73b0\u4e0d\u540c\uff0c\u80fd\u8fbe\u5230\u4e0d\u540c\u7684\u6548\u679c\uff0c\u63d0\u9ad8\u4e86\u7a0b\u5e8f\u53ef\u62d3\u5c55\u6027\u548c\u53ef\u7ef4\u62a4\u6027\u3002 \u4f8b\u5b50\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 #include <iostream> using namespace std ; class Animal { public : void action () { speak (); motion (); } virtual void speak () { cout << \"Animal speak\" << endl ; } virtual void motion () { cout << \"Animal motion\" << endl ; } }; class Bird : public Animal { public : void speak () { cout << \"Bird singing\" << endl ; } void motion () { cout << \"Bird flying\" << endl ; } }; class Fish : public Animal { public : void speak () { cout << \"Fish cannot speak ...\" << endl ; } void motion () { cout << \"Fish swimming\" << endl ; } }; int main () { Fish fish ; Bird bird ; fish . action (); bird . action (); Animal * pBase1 = new Fish ; Animal * pBase2 = new Bird ; pBase1 -> action (); pBase2 -> action (); return 0 ; } /* output: Fish cannot speak ... Fish swimming Bird singing Bird flying Fish cannot speak ... Fish swimming Bird singing Bird flying */ \u5f88\u6709\u610f\u601d\u7684\u662f\uff0c\u76f4\u63a5\u901a\u8fc7\u6d3e\u751f\u7c7b\u5bf9\u8c61\u8c03\u7528 action \u51fd\u6570\u65f6\uff0c\u7531\u4e8e\u6d3e\u751f\u7c7b\u6ca1\u6709\u91cd\u5b9a\u4e49 action \uff0c\u6545\u800c\u76f4\u63a5\u8c03\u7528\u4e86\u57fa\u7c7b\u7684 action \u3002\u4e4b\u540e\u4ee5 fish \u4e3a\u4f8b\uff0c\u8c03\u7528\u4e86 fish.speak() \u548c fish.motion() \u3002\u7136\u800c\u6ce8\u610f\u5230\uff0c Fish \u7c7b\u5df2\u7ecf\u91cd\u5199\u8986\u76d6\u4e86 Animal \u7684\u865a\u51fd\u6570 speak() \uff0c\u6545\u800c\u4f1a\u8c03\u7528\u81ea\u8eab\u91cd\u5b9a\u4e49\u7684 speak() \u3001 motion() \u540c\u7406\u3002 \u4e0b\u65b9\u7684\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u8c03\u7528\u5c31\u662f\u5178\u578b\u7684\u91cd\u5199\u8986\u76d6\u4e0e\u52a8\u6001\u7ed1\u5b9a\u3002","title":"\u4f18\u52bf"},{"location":"languages/c-oop/polymorphism-and-templates/#_19","text":"","title":"\u51fd\u6570\u6a21\u677f\u4e0e\u7c7b\u6a21\u677f"},{"location":"languages/c-oop/polymorphism-and-templates/#_20","text":"\u5982\u679c\u6211\u4eec\u60f3\u5b9e\u73b0\u5bf9\u4e8e\u6574\u6570\u3001\u6d6e\u70b9\u6570\u3001\u81ea\u5b9a\u4e49\u7c7b\u7684\u6392\u5e8f\u51fd\u6570\uff0c\u8fd9\u4e9b\u6392\u5e8f\u672c\u8d28\u4e0a\u7b97\u6cd5\u662f\u76f8\u540c\u7684\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u80fd\u9700\u8981\u5199\u5f88\u591a\u4e2a\u76f8\u4f3c\u7684\u51fd\u6570\u3002 \u6709\u4e9b\u7b97\u6cd5\u5b9e\u73b0\u4e0e\u7c7b\u578b\u65e0\u5173\uff0c\u6240\u4ee5\u53ef\u4ee5\u5c06\u51fd\u6570\u7684\u53c2\u6570\u7c7b\u578b\u4e5f\u5b9a\u4e49\u4e3a\u4e00\u79cd\u7279\u6b8a\u7684\u201c\u53c2\u6570\u201d\uff0c\u8fd9\u6837\u5c31\u5f97\u5230\u4e86\u201c\u51fd\u6570\u6a21\u677f\u201d\u3002 \u5b9a\u4e49\u51fd\u6570\u6a21\u677f\u7684\u65b9\u6cd5\uff08\u53ef\u4ee5\u4e0d\u5199\u5728\u5206\u5f00\u7684\u4e24\u884c\uff09\u3002 1 2 template < typename T > ReturnType Func ( Args ); \u5982\uff1a\u4efb\u610f\u7c7b\u578b\u4e24\u4e2a\u53d8\u91cf\u76f8\u52a0\u7684\u201c\u51fd\u6570\u6a21\u677f\u201d\uff1a 1 2 template < typename T > T sum ( T a , T b ) { return a + b ; } \u6ce8\uff1a typename \u4e5f\u53ef\u6362\u4e3a class \u3002 1 2 template < class T > T sum ( T a , T b ) { return a + b ; } \u6a21\u677f\u5fc5\u987b\u5728\u5934\u6587\u4ef6\u4e2d\u5b9e\u73b0\uff0c\u539f\u56e0\u6bd4\u8f83\u590d\u6742\uff0c\u6d89\u53ca\u94fe\u63a5\u539f\u7406\uff0c\u4e0d\u505a\u8d58\u8ff0\u3002","title":"\u610f\u4e49\u4e0e\u5b9a\u4e49"},{"location":"languages/c-oop/polymorphism-and-templates/#_21","text":"\u51fd\u6570\u6a21\u677f\u5728\u8c03\u7528\u65f6\uff0c\u7f16\u8bd1\u5668\u80fd\u81ea\u52a8\u63a8\u5bfc\u51fa\u5b9e\u9645\u53c2\u6570\u7684\u7c7b\u578b\uff08\u8fd9\u4e2a\u8fc7\u7a0b\u53eb\u505a\u5b9e\u4f8b\u5316\uff09\u3002\u6240\u4ee5\uff0c\u5f62\u5f0f\u4e0a\u8c03\u7528\u4e00\u4e2a\u51fd\u6570\u6a21\u677f\u4e0e\u666e\u901a\u51fd\u6570\u6ca1\u6709\u533a\u522b\uff0c\u5982\uff1a 1 2 cout << sum ( 9 , 3 ); cout << sum ( 2.1 , 5.7 ); \u8c03\u7528\u7c7b\u578b\u9700\u8981\u6ee1\u8db3\u51fd\u6570\u7684\u8981\u6c42\u3002\u672c\u4f8b\u4e2d\uff0c\u8981\u6c42\u7c7b\u578b T \u5b9a\u4e49\u4e86\u52a0\u6cd5\u8fd0\u7b97\u7b26\u3002 \u5f53\u591a\u4e2a\u53c2\u6570\u7684\u7c7b\u578b\u4e0d\u4e00\u81f4\u5e76\u4e14\u4e0d\u5f3a\u5236\u8981\u6c42\u7c7b\u578b\u63a8\u5bfc\u65f6\uff0c\u65e0\u6cd5\u63a8\u5bfc\uff1a cout << sum(9, 2.1) \u3002 \u53ef\u4ee5\u5f3a\u5236\u6307\u5b9a\u7c7b\u578b\u63a8\u5bfc\u65b9\u5f0f\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 #include <iostream> using namespace std ; template < class T > T sum ( T a , T b ) { return a + b ; } int main () { cout << sum < int > ( 9.9 , 2.5 ) << endl ; cout << sum < float > ( 9.9 , 2.5 ) << endl ; cout << sum < double > ( 9.9 , 2.5 ) << endl ; } /* output: 11 12.4 12.4 */ \u4ece\u4e0a\u4f8b\u4e2d\u53ef\u770b\u51fa\u5148\u8f6c\u6362\u518d\u8fdb\u884c\u52a0\u6cd5\u3002 \u4f8b\u5b50 \u793a\u4f8b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 #include <iostream> #include <algorithm> template < class T > void sort ( T * data , int len ) { for ( int i = 0 ; i < len ; i ++ ) { // \u9009\u62e9\u6392\u5e8f for ( int j = i + 1 ; j < len ; j ++ ) { if ( data [ i ] > data [ j ]) std :: swap ( data [ i ], data [ j ]); // \u4ea4\u6362\u5143\u7d20\u4f4d\u7f6e } } } template < class T > void output ( T * data , int len ) { for ( int i = 0 ; i < len ; i ++ ) std :: cout << data [ i ] << \" \" ; std :: cout << std :: endl ; } int main () { int arr_a [] = { 3 , 2 , 4 , 1 , 5 }; sort ( arr_a , 5 ); // \u8c03\u7528 int \u7c7b\u578b\u7684 sort output ( arr_a , 5 ); // \u8c03\u7528 int \u7c7b\u578b\u7684 output float arr_b [] = { 3.2 , 2.1 , 4.3 , 1.5 , 5.7 }; sort ( arr_b , 5 ); // \u8c03\u7528 float \u7c7b\u578b\u7684 sort output ( arr_b , 5 ); // \u8c03\u7528 float \u7c7b\u578b\u7684 output return 0 ; } /* output: 1 2 3 4 5 1.5 2.1 3.2 4.3 5.7 */ \u53e6\u4e00\u4e2a\u4f8b\u5b50 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 #include <iostream> #include <algorithm> template < class T > void sort ( T * data , int len ) { for ( int i = 0 ; i < len ; i ++ ) { // \u9009\u62e9\u6392\u5e8f for ( int j = i + 1 ; j < len ; j ++ ) { if ( data [ i ] > data [ j ]) std :: swap ( data [ i ], data [ j ]); // \u4ea4\u6362\u5143\u7d20\u4f4d\u7f6e } } } template < class T > void output ( T * data , int len ) { for ( int i = 0 ; i < len ; i ++ ) std :: cout << data [ i ] << \" \" ; std :: cout << std :: endl ; } class MyInt { public : int data ; MyInt ( int val ) : data ( val ) { }; } int main () { MyInt arr_c [] = { 3 , 2 , 4 , 1 , 5 }; sort ( arr_c , 5 ); output ( arr_c , 5 ); return 0 ; } /* output: main.cpp: In instantiation of 'void sort(T*, int) [with T = MyInt]': main.cpp:33:15: required from here main.cpp:9:15: error: no match for 'operator>' (operand types are 'MyInt' and 'MyInt') */ \u6a21\u677f\u7f16\u8bd1\u9519\u8bef\u4f1a\u5f15\u8d77\u4e0a\u767e\u884c\u7684\u9519\u8bef\uff0c\u5173\u6ce8\u4e0a\u65b9\u51e0\u884c\u3002 sort \u4e2d\u9700\u8981 operator> \u4f46 MyInt \u5e76\u4e0d\u652f\u6301\u3002 \u7a0d\u4f5c\u4fee\u6539\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 #include <iostream> #include <algorithm> template < class T > void sort ( T * data , int len ) { for ( int i = 0 ; i < len ; i ++ ) { // \u9009\u62e9\u6392\u5e8f for ( int j = i + 1 ; j < len ; j ++ ) { if ( data [ i ] > data [ j ]) std :: swap ( data [ i ], data [ j ]); // \u4ea4\u6362\u5143\u7d20\u4f4d\u7f6e } } } template < class T > void output ( T * data , int len ) { for ( int i = 0 ; i < len ; i ++ ) std :: cout << data [ i ] << \" \" ; std :: cout << std :: endl ; } class MyInt { public : int data ; MyInt ( int val ) : data ( val ) { }; bool operator > ( const MyInt & b ) { //\u7528\u4e8esort return data > b . data ; } friend std :: ostream & operator << ( std :: ostream & out , const MyInt & obj ) { out << obj . data ; return out ; } }; int main () { MyInt arr_c [] = { 3 , 2 , 4 , 1 , 5 }; sort ( arr_c , 5 ); output ( arr_c , 5 ); return 0 ; } /* output: 1 2 3 4 5 */ \u5b8c\u5168\u91cd\u8f7d\u4e86\u6d41\u8fd0\u7b97\u7b26\u548c\u5927\u5c0f\u8fd0\u7b97\u7b26\u3002","title":"\u5b9e\u4f8b\u5316\u4e0e\u81ea\u52a8\u63a8\u5bfc"},{"location":"languages/c-oop/polymorphism-and-templates/#_22","text":"\u5bf9\u51fd\u6570\u6a21\u677f\u7684\u5904\u7406\u662f\u5728\u7f16\u8bd1\u671f\u8fdb\u884c\u7684\uff0c \u6bcf\u5f53\u7f16\u8bd1\u5668\u53d1\u73b0\u5bf9\u6a21\u677f\u7684\u4e00\u79cd\u53c2\u6570\u7684\u4f7f\u7528\uff0c\u5c31\u751f\u6210\u5bf9\u5e94\u53c2\u6570\u7684\u4e00\u4efd\u4ee3\u7801 \u3002 1 2 3 4 5 6 7 8 template < typename T > T sum ( T a , T b ) { return a + b ; } int main () { int a = sum ( 1 , 2 ); // \u751f\u6210\u5e76\u7f16\u8bd1 int sum(int, int) double b = sum ( 1.0 , 2.0 ); // \u751f\u6210\u5e76\u7f16\u8bd1 double sum(double, double) return 0 ; }","title":"\u6a21\u677f\u539f\u7406"},{"location":"languages/c-oop/polymorphism-and-templates/#_23","text":"","title":"\u7c7b\u6a21\u677f"},{"location":"languages/c-oop/polymorphism-and-templates/#_24","text":"\u5728\u5b9a\u4e49\u7c7b\u65f6\u4e5f\u53ef\u4ee5\u5c06\u4e00\u4e9b\u7c7b\u578b\u4fe1\u606f\u62bd\u53d6\u51fa\u6765\uff0c\u7528\u6a21\u677f\u53c2\u6570\u6765\u66ff\u6362\uff0c\u4ece\u800c\u4f7f\u7c7b\u66f4\u5177\u901a\u7528\u6027\u3002\u8fd9\u79cd\u7c7b\u88ab\u79f0\u4e3a\u201c\u7c7b\u6a21\u677f\u201d\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #include <iostream> using namespace std ; template < typename T > class A { T data ; public : A ( T _data ) : data ( _data ) { } void print () { cout << data << endl ; } }; int main () { A < int > a ( 1 ); // \u51fd\u6570\u6a21\u677f\u53ef\u4ee5\u81ea\u52a8\u63a8\u5bfc\u7c7b\u578b\uff0c\u4f46\u662f\u7c7b\u6a21\u677f\u4e0d\u53ef\u4ee5 a . print (); return 0 ; } \u6210\u5458\u51fd\u6570\u4e5f\u53ef\u4ee5\u5982\u6b64\u5b9a\u4e49\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 #include <iostream> using namespace std ; template < typename T > class A { T data ; public : A ( T _data ) : data ( _data ) { } void print (); }; template < typename T > void A < T >:: print () { cout << data << endl ; } int main () { A < int > a ( 1 ); a . print (); return 0 ; }","title":"\u5b9a\u4e49"},{"location":"languages/c-oop/polymorphism-and-templates/#_25","text":"\u6211\u4eec\u53ef\u4ee5\u5c06\u7c7b\u6a21\u677f\u89c6\u4e3a\u4e00\u79cd\u7279\u6b8a\u7684\u201c\u51fd\u6570\u201d\uff0c\u9700\u8981\u5411\u5176\u4e2d\u4f20\u5165\u53c2\u6570\u624d\u80fd\u591f\u5b9a\u4e49\u4e00\u4e2a\u5b8c\u6574\u7684\u7c7b\uff0c\u800c\u8fd9\u4e9b\u4f20\u5165\u7684\u53c2\u6570\u6709\u4e24\u79cd\u3002\u4e00\u79cd\u662f\u7c7b\u578b\u53c2\u6570\uff0c\u4e5f\u5c31\u662f\u5728 typename \u6216\u8005 class \u4e4b\u540e\u7684\u53c2\u6570\uff08\u4e0b\u4f8b\u4e2d\u7684\u5c0f T \uff09\uff0c\u7b2c\u4e8c\u79cd\u662f\u975e\u7c7b\u578b\u53c2\u6570\uff0c\u8fd9\u4e2a\u53ef\u80fd\u6709\u975e\u5e38\u591a\u79cd\uff0c\u6bd4\u5982\u6574\u6570\u3001\u679a\u4e3e\u3001\u6307\u9488\uff08\u6307\u5411\u5bf9\u8c61\u6216\u51fd\u6570\uff09\uff0c\u5f15\u7528\uff08\u5f15\u7528\u5bf9\u8c61\u6216\u5f15\u7528\u51fd\u6570\uff09\uff0c\u65e0\u7b26\u53f7\u6574\u6570\u7b49\u7b49\uff0c\u6bd4\u5982\u4e0b\u4f8b\u5c31\u662f\u65e0\u7b26\u53f7\u6574\u6570\u6765\u5b9a\u4e49\u4e86\u6570\u7ec4\u7684\u5927\u5c0f\u3002 \u5b9e\u9645\u4e0a\uff0c\u6a21\u677f\u6bd4\u8f83\u590d\u6742\u65f6\uff0c\u5c16\u62ec\u53f7\u91cc\u53ef\u4ee5\u653e\u5f88\u591a\uff0c\u53ef\u4ee5\u662f\u7c7b\u578b\u4e5f\u53ef\u4ee5\u662f\u975e\u7c7b\u578b\u3002\u5f53\u7136\u7c7b\u578b\u53c2\u6570\u4e5f\u53ef\u4ee5\u6709\u591a\u4e2a\u3002 1 2 3 4 5 6 template < typename T , unsigned size > class array { T elems [ size ]; }; array < char , 10 > array0 ; \u6ce8\u610f\u5230\uff0c size \u53ea\u662f\u4e00\u4e2a\u65e0\u7b26\u53f7\u6574\u6570\u7684\u540d\u5b57\u800c\u5df2\uff0c unsigned \u548c typename \u624d\u662f\u5173\u952e\uff0c\u5b8c\u6574\u7684\u4f20\u5165\u4e24\u4e2a\u53c2\u6570\u624d\u53ef\u5f62\u6210\u4e00\u4e2a\u5b8c\u6574\u7684\u7c7b\uff0c\u5e76\u5b9a\u4e49\u8fd9\u4e2a\u7c7b\u7684\u5bf9\u8c61\u3002 \u4e00\u4e2a\u6a21\u677f\u53ef\u80fd\u4f1a\u5199\u51fa\u591a\u4e2a\u65b0\u7684\u7c7b\uff0c\u8fd9\u4e9b\u7c7b\u662f\u4e0d\u540c\u7684\uff0c\u4e0d\u8fc7\u78b0\u5de7\u90fd\u7528\u4e86\u540c\u4e00\u4e2a\u6a21\u677f\u7684\u540d\u5b57\uff08\u6bd4\u5982\u4e0a\u4f8b\u4e2d\u7684 array \u6a21\u677f\u540d\u5b57\uff09\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 template < typename T , unsigned size > class array { T elems [ size ]; }; int main () { int n = 5 ; // array<char, n> array0; // \u4e0d\u80fd\u4f7f\u7528\u53d8\u91cf const int m = 5 ; array < char , m > array1 ; // \u53ef\u4ee5\u4f7f\u7528\u5e38\u91cf array < char , 5 > array2 ; // \u6216\u5177\u4f53\u6570\u503c return 0 ; } \u6240\u6709\u6a21\u677f\u53c2\u6570\u5fc5\u987b\u5728\u7f16\u8bd1\u671f\u786e\u5b9a\uff0c\u56e0\u800c\u4e0d\u53ef\u4ee5\u4f7f\u7528\u53d8\u91cf\u3002 \u4f8b\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 #include <iostream> #include <algorithm> template < class T , unsigned size > class MyArr { T data [ size ]; public : void sort () { for ( int i = 0 ; i < size ; i ++ ) { // \u9009\u62e9\u6392\u5e8f for ( int j = i + 1 ; j < size ; j ++ ) { if ( data [ i ] > data [ j ]) std :: swap ( data [ i ], data [ j ]); // \u4ea4\u6362\u4e24\u8005\u4f4d\u7f6e } } } void output () { for ( int i = 0 ; i < size ; i ++ ) std :: cout << data [ i ] << \" \" ; std :: cout << std :: endl ; } void input () { for ( int i = 0 ; i < size ; i ++ ) std :: cin >> data [ i ]; } }; int main () { MyArr < int , 5 > arr_a ; arr_a . input (); arr_a . sort (); arr_a . output (); MyArr < float , 5 > arr_b ; arr_b . input (); arr_b . sort (); arr_b . output (); return 0 ; } /* input: 3 2 4 1 5 3.2 2.1 4.3 1.5 5.7 output: 1 2 3 4 5 1.5 2.1 3.2 4.3 5.7 */","title":"\u6a21\u677f\u53c2\u6570"},{"location":"languages/c-oop/polymorphism-and-templates/#_26","text":"\u6a21\u677f\u4f7f\u7528\u6cdb\u578b\u6807\u8bb0\uff0c\u4f7f\u7528\u540c\u4e00\u6bb5\u4ee3\u7801\uff0c\u6765\u5173\u8054\u4e0d\u540c\u4f46\u76f8\u4f3c\u7684\u7279\u5b9a\u884c\u4e3a\uff0c\u6700\u540e\u53ef\u4ee5\u83b7\u5f97\u4e0d\u540c\u7684\u7ed3\u679c\u3002\u6a21\u677f\u4e5f\u662f\u591a\u6001\u7684\u4e00\u79cd\u4f53\u73b0\u3002 \u4f46\u6a21\u677f\u7684\u5173\u8054\u662f\u5728\u7f16\u8bd1\u671f\u5904\u7406\uff0c\u79f0\u4e3a \u9759\u591a\u6001 \u3002 \u6a21\u677f\u7684\u7279\u70b9\uff1a \u5f80\u5f80\u548c \u51fd\u6570\u91cd\u8f7d \u540c\u65f6\u4f7f\u7528 \u9ad8\u6548\uff0c\u7701\u53bb\u51fd\u6570\u8c03\u7528 \u7f16\u8bd1\u540e\u4ee3\u7801\u589e\u591a \u57fa\u4e8e\u7ee7\u627f\u548c\u865a\u51fd\u6570\u7684\u591a\u6001\u5728\u8fd0\u884c\u671f\u5904\u7406\uff0c\u79f0\u4e3a\u52a8\u591a\u6001\u3002 \u865a\u51fd\u6570\u7684\u7279\u70b9\uff1a \u8fd0\u884c\u65f6\uff0c\u7075\u6d3b\u65b9\u4fbf \u4fb5\u5165\u5f0f\uff0c\u5fc5\u987b\u7ee7\u627f \u5b58\u5728\u51fd\u6570\u8c03\u7528 \u6240\u8c13\u7684\u7701\u53bb\u51fd\u6570\u8c03\u7528\u662f\u6307\uff0c\u5982\u679c doSomethingOnA \u548c doSomethingOnB \u7684\u5b9e\u73b0\u9664\u4e86\u7c7b\u578b\u4e0d\u540c\uff0c\u5176\u4ed6\u57fa\u672c\u4e00\u81f4\u7684\u8bdd\u5219\u53ef\u7701\u53bb\u5982\u4e0b\u4ee3\u7801\u3002 1 2 3 4 5 if ( typeof ( a ) == A ) { doSomethingOnA ( a ); } else if ( typeof ( a ) == B ) { doSomethingOnB ( a ); } \u76f4\u63a5\u5199\u4e00\u4e2a\u6a21\u677f\u7136\u540e dosomethingOnWhatever \u3002","title":"\u6a21\u677f\u4e0e\u591a\u6001"},{"location":"languages/c-oop/reference-copy/","text":"\u5f15\u7528\u4e0e\u590d\u5236 \u00b6 \u5e38\u91cf\u5f15\u7528 \u00b6 \u5e38\u91cf\u5f15\u7528\u7684\u610f\u4e49 \u00b6 \u6309\u7167\u6700\u5c0f\u7279\u6743\u539f\u5219\uff1a\u7ed9\u51fd\u6570\u8db3\u591f\u7684\u6743\u9650\u53bb\u5b8c\u6210\u76f8\u5e94\u7684\u4efb\u52a1\uff0c\u4f46\u4e0d\u8981\u7ed9\u4e88\u4ed6\u4efb\u4f55\u591a\u4f59\u7684\u6743\u9650\u3002\u4f8b\u5982\u51fd\u6570 void add(int& a, int& b) \uff0c\u5982\u679c\u5c06\u53c2\u6570\u7c7b\u578b\u5b9a\u4e49\u4e3a int& \uff0c\u5219\u7ed9\u4e88\u8be5\u51fd\u6570\u5728\u51fd\u6570\u4f53\u5185\u4fee\u6539 a \u548c b \u7684\u503c\u7684\u6743\u9650\u3002 \u5982\u679c\u6211\u4eec\u4e0d\u60f3\u7ed9\u4e88\u51fd\u6570\u4fee\u6539\u6743\u9650\uff0c\u5219\u53ef\u4ee5\u5728\u53c2\u6570\u4e2d\u4f7f\u7528\u5e38\u91cf\u3001\u5e38\u91cf\u5f15\u7528 void add(const int& a, const int& b) \u3002\u6b64\u65f6\u51fd\u6570\u4e2d\u4ec5\u80fd\u8bfb\u53d6 a \u548c b \u7684\u503c\uff0c\u65e0\u6cd5\u5bf9 a \u3001 b \u8fdb\u884c\u4efb\u4f55\u4fee\u6539\u64cd\u4f5c\u3002 \u62f7\u8d1d\u6784\u9020\u51fd\u6570 \u00b6 \u5b9a\u4e49\u4e0e\u8bed\u6cd5\u89c4\u5219 \u00b6 \u62f7\u8d1d\u6784\u9020\u51fd\u6570\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u6784\u9020\u51fd\u6570\uff0c\u5b83\u7684\u53c2\u6570\u662f\u8bed\u8a00\u89c4\u5b9a\u7684\uff0c\u662f\u540c\u7c7b\u5bf9\u8c61\u7684\u5e38\u91cf\u5f15\u7528\u3002\u4f5c\u7528\uff1a\u7528\u53c2\u6570\u5bf9\u8c61\u7684\u5185\u5bb9\u521d\u59cb\u5316\u5f53\u524d\u5bf9\u8c61\u3002 1 2 3 4 5 6 7 8 Vector :: Vector ( const Vector & other ) { capacity = other . capacity ; len = other . len ; array = new Node [ other . capacity ]; for ( int i = 0 ; i < len ; i ++ ) { array [ i ] = other . array [ i ]; } } \u8c03\u7528\u65f6\u673a \u00b6 \u62f7\u8d1d\u6784\u9020\u51fd\u6570\u88ab\u8c03\u7528\u7684\u4e09\u79cd\u5e38\u89c1\u60c5\u51b5\u3002\u5728\u8fd9\u4e9b\u60c5\u51b5\u4e0b\uff0c\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u8c03\u7528\u201c\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u201d\uff0c\u5728\u5df2\u6709\u5bf9\u8c61\u57fa\u7840\u4e0a\u751f\u6210\u65b0\u5bf9\u8c61\u3002 \u7528\u4e00\u4e2a\u7c7b\u5bf9\u8c61\u5b9a\u4e49\u53e6\u4e00\u4e2a\u65b0\u7684\u7c7b\u5bf9\u8c61\uff1a 1 2 3 Test a ; Test b ( a ); Test c = a ; \u51fd\u6570\u8c03\u7528\u65f6\u4ee5\u7c7b\u7684\u5bf9\u8c61\u4e3a\u5f62\u53c2\uff1a 1 Func ( Test a ) \u51fd\u6570\u8fd4\u56de\u7c7b\u5bf9\u8c61\uff08\u65e0\u8fd4\u56de\u503c\u4f18\u5316\u7684\u60c5\u51b5\u4e0b\uff09\uff1a 1 Test Func ( void ) \u9690\u5f0f\u62f7\u8d1d\u6784\u9020\u51fd\u6570 \u00b6 \u7c7b\u7684\u65b0\u5bf9\u8c61\u88ab\u5b9a\u4e49\u540e\uff0c\u4f1a\u8c03\u7528\u6784\u9020\u51fd\u6570\u6216\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002\u5982\u679c\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u4e14\u5f53\u524d\u6ca1\u6709\u7ed9\u7c7b\u663e\u5f0f\u5b9a\u4e49\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u7f16\u8bd1\u5668\u5c06\u81ea\u52a8\u5408\u6210\u201c\u9690\u5f0f\u5b9a\u4e49\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u201d\uff0c\u5176\u529f\u80fd\u662f\u8c03\u7528\u6240\u6709\u6570\u636e\u6210\u5458\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u6216\u62f7\u8d1d\u8d4b\u503c\u8fd0\u7b97\u7b26\u3002 \u5bf9\u4e8e\u57fa\u7840\u7c7b\u578b\u6765\u8bf4\uff0c\u9ed8\u8ba4\u7684\u62f7\u8d1d\u65b9\u5f0f\u4e3a\u4f4d\u62f7\u8d1d\uff08\u82f1\u8bed\uff1aBitwise Copy\uff09\uff0c\u5373\u76f4\u63a5\u5bf9\u6574\u5757\u5185\u5b58\u8fdb\u884c\u590d\u5236\u3002 \u4f4d\u62f7\u8d1d\u539f\u672c\u662f C \u4e2d\u7684\u6982\u5ff5\u3002\u5728 C++ \u4e2d\uff0c\u53ea\u6709\u57fa\u7840\u7c7b\u578b\uff08 int \u3001 double \u7b49\uff09\u624d\u4f1a\u8fdb\u884c\u4f4d\u62f7\u8d1d\uff1b\u5bf9\u4e8e\u81ea\u5b9a\u4e49\u7c7b\uff0c\u7f16\u8bd1\u5668\u4f1a\u9012\u5f52\u8c03\u7528\u6240\u6709\u6570\u636e\u6210\u5458\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u6216\u62f7\u8d1d\u8d4b\u503c\u8fd0\u7b97\u7b26\u3002\u4f46\u4e00\u4e9b\u6559\u6750\u4e2d\u4ecd\u7136\u628a\u8fd9\u79cd\u884c\u4e3a\u79f0\u4e3a\u201c\u4f4d\u62f7\u8d1d\u201d\uff0c\u4ee5\u533a\u522b\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u62f7\u8d1d\u65b9\u6cd5\u3002 \u9690\u5f0f\u5b9a\u4e49\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u7684\u7f3a\u9677\uff1a\u9690\u5f0f\u5b9a\u4e49\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u5728\u9047\u5230\u6307\u9488\u7c7b\u578b\u6210\u5458\u65f6\u53ef\u80fd\u4f1a\u51fa\u9519,\u5bfc\u81f4\u591a\u4e2a\u6307\u9488\u7c7b\u578b\u7684\u53d8\u91cf\u6307\u5411\u540c\u4e00\u4e2a\u5730\u5740\u3002 \u6267\u884c\u987a\u5e8f \u00b6 \u57fa\u672c\u7684\u6267\u884c\u987a\u5e8f \u4ee5\u4e0b\u8ff0\u7684 func \u51fd\u6570\u4e3a\u4f8b\uff0c\u8c03\u7528\u8be5\u51fd\u6570\u65f6\uff0c\u51fd\u6570\u4e2d\u5404\u7c7b\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u7684\u6267\u884c\u987a\u5e8f\u5982\u4e0b\u3002 \u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u5b9e\u9645\u4e0a\u5728\u4e3b\u51fd\u6570\u4f53\u5185\uff0c\u5047\u8bbe\u6211\u4eec\u7981\u7528\u8fd4\u56de\u503c\u4f18\u5316\u3002 Myclass a = func(d) \u8fd9\u4e2a\u8bed\u53e5\u5185\u7684\u8fd4\u56de\u503c\u7c7b\u6784\u9020\u8c03\u7528\u4e86\u62f7\u8d1d\u6784\u9020\uff0c\u5e76\u4e14\u76f8\u5173\u7684\u6790\u6784\u975e\u5e38\u503c\u5f97\u7814\u7a76\uff0c\u4e0b\u6587\u5c06\u5728\u79fb\u52a8\u6784\u9020\u51fd\u6570\u7684\u4f8b\u5b50\u4e2d\u5c06\u8fdb\u4e00\u6b65\u9610\u8ff0\u3002 \u4f8b\u5b50 \uff08\u7f16\u8bd1\u6307\u4ee4 g++ test.cpp --std=c++11 -fno-elide-constructors \u2013o test \uff09 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 #include <iostream> using namespace std ; class Test { public : Test () { // \u6784\u9020\u51fd\u6570 cout << \"Test()\" << endl ; } Test ( const Test & src ) { // \u62f7\u8d1d\u6784\u9020 cout << \"Test(const Test&)\" << endl ; } ~ Test () { // \u6790\u6784\u51fd\u6570 cout << \"~Test()\" << endl ; } }; Test copyObj ( Test obj ) { cout << \"func()...\" << endl ; return Test (); } int main () { cout << \"main()...\" << endl ; Test t ; t = copyObj ( t ); return 0 ; } \u8f93\u51fa\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 main()... Test() Test(const Test&) func()... Test() Test(const Test&) ~Test() ~Test() ~Test() ~Test() \u5bf9\u5e94\u5173\u7cfb\u5e76\u4e0d\u590d\u6742\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u5176\u5b9e\u6700\u6709\u610f\u601d\u7684\u662f\uff0c\u8fd9\u91cc\u5bf9\u4e8e\u8fd4\u56de\u7c7b\u5bf9\u8c61\u7684\u6784\u9020\u3002\u5728\u7981\u7528\u8fd4\u56de\u503c\u4f18\u5316\u7684\u6761\u4ef6\u4e0b\uff0c\u5982\u679c\u4e00\u4e2a\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u67d0\u4e2a\u5bf9\u8c61\uff0c\u90a3\u5728\u51fd\u6570\u8fd4\u56de\u524d\u9700\u8981\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u6784\u5efa\u8fd4\u56de\u503c\u3002 \u5373\u4f7f\u6211\u8fd4\u56de\u7684\u4e1c\u897f\u5c31\u662f\u6211\u4f20\u8fdb\u6765\u7684\u5f62\u53c2\u5bf9\u8c61\uff0c\u8fd4\u56de\u524d\u7684\u8fd9\u6b21\u6784\u9020\u4ecd\u7136\u4f1a\u53d1\u751f\uff0c\u4e5f\u5c31\u662f\u8fd9\u9053\u9898\u4e2d f1 \u7684\u7b2c\u4e8c\u6b21\u6784\u9020\u51fd\u6570\u8c03\u7528\u3002 \u4f46\u662f\u5bf9\u4e8e\u8fd4\u56de\u503c\u7684\u6784\u9020\u8c03\u7528\u7684\u5230\u5e95\u662f\u79fb\u52a8\u6784\u9020\u51fd\u6570\uff0c\u8fd8\u662f\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u5bf9\u6b64 C++11 \u6709\u89c4\u5b9a\uff1a\u5728\u65e0\u8fd4\u56de\u503c\u4f18\u5316\u7684\u60c5\u51b5\u4e0b\uff0c\u9ed8\u8ba4\u8c03\u7528\u79fb\u52a8\u6784\u9020\u51fd\u6570\u3002 \u6309\u6b64\u7406\u89e3\uff0c\u6b64\u5904\u6784\u9020\u8fd4\u56de\u503c\u7406\u5e94\u8c03\u7528\u79fb\u52a8\u6784\u9020\uff0c\u800c\u975e\u62f7\u8d1d\u6784\u9020\uff0c\u4f3c\u4e4e\u4ea7\u751f\u4e86\u77db\u76fe\u3002\u7136\u800c\uff0c\u5f53\u6211\u4eec\u663e\u5f0f\u5b9a\u4e49\u4e86\u62f7\u8d1d\u6784\u9020\uff0c\u7f16\u8bd1\u5668\u5c31\u4e0d\u4f1a\u9ed8\u8ba4\u751f\u6210\u79fb\u52a8\u6784\u9020\u4e86\u3002\u4ece\u800c\u7981\u7528\u4e86\u8fd4\u56de\u503c\u4f18\u5316\u540e\uff0c\u5728\u8fd4\u56de\u503c\u7684\u6784\u9020\u5f53\u4e2d\u8c03\u7528\u4e86\u62f7\u8d1d\u6784\u9020\u800c\u975e\u79fb\u52a8\u6784\u9020\uff0c\u56e0\u4e3a\u7f16\u8bd1\u5668\u4e0d\u4f1a\u9ed8\u8ba4\u751f\u6210\u79fb\u52a8\u6784\u9020\uff0c\u6211\u4e5f\u6ca1\u6709\u81ea\u5df1\u5b9a\u4e49\u3002 \u66f4\u8fdb\u4e00\u6b65\uff0c\u5982\u679c\u6211\u663e\u5f0f\u5b9a\u4e49\u4e86\u62f7\u8d1d\u8d4b\u503c\uff0c\u5c31\u4e0d\u4f1a\u9ed8\u8ba4\u751f\u6210\u79fb\u52a8\u8d4b\u503c\u4e86\u3002\u5982\u679c\u4e24\u4e2a\u90fd\u4e0d\u5b9a\u4e49\uff0c\u4e24\u4e2a\u90fd\u4f1a\u9ed8\u8ba4\u751f\u6210\u3002 \u62f7\u8d1d\u6784\u9020\u51fd\u6570\u7684\u7f3a\u9677 \u00b6 \u5f53\u7c7b\u5185\u542b\u6307\u9488\u7c7b\u578b\u7684\u6210\u5458\u65f6\uff0c\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u4f1a\u4f7f\u5f97\u4e24\u4e2a\u6307\u6b63\u6307\u5411\u540c\u4e00\u5185\u5b58\u7a7a\u95f4\u3002\u5728\u6790\u6784\u65f6\uff0c\u8be5\u5185\u5b58\u7a7a\u95f4\u53ef\u80fd\u88ab\u53cd\u590d\u91ca\u653e\u3002\u4e3a\u907f\u514d\u6307\u9488\u88ab\u91cd\u590d\u5220\u9664\uff0c\u4e0d\u5e94\u4f7f\u7528\u9690\u5f0f\u5b9a\u4e49\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002 \u4ee5\u53ca\uff0c\u5f53 \u5bf9\u8c61\u8f83\u5927 \u65f6\uff0c\u9891\u7e41\u7684\u62f7\u8d1d\u6784\u9020\u4f1a\u9020\u6210\u7a0b\u5e8f \u6548\u7387\u7684\u663e\u8457\u4e0b\u964d \u3002 \u6545\u800c\uff0c\u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u5e94\u5c3d\u53ef\u80fd\u907f\u514d\u4f7f\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002 \u89e3\u51b3\u65b9\u6cd5 \u00b6 \u4f7f\u7528\u5f15\u7528\u3001\u5e38\u91cf\u5f15\u7528\u4f20\u53c2\u6570\u6216\u8fd4\u56de\u5bf9\u8c61\uff1a 1 2 3 4 5 func ( MyClass a ) // BAD func ( const MyClass & a ) // GOOD MyClass func () // BAD MyClass & func () // GOOD \u5c06\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u58f0\u660e\u4e3a private \uff1a 1 2 3 4 5 class MyClass { MyClass ( const MyClass & ) { } public : MyClass () = default ; } \u7528 delete \u5173\u952e\u5b57\u8ba9\u7f16\u8bd1\u5668\u4e0d\u751f\u6210\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u7684\u9690\u5f0f\u5b9a\u4e49\u7248\u672c\u3002 1 2 3 4 5 class MyClass { public : MyClass () = default ; MyClass ( const MyClass & ) = delete ; } \u79fb\u52a8\u6784\u9020\u51fd\u6570 \u00b6 \u53f3\u503c\u4e0e\u53f3\u503c\u5f15\u7528 \u00b6 \u5de6\u53f3\u503c \u5de6\u503c\uff1a\u53ef\u4ee5\u53d6\u5730\u5740\u3001\u6709\u540d\u5b57\u7684\u503c\u3002 \u53f3\u503c\uff1a\u4e0d\u80fd\u53d6\u5730\u5740\u3001\u6ca1\u6709\u540d\u5b57\u7684\u503c\u3002\u5e38\u89c1\u4e8e\u5e38\u503c\u3001\u51fd\u6570\u8fd4\u56de\u503c\u3001\u8868\u8fbe\u5f0f\u3002 \u867d\u7136\u53f3\u503c\u4e0d\u80fd\u53d6\u5730\u5740\u4e5f\u6ca1\u6709\u540d\u5b57\uff0c\u4f46\u662f\u53f3\u503c\u53ef\u4ee5\u8fd0\u7b97\u3002 1 2 3 int a = 1 ; int b = func (); int c = a + b ; \u5176\u4e2d a \u3001 b \u3001 c \u4e3a\u5de6\u503c\uff0c 1 \u3001 func \u51fd\u6570\u8fd4\u56de\u503c\u3001 a + b \u7684\u7ed3\u679c\u4e3a\u53f3\u503c\u3002 1 2 3 4 5 6 7 8 9 10 11 12 #include <iostream> using namespace std ; int x (); int main () { int && a = x () + 1 ; cout << a << endl ; // 2 a ++ ; cout << a << endl ; // 3 return 0 ; } int x () { return 1 ; } \u53f3\u503c\u53ef\u4ee5\u8fd0\u7b97\uff0c\u4e14\u53f3\u503c\u5f15\u7528\u63a5\u6536\u53f3\u503c\u540e\u4e5f\u53ef\u4ee5\u8fd0\u7b97\u3002 \u5de6\u503c\u53ef\u4ee5\u53d6\u5730\u5740\uff0c\u5e76\u4e14\u53ef\u4ee5\u88ab & \u5f15\u7528\uff08\u5de6\u503c\u5f15\u7528\uff09\uff1a 1 2 3 4 5 int * d = & a ; int & d = a ; // OK int * e = & ( a + b ); int & e = a + b ; // Error! \u53f3\u503c\u5f15\u7528 \u867d\u7136\u53f3\u503c\u65e0\u6cd5\u53d6\u5730\u5740\uff0c\u4f46\u53ef\u4ee5\u88ab && \u5f15\u7528\uff08\u53f3\u503c\u5f15\u7528\uff09\u3002 \u53f3\u503c\u5f15\u7528\u53ef\u4ee5\u7ed1\u5b9a\u53f3\u503c\uff1a\u6bd4\u5982\u53ef\u4ee5 int&& e = a + b \u3002 \u53f3\u503c\u5f15\u7528\u65e0\u6cd5\u7ed1\u5b9a\u5de6\u503c\uff1a\u8bed\u53e5 int&& e = a \u4f1a\u62a5\u9519\u3002 \u603b\u4e4b\uff0c\u5de6\u503c\u5f15\u7528\u80fd\u7ed1\u5b9a\u5de6\u503c\uff0c\u53f3\u503c\u5f15\u7528\u80fd\u7ed1\u5b9a\u53f3\u503c\u3002\u7279\u4f8b\uff1a \u5e38\u91cf\u5de6\u503c\u5f15\u7528\u80fd\u4e5f\u7ed1\u5b9a\u53f3\u503c \uff0c\u56e0\u4e3a\u5e38\u91cf\u5de6\u503c\u5f15\u7528\u4e0d\u4f1a\u6539\u53d8\u5185\u5b58\u7a7a\u95f4\u7684\u6570\u636e\uff0c\u6545\u800c\u4e0d\u4f1a\u5f71\u54cd\u53f3\u503c\u3002\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u7ed1\u5b9a\u3002 1 2 const int & e = 3 ; // OK const int & e = a * b ; // OK \u6ce8\u610f\u5230\uff0c\u6240\u6709\u7684\u5f15\u7528\uff08\u5305\u62ec\u53f3\u503c\u5f15\u7528\uff09\u672c\u8eab\u90fd\u662f\u5de6\u503c\uff0c\u7ed3\u5408\u8be5\u89c4\u5219\u548c\u4e0a\u8868\u4fbf\u53ef\u5224\u65ad\u5404\u79cd\u6784\u9020\u51fd\u6570\u3001\u8d4b\u503c\u8fd0\u7b97\u7b26\u4e2d\u4f20\u9012\u53c2\u6570\u548c\u53d6\u8fd4\u56de\u503c\u7684\u5f15\u7528\u7ed1\u5b9a\u60c5\u51b5\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 #include <iostream> using namespace std ; int x (); int main () { int && a = x () + 1 ; cout << a << endl ; // 2 a ++ ; cout << a << endl ; // 3 int & b = a ; b ++ ; cout << a << endl ; // 4 return 0 ; } int x () { return 1 ; } \u5982\u6b64\u4f8b\uff0c\u53f3\u503c\u5f15\u7528\u672c\u8eab\u662f\u5de6\u503c\uff0c\u53ef\u4ee5\u88ab\u53d6\u5730\u5740\u3002 \u53e6\u5916\u4e00\u4f8b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 #include <iostream> using namespace std ; void ref ( int & x ) { cout << \"left \" << x << endl ; } void ref ( int && x ) { cout << \"right \" << x << endl ; } int main () { int a = 1 ; ref ( a ); // \"left 1\" ref ( 2 ); // \"right 2\" return 0 ; } \u5982\u679c\u6ca1\u6709\u5b9a\u4e49 ref(int&& x) \u51fd\u6570\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f ref(int& x) \u7684\u51fd\u6570\u53c2\u6570\u7c7b\u578b\u662f\u4e00\u4e2a\u5de6\u503c\u5f15\u7528\uff0c\u800c 2 \u662f\u4e00\u4e2a\u53f3\u503c\uff0c\u4e0d\u80fd\u8c03\u7528 ref (int& x) \u3002\u56e0\u6b64\u6ca1\u6709\u53ef\u4f9b\u8c03\u7528\u7684\u51fd\u6570\u3002 \u53e6\u5916\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #include <iostream> using namespace std ; void ref ( int & x ) { cout << \"left \" << x << endl ; } void ref ( int && x ) { cout << \"right \" << x << endl ; ref ( x ); } int main () { ref ( 1 ); // \"right 1\" \"left 1\" return 0 ; } \u5982\u524d\u6587\u6240\u8ff0\uff0c\u6240\u6709\u5f15\u7528\u672c\u8eab\u90fd\u662f\u5de6\u503c\uff0c\u6545\u800c ref(1) \u9996\u5148\u8c03\u7528 ref(int&& x) \u51fd\u6570\uff0c\u6b64\u65f6\u53f3\u503c\u5f15\u7528 x \u4e3a\u5de6\u503c\uff0c\u56e0\u6b64 ref(x) \u8c03\u7528 ref(int& x) \u51fd\u6570\u3002 \u79fb\u52a8\u6784\u9020\u51fd\u6570 \u00b6 \u5b9a\u4e49\u4e0e\u610f\u4e49 \u53f3\u503c\u5f15\u7528\u53ef\u4ee5\u5ef6\u7eed\u5373\u5c06\u9500\u6bc1\u53d8\u91cf\u7684\u751f\u547d\u5468\u671f\uff0c\u7528\u4e8e\u6784\u9020\u51fd\u6570\u53ef\u4ee5\u63d0\u5347\u5904\u7406\u6548\u7387\uff0c\u5728\u6b64\u8fc7\u7a0b\u4e2d\u5c3d\u53ef\u80fd\u5c11\u5730\u8fdb\u884c\u62f7\u8d1d\u3002 \u4f7f\u7528\u53f3\u503c\u5f15\u7528\u4f5c\u4e3a\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\u53eb\u505a\u79fb\u52a8\u6784\u9020\u51fd\u6570\u3002 1 ClassName ( ClassName && VariableName ); \u4e24\u79cd\u6784\u9020\u672c\u8d28\u533a\u522b \u79fb\u52a8\u6784\u9020\u51fd\u6570\u4e0e\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u6700\u4e3b\u8981\u7684\u5dee\u522b\u5c31\u662f\u7c7b\u4e2d\u5806\u5185\u5b58\u662f\u91cd\u65b0\u5f00\u8f9f\u5e76\u62f7\u8d1d\uff0c\u8fd8\u662f\u76f4\u63a5\u5c06\u6307\u9488\u6307\u5411\u90a3\u5757\u5730\u5740\u3002\u5bf9\u4e8e\u4e00\u4e9b\u5373\u5c06\u6790\u6784\u7684\u4e34\u65f6\u7c7b\uff0c\u79fb\u52a8\u6784\u9020\u51fd\u6570\u76f4\u63a5\u5229\u7528\u4e86\u539f\u6765\u4e34\u65f6\u5bf9\u8c61\u4e2d\u7684\u5806\u5185\u5b58\uff0c\u65b0\u7684\u5bf9\u8c61\u65e0\u9700\u5f00\u8f9f\u5185\u5b58\uff0c\u4e34\u65f6\u5bf9\u8c61\u65e0\u9700\u91ca\u653e\u5185\u5b58\uff0c\u4ece\u800c\u5927\u5927\u63d0\u9ad8\u8ba1\u7b97\u6548\u7387\u3002 \u4f8b\u5b50 \u5b8c\u6574\u5b9a\u4e49\u6240\u6709\u51fd\u6570\u4ee5\u53ca\u542f\u7528\u8fd4\u56de\u503c\u4f18\u5316 g++ test.cpp --std=c++11 -o test \u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 #include <iostream> using namespace std ; class Test { public : int * buf ; Test () { buf = new int [ 10 ]; cout << \"Test(): this->buf @ \" << hex << buf << endl ; } ~ Test () { cout << \"~Test(): this->buf @ \" << hex << buf << endl ; if ( buf ) delete [] buf ; } Test ( const Test & t ) : buf ( new int [ 10 ]) { for ( int i = 0 ; i < 10 ; i ++ ) buf [ i ] = t . buf [ i ]; cout << \"Test(const Test&) called. this->buf @ \" << hex << buf << endl ; } Test ( Test && t ) : buf ( t . buf ) { cout << \"Test(Test&&) called. this->buf @ \" << hex << buf << endl ; t . buf = nullptr ; } }; Test GetTemp () { Test tmp ; cout << \"GetTemp(): tmp.buf @ \" << hex << tmp . buf << endl ; return tmp ; } void fun ( Test t ) { cout << \"fun(Test t): t.buf @ \" << hex << t . buf << endl ; } int main () { Test a = GetTemp (); cout << \"main(): a.buf @ \" << hex << a . buf << endl ; fun ( a ); return 0 ; } /* output: Test(): this->buf @ 0x7fa908c04b90 GetTemp(): tmp.buf @ 0x7fa908c04b90 main(): a.buf @ 0x7fa908c04b90 Test(const Test&) called. this->buf @ 0x7fa908c04ba0 fun(Test t): t.buf @ 0x7fa908c04ba0 ~Test(): this->buf @ 0x7fa908c04ba0 ~Test(): this->buf @ 0x7fa908c04b90 */ \u6ca1\u6709\u8c03\u7528\u79fb\u52a8\u6784\u9020\u51fd\u6570\uff0c\u4e5f\u5c11\u8c03\u7528\u4e86\u51e0\u6b21\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002 \u5173\u952e\u70b9\u5728\u4e8e\uff0c\u8fd4\u56de\u503c\u4f18\u5316\u4e4b\u540e\u4e0d\u4f1a\u901a\u8fc7\u79fb\u52a8\u6784\u9020\u6765\u6784\u9020\u8fd4\u56de\u503c\u7c7b\uff0c\u4e5f\u4e0d\u4f1a\u901a\u8fc7\u79fb\u52a8\u6784\u9020\u6765\u6784\u9020 a \uff0c\u5b9e\u73b0\u4e86\u76f4\u63a5 return \u3002 \u53e6\u4e00\u4f8b\uff0c\u5b8c\u6574\u5b9a\u4e49\u6240\u6709\u51fd\u6570\u4f46\u7981\u7528\u8fd4\u56de\u503c\u4f18\u5316 g++ test.cpp --std=c++11 -fno-elide-constructors -o test \uff1a \u8fd9\u91cc\u8bfe\u4ef6\u4e0a\u7684\u6ce8\u91ca\u6709\u4e9b\u8bef\u5bfc\uff0c\u6211\u5728 rextester \u8f93\u51fa\u8be5\u6bb5\u4ee3\u7801\uff0c\u91c7\u7528\u7684\u6307\u4ee4\u4e3a g++ -Wall -std=c++14 -O2 -fno-elide-constructors -o a.out source_file.cpp \uff1a 1 2 3 4 5 6 7 8 9 10 11 12 output: Test(): this->buf @ 0x563a2616ae70 GetTemp(): tmp.buf @ 0x563a2616ae70 Test(Test&&) called. this->buf @ 0x563a2616ae70 ~Test(): this->buf @ 0 Test(Test&&) called. this->buf @ 0x563a2616ae70 ~Test(): this->buf @ 0 main() : a.buf @ 0x563a2616ae70 Test(const Test&) called. this->buf @ 0x563a2616beb0 fun(Test t): t.buf @ 0x563a2616beb0 ~Test(): this->buf @ 0x563a2616beb0 ~Test(): this->buf @ 0x563a2616ae70 \u7981\u7528\u8fd4\u56de\u503c\u4f18\u5316\u4f46\u662f\u540c\u65f6\u5b9a\u4e49\u4e86\u79fb\u52a8\u6784\u9020\u51fd\u6570\uff0c\u6545\u800c\u9700\u8981\u901a\u8fc7\u79fb\u52a8\u6784\u9020\u6765\u6784\u9020\u8fd4\u56de\u503c\u7c7b\u3002\u4e4b\u540e\u7acb\u523b\u5c06 tmp \u6790\u6784\uff08\u7531\u4e8e\u79fb\u52a8\u6784\u9020\u5df2\u7ecf\u5c06 tmp \u7684\u6307\u9488\u7f6e\u7a7a\u4e86\uff0c\u6545\u800c buf \u5730\u5740\u4e3a 0 \uff09\uff0c\u4f46\u662f\u6ca1\u6709\u6790\u6784\u8fd4\u56de\u503c\u7c7b GetTemp \u3002\u8fd4\u56de\u503c\u7c7b GetTemp \u5bf9 a \u79fb\u52a8\u6784\u9020\uff0c\u8fd9\u4f7f\u5f97 GetTemp \u7684 buf \u5730\u5740\u4e5f\u4e3a 0 \u3002\u8fd9\u4e00\u6b65\u79fb\u52a8\u6784\u9020\u540e\uff0c\u9a6c\u4e0a\u6790\u6784\u4e86 GetTemp \u3002 \u7efc\u4e0a\u6240\u8ff0\uff0c Test a = GetTemp() \u8fd9\u4e00\u8bed\u53e5\u7684\u6267\u884c\u987a\u5e8f\u662f\u5148\u6784\u9020 tmp \uff0c\u79fb\u52a8\u6784\u9020\u8fd4\u56de\u503c\u7c7b\u3002\u7acb\u523b\u6790\u6784 tmp \uff0c\u8fd4\u56de\u503c\u7c7b\u79fb\u52a8\u6784\u9020 a \uff0c\u63a5\u7740\u6790\u6784\u8fd4\u56de\u503c\u7c7b\u3002 \u7ed3\u5408\u4f8b\u5b50\uff0c\u6211\u4eec\u6765\u63a2\u7a76\u4e0b\u8fd4\u56de\u503c\u7c7b\u5728\u7981\u7528\u8fd4\u56de\u503c\u4f18\u5316\u6761\u4ef6\u4e0b\u7684\u6790\u6784\u987a\u5e8f\u3002\u6d4b\u8bd5\u4ee3\u7801\u5982\u4e0b\uff0c\u7f16\u8bd1\u6307\u4ee4\u4e3a g++ -Wall -std=c++14 -O2 -fno-elide-constructors -o a.out source_file.cpp \uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 #include <iostream> using namespace std ; class Test { public : int * buf ; Test () { buf = new int [ 10 ]; cout << \"Test(): this->buf @ \" << hex << buf << endl ; } ~ Test () { cout << \"~Test(): this->buf @ \" << hex << buf << endl ; if ( buf ) delete [] buf ; } Test ( const Test & t ) : buf ( new int [ 10 ]) { for ( int i = 0 ; i < 10 ; i ++ ) buf [ i ] = t . buf [ i ]; cout << \"Test(const Test&) called. this->buf @ \" << hex << buf << endl ; } Test ( Test && t ) : buf ( t . buf ) { cout << \"Test(Test&&) called. this->buf @ \" << hex << buf << endl ; t . buf = nullptr ; } }; Test GetTemp ( Test x ) { Test tmp ; cout << \"GetTemp(): tmp.buf @ \" << hex << tmp . buf << endl ; return tmp ; } void fun ( Test t ) { cout << \"fun(Test t): t.buf @ \" << hex << t . buf << endl ; } int main () { Test d ; Test a = GetTemp ( d ); cout << \"main(): a.buf @ \" << hex << a . buf << endl ; fun ( a ); return 0 ; } /* output: Test(): this->buf @ 0x5572ec8c2e70 Test(const Test&) called. this->buf @ 0x5572ec8c3eb0 Test(): this->buf @ 0x5572ec8c3ee0 GetTemp(): tmp.buf @ 0x5572ec8c3ee0 Test(Test&&) called. this->buf @ 0x5572ec8c3ee0 ~Test(): this->buf @ 0 Test(Test&&) called. this->buf @ 0x5572ec8c3ee0 ~Test(): this->buf @ 0 ~Test(): this->buf @ 0x5572ec8c3eb0 main(): a.buf @ 0x5572ec8c3ee0 Test(const Test&) called. this->buf @ 0x5572ec8c3eb0 fun(Test t): t.buf @ 0x5572ec8c3eb0 ~Test(): this->buf @ 0x5572ec8c3eb0 ~Test(): this->buf @ 0x5572ec8c3ee0 ~Test(): this->buf @ 0x5572ec8c2e70 */ \u53ef\u4ee5\u53d1\u73b0\uff0c\u5148\u62f7\u8d1d\u6784\u9020\u4e86 x \uff0c\u63a5\u7740\u6784\u9020 tmp \uff0c\u79fb\u52a8\u6784\u9020 GetTemp \uff0c\u9a6c\u4e0a\u6790\u6784 tmp \uff0c\u79fb\u52a8\u6784\u9020 a \uff0c\u6790\u6784 GetTemp \uff0c\u6790\u6784 x \u3002\u65454\u548c5\u4e4b\u95f4\u53ef\u80fd\u8fd8\u4f1a\u8fdb\u884c\u975e\u5e38\u591a\u7684\u64cd\u4f5c\u3002 \u518d\u8005\uff0c\u5220\u9664\u79fb\u52a8\u6784\u9020\u51fd\u6570\u4e14\u7981\u7528\u8fd4\u56de\u503c\u4f18\u5316\u3002\u7f16\u8bd1\u6307\u4ee4 g++ -Wall -std=c++14 -O2 -fno-elide-constructors -o a.out source_file.cpp \uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 #include <iostream> using namespace std ; class Test { public : int * buf ; Test () { buf = new int [ 10 ]; cout << \"Test(): this->buf @ \" << hex << buf << endl ; } ~ Test () { cout << \"~Test(): this->buf @ \" << hex << buf << endl ; if ( buf ) delete [] buf ; } Test ( const Test & t ) : buf ( new int [ 10 ]) { for ( int i = 0 ; i < 10 ; i ++ ) buf [ i ] = t . buf [ i ]; cout << \"Test(const Test&) called. this->buf @ \" << hex << buf << endl ; } Test ( Test && t ) : buf ( t . buf ) { cout << \"Test(Test&&) called. this->buf @ \" << hex << buf << endl ; t . buf = nullptr ; } }; Test GetTemp () { Test tmp ; cout << \"GetTemp(): tmp.buf @ \" << hex << tmp . buf << endl ; return tmp ; } void fun ( Test t ) { cout << \"fun(Test t): t.buf @ \" << hex << t . buf << endl ; } int main () { Test a = GetTemp (); cout << \"main(): a.buf @ \" << hex << a . buf << endl ; fun ( a ); return 0 ; } /* output: Test(): this->buf @ 0x5638c49e8e70 GetTemp(): tmp.buf @ 0x5638c49e8e70 Test(const Test&) called. this->buf @ 0x5638c49e9eb0 ~Test(): this->buf @ 0x5638c49e8e70 Test(const Test&) called. this->buf @ 0x5638c49e8e70 ~Test(): this->buf @ 0x5638c49e9eb0 main(): a.buf @ 0x5638c49e8e70 Test(const Test&) called. this->buf @ 0x5638c49e9eb0 fun(Test t): t.buf @ 0x5638c49e9eb0 ~Test(): this->buf @ 0x5638c49e9eb0 ~Test(): this->buf @ 0x5638c49e8e70 */ \u8fd9\u91cc\u53ea\u6709\u62f7\u8d1d\u6784\u9020\uff0c\u7f16\u8bd1\u5668\u6ca1\u6709\u9ed8\u8ba4\u751f\u6210\u79fb\u52a8\u6784\u9020\u3002\u62f7\u8d1d\u6784\u9020\u4e86\u8fd4\u56de\u503c\u7c7b\u540e\uff0c\u7acb\u523b\u6790\u6784\u4e86 tmp \uff0c\u91ca\u653e\u4e86\u5c3e\u53f7\u4e3a 70 \u7684\u7a7a\u95f4\u3002\u6ce8\u610f\u5230\uff0c\u7a7a\u95f4\u91ca\u653e\u4e4b\u540e\u9a6c\u4e0a\u5c31\u53ef\u4ee5\u518d\u6b21\u88ab\u4f7f\u7528\uff0c\u6240\u4ee5\u8fd4\u56de\u503c\u7c7b\u53bb\u62f7\u8d1d\u6784\u9020 a \u65f6\uff0c\u7528\u7684\u4fbf\u662f\u4e0a\u6b21\u88ab\u6790\u6784\u91ca\u653e\u51fa\u6765\u7684\u5c3e\u53f7\u4e3a 70 \u7684\u7a7a\u95f4\u3002\u63a5\u4e0b\u6765\u6790\u6784\u6389\u8fd4\u56de\u503c\u7c7b\uff0c\u91ca\u653e\u4e86\u5c3e\u53f7\u4e3a b0 \u7684\u7a7a\u95f4\uff0c\u4e0b\u4e00\u6b21 fun(a) \u5f53\u4e2d\u5bf9\u5f62\u53c2\u7684\u62f7\u8d1d\u6784\u9020\u9a6c\u4e0a\u5c31\u5229\u7528\u4e86 b0 \u7a7a\u95f4\u3002 \u79fb\u52a8\u8bed\u53e5 \u00b6 \u8bed\u6cd5\u4e0e\u610f\u4e49 \u79fb\u52a8\u6784\u9020\u51fd\u6570\u52a0\u5feb\u4e86\u53f3\u503c\u521d\u59cb\u5316\u7684\u6784\u9020\u901f\u5ea6\uff0c\u6545\u800c\u5e0c\u671b\u5bf9\u5de6\u503c\u8c03\u7528\u79fb\u52a8\u6784\u9020\u51fd\u6570\u4ee5\u52a0\u5feb\u5de6\u503c\u521d\u59cb\u5316\u7684\u6784\u9020\u901f\u5ea6\u3002 \u8fd9\u91cc\u4ecb\u7ecd std::move \u51fd\u6570\u3002\u8f93\u5165\uff1a\u5de6\u503c\uff08\u5305\u62ec\u53d8\u91cf\u7b49\uff0c\u8be5\u5de6\u503c\u4e00\u822c\u4e0d\u518d\u4f7f\u7528\u3002\u79fb\u52a8\u540e\u5c31\u4e0d\u80fd\u518d\u6b21\u4f7f\u7528\uff09\u3002\u8fd4\u56de\u503c\uff1a\u8be5\u5de6\u503c\u5bf9\u5e94\u7684\u53f3\u503c\u3002 1 2 Test a ; Test b = std :: move ( a ); move \u51fd\u6570\u672c\u8eab\u4e0d\u5bf9\u5bf9\u8c61\u505a\u4efb\u4f55\u64cd\u4f5c\uff0c \u4ec5\u505a\u7c7b\u578b\u8f6c\u6362 \uff0c\u5373\u8f6c\u6362\u4e3a\u53f3\u503c\u3002\u79fb\u52a8\u7684\u5177\u4f53\u64cd\u4f5c\u5728\u79fb\u52a8\u6784\u9020\u51fd\u6570\u5185\u5b9e\u73b0\u3002 \u53f3\u503c\u5f15\u7528\u7ed3\u5408 std::move \u53ef\u4ee5\u663e\u8457\u63d0\u9ad8 swap \u51fd\u6570\u7684\u6027\u80fd\u3002 std::move \u5f15\u8d77\u79fb\u52a8\u6784\u9020\u51fd\u6570\u6216\u79fb\u52a8\u8d4b\u503c\u8fd0\u7b97\u7684\u8c03\u7528\u3002 \u4f8b\u5982\uff1a 1 2 3 4 5 6 template < class T > swap ( T & a , T & b ) { T tmp ( a ); a = b ; b = tmp ; } \u6539\u5199\u4e3a\uff1a 1 2 3 4 5 6 template < class T > swap ( T & a , T & b ) { T tmp ( std :: move ( a )); a = std :: move ( b ); b = std :: move ( tmp ); } \u907f\u514d 3 \u6b21\u4e0d\u5fc5\u8981\u7684\u62f7\u8d1d\u64cd\u4f5c \u4f8b\u5b50 \u7981\u7528\u8fd4\u56de\u503c\u4f18\u5316 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 #include <iostream> class Test { public : Test () { printf ( \"Test() \\n \" ); } ~ Test () { printf ( \"~Test() \\n \" ); } Test ( const Test & con ) { printf ( \"Test(const Test &con) \\n \" ); } Test ( Test && con ) { printf ( \"Test(Test &&con) \\n \" ); } }; Test func ( Test a ) { return Test (); } int main () { Test a ; Test b = func ( a ); return 0 ; } \u6700\u540e\u8f93\u51fa\u5982\u4e0b\uff0c\u5176\u4e2d (1+) \u548c (1-) \u8868\u793a 1 \u53f7\u5bf9\u8c61\u7684\u6784\u9020\u548c\u6790\u6784\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Test() // (1+) \u6267\u884c Test a Test(const Test &con) // (2+) Test b = func(a) // func(a) \u4f20\u53c2\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570 Test() // (3+) return Test() // Test() \u5bf9\u5e94\u7684\u6784\u9020\u51fd\u6570 Test(Test &&con) // (4+) return Test() // \u4e3a\u4e86\u4f20\u503c\u8c03\u7528\u7684\u79fb\u52a8\u6784\u9020\u51fd\u6570 ~Test() // (3-) return Test() // Test() \u5bf9\u5e94\u7684\u6790\u6784\u51fd\u6570 Test(Test &&con) // (5+) Test b = func(a) // \u4e2d\u7ed9 b \u4f20\u503c\u65f6\u8c03\u7528\u7684\u79fb\u52a8\u6784\u9020\u51fd\u6570 ~Test() // (4-) Test b = func(a) // \u5b8c\u6210\u8d4b\u503c\u540e func(a) \u8fd4\u56de\u503c\u5bf9\u5e94\u7684\u6790\u6784\u51fd\u6570 ~Test() // (2-) Test b = func(a) // \u53c2\u6570\u91ca\u653e\u5bf9\u5e94\u7684\u6790\u6784\u51fd\u6570 ~Test() // (5-) \u6790\u6784 b ~Test() // (1-) \u6790\u6784 a \u4e24\u7c7b\u6784\u9020\u51fd\u6570\u7684\u8c03\u7528\u65f6\u673a \u00b6 \u5224\u65ad\u4f9d\u636e \u5f15\u7528\u7684\u7ed1\u5b9a\u89c4\u5219\uff1a \u62f7\u8d1d\u6784\u9020\u51fd\u6570\u7684\u5f62\u53c2\u7c7b\u578b\u4e3a\u5e38\u91cf\u5de6\u503c\u5f15\u7528\uff0c\u53ef\u4ee5\u7ed1\u5b9a\u5e38\u91cf\u5de6\u503c\u3001\u5de6\u503c\u548c\u53f3\u503c\u3002\u79fb\u52a8\u6784\u9020\u51fd\u6570\u7684\u5f62\u53c2\u7c7b\u578b\u4e3a\u53f3\u503c\u5f15\u7528\uff0c\u53ef\u4ee5\u7ed1\u5b9a\u53f3\u503c\u3002\u5f15\u7528\u7684\u7ed1\u5b9a\u5b58\u5728\u4f18\u5148\u7ea7\uff0c\u4f8b\u5982\u5e38\u91cf\u5de6\u503c\u5f15\u7528\u548c\u53f3\u503c\u5f15\u7528\u5747\u80fd\u7ed1\u5b9a\u53f3\u503c\uff0c\u5f53\u4f20\u5165\u5b9e\u53c2\u7c7b\u578b\u4e3a\u53f3\u503c\u65f6\u4f18\u5148\u5339\u914d\u5f62\u53c2\u7c7b\u578b\u4e3a\u53f3\u503c\u5f15\u7528\u7684\u51fd\u6570\u3002 \u62f7\u8d1d\u6784\u9020\u51fd\u6570\u7684\u5e38\u89c1\u8c03\u7528\u65f6\u673a \u7528\u4e00\u4e2a\u7c7b\u5bf9\u8c61\u3001\u5f15\u7528\u3001\u5e38\u91cf\u5f15\u7528\u521d\u59cb\u5316\u53e6\u4e00\u4e2a\u65b0\u7684\u7c7b\u5bf9\u8c61 \u4ee5\u7c7b\u7684\u5bf9\u8c61\u4e3a\u51fd\u6570\u5f62\u53c2\uff0c\u4f20\u5165\u5b9e\u53c2\u4e3a\u7c7b\u7684\u5bf9\u8c61\u3001\u5f15\u7528\u3001\u5e38\u91cf\u5f15\u7528 \u51fd\u6570\u8fd4\u56de\u7c7b\u5bf9\u8c61\uff08\u7c7b\u4e2d\u672a\u663e\u5f0f\u5b9a\u4e49\u79fb\u52a8\u6784\u9020\u51fd\u6570\uff0c\u4e0d\u8fdb\u884c\u8fd4\u56de\u503c\u4f18\u5316\uff09 \u79fb\u52a8\u6784\u9020\u51fd\u6570\u7684\u5e38\u89c1\u8c03\u7528\u65f6\u673a \u7528\u4e00\u4e2a\u7c7b\u5bf9\u8c61\u7684\u53f3\u503c\u521d\u59cb\u5316\u53e6\u4e00\u4e2a\u65b0\u7684\u7c7b\u5bf9\u8c61\uff08\u5e38\u914d\u5408 std::move \u51fd\u6570\u4e00\u8d77\u4f7f\u7528\uff09 \u4ee5\u7c7b\u7684\u5bf9\u8c61\u4e3a\u51fd\u6570\u5f62\u53c2\uff0c\u4f20\u5165\u5b9e\u53c2\u4e3a\u7c7b\u5bf9\u8c61\u7684\u53f3\u503c\uff08\u5e38\u914d\u5408 std::move \u51fd\u6570\u4f7f\u7528\uff09 \u4e0e func(a) \u4e0d\u540c\u51fd\u6570\u8fd4\u56de\u7c7b\u5bf9\u8c61\uff08\u7c7b\u4e2d\u663e\u5f0f\u5b9a\u4e49\u79fb\u52a8\u6784\u9020\u51fd\u6570\uff0c\u4e0d\u8fdb\u884c\u8fd4\u56de\u503c\u4f18\u5316\uff09 \u6ce8\u610f\u5230 D \u662f\u9519\u7684\uff0c\u8fd4\u56de\u503c\u867d\u7136\u662f\u975e\u9759\u6001\u4e34\u65f6\u53d8\u91cf\u7684\u5e38\u91cf\u5de6\u503c\u5f15\u7528\uff0c\u4f46\u662f\u8fd4\u56de\u7c7b\u578b\u6839\u672c\u4e0d\u662f\u5f15\u7528\uff0c\u5e76\u4e0d\u662f\u8fd4\u56de\u4e34\u65f6\u53d8\u91cf\u7684\u5f15\u7528\u3002 \u62f7\u8d1d\u4e0e\u79fb\u52a8\u8d4b\u503c\u8fd0\u7b97\u7b26 \u00b6 \u62f7\u8d1d\u8d4b\u503c\u8fd0\u7b97\u7b26\u5b9a\u4e49\u4e0e\u610f\u4e49 \u00b6 \u5df2\u5b9a\u4e49\u7684\u5bf9\u8c61\u4e4b\u95f4\u76f8\u4e92\u8d4b\u503c\uff0c\u53ef\u901a\u8fc7\u8c03\u7528\u5bf9\u8c61\u7684\u201c\u62f7\u8d1d\u8d4b\u503c\u8fd0\u7b97\u7b26\u51fd\u6570\u201d\u6765\u5b9e\u73b0\u7684\u3002 1 2 3 4 5 6 ClassName & operator = ( const ClassName & right ) { if ( this != & right ) { // \u907f\u514d\u81ea\u5df1\u8d4b\u503c\u7ed9\u81ea\u5df1 // \u5c06 right \u5bf9\u8c61\u4e2d\u7684\u5185\u5bb9\u62f7\u8d1d\u5230\u5f53\u524d\u5bf9\u8c61\u4e2d } return * this ; } \u6ce8\u610f\u4f5c\u51fa\u533a\u5206\uff1a 1 2 3 4 ClassName a ; ClassName b ; a = b ; // \u6b64\u5904\u4e3a\u62f7\u8d1d\u590d\u5236\u8fd0\u7b97 ClassName a = b ; // \u6b64\u5904\u4e3a\u5b9a\u4e49\u65b0\u5bf9\u8c61 \u8d4b\u503c\u91cd\u8f7d\u51fd\u6570\u5fc5\u987b\u8981\u662f\u7c7b\u7684\u975e\u9759\u6001\u6210\u5458\u51fd\u6570\uff0c\u4e0d\u80fd\u662f\u53cb\u5143\u51fd\u6570\u3002\u56e0\u4e3a\u590d\u5236\u8fd0\u7b97\u662f\u5bf9\u4e8e\u8fd9\u4e2a\u7c7b\u800c\u8a00\u7684\uff0c\u663e\u7136\u662f\u7c7b\u51fd\u6570\u3002\u540c\u65f6\uff0c\u8d4b\u503c\u8fd0\u7b97\u4f9d\u8d56\u4e8e\u5177\u4f53\u7684\u5bf9\u8c61\uff0c\u4e0d\u80fd\u662f\u9759\u6001\u7684\u3002 1 2 3 4 5 6 7 8 9 Test & operator = ( const Test & right ) { if ( this == & right ) cout << \"same obj! \\n \" ; else { for ( int i = 0 ; i < 10 ; i ++ ) buf [ i ] = right . buf [ i ]; // \u62f7\u8d1d\u6570\u636e cout << \"operator=(const Test&) called. \\n \" ; } return * this ; } \u79fb\u52a8\u8d4b\u503c\u8fd0\u7b97\u7b26\u4f5c\u7528\u4e0e\u610f\u4e49 \u00b6 \u548c\u79fb\u52a8\u6784\u9020\u51fd\u6570\u539f\u7406\u7c7b\u4f3c\u3002 1 2 3 4 5 6 7 8 9 Test & operator = ( Test && right ) { if ( this == & right ) cout << \"same obj! \\n \" ; else { this -> buf = right . buf ; // \u76f4\u63a5\u8d4b\u503c\u5730\u5740 right . buf = nullptr ; cout << \"operator=(Test&&) called. \\n \" ; } return * this ; } \u4f8b\u5982\uff1a 1 2 3 4 5 swap ( Test & a , Test & b ) { Test tmp ( std :: move ( a )); // \u7b2c\u4e00\u884c\u8c03\u7528\u79fb\u52a8\u6784\u9020\u51fd\u6570 a = std :: move ( b ); // std::move \u7684\u7ed3\u679c\u4e3a\u53f3\u503c\u5f15\u7528\uff0c b = std :: move ( tmp ); // \u540e\u4e24\u884c\u5747\u8c03\u7528\u79fb\u52a8\u8d4b\u503c\u8fd0\u7b97 } \u8c03\u7528\u65f6\u673a \u00b6 \u548c\u62f7\u8d1d\u3001\u79fb\u52a8\u6784\u9020\u51fd\u6570\u7684\u8c03\u7528\u65f6\u673a\u7c7b\u4f3c\uff0c\u4e3b\u8981\u5224\u65ad\u4f9d\u636e\u662f\u5f15\u7528\u7684\u7ed1\u5b9a\u89c4\u5219\u3002 \u62f7\u8d1d\u8d4b\u503c\u8fd0\u7b97\u7b26\u51fd\u6570\u7684\u5f62\u53c2\u7c7b\u578b\u4e3a\u5e38\u91cf\u5de6\u503c\u5f15\u7528\uff0c\u53ef\u4ee5\u7ed1\u5b9a\u5e38\u91cf\u5de6\u503c\u3001\u5de6\u503c\u548c\u53f3\u503c \u79fb\u52a8\u8d4b\u503c\u8fd0\u7b97\u7b26\u51fd\u6570\u7684\u5f62\u53c2\u7c7b\u578b\u4e3a\u53f3\u503c\u5f15\u7528\uff0c\u53ef\u4ee5\u7ed1\u5b9a\u53f3\u503c\uff08\u5e38\u91cf\u3001\u8868\u8fbe\u5f0f\u3001\u51fd\u6570\u8fd4\u56de\uff09 \u5f15\u7528\u7684\u7ed1\u5b9a\u5b58\u5728\u4f18\u5148\u7ea7\uff0c\u4f8b\u5982\u5e38\u91cf\u5de6\u503c\u5f15\u7528\u548c\u53f3\u503c\u5f15\u7528\u5747\u80fd\u7ed1\u5b9a\u53f3\u503c\uff0c\u5f53\u8d4b\u503c\u8fd0\u7b97\u7b26\u53f3\u4fa7\u4e3a\u53f3\u503c\u65f6\u4f18\u5148\u5339\u914d\u5f62\u53c2\u7c7b\u578b\u4e3a\u53f3\u503c\u5f15\u7528\u7684\u8d4b\u503c\u8fd0\u7b97\u7b26\u51fd\u6570 \u6839\u636e\u8d4b\u503c\u8fd0\u7b97\u7b26\u53f3\u4fa7\u53d8\u91cf\u7684\u7c7b\u578b\u51b3\u5b9a\u8c03\u7528\u62f7\u8d1d\u6216\u79fb\u52a8\u8d4b\u503c\u8fd0\u7b97\u7b26\u51fd\u6570 \u81ea\u52a8\u5408\u6210\u7684\u51fd\u6570\u4e0e\u8fd0\u7b97\u7b26 \u00b6 \u7c7b\u4e2d\u7279\u6b8a\u7684\u6210\u5458\u51fd\u6570\u3001\u8fd0\u7b97\u7b26\uff0c\u5373\u4fbf\u7528\u6237\u4e0d\u663e\u5f0f\u5b9a\u4e49\uff0c\u7f16\u8bd1\u5668\u4e5f\u4f1a\u6839\u636e\u81ea\u8eab\u9700\u8981\u81ea\u52a8\u5408\u6210\u3002 \u9ed8\u8ba4\u6784\u9020\u51fd\u6570 \u62f7\u8d1d\u6784\u9020\u51fd\u6570 \u79fb\u52a8\u6784\u9020\u51fd\u6570\uff08C++11 \u8d77\uff09 \u62f7\u8d1d\u8d4b\u503c\u8fd0\u7b97\u7b26 \u79fb\u52a8\u8d4b\u503c\u8fd0\u7b97\u7b26\uff08C++11 \u8d77\uff09 \u6790\u6784\u51fd\u6570 \u8fd4\u56de\u503c\u4f18\u5316 \u00b6 \u4f18\u5316\u6761\u4ef6 \u00b6 return \u7684\u503c\u7c7b\u578b\u4e0e\u51fd\u6570\u524d\u9762\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u76f8\u540c\u3002 return \u7684\u662f\u4e00\u4e2a\u5c40\u90e8\u5bf9\u8c61\u7684\u5de6\u503c\u3002 \u4f18\u5316\u610f\u4e49 \u00b6 \u5728\u7981\u7528\u8fd4\u56de\u503c\u4f18\u5316\u7684\u6761\u4ef6\u4e0b\uff0c\u5982\u679c\u4e00\u4e2a\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u67d0\u4e2a\u5bf9\u8c61\uff0c\u90a3\u5728\u51fd\u6570\u8fd4\u56de\u524d\u9700\u8981\u8c03\u7528\u6784\u9020\u51fd\u6570\u6784\u5efa\u8fd4\u56de\u503c\u3002 \u5373\u4f7f\u6211\u8fd4\u56de\u7684\u4e1c\u897f\u5c31\u662f\u6211\u4f20\u8fdb\u6765\u7684\u5f62\u53c2\u5bf9\u8c61\uff0c\u8fd4\u56de\u524d\u7684\u8fd9\u6b21\u6784\u9020\u4ecd\u7136\u4f1a\u53d1\u751f\u3002 \u4f46\u662f\u5bf9\u4e8e\u8fd4\u56de\u503c\u7684\u6784\u9020\u8c03\u7528\u7684\u5230\u5e95\u662f\u79fb\u52a8\u6784\u9020\u51fd\u6570\uff0c\u8fd8\u662f\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u5bf9\u6b64 C++11 \u6709\u89c4\u5b9a\uff1a\u5728\u65e0\u8fd4\u56de\u503c\u4f18\u5316\u7684\u60c5\u51b5\u4e0b\uff0c\u9ed8\u8ba4\u8c03\u7528\u79fb\u52a8\u6784\u9020\u51fd\u6570\u3002 \u7efc\u4e0a\u6240\u8ff0\uff0c\u8fd4\u56de\u4e00\u4e2a\u5c40\u90e8\u5bf9\u8c61\u7684\u5de6\u503c\uff0c\u901a\u8fc7\u79fb\u52a8\u6784\u9020\u6784\u9020\u8fd4\u56de\u503c\uff0c\u8fd4\u56de\u503c\u518d\u79fb\u52a8\u8d4b\u503c\u6216\u79fb\u52a8\u6784\u9020\u7ed9\u4e3b\u51fd\u6570\u8bed\u53e5\u3002 \u4f18\u5316\u5b9e\u4f8b \u00b6 \u5982\u679c\u5f00\u542f\u4e86\u8fd4\u56de\u503c\u4f18\u5316\uff0c\u90a3\u4e48\u5982\u679c\u6211\u7684\u51fd\u6570\u91cc\u65b0\u5b9a\u4e49\u4e86\u4e00\u4e2a Test \u5bf9\u8c61\u5e76\u8fd4\u56de\u3002\u90a3\u7f16\u8bd1\u5668\u4f1a\u7ed9\u6211\u4f18\u5316\uff0c\u5148\u7528\u6784\u9020\u51fd\u6570\u6784\u9020 tmp \uff0c\u7136\u540e\u76f4\u63a5\u8fd4\u56de tmp \u3002 \u8fd9\u91cc\u751a\u81f3\u4e0d\u4f1a\u8c03\u7528\u79fb\u52a8\u6784\u9020\uff0c\u4e5f\u5c31\u662f\u8bf4\u751a\u81f3\u4e0d\u662f\u7528 tmp \u79fb\u52a8\u6784\u9020\u4e86\u8981\u8fd4\u56de\u7684\u5bf9\u8c61\uff0c\u5c31\u662f\u76f4\u63a5\u8fd4\u56de\u3002 \u4f46\u5982\u679c\u6ca1\u6709\u5f00\u542f\u4f18\u5316\uff0c\u4f1a\u9996\u5148\u8c03\u7528\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u6784\u9020 tmp \uff0c\u7136\u540e\u8c03\u7528\u79fb\u52a8\u6784\u9020\u51fd\u6570\u5c06\u7528 tmp \u79fb\u52a8\u6784\u9020\u8fd4\u56de\u503c\u3002 \u8fd4\u56de\u503c\u6784\u9020 \u00b6 \u5982\u679c\u8fd4\u56de\u503c\u662f\u666e\u901a\u7684 Test \u7684\u8bdd\uff0c\u90a3\u4e48\u51fd\u6570\u8fd4\u56de\u65f6\u9700\u8981\u6839\u636e return \u540e\u9762\u7684\u8868\u8fbe\u5f0f\u6765\u6784\u9020\u4e00\u4e2a Test \u5bf9\u8c61\uff0c\u6240\u4ee5\u624d\u6709\u79fb\u52a8\u6784\u9020\u6216\u8005\u62f7\u8d1d\u6784\u9020\u7684\u4e8b\u60c5\u3002 \u5982\u679c\u51fd\u6570\u8fd4\u56de\u7c7b\u578b\u662f const & \u6216\u8005 & \uff0c\u90a3 return \u7684\u65f6\u5019\u5c31\u6ca1\u5fc5\u8981\u518d\u6784\u9020\u65b0\u7684\u5bf9\u8c61\u4e86\uff0c\u76f4\u63a5\u8fd4\u56de\u76f8\u5e94\u7684\u5f15\u7528\u3002 1 2 3 4 5 6 7 8 9 10 const Test & F ( const Test & a ) { Test b = a ; return Test ( 1 ); } int main () { Test a ; const Test & A = F ( std :: move ( a )); return 0 ; } \u6bd4\u5982\u6b64\u5904\uff0c\u7531\u4e8e\u6211\u7684\u51fd\u6570\u8fd4\u56de\u7c7b\u578b\u4e3a\u5f15\u7528\uff0c\u6545\u800c\u76f4\u63a5\u8fd4\u56de\u4e86\u8fd4\u56de\u503c\u7684\u5f15\u7528\u3002\u4e5f\u5c31\u662f Test(1) \u7684\u5e38\u91cf\u5de6\u503c\u5f15\u7528\u3002\u4f46\u662f\uff0c\u5728\u51fd\u6570\u7ed3\u675f\u4e4b\u540e\uff0c\u8fd9\u4e2a\u5e38\u503c\u5f15\u7528\u6240\u5f15\u7528\u7684 Test(1) \u5c31\u88ab\u6790\u6784\u4e86\uff0c\u90a3\u8fd9\u4e2a\u5e38\u503c\u5f15\u7528\u5c31\u6ca1\u7528\u4e86\u3002 \u603b\u800c\u8a00\u4e4b\uff0c F \u7684\u8fd4\u56de\u7c7b\u578b\u662f\u4e00\u4e2a\u5e38\u91cf\u5de6\u503c\u5f15\u7528\uff0c\u800c\u8fd4\u56de\u503c\u662f Test(1) \u8fd9\u4e00\u4e34\u65f6\u53d8\u91cf\u3002\u4e34\u65f6\u53d8\u91cf\u4f1a\u5728\u51fd\u6570\u4f53\u7ed3\u675f\u540e\u88ab\u6790\u6784\uff0c\u4ece\u800c\u5f15\u7528\u5931\u6548\u3002\u6545\u800c\u4e0d\u80fd\u8fd4\u56de\u4e34\u65f6\u53d8\u91cf\u7684\u5f15\u7528\uff0c\u4ece\u800c\u7f16\u8bd1\u9519\u8bef\u3002 \u4e0d\u8fc7\uff0c Test(1) \u611f\u89c9\u53ea\u662f\u4e2a\u4e34\u65f6\u7684\u53f3\u503c\uff0c\u8fd9\u80fd\u79f0\u4e3a\u4e34\u65f6\u53d8\u91cf\u5417\uff1f\u5b9e\u9645\u4e0a\u662f\u53ef\u4ee5\u7684\uff0c\u5982\u679c\u53bb\u770b\u7f16\u8bd1\u5f97\u5230\u7684\u6c47\u7f16\u7801\uff0c return Test(1) \u548c\u5148 Test ret = Test(1) \u7136\u540e return ret \u751f\u6210\u7684\u6c47\u7f16\u7801\u662f\u4e00\u6837\u7684\u3002 \u4f8b\u5b50 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 #include <iostream> using namespace std ; class Test { public : int data = 0 ; Test () { } Test ( const Test & t ) { } Test ( Test && t ) { } }; Test fn1 () { Test tmp ; return tmp ; // (1) } Test && fn2 () { Test tmp ; return move ( tmp ); // (2) } Test fn3 () { Test tmp ; return move ( tmp ); // (3) } int main () { const Test & a = fn1 (); // (4) Test && b = fn1 (); // (5) Test c = fn1 (); // (6) Test && d = fn2 (); // (7) return 0 ; } \u5efa\u8bae\u505a\u6cd5\u5305\u62ec (1)(4)(5)(6) \uff0c\u907f\u514d\u591a\u4f59\u62f7\u8d1d\uff0c\u4f18\u5316\u8d44\u6e90\u5229\u7528\u3002 \u4e0d\u5efa\u8bae\u505a\u6cd5\u5305\u62ec (2)(3)(7) \u3002 (2)(7) \u4e2d d \u4f1a\u6307\u5411\u88ab\u6790\u6784\u7684 tmp \uff0c\u51fa\u73b0\u8fd0\u884c\u9519\u8bef\u3002 std::move() \u5c06\u5de6\u503c\u8f6c\u53d8\u4e3a\u53f3\u503c\uff0c\u4e0d\u8fdb\u884c\u8fd4\u56de\u503c\u4f18\u5316\uff0c (3) \u4f1a\u79fb\u52a8\u6784\u9020\u4e34\u65f6\u53d8\u91cf \u8fd9\u91cc\uff0c Test fn1() \u6ee1\u8db3\u8fd4\u56de\u503c\u4f18\u5316\u6761\u4ef6\u3002 \u53ef\u5229\u7528\u5e38\u91cf\u5de6\u503c\u5f15\u7528 (2) \uff0c\u53f3\u503c\u5f15\u7528 (5) \uff0c\u6784\u9020\u65b0\u5bf9\u8c61 (7) \u7684\u65b9\u5f0f\u63a5\u6536\u8fd4\u56de\u503c\u3002 \u5173\u4e8e (2)(7) \uff0c\u9996\u5148\u8bb0\u4f4f\uff0c\u5982\u679c\u8fd4\u56de\u5f15\u7528\uff0c\u53ea\u6709\u8fd4\u56de\u5e38\u91cf\u5c40\u90e8\u53d8\u91cf\u7684\u5de6\u503c\u5f15\u7528\u662f\u5408\u6cd5\u7684\uff0c\u5176\u4ed6\u7684\u90fd\u4e0d\u5408\u6cd5\u3002\u5373\u4f7f\u5728\u67d0\u4e9b\u7f16\u8bd1\u5668\u4e0a\u901a\u8fc7\u4e86\uff0c\u4e5f\u5f88\u5371\u9669\u3002\u5728\u8f83\u4e3a\u4e25\u683c\u7684\u7f16\u8bd1\u5668\u4e0a\u4e0d\u4e00\u5b9a\u80fd\u901a\u8fc7\u3002 1 int & func () { static int x = 0 ; return x ; } \u7528\u6b64\u5904 (2)(7) \u4e3e\u4f8b\uff0c (2)(7) \u7684\u610f\u601d\u662f\u8fd4\u56de\u4e86\u4e00\u4e2a\u53f3\u503c\u7684\u53f3\u503c\u5f15\u7528\uff0c\u628a\u8fd9\u4e2a\u53f3\u503c\u5f15\u7528\u7684\u8fd4\u56de\u503c\u8d4b\u503c\u7ed9\u4e86\u4e00\u4e2a\u53f3\u503c\u5f15\u7528\u3002 \u6211\u4eec\u5199\u51fa\u5982\u4e0b\u4e00\u4e2a\u7c7b\u4f3c\u7684\u4f8b\u5b50\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 #include <iostream> using namespace std ; int && func () { int tmp = 1 ; return std :: move ( tmp ); } int main () { int && x = func () + 1 ; cout << x ; return 0 ; } \u91c7\u7528 glot \u5e73\u53f0\u8fd0\u884c\uff0c\u8f93\u51fa 2 \u3002 \u91c7\u7528 retexter \u5e73\u53f0\u8fd0\u884c\uff0c\u7f16\u8bd1\u6307\u4ee4\u91c7\u7528 clang++ -Wall -std=c++14 -stdlib=libc++ -O2 -o a.out source_file.cpp \uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a\u5b8c\u5168\u4e0d\u786e\u5b9a\u7684\u6574\u6570\u3002\u867d\u7136\u76f4\u89c9\u4e0a\u53ef\u4ee5\u5b8c\u6210\u8d4b\u503c\uff0c\u4f46\u662f\u7531\u4e8e tmp \u4e0d\u662f\u9759\u6001\u5c40\u90e8\u53d8\u91cf\uff0c\u9010\u8bed\u53e5\u7ed3\u675f\u540e\u4f1a\u88ab\u6790\u6784\uff0c\u5bfc\u81f4 x \u5728\u8bbf\u95ee\u975e\u6cd5\u5185\u5b58\u3002 \u91c7\u7528 retexter \u5e73\u53f0\u8fd0\u884c\uff0c\u7f16\u8bd1\u6307\u4ee4\u91c7\u7528 g++ -Wall -std=c++14 -O2 -o a.out source_file.cpp \uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a 1 \uff0cwarning \u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 1944460822/source.cpp: In function 'int&& func()': 1944460822/source.cpp:5:25: warning: function returns address of local variable [-Wreturn-local-addr] return std::move(tmp); ^ 1944460822/source.cpp:4:9: note: declared here int tmp = 1; ^~~ 1944460822/source.cpp: In function \u2018int main()\u2019: 1944460822/source.cpp:8:19: warning: \u2018tmp\u2019 is used uninitialized in this function [-Wuninitialized] int&& x = func() + 1; ^ \u603b\u800c\u8a00\u4e4b\uff0c\u8fd4\u56de\u975e\u9759\u6001\u4e34\u65f6\u53d8\u91cf\u7684\u5f15\u7528\u98ce\u9669\u6781\u5927\u3002 \u5907\u6ce8\uff1a\u8fd9\u4e2a\u4f8b\u5b50\u672c\u8eab\u5e76\u4e0d\u592a\u597d\u3002\u5982\u679c\u5b9e\u5728\u60f3\u68c0\u6d4b\u8fd9\u6837\u7684\u51fd\u6570\uff0c\u4e0d\u5e94\u8be5\u7528 int \u7c7b\u578b\u3002\u56e0\u4e3a int \u662f\u7f16\u8bd1\u5668\u81ea\u5e26\u7684\u57fa\u672c\u7c7b\u578b\uff0c\u91c7\u7528\u8fc7\u591a\u7684\u4f18\u5316\uff0c\u6545\u800c glot \u8f93\u51fa 2 \u4e5f\u662f\u5408\u7406\u7684\u3002\u8fd9\u6837\u7684\u68c0\u6d4b\u6700\u597d\u4f7f\u7528\u81ea\u5b9a\u4e49\u7c7b\u578b\u5e76\u5b8c\u6574\u5730\u5b9a\u4e49\u6240\u6709\u7684\u6784\u9020\u3001\u6790\u6784\u3001\u62f7\u8d1d\u6784\u9020\u3001\u79fb\u52a8\u6784\u9020\u3001\u79fb\u52a8\u8d4b\u503c\u4e0e\u62f7\u8d1d\u8d4b\u503c\uff0c\u786e\u4fdd\u7f16\u8bd1\u5668\u4f18\u5316\u4e0d\u591a\u3002 delete \u4e0e\u68c0\u6d4b \u00b6 delete \u7684\u610f\u4e49 \u00b6 1 delete [] array ; // delete \u91ca\u653e\u6307\u9488\u6307\u5411\u7684\u5185\u5b58\u533a \u6545\u800c delete[] \u4e4b\u540e\uff0c\u5185\u5b58\u533a\u7684\u6570\u636e\u5c31\u6e05\u9664\u4e86\u3002 delete \u91ca\u653e\u7684\u662f\u6307\u9488\u6307\u5411\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u6307\u9488\u53d8\u91cf\u672c\u8eab\u4ecd\u7136\u5b58\u5728\u53ef\u4ee5\u4f7f\u7528\uff08\u7528\u4e8e\u8d4b\u503c\u7b49\uff09\u3002\u4f46\u662f\u8c03\u7528 array[i] \u4f1a\u4ea7\u751f\u8fd0\u884c\u65f6\u9519\u8bef segmentation fault\uff0c\u56e0\u4e3a\u5b83\u6ca1\u6709\u6307\u5411\u4e00\u5757\u5185\u5b58\u7a7a\u95f4\u7528\u4e8e\u5b58\u50a8\u6570\u636e\u3002 \u6e05\u9664\u4e0d\u7b49\u540c\u4e8e\u8bbe\u4e3a 0 \u3002\u800c\u4e14\u5b9e\u9645\u4e0a\uff0c\u5982\u679c delete[] \u4e4b\u540e\u8fd8\u628a array[i] \u8d4b\u503c\u4e3a 0 \uff0c\u4e0d\u4ec5\u6ca1\u6709\u610f\u4e49\uff08\u56e0\u4e3a\u5185\u5b58\u5df2\u7ecf\u88ab\u6e05\u9664\u4e86\uff09\uff0c\u800c\u4e14\u4f1a\u56e0\u4e3a\u8c03\u7528\u4e86\u591a\u6b21\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u800c\u6d6a\u8d39\u4e86\u6548\u7387\u3002\u6bd4\u5982\u4e0b\u9762\u8fd9\u4e2a\u5199\u6cd5\u7eaf\u5c5e\u6d6a\u8d39\u6548\u7387\uff0c\u8fd8\u6709\u9519\u8bef\u3002\u5728 delete[] array \u8bed\u53e5\u540e\uff0c\u5982\u679c\u60f3\u8fdb\u884c\u8d4b\u503c\u4e3a 0 \u7684\u64cd\u4f5c\uff0c array \u8981\u91cd\u65b0\u7533\u8bf7\u6307\u5411\u4e00\u5757\u5185\u5b58\u3002 1 2 3 4 5 6 Vector & Vector :: operator = ( const Vector & other ) { if ( this != & other ) { if ( this -> array != nullptr ) delete [] array ; for ( int i = 0 ; i < capacity ; i ++ ) array [ i ] = 0 ; } } delete \u7684\u68c0\u6d4b \u00b6 \u5efa\u8bae\u5728 delete \u524d\u68c0\u6d4b\u6307\u9488\u662f\u5426\u4e3a\u7a7a\u6307\u9488\uff0c\u56e0\u4e3a\u7a7a\u6307\u9488 delete \u4f1a\u62a5\u9519\u3002 \u8d4b\u503c\u7684\u68c0\u6d4b \u00b6 \u548c delete \u76f8\u4f3c\uff0c\u5efa\u8bae\u8d4b\u503c\u4e5f\u8981\u5148\u8fdb\u884c\u68c0\u6d4b\uff0c\u907f\u514d\u6d6a\u8d39\u6548\u7387 1 2 3 4 5 Vector & Vector :: operator = ( const Vector & other ) { if ( this != & other ) // \u5efa\u8bae\u8d4b\u503c\u7684\u65f6\u5019\u68c0\u6d4b\u662f\u5426\u76f8\u540c\uff0c\u68c0\u6d4b\u7684\u539f\u7406\u672c\u8d28\u4e0a\u5c31\u662f\u68c0\u6d4b\u5730\u5740\u662f\u5426\u76f8\u540c if ( this -> array != nullptr ) delete [] array ; } move \u4e0e\u7c7b\u578b\u8f6c\u6362 \u00b6 move \u7684\u610f\u4e49 \u00b6 move \u7684\u4f5c\u7528\u5c31\u662f\u4ec5\u4ec5\u628a\u5de6\u53f3\u503c\u8fd9\u4e2a\u5c5e\u6027\u6539\u4e3a\u53f3\u503c\uff0c\u5176\u4f59\u7684\u5c5e\u6027\u4e0d\u53d8\u3002 \u4f8b\u5b50 \u00b6 1 2 3 4 5 6 7 8 9 Test F ( const Test & a ) { Test b = std :: move ( a ); return b ; } int main () { Test A = F ( 1 ); return 0 ; } \u8fd9\u4e2a\u5730\u65b9\u6781\u5176\u6709\u8da3\u7684\u662f F \u51fd\u6570\u4f53\u5185\u5bf9 b \u7684\u6784\u9020\u662f\u91c7\u7528\u4e86\u62f7\u8d1d\u6784\u9020\u800c\u975e\u79fb\u52a8\u6784\u9020\u3002 \u8fd9\u662f\u7531\u4e8e move \u548c const \u7684\u53cc\u91cd\u4f5c\u7528\u3002\u5982\u540c\u524d\u6587\u6240\u8ff0\uff0c move \u4e00\u5b9a\u53ef\u4ee5\u628a\u4efb\u610f\u5bf9\u8c61\u8c03\u6574\u4e3a\u53f3\u503c\uff0c\u4e0d\u7ba1\u662f\u4e0d\u662f const \u3002 \u6df1\u5c42\u6b21\u5730\u8bf4\uff0c\u53d8\u91cf\u50a8\u5b58\u5728\u5185\u5b58\u91cc\u7684\u65f6\u5019\u5b58\u7684\u90fd\u662f\u5b83\u7684\u6570\u636e\uff0c\u800c\u4e0d\u4f1a\u4e13\u95e8\u5f00\u8f9f\u4e00\u5757\u7a7a\u95f4\u6765\u8bf4\u660e\u5b83\u662f\u4e0d\u662f const \uff0c\u662f\u4e0d\u662f & \u7b49\uff0c const \u548c & \u8fd9\u4e9b\u201c\u7c7b\u578b\u201d\u662f\u7531\u7f16\u8bd1\u5668\u6765\u5904\u7406\u7684\u3002 \u6211\u4eec\u8bf4\u7c7b\u578b\u8f6c\u6362\uff0c\u6307\u7684\u5c31\u662f\u6539\u53d8\u7c7b\u578b\uff0c\u800c\u4e0d\u53d8\u52a8\u5b83\u5728\u5185\u5b58\u91cc\u7684\u50a8\u5b58\u5f62\u5f0f\u3002\u6bd4\u5982\u4e00\u4e2a\u6307\u9488\uff0c\u5b83\u5728\u5185\u5b58\u91cc\u5b58\u7684\u5c31\u662f\u4e00\u4e32\u6570\u5b57\u8868\u793a\u5730\u5740\uff0c\u6211\u4eec\u770b\u5b83\u7684\u5185\u5b58\u60c5\u51b5\u65f6\uff0c\u5b8c\u5168\u53ef\u4ee5\u628a\u8fd9\u5757\u5185\u5b58\u5f53\u505a\u5b58\u7684\u662f\u4e00\u4e2a\u6574\u578b\u53d8\u91cf\u3002\u6211\u4eec\u5f3a\u884c\u628a\u6307\u9488\u5f53\u505a\u6574\u578b\u53d8\u91cf\u6765\u770b\u7684\u65f6\u5019\u5c31\u662f\u8fdb\u884c\u4e86\u4e00\u4e2a\u7c7b\u578b\u8f6c\u6362\u3002 \u6240\u4ee5 std::move(a) \u8fd9\u4e2a\u8868\u8fbe\u5f0f\u7684\u7c7b\u578b\u5c31\u662f const&& \uff0c\u56e0\u4e3a\u5b83\u53d1\u751f\u4e86\u7c7b\u578b\u8f6c\u6362\u3002\u800c\u8f6c\u6362\u4e4b\u540e\uff0c a \u8f6c\u4e3a const&& \uff0c\u8fd9\u662f\u4e00\u4e2a\u5e38\u91cf\u53f3\u503c\u5f15\u7528\uff0cC++ \u56fa\u5b9a\u5176\u53ea\u80fd\u591f\u88ab const& \u7ed1\u5b9a\u3002\u6545\u800c\u5728\u6784\u9020\u51fd\u6570\u91cd\u8f7d\u7684\u60c5\u51b5\u4e0b\u8c03\u7528\u4e86\u76f8\u5e94 const& \u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002 \u8fdb\u4e00\u6b65\u8ba8\u8bba \u00b6 \u8fd9\u5f20\u8868\u7ed9\u51fa\u4e86\u5173\u4e8e\u7ed1\u5b9a\u548c\u5de6\u53f3\u503c\u7684\u5173\u7cfb\u3002\u5de6\u8fb9\u7684\u4e00\u5217\u662f\u53c2\u6570\u7684\u5c5e\u6027\uff0clvalue \u662f\u6307\u5de6\u503c\uff0crvalue \u662f\u6307\u53f3\u503c\uff0cconst \u662f\u6307\u5e38\u91cf\u3002\u4e0a\u65b9\u4e00\u884c\u7ed9\u51fa\u4e86\u80fd\u591f\u7ed1\u5b9a\u7684\u7c7b\u578b\u3002\u800c\u8868\u4e2d\u7684\u6b21\u5e8f\u4ee3\u8868\u591a\u79cd\u7ed1\u5b9a\u65f6\u7684\u4f18\u5148\u7ea7\u3002\u4ece\u800c\u53ef\u89c1\uff0c\u5e38\u91cf\u53f3\u503c\u4f18\u5148\u5728\u6211\u4eec\u7684\u4e24\u4e2a\u6784\u9020\u51fd\u6570\u5f53\u4e2d\u53ea\u80fd\u7ed1\u5b9a const& \uff08\u56e0\u4e3a\u6ca1\u6709 const&& \u7c7b\u578b\u7684\u91cd\u8f7d\uff0c\u6545\u800c\u7ed1\u5b9a\u7684\u662f\uff09\uff0c\u4ece\u800c\u8c03\u7528\u4e86\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002 \u7f6e\u7a7a\u6027\u8ba8\u8bba \u00b6 \u6790\u6784\u7f6e\u7a7a \u00b6 \u6790\u6784\u51fd\u6570\u9700\u8981\u5c06\u6210\u5458\u6570\u636e\u4e2d\u7684\u6307\u9488\u6307\u5411\u7684\u5185\u5b58\u7a7a\u95f4\u7f6e\u7a7a\u3002 1 2 3 Vector ::~ Vector () { if ( array != nullptr ) delete [] array ; } \u4e0b\u6587\u4ee5 A = B \u4e3a\u4f8b\uff0c\u8ba8\u8bba\u8d4b\u503c\u8fc7\u7a0b\u4e2d\u7684\u7f6e\u7a7a\u6027\u3002 \u79fb\u52a8\u7f6e\u7a7a \u00b6 \u6bcf\u6b21\u79fb\u52a8\u65f6\uff0c\u6211\u4eec\u5c06 B \u5b8c\u5168\u7f6e\u7a7a\u4f46\u662f\u4e0d delete \u3002 \u79fb\u52a8\u548c\u62f7\u8d1d\u7684\u8bed\u4e49\u533a\u522b \u79fb\u52a8\u548c\u62f7\u8d1d\u7684\u8bed\u4e49\u533a\u522b\u5728\u4e8e\uff0c\u88ab\u62f7\u8d1d\u7684\u5bf9\u8c61\u4e4b\u540e\u8fd8\u53ef\u80fd\u4f1a\u88ab\u4f7f\u7528\u7684\uff0c\u800c\u88ab\u79fb\u52a8\u7684\u5bf9\u8c61\u5fc5\u987b\u7f6e\u7a7a\uff08\u4f46\u4e0d\u662f delete \uff0c delete \u51fa\u73b0\u5728\u8d4b\u503c\u7f6e\u7a7a\u548c\u6790\u6784\u7f6e\u7a7a\u5f53\u4e2d\uff09\u3002\u56e0\u4e3a\u79fb\u52a8\u7684\u672c\u8d28\u539f\u7406\u662f\u628a\u5bf9\u540c\u4e00\u5757\u5185\u5b58\u7a7a\u95f4\u66f4\u6362\u4e3a\u65b0\u6307\u9488\uff0c\u5e76\u4e14\u5c06\u539f\u6307\u9488\u7f6e\u7a7a\u3002 \u79fb\u52a8\u548c\u62f7\u8d1d\u7684\u539f\u7406\u533a\u522b \u62f7\u8d1d\u7684\u539f\u7406 A \u4e0e B \u5404\u81ea\u6709\u4e00\u4e2a\u6307\u9488\uff0c\u5982\u679c A != B \u65f6\uff0c\u4e24\u4e2a\u6307\u9488\u6307\u5411\u4e24\u5757\u72ec\u7acb\u7684\u5185\u5b58\u7a7a\u95f4\uff08 A = B \u65f6\u65e0\u9700\u62f7\u8d1d\uff09\u3002\u73b0\u5c06 A \u5185\u5b58\u7a7a\u95f4\u91cc\u6240\u6709\u6570\u636e\u6e05\u9664\uff0c\u63a5\u7740\u628a B \u7684\u5185\u5b58\u7a7a\u95f4\u5185\u6240\u6709\u6570\u636e\u4f20\u9012\u7ed9 A \u7684\u5185\u5b58\u7a7a\u95f4\u3002\u8fd9\u4e00\u4f20\u9012\u8fc7\u7a0b\u4e0d\u4f1a\u7834\u574f B \u7684\u6570\u636e\uff0c\u4f46\u662f\u6548\u7387\u8f83\u4f4e\u3002 \u79fb\u52a8\u7684\u539f\u7406 A \u4e0e B \u5404\u81ea\u6709\u4e00\u4e2a\u6307\u9488\u3002\u5982\u679c A != B \u65f6\uff0c\u4e24\u4e2a\u6307\u9488\u6307\u5411\u4e24\u5757\u72ec\u7acb\u7684\u5185\u5b58\u7a7a\u95f4\uff08 A = B \u65f6\u65e0\u9700\u79fb\u52a8\uff09\u3002\u5982\u679c\u6b64\u65f6 A \u7684\u6307\u9488\u6307\u5411\u7684\u5185\u5b58\u7a7a\u95f4\u4e0d\u4e3a\u7a7a\uff0c\u4e5f\u5c31\u662f A \u6307\u9488\u4e0d\u4e3a\u7a7a\u6307\u9488\uff0c\u90a3\u4e48\u5c06 A \u7684\u6307\u9488\u6307\u5411\u7684\u5185\u5b58\u7a7a\u95f4\u901a\u8fc7 delete \u6e05\u9664\uff0c A \u6307\u9488\u5373\u8f6c\u4e3a\u7a7a\u6307\u9488\u3002\u5c06 B \u7684\u6307\u9488\u8d4b\u503c\u7ed9 A \u7684\u6307\u9488\uff0c\u5e76\u5c06 B \u6307\u9488\u7f6e\u4e3a\u7a7a\u6307\u9488\u3002\u8fd9\u4e00\u8fc7\u7a0b\u5b9e\u9645\u4e0a\u662f\u6539\u53d8\u4e86\u5185\u5b58\u7a7a\u95f4\u7684\u6307\u9488\u4f46\u662f\u6ca1\u6709\u6539\u53d8\u5185\u5b58\u7a7a\u95f4\u3002 \u79fb\u52a8\u8fc7\u7a0b\u4e2d B \u6307\u9488\u7f6e\u7a7a \u5728\u6790\u6784\u51fd\u6570\u91cc\uff0c\u6211\u4eec\u4f1a\u8c03\u7528 delete \u3002 \u5018\u82e5\u4e0d\u628a B \u6307\u9488\u7f6e\u7a7a\uff0c\u90a3\u4e48\u6211\u4eec\u4f1a\u6790\u6784 delete \u4e00\u6b21 B \u6307\u9488\u6307\u5411\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u7136\u800c A \u6307\u9488\u4e0d\u4e3a\u7a7a\u3002\u5728\u6790\u6784\u65f6\uff0c\u53c8\u5c06\u5bf9\u540c\u4e00\u4e2a\u5185\u5b58\u7a7a\u95f4 delete \u4e00\u6b21\u3002 delete \u7a7a\u7684\u7a7a\u95f4\u662f\u4e0d\u5141\u8bb8\u7684\u3002\u6545\u800c\u79fb\u52a8\u6784\u9020\u5fc5\u7136\u8981\u5c06B\u6307\u9488\u7f6e\u7a7a\u4ee5\u907f\u514d\u591a\u6b21 delete \u540c\u4e00\u7a7a\u95f4\u3002\u8fd9\u6837\u4e5f\u5bfc\u81f4\u4e86 B \u6307\u9488\u4e0d\u80fd\u518d\u6b21\u4f7f\u7528\uff08\u6574\u4e2a B \u65e0\u6cd5\u518d\u53bb\u8d4b\u503c\uff09\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u79fb\u52a8\u6784\u9020\u5fc5\u7136\u8981\u7834\u574f\u7528\u6765\u6784\u9020\u7684\u5bf9\u8c61\uff1a\u56e0\u4e3a\u4e0d\u80fd\u51fa\u73b0\u4e24\u4e2a\u6307\u9488\u6307\u5411\u540c\u4e00\u5757\u7a7a\u95f4\u7684\u60c5\u51b5\u3002 \u79fb\u52a8\u8fc7\u7a0b\u4e2d B \u5b8c\u5168\u7f6e\u7a7a \u6211\u4eec\u5728\u4e0a\u6587\u5df2\u7ecf\u53d9\u8ff0\u4e86\u4e3a\u4ec0\u4e48\u9700\u8981\u5c06 B \u6307\u9488\u7f6e\u7a7a\u3002\u5b9e\u9645\u4e0a\uff0c\u7531\u4e8e B \u5bf9\u8c61\u88ab\u79fb\u52a8\u4e4b\u540e\u5df2\u7ecf\u4e0d\u518d\u6b21\u4f7f\u7528\uff0c\u9700\u8981\u5c06\u5176\u5b8c\u5168\u7f6e\u7a7a\uff08\u6240\u6709\u7684\u6210\u5458\u6570\u636e\u90fd\u8981\u7f6e\u7a7a\uff0c\u800c\u4e0d\u53ea\u662f B \u91cc\u9762\u7684\u6307\u9488\u5bf9\u8c61\uff09\uff0c\u4ece\u800c\u907f\u514d\u5185\u5b58\u6cc4\u6f0f\u3002 \u8d4b\u503c\u7f6e\u7a7a \u00b6 \u6bcf\u6b21\u8d4b\u503c\u65f6\uff0c\u6211\u4eec\u9700\u8981\u901a\u8fc7 delete \u5c06 A \u7f6e\u7a7a\u3002 \u62f7\u8d1d\u8d4b\u503c \u62f7\u8d1d\u8d4b\u503c\u65f6\uff0c\u68c0\u6d4b\u5b8c A == B \u540e\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528 delete \u5c06 A \u7f6e\u7a7a\u3002 \u8fd9\u91cc\u4e3a\u4ec0\u4e48\u8981\u5148\u6e05\u9664 A \u7684\u539f\u5185\u5b58\u7a7a\u95f4\uff1f \u9996\u5148\uff0c\u6211\u4eec\u7684\u79fb\u52a8\u8d4b\u503c\u9700\u8981\u4e8c\u8005\u8d4b\u503c\u5b8c\u540e\u5b8c\u5168\u76f8\u540c\uff0c\u5982\u679c A \u539f\u5185\u5b58\u7a7a\u95f4\u8d85\u51fa B \u7684\u90a3\u90e8\u5206\u5bb9\u79ef\u6709\u591a\u4e8e\u5185\u5bb9\uff0c\u4e0d\u6e05\u9664\u5c06 A \u5219\u65e0\u6cd5\u4f7f\u5f97 A \u4e0e B \u5b8c\u5168\u76f8\u540c\u3002\u5176\u6b21\uff0c\u4e0d\u6e05\u9664\u66f4\u5927\u7684\u95ee\u9898\u662f\u5185\u5b58\u6cc4\u9732\u4e25\u91cd\u3002 \u6ce8\u610f\u5230\u62f7\u8d1d\u8d4b\u503c\u73b0\u5c06 A \u7684\u5185\u5b58\u7a7a\u95f4 delete \u4e4b\u540e\uff0c A \u7684\u6307\u9488\u9700\u8981\u6307\u5411\u4e00\u5757\u5185\u5b58\u7a7a\u95f4\u624d\u80fd\u4f7f A \u63a5\u53d7 B \u7684\u62f7\u8d1d\u8d4b\u503c\u3002\u6545\u9700\u8981\u7533\u8bf7\u65b0\u7684\u5185\u5b58\u7a7a\u95f4\uff08\u4e0e B \u7684\u5185\u5b58\u7a7a\u95f4\u5927\u5c0f\u5b8c\u5168\u76f8\u540c\uff09\u3002 \u79fb\u52a8\u8d4b\u503c \u7efc\u5408\u524d\u6587\u6240\u8ff0\uff0c\u79fb\u52a8\u9700\u8981\u5c06 B \u5b8c\u5168\u7f6e\u7a7a\u4f46\u662f\u4e0d delete \uff0c\u800c\u8d4b\u503c\u9700\u8981\u5c06 A \u901a\u8fc7 delete \u7f6e\u7a7a\u4e4b\u540e\u518d\u6b21\u7533\u8bf7\u65b0\u7684\u7a7a\u95f4\u3002\u6240\u4ee5\u7528 B \u79fb\u52a8\u8d4b\u503c A \u7684\u65f6\u5019\u9700\u8981\u4e24\u6b21\u7f6e\u7a7a\uff0c\u4e00\u6b21 delete \uff08\u5bf9 A \u7684\uff09\u800c\u53e6\u4e00\u6b21\u4e0d delete \uff08\u5bf9 B \u7684\uff09\u3002 \u7c7b\u578b\u8f6c\u6362 \u00b6 \u610f\u4e49 \u00b6 \u5f53\u7f16\u8bd1\u5668\u53d1\u73b0\u8868\u8fbe\u5f0f\u548c\u51fd\u6570\u8c03\u7528\u6240\u9700\u7684\u6570\u636e\u7c7b\u578b\u548c\u5b9e\u9645\u7c7b\u578b\u4e0d\u540c\u65f6\uff0c\u4fbf\u4f1a\u8fdb\u884c\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362\u3002 \u81ea\u52a8\u7c7b\u578b\u8f6c\u6362\u53ef\u901a\u8fc7\u5b9a\u4e49\u7279\u5b9a\u7684 \u8f6c\u6362\u8fd0\u7b97\u7b26 \u548c \u6784\u9020\u51fd\u6570 \u6765\u5b8c\u6210\u3002 \u9664\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362\u5916\uff0c\u5728\u6709\u5fc5\u8981\u7684\u65f6\u5019\u8fd8\u53ef\u4ee5\u8fdb\u884c\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u3002 1 2 3 4 5 6 void print ( int d ) { } int main () { print ( 3.5 ); print ( 'c' ); return 0 ; } \u8bed\u6cd5 \u00b6 \u65b9\u6cd5\u4e00\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 #include <iostream> using namespace std ; class Dst { public : Dst () { cout << \"Dst::Dst()\" << endl ; } }; class Src { public : Src () { cout << \"Src::Src()\" << endl ; } operator Dst () const { cout << \"Src::operator Dst() called\" << endl ; return Dst (); } }; \u5373\u5728\u6e90\u7c7b\u4e2d\u5b9a\u4e49\u201c\u6e90\u7c7b\u4e2d\u91cd\u8f7d\u76ee\u6807\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\u201d\u3002 \u6ce8\u610f\uff1a\u4e0d\u9700\u8981\u6307\u5b9a\u8fd4\u56de\u7c7b\u578b\uff0c\u56e0\u4e3a operator \u540e Dst() \u5df2\u7ecf\u6307\u660e\uff0c\u8fd4\u56de\u503c\u662f Dst() \uff0c\u8fd4\u56de\u51fd\u6570\u540d\u6545\u800c\u4e0d\u9700\u8981\u8fd4\u56de\u7c7b\u578b\u3002\u8fd9\u662f\u7c7b\u578b\u8f6c\u6362\u7684\u56fa\u5b9a\u8bed\u6cd5\uff0c\u5982\u540c\u6784\u9020\u51fd\u6570\u4e0d\u9700\u8981\u5c31\u597d\u3002 \u65b9\u6cd5\u4e8c\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #include <iostream> using namespace std ; class Src ; // \u524d\u7f6e\u7c7b\u578b\u58f0\u660e\uff0c\u56e0\u4e3a\u5728 Dst \u4e2d\u8981\u7528\u5230 Src \u7c7b class Dst { public : Dst () { cout << \"Dst::Dst()\" << endl ; } Dst ( const Src & s ) { cout << \"Dst::Dst(const Src&)\" << endl ; } }; class Src { public : Src () { cout << \"Src::Src()\" << endl ; } }; \u5373\u5728\u76ee\u6807\u7c7b\u4e2d\u5b9a\u4e49\u201c\u76ee\u6807\u7c7b\u4e2d\u5b9a\u4e49\u6e90\u7c7b\u5bf9\u8c61\u4f5c\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\u201d\u3002 \u4e24\u79cd\u65b9\u6cd5\u4efb\u9009\u4e00\u79cd\u5373\u53ef\u8fd0\u884c\u3002\u4f46\u662f\u4e00\u5b9a\u8981\u6ce8\u610f\u533a\u5206\u4e24\u79cd\u8f6c\u6362\u65b9\u5f0f\uff0c\u5982\u679c\u6ca1\u6709\u505a\u533a\u5206\uff0c\u5e38\u5e38\u4f1a\u5bfc\u81f4\u8f6c\u6362\u65b9\u5411\u9519\u8bef\u3002\u6b64\u5916\uff0c\u4e24\u79cd\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362\u7684\u65b9\u6cd5\u4e0d\u80fd\u540c\u65f6\u4f7f\u7528\uff0c\u4f7f\u7528\u65f6\u5fc5\u987b\u4efb\u9009\u5176\u4e2d\u4e00\u79cd\u3002 \u4f8b\u5b50 \u00b6 \u7b2c\u4e00\u4f8b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 #include <iostream> using namespace std ; class Dst { public : Dst () { cout << \"Dst::Dst()\" << endl ; } }; class Src { public : Src () { cout << \"Src::Src()\" << endl ; } operator Dst () const { cout << \"Src::operator Dst() called\" << endl ; return Dst (); } }; void Transform ( Dst d ) { } int main () { Src s ; Dst d1 ( s ); Dst d2 = s ; Transform ( s ); return 0 ; } /* Src::Src() Src::operator Dst() called Dst::Dst() Src::operator Dst() called Dst::Dst() Src::operator Dst() called Dst::Dst() */ \u6ce8\u610f\u5230\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u5e76\u4e0d\u4f1a\u53d1\u751f\u7c7b\u4f3c\u5207\u7247\u7684\u6548\u679c\uff0c\u53ea\u662f\u7528\u67d0\u4e00\u4e2a\u7c7b\u578b\u751f\u6210\u4e86\u53e6\u4e00\u7c7b\u578b\u800c\u5df2\u3002\u8fd9\u91cc\u4e3b\u51fd\u6570\u5185 Dst d2 = s \u7b49\u4ef7\u4e8e Dst d2(s) \uff0c\u800c void Transform(Dst d) \u8c03\u7528\u7684\u53c2\u6570\u672c\u8be5\u662f Dst \u7c7b\u578b\uff0c\u7531\u4e8e\u5b9a\u4e49\u4e86\u4ece s \u5230 Dst \u7684\u7c7b\u578b\u8f6c\u6362\uff0c\u6545\u800c\u4e5f\u53ef\u4ee5\u6267\u884c\uff0c\u5e76\u8fdb\u884c\u4e86\u8f6c\u6362\u3002 \u73b0\u5728\uff0c\u5c1d\u8bd5\u5bfb\u627e\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef 1 2 3 4 5 6 7 8 class SmallInt ; operator int ( SmallInt & ); // \u9519\u8bef\uff1a\u7c7b\u578b\u8f6c\u6362\u7b26\u5fc5\u987b\u662f\u6210\u5458\u51fd\u6570 class SmallInt { public : int operator int () const ; // \u9519\u8bef\uff1a\u7c7b\u578b\u8f6c\u6362\u7b26\u4e0d\u80fd\u6807\u8bb0\u8fd4\u56de\u7c7b\u578b operator int ( int = 0 ) const ; // \u9519\u8bef\uff1a\u5728\u6e90\u7c7b\u4e2d\u5b9a\u4e49\u76ee\u6807\u7c7b\u7684\u91cd\u8f7d\u8fd0\u7b97\u7b26\u9700\u8981\u53c2\u6570\u5217\u8868\u4e3a\u7a7a operator int * () const { return 42 ; } // \u9519\u8bef\uff1a42 \u4e0d\u662f\u4e00\u4e2a\u5408\u6cd5\u6307\u9488 }; \u53e6\u5916\u4e00\u4f8b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 #include <iostream> using namespace std ; class SmallInt { public : SmallInt ( int i = 0 ) : val ( i ) { cout << \"SmallInt_Init\" << endl ; } operator int () const { cout << \"Int_Transform\" << endl ; return val ; } void print () { cout << val << endl ; } private : size_t val ; }; int main () { SmallInt si ; si . print (); si = 4.10 ; si . print (); si = si + 3 ; si . print (); return 0 ; } /* output: SmallInt_Init 0 SmallInt_Init 4 Int_Transform SmallInt_Init 7 */ \u9996\u5148\uff0c\u8fd9\u91cc\u5b9a\u4e49\u7684 val \u662f size_t \u7c7b\u578b\u3002\u5b83\u662f\u4e00\u79cd\u201c\u6574\u578b\u201d\u7c7b\u578b\uff0c\u91cc\u9762\u4fdd\u5b58\u7684\u662f\u4e00\u4e2a\u6574\u6570\uff0c\u5c31\u50cf int \u3001 long \u4e00\u6837\u3002\u8fd9\u79cd\u6574\u6570\u7528\u6765\u8bb0\u5f55\u4e00\u4e2a\u5927\u5c0f\u3002 size_t \u7684\u5168\u79f0\u5e94\u8be5\u662f size type \uff0c\u5c31\u662f\u8bf4\u201c\u4e00\u79cd\u7528\u6765\u8bb0\u5f55\u5927\u5c0f\u7684\u6570\u636e\u7c7b\u578b\u201d\u3002\u901a\u5e38\u6211\u4eec\u7528 sizeof() \u64cd\u4f5c\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u6240\u5f97\u5230\u7684\u7ed3\u679c\u5c31\u662f size_t \u7c7b\u578b\u3002\u56e0\u4e3a size_t \u7c7b\u578b\u7684\u6570\u636e\u5176\u5b9e\u662f\u4fdd\u5b58\u4e86\u4e00\u4e2a\u6574\u6570\uff0c\u6240\u4ee5\u5b83\u4e5f\u53ef\u4ee5\u505a\u52a0\u51cf\u4e58\u9664\uff0c\u4e5f\u53ef\u4ee5\u8f6c\u5316\u4e3a int \u5e76\u8d4b\u503c\u7ed9 int \u7c7b\u578b\u7684\u53d8\u91cf\u3002 \u6ce8\u610f\u7b2c\u4e8c\u4e2a SmallInt_Init \u51fa\u73b0\u5728 si = 4.10 \uff0c\u9996\u5148\u5185\u7f6e\u7c7b\u578b\u8f6c\u6362\u5c06 double \u8f6c\u6362\u4e3a int \uff0c\u7136\u540e\u8c03\u7528\u6784\u9020\u51fd\u6570\u6784\u9020\u4e86\u4ee5 (int)4 \u4e3a\u53c2\u6570\u7684 SmallInt(4) \uff0c\u9690\u5f0f\u5730\u5c06 4 \u8f6c\u6362\u6210 SmallInt \u7c7b\u578b\u3002\u4e4b\u540e\u628a\u8fd9\u4e2a SmallInt(4) \u8d4b\u503c\u7ed9 si \uff0c\u7cfb\u7edf\u81ea\u52a8\u751f\u6210\u4e86 SmallInt \u7684\u8d4b\u503c\u8fd0\u7b97\u7b26\u91cd\u8f7d\u3002 si = si + 3 \u8bed\u53e5\u4e2d\u9996\u5148\u6267\u884c si + 3 \uff0c\u4e4b\u540e\u6267\u884c\u8d4b\u503c\u8bed\u53e5\u3002 \u8fd9\u53ef\u80fd\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\u60c5\u51b5\u4e00\uff0c\u628a si \u8f6c\u4e3a int \uff0c\u7136\u540e\u6267\u884c int \u7684\u52a0\u6cd5\uff0c\u5f97\u5230 7 \uff1b\u5f97\u5230 7 \u4e4b\u540e\u7684\u6b65\u9aa4\u5373\u4e3a\u8d4b\u503c\u8bed\u53e5 si = 7 \uff0c\u548c\u4e0a\u65b9\u7684 si = 4 \u7c7b\u4f3c\u3002\u8c03\u7528\u6784\u9020\u51fd\u6570\u6784\u9020\u4e86\u4ee5 (int)7 \u4e3a\u53c2\u6570\u7684 SmallInt(7) \uff0c\u9690\u5f0f\u5730\u5c06 7 \u8f6c\u6362\u6210 SmallInt \u7c7b\u578b\uff0c\u4e4b\u540e\u518d\u8c03\u7528\u7f16\u8bd1\u5668\u81ea\u52a8\u751f\u6210\u7684\u8d4b\u503c\u8fd0\u7b97\u7b26\u91cd\u8f7d\u3002\u60c5\u51b5\u4e8c\uff0c\u628a 3 \u8f6c\u4e3a SmallInt \u518d\u548c si \u76f8\u52a0\u3002\u8fd9\u5c31\u6709\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u6ca1\u6709\u663e\u5f0f\u5730\u91cd\u8f7d SmallInt \u7684 + \u8fd0\u7b97\u7b26\uff0c\u6545\u800c\u65e0\u6cd5\u8fd9\u4e2a\u8f6c\u6362\u5373\u662f\u5b8c\u6210\u4e86\uff0c\u4e5f\u65e0\u6cd5\u7ee7\u7eed\u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u5982\u679c\u6211\u4eec\u5728\u6b64\u57fa\u7840\u4e0a\u91cd\u8f7d\u4e86 SmallInt \u7684 + \u8fd0\u7b97\u7b26\uff0c\u6211\u4eec\u4e0d\u4ec5\u6709 SmallInt \u8f6c\u4e3a int \u7136\u540e\u4e24\u4e2a int \u76f8\u52a0\u518d\u6784\u9020 SmallInt(7) \u518d\u8d4b\u503c\u8fd9\u6761\u8def\uff0c\u540c\u65f6\u8fd8\u6709 3 \u5229\u7528\u6784\u9020\u51fd\u6570\u9690\u5f0f\u8f6c\u4e3a SmallInt \u4e4b\u540e\u4e24\u4e2a SmallInt \u76f8\u52a0\uff0c\u518d\u8d4b\u503c\u7ed9 si \u8fd9\u6761\u8def\u3002\u4f1a\u51fa\u73b0\u8def\u5f84\u6b67\u4e49\u800c\u7f16\u8bd1\u9519\u8bef\u3002\u5982\u4f55\u53ea\u8fdb\u884c\u7b2c\u4e8c\u6761\u8def\uff0c\u6211\u4eec\u901a\u8fc7\u4e0b\u4e00\u4f8b\u6765\u5b9e\u73b0\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 #include <iostream> using namespace std ; class SmallInt { public : SmallInt ( int i = 0 ) : val ( i ) { cout << \"SmallInt_Init\" << endl ; } SmallInt & operator = ( const SmallInt & src ) { if ( this == & src ) return * this ; cout << \"operator=\" << endl ; this -> val = src . val ; return * this ; } SmallInt operator + ( const SmallInt & b ) { cout << \"operator+\" << endl ; return SmallInt ( this -> val + b . val ); } private : size_t val ; }; int main () { SmallInt si ; si = 4.10 ; si = si + 3 ; return 0 ; } /* output: SmallInt_Init SmallInt_Init operator= SmallInt_Init operator+ SmallInt_Init operator= */ \u8fd9\u4e00\u4f8b\u5b50\u9a8c\u8bc1\u4e86\u4e4b\u524d\u7684\u7406\u89e3\u3002\u6211\u4eec\u6709\u4e86 si = SmallInt(4) \u5bf9\u5e94\u7684 = \u62f7\u8d1d\u8d4b\u503c\u8fd0\u7b97\u7b26\u91cd\u8f7d\u7684\u8f93\u51fa\u3002\u5728 si = si + 3 \u8fd9\u4e00\u6b65\uff0c\u9996\u5148\u628a 3 \u8f6c\u4e3a\u4e86 SmallInt(3) \uff0c\u63a5\u7740\u5229\u7528\u4e86 operator+ \u3002\u6ce8\u610f\u5230 operator+ \u7684\u8fd4\u56de\u503c\u518d\u6b21\u8c03\u7528\u4e86\u6784\u9020\u51fd\u6570\uff0c\u63a5\u7740\u628a\u8fd4\u56de\u503c\u62f7\u8d1d\u8d4b\u503c\u7ed9 si \u3002 \u4f46\u662f\u8fd9\u662f\u5982\u4f55\u907f\u514d\u4e86\u8def\u5f84\u6b67\u4e49\u5462\uff1f\u6ce8\u610f\u5230\u6211\u4eec\u5220\u9664\u4e86\u4ece SmallInt \u8f6c\u4e3a int \u7684\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\uff0c\u6545\u800c\u6ca1\u6709\u8def\u5f84\u4e00\uff0c\u53ea\u6709\u8def\u5f84\u4e8c\u3002 \u7981\u6b62\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362 \u00b6 \u5982\u679c\u7528 explicit \u4fee\u9970\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\u6216\u7c7b\u578b\u8f6c\u6362\u6784\u9020\u51fd\u6570\uff0c\u5219\u76f8\u5e94\u7684\u7c7b\u578b\u8f6c\u6362\u5fc5\u987b\u663e\u5f0f\u5730\u8fdb\u884c\u3002\u4f8b\u5982\uff1a 1 2 explicit operator Dst () const ; explicit Dst ( const Src & s ); \u5982\u679c\u4f7f\u7528 explicit \uff0c\u90a3\u4e48\uff1a 1 2 3 4 5 int main () { Src s ; Dst d1 ( s ); // \u53ef\u4ee5\u6267\u884c\uff0c\u88ab\u8ba4\u4e3a\u662f\u663e\u5f0f\u521d\u59cb\u5316 return 0 ; } \u56db\u7c7b\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362 \u00b6 const_cast \uff0c\u53bb\u9664\u7c7b\u578b\u7684 const \u6216 volatile \u5c5e\u6027\u3002 static_cast \uff0c\u7c7b\u4f3c\u4e8e C \u98ce\u683c\u7684\u5f3a\u5236\u8f6c\u6362\u3002\u65e0\u6761\u4ef6\u8f6c\u6362\uff0c\u9759\u6001\u7c7b\u578b\u8f6c\u6362\u3002 dynamic_cast \uff0c\u52a8\u6001\u7c7b\u578b\u8f6c\u6362\uff0c\u5982\u6d3e\u751f\u7c7b\u548c\u57fa\u7c7b\u4e4b\u95f4\u7684\u591a\u6001\u7c7b\u578b\u8f6c\u6362\u3002 reinterpret_cast \uff0c\u4ec5\u4ec5\u91cd\u65b0\u89e3\u91ca\u7c7b\u578b\uff0c\u4f46\u6ca1\u6709\u8fdb\u884c\u4e8c\u8fdb\u5236\u7684\u8f6c\u6362\u3002 \u4e4b\u524d\u7684\u4f8b\u5b50\u53ef\u4ee5\u91cd\u5199\u4e3a\uff1a 1 2 3 4 5 int main () { Src s ; Dst d2 = static_cast < Dst > ( s ); return 0 ; }","title":"\u5f15\u7528\u4e0e\u590d\u5236"},{"location":"languages/c-oop/reference-copy/#_1","text":"","title":"\u5f15\u7528\u4e0e\u590d\u5236"},{"location":"languages/c-oop/reference-copy/#_2","text":"","title":"\u5e38\u91cf\u5f15\u7528"},{"location":"languages/c-oop/reference-copy/#_3","text":"\u6309\u7167\u6700\u5c0f\u7279\u6743\u539f\u5219\uff1a\u7ed9\u51fd\u6570\u8db3\u591f\u7684\u6743\u9650\u53bb\u5b8c\u6210\u76f8\u5e94\u7684\u4efb\u52a1\uff0c\u4f46\u4e0d\u8981\u7ed9\u4e88\u4ed6\u4efb\u4f55\u591a\u4f59\u7684\u6743\u9650\u3002\u4f8b\u5982\u51fd\u6570 void add(int& a, int& b) \uff0c\u5982\u679c\u5c06\u53c2\u6570\u7c7b\u578b\u5b9a\u4e49\u4e3a int& \uff0c\u5219\u7ed9\u4e88\u8be5\u51fd\u6570\u5728\u51fd\u6570\u4f53\u5185\u4fee\u6539 a \u548c b \u7684\u503c\u7684\u6743\u9650\u3002 \u5982\u679c\u6211\u4eec\u4e0d\u60f3\u7ed9\u4e88\u51fd\u6570\u4fee\u6539\u6743\u9650\uff0c\u5219\u53ef\u4ee5\u5728\u53c2\u6570\u4e2d\u4f7f\u7528\u5e38\u91cf\u3001\u5e38\u91cf\u5f15\u7528 void add(const int& a, const int& b) \u3002\u6b64\u65f6\u51fd\u6570\u4e2d\u4ec5\u80fd\u8bfb\u53d6 a \u548c b \u7684\u503c\uff0c\u65e0\u6cd5\u5bf9 a \u3001 b \u8fdb\u884c\u4efb\u4f55\u4fee\u6539\u64cd\u4f5c\u3002","title":"\u5e38\u91cf\u5f15\u7528\u7684\u610f\u4e49"},{"location":"languages/c-oop/reference-copy/#_4","text":"","title":"\u62f7\u8d1d\u6784\u9020\u51fd\u6570"},{"location":"languages/c-oop/reference-copy/#_5","text":"\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u6784\u9020\u51fd\u6570\uff0c\u5b83\u7684\u53c2\u6570\u662f\u8bed\u8a00\u89c4\u5b9a\u7684\uff0c\u662f\u540c\u7c7b\u5bf9\u8c61\u7684\u5e38\u91cf\u5f15\u7528\u3002\u4f5c\u7528\uff1a\u7528\u53c2\u6570\u5bf9\u8c61\u7684\u5185\u5bb9\u521d\u59cb\u5316\u5f53\u524d\u5bf9\u8c61\u3002 1 2 3 4 5 6 7 8 Vector :: Vector ( const Vector & other ) { capacity = other . capacity ; len = other . len ; array = new Node [ other . capacity ]; for ( int i = 0 ; i < len ; i ++ ) { array [ i ] = other . array [ i ]; } }","title":"\u5b9a\u4e49\u4e0e\u8bed\u6cd5\u89c4\u5219"},{"location":"languages/c-oop/reference-copy/#_6","text":"\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u88ab\u8c03\u7528\u7684\u4e09\u79cd\u5e38\u89c1\u60c5\u51b5\u3002\u5728\u8fd9\u4e9b\u60c5\u51b5\u4e0b\uff0c\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u8c03\u7528\u201c\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u201d\uff0c\u5728\u5df2\u6709\u5bf9\u8c61\u57fa\u7840\u4e0a\u751f\u6210\u65b0\u5bf9\u8c61\u3002 \u7528\u4e00\u4e2a\u7c7b\u5bf9\u8c61\u5b9a\u4e49\u53e6\u4e00\u4e2a\u65b0\u7684\u7c7b\u5bf9\u8c61\uff1a 1 2 3 Test a ; Test b ( a ); Test c = a ; \u51fd\u6570\u8c03\u7528\u65f6\u4ee5\u7c7b\u7684\u5bf9\u8c61\u4e3a\u5f62\u53c2\uff1a 1 Func ( Test a ) \u51fd\u6570\u8fd4\u56de\u7c7b\u5bf9\u8c61\uff08\u65e0\u8fd4\u56de\u503c\u4f18\u5316\u7684\u60c5\u51b5\u4e0b\uff09\uff1a 1 Test Func ( void )","title":"\u8c03\u7528\u65f6\u673a"},{"location":"languages/c-oop/reference-copy/#_7","text":"\u7c7b\u7684\u65b0\u5bf9\u8c61\u88ab\u5b9a\u4e49\u540e\uff0c\u4f1a\u8c03\u7528\u6784\u9020\u51fd\u6570\u6216\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002\u5982\u679c\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u4e14\u5f53\u524d\u6ca1\u6709\u7ed9\u7c7b\u663e\u5f0f\u5b9a\u4e49\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u7f16\u8bd1\u5668\u5c06\u81ea\u52a8\u5408\u6210\u201c\u9690\u5f0f\u5b9a\u4e49\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u201d\uff0c\u5176\u529f\u80fd\u662f\u8c03\u7528\u6240\u6709\u6570\u636e\u6210\u5458\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u6216\u62f7\u8d1d\u8d4b\u503c\u8fd0\u7b97\u7b26\u3002 \u5bf9\u4e8e\u57fa\u7840\u7c7b\u578b\u6765\u8bf4\uff0c\u9ed8\u8ba4\u7684\u62f7\u8d1d\u65b9\u5f0f\u4e3a\u4f4d\u62f7\u8d1d\uff08\u82f1\u8bed\uff1aBitwise Copy\uff09\uff0c\u5373\u76f4\u63a5\u5bf9\u6574\u5757\u5185\u5b58\u8fdb\u884c\u590d\u5236\u3002 \u4f4d\u62f7\u8d1d\u539f\u672c\u662f C \u4e2d\u7684\u6982\u5ff5\u3002\u5728 C++ \u4e2d\uff0c\u53ea\u6709\u57fa\u7840\u7c7b\u578b\uff08 int \u3001 double \u7b49\uff09\u624d\u4f1a\u8fdb\u884c\u4f4d\u62f7\u8d1d\uff1b\u5bf9\u4e8e\u81ea\u5b9a\u4e49\u7c7b\uff0c\u7f16\u8bd1\u5668\u4f1a\u9012\u5f52\u8c03\u7528\u6240\u6709\u6570\u636e\u6210\u5458\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u6216\u62f7\u8d1d\u8d4b\u503c\u8fd0\u7b97\u7b26\u3002\u4f46\u4e00\u4e9b\u6559\u6750\u4e2d\u4ecd\u7136\u628a\u8fd9\u79cd\u884c\u4e3a\u79f0\u4e3a\u201c\u4f4d\u62f7\u8d1d\u201d\uff0c\u4ee5\u533a\u522b\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u62f7\u8d1d\u65b9\u6cd5\u3002 \u9690\u5f0f\u5b9a\u4e49\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u7684\u7f3a\u9677\uff1a\u9690\u5f0f\u5b9a\u4e49\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u5728\u9047\u5230\u6307\u9488\u7c7b\u578b\u6210\u5458\u65f6\u53ef\u80fd\u4f1a\u51fa\u9519,\u5bfc\u81f4\u591a\u4e2a\u6307\u9488\u7c7b\u578b\u7684\u53d8\u91cf\u6307\u5411\u540c\u4e00\u4e2a\u5730\u5740\u3002","title":"\u9690\u5f0f\u62f7\u8d1d\u6784\u9020\u51fd\u6570"},{"location":"languages/c-oop/reference-copy/#_8","text":"\u57fa\u672c\u7684\u6267\u884c\u987a\u5e8f \u4ee5\u4e0b\u8ff0\u7684 func \u51fd\u6570\u4e3a\u4f8b\uff0c\u8c03\u7528\u8be5\u51fd\u6570\u65f6\uff0c\u51fd\u6570\u4e2d\u5404\u7c7b\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u7684\u6267\u884c\u987a\u5e8f\u5982\u4e0b\u3002 \u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u5b9e\u9645\u4e0a\u5728\u4e3b\u51fd\u6570\u4f53\u5185\uff0c\u5047\u8bbe\u6211\u4eec\u7981\u7528\u8fd4\u56de\u503c\u4f18\u5316\u3002 Myclass a = func(d) \u8fd9\u4e2a\u8bed\u53e5\u5185\u7684\u8fd4\u56de\u503c\u7c7b\u6784\u9020\u8c03\u7528\u4e86\u62f7\u8d1d\u6784\u9020\uff0c\u5e76\u4e14\u76f8\u5173\u7684\u6790\u6784\u975e\u5e38\u503c\u5f97\u7814\u7a76\uff0c\u4e0b\u6587\u5c06\u5728\u79fb\u52a8\u6784\u9020\u51fd\u6570\u7684\u4f8b\u5b50\u4e2d\u5c06\u8fdb\u4e00\u6b65\u9610\u8ff0\u3002 \u4f8b\u5b50 \uff08\u7f16\u8bd1\u6307\u4ee4 g++ test.cpp --std=c++11 -fno-elide-constructors \u2013o test \uff09 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 #include <iostream> using namespace std ; class Test { public : Test () { // \u6784\u9020\u51fd\u6570 cout << \"Test()\" << endl ; } Test ( const Test & src ) { // \u62f7\u8d1d\u6784\u9020 cout << \"Test(const Test&)\" << endl ; } ~ Test () { // \u6790\u6784\u51fd\u6570 cout << \"~Test()\" << endl ; } }; Test copyObj ( Test obj ) { cout << \"func()...\" << endl ; return Test (); } int main () { cout << \"main()...\" << endl ; Test t ; t = copyObj ( t ); return 0 ; } \u8f93\u51fa\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 main()... Test() Test(const Test&) func()... Test() Test(const Test&) ~Test() ~Test() ~Test() ~Test() \u5bf9\u5e94\u5173\u7cfb\u5e76\u4e0d\u590d\u6742\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u5176\u5b9e\u6700\u6709\u610f\u601d\u7684\u662f\uff0c\u8fd9\u91cc\u5bf9\u4e8e\u8fd4\u56de\u7c7b\u5bf9\u8c61\u7684\u6784\u9020\u3002\u5728\u7981\u7528\u8fd4\u56de\u503c\u4f18\u5316\u7684\u6761\u4ef6\u4e0b\uff0c\u5982\u679c\u4e00\u4e2a\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u67d0\u4e2a\u5bf9\u8c61\uff0c\u90a3\u5728\u51fd\u6570\u8fd4\u56de\u524d\u9700\u8981\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u6784\u5efa\u8fd4\u56de\u503c\u3002 \u5373\u4f7f\u6211\u8fd4\u56de\u7684\u4e1c\u897f\u5c31\u662f\u6211\u4f20\u8fdb\u6765\u7684\u5f62\u53c2\u5bf9\u8c61\uff0c\u8fd4\u56de\u524d\u7684\u8fd9\u6b21\u6784\u9020\u4ecd\u7136\u4f1a\u53d1\u751f\uff0c\u4e5f\u5c31\u662f\u8fd9\u9053\u9898\u4e2d f1 \u7684\u7b2c\u4e8c\u6b21\u6784\u9020\u51fd\u6570\u8c03\u7528\u3002 \u4f46\u662f\u5bf9\u4e8e\u8fd4\u56de\u503c\u7684\u6784\u9020\u8c03\u7528\u7684\u5230\u5e95\u662f\u79fb\u52a8\u6784\u9020\u51fd\u6570\uff0c\u8fd8\u662f\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u5bf9\u6b64 C++11 \u6709\u89c4\u5b9a\uff1a\u5728\u65e0\u8fd4\u56de\u503c\u4f18\u5316\u7684\u60c5\u51b5\u4e0b\uff0c\u9ed8\u8ba4\u8c03\u7528\u79fb\u52a8\u6784\u9020\u51fd\u6570\u3002 \u6309\u6b64\u7406\u89e3\uff0c\u6b64\u5904\u6784\u9020\u8fd4\u56de\u503c\u7406\u5e94\u8c03\u7528\u79fb\u52a8\u6784\u9020\uff0c\u800c\u975e\u62f7\u8d1d\u6784\u9020\uff0c\u4f3c\u4e4e\u4ea7\u751f\u4e86\u77db\u76fe\u3002\u7136\u800c\uff0c\u5f53\u6211\u4eec\u663e\u5f0f\u5b9a\u4e49\u4e86\u62f7\u8d1d\u6784\u9020\uff0c\u7f16\u8bd1\u5668\u5c31\u4e0d\u4f1a\u9ed8\u8ba4\u751f\u6210\u79fb\u52a8\u6784\u9020\u4e86\u3002\u4ece\u800c\u7981\u7528\u4e86\u8fd4\u56de\u503c\u4f18\u5316\u540e\uff0c\u5728\u8fd4\u56de\u503c\u7684\u6784\u9020\u5f53\u4e2d\u8c03\u7528\u4e86\u62f7\u8d1d\u6784\u9020\u800c\u975e\u79fb\u52a8\u6784\u9020\uff0c\u56e0\u4e3a\u7f16\u8bd1\u5668\u4e0d\u4f1a\u9ed8\u8ba4\u751f\u6210\u79fb\u52a8\u6784\u9020\uff0c\u6211\u4e5f\u6ca1\u6709\u81ea\u5df1\u5b9a\u4e49\u3002 \u66f4\u8fdb\u4e00\u6b65\uff0c\u5982\u679c\u6211\u663e\u5f0f\u5b9a\u4e49\u4e86\u62f7\u8d1d\u8d4b\u503c\uff0c\u5c31\u4e0d\u4f1a\u9ed8\u8ba4\u751f\u6210\u79fb\u52a8\u8d4b\u503c\u4e86\u3002\u5982\u679c\u4e24\u4e2a\u90fd\u4e0d\u5b9a\u4e49\uff0c\u4e24\u4e2a\u90fd\u4f1a\u9ed8\u8ba4\u751f\u6210\u3002","title":"\u6267\u884c\u987a\u5e8f"},{"location":"languages/c-oop/reference-copy/#_9","text":"\u5f53\u7c7b\u5185\u542b\u6307\u9488\u7c7b\u578b\u7684\u6210\u5458\u65f6\uff0c\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u4f1a\u4f7f\u5f97\u4e24\u4e2a\u6307\u6b63\u6307\u5411\u540c\u4e00\u5185\u5b58\u7a7a\u95f4\u3002\u5728\u6790\u6784\u65f6\uff0c\u8be5\u5185\u5b58\u7a7a\u95f4\u53ef\u80fd\u88ab\u53cd\u590d\u91ca\u653e\u3002\u4e3a\u907f\u514d\u6307\u9488\u88ab\u91cd\u590d\u5220\u9664\uff0c\u4e0d\u5e94\u4f7f\u7528\u9690\u5f0f\u5b9a\u4e49\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002 \u4ee5\u53ca\uff0c\u5f53 \u5bf9\u8c61\u8f83\u5927 \u65f6\uff0c\u9891\u7e41\u7684\u62f7\u8d1d\u6784\u9020\u4f1a\u9020\u6210\u7a0b\u5e8f \u6548\u7387\u7684\u663e\u8457\u4e0b\u964d \u3002 \u6545\u800c\uff0c\u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u5e94\u5c3d\u53ef\u80fd\u907f\u514d\u4f7f\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002","title":"\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u7684\u7f3a\u9677"},{"location":"languages/c-oop/reference-copy/#_10","text":"\u4f7f\u7528\u5f15\u7528\u3001\u5e38\u91cf\u5f15\u7528\u4f20\u53c2\u6570\u6216\u8fd4\u56de\u5bf9\u8c61\uff1a 1 2 3 4 5 func ( MyClass a ) // BAD func ( const MyClass & a ) // GOOD MyClass func () // BAD MyClass & func () // GOOD \u5c06\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u58f0\u660e\u4e3a private \uff1a 1 2 3 4 5 class MyClass { MyClass ( const MyClass & ) { } public : MyClass () = default ; } \u7528 delete \u5173\u952e\u5b57\u8ba9\u7f16\u8bd1\u5668\u4e0d\u751f\u6210\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u7684\u9690\u5f0f\u5b9a\u4e49\u7248\u672c\u3002 1 2 3 4 5 class MyClass { public : MyClass () = default ; MyClass ( const MyClass & ) = delete ; }","title":"\u89e3\u51b3\u65b9\u6cd5"},{"location":"languages/c-oop/reference-copy/#_11","text":"","title":"\u79fb\u52a8\u6784\u9020\u51fd\u6570"},{"location":"languages/c-oop/reference-copy/#_12","text":"\u5de6\u53f3\u503c \u5de6\u503c\uff1a\u53ef\u4ee5\u53d6\u5730\u5740\u3001\u6709\u540d\u5b57\u7684\u503c\u3002 \u53f3\u503c\uff1a\u4e0d\u80fd\u53d6\u5730\u5740\u3001\u6ca1\u6709\u540d\u5b57\u7684\u503c\u3002\u5e38\u89c1\u4e8e\u5e38\u503c\u3001\u51fd\u6570\u8fd4\u56de\u503c\u3001\u8868\u8fbe\u5f0f\u3002 \u867d\u7136\u53f3\u503c\u4e0d\u80fd\u53d6\u5730\u5740\u4e5f\u6ca1\u6709\u540d\u5b57\uff0c\u4f46\u662f\u53f3\u503c\u53ef\u4ee5\u8fd0\u7b97\u3002 1 2 3 int a = 1 ; int b = func (); int c = a + b ; \u5176\u4e2d a \u3001 b \u3001 c \u4e3a\u5de6\u503c\uff0c 1 \u3001 func \u51fd\u6570\u8fd4\u56de\u503c\u3001 a + b \u7684\u7ed3\u679c\u4e3a\u53f3\u503c\u3002 1 2 3 4 5 6 7 8 9 10 11 12 #include <iostream> using namespace std ; int x (); int main () { int && a = x () + 1 ; cout << a << endl ; // 2 a ++ ; cout << a << endl ; // 3 return 0 ; } int x () { return 1 ; } \u53f3\u503c\u53ef\u4ee5\u8fd0\u7b97\uff0c\u4e14\u53f3\u503c\u5f15\u7528\u63a5\u6536\u53f3\u503c\u540e\u4e5f\u53ef\u4ee5\u8fd0\u7b97\u3002 \u5de6\u503c\u53ef\u4ee5\u53d6\u5730\u5740\uff0c\u5e76\u4e14\u53ef\u4ee5\u88ab & \u5f15\u7528\uff08\u5de6\u503c\u5f15\u7528\uff09\uff1a 1 2 3 4 5 int * d = & a ; int & d = a ; // OK int * e = & ( a + b ); int & e = a + b ; // Error! \u53f3\u503c\u5f15\u7528 \u867d\u7136\u53f3\u503c\u65e0\u6cd5\u53d6\u5730\u5740\uff0c\u4f46\u53ef\u4ee5\u88ab && \u5f15\u7528\uff08\u53f3\u503c\u5f15\u7528\uff09\u3002 \u53f3\u503c\u5f15\u7528\u53ef\u4ee5\u7ed1\u5b9a\u53f3\u503c\uff1a\u6bd4\u5982\u53ef\u4ee5 int&& e = a + b \u3002 \u53f3\u503c\u5f15\u7528\u65e0\u6cd5\u7ed1\u5b9a\u5de6\u503c\uff1a\u8bed\u53e5 int&& e = a \u4f1a\u62a5\u9519\u3002 \u603b\u4e4b\uff0c\u5de6\u503c\u5f15\u7528\u80fd\u7ed1\u5b9a\u5de6\u503c\uff0c\u53f3\u503c\u5f15\u7528\u80fd\u7ed1\u5b9a\u53f3\u503c\u3002\u7279\u4f8b\uff1a \u5e38\u91cf\u5de6\u503c\u5f15\u7528\u80fd\u4e5f\u7ed1\u5b9a\u53f3\u503c \uff0c\u56e0\u4e3a\u5e38\u91cf\u5de6\u503c\u5f15\u7528\u4e0d\u4f1a\u6539\u53d8\u5185\u5b58\u7a7a\u95f4\u7684\u6570\u636e\uff0c\u6545\u800c\u4e0d\u4f1a\u5f71\u54cd\u53f3\u503c\u3002\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u7ed1\u5b9a\u3002 1 2 const int & e = 3 ; // OK const int & e = a * b ; // OK \u6ce8\u610f\u5230\uff0c\u6240\u6709\u7684\u5f15\u7528\uff08\u5305\u62ec\u53f3\u503c\u5f15\u7528\uff09\u672c\u8eab\u90fd\u662f\u5de6\u503c\uff0c\u7ed3\u5408\u8be5\u89c4\u5219\u548c\u4e0a\u8868\u4fbf\u53ef\u5224\u65ad\u5404\u79cd\u6784\u9020\u51fd\u6570\u3001\u8d4b\u503c\u8fd0\u7b97\u7b26\u4e2d\u4f20\u9012\u53c2\u6570\u548c\u53d6\u8fd4\u56de\u503c\u7684\u5f15\u7528\u7ed1\u5b9a\u60c5\u51b5\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 #include <iostream> using namespace std ; int x (); int main () { int && a = x () + 1 ; cout << a << endl ; // 2 a ++ ; cout << a << endl ; // 3 int & b = a ; b ++ ; cout << a << endl ; // 4 return 0 ; } int x () { return 1 ; } \u5982\u6b64\u4f8b\uff0c\u53f3\u503c\u5f15\u7528\u672c\u8eab\u662f\u5de6\u503c\uff0c\u53ef\u4ee5\u88ab\u53d6\u5730\u5740\u3002 \u53e6\u5916\u4e00\u4f8b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 #include <iostream> using namespace std ; void ref ( int & x ) { cout << \"left \" << x << endl ; } void ref ( int && x ) { cout << \"right \" << x << endl ; } int main () { int a = 1 ; ref ( a ); // \"left 1\" ref ( 2 ); // \"right 2\" return 0 ; } \u5982\u679c\u6ca1\u6709\u5b9a\u4e49 ref(int&& x) \u51fd\u6570\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f ref(int& x) \u7684\u51fd\u6570\u53c2\u6570\u7c7b\u578b\u662f\u4e00\u4e2a\u5de6\u503c\u5f15\u7528\uff0c\u800c 2 \u662f\u4e00\u4e2a\u53f3\u503c\uff0c\u4e0d\u80fd\u8c03\u7528 ref (int& x) \u3002\u56e0\u6b64\u6ca1\u6709\u53ef\u4f9b\u8c03\u7528\u7684\u51fd\u6570\u3002 \u53e6\u5916\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #include <iostream> using namespace std ; void ref ( int & x ) { cout << \"left \" << x << endl ; } void ref ( int && x ) { cout << \"right \" << x << endl ; ref ( x ); } int main () { ref ( 1 ); // \"right 1\" \"left 1\" return 0 ; } \u5982\u524d\u6587\u6240\u8ff0\uff0c\u6240\u6709\u5f15\u7528\u672c\u8eab\u90fd\u662f\u5de6\u503c\uff0c\u6545\u800c ref(1) \u9996\u5148\u8c03\u7528 ref(int&& x) \u51fd\u6570\uff0c\u6b64\u65f6\u53f3\u503c\u5f15\u7528 x \u4e3a\u5de6\u503c\uff0c\u56e0\u6b64 ref(x) \u8c03\u7528 ref(int& x) \u51fd\u6570\u3002","title":"\u53f3\u503c\u4e0e\u53f3\u503c\u5f15\u7528"},{"location":"languages/c-oop/reference-copy/#_13","text":"\u5b9a\u4e49\u4e0e\u610f\u4e49 \u53f3\u503c\u5f15\u7528\u53ef\u4ee5\u5ef6\u7eed\u5373\u5c06\u9500\u6bc1\u53d8\u91cf\u7684\u751f\u547d\u5468\u671f\uff0c\u7528\u4e8e\u6784\u9020\u51fd\u6570\u53ef\u4ee5\u63d0\u5347\u5904\u7406\u6548\u7387\uff0c\u5728\u6b64\u8fc7\u7a0b\u4e2d\u5c3d\u53ef\u80fd\u5c11\u5730\u8fdb\u884c\u62f7\u8d1d\u3002 \u4f7f\u7528\u53f3\u503c\u5f15\u7528\u4f5c\u4e3a\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\u53eb\u505a\u79fb\u52a8\u6784\u9020\u51fd\u6570\u3002 1 ClassName ( ClassName && VariableName ); \u4e24\u79cd\u6784\u9020\u672c\u8d28\u533a\u522b \u79fb\u52a8\u6784\u9020\u51fd\u6570\u4e0e\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u6700\u4e3b\u8981\u7684\u5dee\u522b\u5c31\u662f\u7c7b\u4e2d\u5806\u5185\u5b58\u662f\u91cd\u65b0\u5f00\u8f9f\u5e76\u62f7\u8d1d\uff0c\u8fd8\u662f\u76f4\u63a5\u5c06\u6307\u9488\u6307\u5411\u90a3\u5757\u5730\u5740\u3002\u5bf9\u4e8e\u4e00\u4e9b\u5373\u5c06\u6790\u6784\u7684\u4e34\u65f6\u7c7b\uff0c\u79fb\u52a8\u6784\u9020\u51fd\u6570\u76f4\u63a5\u5229\u7528\u4e86\u539f\u6765\u4e34\u65f6\u5bf9\u8c61\u4e2d\u7684\u5806\u5185\u5b58\uff0c\u65b0\u7684\u5bf9\u8c61\u65e0\u9700\u5f00\u8f9f\u5185\u5b58\uff0c\u4e34\u65f6\u5bf9\u8c61\u65e0\u9700\u91ca\u653e\u5185\u5b58\uff0c\u4ece\u800c\u5927\u5927\u63d0\u9ad8\u8ba1\u7b97\u6548\u7387\u3002 \u4f8b\u5b50 \u5b8c\u6574\u5b9a\u4e49\u6240\u6709\u51fd\u6570\u4ee5\u53ca\u542f\u7528\u8fd4\u56de\u503c\u4f18\u5316 g++ test.cpp --std=c++11 -o test \u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 #include <iostream> using namespace std ; class Test { public : int * buf ; Test () { buf = new int [ 10 ]; cout << \"Test(): this->buf @ \" << hex << buf << endl ; } ~ Test () { cout << \"~Test(): this->buf @ \" << hex << buf << endl ; if ( buf ) delete [] buf ; } Test ( const Test & t ) : buf ( new int [ 10 ]) { for ( int i = 0 ; i < 10 ; i ++ ) buf [ i ] = t . buf [ i ]; cout << \"Test(const Test&) called. this->buf @ \" << hex << buf << endl ; } Test ( Test && t ) : buf ( t . buf ) { cout << \"Test(Test&&) called. this->buf @ \" << hex << buf << endl ; t . buf = nullptr ; } }; Test GetTemp () { Test tmp ; cout << \"GetTemp(): tmp.buf @ \" << hex << tmp . buf << endl ; return tmp ; } void fun ( Test t ) { cout << \"fun(Test t): t.buf @ \" << hex << t . buf << endl ; } int main () { Test a = GetTemp (); cout << \"main(): a.buf @ \" << hex << a . buf << endl ; fun ( a ); return 0 ; } /* output: Test(): this->buf @ 0x7fa908c04b90 GetTemp(): tmp.buf @ 0x7fa908c04b90 main(): a.buf @ 0x7fa908c04b90 Test(const Test&) called. this->buf @ 0x7fa908c04ba0 fun(Test t): t.buf @ 0x7fa908c04ba0 ~Test(): this->buf @ 0x7fa908c04ba0 ~Test(): this->buf @ 0x7fa908c04b90 */ \u6ca1\u6709\u8c03\u7528\u79fb\u52a8\u6784\u9020\u51fd\u6570\uff0c\u4e5f\u5c11\u8c03\u7528\u4e86\u51e0\u6b21\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002 \u5173\u952e\u70b9\u5728\u4e8e\uff0c\u8fd4\u56de\u503c\u4f18\u5316\u4e4b\u540e\u4e0d\u4f1a\u901a\u8fc7\u79fb\u52a8\u6784\u9020\u6765\u6784\u9020\u8fd4\u56de\u503c\u7c7b\uff0c\u4e5f\u4e0d\u4f1a\u901a\u8fc7\u79fb\u52a8\u6784\u9020\u6765\u6784\u9020 a \uff0c\u5b9e\u73b0\u4e86\u76f4\u63a5 return \u3002 \u53e6\u4e00\u4f8b\uff0c\u5b8c\u6574\u5b9a\u4e49\u6240\u6709\u51fd\u6570\u4f46\u7981\u7528\u8fd4\u56de\u503c\u4f18\u5316 g++ test.cpp --std=c++11 -fno-elide-constructors -o test \uff1a \u8fd9\u91cc\u8bfe\u4ef6\u4e0a\u7684\u6ce8\u91ca\u6709\u4e9b\u8bef\u5bfc\uff0c\u6211\u5728 rextester \u8f93\u51fa\u8be5\u6bb5\u4ee3\u7801\uff0c\u91c7\u7528\u7684\u6307\u4ee4\u4e3a g++ -Wall -std=c++14 -O2 -fno-elide-constructors -o a.out source_file.cpp \uff1a 1 2 3 4 5 6 7 8 9 10 11 12 output: Test(): this->buf @ 0x563a2616ae70 GetTemp(): tmp.buf @ 0x563a2616ae70 Test(Test&&) called. this->buf @ 0x563a2616ae70 ~Test(): this->buf @ 0 Test(Test&&) called. this->buf @ 0x563a2616ae70 ~Test(): this->buf @ 0 main() : a.buf @ 0x563a2616ae70 Test(const Test&) called. this->buf @ 0x563a2616beb0 fun(Test t): t.buf @ 0x563a2616beb0 ~Test(): this->buf @ 0x563a2616beb0 ~Test(): this->buf @ 0x563a2616ae70 \u7981\u7528\u8fd4\u56de\u503c\u4f18\u5316\u4f46\u662f\u540c\u65f6\u5b9a\u4e49\u4e86\u79fb\u52a8\u6784\u9020\u51fd\u6570\uff0c\u6545\u800c\u9700\u8981\u901a\u8fc7\u79fb\u52a8\u6784\u9020\u6765\u6784\u9020\u8fd4\u56de\u503c\u7c7b\u3002\u4e4b\u540e\u7acb\u523b\u5c06 tmp \u6790\u6784\uff08\u7531\u4e8e\u79fb\u52a8\u6784\u9020\u5df2\u7ecf\u5c06 tmp \u7684\u6307\u9488\u7f6e\u7a7a\u4e86\uff0c\u6545\u800c buf \u5730\u5740\u4e3a 0 \uff09\uff0c\u4f46\u662f\u6ca1\u6709\u6790\u6784\u8fd4\u56de\u503c\u7c7b GetTemp \u3002\u8fd4\u56de\u503c\u7c7b GetTemp \u5bf9 a \u79fb\u52a8\u6784\u9020\uff0c\u8fd9\u4f7f\u5f97 GetTemp \u7684 buf \u5730\u5740\u4e5f\u4e3a 0 \u3002\u8fd9\u4e00\u6b65\u79fb\u52a8\u6784\u9020\u540e\uff0c\u9a6c\u4e0a\u6790\u6784\u4e86 GetTemp \u3002 \u7efc\u4e0a\u6240\u8ff0\uff0c Test a = GetTemp() \u8fd9\u4e00\u8bed\u53e5\u7684\u6267\u884c\u987a\u5e8f\u662f\u5148\u6784\u9020 tmp \uff0c\u79fb\u52a8\u6784\u9020\u8fd4\u56de\u503c\u7c7b\u3002\u7acb\u523b\u6790\u6784 tmp \uff0c\u8fd4\u56de\u503c\u7c7b\u79fb\u52a8\u6784\u9020 a \uff0c\u63a5\u7740\u6790\u6784\u8fd4\u56de\u503c\u7c7b\u3002 \u7ed3\u5408\u4f8b\u5b50\uff0c\u6211\u4eec\u6765\u63a2\u7a76\u4e0b\u8fd4\u56de\u503c\u7c7b\u5728\u7981\u7528\u8fd4\u56de\u503c\u4f18\u5316\u6761\u4ef6\u4e0b\u7684\u6790\u6784\u987a\u5e8f\u3002\u6d4b\u8bd5\u4ee3\u7801\u5982\u4e0b\uff0c\u7f16\u8bd1\u6307\u4ee4\u4e3a g++ -Wall -std=c++14 -O2 -fno-elide-constructors -o a.out source_file.cpp \uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 #include <iostream> using namespace std ; class Test { public : int * buf ; Test () { buf = new int [ 10 ]; cout << \"Test(): this->buf @ \" << hex << buf << endl ; } ~ Test () { cout << \"~Test(): this->buf @ \" << hex << buf << endl ; if ( buf ) delete [] buf ; } Test ( const Test & t ) : buf ( new int [ 10 ]) { for ( int i = 0 ; i < 10 ; i ++ ) buf [ i ] = t . buf [ i ]; cout << \"Test(const Test&) called. this->buf @ \" << hex << buf << endl ; } Test ( Test && t ) : buf ( t . buf ) { cout << \"Test(Test&&) called. this->buf @ \" << hex << buf << endl ; t . buf = nullptr ; } }; Test GetTemp ( Test x ) { Test tmp ; cout << \"GetTemp(): tmp.buf @ \" << hex << tmp . buf << endl ; return tmp ; } void fun ( Test t ) { cout << \"fun(Test t): t.buf @ \" << hex << t . buf << endl ; } int main () { Test d ; Test a = GetTemp ( d ); cout << \"main(): a.buf @ \" << hex << a . buf << endl ; fun ( a ); return 0 ; } /* output: Test(): this->buf @ 0x5572ec8c2e70 Test(const Test&) called. this->buf @ 0x5572ec8c3eb0 Test(): this->buf @ 0x5572ec8c3ee0 GetTemp(): tmp.buf @ 0x5572ec8c3ee0 Test(Test&&) called. this->buf @ 0x5572ec8c3ee0 ~Test(): this->buf @ 0 Test(Test&&) called. this->buf @ 0x5572ec8c3ee0 ~Test(): this->buf @ 0 ~Test(): this->buf @ 0x5572ec8c3eb0 main(): a.buf @ 0x5572ec8c3ee0 Test(const Test&) called. this->buf @ 0x5572ec8c3eb0 fun(Test t): t.buf @ 0x5572ec8c3eb0 ~Test(): this->buf @ 0x5572ec8c3eb0 ~Test(): this->buf @ 0x5572ec8c3ee0 ~Test(): this->buf @ 0x5572ec8c2e70 */ \u53ef\u4ee5\u53d1\u73b0\uff0c\u5148\u62f7\u8d1d\u6784\u9020\u4e86 x \uff0c\u63a5\u7740\u6784\u9020 tmp \uff0c\u79fb\u52a8\u6784\u9020 GetTemp \uff0c\u9a6c\u4e0a\u6790\u6784 tmp \uff0c\u79fb\u52a8\u6784\u9020 a \uff0c\u6790\u6784 GetTemp \uff0c\u6790\u6784 x \u3002\u65454\u548c5\u4e4b\u95f4\u53ef\u80fd\u8fd8\u4f1a\u8fdb\u884c\u975e\u5e38\u591a\u7684\u64cd\u4f5c\u3002 \u518d\u8005\uff0c\u5220\u9664\u79fb\u52a8\u6784\u9020\u51fd\u6570\u4e14\u7981\u7528\u8fd4\u56de\u503c\u4f18\u5316\u3002\u7f16\u8bd1\u6307\u4ee4 g++ -Wall -std=c++14 -O2 -fno-elide-constructors -o a.out source_file.cpp \uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 #include <iostream> using namespace std ; class Test { public : int * buf ; Test () { buf = new int [ 10 ]; cout << \"Test(): this->buf @ \" << hex << buf << endl ; } ~ Test () { cout << \"~Test(): this->buf @ \" << hex << buf << endl ; if ( buf ) delete [] buf ; } Test ( const Test & t ) : buf ( new int [ 10 ]) { for ( int i = 0 ; i < 10 ; i ++ ) buf [ i ] = t . buf [ i ]; cout << \"Test(const Test&) called. this->buf @ \" << hex << buf << endl ; } Test ( Test && t ) : buf ( t . buf ) { cout << \"Test(Test&&) called. this->buf @ \" << hex << buf << endl ; t . buf = nullptr ; } }; Test GetTemp () { Test tmp ; cout << \"GetTemp(): tmp.buf @ \" << hex << tmp . buf << endl ; return tmp ; } void fun ( Test t ) { cout << \"fun(Test t): t.buf @ \" << hex << t . buf << endl ; } int main () { Test a = GetTemp (); cout << \"main(): a.buf @ \" << hex << a . buf << endl ; fun ( a ); return 0 ; } /* output: Test(): this->buf @ 0x5638c49e8e70 GetTemp(): tmp.buf @ 0x5638c49e8e70 Test(const Test&) called. this->buf @ 0x5638c49e9eb0 ~Test(): this->buf @ 0x5638c49e8e70 Test(const Test&) called. this->buf @ 0x5638c49e8e70 ~Test(): this->buf @ 0x5638c49e9eb0 main(): a.buf @ 0x5638c49e8e70 Test(const Test&) called. this->buf @ 0x5638c49e9eb0 fun(Test t): t.buf @ 0x5638c49e9eb0 ~Test(): this->buf @ 0x5638c49e9eb0 ~Test(): this->buf @ 0x5638c49e8e70 */ \u8fd9\u91cc\u53ea\u6709\u62f7\u8d1d\u6784\u9020\uff0c\u7f16\u8bd1\u5668\u6ca1\u6709\u9ed8\u8ba4\u751f\u6210\u79fb\u52a8\u6784\u9020\u3002\u62f7\u8d1d\u6784\u9020\u4e86\u8fd4\u56de\u503c\u7c7b\u540e\uff0c\u7acb\u523b\u6790\u6784\u4e86 tmp \uff0c\u91ca\u653e\u4e86\u5c3e\u53f7\u4e3a 70 \u7684\u7a7a\u95f4\u3002\u6ce8\u610f\u5230\uff0c\u7a7a\u95f4\u91ca\u653e\u4e4b\u540e\u9a6c\u4e0a\u5c31\u53ef\u4ee5\u518d\u6b21\u88ab\u4f7f\u7528\uff0c\u6240\u4ee5\u8fd4\u56de\u503c\u7c7b\u53bb\u62f7\u8d1d\u6784\u9020 a \u65f6\uff0c\u7528\u7684\u4fbf\u662f\u4e0a\u6b21\u88ab\u6790\u6784\u91ca\u653e\u51fa\u6765\u7684\u5c3e\u53f7\u4e3a 70 \u7684\u7a7a\u95f4\u3002\u63a5\u4e0b\u6765\u6790\u6784\u6389\u8fd4\u56de\u503c\u7c7b\uff0c\u91ca\u653e\u4e86\u5c3e\u53f7\u4e3a b0 \u7684\u7a7a\u95f4\uff0c\u4e0b\u4e00\u6b21 fun(a) \u5f53\u4e2d\u5bf9\u5f62\u53c2\u7684\u62f7\u8d1d\u6784\u9020\u9a6c\u4e0a\u5c31\u5229\u7528\u4e86 b0 \u7a7a\u95f4\u3002","title":"\u79fb\u52a8\u6784\u9020\u51fd\u6570"},{"location":"languages/c-oop/reference-copy/#_14","text":"\u8bed\u6cd5\u4e0e\u610f\u4e49 \u79fb\u52a8\u6784\u9020\u51fd\u6570\u52a0\u5feb\u4e86\u53f3\u503c\u521d\u59cb\u5316\u7684\u6784\u9020\u901f\u5ea6\uff0c\u6545\u800c\u5e0c\u671b\u5bf9\u5de6\u503c\u8c03\u7528\u79fb\u52a8\u6784\u9020\u51fd\u6570\u4ee5\u52a0\u5feb\u5de6\u503c\u521d\u59cb\u5316\u7684\u6784\u9020\u901f\u5ea6\u3002 \u8fd9\u91cc\u4ecb\u7ecd std::move \u51fd\u6570\u3002\u8f93\u5165\uff1a\u5de6\u503c\uff08\u5305\u62ec\u53d8\u91cf\u7b49\uff0c\u8be5\u5de6\u503c\u4e00\u822c\u4e0d\u518d\u4f7f\u7528\u3002\u79fb\u52a8\u540e\u5c31\u4e0d\u80fd\u518d\u6b21\u4f7f\u7528\uff09\u3002\u8fd4\u56de\u503c\uff1a\u8be5\u5de6\u503c\u5bf9\u5e94\u7684\u53f3\u503c\u3002 1 2 Test a ; Test b = std :: move ( a ); move \u51fd\u6570\u672c\u8eab\u4e0d\u5bf9\u5bf9\u8c61\u505a\u4efb\u4f55\u64cd\u4f5c\uff0c \u4ec5\u505a\u7c7b\u578b\u8f6c\u6362 \uff0c\u5373\u8f6c\u6362\u4e3a\u53f3\u503c\u3002\u79fb\u52a8\u7684\u5177\u4f53\u64cd\u4f5c\u5728\u79fb\u52a8\u6784\u9020\u51fd\u6570\u5185\u5b9e\u73b0\u3002 \u53f3\u503c\u5f15\u7528\u7ed3\u5408 std::move \u53ef\u4ee5\u663e\u8457\u63d0\u9ad8 swap \u51fd\u6570\u7684\u6027\u80fd\u3002 std::move \u5f15\u8d77\u79fb\u52a8\u6784\u9020\u51fd\u6570\u6216\u79fb\u52a8\u8d4b\u503c\u8fd0\u7b97\u7684\u8c03\u7528\u3002 \u4f8b\u5982\uff1a 1 2 3 4 5 6 template < class T > swap ( T & a , T & b ) { T tmp ( a ); a = b ; b = tmp ; } \u6539\u5199\u4e3a\uff1a 1 2 3 4 5 6 template < class T > swap ( T & a , T & b ) { T tmp ( std :: move ( a )); a = std :: move ( b ); b = std :: move ( tmp ); } \u907f\u514d 3 \u6b21\u4e0d\u5fc5\u8981\u7684\u62f7\u8d1d\u64cd\u4f5c \u4f8b\u5b50 \u7981\u7528\u8fd4\u56de\u503c\u4f18\u5316 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 #include <iostream> class Test { public : Test () { printf ( \"Test() \\n \" ); } ~ Test () { printf ( \"~Test() \\n \" ); } Test ( const Test & con ) { printf ( \"Test(const Test &con) \\n \" ); } Test ( Test && con ) { printf ( \"Test(Test &&con) \\n \" ); } }; Test func ( Test a ) { return Test (); } int main () { Test a ; Test b = func ( a ); return 0 ; } \u6700\u540e\u8f93\u51fa\u5982\u4e0b\uff0c\u5176\u4e2d (1+) \u548c (1-) \u8868\u793a 1 \u53f7\u5bf9\u8c61\u7684\u6784\u9020\u548c\u6790\u6784\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Test() // (1+) \u6267\u884c Test a Test(const Test &con) // (2+) Test b = func(a) // func(a) \u4f20\u53c2\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570 Test() // (3+) return Test() // Test() \u5bf9\u5e94\u7684\u6784\u9020\u51fd\u6570 Test(Test &&con) // (4+) return Test() // \u4e3a\u4e86\u4f20\u503c\u8c03\u7528\u7684\u79fb\u52a8\u6784\u9020\u51fd\u6570 ~Test() // (3-) return Test() // Test() \u5bf9\u5e94\u7684\u6790\u6784\u51fd\u6570 Test(Test &&con) // (5+) Test b = func(a) // \u4e2d\u7ed9 b \u4f20\u503c\u65f6\u8c03\u7528\u7684\u79fb\u52a8\u6784\u9020\u51fd\u6570 ~Test() // (4-) Test b = func(a) // \u5b8c\u6210\u8d4b\u503c\u540e func(a) \u8fd4\u56de\u503c\u5bf9\u5e94\u7684\u6790\u6784\u51fd\u6570 ~Test() // (2-) Test b = func(a) // \u53c2\u6570\u91ca\u653e\u5bf9\u5e94\u7684\u6790\u6784\u51fd\u6570 ~Test() // (5-) \u6790\u6784 b ~Test() // (1-) \u6790\u6784 a","title":"\u79fb\u52a8\u8bed\u53e5"},{"location":"languages/c-oop/reference-copy/#_15","text":"\u5224\u65ad\u4f9d\u636e \u5f15\u7528\u7684\u7ed1\u5b9a\u89c4\u5219\uff1a \u62f7\u8d1d\u6784\u9020\u51fd\u6570\u7684\u5f62\u53c2\u7c7b\u578b\u4e3a\u5e38\u91cf\u5de6\u503c\u5f15\u7528\uff0c\u53ef\u4ee5\u7ed1\u5b9a\u5e38\u91cf\u5de6\u503c\u3001\u5de6\u503c\u548c\u53f3\u503c\u3002\u79fb\u52a8\u6784\u9020\u51fd\u6570\u7684\u5f62\u53c2\u7c7b\u578b\u4e3a\u53f3\u503c\u5f15\u7528\uff0c\u53ef\u4ee5\u7ed1\u5b9a\u53f3\u503c\u3002\u5f15\u7528\u7684\u7ed1\u5b9a\u5b58\u5728\u4f18\u5148\u7ea7\uff0c\u4f8b\u5982\u5e38\u91cf\u5de6\u503c\u5f15\u7528\u548c\u53f3\u503c\u5f15\u7528\u5747\u80fd\u7ed1\u5b9a\u53f3\u503c\uff0c\u5f53\u4f20\u5165\u5b9e\u53c2\u7c7b\u578b\u4e3a\u53f3\u503c\u65f6\u4f18\u5148\u5339\u914d\u5f62\u53c2\u7c7b\u578b\u4e3a\u53f3\u503c\u5f15\u7528\u7684\u51fd\u6570\u3002 \u62f7\u8d1d\u6784\u9020\u51fd\u6570\u7684\u5e38\u89c1\u8c03\u7528\u65f6\u673a \u7528\u4e00\u4e2a\u7c7b\u5bf9\u8c61\u3001\u5f15\u7528\u3001\u5e38\u91cf\u5f15\u7528\u521d\u59cb\u5316\u53e6\u4e00\u4e2a\u65b0\u7684\u7c7b\u5bf9\u8c61 \u4ee5\u7c7b\u7684\u5bf9\u8c61\u4e3a\u51fd\u6570\u5f62\u53c2\uff0c\u4f20\u5165\u5b9e\u53c2\u4e3a\u7c7b\u7684\u5bf9\u8c61\u3001\u5f15\u7528\u3001\u5e38\u91cf\u5f15\u7528 \u51fd\u6570\u8fd4\u56de\u7c7b\u5bf9\u8c61\uff08\u7c7b\u4e2d\u672a\u663e\u5f0f\u5b9a\u4e49\u79fb\u52a8\u6784\u9020\u51fd\u6570\uff0c\u4e0d\u8fdb\u884c\u8fd4\u56de\u503c\u4f18\u5316\uff09 \u79fb\u52a8\u6784\u9020\u51fd\u6570\u7684\u5e38\u89c1\u8c03\u7528\u65f6\u673a \u7528\u4e00\u4e2a\u7c7b\u5bf9\u8c61\u7684\u53f3\u503c\u521d\u59cb\u5316\u53e6\u4e00\u4e2a\u65b0\u7684\u7c7b\u5bf9\u8c61\uff08\u5e38\u914d\u5408 std::move \u51fd\u6570\u4e00\u8d77\u4f7f\u7528\uff09 \u4ee5\u7c7b\u7684\u5bf9\u8c61\u4e3a\u51fd\u6570\u5f62\u53c2\uff0c\u4f20\u5165\u5b9e\u53c2\u4e3a\u7c7b\u5bf9\u8c61\u7684\u53f3\u503c\uff08\u5e38\u914d\u5408 std::move \u51fd\u6570\u4f7f\u7528\uff09 \u4e0e func(a) \u4e0d\u540c\u51fd\u6570\u8fd4\u56de\u7c7b\u5bf9\u8c61\uff08\u7c7b\u4e2d\u663e\u5f0f\u5b9a\u4e49\u79fb\u52a8\u6784\u9020\u51fd\u6570\uff0c\u4e0d\u8fdb\u884c\u8fd4\u56de\u503c\u4f18\u5316\uff09 \u6ce8\u610f\u5230 D \u662f\u9519\u7684\uff0c\u8fd4\u56de\u503c\u867d\u7136\u662f\u975e\u9759\u6001\u4e34\u65f6\u53d8\u91cf\u7684\u5e38\u91cf\u5de6\u503c\u5f15\u7528\uff0c\u4f46\u662f\u8fd4\u56de\u7c7b\u578b\u6839\u672c\u4e0d\u662f\u5f15\u7528\uff0c\u5e76\u4e0d\u662f\u8fd4\u56de\u4e34\u65f6\u53d8\u91cf\u7684\u5f15\u7528\u3002","title":"\u4e24\u7c7b\u6784\u9020\u51fd\u6570\u7684\u8c03\u7528\u65f6\u673a"},{"location":"languages/c-oop/reference-copy/#_16","text":"","title":"\u62f7\u8d1d\u4e0e\u79fb\u52a8\u8d4b\u503c\u8fd0\u7b97\u7b26"},{"location":"languages/c-oop/reference-copy/#_17","text":"\u5df2\u5b9a\u4e49\u7684\u5bf9\u8c61\u4e4b\u95f4\u76f8\u4e92\u8d4b\u503c\uff0c\u53ef\u901a\u8fc7\u8c03\u7528\u5bf9\u8c61\u7684\u201c\u62f7\u8d1d\u8d4b\u503c\u8fd0\u7b97\u7b26\u51fd\u6570\u201d\u6765\u5b9e\u73b0\u7684\u3002 1 2 3 4 5 6 ClassName & operator = ( const ClassName & right ) { if ( this != & right ) { // \u907f\u514d\u81ea\u5df1\u8d4b\u503c\u7ed9\u81ea\u5df1 // \u5c06 right \u5bf9\u8c61\u4e2d\u7684\u5185\u5bb9\u62f7\u8d1d\u5230\u5f53\u524d\u5bf9\u8c61\u4e2d } return * this ; } \u6ce8\u610f\u4f5c\u51fa\u533a\u5206\uff1a 1 2 3 4 ClassName a ; ClassName b ; a = b ; // \u6b64\u5904\u4e3a\u62f7\u8d1d\u590d\u5236\u8fd0\u7b97 ClassName a = b ; // \u6b64\u5904\u4e3a\u5b9a\u4e49\u65b0\u5bf9\u8c61 \u8d4b\u503c\u91cd\u8f7d\u51fd\u6570\u5fc5\u987b\u8981\u662f\u7c7b\u7684\u975e\u9759\u6001\u6210\u5458\u51fd\u6570\uff0c\u4e0d\u80fd\u662f\u53cb\u5143\u51fd\u6570\u3002\u56e0\u4e3a\u590d\u5236\u8fd0\u7b97\u662f\u5bf9\u4e8e\u8fd9\u4e2a\u7c7b\u800c\u8a00\u7684\uff0c\u663e\u7136\u662f\u7c7b\u51fd\u6570\u3002\u540c\u65f6\uff0c\u8d4b\u503c\u8fd0\u7b97\u4f9d\u8d56\u4e8e\u5177\u4f53\u7684\u5bf9\u8c61\uff0c\u4e0d\u80fd\u662f\u9759\u6001\u7684\u3002 1 2 3 4 5 6 7 8 9 Test & operator = ( const Test & right ) { if ( this == & right ) cout << \"same obj! \\n \" ; else { for ( int i = 0 ; i < 10 ; i ++ ) buf [ i ] = right . buf [ i ]; // \u62f7\u8d1d\u6570\u636e cout << \"operator=(const Test&) called. \\n \" ; } return * this ; }","title":"\u62f7\u8d1d\u8d4b\u503c\u8fd0\u7b97\u7b26\u5b9a\u4e49\u4e0e\u610f\u4e49"},{"location":"languages/c-oop/reference-copy/#_18","text":"\u548c\u79fb\u52a8\u6784\u9020\u51fd\u6570\u539f\u7406\u7c7b\u4f3c\u3002 1 2 3 4 5 6 7 8 9 Test & operator = ( Test && right ) { if ( this == & right ) cout << \"same obj! \\n \" ; else { this -> buf = right . buf ; // \u76f4\u63a5\u8d4b\u503c\u5730\u5740 right . buf = nullptr ; cout << \"operator=(Test&&) called. \\n \" ; } return * this ; } \u4f8b\u5982\uff1a 1 2 3 4 5 swap ( Test & a , Test & b ) { Test tmp ( std :: move ( a )); // \u7b2c\u4e00\u884c\u8c03\u7528\u79fb\u52a8\u6784\u9020\u51fd\u6570 a = std :: move ( b ); // std::move \u7684\u7ed3\u679c\u4e3a\u53f3\u503c\u5f15\u7528\uff0c b = std :: move ( tmp ); // \u540e\u4e24\u884c\u5747\u8c03\u7528\u79fb\u52a8\u8d4b\u503c\u8fd0\u7b97 }","title":"\u79fb\u52a8\u8d4b\u503c\u8fd0\u7b97\u7b26\u4f5c\u7528\u4e0e\u610f\u4e49"},{"location":"languages/c-oop/reference-copy/#_19","text":"\u548c\u62f7\u8d1d\u3001\u79fb\u52a8\u6784\u9020\u51fd\u6570\u7684\u8c03\u7528\u65f6\u673a\u7c7b\u4f3c\uff0c\u4e3b\u8981\u5224\u65ad\u4f9d\u636e\u662f\u5f15\u7528\u7684\u7ed1\u5b9a\u89c4\u5219\u3002 \u62f7\u8d1d\u8d4b\u503c\u8fd0\u7b97\u7b26\u51fd\u6570\u7684\u5f62\u53c2\u7c7b\u578b\u4e3a\u5e38\u91cf\u5de6\u503c\u5f15\u7528\uff0c\u53ef\u4ee5\u7ed1\u5b9a\u5e38\u91cf\u5de6\u503c\u3001\u5de6\u503c\u548c\u53f3\u503c \u79fb\u52a8\u8d4b\u503c\u8fd0\u7b97\u7b26\u51fd\u6570\u7684\u5f62\u53c2\u7c7b\u578b\u4e3a\u53f3\u503c\u5f15\u7528\uff0c\u53ef\u4ee5\u7ed1\u5b9a\u53f3\u503c\uff08\u5e38\u91cf\u3001\u8868\u8fbe\u5f0f\u3001\u51fd\u6570\u8fd4\u56de\uff09 \u5f15\u7528\u7684\u7ed1\u5b9a\u5b58\u5728\u4f18\u5148\u7ea7\uff0c\u4f8b\u5982\u5e38\u91cf\u5de6\u503c\u5f15\u7528\u548c\u53f3\u503c\u5f15\u7528\u5747\u80fd\u7ed1\u5b9a\u53f3\u503c\uff0c\u5f53\u8d4b\u503c\u8fd0\u7b97\u7b26\u53f3\u4fa7\u4e3a\u53f3\u503c\u65f6\u4f18\u5148\u5339\u914d\u5f62\u53c2\u7c7b\u578b\u4e3a\u53f3\u503c\u5f15\u7528\u7684\u8d4b\u503c\u8fd0\u7b97\u7b26\u51fd\u6570 \u6839\u636e\u8d4b\u503c\u8fd0\u7b97\u7b26\u53f3\u4fa7\u53d8\u91cf\u7684\u7c7b\u578b\u51b3\u5b9a\u8c03\u7528\u62f7\u8d1d\u6216\u79fb\u52a8\u8d4b\u503c\u8fd0\u7b97\u7b26\u51fd\u6570","title":"\u8c03\u7528\u65f6\u673a"},{"location":"languages/c-oop/reference-copy/#_20","text":"\u7c7b\u4e2d\u7279\u6b8a\u7684\u6210\u5458\u51fd\u6570\u3001\u8fd0\u7b97\u7b26\uff0c\u5373\u4fbf\u7528\u6237\u4e0d\u663e\u5f0f\u5b9a\u4e49\uff0c\u7f16\u8bd1\u5668\u4e5f\u4f1a\u6839\u636e\u81ea\u8eab\u9700\u8981\u81ea\u52a8\u5408\u6210\u3002 \u9ed8\u8ba4\u6784\u9020\u51fd\u6570 \u62f7\u8d1d\u6784\u9020\u51fd\u6570 \u79fb\u52a8\u6784\u9020\u51fd\u6570\uff08C++11 \u8d77\uff09 \u62f7\u8d1d\u8d4b\u503c\u8fd0\u7b97\u7b26 \u79fb\u52a8\u8d4b\u503c\u8fd0\u7b97\u7b26\uff08C++11 \u8d77\uff09 \u6790\u6784\u51fd\u6570","title":"\u81ea\u52a8\u5408\u6210\u7684\u51fd\u6570\u4e0e\u8fd0\u7b97\u7b26"},{"location":"languages/c-oop/reference-copy/#_21","text":"","title":"\u8fd4\u56de\u503c\u4f18\u5316"},{"location":"languages/c-oop/reference-copy/#_22","text":"return \u7684\u503c\u7c7b\u578b\u4e0e\u51fd\u6570\u524d\u9762\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u76f8\u540c\u3002 return \u7684\u662f\u4e00\u4e2a\u5c40\u90e8\u5bf9\u8c61\u7684\u5de6\u503c\u3002","title":"\u4f18\u5316\u6761\u4ef6"},{"location":"languages/c-oop/reference-copy/#_23","text":"\u5728\u7981\u7528\u8fd4\u56de\u503c\u4f18\u5316\u7684\u6761\u4ef6\u4e0b\uff0c\u5982\u679c\u4e00\u4e2a\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u67d0\u4e2a\u5bf9\u8c61\uff0c\u90a3\u5728\u51fd\u6570\u8fd4\u56de\u524d\u9700\u8981\u8c03\u7528\u6784\u9020\u51fd\u6570\u6784\u5efa\u8fd4\u56de\u503c\u3002 \u5373\u4f7f\u6211\u8fd4\u56de\u7684\u4e1c\u897f\u5c31\u662f\u6211\u4f20\u8fdb\u6765\u7684\u5f62\u53c2\u5bf9\u8c61\uff0c\u8fd4\u56de\u524d\u7684\u8fd9\u6b21\u6784\u9020\u4ecd\u7136\u4f1a\u53d1\u751f\u3002 \u4f46\u662f\u5bf9\u4e8e\u8fd4\u56de\u503c\u7684\u6784\u9020\u8c03\u7528\u7684\u5230\u5e95\u662f\u79fb\u52a8\u6784\u9020\u51fd\u6570\uff0c\u8fd8\u662f\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u5bf9\u6b64 C++11 \u6709\u89c4\u5b9a\uff1a\u5728\u65e0\u8fd4\u56de\u503c\u4f18\u5316\u7684\u60c5\u51b5\u4e0b\uff0c\u9ed8\u8ba4\u8c03\u7528\u79fb\u52a8\u6784\u9020\u51fd\u6570\u3002 \u7efc\u4e0a\u6240\u8ff0\uff0c\u8fd4\u56de\u4e00\u4e2a\u5c40\u90e8\u5bf9\u8c61\u7684\u5de6\u503c\uff0c\u901a\u8fc7\u79fb\u52a8\u6784\u9020\u6784\u9020\u8fd4\u56de\u503c\uff0c\u8fd4\u56de\u503c\u518d\u79fb\u52a8\u8d4b\u503c\u6216\u79fb\u52a8\u6784\u9020\u7ed9\u4e3b\u51fd\u6570\u8bed\u53e5\u3002","title":"\u4f18\u5316\u610f\u4e49"},{"location":"languages/c-oop/reference-copy/#_24","text":"\u5982\u679c\u5f00\u542f\u4e86\u8fd4\u56de\u503c\u4f18\u5316\uff0c\u90a3\u4e48\u5982\u679c\u6211\u7684\u51fd\u6570\u91cc\u65b0\u5b9a\u4e49\u4e86\u4e00\u4e2a Test \u5bf9\u8c61\u5e76\u8fd4\u56de\u3002\u90a3\u7f16\u8bd1\u5668\u4f1a\u7ed9\u6211\u4f18\u5316\uff0c\u5148\u7528\u6784\u9020\u51fd\u6570\u6784\u9020 tmp \uff0c\u7136\u540e\u76f4\u63a5\u8fd4\u56de tmp \u3002 \u8fd9\u91cc\u751a\u81f3\u4e0d\u4f1a\u8c03\u7528\u79fb\u52a8\u6784\u9020\uff0c\u4e5f\u5c31\u662f\u8bf4\u751a\u81f3\u4e0d\u662f\u7528 tmp \u79fb\u52a8\u6784\u9020\u4e86\u8981\u8fd4\u56de\u7684\u5bf9\u8c61\uff0c\u5c31\u662f\u76f4\u63a5\u8fd4\u56de\u3002 \u4f46\u5982\u679c\u6ca1\u6709\u5f00\u542f\u4f18\u5316\uff0c\u4f1a\u9996\u5148\u8c03\u7528\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u6784\u9020 tmp \uff0c\u7136\u540e\u8c03\u7528\u79fb\u52a8\u6784\u9020\u51fd\u6570\u5c06\u7528 tmp \u79fb\u52a8\u6784\u9020\u8fd4\u56de\u503c\u3002","title":"\u4f18\u5316\u5b9e\u4f8b"},{"location":"languages/c-oop/reference-copy/#_25","text":"\u5982\u679c\u8fd4\u56de\u503c\u662f\u666e\u901a\u7684 Test \u7684\u8bdd\uff0c\u90a3\u4e48\u51fd\u6570\u8fd4\u56de\u65f6\u9700\u8981\u6839\u636e return \u540e\u9762\u7684\u8868\u8fbe\u5f0f\u6765\u6784\u9020\u4e00\u4e2a Test \u5bf9\u8c61\uff0c\u6240\u4ee5\u624d\u6709\u79fb\u52a8\u6784\u9020\u6216\u8005\u62f7\u8d1d\u6784\u9020\u7684\u4e8b\u60c5\u3002 \u5982\u679c\u51fd\u6570\u8fd4\u56de\u7c7b\u578b\u662f const & \u6216\u8005 & \uff0c\u90a3 return \u7684\u65f6\u5019\u5c31\u6ca1\u5fc5\u8981\u518d\u6784\u9020\u65b0\u7684\u5bf9\u8c61\u4e86\uff0c\u76f4\u63a5\u8fd4\u56de\u76f8\u5e94\u7684\u5f15\u7528\u3002 1 2 3 4 5 6 7 8 9 10 const Test & F ( const Test & a ) { Test b = a ; return Test ( 1 ); } int main () { Test a ; const Test & A = F ( std :: move ( a )); return 0 ; } \u6bd4\u5982\u6b64\u5904\uff0c\u7531\u4e8e\u6211\u7684\u51fd\u6570\u8fd4\u56de\u7c7b\u578b\u4e3a\u5f15\u7528\uff0c\u6545\u800c\u76f4\u63a5\u8fd4\u56de\u4e86\u8fd4\u56de\u503c\u7684\u5f15\u7528\u3002\u4e5f\u5c31\u662f Test(1) \u7684\u5e38\u91cf\u5de6\u503c\u5f15\u7528\u3002\u4f46\u662f\uff0c\u5728\u51fd\u6570\u7ed3\u675f\u4e4b\u540e\uff0c\u8fd9\u4e2a\u5e38\u503c\u5f15\u7528\u6240\u5f15\u7528\u7684 Test(1) \u5c31\u88ab\u6790\u6784\u4e86\uff0c\u90a3\u8fd9\u4e2a\u5e38\u503c\u5f15\u7528\u5c31\u6ca1\u7528\u4e86\u3002 \u603b\u800c\u8a00\u4e4b\uff0c F \u7684\u8fd4\u56de\u7c7b\u578b\u662f\u4e00\u4e2a\u5e38\u91cf\u5de6\u503c\u5f15\u7528\uff0c\u800c\u8fd4\u56de\u503c\u662f Test(1) \u8fd9\u4e00\u4e34\u65f6\u53d8\u91cf\u3002\u4e34\u65f6\u53d8\u91cf\u4f1a\u5728\u51fd\u6570\u4f53\u7ed3\u675f\u540e\u88ab\u6790\u6784\uff0c\u4ece\u800c\u5f15\u7528\u5931\u6548\u3002\u6545\u800c\u4e0d\u80fd\u8fd4\u56de\u4e34\u65f6\u53d8\u91cf\u7684\u5f15\u7528\uff0c\u4ece\u800c\u7f16\u8bd1\u9519\u8bef\u3002 \u4e0d\u8fc7\uff0c Test(1) \u611f\u89c9\u53ea\u662f\u4e2a\u4e34\u65f6\u7684\u53f3\u503c\uff0c\u8fd9\u80fd\u79f0\u4e3a\u4e34\u65f6\u53d8\u91cf\u5417\uff1f\u5b9e\u9645\u4e0a\u662f\u53ef\u4ee5\u7684\uff0c\u5982\u679c\u53bb\u770b\u7f16\u8bd1\u5f97\u5230\u7684\u6c47\u7f16\u7801\uff0c return Test(1) \u548c\u5148 Test ret = Test(1) \u7136\u540e return ret \u751f\u6210\u7684\u6c47\u7f16\u7801\u662f\u4e00\u6837\u7684\u3002","title":"\u8fd4\u56de\u503c\u6784\u9020"},{"location":"languages/c-oop/reference-copy/#_26","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 #include <iostream> using namespace std ; class Test { public : int data = 0 ; Test () { } Test ( const Test & t ) { } Test ( Test && t ) { } }; Test fn1 () { Test tmp ; return tmp ; // (1) } Test && fn2 () { Test tmp ; return move ( tmp ); // (2) } Test fn3 () { Test tmp ; return move ( tmp ); // (3) } int main () { const Test & a = fn1 (); // (4) Test && b = fn1 (); // (5) Test c = fn1 (); // (6) Test && d = fn2 (); // (7) return 0 ; } \u5efa\u8bae\u505a\u6cd5\u5305\u62ec (1)(4)(5)(6) \uff0c\u907f\u514d\u591a\u4f59\u62f7\u8d1d\uff0c\u4f18\u5316\u8d44\u6e90\u5229\u7528\u3002 \u4e0d\u5efa\u8bae\u505a\u6cd5\u5305\u62ec (2)(3)(7) \u3002 (2)(7) \u4e2d d \u4f1a\u6307\u5411\u88ab\u6790\u6784\u7684 tmp \uff0c\u51fa\u73b0\u8fd0\u884c\u9519\u8bef\u3002 std::move() \u5c06\u5de6\u503c\u8f6c\u53d8\u4e3a\u53f3\u503c\uff0c\u4e0d\u8fdb\u884c\u8fd4\u56de\u503c\u4f18\u5316\uff0c (3) \u4f1a\u79fb\u52a8\u6784\u9020\u4e34\u65f6\u53d8\u91cf \u8fd9\u91cc\uff0c Test fn1() \u6ee1\u8db3\u8fd4\u56de\u503c\u4f18\u5316\u6761\u4ef6\u3002 \u53ef\u5229\u7528\u5e38\u91cf\u5de6\u503c\u5f15\u7528 (2) \uff0c\u53f3\u503c\u5f15\u7528 (5) \uff0c\u6784\u9020\u65b0\u5bf9\u8c61 (7) \u7684\u65b9\u5f0f\u63a5\u6536\u8fd4\u56de\u503c\u3002 \u5173\u4e8e (2)(7) \uff0c\u9996\u5148\u8bb0\u4f4f\uff0c\u5982\u679c\u8fd4\u56de\u5f15\u7528\uff0c\u53ea\u6709\u8fd4\u56de\u5e38\u91cf\u5c40\u90e8\u53d8\u91cf\u7684\u5de6\u503c\u5f15\u7528\u662f\u5408\u6cd5\u7684\uff0c\u5176\u4ed6\u7684\u90fd\u4e0d\u5408\u6cd5\u3002\u5373\u4f7f\u5728\u67d0\u4e9b\u7f16\u8bd1\u5668\u4e0a\u901a\u8fc7\u4e86\uff0c\u4e5f\u5f88\u5371\u9669\u3002\u5728\u8f83\u4e3a\u4e25\u683c\u7684\u7f16\u8bd1\u5668\u4e0a\u4e0d\u4e00\u5b9a\u80fd\u901a\u8fc7\u3002 1 int & func () { static int x = 0 ; return x ; } \u7528\u6b64\u5904 (2)(7) \u4e3e\u4f8b\uff0c (2)(7) \u7684\u610f\u601d\u662f\u8fd4\u56de\u4e86\u4e00\u4e2a\u53f3\u503c\u7684\u53f3\u503c\u5f15\u7528\uff0c\u628a\u8fd9\u4e2a\u53f3\u503c\u5f15\u7528\u7684\u8fd4\u56de\u503c\u8d4b\u503c\u7ed9\u4e86\u4e00\u4e2a\u53f3\u503c\u5f15\u7528\u3002 \u6211\u4eec\u5199\u51fa\u5982\u4e0b\u4e00\u4e2a\u7c7b\u4f3c\u7684\u4f8b\u5b50\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 #include <iostream> using namespace std ; int && func () { int tmp = 1 ; return std :: move ( tmp ); } int main () { int && x = func () + 1 ; cout << x ; return 0 ; } \u91c7\u7528 glot \u5e73\u53f0\u8fd0\u884c\uff0c\u8f93\u51fa 2 \u3002 \u91c7\u7528 retexter \u5e73\u53f0\u8fd0\u884c\uff0c\u7f16\u8bd1\u6307\u4ee4\u91c7\u7528 clang++ -Wall -std=c++14 -stdlib=libc++ -O2 -o a.out source_file.cpp \uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a\u5b8c\u5168\u4e0d\u786e\u5b9a\u7684\u6574\u6570\u3002\u867d\u7136\u76f4\u89c9\u4e0a\u53ef\u4ee5\u5b8c\u6210\u8d4b\u503c\uff0c\u4f46\u662f\u7531\u4e8e tmp \u4e0d\u662f\u9759\u6001\u5c40\u90e8\u53d8\u91cf\uff0c\u9010\u8bed\u53e5\u7ed3\u675f\u540e\u4f1a\u88ab\u6790\u6784\uff0c\u5bfc\u81f4 x \u5728\u8bbf\u95ee\u975e\u6cd5\u5185\u5b58\u3002 \u91c7\u7528 retexter \u5e73\u53f0\u8fd0\u884c\uff0c\u7f16\u8bd1\u6307\u4ee4\u91c7\u7528 g++ -Wall -std=c++14 -O2 -o a.out source_file.cpp \uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a 1 \uff0cwarning \u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 1944460822/source.cpp: In function 'int&& func()': 1944460822/source.cpp:5:25: warning: function returns address of local variable [-Wreturn-local-addr] return std::move(tmp); ^ 1944460822/source.cpp:4:9: note: declared here int tmp = 1; ^~~ 1944460822/source.cpp: In function \u2018int main()\u2019: 1944460822/source.cpp:8:19: warning: \u2018tmp\u2019 is used uninitialized in this function [-Wuninitialized] int&& x = func() + 1; ^ \u603b\u800c\u8a00\u4e4b\uff0c\u8fd4\u56de\u975e\u9759\u6001\u4e34\u65f6\u53d8\u91cf\u7684\u5f15\u7528\u98ce\u9669\u6781\u5927\u3002 \u5907\u6ce8\uff1a\u8fd9\u4e2a\u4f8b\u5b50\u672c\u8eab\u5e76\u4e0d\u592a\u597d\u3002\u5982\u679c\u5b9e\u5728\u60f3\u68c0\u6d4b\u8fd9\u6837\u7684\u51fd\u6570\uff0c\u4e0d\u5e94\u8be5\u7528 int \u7c7b\u578b\u3002\u56e0\u4e3a int \u662f\u7f16\u8bd1\u5668\u81ea\u5e26\u7684\u57fa\u672c\u7c7b\u578b\uff0c\u91c7\u7528\u8fc7\u591a\u7684\u4f18\u5316\uff0c\u6545\u800c glot \u8f93\u51fa 2 \u4e5f\u662f\u5408\u7406\u7684\u3002\u8fd9\u6837\u7684\u68c0\u6d4b\u6700\u597d\u4f7f\u7528\u81ea\u5b9a\u4e49\u7c7b\u578b\u5e76\u5b8c\u6574\u5730\u5b9a\u4e49\u6240\u6709\u7684\u6784\u9020\u3001\u6790\u6784\u3001\u62f7\u8d1d\u6784\u9020\u3001\u79fb\u52a8\u6784\u9020\u3001\u79fb\u52a8\u8d4b\u503c\u4e0e\u62f7\u8d1d\u8d4b\u503c\uff0c\u786e\u4fdd\u7f16\u8bd1\u5668\u4f18\u5316\u4e0d\u591a\u3002","title":"\u4f8b\u5b50"},{"location":"languages/c-oop/reference-copy/#delete","text":"","title":"delete \u4e0e\u68c0\u6d4b"},{"location":"languages/c-oop/reference-copy/#delete_1","text":"1 delete [] array ; // delete \u91ca\u653e\u6307\u9488\u6307\u5411\u7684\u5185\u5b58\u533a \u6545\u800c delete[] \u4e4b\u540e\uff0c\u5185\u5b58\u533a\u7684\u6570\u636e\u5c31\u6e05\u9664\u4e86\u3002 delete \u91ca\u653e\u7684\u662f\u6307\u9488\u6307\u5411\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u6307\u9488\u53d8\u91cf\u672c\u8eab\u4ecd\u7136\u5b58\u5728\u53ef\u4ee5\u4f7f\u7528\uff08\u7528\u4e8e\u8d4b\u503c\u7b49\uff09\u3002\u4f46\u662f\u8c03\u7528 array[i] \u4f1a\u4ea7\u751f\u8fd0\u884c\u65f6\u9519\u8bef segmentation fault\uff0c\u56e0\u4e3a\u5b83\u6ca1\u6709\u6307\u5411\u4e00\u5757\u5185\u5b58\u7a7a\u95f4\u7528\u4e8e\u5b58\u50a8\u6570\u636e\u3002 \u6e05\u9664\u4e0d\u7b49\u540c\u4e8e\u8bbe\u4e3a 0 \u3002\u800c\u4e14\u5b9e\u9645\u4e0a\uff0c\u5982\u679c delete[] \u4e4b\u540e\u8fd8\u628a array[i] \u8d4b\u503c\u4e3a 0 \uff0c\u4e0d\u4ec5\u6ca1\u6709\u610f\u4e49\uff08\u56e0\u4e3a\u5185\u5b58\u5df2\u7ecf\u88ab\u6e05\u9664\u4e86\uff09\uff0c\u800c\u4e14\u4f1a\u56e0\u4e3a\u8c03\u7528\u4e86\u591a\u6b21\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u800c\u6d6a\u8d39\u4e86\u6548\u7387\u3002\u6bd4\u5982\u4e0b\u9762\u8fd9\u4e2a\u5199\u6cd5\u7eaf\u5c5e\u6d6a\u8d39\u6548\u7387\uff0c\u8fd8\u6709\u9519\u8bef\u3002\u5728 delete[] array \u8bed\u53e5\u540e\uff0c\u5982\u679c\u60f3\u8fdb\u884c\u8d4b\u503c\u4e3a 0 \u7684\u64cd\u4f5c\uff0c array \u8981\u91cd\u65b0\u7533\u8bf7\u6307\u5411\u4e00\u5757\u5185\u5b58\u3002 1 2 3 4 5 6 Vector & Vector :: operator = ( const Vector & other ) { if ( this != & other ) { if ( this -> array != nullptr ) delete [] array ; for ( int i = 0 ; i < capacity ; i ++ ) array [ i ] = 0 ; } }","title":"delete \u7684\u610f\u4e49"},{"location":"languages/c-oop/reference-copy/#delete_2","text":"\u5efa\u8bae\u5728 delete \u524d\u68c0\u6d4b\u6307\u9488\u662f\u5426\u4e3a\u7a7a\u6307\u9488\uff0c\u56e0\u4e3a\u7a7a\u6307\u9488 delete \u4f1a\u62a5\u9519\u3002","title":"delete \u7684\u68c0\u6d4b"},{"location":"languages/c-oop/reference-copy/#_27","text":"\u548c delete \u76f8\u4f3c\uff0c\u5efa\u8bae\u8d4b\u503c\u4e5f\u8981\u5148\u8fdb\u884c\u68c0\u6d4b\uff0c\u907f\u514d\u6d6a\u8d39\u6548\u7387 1 2 3 4 5 Vector & Vector :: operator = ( const Vector & other ) { if ( this != & other ) // \u5efa\u8bae\u8d4b\u503c\u7684\u65f6\u5019\u68c0\u6d4b\u662f\u5426\u76f8\u540c\uff0c\u68c0\u6d4b\u7684\u539f\u7406\u672c\u8d28\u4e0a\u5c31\u662f\u68c0\u6d4b\u5730\u5740\u662f\u5426\u76f8\u540c if ( this -> array != nullptr ) delete [] array ; }","title":"\u8d4b\u503c\u7684\u68c0\u6d4b"},{"location":"languages/c-oop/reference-copy/#move","text":"","title":"move \u4e0e\u7c7b\u578b\u8f6c\u6362"},{"location":"languages/c-oop/reference-copy/#move_1","text":"move \u7684\u4f5c\u7528\u5c31\u662f\u4ec5\u4ec5\u628a\u5de6\u53f3\u503c\u8fd9\u4e2a\u5c5e\u6027\u6539\u4e3a\u53f3\u503c\uff0c\u5176\u4f59\u7684\u5c5e\u6027\u4e0d\u53d8\u3002","title":"move \u7684\u610f\u4e49"},{"location":"languages/c-oop/reference-copy/#_28","text":"1 2 3 4 5 6 7 8 9 Test F ( const Test & a ) { Test b = std :: move ( a ); return b ; } int main () { Test A = F ( 1 ); return 0 ; } \u8fd9\u4e2a\u5730\u65b9\u6781\u5176\u6709\u8da3\u7684\u662f F \u51fd\u6570\u4f53\u5185\u5bf9 b \u7684\u6784\u9020\u662f\u91c7\u7528\u4e86\u62f7\u8d1d\u6784\u9020\u800c\u975e\u79fb\u52a8\u6784\u9020\u3002 \u8fd9\u662f\u7531\u4e8e move \u548c const \u7684\u53cc\u91cd\u4f5c\u7528\u3002\u5982\u540c\u524d\u6587\u6240\u8ff0\uff0c move \u4e00\u5b9a\u53ef\u4ee5\u628a\u4efb\u610f\u5bf9\u8c61\u8c03\u6574\u4e3a\u53f3\u503c\uff0c\u4e0d\u7ba1\u662f\u4e0d\u662f const \u3002 \u6df1\u5c42\u6b21\u5730\u8bf4\uff0c\u53d8\u91cf\u50a8\u5b58\u5728\u5185\u5b58\u91cc\u7684\u65f6\u5019\u5b58\u7684\u90fd\u662f\u5b83\u7684\u6570\u636e\uff0c\u800c\u4e0d\u4f1a\u4e13\u95e8\u5f00\u8f9f\u4e00\u5757\u7a7a\u95f4\u6765\u8bf4\u660e\u5b83\u662f\u4e0d\u662f const \uff0c\u662f\u4e0d\u662f & \u7b49\uff0c const \u548c & \u8fd9\u4e9b\u201c\u7c7b\u578b\u201d\u662f\u7531\u7f16\u8bd1\u5668\u6765\u5904\u7406\u7684\u3002 \u6211\u4eec\u8bf4\u7c7b\u578b\u8f6c\u6362\uff0c\u6307\u7684\u5c31\u662f\u6539\u53d8\u7c7b\u578b\uff0c\u800c\u4e0d\u53d8\u52a8\u5b83\u5728\u5185\u5b58\u91cc\u7684\u50a8\u5b58\u5f62\u5f0f\u3002\u6bd4\u5982\u4e00\u4e2a\u6307\u9488\uff0c\u5b83\u5728\u5185\u5b58\u91cc\u5b58\u7684\u5c31\u662f\u4e00\u4e32\u6570\u5b57\u8868\u793a\u5730\u5740\uff0c\u6211\u4eec\u770b\u5b83\u7684\u5185\u5b58\u60c5\u51b5\u65f6\uff0c\u5b8c\u5168\u53ef\u4ee5\u628a\u8fd9\u5757\u5185\u5b58\u5f53\u505a\u5b58\u7684\u662f\u4e00\u4e2a\u6574\u578b\u53d8\u91cf\u3002\u6211\u4eec\u5f3a\u884c\u628a\u6307\u9488\u5f53\u505a\u6574\u578b\u53d8\u91cf\u6765\u770b\u7684\u65f6\u5019\u5c31\u662f\u8fdb\u884c\u4e86\u4e00\u4e2a\u7c7b\u578b\u8f6c\u6362\u3002 \u6240\u4ee5 std::move(a) \u8fd9\u4e2a\u8868\u8fbe\u5f0f\u7684\u7c7b\u578b\u5c31\u662f const&& \uff0c\u56e0\u4e3a\u5b83\u53d1\u751f\u4e86\u7c7b\u578b\u8f6c\u6362\u3002\u800c\u8f6c\u6362\u4e4b\u540e\uff0c a \u8f6c\u4e3a const&& \uff0c\u8fd9\u662f\u4e00\u4e2a\u5e38\u91cf\u53f3\u503c\u5f15\u7528\uff0cC++ \u56fa\u5b9a\u5176\u53ea\u80fd\u591f\u88ab const& \u7ed1\u5b9a\u3002\u6545\u800c\u5728\u6784\u9020\u51fd\u6570\u91cd\u8f7d\u7684\u60c5\u51b5\u4e0b\u8c03\u7528\u4e86\u76f8\u5e94 const& \u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002","title":"\u4f8b\u5b50"},{"location":"languages/c-oop/reference-copy/#_29","text":"\u8fd9\u5f20\u8868\u7ed9\u51fa\u4e86\u5173\u4e8e\u7ed1\u5b9a\u548c\u5de6\u53f3\u503c\u7684\u5173\u7cfb\u3002\u5de6\u8fb9\u7684\u4e00\u5217\u662f\u53c2\u6570\u7684\u5c5e\u6027\uff0clvalue \u662f\u6307\u5de6\u503c\uff0crvalue \u662f\u6307\u53f3\u503c\uff0cconst \u662f\u6307\u5e38\u91cf\u3002\u4e0a\u65b9\u4e00\u884c\u7ed9\u51fa\u4e86\u80fd\u591f\u7ed1\u5b9a\u7684\u7c7b\u578b\u3002\u800c\u8868\u4e2d\u7684\u6b21\u5e8f\u4ee3\u8868\u591a\u79cd\u7ed1\u5b9a\u65f6\u7684\u4f18\u5148\u7ea7\u3002\u4ece\u800c\u53ef\u89c1\uff0c\u5e38\u91cf\u53f3\u503c\u4f18\u5148\u5728\u6211\u4eec\u7684\u4e24\u4e2a\u6784\u9020\u51fd\u6570\u5f53\u4e2d\u53ea\u80fd\u7ed1\u5b9a const& \uff08\u56e0\u4e3a\u6ca1\u6709 const&& \u7c7b\u578b\u7684\u91cd\u8f7d\uff0c\u6545\u800c\u7ed1\u5b9a\u7684\u662f\uff09\uff0c\u4ece\u800c\u8c03\u7528\u4e86\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002","title":"\u8fdb\u4e00\u6b65\u8ba8\u8bba"},{"location":"languages/c-oop/reference-copy/#_30","text":"","title":"\u7f6e\u7a7a\u6027\u8ba8\u8bba"},{"location":"languages/c-oop/reference-copy/#_31","text":"\u6790\u6784\u51fd\u6570\u9700\u8981\u5c06\u6210\u5458\u6570\u636e\u4e2d\u7684\u6307\u9488\u6307\u5411\u7684\u5185\u5b58\u7a7a\u95f4\u7f6e\u7a7a\u3002 1 2 3 Vector ::~ Vector () { if ( array != nullptr ) delete [] array ; } \u4e0b\u6587\u4ee5 A = B \u4e3a\u4f8b\uff0c\u8ba8\u8bba\u8d4b\u503c\u8fc7\u7a0b\u4e2d\u7684\u7f6e\u7a7a\u6027\u3002","title":"\u6790\u6784\u7f6e\u7a7a"},{"location":"languages/c-oop/reference-copy/#_32","text":"\u6bcf\u6b21\u79fb\u52a8\u65f6\uff0c\u6211\u4eec\u5c06 B \u5b8c\u5168\u7f6e\u7a7a\u4f46\u662f\u4e0d delete \u3002 \u79fb\u52a8\u548c\u62f7\u8d1d\u7684\u8bed\u4e49\u533a\u522b \u79fb\u52a8\u548c\u62f7\u8d1d\u7684\u8bed\u4e49\u533a\u522b\u5728\u4e8e\uff0c\u88ab\u62f7\u8d1d\u7684\u5bf9\u8c61\u4e4b\u540e\u8fd8\u53ef\u80fd\u4f1a\u88ab\u4f7f\u7528\u7684\uff0c\u800c\u88ab\u79fb\u52a8\u7684\u5bf9\u8c61\u5fc5\u987b\u7f6e\u7a7a\uff08\u4f46\u4e0d\u662f delete \uff0c delete \u51fa\u73b0\u5728\u8d4b\u503c\u7f6e\u7a7a\u548c\u6790\u6784\u7f6e\u7a7a\u5f53\u4e2d\uff09\u3002\u56e0\u4e3a\u79fb\u52a8\u7684\u672c\u8d28\u539f\u7406\u662f\u628a\u5bf9\u540c\u4e00\u5757\u5185\u5b58\u7a7a\u95f4\u66f4\u6362\u4e3a\u65b0\u6307\u9488\uff0c\u5e76\u4e14\u5c06\u539f\u6307\u9488\u7f6e\u7a7a\u3002 \u79fb\u52a8\u548c\u62f7\u8d1d\u7684\u539f\u7406\u533a\u522b \u62f7\u8d1d\u7684\u539f\u7406 A \u4e0e B \u5404\u81ea\u6709\u4e00\u4e2a\u6307\u9488\uff0c\u5982\u679c A != B \u65f6\uff0c\u4e24\u4e2a\u6307\u9488\u6307\u5411\u4e24\u5757\u72ec\u7acb\u7684\u5185\u5b58\u7a7a\u95f4\uff08 A = B \u65f6\u65e0\u9700\u62f7\u8d1d\uff09\u3002\u73b0\u5c06 A \u5185\u5b58\u7a7a\u95f4\u91cc\u6240\u6709\u6570\u636e\u6e05\u9664\uff0c\u63a5\u7740\u628a B \u7684\u5185\u5b58\u7a7a\u95f4\u5185\u6240\u6709\u6570\u636e\u4f20\u9012\u7ed9 A \u7684\u5185\u5b58\u7a7a\u95f4\u3002\u8fd9\u4e00\u4f20\u9012\u8fc7\u7a0b\u4e0d\u4f1a\u7834\u574f B \u7684\u6570\u636e\uff0c\u4f46\u662f\u6548\u7387\u8f83\u4f4e\u3002 \u79fb\u52a8\u7684\u539f\u7406 A \u4e0e B \u5404\u81ea\u6709\u4e00\u4e2a\u6307\u9488\u3002\u5982\u679c A != B \u65f6\uff0c\u4e24\u4e2a\u6307\u9488\u6307\u5411\u4e24\u5757\u72ec\u7acb\u7684\u5185\u5b58\u7a7a\u95f4\uff08 A = B \u65f6\u65e0\u9700\u79fb\u52a8\uff09\u3002\u5982\u679c\u6b64\u65f6 A \u7684\u6307\u9488\u6307\u5411\u7684\u5185\u5b58\u7a7a\u95f4\u4e0d\u4e3a\u7a7a\uff0c\u4e5f\u5c31\u662f A \u6307\u9488\u4e0d\u4e3a\u7a7a\u6307\u9488\uff0c\u90a3\u4e48\u5c06 A \u7684\u6307\u9488\u6307\u5411\u7684\u5185\u5b58\u7a7a\u95f4\u901a\u8fc7 delete \u6e05\u9664\uff0c A \u6307\u9488\u5373\u8f6c\u4e3a\u7a7a\u6307\u9488\u3002\u5c06 B \u7684\u6307\u9488\u8d4b\u503c\u7ed9 A \u7684\u6307\u9488\uff0c\u5e76\u5c06 B \u6307\u9488\u7f6e\u4e3a\u7a7a\u6307\u9488\u3002\u8fd9\u4e00\u8fc7\u7a0b\u5b9e\u9645\u4e0a\u662f\u6539\u53d8\u4e86\u5185\u5b58\u7a7a\u95f4\u7684\u6307\u9488\u4f46\u662f\u6ca1\u6709\u6539\u53d8\u5185\u5b58\u7a7a\u95f4\u3002 \u79fb\u52a8\u8fc7\u7a0b\u4e2d B \u6307\u9488\u7f6e\u7a7a \u5728\u6790\u6784\u51fd\u6570\u91cc\uff0c\u6211\u4eec\u4f1a\u8c03\u7528 delete \u3002 \u5018\u82e5\u4e0d\u628a B \u6307\u9488\u7f6e\u7a7a\uff0c\u90a3\u4e48\u6211\u4eec\u4f1a\u6790\u6784 delete \u4e00\u6b21 B \u6307\u9488\u6307\u5411\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u7136\u800c A \u6307\u9488\u4e0d\u4e3a\u7a7a\u3002\u5728\u6790\u6784\u65f6\uff0c\u53c8\u5c06\u5bf9\u540c\u4e00\u4e2a\u5185\u5b58\u7a7a\u95f4 delete \u4e00\u6b21\u3002 delete \u7a7a\u7684\u7a7a\u95f4\u662f\u4e0d\u5141\u8bb8\u7684\u3002\u6545\u800c\u79fb\u52a8\u6784\u9020\u5fc5\u7136\u8981\u5c06B\u6307\u9488\u7f6e\u7a7a\u4ee5\u907f\u514d\u591a\u6b21 delete \u540c\u4e00\u7a7a\u95f4\u3002\u8fd9\u6837\u4e5f\u5bfc\u81f4\u4e86 B \u6307\u9488\u4e0d\u80fd\u518d\u6b21\u4f7f\u7528\uff08\u6574\u4e2a B \u65e0\u6cd5\u518d\u53bb\u8d4b\u503c\uff09\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u79fb\u52a8\u6784\u9020\u5fc5\u7136\u8981\u7834\u574f\u7528\u6765\u6784\u9020\u7684\u5bf9\u8c61\uff1a\u56e0\u4e3a\u4e0d\u80fd\u51fa\u73b0\u4e24\u4e2a\u6307\u9488\u6307\u5411\u540c\u4e00\u5757\u7a7a\u95f4\u7684\u60c5\u51b5\u3002 \u79fb\u52a8\u8fc7\u7a0b\u4e2d B \u5b8c\u5168\u7f6e\u7a7a \u6211\u4eec\u5728\u4e0a\u6587\u5df2\u7ecf\u53d9\u8ff0\u4e86\u4e3a\u4ec0\u4e48\u9700\u8981\u5c06 B \u6307\u9488\u7f6e\u7a7a\u3002\u5b9e\u9645\u4e0a\uff0c\u7531\u4e8e B \u5bf9\u8c61\u88ab\u79fb\u52a8\u4e4b\u540e\u5df2\u7ecf\u4e0d\u518d\u6b21\u4f7f\u7528\uff0c\u9700\u8981\u5c06\u5176\u5b8c\u5168\u7f6e\u7a7a\uff08\u6240\u6709\u7684\u6210\u5458\u6570\u636e\u90fd\u8981\u7f6e\u7a7a\uff0c\u800c\u4e0d\u53ea\u662f B \u91cc\u9762\u7684\u6307\u9488\u5bf9\u8c61\uff09\uff0c\u4ece\u800c\u907f\u514d\u5185\u5b58\u6cc4\u6f0f\u3002","title":"\u79fb\u52a8\u7f6e\u7a7a"},{"location":"languages/c-oop/reference-copy/#_33","text":"\u6bcf\u6b21\u8d4b\u503c\u65f6\uff0c\u6211\u4eec\u9700\u8981\u901a\u8fc7 delete \u5c06 A \u7f6e\u7a7a\u3002 \u62f7\u8d1d\u8d4b\u503c \u62f7\u8d1d\u8d4b\u503c\u65f6\uff0c\u68c0\u6d4b\u5b8c A == B \u540e\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528 delete \u5c06 A \u7f6e\u7a7a\u3002 \u8fd9\u91cc\u4e3a\u4ec0\u4e48\u8981\u5148\u6e05\u9664 A \u7684\u539f\u5185\u5b58\u7a7a\u95f4\uff1f \u9996\u5148\uff0c\u6211\u4eec\u7684\u79fb\u52a8\u8d4b\u503c\u9700\u8981\u4e8c\u8005\u8d4b\u503c\u5b8c\u540e\u5b8c\u5168\u76f8\u540c\uff0c\u5982\u679c A \u539f\u5185\u5b58\u7a7a\u95f4\u8d85\u51fa B \u7684\u90a3\u90e8\u5206\u5bb9\u79ef\u6709\u591a\u4e8e\u5185\u5bb9\uff0c\u4e0d\u6e05\u9664\u5c06 A \u5219\u65e0\u6cd5\u4f7f\u5f97 A \u4e0e B \u5b8c\u5168\u76f8\u540c\u3002\u5176\u6b21\uff0c\u4e0d\u6e05\u9664\u66f4\u5927\u7684\u95ee\u9898\u662f\u5185\u5b58\u6cc4\u9732\u4e25\u91cd\u3002 \u6ce8\u610f\u5230\u62f7\u8d1d\u8d4b\u503c\u73b0\u5c06 A \u7684\u5185\u5b58\u7a7a\u95f4 delete \u4e4b\u540e\uff0c A \u7684\u6307\u9488\u9700\u8981\u6307\u5411\u4e00\u5757\u5185\u5b58\u7a7a\u95f4\u624d\u80fd\u4f7f A \u63a5\u53d7 B \u7684\u62f7\u8d1d\u8d4b\u503c\u3002\u6545\u9700\u8981\u7533\u8bf7\u65b0\u7684\u5185\u5b58\u7a7a\u95f4\uff08\u4e0e B \u7684\u5185\u5b58\u7a7a\u95f4\u5927\u5c0f\u5b8c\u5168\u76f8\u540c\uff09\u3002 \u79fb\u52a8\u8d4b\u503c \u7efc\u5408\u524d\u6587\u6240\u8ff0\uff0c\u79fb\u52a8\u9700\u8981\u5c06 B \u5b8c\u5168\u7f6e\u7a7a\u4f46\u662f\u4e0d delete \uff0c\u800c\u8d4b\u503c\u9700\u8981\u5c06 A \u901a\u8fc7 delete \u7f6e\u7a7a\u4e4b\u540e\u518d\u6b21\u7533\u8bf7\u65b0\u7684\u7a7a\u95f4\u3002\u6240\u4ee5\u7528 B \u79fb\u52a8\u8d4b\u503c A \u7684\u65f6\u5019\u9700\u8981\u4e24\u6b21\u7f6e\u7a7a\uff0c\u4e00\u6b21 delete \uff08\u5bf9 A \u7684\uff09\u800c\u53e6\u4e00\u6b21\u4e0d delete \uff08\u5bf9 B \u7684\uff09\u3002","title":"\u8d4b\u503c\u7f6e\u7a7a"},{"location":"languages/c-oop/reference-copy/#_34","text":"","title":"\u7c7b\u578b\u8f6c\u6362"},{"location":"languages/c-oop/reference-copy/#_35","text":"\u5f53\u7f16\u8bd1\u5668\u53d1\u73b0\u8868\u8fbe\u5f0f\u548c\u51fd\u6570\u8c03\u7528\u6240\u9700\u7684\u6570\u636e\u7c7b\u578b\u548c\u5b9e\u9645\u7c7b\u578b\u4e0d\u540c\u65f6\uff0c\u4fbf\u4f1a\u8fdb\u884c\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362\u3002 \u81ea\u52a8\u7c7b\u578b\u8f6c\u6362\u53ef\u901a\u8fc7\u5b9a\u4e49\u7279\u5b9a\u7684 \u8f6c\u6362\u8fd0\u7b97\u7b26 \u548c \u6784\u9020\u51fd\u6570 \u6765\u5b8c\u6210\u3002 \u9664\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362\u5916\uff0c\u5728\u6709\u5fc5\u8981\u7684\u65f6\u5019\u8fd8\u53ef\u4ee5\u8fdb\u884c\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u3002 1 2 3 4 5 6 void print ( int d ) { } int main () { print ( 3.5 ); print ( 'c' ); return 0 ; }","title":"\u610f\u4e49"},{"location":"languages/c-oop/reference-copy/#_36","text":"\u65b9\u6cd5\u4e00\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 #include <iostream> using namespace std ; class Dst { public : Dst () { cout << \"Dst::Dst()\" << endl ; } }; class Src { public : Src () { cout << \"Src::Src()\" << endl ; } operator Dst () const { cout << \"Src::operator Dst() called\" << endl ; return Dst (); } }; \u5373\u5728\u6e90\u7c7b\u4e2d\u5b9a\u4e49\u201c\u6e90\u7c7b\u4e2d\u91cd\u8f7d\u76ee\u6807\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\u201d\u3002 \u6ce8\u610f\uff1a\u4e0d\u9700\u8981\u6307\u5b9a\u8fd4\u56de\u7c7b\u578b\uff0c\u56e0\u4e3a operator \u540e Dst() \u5df2\u7ecf\u6307\u660e\uff0c\u8fd4\u56de\u503c\u662f Dst() \uff0c\u8fd4\u56de\u51fd\u6570\u540d\u6545\u800c\u4e0d\u9700\u8981\u8fd4\u56de\u7c7b\u578b\u3002\u8fd9\u662f\u7c7b\u578b\u8f6c\u6362\u7684\u56fa\u5b9a\u8bed\u6cd5\uff0c\u5982\u540c\u6784\u9020\u51fd\u6570\u4e0d\u9700\u8981\u5c31\u597d\u3002 \u65b9\u6cd5\u4e8c\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #include <iostream> using namespace std ; class Src ; // \u524d\u7f6e\u7c7b\u578b\u58f0\u660e\uff0c\u56e0\u4e3a\u5728 Dst \u4e2d\u8981\u7528\u5230 Src \u7c7b class Dst { public : Dst () { cout << \"Dst::Dst()\" << endl ; } Dst ( const Src & s ) { cout << \"Dst::Dst(const Src&)\" << endl ; } }; class Src { public : Src () { cout << \"Src::Src()\" << endl ; } }; \u5373\u5728\u76ee\u6807\u7c7b\u4e2d\u5b9a\u4e49\u201c\u76ee\u6807\u7c7b\u4e2d\u5b9a\u4e49\u6e90\u7c7b\u5bf9\u8c61\u4f5c\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\u201d\u3002 \u4e24\u79cd\u65b9\u6cd5\u4efb\u9009\u4e00\u79cd\u5373\u53ef\u8fd0\u884c\u3002\u4f46\u662f\u4e00\u5b9a\u8981\u6ce8\u610f\u533a\u5206\u4e24\u79cd\u8f6c\u6362\u65b9\u5f0f\uff0c\u5982\u679c\u6ca1\u6709\u505a\u533a\u5206\uff0c\u5e38\u5e38\u4f1a\u5bfc\u81f4\u8f6c\u6362\u65b9\u5411\u9519\u8bef\u3002\u6b64\u5916\uff0c\u4e24\u79cd\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362\u7684\u65b9\u6cd5\u4e0d\u80fd\u540c\u65f6\u4f7f\u7528\uff0c\u4f7f\u7528\u65f6\u5fc5\u987b\u4efb\u9009\u5176\u4e2d\u4e00\u79cd\u3002","title":"\u8bed\u6cd5"},{"location":"languages/c-oop/reference-copy/#_37","text":"\u7b2c\u4e00\u4f8b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 #include <iostream> using namespace std ; class Dst { public : Dst () { cout << \"Dst::Dst()\" << endl ; } }; class Src { public : Src () { cout << \"Src::Src()\" << endl ; } operator Dst () const { cout << \"Src::operator Dst() called\" << endl ; return Dst (); } }; void Transform ( Dst d ) { } int main () { Src s ; Dst d1 ( s ); Dst d2 = s ; Transform ( s ); return 0 ; } /* Src::Src() Src::operator Dst() called Dst::Dst() Src::operator Dst() called Dst::Dst() Src::operator Dst() called Dst::Dst() */ \u6ce8\u610f\u5230\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u5e76\u4e0d\u4f1a\u53d1\u751f\u7c7b\u4f3c\u5207\u7247\u7684\u6548\u679c\uff0c\u53ea\u662f\u7528\u67d0\u4e00\u4e2a\u7c7b\u578b\u751f\u6210\u4e86\u53e6\u4e00\u7c7b\u578b\u800c\u5df2\u3002\u8fd9\u91cc\u4e3b\u51fd\u6570\u5185 Dst d2 = s \u7b49\u4ef7\u4e8e Dst d2(s) \uff0c\u800c void Transform(Dst d) \u8c03\u7528\u7684\u53c2\u6570\u672c\u8be5\u662f Dst \u7c7b\u578b\uff0c\u7531\u4e8e\u5b9a\u4e49\u4e86\u4ece s \u5230 Dst \u7684\u7c7b\u578b\u8f6c\u6362\uff0c\u6545\u800c\u4e5f\u53ef\u4ee5\u6267\u884c\uff0c\u5e76\u8fdb\u884c\u4e86\u8f6c\u6362\u3002 \u73b0\u5728\uff0c\u5c1d\u8bd5\u5bfb\u627e\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef 1 2 3 4 5 6 7 8 class SmallInt ; operator int ( SmallInt & ); // \u9519\u8bef\uff1a\u7c7b\u578b\u8f6c\u6362\u7b26\u5fc5\u987b\u662f\u6210\u5458\u51fd\u6570 class SmallInt { public : int operator int () const ; // \u9519\u8bef\uff1a\u7c7b\u578b\u8f6c\u6362\u7b26\u4e0d\u80fd\u6807\u8bb0\u8fd4\u56de\u7c7b\u578b operator int ( int = 0 ) const ; // \u9519\u8bef\uff1a\u5728\u6e90\u7c7b\u4e2d\u5b9a\u4e49\u76ee\u6807\u7c7b\u7684\u91cd\u8f7d\u8fd0\u7b97\u7b26\u9700\u8981\u53c2\u6570\u5217\u8868\u4e3a\u7a7a operator int * () const { return 42 ; } // \u9519\u8bef\uff1a42 \u4e0d\u662f\u4e00\u4e2a\u5408\u6cd5\u6307\u9488 }; \u53e6\u5916\u4e00\u4f8b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 #include <iostream> using namespace std ; class SmallInt { public : SmallInt ( int i = 0 ) : val ( i ) { cout << \"SmallInt_Init\" << endl ; } operator int () const { cout << \"Int_Transform\" << endl ; return val ; } void print () { cout << val << endl ; } private : size_t val ; }; int main () { SmallInt si ; si . print (); si = 4.10 ; si . print (); si = si + 3 ; si . print (); return 0 ; } /* output: SmallInt_Init 0 SmallInt_Init 4 Int_Transform SmallInt_Init 7 */ \u9996\u5148\uff0c\u8fd9\u91cc\u5b9a\u4e49\u7684 val \u662f size_t \u7c7b\u578b\u3002\u5b83\u662f\u4e00\u79cd\u201c\u6574\u578b\u201d\u7c7b\u578b\uff0c\u91cc\u9762\u4fdd\u5b58\u7684\u662f\u4e00\u4e2a\u6574\u6570\uff0c\u5c31\u50cf int \u3001 long \u4e00\u6837\u3002\u8fd9\u79cd\u6574\u6570\u7528\u6765\u8bb0\u5f55\u4e00\u4e2a\u5927\u5c0f\u3002 size_t \u7684\u5168\u79f0\u5e94\u8be5\u662f size type \uff0c\u5c31\u662f\u8bf4\u201c\u4e00\u79cd\u7528\u6765\u8bb0\u5f55\u5927\u5c0f\u7684\u6570\u636e\u7c7b\u578b\u201d\u3002\u901a\u5e38\u6211\u4eec\u7528 sizeof() \u64cd\u4f5c\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u6240\u5f97\u5230\u7684\u7ed3\u679c\u5c31\u662f size_t \u7c7b\u578b\u3002\u56e0\u4e3a size_t \u7c7b\u578b\u7684\u6570\u636e\u5176\u5b9e\u662f\u4fdd\u5b58\u4e86\u4e00\u4e2a\u6574\u6570\uff0c\u6240\u4ee5\u5b83\u4e5f\u53ef\u4ee5\u505a\u52a0\u51cf\u4e58\u9664\uff0c\u4e5f\u53ef\u4ee5\u8f6c\u5316\u4e3a int \u5e76\u8d4b\u503c\u7ed9 int \u7c7b\u578b\u7684\u53d8\u91cf\u3002 \u6ce8\u610f\u7b2c\u4e8c\u4e2a SmallInt_Init \u51fa\u73b0\u5728 si = 4.10 \uff0c\u9996\u5148\u5185\u7f6e\u7c7b\u578b\u8f6c\u6362\u5c06 double \u8f6c\u6362\u4e3a int \uff0c\u7136\u540e\u8c03\u7528\u6784\u9020\u51fd\u6570\u6784\u9020\u4e86\u4ee5 (int)4 \u4e3a\u53c2\u6570\u7684 SmallInt(4) \uff0c\u9690\u5f0f\u5730\u5c06 4 \u8f6c\u6362\u6210 SmallInt \u7c7b\u578b\u3002\u4e4b\u540e\u628a\u8fd9\u4e2a SmallInt(4) \u8d4b\u503c\u7ed9 si \uff0c\u7cfb\u7edf\u81ea\u52a8\u751f\u6210\u4e86 SmallInt \u7684\u8d4b\u503c\u8fd0\u7b97\u7b26\u91cd\u8f7d\u3002 si = si + 3 \u8bed\u53e5\u4e2d\u9996\u5148\u6267\u884c si + 3 \uff0c\u4e4b\u540e\u6267\u884c\u8d4b\u503c\u8bed\u53e5\u3002 \u8fd9\u53ef\u80fd\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\u60c5\u51b5\u4e00\uff0c\u628a si \u8f6c\u4e3a int \uff0c\u7136\u540e\u6267\u884c int \u7684\u52a0\u6cd5\uff0c\u5f97\u5230 7 \uff1b\u5f97\u5230 7 \u4e4b\u540e\u7684\u6b65\u9aa4\u5373\u4e3a\u8d4b\u503c\u8bed\u53e5 si = 7 \uff0c\u548c\u4e0a\u65b9\u7684 si = 4 \u7c7b\u4f3c\u3002\u8c03\u7528\u6784\u9020\u51fd\u6570\u6784\u9020\u4e86\u4ee5 (int)7 \u4e3a\u53c2\u6570\u7684 SmallInt(7) \uff0c\u9690\u5f0f\u5730\u5c06 7 \u8f6c\u6362\u6210 SmallInt \u7c7b\u578b\uff0c\u4e4b\u540e\u518d\u8c03\u7528\u7f16\u8bd1\u5668\u81ea\u52a8\u751f\u6210\u7684\u8d4b\u503c\u8fd0\u7b97\u7b26\u91cd\u8f7d\u3002\u60c5\u51b5\u4e8c\uff0c\u628a 3 \u8f6c\u4e3a SmallInt \u518d\u548c si \u76f8\u52a0\u3002\u8fd9\u5c31\u6709\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u6ca1\u6709\u663e\u5f0f\u5730\u91cd\u8f7d SmallInt \u7684 + \u8fd0\u7b97\u7b26\uff0c\u6545\u800c\u65e0\u6cd5\u8fd9\u4e2a\u8f6c\u6362\u5373\u662f\u5b8c\u6210\u4e86\uff0c\u4e5f\u65e0\u6cd5\u7ee7\u7eed\u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u5982\u679c\u6211\u4eec\u5728\u6b64\u57fa\u7840\u4e0a\u91cd\u8f7d\u4e86 SmallInt \u7684 + \u8fd0\u7b97\u7b26\uff0c\u6211\u4eec\u4e0d\u4ec5\u6709 SmallInt \u8f6c\u4e3a int \u7136\u540e\u4e24\u4e2a int \u76f8\u52a0\u518d\u6784\u9020 SmallInt(7) \u518d\u8d4b\u503c\u8fd9\u6761\u8def\uff0c\u540c\u65f6\u8fd8\u6709 3 \u5229\u7528\u6784\u9020\u51fd\u6570\u9690\u5f0f\u8f6c\u4e3a SmallInt \u4e4b\u540e\u4e24\u4e2a SmallInt \u76f8\u52a0\uff0c\u518d\u8d4b\u503c\u7ed9 si \u8fd9\u6761\u8def\u3002\u4f1a\u51fa\u73b0\u8def\u5f84\u6b67\u4e49\u800c\u7f16\u8bd1\u9519\u8bef\u3002\u5982\u4f55\u53ea\u8fdb\u884c\u7b2c\u4e8c\u6761\u8def\uff0c\u6211\u4eec\u901a\u8fc7\u4e0b\u4e00\u4f8b\u6765\u5b9e\u73b0\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 #include <iostream> using namespace std ; class SmallInt { public : SmallInt ( int i = 0 ) : val ( i ) { cout << \"SmallInt_Init\" << endl ; } SmallInt & operator = ( const SmallInt & src ) { if ( this == & src ) return * this ; cout << \"operator=\" << endl ; this -> val = src . val ; return * this ; } SmallInt operator + ( const SmallInt & b ) { cout << \"operator+\" << endl ; return SmallInt ( this -> val + b . val ); } private : size_t val ; }; int main () { SmallInt si ; si = 4.10 ; si = si + 3 ; return 0 ; } /* output: SmallInt_Init SmallInt_Init operator= SmallInt_Init operator+ SmallInt_Init operator= */ \u8fd9\u4e00\u4f8b\u5b50\u9a8c\u8bc1\u4e86\u4e4b\u524d\u7684\u7406\u89e3\u3002\u6211\u4eec\u6709\u4e86 si = SmallInt(4) \u5bf9\u5e94\u7684 = \u62f7\u8d1d\u8d4b\u503c\u8fd0\u7b97\u7b26\u91cd\u8f7d\u7684\u8f93\u51fa\u3002\u5728 si = si + 3 \u8fd9\u4e00\u6b65\uff0c\u9996\u5148\u628a 3 \u8f6c\u4e3a\u4e86 SmallInt(3) \uff0c\u63a5\u7740\u5229\u7528\u4e86 operator+ \u3002\u6ce8\u610f\u5230 operator+ \u7684\u8fd4\u56de\u503c\u518d\u6b21\u8c03\u7528\u4e86\u6784\u9020\u51fd\u6570\uff0c\u63a5\u7740\u628a\u8fd4\u56de\u503c\u62f7\u8d1d\u8d4b\u503c\u7ed9 si \u3002 \u4f46\u662f\u8fd9\u662f\u5982\u4f55\u907f\u514d\u4e86\u8def\u5f84\u6b67\u4e49\u5462\uff1f\u6ce8\u610f\u5230\u6211\u4eec\u5220\u9664\u4e86\u4ece SmallInt \u8f6c\u4e3a int \u7684\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\uff0c\u6545\u800c\u6ca1\u6709\u8def\u5f84\u4e00\uff0c\u53ea\u6709\u8def\u5f84\u4e8c\u3002","title":"\u4f8b\u5b50"},{"location":"languages/c-oop/reference-copy/#_38","text":"\u5982\u679c\u7528 explicit \u4fee\u9970\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\u6216\u7c7b\u578b\u8f6c\u6362\u6784\u9020\u51fd\u6570\uff0c\u5219\u76f8\u5e94\u7684\u7c7b\u578b\u8f6c\u6362\u5fc5\u987b\u663e\u5f0f\u5730\u8fdb\u884c\u3002\u4f8b\u5982\uff1a 1 2 explicit operator Dst () const ; explicit Dst ( const Src & s ); \u5982\u679c\u4f7f\u7528 explicit \uff0c\u90a3\u4e48\uff1a 1 2 3 4 5 int main () { Src s ; Dst d1 ( s ); // \u53ef\u4ee5\u6267\u884c\uff0c\u88ab\u8ba4\u4e3a\u662f\u663e\u5f0f\u521d\u59cb\u5316 return 0 ; }","title":"\u7981\u6b62\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362"},{"location":"languages/c-oop/reference-copy/#_39","text":"const_cast \uff0c\u53bb\u9664\u7c7b\u578b\u7684 const \u6216 volatile \u5c5e\u6027\u3002 static_cast \uff0c\u7c7b\u4f3c\u4e8e C \u98ce\u683c\u7684\u5f3a\u5236\u8f6c\u6362\u3002\u65e0\u6761\u4ef6\u8f6c\u6362\uff0c\u9759\u6001\u7c7b\u578b\u8f6c\u6362\u3002 dynamic_cast \uff0c\u52a8\u6001\u7c7b\u578b\u8f6c\u6362\uff0c\u5982\u6d3e\u751f\u7c7b\u548c\u57fa\u7c7b\u4e4b\u95f4\u7684\u591a\u6001\u7c7b\u578b\u8f6c\u6362\u3002 reinterpret_cast \uff0c\u4ec5\u4ec5\u91cd\u65b0\u89e3\u91ca\u7c7b\u578b\uff0c\u4f46\u6ca1\u6709\u8fdb\u884c\u4e8c\u8fdb\u5236\u7684\u8f6c\u6362\u3002 \u4e4b\u524d\u7684\u4f8b\u5b50\u53ef\u4ee5\u91cd\u5199\u4e3a\uff1a 1 2 3 4 5 int main () { Src s ; Dst d2 = static_cast < Dst > ( s ); return 0 ; }","title":"\u56db\u7c7b\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362"},{"location":"languages/c-oop/stl-and-string/","text":"STL \u548c\u5b57\u7b26\u4e32\u5904\u7406 \u00b6 string \u5b57\u7b26\u4e32\u7c7b \u00b6 STL \u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u65b9\u4fbf\u7684 string \u7c7b\u578b\uff1a \u5141\u8bb8\u7b80\u6d01\u7684\u62fc\u63a5\u64cd\u4f5c 1 string fullname = firstname + \" \" + lastname ; \u4e5f\u80fd\u591f\u4f7f\u7528\u60ef\u7528\u7684\u8f93\u5165\u8f93\u51fa\u65b9\u6cd5 1 std :: cout << fullname << std :: endl ; \u6784\u9020\u65b9\u5f0f 1 2 3 4 5 6 7 string s0 ( \"Initial string\" ); // \u4ece C \u98ce\u683c\u5b57\u7b26\u4e32\u6784\u9020 string s1 ; // \u9ed8\u8ba4\u7a7a\u5b57\u7b26\u4e32 string s2 ( s0 , 8 , 3 ); // \u622a\u53d6\uff0cindex \u4ece 8 \u5f00\u59cb\uff0c\u957f\u5ea6\u4e3a 3 string s3 ( \"Another character sequence\" , 12 ); // \u622a\u53d6 string s4 ( 10 , 'x' ); // \u590d\u5236\u5b57\u7b26 string s5 ( s0 . begin (), s0 . begin () + 7 ); // \u590d\u5236\u622a\u53d6 str . c_str (); // \u8f6c\u6362\u4e3a C \u98ce\u683c\u5b57\u7b26\u4e32 \u8fed\u4ee3\u5668 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // \u65b9\u5f0f\u4e00 #include <string> #include <iostream> int main () { std :: string sample = \"Kanashi koto wa kitto owaru darou\" ; for ( auto it = sample . begin (); it != sample . end (); it ++ ) { std :: cout << * it << std :: endl ; } return 0 ; } // \u65b9\u5f0f\u4e8c for ( char c : sample ) { std :: cout << c << std :: endl ; } \u5e38\u89c1\u51fd\u6570 1 2 3 4 5 6 7 8 9 10 11 12 cout << str [ 1 ]; // \u8bbf\u95ee\u5143\u7d20 str [ 1 ] = 'a' ; // \u4fee\u6539\u5143\u7d20 str . size () // \u67e5\u8be2\u957f\u5ea6 str . clear () // \u6e05\u7a7a str . empty () // \u67e5\u8be2\u662f\u5426\u4e3a\u7a7a str . push_back ( 'a' ); str . append ( s2 ); // \u5411\u5c3e\u90e8\u589e\u52a0 // \u76f4\u63a5\u6309\u7167\u5b57\u5178\u5e8f\u6765\u6bd4\u8f83 string a = \"alice\" , b = \"bob\" ; a == b // false a < b // true \u7c7b\u578b\u8f6c\u6362 1 2 3 4 5 6 7 8 9 10 11 12 13 // \u6570\u503c\u7c7b\u578b\u5b57\u7b26\u4e32\u5316 to_string ( 1 ); // \"1\" to_string ( 3.14 ); // \"3.14\" to_string ( 3.1415926 ); // \"3.141593\"\uff0c\u6ce8\u610f\u7cbe\u5ea6\u635f\u5931 to_string ( 1 + 2 + 3 ); // \"6\" // \u5b57\u7b26\u4e32\u8f6c\u6570\u503c\u7c7b\u578b int a = stoi ( \"2001\" ); // a = 2001 std :: string :: size_type sz ; // size_t alias int b = stoi ( \"50 cats\" , & sz ); // b = 50 sz = 2 int c = stoi ( \"40c3\" , nullptr , 16 ); // c = 0x40c3\uff0c\u5341\u516d\u8fdb\u5236 int d = stoi ( \"0x7f\" , nullptr , 0 ); // d = 0x7f\uff0c\u81ea\u52a8\u68c0\u67e5\u8fdb\u5236 double e = stod ( \"34.5\" ); // e = 34.5 std::string \u548c std::vector<char> \u7684\u533a\u522b string \u53ef\u4ee5 length() \u6216\u8005 size() \u6765\u83b7\u53d6\u957f\u5ea6\uff0c\u4f46\u662f vector \u53ea\u6709 size() \u51fd\u6570\u3002 string \u53ef\u4ee5\u901a\u8fc7 cin >> str \u4ece\u6807\u51c6\u8f93\u5165\u8f93\u5165\u5b57\u7b26\u4e32\u3002 string \u53ef\u4ee5\u901a\u8fc7 str += \"abc\" \u5411\u5b57\u7b26\u4e32\u5c3e\u90e8\u6dfb\u52a0\u5b57\u7b26\u3002 \u90fd\u53ef\u4ee5\u4f7f\u7528 for (char c: str) \u904d\u5386\u5b57\u7b26\u4e32\u4e2d\u7684\u6240\u6709\u5b57\u7b26\u3002 iostream \u8f93\u5165\u8f93\u51fa\u6d41 \u00b6 1 2 3 4 5 6 cout << str << endl ; cin >> str ; ostream & operator << ( ostream & out , const Test & src ) { out << src . id << endl ; return out ; } \u57fa\u7c7b\uff1a istream \u548c ostream \uff0c\u800c iostream \u662f\u6d3e\u751f\u7c7b\u3002 cin \u3001 cout \u662f\u5177\u4f53\u7684\u5bf9\u8c61\u3002 ifstream \u3001 ofstream \u3001 fstream \u90fd\u662f\u9762\u5411\u6587\u4ef6\u7684\u8f93\u5165\u8f93\u51fa\u6d41\u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5b57\u7b26\u4e32\u6765\u5b9a\u4e49\u4ea4\u4e92\u65b9\u5f0f\uff0c\u6bd4\u5982 sstream \u3002 ostream \u5373 output stream\uff0c\u662f STL \u5e93\u4e2d\u6240\u6709\u8f93\u51fa\u6d41\u7684\u57fa\u7c7b \u5b83\u91cd\u8f7d\u4e86\u9488\u5bf9\u57fa\u7840\u7c7b\u578b\u7684\u8f93\u51fa\u6d41\u8fd0\u7b97\u7b26\uff0c\u63a5\u53d7\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\uff0c\u518d\u8c03\u7528\u7cfb\u7edf\u51fd\u6570\u8fdb\u884c\u8f93\u51fa\u3002\u7edf\u4e00\u4e86\u8f93\u51fa\u63a5\u53e3\uff0c\u6539\u5584\u4e86 C \u4e2d\u8f93\u51fa\u65b9\u5f0f\u6df7\u4e71\u7684\u72b6\u51b5\uff0c\u6bd4\u5982 C \u4e2d\u9700\u8981\u7528\u6237\u5173\u5fc3\u975e\u5e38\u591a\u7684\u5185\u5bb9\uff0c\u624b\u52a8\u8bbe\u7f6e\u8f93\u51fa\u7c7b\u578b\uff0c\u5e38\u5e38\u51fa\u9519\u3002 1 printf ( \"%d %f %s\" , 1 , 2.3 , \"hello\" ); cout \u662f STL \u4e2d\u5185\u5efa\u7684\u4e00\u4e2a ostream \u5bf9\u8c61\uff0c\u5b83\u4f1a\u5c06\u6570\u636e\u9001\u5230\u6807\u51c6\u8f93\u51fa\u6d41\uff08\u4e00\u822c\u662f\u5c4f\u5e55\uff09\u3002 1 2 3 4 5 6 7 8 9 10 11 12 class ostream { public : ostream & operator << ( char c ) { printf ( \"%c\" , c ); return * this ; } ostream & operator << ( const char * str ) { printf ( \"%s\" , str ); return * this ; } } cout ; \u8bed\u53e5 cout << \"hello\" << ' ' << \"world\" \u5148\u6267\u884c cout << \"hello\" \u8c03\u7528\u7b2c\u4e8c\u4e2a\u51fd\u6570\uff0c\u8fd4\u56de c1 \uff08 cout \u7684\u5f15\u7528\uff09\u3002\u518d\u6267\u884c c1 << ' ' \u8c03\u7528\u7b2c\u4e00\u4e2a\u51fd\u6570\uff0c\u8fd4\u56de c2 \uff08 cout \u7684\u5f15\u7528\uff09\u3002\u6700\u540e\u6267\u884c c2 << \"world\" \u8c03\u7528\u7b2c\u4e8c\u4e2a\u51fd\u6570\u3002 \u683c\u5f0f\u5316\u8f93\u51fa \u00b6 1 2 3 4 5 6 7 8 #include <iomanip> cout << fixed << 2018.0 << \" \" << 0.0001 << endl ; // \u56fa\u5b9a\u5c0f\u6570\u4f4d\u6570 cout << scientific << 2018.0 << \" \" << 0.0001 << endl ; // \u79d1\u5b66\u8ba1\u6570\u6cd5 cout << defaultfloat ; // \u8fd8\u539f\u9ed8\u8ba4\u8f93\u51fa\u683c\u5f0f cout << setprecision ( 2 ) << 3.1415926 << endl ; // \u8f93\u51fa\u7cbe\u5ea6\u8bbe\u7f6e\u4e3a 2 cout << oct << 12 << \" \" << hex << 12 << endl ; // \u516b\u8fdb\u5236\u8f93\u51fa\u4e0e\u5341\u516d\u8fdb\u5236\u8f93\u51fa cout << dec ; // \u8fd8\u539f\u5341\u8fdb\u5236 cout << setw ( 3 ) << setfill ( '*' ) << 5 << endl ; // \u8bbe\u7f6e\u5bf9\u9f50\u957f\u5ea6\u4e3a 3\uff0c\u5bf9\u9f50\u5b57\u7b26\u4e3a * \u81ea\u5df1\u5b9e\u73b0\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 class setprecision { private : int precision ; public : setprecision ( int p ) : precision ( p ) { } friend class ostream ; }; // \u51fd\u6570\u7c7b class ostream { private : int precision ; // \u8bb0\u5f55\u6d41\u7684\u72b6\u6001 public : ostream & operator << ( const setprecision & m ) { precision = m . precision ; return * this ; } } cout ; cout << setprecision ( 2 ); \u501f\u52a9\u8f85\u52a9\u7c7b\uff0c\u8bbe\u7f6e\u6210\u5458\u53d8\u91cf\u3002\u8fd9\u79cd\u7c7b\u53eb\u6d41\u64cd\u7eb5\u7b97\u5b50\u3002 \u4e3a\u4ec0\u4e48\u91cd\u8f7d\u6d41\u8fd0\u7b97\u7b26\u8981\u8fd4\u56de\u5f15\u7528\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u8fd4\u56de cout \uff1f \u59cb\u7ec8\u5728\u7528\u540c\u4e00\u4e2a\u8f93\u51fa\u6d41\u5bf9\u8c61 cout \uff0c\u6ca1\u6709\u6784\u9020\u65b0\u7684 ostream \u3002 1 2 ostream ( const ostream & ) = delete ; ostream ( ostream && x ); \u7981\u6b62\u590d\u5236\u3001\u53ea\u5141\u8bb8\u79fb\u52a8\uff0c\u4ec5\u4f7f\u7528 cout \u4e00\u4e2a\u5168\u5c40\u5bf9\u8c61\u3002 \u4e3a\u4ec0\u4e48\u53ea\u80fd\u4f7f\u7528\u4e00\u4e2a\u5bf9\u8c61\uff1f \u51cf\u5c11\u590d\u5236\u5f00\u9500 \u4e00\u4e2a\u5bf9\u8c61\u5bf9\u5e94\u4e00\u4e2a\u6807\u51c6\u8f93\u51fa\uff0c\u7b26\u5408 OOP \u601d\u60f3 \u591a\u4e2a\u5bf9\u8c61\u4e4b\u95f4\u65e0\u6cd5\u540c\u6b65\u8f93\u51fa\u72b6\u6001 \u662f\u5426\u80fd\u505a\u5f97\u66f4\u597d\uff1f \u5168\u5c40\u5bf9\u8c61\u5f80\u5f80\u5f15\u5165\u521d\u59cb\u5316\u987a\u5e8f\u95ee\u9898 \u5355\u4ef6\u6a21\u5f0f\uff08Singleton Pattern\uff09\uff0c\u5728\u4e4b\u540e\u7684\u8bbe\u8ba1\u6a21\u5f0f\u4e2d\u4f1a\u4ecb\u7ecd \u6587\u4ef6\u8f93\u5165\u8f93\u51fa\u6d41 \u00b6 \u4ee5\u6587\u4ef6\u8f93\u5165\u6d41\u4f5c\u4e3a\u4f8b\u5b50\uff1a ifstream \u662f istream \u7684\u5b50\u7c7b\uff0c\u529f\u80fd\u662f\u4ece\u6587\u4ef6\u4e2d\u8bfb\u5165\u6570\u636e\u3002 \u6253\u5f00\u6587\u4ef6\uff1a 1 2 3 4 5 ifstream ifs ( \"input.txt\" ); ifstream ifs ( \"binary.bin\" , ifstream :: binary ); // \u4ee5\u4e8c\u8fdb\u5236\u5f62\u5f0f\u6253\u5f00\u6587\u4ef6 ifstream ifs ; // \u5148\u521b\u5efa\u4e00\u4e2a sfstream \u7c7b\u7684\u5bf9\u8c61 ifs . open ( \"file\" ); ifs . close (); \u4f8b\u5b50\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 #include <iostream> #include <string> #include <cctype> #include <fstream> using namespace std ; int main () { ifstream ifs ( \"input.txt\" ); while ( ifs ) { // \u5224\u65ad\u6587\u4ef6\u662f\u5426\u5230\u672b\u5c3e\uff0c\u5229\u7528\u4e86\u91cd\u8f7d\u7684 bool \u8fd0\u7b97\u7b26 ifs >> ws ; // \u9664\u53bb\u524d\u5bfc\u7a7a\u683c ws \u4e5f\u662f\u6d41\u64cd\u7eb5\u7b97\u5b50 int c = ifs . peek (); // \u68c0\u67e5\u4e0b\u4e00\u4e2a\u5b57\u7b26\uff0c\u4f46\u4e0d\u8bfb\u53d6 if ( c == EOF ) break ; if ( isdigit ( c )) { int n ; ifs >> n ; cout << \"Read a number: \" << n << endl ; } else { string str ; ifs >> str ; cout << \"Read a word: \" << str << endl ; } } } \u8f85\u52a9\u51fd\u6570\uff1a 1 2 3 4 5 6 7 8 getline ( cin , str ); /* \u5176\u4ed6\u64cd\u4f5c */ get (); // \u8bfb\u53d6\u4e00\u4e2a\u5b57\u7b26 ignore ( int n = 1 , int delim = EOF ); // \u4e22\u5f03 n \u4e2a\u5b57\u7b26\uff0c\u6216\u8005\u76f4\u81f3\u9047\u5230 delim \u5206\u9694\u7b26 peek (); // \u67e5\u770b\u4e0b\u4e00\u4e2a\u5b57\u7b26 putback ( char c ); // \u8fd4\u8fd8\u4e00\u4e2a\u5b57\u7b26 unget (); // \u8fd4\u8fd8\u4e00\u4e2a\u5b57\u7b26 \u4e3a\u4ec0\u4e48 C++ \u4f7f\u7528\u6d41\u8f93\u5165\u53d6\u4ee3\u4e86 scanf \uff1f scanf \u4e0d\u53cb\u597d\uff0c\u4e0d\u540c\u7c7b\u578b\u8981\u4f7f\u7528\u4e0d\u540c\u7684\u6807\u8bc6\u7b26\u3002 \u5bf9\u6bd4\uff1a 1 2 scanf ( \"%d %hd %f %lf %s\" , & i , & s , & f , & d , name ); cin >> i >> s >> f >> d >> name ; \u5176\u4e2d\uff1a \u5b89\u5168\u6027\uff1a scanf(\"%d %d\", &a) \u53ef\u80fd\u5199\u5165\u975e\u6cd5\u5185\u5b58\uff1b \u53ef\u62d3\u5c55\u6027\uff1a cin >> obj \u53ef\u91cd\u8f7d\u6d41\u64cd\u4f5c\u8fd0\u7b97\u7b26 \u6027\u80fd\uff1a scanf \u5728\u8fd0\u884c\u671f\u95f4\u9700\u8981\u5bf9\u683c\u5f0f\u5b57\u7b26\u4e32\u8fdb\u884c\u89e3\u6790\uff0c istream \u5728\u7f16\u8bd1\u671f\u95f4\u5df2\u7ecf\u89e3\u6790\u5b8c\u6bd5 \u5b57\u7b26\u4e32\u6d41 \u00b6 \u4ee5\u8f93\u5165\u8f93\u51fa\u6d41\u4f5c\u4e3a\u4f8b\u5b50\uff1a stringstream \u662f iostream \u7684\u5b50\u7c7b iostream \u7ee7\u627f\u4e8e istream \u548c ostream stringstream \u5b9e\u73b0\u4e86\u8f93\u5165\u8f93\u51fa\u6d41\u53cc\u65b9\u7684\u63a5\u53e3 1 2 3 4 5 6 7 8 9 10 #include <sstream> using namespace std ; int main () { stringstream ss ; ss << \"10\" ; // \u5c06 10 \u5b58\u5165 ss ss << \"0 200\" ; int a , b ; ss >> a >> b ; // a = 100, b = 200 } \u4ec0\u4e48\u662f\u8f93\u5165\uff0c\u4ec0\u4e48\u662f\u8f93\u51fa\uff1f \u4e3b\u4f53\u662f\u4f60\u7684\u7a0b\u5e8f\uff0c\u5ba2\u4f53\u662f\u4f60\u7684 sstream \u3001 ifstream \u3002\u8f93\u5165\u8f93\u51fa\u662f\u76f8\u5bf9\u7a0b\u5e8f\u800c\u8a00\u7684\u3002","title":"STL \u4e0e\u5b57\u7b26\u4e32\u5904\u7406"},{"location":"languages/c-oop/stl-and-string/#stl","text":"","title":"STL \u548c\u5b57\u7b26\u4e32\u5904\u7406"},{"location":"languages/c-oop/stl-and-string/#string","text":"STL \u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u65b9\u4fbf\u7684 string \u7c7b\u578b\uff1a \u5141\u8bb8\u7b80\u6d01\u7684\u62fc\u63a5\u64cd\u4f5c 1 string fullname = firstname + \" \" + lastname ; \u4e5f\u80fd\u591f\u4f7f\u7528\u60ef\u7528\u7684\u8f93\u5165\u8f93\u51fa\u65b9\u6cd5 1 std :: cout << fullname << std :: endl ; \u6784\u9020\u65b9\u5f0f 1 2 3 4 5 6 7 string s0 ( \"Initial string\" ); // \u4ece C \u98ce\u683c\u5b57\u7b26\u4e32\u6784\u9020 string s1 ; // \u9ed8\u8ba4\u7a7a\u5b57\u7b26\u4e32 string s2 ( s0 , 8 , 3 ); // \u622a\u53d6\uff0cindex \u4ece 8 \u5f00\u59cb\uff0c\u957f\u5ea6\u4e3a 3 string s3 ( \"Another character sequence\" , 12 ); // \u622a\u53d6 string s4 ( 10 , 'x' ); // \u590d\u5236\u5b57\u7b26 string s5 ( s0 . begin (), s0 . begin () + 7 ); // \u590d\u5236\u622a\u53d6 str . c_str (); // \u8f6c\u6362\u4e3a C \u98ce\u683c\u5b57\u7b26\u4e32 \u8fed\u4ee3\u5668 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // \u65b9\u5f0f\u4e00 #include <string> #include <iostream> int main () { std :: string sample = \"Kanashi koto wa kitto owaru darou\" ; for ( auto it = sample . begin (); it != sample . end (); it ++ ) { std :: cout << * it << std :: endl ; } return 0 ; } // \u65b9\u5f0f\u4e8c for ( char c : sample ) { std :: cout << c << std :: endl ; } \u5e38\u89c1\u51fd\u6570 1 2 3 4 5 6 7 8 9 10 11 12 cout << str [ 1 ]; // \u8bbf\u95ee\u5143\u7d20 str [ 1 ] = 'a' ; // \u4fee\u6539\u5143\u7d20 str . size () // \u67e5\u8be2\u957f\u5ea6 str . clear () // \u6e05\u7a7a str . empty () // \u67e5\u8be2\u662f\u5426\u4e3a\u7a7a str . push_back ( 'a' ); str . append ( s2 ); // \u5411\u5c3e\u90e8\u589e\u52a0 // \u76f4\u63a5\u6309\u7167\u5b57\u5178\u5e8f\u6765\u6bd4\u8f83 string a = \"alice\" , b = \"bob\" ; a == b // false a < b // true \u7c7b\u578b\u8f6c\u6362 1 2 3 4 5 6 7 8 9 10 11 12 13 // \u6570\u503c\u7c7b\u578b\u5b57\u7b26\u4e32\u5316 to_string ( 1 ); // \"1\" to_string ( 3.14 ); // \"3.14\" to_string ( 3.1415926 ); // \"3.141593\"\uff0c\u6ce8\u610f\u7cbe\u5ea6\u635f\u5931 to_string ( 1 + 2 + 3 ); // \"6\" // \u5b57\u7b26\u4e32\u8f6c\u6570\u503c\u7c7b\u578b int a = stoi ( \"2001\" ); // a = 2001 std :: string :: size_type sz ; // size_t alias int b = stoi ( \"50 cats\" , & sz ); // b = 50 sz = 2 int c = stoi ( \"40c3\" , nullptr , 16 ); // c = 0x40c3\uff0c\u5341\u516d\u8fdb\u5236 int d = stoi ( \"0x7f\" , nullptr , 0 ); // d = 0x7f\uff0c\u81ea\u52a8\u68c0\u67e5\u8fdb\u5236 double e = stod ( \"34.5\" ); // e = 34.5 std::string \u548c std::vector<char> \u7684\u533a\u522b string \u53ef\u4ee5 length() \u6216\u8005 size() \u6765\u83b7\u53d6\u957f\u5ea6\uff0c\u4f46\u662f vector \u53ea\u6709 size() \u51fd\u6570\u3002 string \u53ef\u4ee5\u901a\u8fc7 cin >> str \u4ece\u6807\u51c6\u8f93\u5165\u8f93\u5165\u5b57\u7b26\u4e32\u3002 string \u53ef\u4ee5\u901a\u8fc7 str += \"abc\" \u5411\u5b57\u7b26\u4e32\u5c3e\u90e8\u6dfb\u52a0\u5b57\u7b26\u3002 \u90fd\u53ef\u4ee5\u4f7f\u7528 for (char c: str) \u904d\u5386\u5b57\u7b26\u4e32\u4e2d\u7684\u6240\u6709\u5b57\u7b26\u3002","title":"string \u5b57\u7b26\u4e32\u7c7b"},{"location":"languages/c-oop/stl-and-string/#iostream","text":"1 2 3 4 5 6 cout << str << endl ; cin >> str ; ostream & operator << ( ostream & out , const Test & src ) { out << src . id << endl ; return out ; } \u57fa\u7c7b\uff1a istream \u548c ostream \uff0c\u800c iostream \u662f\u6d3e\u751f\u7c7b\u3002 cin \u3001 cout \u662f\u5177\u4f53\u7684\u5bf9\u8c61\u3002 ifstream \u3001 ofstream \u3001 fstream \u90fd\u662f\u9762\u5411\u6587\u4ef6\u7684\u8f93\u5165\u8f93\u51fa\u6d41\u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5b57\u7b26\u4e32\u6765\u5b9a\u4e49\u4ea4\u4e92\u65b9\u5f0f\uff0c\u6bd4\u5982 sstream \u3002 ostream \u5373 output stream\uff0c\u662f STL \u5e93\u4e2d\u6240\u6709\u8f93\u51fa\u6d41\u7684\u57fa\u7c7b \u5b83\u91cd\u8f7d\u4e86\u9488\u5bf9\u57fa\u7840\u7c7b\u578b\u7684\u8f93\u51fa\u6d41\u8fd0\u7b97\u7b26\uff0c\u63a5\u53d7\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\uff0c\u518d\u8c03\u7528\u7cfb\u7edf\u51fd\u6570\u8fdb\u884c\u8f93\u51fa\u3002\u7edf\u4e00\u4e86\u8f93\u51fa\u63a5\u53e3\uff0c\u6539\u5584\u4e86 C \u4e2d\u8f93\u51fa\u65b9\u5f0f\u6df7\u4e71\u7684\u72b6\u51b5\uff0c\u6bd4\u5982 C \u4e2d\u9700\u8981\u7528\u6237\u5173\u5fc3\u975e\u5e38\u591a\u7684\u5185\u5bb9\uff0c\u624b\u52a8\u8bbe\u7f6e\u8f93\u51fa\u7c7b\u578b\uff0c\u5e38\u5e38\u51fa\u9519\u3002 1 printf ( \"%d %f %s\" , 1 , 2.3 , \"hello\" ); cout \u662f STL \u4e2d\u5185\u5efa\u7684\u4e00\u4e2a ostream \u5bf9\u8c61\uff0c\u5b83\u4f1a\u5c06\u6570\u636e\u9001\u5230\u6807\u51c6\u8f93\u51fa\u6d41\uff08\u4e00\u822c\u662f\u5c4f\u5e55\uff09\u3002 1 2 3 4 5 6 7 8 9 10 11 12 class ostream { public : ostream & operator << ( char c ) { printf ( \"%c\" , c ); return * this ; } ostream & operator << ( const char * str ) { printf ( \"%s\" , str ); return * this ; } } cout ; \u8bed\u53e5 cout << \"hello\" << ' ' << \"world\" \u5148\u6267\u884c cout << \"hello\" \u8c03\u7528\u7b2c\u4e8c\u4e2a\u51fd\u6570\uff0c\u8fd4\u56de c1 \uff08 cout \u7684\u5f15\u7528\uff09\u3002\u518d\u6267\u884c c1 << ' ' \u8c03\u7528\u7b2c\u4e00\u4e2a\u51fd\u6570\uff0c\u8fd4\u56de c2 \uff08 cout \u7684\u5f15\u7528\uff09\u3002\u6700\u540e\u6267\u884c c2 << \"world\" \u8c03\u7528\u7b2c\u4e8c\u4e2a\u51fd\u6570\u3002","title":"iostream \u8f93\u5165\u8f93\u51fa\u6d41"},{"location":"languages/c-oop/stl-and-string/#_1","text":"1 2 3 4 5 6 7 8 #include <iomanip> cout << fixed << 2018.0 << \" \" << 0.0001 << endl ; // \u56fa\u5b9a\u5c0f\u6570\u4f4d\u6570 cout << scientific << 2018.0 << \" \" << 0.0001 << endl ; // \u79d1\u5b66\u8ba1\u6570\u6cd5 cout << defaultfloat ; // \u8fd8\u539f\u9ed8\u8ba4\u8f93\u51fa\u683c\u5f0f cout << setprecision ( 2 ) << 3.1415926 << endl ; // \u8f93\u51fa\u7cbe\u5ea6\u8bbe\u7f6e\u4e3a 2 cout << oct << 12 << \" \" << hex << 12 << endl ; // \u516b\u8fdb\u5236\u8f93\u51fa\u4e0e\u5341\u516d\u8fdb\u5236\u8f93\u51fa cout << dec ; // \u8fd8\u539f\u5341\u8fdb\u5236 cout << setw ( 3 ) << setfill ( '*' ) << 5 << endl ; // \u8bbe\u7f6e\u5bf9\u9f50\u957f\u5ea6\u4e3a 3\uff0c\u5bf9\u9f50\u5b57\u7b26\u4e3a * \u81ea\u5df1\u5b9e\u73b0\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 class setprecision { private : int precision ; public : setprecision ( int p ) : precision ( p ) { } friend class ostream ; }; // \u51fd\u6570\u7c7b class ostream { private : int precision ; // \u8bb0\u5f55\u6d41\u7684\u72b6\u6001 public : ostream & operator << ( const setprecision & m ) { precision = m . precision ; return * this ; } } cout ; cout << setprecision ( 2 ); \u501f\u52a9\u8f85\u52a9\u7c7b\uff0c\u8bbe\u7f6e\u6210\u5458\u53d8\u91cf\u3002\u8fd9\u79cd\u7c7b\u53eb\u6d41\u64cd\u7eb5\u7b97\u5b50\u3002 \u4e3a\u4ec0\u4e48\u91cd\u8f7d\u6d41\u8fd0\u7b97\u7b26\u8981\u8fd4\u56de\u5f15\u7528\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u8fd4\u56de cout \uff1f \u59cb\u7ec8\u5728\u7528\u540c\u4e00\u4e2a\u8f93\u51fa\u6d41\u5bf9\u8c61 cout \uff0c\u6ca1\u6709\u6784\u9020\u65b0\u7684 ostream \u3002 1 2 ostream ( const ostream & ) = delete ; ostream ( ostream && x ); \u7981\u6b62\u590d\u5236\u3001\u53ea\u5141\u8bb8\u79fb\u52a8\uff0c\u4ec5\u4f7f\u7528 cout \u4e00\u4e2a\u5168\u5c40\u5bf9\u8c61\u3002 \u4e3a\u4ec0\u4e48\u53ea\u80fd\u4f7f\u7528\u4e00\u4e2a\u5bf9\u8c61\uff1f \u51cf\u5c11\u590d\u5236\u5f00\u9500 \u4e00\u4e2a\u5bf9\u8c61\u5bf9\u5e94\u4e00\u4e2a\u6807\u51c6\u8f93\u51fa\uff0c\u7b26\u5408 OOP \u601d\u60f3 \u591a\u4e2a\u5bf9\u8c61\u4e4b\u95f4\u65e0\u6cd5\u540c\u6b65\u8f93\u51fa\u72b6\u6001 \u662f\u5426\u80fd\u505a\u5f97\u66f4\u597d\uff1f \u5168\u5c40\u5bf9\u8c61\u5f80\u5f80\u5f15\u5165\u521d\u59cb\u5316\u987a\u5e8f\u95ee\u9898 \u5355\u4ef6\u6a21\u5f0f\uff08Singleton Pattern\uff09\uff0c\u5728\u4e4b\u540e\u7684\u8bbe\u8ba1\u6a21\u5f0f\u4e2d\u4f1a\u4ecb\u7ecd","title":"\u683c\u5f0f\u5316\u8f93\u51fa"},{"location":"languages/c-oop/stl-and-string/#_2","text":"\u4ee5\u6587\u4ef6\u8f93\u5165\u6d41\u4f5c\u4e3a\u4f8b\u5b50\uff1a ifstream \u662f istream \u7684\u5b50\u7c7b\uff0c\u529f\u80fd\u662f\u4ece\u6587\u4ef6\u4e2d\u8bfb\u5165\u6570\u636e\u3002 \u6253\u5f00\u6587\u4ef6\uff1a 1 2 3 4 5 ifstream ifs ( \"input.txt\" ); ifstream ifs ( \"binary.bin\" , ifstream :: binary ); // \u4ee5\u4e8c\u8fdb\u5236\u5f62\u5f0f\u6253\u5f00\u6587\u4ef6 ifstream ifs ; // \u5148\u521b\u5efa\u4e00\u4e2a sfstream \u7c7b\u7684\u5bf9\u8c61 ifs . open ( \"file\" ); ifs . close (); \u4f8b\u5b50\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 #include <iostream> #include <string> #include <cctype> #include <fstream> using namespace std ; int main () { ifstream ifs ( \"input.txt\" ); while ( ifs ) { // \u5224\u65ad\u6587\u4ef6\u662f\u5426\u5230\u672b\u5c3e\uff0c\u5229\u7528\u4e86\u91cd\u8f7d\u7684 bool \u8fd0\u7b97\u7b26 ifs >> ws ; // \u9664\u53bb\u524d\u5bfc\u7a7a\u683c ws \u4e5f\u662f\u6d41\u64cd\u7eb5\u7b97\u5b50 int c = ifs . peek (); // \u68c0\u67e5\u4e0b\u4e00\u4e2a\u5b57\u7b26\uff0c\u4f46\u4e0d\u8bfb\u53d6 if ( c == EOF ) break ; if ( isdigit ( c )) { int n ; ifs >> n ; cout << \"Read a number: \" << n << endl ; } else { string str ; ifs >> str ; cout << \"Read a word: \" << str << endl ; } } } \u8f85\u52a9\u51fd\u6570\uff1a 1 2 3 4 5 6 7 8 getline ( cin , str ); /* \u5176\u4ed6\u64cd\u4f5c */ get (); // \u8bfb\u53d6\u4e00\u4e2a\u5b57\u7b26 ignore ( int n = 1 , int delim = EOF ); // \u4e22\u5f03 n \u4e2a\u5b57\u7b26\uff0c\u6216\u8005\u76f4\u81f3\u9047\u5230 delim \u5206\u9694\u7b26 peek (); // \u67e5\u770b\u4e0b\u4e00\u4e2a\u5b57\u7b26 putback ( char c ); // \u8fd4\u8fd8\u4e00\u4e2a\u5b57\u7b26 unget (); // \u8fd4\u8fd8\u4e00\u4e2a\u5b57\u7b26 \u4e3a\u4ec0\u4e48 C++ \u4f7f\u7528\u6d41\u8f93\u5165\u53d6\u4ee3\u4e86 scanf \uff1f scanf \u4e0d\u53cb\u597d\uff0c\u4e0d\u540c\u7c7b\u578b\u8981\u4f7f\u7528\u4e0d\u540c\u7684\u6807\u8bc6\u7b26\u3002 \u5bf9\u6bd4\uff1a 1 2 scanf ( \"%d %hd %f %lf %s\" , & i , & s , & f , & d , name ); cin >> i >> s >> f >> d >> name ; \u5176\u4e2d\uff1a \u5b89\u5168\u6027\uff1a scanf(\"%d %d\", &a) \u53ef\u80fd\u5199\u5165\u975e\u6cd5\u5185\u5b58\uff1b \u53ef\u62d3\u5c55\u6027\uff1a cin >> obj \u53ef\u91cd\u8f7d\u6d41\u64cd\u4f5c\u8fd0\u7b97\u7b26 \u6027\u80fd\uff1a scanf \u5728\u8fd0\u884c\u671f\u95f4\u9700\u8981\u5bf9\u683c\u5f0f\u5b57\u7b26\u4e32\u8fdb\u884c\u89e3\u6790\uff0c istream \u5728\u7f16\u8bd1\u671f\u95f4\u5df2\u7ecf\u89e3\u6790\u5b8c\u6bd5","title":"\u6587\u4ef6\u8f93\u5165\u8f93\u51fa\u6d41"},{"location":"languages/c-oop/stl-and-string/#_3","text":"\u4ee5\u8f93\u5165\u8f93\u51fa\u6d41\u4f5c\u4e3a\u4f8b\u5b50\uff1a stringstream \u662f iostream \u7684\u5b50\u7c7b iostream \u7ee7\u627f\u4e8e istream \u548c ostream stringstream \u5b9e\u73b0\u4e86\u8f93\u5165\u8f93\u51fa\u6d41\u53cc\u65b9\u7684\u63a5\u53e3 1 2 3 4 5 6 7 8 9 10 #include <sstream> using namespace std ; int main () { stringstream ss ; ss << \"10\" ; // \u5c06 10 \u5b58\u5165 ss ss << \"0 200\" ; int a , b ; ss >> a >> b ; // a = 100, b = 200 } \u4ec0\u4e48\u662f\u8f93\u5165\uff0c\u4ec0\u4e48\u662f\u8f93\u51fa\uff1f \u4e3b\u4f53\u662f\u4f60\u7684\u7a0b\u5e8f\uff0c\u5ba2\u4f53\u662f\u4f60\u7684 sstream \u3001 ifstream \u3002\u8f93\u5165\u8f93\u51fa\u662f\u76f8\u5bf9\u7a0b\u5e8f\u800c\u8a00\u7684\u3002","title":"\u5b57\u7b26\u4e32\u6d41"},{"location":"languages/c-oop/templates-and-intro-to-stl/","text":"\u6a21\u677f\u8fdb\u9636\u4e0e STL \u5165\u95e8 \u00b6 \u547d\u540d\u7a7a\u95f4 \u00b6 \u5b9a\u4e49 \u00b6 \u4e3a\u4e86\u907f\u514d\u5728\u5927\u89c4\u6a21\u7a0b\u5e8f\u7684\u8bbe\u8ba1\u4e2d\uff0c\u4ee5\u53ca\u5728\u7a0b\u5e8f\u5458\u4f7f\u7528\u5404\u79cd\u5404\u6837\u7684 C++ \u5e93\u65f6\uff0c\u6807\u8bc6\u7b26\u7684\u547d\u540d\u53d1\u751f\u51b2\u7a81\uff0c\u6807\u51c6 C++ \u5f15\u5165\u4e86\u5173\u952e\u5b57 namespace \uff08\u547d\u540d\u7a7a\u95f4\uff09\uff0c\u53ef\u4ee5\u66f4\u597d\u5730\u63a7\u5236\u6807\u8bc6\u7b26\u7684\u4f5c\u7528\u57df\u3002 \u6807\u51c6 C++ \u5e93\uff08\u4e0d\u5305\u62ec\u6807\u51c6 C \u5e93\uff09\u4e2d\u6240\u5305\u542b\u7684\u6240\u6709\u5185\u5bb9\uff08\u5305\u62ec\u5e38\u91cf\u3001\u53d8\u91cf\u3001\u7ed3\u6784\u3001\u7c7b\u548c\u51fd\u6570\u7b49\uff09\u90fd\u88ab\u5b9a\u4e49\u5728\u547d\u540d\u7a7a\u95f4 std \uff08\u5373\u6807\u51c6\u547d\u540d\u7a7a\u95f4\uff09\u4e2d\u3002\u4f8b\u5982\uff1a cout \u3001 cin \u3001 vector \u3001 set \u3001 map \u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c namespace \u672c\u8eab\u662f\u4e00\u79cd\u5173\u952e\u5b57\uff0c\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u547d\u540d\u7a7a\u95f4\uff0c\u800c std \u4ec5\u4ec5\u662f\u5df2\u7ecf\u88ab\u5b9a\u4e49\u7684\u4e00\u4e2a\u547d\u540d\u7a7a\u95f4\u3002 \u4f8b\u5b50 \u00b6 \u81ea\u5b9a\u4e49\u547d\u540d\u7a7a\u95f4 \u00b6 1 2 3 namespace A { int x , y ; } \u4f7f\u7528\u547d\u540d\u7a7a\u95f4 \u00b6 1 2 3 A :: x = 3 ; A :: y = 6 ; // \u5bf9\u4eba\u4e3a\u5b9a\u4e49\u7684\u547d\u540d\u7a7a\u95f4 A \u5185\u7684 x\u3001y \u8fdb\u884c\u8d4b\u503c using \u7533\u660e \u00b6 \u4f7f\u7528 using \u58f0\u660e\u7b80\u5316\u547d\u540d\u7a7a\u95f4\u4f7f\u7528\u3002 1 2 3 4 // \u4f7f\u7528\u6574\u4e2a\u547d\u540d\u7a7a\u95f4\uff1a\u6240\u6709\u6210\u5458\u90fd\u76f4\u63a5\u53ef\u7528 using namespace A ; x = 3 ; y = 6 ; \u4ee5\u53ca\uff1a 1 2 3 // \u4f7f\u7528\u90e8\u5206\u6210\u5458\uff1a\u6240\u9009\u6210\u5458\u53ef\u76f4\u63a5\u4f7f\u7528 using A :: x ; x = 3 ; A :: y = 6 ; \u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c\u90fd\u4e0d\u5e94\u51fa\u73b0\u547d\u540d\u51b2\u7a81\u3002 STL \u521d\u6b65 \u00b6 \u5b9a\u4e49 \u00b6 \u6807\u51c6\u6a21\u677f\u5e93\uff08\u82f1\u6587\uff1aStandard Template Library\uff0c\u7f29\u5199\uff1aSTL\uff09\uff0c\u662f\u4e00\u4e2a\u9ad8\u6548\u7684 C++ \u8f6f\u4ef6\u5e93\uff0c\u5b83\u88ab\u5bb9\u7eb3\u4e8e C++ \u6807\u51c6\u7a0b\u5e8f\u5e93 C++ Standard Library \u4e2d\u3002\u5176\u4e2d\u5305\u542b4\u4e2a\u7ec4\u4ef6\uff0c\u5206\u522b\u4e3a \u7b97\u6cd5 \u3001 \u5bb9\u5668 \u3001 \u51fd\u6570 \u3001 \u8fed\u4ee3\u5668 \u3002\u8fd9\u4e9b\u90fd\u662f\u57fa\u4e8e\u6a21\u677f\u7f16\u5199\u800c\u6210\u3002 \u5173\u952e\u7406\u5ff5\uff1a\u5c06\u201c\u5728\u6570\u636e\u4e0a\u6267\u884c\u7684\u64cd\u4f5c\u201d\u4e0e\u201c\u8981\u6267\u884c\u64cd\u4f5c\u7684\u6570\u636e\u201d\u5206\u79bb\u3002 STL \u7684\u547d\u540d\u7a7a\u95f4\u662f std \uff0c\u4e00\u822c\u4f7f\u7528 std::name \u6765\u4f7f\u7528 STL \u7684\u51fd\u6570\u6216\u5bf9\u8c61\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 using namespace std \u6765\u5f15\u5165 STL \u7684\u547d\u540d\u7a7a\u95f4\u3002 1 using std :: stringc ; // \u4e0d\u63a8\u8350\u5728\u5927\u578b\u5de5\u7a0b\u4e2d\u4f7f\u7528\uff0c\u5bb9\u6613\u6c61\u67d3\u547d\u540d\u7a7a\u95f4 \u5173\u4e8e STL \u7684\u6587\u6863\u548c\u4f8b\u5b50\u53ef\u4ee5\u5728\u4ee5\u4e0b\u7f51\u5740\u67e5\u8be2 http://www.cplusplus.com/ \u3002 \u591a\u5199\u591a\u67e5\u591a\u7528\uff0c\u662f\u5b66\u4e60 STL \u5e93\u7684\u6700\u597d\u65b9\u6cd5\u3002 STL \u5bb9\u5668 \u00b6 \u5bb9\u5668\u662f\u5305\u542b\u3001\u653e\u7f6e\u6570\u636e\u7684\u5de5\u5177\u3002\u901a\u5e38\u4e3a\u6570\u636e\u7ed3\u6784\u3002\u5305\u62ec\uff1a \u7b80\u5355\u5bb9\u5668\uff08simple container\uff09 \u5e8f\u5217\u5bb9\u5668\uff08sequence container\uff09 \u5173\u7cfb\u5bb9\u5668\uff08associative container\uff09 pair \u5bb9\u5668 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 // \u6700\u7b80\u5355\u7684\u5bb9\u5668\uff0c\u7531\u4e24\u4e2a\u5355\u72ec\u6570\u636e\u7ec4\u6210 template < class T1 , class T2 > struct pair { T1 first ; T2 second ; // \u82e5\u5e72\u5176\u5b83\u51fd\u6570 }; // \u901a\u8fc7 first\u3001second \u4e24\u4e2a\u6210\u5458\u53d8\u91cf\u83b7\u53d6\u6570\u636e std :: pair < int , int > t ; t . first = 4 ; t . second = 5 ; \u4e00\u4e9b\u8f85\u52a9\u51fd\u6570\uff1a 1 2 3 4 // \u521b\u5efa\uff1a\u4f7f\u7528\u51fd\u6570make_pair auto t = std :: make_pair ( \"abc\" , 7.8 ); // \u81ea\u52a8\u63a8\u5bfc\u6210\u5458\u7c7b\u578b // \u6b64\u5904\u63a8\u5bfc\u51fa\u7684 t \u7684\u7c7b\u578b\u5c31\u662f pair \u7c7b\u578b 1 2 3 4 5 // \u652f\u6301\u5c0f\u4e8e\u3001\u7b49\u4e8e\u7b49\u6bd4\u8f83\u8fd0\u7b97\u7b26\u3002 // \u5148\u6bd4\u8f83 first\uff0c\u540e\u6bd4\u8f83 second // \u8981\u6c42\u6210\u5458\u7c7b\u578b\u652f\u6301\u6bd4\u8f83 std :: make_pair ( 1 , 4 ) < std :: make_pair ( 2 , 3 ); std :: make_pair ( 1 , 4 ) > std :: make_pair ( 1 , 2 ); 1 2 3 4 5 6 7 8 9 #include <string> int main () { std :: pair < std :: string , double > p1 ( \"Alice\" , 90.5 ); // \u624b\u5de5\u6307\u5b9a\u7c7b\u578b\u521d\u59cb\u5316 std :: pair < std :: string , double > p2 ; p2 . first = \"Bob\" ; p2 . second = 85.0 ; // \u5148\u5b9a\u4e49\uff0c\u518d\u8d4b\u503c auto p3 = std :: make_pair ( \"David\" , \"95.0\" ); // \u81ea\u52a8\u63a8\u5bfc\u7c7b\u578b\u521d\u59cb\u5316 return 0 ; } tuple \u5bb9\u5668 \u00b6 C++11 \u65b0\u589e\uff0c\u8868\u793a\u7531\u82e5\u5e72\u6210\u5458\u7ec4\u6210\u7684\u5143\u7ec4\u7c7b\u578b\u3002 1 2 template < class Types , ... > class tuple ; \u901a\u8fc7 std::get \u51fd\u6570\u83b7\u53d6\u6570\u636e\u3002 1 2 v0 = std :: get < 0 > ( tuple1 ); v1 = std :: get < 1 > ( tuple2 ); \u5176\u4e0b\u6807\u9700\u8981\u5728\u7f16\u8bd1\u65f6\u786e\u5b9a\uff1a\u4e0d\u80fd\u8bbe\u5b9a\u8fd0\u884c\u65f6\u53ef\u53d8\u7684\u957f\u5ea6\uff0c\u4e0d\u80fd\u5f53\u505a\u52a8\u6001\u6570\u7ec4\u3002 1 2 int i = 0 ; v = std :: get < i > ( tuple ); // \u7f16\u8bd1\u9519\u8bef \u793a\u4f8b\u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 #include <iostream> #include <tuple> using std :: tuple ; using std :: string ; int main () { std :: tuple < int , double , string > t3 = { 1 , 2.0 , \"3\" }; std :: get < 0 > ( t3 ) = 4 ; std :: cout << std :: get < 1 > ( t3 ) << std :: endl ; std :: cout << std :: get < 0 > ( t3 ) << std :: endl ; int i ; double d ; string s ; std :: tie ( i , d , s ) = t3 ; i = 10 ; std :: cout << i << std :: endl ; std :: cout << std :: get < 0 > ( t3 ) << std :: endl ; } /* output: 2 4 10 4 */ \u4ece\u4e0a\u8ff0\u4ee3\u7801\u53ef\u4ee5\u770b\u51fa\uff0c\u5b9e\u9645\u4e0a get \u51fd\u6570\u8fd4\u56de\u7684\u662f tuple \u7684\u67d0\u4e2a\u5143\u7d20\u7684\u5de6\u503c\u5f15\u7528\uff0c\u53ef\u4ee5\u8d4b\u503c\uff0c\u4e5f\u53ef\u4ee5\u88ab\u8f93\u51fa\u3002\u800c tie \u51fd\u6570\u5b9e\u9645\u4e0a\u6ca1\u6709\u8fd4\u56de\u503c\uff0c\u4ec5\u4ec5\u662f\u5b8c\u6210\u4e86\u5bf9\u5e94\u7684\u7b80\u5355\u8d4b\u503c\uff0c\u5e76\u4e0d\u662f\u751f\u6210\u5de6\u503c\u5f15\u7528\uff0c\u6539\u53d8 i \u5e76\u4e0d\u80fd\u6539\u53d8 tuple \u3002 tuple \u7684\u610f\u4e49\uff0c\u7528\u4e8e\u51fd\u6570\u591a\u8fd4\u56de\u503c\u4f20\u9012\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 #include <tuple> #include <iostream> std :: tuple < int , double > f ( int x ) { return std :: make_tuple ( x , double ( x ) / 2 ); } int main () { int xval ; double half_x ; std :: tie ( xval , half_x ) = f ( 7 ); std :: cout << xval << std :: endl ; return 0 ; } /* output: 7 */ \u4f5c\u4e3a tuple \u7684\u7279\u4f8b\uff0c pair \u53ef\u7528\u4e8e\u4e24\u4e2a\u8fd4\u56de\u503c\u7684\u4f20\u9012\u3002\u9664\u6b64\u4e4b\u5916\uff0c pair \u5728 map \u4e2d\u5927\u91cf\u4f7f\u7528\u3002 vector \u5bb9\u5668 \u00b6 \u4f1a\u81ea\u52a8\u6269\u5c55\u5bb9\u91cf\u7684\u6570\u7ec4\uff0c\u4ee5\u5faa\u5e8f\u7684\u65b9\u5f0f\u7ef4\u62a4\u53d8\u91cf\u96c6\u5408\u3002 1 2 template < class T , class Allocator = std :: allocator < T >> class vector ; STL \u4e2d\u6700\u57fa\u672c\u7684\u5e8f\u5217\u5bb9\u5668\uff0c\u63d0\u4f9b\u6709\u6548\u3001\u5b89\u5168\u7684\u6570\u7ec4\u4ee5\u66ff\u4ee3 C \u8bed\u8a00\u4e2d\u539f\u751f\u6570\u7ec4\u3002\u5141\u8bb8\u76f4\u63a5\u4ee5\u4e0b\u6807\u8bbf\u95ee\uff0c\u8bbf\u95ee\u901f\u5ea6\u5feb\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 #include <vector> using namespace std ; int main () { std :: vector < int > x ; // \u521b\u5efa x . size (); // \u83b7\u53d6\u5f53\u524d\u6570\u7ec4\u957f\u5ea6 x . clear (); // \u6e05\u7a7a x . push_back ( 1 ); // \u5728\u672b\u5c3e\u6dfb\u52a0 1 x . pop_back (); // \u5220\u9664 x . insert ( x . begin () + 1 , 5 ); // \u5728\u4e2d\u95f4\u6dfb\u52a0\uff08\u4f4e\u901f\uff09 x . erase ( x . begin () + 1 ); // \u5728\u4e2d\u95f4\u5220\u9664\uff08\u4f4e\u901f\uff09 return 0 ; } \u8fed\u4ee3\u5668 \u00b6 \u4e00\u79cd\u68c0\u67e5\u5bb9\u5668\u5185\u5143\u7d20\u5e76\u904d\u5386\u5143\u7d20\u7684\u6570\u636e\u7c7b\u578b\u3002 \u63d0\u4f9b\u4e00\u79cd\u65b9\u6cd5\u987a\u5e8f\u8bbf\u95ee\u4e00\u4e2a\u805a\u5408\u5bf9\u8c61\u4e2d\u5404\u4e2a\u5143\u7d20, \u800c\u53c8\u4e0d\u9700\u66b4\u9732\u8be5\u5bf9\u8c61\u7684\u5185\u90e8\u8868\u793a\u3002 \u4e3a\u904d\u5386\u4e0d\u540c\u7684\u805a\u5408\u7ed3\u6784\uff08\u9700\u62e5\u6709\u76f8\u540c\u7684\u57fa\u7c7b\uff09\u63d0\u4f9b\u4e00\u4e2a\u7edf\u4e00\u7684\u63a5\u53e3\u3002 \u5bf9\u904d\u5386\u5143\u7d20\u4f7f\u7528\u7c7b\u4f3c\u6307\u9488\u3002 \u4ee5 vector \u4e3a\u4f8b\uff1a 1 vector < int >:: iterator iter ; \u5b9a\u4e49\u4e86\u4e00\u4e2a\u540d\u4e3a iter \u7684\u53d8\u91cf\uff0c\u5b83\u7684\u6570\u636e\u7c7b\u578b\u662f\u7531 vector<int> \u5b9a\u4e49\u7684 iterator \u7c7b\u578b\u3002 1 2 x . begin (); x . end (); begin \u8fd4\u56de vector \u4e2d\u521d\u59cb\u4f4d\u7f6e\u7684\u8fed\u4ee3\u5668\uff08\u6307\u9488\uff09\uff0c\u5373 x[0] \u3002 end \u51fd\u6570\u8fd4\u56de x[x.size()] \uff0c\u6ce8\u610f\u5230 x.size() \u5bf9\u5e94\u7684\u4e0d\u662f\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u800c\u662f\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4e4b\u540e\u3002 \u6545\u800c\u7ed3\u5408 begin() \u548c end() \u80fd\u591f\u5b9e\u73b0\u904d\u5386\u6240\u6709\u5143\u7d20\uff0c\u5373\u904d\u5386\u4e00\u4e2a [0, size()) \u200b \u5de6\u95ed\u53f3\u5f00\u533a\u95f4\u3002 \u8fed\u4ee3\u5668\u4e00\u822c\u5141\u8bb8\u7684\u64cd\u4f5c\uff1a 1 2 3 4 5 6 ++ iter ; -- iter ; iter += n ; iter -= n ; // \u8fed\u4ee3\u5668\u79fb\u52a8 int dist = iter1 - iter2 ; // \u8fd4\u56de\u5143\u7d20\u4f4d\u7f6e\u5dee * iter = 5 ; // * \u662f\u89e3\u5f15\u7528\u8fd0\u7b97\u7b26\uff0c\u8fd4\u56de\u7684\u662f\u5de6\u503c\u5f15\u7528 \u90a3\u4e48\uff0c\u5982\u4f55\u5229\u7528 iterator \u904d\u5386 vector \u5462\uff1f \u56e0\u4e3a end() \u4e0d\u662f\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u800c\u662f\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4e4b\u540e\u7684\u4f4d\u7f6e\uff0c\u8be5\u4ee3\u7801\u53ef\u4ee5\u904d\u5386 vec \u4e2d\u6240\u6709\u5143\u7d20\uff1a 1 2 3 4 5 6 7 for ( vector < int >:: iterator it = vec . begin (); it != vec . end (); ++ it ) { } // \u4e5f\u53ef\u4ee5\u7528 auto \u7b80\u5316\u4ee3\u7801\uff0c\u7f16\u8bd1\u5668\u81ea\u52a8\u63a8\u5bfc it \u662f vec \u7684 iterator for ( auto it = vec . begin (); it != vec . end (); ++ it ) { } // \u8fd8\u53ef\u4ee5\u76f4\u63a5\u8fd9\u6837\u904d\u5386 for ( auto x : vec ) { } \u8865\u5145\uff1a\u53cd\u5411\u904d\u5386\u5668\u8fed\u4ee3\u6574\u4e2a vector \uff1a 1 2 3 for ( auto zex = vec . rbegin (); zex != vec . rend (); zex ++ ) { std :: cout << * zex << std :: endl ; } \u8fd9\u4e2a\u8bed\u6cd5\u5229\u7528 rbegin \u4e0e rend \u5b9e\u73b0\u4e86\u4ece\u540e\u5f80\u524d\u904d\u5386\u6574\u4e2a vec \u51fd\u6570\uff0c\u6ce8\u610f\u5bf9\u4e8e zex \u4ecd\u7136\u662f\u91c7\u7528 ++ \u8fd0\u7b97\u7b26\u3002 \u8fed\u4ee3\u5668\u5931\u6548 \u00b6 \u5f53\u8fed\u4ee3\u5668\u4e0d\u518d\u6307\u5411\u672c\u5e94\u6307\u5411\u7684\u5143\u7d20\u65f6\uff0c\u79f0\u6b64\u8fed\u4ee3\u5668\u5931\u6548\u3002\u8fd9\u5e76\u4e0d\u662f\u6307\u6307\u9488\u672c\u8eab\u51fa\u4e86\u95ee\u9898\uff0c\u800c\u662f\u6307\u5411\u4e0d\u518d\u6b63\u786e\u3002 \u8c03\u7528 insert \u3001 erase \u540e\uff0c\u6240 \u4fee\u6539\u4f4d\u7f6e \u7684\u8fed\u4ee3\u5668\u3001\u4ee5\u53ca \u8be5\u4f4d\u7f6e\u4e4b\u540e \u7684\u6240\u6709\u8fed\u4ee3\u5668\u5931\u6548\u3002 \u8c03\u7528 push_back \u7b49\u4fee\u6539 vector \u5927\u5c0f\u7684\u65b9\u6cd5\u65f6\uff0c\u5982\u679c vector \u6070\u597d\u8fbe\u5230\u4e86 capacity \u4e0a\u9650\uff0c\u7f16\u8bd1\u5668\u4f1a\u7ed9 voctor \u6269\u5bb9\u3002\u6269\u5bb9\u540e\u6574\u4e2a vector \u4f1a\u53d1\u751f\u7a7a\u95f4\u6574\u4f53\u8fc1\u79fb\uff0c\u4f46\u662f\u8fed\u4ee3\u5668\u4ecd\u7136\u6307\u5411\u4e4b\u524d\u7684\u5185\u5b58\uff0c\u4ece\u800c\u4f1a\u4f7f \u6240\u6709 \u8fed\u4ee3\u5668\u5931\u6548\u3002 \u81ea\u52a8\u6269\u5bb9 vector \u662f\u4f1a\u81ea\u52a8\u6269\u5c55\u5bb9\u91cf\u7684\u6570\u7ec4\uff0c\u9664\u4e86 size \uff0c\u53e6\u4fdd\u5b58 capacity \uff1a\u6700\u5927\u5bb9\u91cf\u9650\u5236\u3002 \u5982\u679c size \u8fbe\u5230\u4e86 capacity \uff0c\u5219\u53e6\u7533\u8bf7\u4e00\u7247\u4e24\u500d\u4e8e capacity \u7684\u7a7a\u95f4\uff0c\u5e76\u6574\u4f53\u8fc1\u79fb vector \u7684\u5185\u5bb9\u3002 \u8fd9\u4e00\u8fc7\u7a0b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\u5747\u644a O(1) O(1) \uff0c\u5e76\u4e14\u6574\u4f53\u8fc1\u79fb\u8fc7\u7a0b\u4f7f\u6240\u6709\u8fed\u4ee3\u5668\u5931\u6548\u3002 \u6bcf\u6b21\u4ee5\u4e24\u500d\u4e3a\u5355\u4f4d\u6269\u5bb9\u5b9e\u9645\u4e0a\u662f\u6ee1\u8db3\u4e86\u5806\u4f18\u5316\uff0c\u662f\u4e00\u4e2a\u5f88\u4f18\u7684\u6269\u5bb9\u9009\u62e9\uff0c\u5c06\u5728\u6570\u636e\u7ed3\u6784\u4e2d\u5177\u4f53\u5b66\u4e60\u3002 \u56e0\u4e3a\u6269\u5bb9\u5bfc\u81f4\u7684\u8fed\u4ee3\u5668\u5931\u6548\u200b \u5728\u904d\u5386\u7684\u65f6\u5019\u589e\u52a0\u5143\u7d20\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u8fed\u4ee3\u5668\u5931\u6548\uff1a 1 2 3 4 5 6 7 8 9 #include <iostream> #include <vector> using namespace std ; int main () { vector < int > vec = { 1 , 2 , 3 , 4 , 5 }; for ( auto it = vec . begin (); it != vec . end (); ++ it ) vec . push_back ( * it ); return 0 ; } \u8fd9\u6bb5\u4ee3\u7801\u4f1a\u4f7f vec \u53d8\u6210 123451234512345... \u3002\u76f4\u5230 vec \u8fbe\u5230 capacity \u4e0a\u9650\uff0c\u6b64\u65f6 it \u5931\u6548\uff0c\u51fa\u73b0 error\u3002 \u5176\u5b9e\u8fd9\u79cd\u60c5\u51b5\u86ee\u597d\u7406\u89e3\u7684\uff0c\u56e0\u4e3a\u6bcf\u4e00\u6b21\u5faa\u73af\u90fd\u4f1a\u5224\u5b9a it \u662f\u5426\u7b49\u4e8e vec.end() \uff0c\u800c vec.end() \u4e0d\u65ad\u5728\u53d8\u5316\u3002 \u6545\u800c\u5bfc\u81f4\u5faa\u73af\u4e0d\u505c\u6b62\uff0c\u76f4\u5230\u8fed\u4ee3\u5668\u56e0\u4e3a\u5bb9\u91cf\u7684\u8fc1\u79fb\u800c\u5931\u6548\u3002 \u56e0\u4e3a\u5220\u9664\u5bfc\u81f4\u7684\u8fed\u4ee3\u5668\u5931\u6548 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 #include <iostream> using namespace std ; #include <vector> int main () { vector < int > vec = { 1 , 2 , 3 , 4 , 5 }; for ( auto it = vec . begin (); it != vec . end (); it ++ ) { cout << * it << endl ; } cout << \"=====================\" << endl ; auto first = vec . begin (); auto second = vec . begin () + 1 ; auto find = vec . begin () + 6 ; vec . erase ( second ); auto ret = vec . erase ( second ); cout << * second << endl ; cout << * ret << endl ; cout << \"my size is \" << vec . size () << endl ; cout << \"how could I find \" << * find << endl ; for ( auto it = vec . begin (); it != vec . end (); it ++ ) { cout << * it << endl ; } return 0 ; } /* output: 1 2 3 4 5 ===================== 4 4 my size is 3 how could I find 4113 1 4 5 */ \u4ece\u4e0a\u8ff0\u4ee3\u7801\u53ef\u4ee5\u89c1\u5f97\uff1a erase \u51fd\u6570\u4f20\u5165\u7684\u53c2\u6570\u548c\u8fd4\u56de\u503c\u7c7b\u578b\u90fd\u662f iterator \uff0c\u4f46\u662f\u4f60\u53ef\u4ee5\u9009\u62e9\u4e0d\u7528\u65b0\u7684 iterator \u63a5\u53d7\u8fd4\u56de\u503c\uff0c\u6bd4\u5982\u7b2c 15 \u884c\u3002 erase \u8fd4\u56de\u7684\u8fed\u4ee3\u5668\u6307\u5411\u7684\u5fc5\u5b9a\u662f\u88ab erase \u6389\u7684\u6240\u6709\u5143\u7d20\u4e4b\u540e\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002 \u6211\u4eec\u5df2\u7ecf\u77e5\u9053\uff0c\u5bf9\u4e8e vector \u4f7f\u7528 erase \uff0c\u4f1a\u4f7f\u5f97\u88ab erase \u7684\u5143\u7d20\u4e0e\u968f\u540e\u7684\u5143\u7d20\u7684\u8fed\u4ee3\u5668\u5168\u90e8\u5931\u6548\uff0c\u6545\u800c\u8fd9\u4e9b\u8bbf\u95ee\u90fd\u6ca1\u6709\u610f\u4e49\uff0c\u6bd4\u5982\u4e0a\u6587\u5bf9\u4e8e find \u7684\u8bbf\u95ee\uff0c\u7531\u4e8e find \u5df2\u7ecf\u662f\u91ce\u6307\u9488\u4e86\uff0c\u8fd9\u4e2a\u8bbf\u95ee\u6ca1\u6709\u5206\u6790\u7684\u610f\u4e49\u3002 \u6b64\u5904\u7ea0\u6b63\u5bf9\u4e8e\u6307\u9488\u7684\u957f\u671f\u9519\u8bef\u7406\u89e3 \u6307\u9488\u3001\u8fed\u4ee3\u5668\u6307\u5411\u7684\u4e00\u5b9a\u662f\u4e00\u4e2a\u53d8\u91cf\uff08\u5de6\u503c\uff0c\u5728\u5185\u5b58\u4e2d\u6709\u5bf9\u5e94\u7a7a\u95f4\u5373\u6709\u5730\u5740\uff09\uff0c\u800c\u4e0d\u80fd\u53ea\u662f\u4e00\u4e2a\u503c\uff08\u53f3\u503c\uff09\u3002 \u6545\u800c\u6307\u9488\u6307\u5411\u5730\u5740\u8fd9\u4e2a\u8bf4\u6cd5\u672c\u8eab\u5c31\u4e0d\u51c6\u786e\uff0c\u56e0\u4e3a\u50a8\u5b58\u67d0\u4e2a\u53d8\u91cf\u7684\u5185\u5b58\u7a7a\u95f4\u7684\u5730\u5740\u53ea\u662f\u4e00\u4e2a\u53f3\u503c\uff0c\u800c\u4e0d\u662f\u53d8\u91cf\u3002 \u53d8\u91cf A \u6784\u9020\u4e4b\u540e\uff0c\u50a8\u5b58 A \u7684\u5185\u5b58\u7a7a\u95f4\u7684\u5730\u5740\u5c31\u56fa\u5b9a\u4e86\uff0c\u6b64\u65f6\u5982\u679c\u6307\u9488 P \u6307\u5411 A \uff0c\u7b49\u4ef7\u4e8e\u6307\u5411\u4e86\u8fd9\u5757\u5730\u5740\uff0c\u7136\u800c\u6211\u4eec\u4ecd\u7136\u80fd\u591f\u8ba9 P \u6307\u9488\u6307\u5411\u65b0\u7684\u53d8\u91cf B \uff0c\u5374\u65e0\u6cd5\u6539\u53d8\u50a8\u5b58 A \u7684\u5185\u5b58\u7a7a\u95f4\u3002 \u56de\u5230 vec \u7684 erase \u51fd\u6570\uff0c\u6211\u4eec\u5df2\u7ecf\u660e\u786e\u4e86 erase \u51fd\u6570\u8fd4\u56de\u7684\u65b0\u8fed\u4ee3\u5668\u5c06\u4f1a\u6307\u5411\u88ab erase \u6389\u7684\u5143\u7d20\u4e4b\u540e\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002 erase \u64cd\u4f5c\u6709\u4e24\u79cd\u53ef\u80fd\uff0c\u7b2c\u4e00\u79cd\u4e0d\u4f1a\u53d1\u751f shrink\uff0c\u88ab\u6e05\u9664\u7684\u6570\u636e\u4e4b\u540e\u7684\u5143\u7d20\u5f80\u524d\u79fb\u52a8\uff0c\u586b\u8865\u4e4b\u524d\u88ab\u6e05\u9664\u7684\u5143\u7d20\u3002\u6bd4\u5982\u6211\u4f20\u5165 vec[2] \u7684\u8fed\u4ee3\u5668\uff0c\u53ea erase \u6389 vec[2] \uff0c\u90a3\u4e48\u539f\u672c\u4f4d\u4e8e vec[3] \u7684\u5143\u7d20\u5c31\u79fb\u52a8\u5230\u4e4b\u524d vec[2] \u6240\u5728\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u800c\u6211\u8fd4\u56de\u7684\u8fed\u4ee3\u5668\u4e00\u5b9a\u6307\u5411 vec[3] \uff0c\u6240\u4ee5\u770b\u4e0a\u53bb\u50cf\u662f\u8fd4\u56de\u7684\u8fed\u4ee3\u5668\u548c\u4f20\u5165\u7684\u8fed\u4ee3\u5668\u90fd\u6307\u5411\u4e86\u540c\u4e00\u4e2a\u5185\u5b58\u7a7a\u95f4\uff0c\u4f46\u662f\u8fd9\u662f\u663e\u7136\u9519\u8bef\u7684\u3002\u4e0d\u8fc7\u662f\u6307\u5411\u7684\u5143\u7d20\u78b0\u5de7\u5148\u540e\u5360\u7528\u4e86\u540c\u4e00\u5757\u5185\u5b58\u7a7a\u95f4\u3002 \u60c5\u51b5\u4e8c\uff0c erase \u5bfc\u81f4\u4e86 shrink \u7684\u53d1\u751f\u3002\u4e5f\u5c31\u662f\u8bf4 vec \u5bb9\u91cf\u51cf\u5c11\u7684\u65f6\u5019\u53ef\u80fd\u4f1a\u53d1\u751f shrink\uff0c\u53ef\u80fd\u6574\u4e2a vector \u88ab\u642c\u5230\u53e6\u5916\u4e00\u4e2a\u8f83\u5c0f\u7684\u5185\u5b58\u7a7a\u95f4\u3002\u8fd9\u4e2a\u65f6\u5019\uff0c erase \u8fd4\u56de\u7684\u6307\u9488\u4ecd\u7136\u6307\u5411\u88ab erase \u6389\u7684\u6240\u6709\u5143\u7d20\u4e4b\u540e\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u50a8\u5b58\u8fd9\u4e2a\u5143\u7d20\u7684\u5185\u5b58\u7a7a\u95f4\u5730\u5740\u53ef\u80fd\u548c\u4e4b\u524d\u7684\u5b8c\u5168\u6ca1\u6709\u5173\u7cfb\u3002 \u4e00\u4e2a\u7edd\u5bf9\u5b89\u5168\u7684\u51c6\u5219\uff1a \u7406\u89e3\u6e05\u695a\u8fed\u4ee3\u5668\u6240\u6307\u7684\u5bf9\u8c61\uff0c\u5728\u4fee\u6539\u8fc7\u5bb9\u5668\u540e\uff0c\u6362\u7528\u65b0\u7684\u8fed\u4ee3\u5668\uff0c\u4e0d\u4f7f\u7528\u4e4b\u524d\u7684\u8fed\u4ee3\u5668\u3002 \u5728 C++ Reference \u4e2d\uff0c\u5bb9\u5668\u7684\u4fee\u6539\u64cd\u4f5c\u6709\u4e00\u9879 Iterator validity\uff0c\u8868\u793a\u8be5\u64cd\u4f5c\u662f\u5426\u4f1a\u5f15\u53d1\u8fed\u4ee3\u5668\u5931\u6548\u3002\u82e5\u4fee\u6539\u5bb9\u5668\u540e\u4ecd\u8981\u4f7f\u7528\u539f\u6765\u7684\u8fed\u4ee3\u5668\uff0c\u67e5\u6587\u6863\u786e\u5b9a\u8fed\u4ee3\u5668\u662f\u5426\u6709\u6548\u3002 http://www.cplusplus.com/reference/algorithm/find/?kw=find list \u5bb9\u5668 \u00b6 \u94fe\u8868\u5bb9\u5668\uff08\u5e95\u5c42\u5b9e\u73b0\u662f\u53cc\u5411\u94fe\u8868\uff09\u3002 1 2 3 4 5 6 7 8 #include <list> #include <algorithm> std :: list < int > l ; // \u5b9a\u4e49 l . push_front ( 1 ); // \u63d2\u5165\u524d\u7aef l . push_back ( 2 ); // \u63d2\u5165\u672b\u7aef std :: find ( l . begin (), l . end (), 2 ); // \u8fd4\u56de\u8fed\u4ee3\u5668 l . insert ( it , 4 ); // it \u4e3a\u8fed\u4ee3\u5668\uff0c\u5c06 4 \u63d2\u5165\u5230 it \u6307\u5411\u7684\u5143\u7d20\u524d\u9762 \u6ce8\u610f\uff0c\u5bf9 list \u4f7f\u7528\u7684 find \u51fd\u6570\uff0c\u9700\u8981\u5305\u542b\u5934\u6587\u4ef6 <algorithm> \u3002\u5982\u679c find \u51fd\u6570\u6ca1\u6709\u641c\u7d22\u5230\u60f3\u8981\u7684\u5bf9\u8c61\uff0c\u4f1a\u8fd4\u56de\u6307\u5411 end \u7684\u6307\u9488\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 #include <iostream> using namespace std ; #include <list> #include <algorithm> std :: list < int > l ; // \u5b9a\u4e49 l . push_front ( 1 ); // \u63d2\u5165\u524d\u7aef l . push_back ( 2 ); // \u63d2\u5165\u672b\u7aef l . push_back ( 5 ); // \u63d2\u5165\u672b\u7aef l . push_front ( 100 ); // \u63d2\u5165\u524d\u7aef l . push_back ( 100 ); // \u63d2\u5165\u672b\u7aef l . push_back ( 2 ); // \u63d2\u5165\u672b\u7aef auto it = std :: find ( l . begin (), l . end (), 2 ); // \u8fd4\u56de\u8fed\u4ee3\u5668 l . insert ( it , 4 ); // it \u4e3a\u8fed\u4ee3\u5668\uff0c\u5c06 4 \u63d2\u5165\u5230 it \u6307\u5411\u7684\u5143\u7d20\u524d\u9762 cout << * it << endl ; cout << \"==========================\" << endl ; for ( auto it = l . begin (); it != l . end (); it ++ ) { cout << * it << endl ; } /* output: 2 ========================== 100 1 4 2 5 100 2 */ \u4e0a\u8ff0\u4f8b\u5b50\u518d\u6b21\u9a8c\u8bc1\u4e86\u4e4b\u524d\u5bf9\u4e8e\u8fed\u4ee3\u5668\u7684\u7406\u89e3\u3002\u6211\u7684 it \u8fed\u4ee3\u5668\u6307\u5411\u7684\u6c38\u8fdc\u662f\u7b2c\u4e00\u4e2a 2 \u8fd9\u4e2a\u5143\u7d20\u3002\u867d\u7136\u6211\u5728 it \u524d\u9762\u63d2\u5165\u4e86 4 \uff0c\u7136\u540e 2 \u8fd9\u4e2a\u5143\u7d20\u5f80\u540e\u79fb\u8d70\u4e86\uff0c\u4f46\u662f it \u4ecd\u7136\u6307\u5411 2 \u3002\u53e6\u5916\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u53d1\u73b0\uff0c list \u7684 find \u529f\u80fd\u9047\u89c1\u591a\u4e2a\u76f8\u540c\u5143\u7d20\u65f6\uff0c\u4f1a\u9ed8\u8ba4\u8fd4\u56de\u4ece\u524d\u5230\u540e\u7b2c\u4e00\u4e2a\u7b26\u5408\u6761\u4ef6\u7684\u5143\u7d20\u7684\u8fed\u4ee3\u5668\u3002 \u5982\u679c list \u7684\u6210\u5458\u662f\u81ea\u5b9a\u4e49\u7684 class \u6216 struct \uff0c\u53ef\u4ee5\u901a\u8fc7\u91cd\u8f7d operator== \u548c\u81ea\u5df1\u5b9a\u4e49\u6784\u9020\u51fd\u6570\u6765\u6784\u9020 find \u3002 \u6ce8\u610f\uff1a == \u8fd0\u7b97\u7b26\u91cd\u8f7d\u7684\u53c2\u6570\u5fc5\u987b\u662f\u5e38\u91cf\u5de6\u503c\u5f15\u7528\u200b 1 2 3 4 5 6 7 8 9 10 class myint { int i ; bool operator == ( cosnt myint & other ) { return i == other . i ; } myint ( int t ) : i ( t ) { }; }; int main () { list < myint > test ; std :: find ( test . begin (), test . end (), myint ( 2 )); // \u67e5\u627e test \u91cc\u9762\u6709\u6ca1\u6709\u6210\u5458 i \u4e3a 2 \u7684 myint } \u7ed3\u5408\u94fe\u8868\u7684\u539f\u7406\u5f88\u5bb9\u6613\u5c31\u80fd\u7406\u89e3\u4ee5\u4e0b\u7279\u70b9\uff1a \u4e0d\u652f\u6301\u4e0b\u6807\u7b49\u968f\u673a\u8bbf\u95ee\uff0c\u5373\u65e0\u6cd5\u4f7f\u7528\u7c7b\u4f3c test[2] \u7684\u8bed\u53e5\u3002 \u6545\u800c\u60f3\u8981\u904d\u5386 list \uff0c\u5fc5\u987b\u7528\u8fed\u4ee3\u5668\u3002 \u652f\u6301\u9ad8\u901f\u7684\u5728\u4efb\u610f\u4f4d\u7f6e\u63d2\u5165\u3001\u5220\u9664\u6570\u636e\uff08\u94fe\u8868\u5e38\u5e38\u5728\u9700\u8981\u4e0d\u65ad\u63d2\u5165\u5220\u9664\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\uff09\u3002 \u5176\u8bbf\u95ee\u4e3b\u8981\u4f9d\u8d56\u8fed\u4ee3\u5668\u3002 \u64cd\u4f5c\u4e0d\u4f1a\u5bfc\u81f4\u8fed\u4ee3\u5668\u5931\u6548\uff08\u9664\u6307\u5411\u88ab\u5220\u9664\u7684\u5143\u7d20\u7684\u8fed\u4ee3\u5668\u5916\uff09\u3002 \u5173\u4e8e list \u7684\u66f4\u591a\u51fd\u6570\u53c2\u89c1\uff1a https://blog.csdn.net/yas12345678/article/details/52601578 set \u5173\u8054\u5bb9\u5668 \u00b6 \u4e0d\u91cd\u590d\u5143\u7d20\u6784\u6210\u7684\u65e0\u5e8f\u96c6\u5408\uff1b\u5185\u90e8\u6309\u5927\u5c0f\u987a\u5e8f\u6392\u5217\uff0c\u6bd4\u8f83\u5668\u7531\u51fd\u6570\u5bf9\u8c61 compare \u5b8c\u6210\u3002\u65e0\u5e8f\u662f\u6307\u4e0d\u4fdd\u6301\u63d2\u5165\u987a\u5e8f\uff08\u4e0d\u540c\u4e8e vector \u548c list \uff09\uff0c\u5bb9\u5668\u5185\u90e8\u6392\u5217\u987a\u5e8f\u662f\u6839\u636e\u5143\u7d20\u5927\u5c0f\u6392\u5217\u3002 1 2 3 4 5 std :: set < int > s ; // \u5b9a\u4e49 s . insert ( 1 ); s . find ( 1 ); // \u8fd4\u56de\u8fed\u4ee3\u5668\uff08\u4f4d\u7f6e\uff09 s . erase ( s . find ( 1 )); // \u5bfc\u81f4\u88ab\u5220\u9664\u5143\u7d20\u7684\u8fed\u4ee3\u5668\u5931\u6548\uff08\u8fd9\u53e5\u8bdd\u662f\u5220\u9664\u4e86\u96c6\u5408\u91cc\u7684\u5143\u7d20 1\uff09 s . count ( 1 ); // 1\u7684\u4e2a\u6570\uff0c\u603b\u662f 0 \u6216 1\uff08\u5b58\u5728\u6027\uff09 map \u5173\u8054\u5bb9\u5668 \u00b6 map \u7684\u503c\u7c7b\u578b\u4e3a pair<key, val> \u3002 map \u4e2d\u7684\u5143\u7d20 key \u4e92\u4e0d\u76f8\u540c\uff0c\u9700\u8981 key \u5b58\u5728\u6bd4\u8f83\u5668\u3002 \u53ef\u4ee5\u901a\u8fc7\u4e0b\u6807\u8bbf\u95ee\uff08\u5373\u4f7f key \u4e0d\u662f\u6574\u6570\uff09\u3002 \u4e0b\u6807\u8bbf\u95ee\u65f6\u5982\u679c\u5143\u7d20\u4e0d\u5b58\u5728\uff0c\u5219\u521b\u5efa\u5bf9\u5e94\u5143\u7d20\uff0c\u800c\u4e0d\u4f1a\u63d0\u793a\u8bbf\u95ee\u9519\u8bef \u3002\u4e5f\u53ef\u4f7f\u7528 insert \u51fd\u6570\u8fdb\u884c\u63d2\u5165\u3002 \u6240\u8c13\u7684\u521b\u5efa\u5bf9\u5e94\u5143\u7d20\uff1a\u6bd4\u5982 map \u5305\u542b\u7684\u5143\u7d20\u4e3a pair<key, T> \uff0c\u90a3\u4e48\u627e\u4e0d\u5230 key \uff0c\u5c31\u4f1a\u6784\u9020 T() \uff0c\u8c03\u7528\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u3002 1 2 3 4 template < class Key , class T , class Compare = std :: less < Key > , class Allocator = std :: allocator < std :: pair < const Key , T > > \u6bcf\u4e2a\u5143\u7d20\u7531\u4e24\u4e2a\u6570\u636e\u9879\u7ec4\u6210\uff0c map \u5c06\u4e00\u4e2a\u6570\u636e\u9879\u6620\u5c04\u5230\u53e6\u4e00\u4e2a\u6570\u636e\u9879\u4e2d\u3002 1 2 3 4 5 6 7 8 9 10 #include <string> #include <map> int main () { std :: map < std :: string , int > s ; // \u521b\u5efa\u4e86 key \u4e3a string \u7c7b\u578b\uff0cval \u4e3a int \u7c7b\u578b\u7684 map s [ \"oop\" ] = 1 ; // \u63d2\u5165\u65b9\u5f0f 1 // \u5982\u679c \"oop\" \u6709\u5bf9\u5e94\u7684 val\uff0c\u90a3\u5c31\u662f\u8d4b\u503c\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u63d2\u5165\uff0c\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u6784\u9020 // \u770b\u8d77\u6765\u50cf\u662f\u91cd\u8f7d\u4e86 []\uff0c\u4f7f\u5f97\u4e0b\u6807\u4e0d\u662f int \u4e5f\u53ef\u4ee5\u8bbf\u95ee\uff0c\u8fd9\u662f map \u7c7b\u578b\u652f\u6301\u7684\u64cd\u4f5c\u3002\u5728 [] \u4e2d\u7528 key \u76f4\u63a5\u8bbf\u95ee val s . insert ( std :: make_pair ( std :: string ( \"oop\" ), 1 )); // \u63d2\u5165\u65b9\u5f0f 2 return 0 ; } map \u652f\u6301\u7528 key \u76f4\u63a5\u8bbf\u95ee\u5bf9\u5e94\u8fed\u4ee3\u5668\uff1a 1 2 3 4 s . find ( key ); // \u67e5\u8be2\uff0c\u4ec5\u9700\u8981\u63d0\u4f9b key \u503c\uff0c\u8fd4\u56de\u8fed\u4ee3\u5668\u3002 s . count ( key ); // \u7edf\u8ba1\uff0c\u4ec5\u9700\u8981\u63d0\u4f9b key \u503c\uff0c\u8fd4\u56de 0 \u6216 1\u3002 s . erase ( it ); // it \u662f\u8fed\u4ee3\u5668\uff0c\u5220\u9664 it \u6307\u5411\u7684\u5143\u7d20\uff0c\u5bfc\u81f4 it \u5931\u6548 s . erase ( s . find ( key )); map \u5e38\u7528\u4f5c\u8fc7\u5927\u7684\u7a00\u758f\u6570\u7ec4\u6216\u4ee5\u5b57\u7b26\u4e32\u4e3a\u4e0b\u6807\u7684\u6570\u7ec4\u3002 1 2 3 4 5 6 7 8 9 10 #include <string> #include <map> int main () { std :: map < std :: string , std :: string > M ; M [ \"fp\" ] = \"c\" ; M [ \"oop\" ] = M [ \"fp\" ] + \"++\" ; // M[\"oop\"] = \"c++\" // string \u7684\u795e\u5947\u64cd\u4f5c\uff1a\"a\" + \"b\" = \"ab\" return 0 ; } set \u548c map \u6240\u7528\u5230\u7684\u6570\u636e\u7ed3\u6784\u90fd\u662f\u7ea2\u9ed1\u6811\uff08\u4e00\u79cd\u4e8c\u53c9\u5e73\u8861\u6811\uff09\uff0c\u5176\u51e0\u4e4e\u6240\u6709\u64cd\u4f5c\u590d\u6742\u5ea6\u5747\u4e3a O(\\log n) O(\\log n) \u3002 \u603b\u7ed3 \u00b6 \u5e8f\u5217\u5bb9\u5668\uff08\u6709\u987a\u5e8f\uff09\u548c\u5173\u8054\u5bb9\u5668\uff08\u65e0\u987a\u5e8f\uff09\u7684\u533a\u522b \u00b6 \u5e8f\u5217\u5bb9\u5668\uff1a vector \u3001 list \u5173\u8054\u5bb9\u5668\uff1a set \u3001 map \u5e8f\u5217\u5bb9\u5668\u4e0e\u5173\u8054\u5bb9\u5668\u7684\u533a\u522b\uff1a \u5e8f\u5217\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\u6709\u987a\u5e8f\uff0c\u53ef\u4ee5\u6309\u987a\u5e8f\u8bbf\u95ee\u3002 \u5173\u8054\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\u65e0\u987a\u5e8f\uff0c\u53ef\u4ee5\u6309\u6570\u503c\uff08\u5927\u5c0f\uff09\u8bbf\u95ee\u3002 vector \u4e2d\u63d2\u5165\u5220\u9664\u64cd\u4f5c\u4f1a\u4f7f\u64cd\u4f5c\u4f4d\u7f6e\u4e4b\u540e\u5168\u90e8\u7684\u8fed\u4ee3\u5668\u5931\u6548\u3002 \u5176\u4ed6\u5bb9\u5668\u4e2d\u53ea\u6709\u88ab\u5220\u9664\u5143\u7d20\u7684\u8fed\u4ee3\u5668\u5931\u6548\u3002 \u9009\u62e9\u4f9d\u636e \u00b6 \u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u5bb9\u5668\u7684\u9009\u62e9\u53ef\u80fd\u9700\u8981\u7efc\u5408\u8003\u8651\u591a\u65b9\u9762\u56e0\u7d20\uff0c\u5305\u62ec\u7b97\u6cd5\u590d\u6742\u5ea6\uff0c\u529f\u80fd\u9700\u6c42\uff0c\u5185\u5b58\u5206\u914d\u7b56\u7565\u7b49\uff0c\u4e0b\u9762\u63d0\u4f9b\u51e0\u4e2a\u53ef\u4f9b\u53c2\u8003\u4f46\u4e0d\u5b8c\u6574\u7684\u89d2\u5ea6\uff08\u53ef\u4ee5\u8fdb\u4e00\u6b65\u9605\u8bfb\u300aEffective STL\u300b\uff09\uff1a \u7b97\u6cd5\u590d\u6742\u5ea6\uff1a\u5bf9\u4e8e\u5e8f\u5217\u5bb9\u5668\u800c\u8a00\uff0c\u5982\u679c\u5728\u5e8f\u5217\u4e2d\u95f4\u5b58\u5728\u9891\u7e41\u7684\u63d2\u5165\u6216\u5220\u9664\u64cd\u4f5c\uff0c\u4f7f\u7528 list \uff0c\u5426\u5219\u4f7f\u7528 vector \uff08\u6216 deque \uff09 \u5143\u7d20\u7684\u987a\u5e8f\uff1a\u5982\u679c\u9700\u8981\u5728\u5bb9\u5668\u7684\u4efb\u610f\u4f4d\u7f6e\u63d2\u5165\u65b0\u5143\u7d20\uff0c\u9700\u8981\u9009\u62e9\u5e8f\u5217\u5bb9\u5668\u800c\u4e0d\u662f\u5173\u8054\u5bb9\u5668 \u5143\u7d20\u67e5\u627e\u901f\u5ea6\uff1a\u5982\u5143\u7d20\u7684\u67e5\u627e\u901f\u5ea6\u662f\u5173\u952e\u7684\u8003\u8651\u56e0\u7d20\uff0c\u53ef\u4ee5\u8003\u8651\u6392\u5e8f\u7684 vector \u6216\u5173\u8054\u5bb9\u5668 set \u3001 map \u7b49 \u8fed\u4ee3\u5668\u3001\u6307\u9488\u6216\u5f15\u7528\u5931\u6548\uff1a\u5982\u679c\u5e0c\u671b\u5728\u5143\u7d20\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u540e\uff0c\u8fed\u4ee3\u5668\u3001\u6307\u9488\u6216\u5f15\u7528\u5931\u6548\u7684\u60c5\u51b5\u5c3d\u53ef\u80fd\u5c11\u51fa\u73b0\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528 list \u548c\u5173\u8054\u5bb9\u5668 set \u3001 map \u7b49","title":"\u6a21\u677f\u8fdb\u9636\u4e0e STL \u5165\u95e8"},{"location":"languages/c-oop/templates-and-intro-to-stl/#stl","text":"","title":"\u6a21\u677f\u8fdb\u9636\u4e0e STL \u5165\u95e8"},{"location":"languages/c-oop/templates-and-intro-to-stl/#_1","text":"","title":"\u547d\u540d\u7a7a\u95f4"},{"location":"languages/c-oop/templates-and-intro-to-stl/#_2","text":"\u4e3a\u4e86\u907f\u514d\u5728\u5927\u89c4\u6a21\u7a0b\u5e8f\u7684\u8bbe\u8ba1\u4e2d\uff0c\u4ee5\u53ca\u5728\u7a0b\u5e8f\u5458\u4f7f\u7528\u5404\u79cd\u5404\u6837\u7684 C++ \u5e93\u65f6\uff0c\u6807\u8bc6\u7b26\u7684\u547d\u540d\u53d1\u751f\u51b2\u7a81\uff0c\u6807\u51c6 C++ \u5f15\u5165\u4e86\u5173\u952e\u5b57 namespace \uff08\u547d\u540d\u7a7a\u95f4\uff09\uff0c\u53ef\u4ee5\u66f4\u597d\u5730\u63a7\u5236\u6807\u8bc6\u7b26\u7684\u4f5c\u7528\u57df\u3002 \u6807\u51c6 C++ \u5e93\uff08\u4e0d\u5305\u62ec\u6807\u51c6 C \u5e93\uff09\u4e2d\u6240\u5305\u542b\u7684\u6240\u6709\u5185\u5bb9\uff08\u5305\u62ec\u5e38\u91cf\u3001\u53d8\u91cf\u3001\u7ed3\u6784\u3001\u7c7b\u548c\u51fd\u6570\u7b49\uff09\u90fd\u88ab\u5b9a\u4e49\u5728\u547d\u540d\u7a7a\u95f4 std \uff08\u5373\u6807\u51c6\u547d\u540d\u7a7a\u95f4\uff09\u4e2d\u3002\u4f8b\u5982\uff1a cout \u3001 cin \u3001 vector \u3001 set \u3001 map \u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c namespace \u672c\u8eab\u662f\u4e00\u79cd\u5173\u952e\u5b57\uff0c\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u547d\u540d\u7a7a\u95f4\uff0c\u800c std \u4ec5\u4ec5\u662f\u5df2\u7ecf\u88ab\u5b9a\u4e49\u7684\u4e00\u4e2a\u547d\u540d\u7a7a\u95f4\u3002","title":"\u5b9a\u4e49"},{"location":"languages/c-oop/templates-and-intro-to-stl/#_3","text":"","title":"\u4f8b\u5b50"},{"location":"languages/c-oop/templates-and-intro-to-stl/#_4","text":"1 2 3 namespace A { int x , y ; }","title":"\u81ea\u5b9a\u4e49\u547d\u540d\u7a7a\u95f4"},{"location":"languages/c-oop/templates-and-intro-to-stl/#_5","text":"1 2 3 A :: x = 3 ; A :: y = 6 ; // \u5bf9\u4eba\u4e3a\u5b9a\u4e49\u7684\u547d\u540d\u7a7a\u95f4 A \u5185\u7684 x\u3001y \u8fdb\u884c\u8d4b\u503c","title":"\u4f7f\u7528\u547d\u540d\u7a7a\u95f4"},{"location":"languages/c-oop/templates-and-intro-to-stl/#using","text":"\u4f7f\u7528 using \u58f0\u660e\u7b80\u5316\u547d\u540d\u7a7a\u95f4\u4f7f\u7528\u3002 1 2 3 4 // \u4f7f\u7528\u6574\u4e2a\u547d\u540d\u7a7a\u95f4\uff1a\u6240\u6709\u6210\u5458\u90fd\u76f4\u63a5\u53ef\u7528 using namespace A ; x = 3 ; y = 6 ; \u4ee5\u53ca\uff1a 1 2 3 // \u4f7f\u7528\u90e8\u5206\u6210\u5458\uff1a\u6240\u9009\u6210\u5458\u53ef\u76f4\u63a5\u4f7f\u7528 using A :: x ; x = 3 ; A :: y = 6 ; \u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c\u90fd\u4e0d\u5e94\u51fa\u73b0\u547d\u540d\u51b2\u7a81\u3002","title":"using \u7533\u660e"},{"location":"languages/c-oop/templates-and-intro-to-stl/#stl_1","text":"","title":"STL \u521d\u6b65"},{"location":"languages/c-oop/templates-and-intro-to-stl/#_6","text":"\u6807\u51c6\u6a21\u677f\u5e93\uff08\u82f1\u6587\uff1aStandard Template Library\uff0c\u7f29\u5199\uff1aSTL\uff09\uff0c\u662f\u4e00\u4e2a\u9ad8\u6548\u7684 C++ \u8f6f\u4ef6\u5e93\uff0c\u5b83\u88ab\u5bb9\u7eb3\u4e8e C++ \u6807\u51c6\u7a0b\u5e8f\u5e93 C++ Standard Library \u4e2d\u3002\u5176\u4e2d\u5305\u542b4\u4e2a\u7ec4\u4ef6\uff0c\u5206\u522b\u4e3a \u7b97\u6cd5 \u3001 \u5bb9\u5668 \u3001 \u51fd\u6570 \u3001 \u8fed\u4ee3\u5668 \u3002\u8fd9\u4e9b\u90fd\u662f\u57fa\u4e8e\u6a21\u677f\u7f16\u5199\u800c\u6210\u3002 \u5173\u952e\u7406\u5ff5\uff1a\u5c06\u201c\u5728\u6570\u636e\u4e0a\u6267\u884c\u7684\u64cd\u4f5c\u201d\u4e0e\u201c\u8981\u6267\u884c\u64cd\u4f5c\u7684\u6570\u636e\u201d\u5206\u79bb\u3002 STL \u7684\u547d\u540d\u7a7a\u95f4\u662f std \uff0c\u4e00\u822c\u4f7f\u7528 std::name \u6765\u4f7f\u7528 STL \u7684\u51fd\u6570\u6216\u5bf9\u8c61\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 using namespace std \u6765\u5f15\u5165 STL \u7684\u547d\u540d\u7a7a\u95f4\u3002 1 using std :: stringc ; // \u4e0d\u63a8\u8350\u5728\u5927\u578b\u5de5\u7a0b\u4e2d\u4f7f\u7528\uff0c\u5bb9\u6613\u6c61\u67d3\u547d\u540d\u7a7a\u95f4 \u5173\u4e8e STL \u7684\u6587\u6863\u548c\u4f8b\u5b50\u53ef\u4ee5\u5728\u4ee5\u4e0b\u7f51\u5740\u67e5\u8be2 http://www.cplusplus.com/ \u3002 \u591a\u5199\u591a\u67e5\u591a\u7528\uff0c\u662f\u5b66\u4e60 STL \u5e93\u7684\u6700\u597d\u65b9\u6cd5\u3002","title":"\u5b9a\u4e49"},{"location":"languages/c-oop/templates-and-intro-to-stl/#stl_2","text":"\u5bb9\u5668\u662f\u5305\u542b\u3001\u653e\u7f6e\u6570\u636e\u7684\u5de5\u5177\u3002\u901a\u5e38\u4e3a\u6570\u636e\u7ed3\u6784\u3002\u5305\u62ec\uff1a \u7b80\u5355\u5bb9\u5668\uff08simple container\uff09 \u5e8f\u5217\u5bb9\u5668\uff08sequence container\uff09 \u5173\u7cfb\u5bb9\u5668\uff08associative container\uff09","title":"STL \u5bb9\u5668"},{"location":"languages/c-oop/templates-and-intro-to-stl/#pair","text":"1 2 3 4 5 6 7 8 9 10 11 12 // \u6700\u7b80\u5355\u7684\u5bb9\u5668\uff0c\u7531\u4e24\u4e2a\u5355\u72ec\u6570\u636e\u7ec4\u6210 template < class T1 , class T2 > struct pair { T1 first ; T2 second ; // \u82e5\u5e72\u5176\u5b83\u51fd\u6570 }; // \u901a\u8fc7 first\u3001second \u4e24\u4e2a\u6210\u5458\u53d8\u91cf\u83b7\u53d6\u6570\u636e std :: pair < int , int > t ; t . first = 4 ; t . second = 5 ; \u4e00\u4e9b\u8f85\u52a9\u51fd\u6570\uff1a 1 2 3 4 // \u521b\u5efa\uff1a\u4f7f\u7528\u51fd\u6570make_pair auto t = std :: make_pair ( \"abc\" , 7.8 ); // \u81ea\u52a8\u63a8\u5bfc\u6210\u5458\u7c7b\u578b // \u6b64\u5904\u63a8\u5bfc\u51fa\u7684 t \u7684\u7c7b\u578b\u5c31\u662f pair \u7c7b\u578b 1 2 3 4 5 // \u652f\u6301\u5c0f\u4e8e\u3001\u7b49\u4e8e\u7b49\u6bd4\u8f83\u8fd0\u7b97\u7b26\u3002 // \u5148\u6bd4\u8f83 first\uff0c\u540e\u6bd4\u8f83 second // \u8981\u6c42\u6210\u5458\u7c7b\u578b\u652f\u6301\u6bd4\u8f83 std :: make_pair ( 1 , 4 ) < std :: make_pair ( 2 , 3 ); std :: make_pair ( 1 , 4 ) > std :: make_pair ( 1 , 2 ); 1 2 3 4 5 6 7 8 9 #include <string> int main () { std :: pair < std :: string , double > p1 ( \"Alice\" , 90.5 ); // \u624b\u5de5\u6307\u5b9a\u7c7b\u578b\u521d\u59cb\u5316 std :: pair < std :: string , double > p2 ; p2 . first = \"Bob\" ; p2 . second = 85.0 ; // \u5148\u5b9a\u4e49\uff0c\u518d\u8d4b\u503c auto p3 = std :: make_pair ( \"David\" , \"95.0\" ); // \u81ea\u52a8\u63a8\u5bfc\u7c7b\u578b\u521d\u59cb\u5316 return 0 ; }","title":"pair \u5bb9\u5668"},{"location":"languages/c-oop/templates-and-intro-to-stl/#tuple","text":"C++11 \u65b0\u589e\uff0c\u8868\u793a\u7531\u82e5\u5e72\u6210\u5458\u7ec4\u6210\u7684\u5143\u7ec4\u7c7b\u578b\u3002 1 2 template < class Types , ... > class tuple ; \u901a\u8fc7 std::get \u51fd\u6570\u83b7\u53d6\u6570\u636e\u3002 1 2 v0 = std :: get < 0 > ( tuple1 ); v1 = std :: get < 1 > ( tuple2 ); \u5176\u4e0b\u6807\u9700\u8981\u5728\u7f16\u8bd1\u65f6\u786e\u5b9a\uff1a\u4e0d\u80fd\u8bbe\u5b9a\u8fd0\u884c\u65f6\u53ef\u53d8\u7684\u957f\u5ea6\uff0c\u4e0d\u80fd\u5f53\u505a\u52a8\u6001\u6570\u7ec4\u3002 1 2 int i = 0 ; v = std :: get < i > ( tuple ); // \u7f16\u8bd1\u9519\u8bef \u793a\u4f8b\u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 #include <iostream> #include <tuple> using std :: tuple ; using std :: string ; int main () { std :: tuple < int , double , string > t3 = { 1 , 2.0 , \"3\" }; std :: get < 0 > ( t3 ) = 4 ; std :: cout << std :: get < 1 > ( t3 ) << std :: endl ; std :: cout << std :: get < 0 > ( t3 ) << std :: endl ; int i ; double d ; string s ; std :: tie ( i , d , s ) = t3 ; i = 10 ; std :: cout << i << std :: endl ; std :: cout << std :: get < 0 > ( t3 ) << std :: endl ; } /* output: 2 4 10 4 */ \u4ece\u4e0a\u8ff0\u4ee3\u7801\u53ef\u4ee5\u770b\u51fa\uff0c\u5b9e\u9645\u4e0a get \u51fd\u6570\u8fd4\u56de\u7684\u662f tuple \u7684\u67d0\u4e2a\u5143\u7d20\u7684\u5de6\u503c\u5f15\u7528\uff0c\u53ef\u4ee5\u8d4b\u503c\uff0c\u4e5f\u53ef\u4ee5\u88ab\u8f93\u51fa\u3002\u800c tie \u51fd\u6570\u5b9e\u9645\u4e0a\u6ca1\u6709\u8fd4\u56de\u503c\uff0c\u4ec5\u4ec5\u662f\u5b8c\u6210\u4e86\u5bf9\u5e94\u7684\u7b80\u5355\u8d4b\u503c\uff0c\u5e76\u4e0d\u662f\u751f\u6210\u5de6\u503c\u5f15\u7528\uff0c\u6539\u53d8 i \u5e76\u4e0d\u80fd\u6539\u53d8 tuple \u3002 tuple \u7684\u610f\u4e49\uff0c\u7528\u4e8e\u51fd\u6570\u591a\u8fd4\u56de\u503c\u4f20\u9012\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 #include <tuple> #include <iostream> std :: tuple < int , double > f ( int x ) { return std :: make_tuple ( x , double ( x ) / 2 ); } int main () { int xval ; double half_x ; std :: tie ( xval , half_x ) = f ( 7 ); std :: cout << xval << std :: endl ; return 0 ; } /* output: 7 */ \u4f5c\u4e3a tuple \u7684\u7279\u4f8b\uff0c pair \u53ef\u7528\u4e8e\u4e24\u4e2a\u8fd4\u56de\u503c\u7684\u4f20\u9012\u3002\u9664\u6b64\u4e4b\u5916\uff0c pair \u5728 map \u4e2d\u5927\u91cf\u4f7f\u7528\u3002","title":"tuple \u5bb9\u5668"},{"location":"languages/c-oop/templates-and-intro-to-stl/#vector","text":"\u4f1a\u81ea\u52a8\u6269\u5c55\u5bb9\u91cf\u7684\u6570\u7ec4\uff0c\u4ee5\u5faa\u5e8f\u7684\u65b9\u5f0f\u7ef4\u62a4\u53d8\u91cf\u96c6\u5408\u3002 1 2 template < class T , class Allocator = std :: allocator < T >> class vector ; STL \u4e2d\u6700\u57fa\u672c\u7684\u5e8f\u5217\u5bb9\u5668\uff0c\u63d0\u4f9b\u6709\u6548\u3001\u5b89\u5168\u7684\u6570\u7ec4\u4ee5\u66ff\u4ee3 C \u8bed\u8a00\u4e2d\u539f\u751f\u6570\u7ec4\u3002\u5141\u8bb8\u76f4\u63a5\u4ee5\u4e0b\u6807\u8bbf\u95ee\uff0c\u8bbf\u95ee\u901f\u5ea6\u5feb\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 #include <vector> using namespace std ; int main () { std :: vector < int > x ; // \u521b\u5efa x . size (); // \u83b7\u53d6\u5f53\u524d\u6570\u7ec4\u957f\u5ea6 x . clear (); // \u6e05\u7a7a x . push_back ( 1 ); // \u5728\u672b\u5c3e\u6dfb\u52a0 1 x . pop_back (); // \u5220\u9664 x . insert ( x . begin () + 1 , 5 ); // \u5728\u4e2d\u95f4\u6dfb\u52a0\uff08\u4f4e\u901f\uff09 x . erase ( x . begin () + 1 ); // \u5728\u4e2d\u95f4\u5220\u9664\uff08\u4f4e\u901f\uff09 return 0 ; }","title":"vector \u5bb9\u5668"},{"location":"languages/c-oop/templates-and-intro-to-stl/#_7","text":"\u4e00\u79cd\u68c0\u67e5\u5bb9\u5668\u5185\u5143\u7d20\u5e76\u904d\u5386\u5143\u7d20\u7684\u6570\u636e\u7c7b\u578b\u3002 \u63d0\u4f9b\u4e00\u79cd\u65b9\u6cd5\u987a\u5e8f\u8bbf\u95ee\u4e00\u4e2a\u805a\u5408\u5bf9\u8c61\u4e2d\u5404\u4e2a\u5143\u7d20, \u800c\u53c8\u4e0d\u9700\u66b4\u9732\u8be5\u5bf9\u8c61\u7684\u5185\u90e8\u8868\u793a\u3002 \u4e3a\u904d\u5386\u4e0d\u540c\u7684\u805a\u5408\u7ed3\u6784\uff08\u9700\u62e5\u6709\u76f8\u540c\u7684\u57fa\u7c7b\uff09\u63d0\u4f9b\u4e00\u4e2a\u7edf\u4e00\u7684\u63a5\u53e3\u3002 \u5bf9\u904d\u5386\u5143\u7d20\u4f7f\u7528\u7c7b\u4f3c\u6307\u9488\u3002 \u4ee5 vector \u4e3a\u4f8b\uff1a 1 vector < int >:: iterator iter ; \u5b9a\u4e49\u4e86\u4e00\u4e2a\u540d\u4e3a iter \u7684\u53d8\u91cf\uff0c\u5b83\u7684\u6570\u636e\u7c7b\u578b\u662f\u7531 vector<int> \u5b9a\u4e49\u7684 iterator \u7c7b\u578b\u3002 1 2 x . begin (); x . end (); begin \u8fd4\u56de vector \u4e2d\u521d\u59cb\u4f4d\u7f6e\u7684\u8fed\u4ee3\u5668\uff08\u6307\u9488\uff09\uff0c\u5373 x[0] \u3002 end \u51fd\u6570\u8fd4\u56de x[x.size()] \uff0c\u6ce8\u610f\u5230 x.size() \u5bf9\u5e94\u7684\u4e0d\u662f\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u800c\u662f\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4e4b\u540e\u3002 \u6545\u800c\u7ed3\u5408 begin() \u548c end() \u80fd\u591f\u5b9e\u73b0\u904d\u5386\u6240\u6709\u5143\u7d20\uff0c\u5373\u904d\u5386\u4e00\u4e2a [0, size()) \u200b \u5de6\u95ed\u53f3\u5f00\u533a\u95f4\u3002 \u8fed\u4ee3\u5668\u4e00\u822c\u5141\u8bb8\u7684\u64cd\u4f5c\uff1a 1 2 3 4 5 6 ++ iter ; -- iter ; iter += n ; iter -= n ; // \u8fed\u4ee3\u5668\u79fb\u52a8 int dist = iter1 - iter2 ; // \u8fd4\u56de\u5143\u7d20\u4f4d\u7f6e\u5dee * iter = 5 ; // * \u662f\u89e3\u5f15\u7528\u8fd0\u7b97\u7b26\uff0c\u8fd4\u56de\u7684\u662f\u5de6\u503c\u5f15\u7528 \u90a3\u4e48\uff0c\u5982\u4f55\u5229\u7528 iterator \u904d\u5386 vector \u5462\uff1f \u56e0\u4e3a end() \u4e0d\u662f\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u800c\u662f\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4e4b\u540e\u7684\u4f4d\u7f6e\uff0c\u8be5\u4ee3\u7801\u53ef\u4ee5\u904d\u5386 vec \u4e2d\u6240\u6709\u5143\u7d20\uff1a 1 2 3 4 5 6 7 for ( vector < int >:: iterator it = vec . begin (); it != vec . end (); ++ it ) { } // \u4e5f\u53ef\u4ee5\u7528 auto \u7b80\u5316\u4ee3\u7801\uff0c\u7f16\u8bd1\u5668\u81ea\u52a8\u63a8\u5bfc it \u662f vec \u7684 iterator for ( auto it = vec . begin (); it != vec . end (); ++ it ) { } // \u8fd8\u53ef\u4ee5\u76f4\u63a5\u8fd9\u6837\u904d\u5386 for ( auto x : vec ) { } \u8865\u5145\uff1a\u53cd\u5411\u904d\u5386\u5668\u8fed\u4ee3\u6574\u4e2a vector \uff1a 1 2 3 for ( auto zex = vec . rbegin (); zex != vec . rend (); zex ++ ) { std :: cout << * zex << std :: endl ; } \u8fd9\u4e2a\u8bed\u6cd5\u5229\u7528 rbegin \u4e0e rend \u5b9e\u73b0\u4e86\u4ece\u540e\u5f80\u524d\u904d\u5386\u6574\u4e2a vec \u51fd\u6570\uff0c\u6ce8\u610f\u5bf9\u4e8e zex \u4ecd\u7136\u662f\u91c7\u7528 ++ \u8fd0\u7b97\u7b26\u3002","title":"\u8fed\u4ee3\u5668"},{"location":"languages/c-oop/templates-and-intro-to-stl/#_8","text":"\u5f53\u8fed\u4ee3\u5668\u4e0d\u518d\u6307\u5411\u672c\u5e94\u6307\u5411\u7684\u5143\u7d20\u65f6\uff0c\u79f0\u6b64\u8fed\u4ee3\u5668\u5931\u6548\u3002\u8fd9\u5e76\u4e0d\u662f\u6307\u6307\u9488\u672c\u8eab\u51fa\u4e86\u95ee\u9898\uff0c\u800c\u662f\u6307\u5411\u4e0d\u518d\u6b63\u786e\u3002 \u8c03\u7528 insert \u3001 erase \u540e\uff0c\u6240 \u4fee\u6539\u4f4d\u7f6e \u7684\u8fed\u4ee3\u5668\u3001\u4ee5\u53ca \u8be5\u4f4d\u7f6e\u4e4b\u540e \u7684\u6240\u6709\u8fed\u4ee3\u5668\u5931\u6548\u3002 \u8c03\u7528 push_back \u7b49\u4fee\u6539 vector \u5927\u5c0f\u7684\u65b9\u6cd5\u65f6\uff0c\u5982\u679c vector \u6070\u597d\u8fbe\u5230\u4e86 capacity \u4e0a\u9650\uff0c\u7f16\u8bd1\u5668\u4f1a\u7ed9 voctor \u6269\u5bb9\u3002\u6269\u5bb9\u540e\u6574\u4e2a vector \u4f1a\u53d1\u751f\u7a7a\u95f4\u6574\u4f53\u8fc1\u79fb\uff0c\u4f46\u662f\u8fed\u4ee3\u5668\u4ecd\u7136\u6307\u5411\u4e4b\u524d\u7684\u5185\u5b58\uff0c\u4ece\u800c\u4f1a\u4f7f \u6240\u6709 \u8fed\u4ee3\u5668\u5931\u6548\u3002 \u81ea\u52a8\u6269\u5bb9 vector \u662f\u4f1a\u81ea\u52a8\u6269\u5c55\u5bb9\u91cf\u7684\u6570\u7ec4\uff0c\u9664\u4e86 size \uff0c\u53e6\u4fdd\u5b58 capacity \uff1a\u6700\u5927\u5bb9\u91cf\u9650\u5236\u3002 \u5982\u679c size \u8fbe\u5230\u4e86 capacity \uff0c\u5219\u53e6\u7533\u8bf7\u4e00\u7247\u4e24\u500d\u4e8e capacity \u7684\u7a7a\u95f4\uff0c\u5e76\u6574\u4f53\u8fc1\u79fb vector \u7684\u5185\u5bb9\u3002 \u8fd9\u4e00\u8fc7\u7a0b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\u5747\u644a O(1) O(1) \uff0c\u5e76\u4e14\u6574\u4f53\u8fc1\u79fb\u8fc7\u7a0b\u4f7f\u6240\u6709\u8fed\u4ee3\u5668\u5931\u6548\u3002 \u6bcf\u6b21\u4ee5\u4e24\u500d\u4e3a\u5355\u4f4d\u6269\u5bb9\u5b9e\u9645\u4e0a\u662f\u6ee1\u8db3\u4e86\u5806\u4f18\u5316\uff0c\u662f\u4e00\u4e2a\u5f88\u4f18\u7684\u6269\u5bb9\u9009\u62e9\uff0c\u5c06\u5728\u6570\u636e\u7ed3\u6784\u4e2d\u5177\u4f53\u5b66\u4e60\u3002 \u56e0\u4e3a\u6269\u5bb9\u5bfc\u81f4\u7684\u8fed\u4ee3\u5668\u5931\u6548\u200b \u5728\u904d\u5386\u7684\u65f6\u5019\u589e\u52a0\u5143\u7d20\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u8fed\u4ee3\u5668\u5931\u6548\uff1a 1 2 3 4 5 6 7 8 9 #include <iostream> #include <vector> using namespace std ; int main () { vector < int > vec = { 1 , 2 , 3 , 4 , 5 }; for ( auto it = vec . begin (); it != vec . end (); ++ it ) vec . push_back ( * it ); return 0 ; } \u8fd9\u6bb5\u4ee3\u7801\u4f1a\u4f7f vec \u53d8\u6210 123451234512345... \u3002\u76f4\u5230 vec \u8fbe\u5230 capacity \u4e0a\u9650\uff0c\u6b64\u65f6 it \u5931\u6548\uff0c\u51fa\u73b0 error\u3002 \u5176\u5b9e\u8fd9\u79cd\u60c5\u51b5\u86ee\u597d\u7406\u89e3\u7684\uff0c\u56e0\u4e3a\u6bcf\u4e00\u6b21\u5faa\u73af\u90fd\u4f1a\u5224\u5b9a it \u662f\u5426\u7b49\u4e8e vec.end() \uff0c\u800c vec.end() \u4e0d\u65ad\u5728\u53d8\u5316\u3002 \u6545\u800c\u5bfc\u81f4\u5faa\u73af\u4e0d\u505c\u6b62\uff0c\u76f4\u5230\u8fed\u4ee3\u5668\u56e0\u4e3a\u5bb9\u91cf\u7684\u8fc1\u79fb\u800c\u5931\u6548\u3002 \u56e0\u4e3a\u5220\u9664\u5bfc\u81f4\u7684\u8fed\u4ee3\u5668\u5931\u6548 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 #include <iostream> using namespace std ; #include <vector> int main () { vector < int > vec = { 1 , 2 , 3 , 4 , 5 }; for ( auto it = vec . begin (); it != vec . end (); it ++ ) { cout << * it << endl ; } cout << \"=====================\" << endl ; auto first = vec . begin (); auto second = vec . begin () + 1 ; auto find = vec . begin () + 6 ; vec . erase ( second ); auto ret = vec . erase ( second ); cout << * second << endl ; cout << * ret << endl ; cout << \"my size is \" << vec . size () << endl ; cout << \"how could I find \" << * find << endl ; for ( auto it = vec . begin (); it != vec . end (); it ++ ) { cout << * it << endl ; } return 0 ; } /* output: 1 2 3 4 5 ===================== 4 4 my size is 3 how could I find 4113 1 4 5 */ \u4ece\u4e0a\u8ff0\u4ee3\u7801\u53ef\u4ee5\u89c1\u5f97\uff1a erase \u51fd\u6570\u4f20\u5165\u7684\u53c2\u6570\u548c\u8fd4\u56de\u503c\u7c7b\u578b\u90fd\u662f iterator \uff0c\u4f46\u662f\u4f60\u53ef\u4ee5\u9009\u62e9\u4e0d\u7528\u65b0\u7684 iterator \u63a5\u53d7\u8fd4\u56de\u503c\uff0c\u6bd4\u5982\u7b2c 15 \u884c\u3002 erase \u8fd4\u56de\u7684\u8fed\u4ee3\u5668\u6307\u5411\u7684\u5fc5\u5b9a\u662f\u88ab erase \u6389\u7684\u6240\u6709\u5143\u7d20\u4e4b\u540e\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002 \u6211\u4eec\u5df2\u7ecf\u77e5\u9053\uff0c\u5bf9\u4e8e vector \u4f7f\u7528 erase \uff0c\u4f1a\u4f7f\u5f97\u88ab erase \u7684\u5143\u7d20\u4e0e\u968f\u540e\u7684\u5143\u7d20\u7684\u8fed\u4ee3\u5668\u5168\u90e8\u5931\u6548\uff0c\u6545\u800c\u8fd9\u4e9b\u8bbf\u95ee\u90fd\u6ca1\u6709\u610f\u4e49\uff0c\u6bd4\u5982\u4e0a\u6587\u5bf9\u4e8e find \u7684\u8bbf\u95ee\uff0c\u7531\u4e8e find \u5df2\u7ecf\u662f\u91ce\u6307\u9488\u4e86\uff0c\u8fd9\u4e2a\u8bbf\u95ee\u6ca1\u6709\u5206\u6790\u7684\u610f\u4e49\u3002 \u6b64\u5904\u7ea0\u6b63\u5bf9\u4e8e\u6307\u9488\u7684\u957f\u671f\u9519\u8bef\u7406\u89e3 \u6307\u9488\u3001\u8fed\u4ee3\u5668\u6307\u5411\u7684\u4e00\u5b9a\u662f\u4e00\u4e2a\u53d8\u91cf\uff08\u5de6\u503c\uff0c\u5728\u5185\u5b58\u4e2d\u6709\u5bf9\u5e94\u7a7a\u95f4\u5373\u6709\u5730\u5740\uff09\uff0c\u800c\u4e0d\u80fd\u53ea\u662f\u4e00\u4e2a\u503c\uff08\u53f3\u503c\uff09\u3002 \u6545\u800c\u6307\u9488\u6307\u5411\u5730\u5740\u8fd9\u4e2a\u8bf4\u6cd5\u672c\u8eab\u5c31\u4e0d\u51c6\u786e\uff0c\u56e0\u4e3a\u50a8\u5b58\u67d0\u4e2a\u53d8\u91cf\u7684\u5185\u5b58\u7a7a\u95f4\u7684\u5730\u5740\u53ea\u662f\u4e00\u4e2a\u53f3\u503c\uff0c\u800c\u4e0d\u662f\u53d8\u91cf\u3002 \u53d8\u91cf A \u6784\u9020\u4e4b\u540e\uff0c\u50a8\u5b58 A \u7684\u5185\u5b58\u7a7a\u95f4\u7684\u5730\u5740\u5c31\u56fa\u5b9a\u4e86\uff0c\u6b64\u65f6\u5982\u679c\u6307\u9488 P \u6307\u5411 A \uff0c\u7b49\u4ef7\u4e8e\u6307\u5411\u4e86\u8fd9\u5757\u5730\u5740\uff0c\u7136\u800c\u6211\u4eec\u4ecd\u7136\u80fd\u591f\u8ba9 P \u6307\u9488\u6307\u5411\u65b0\u7684\u53d8\u91cf B \uff0c\u5374\u65e0\u6cd5\u6539\u53d8\u50a8\u5b58 A \u7684\u5185\u5b58\u7a7a\u95f4\u3002 \u56de\u5230 vec \u7684 erase \u51fd\u6570\uff0c\u6211\u4eec\u5df2\u7ecf\u660e\u786e\u4e86 erase \u51fd\u6570\u8fd4\u56de\u7684\u65b0\u8fed\u4ee3\u5668\u5c06\u4f1a\u6307\u5411\u88ab erase \u6389\u7684\u5143\u7d20\u4e4b\u540e\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002 erase \u64cd\u4f5c\u6709\u4e24\u79cd\u53ef\u80fd\uff0c\u7b2c\u4e00\u79cd\u4e0d\u4f1a\u53d1\u751f shrink\uff0c\u88ab\u6e05\u9664\u7684\u6570\u636e\u4e4b\u540e\u7684\u5143\u7d20\u5f80\u524d\u79fb\u52a8\uff0c\u586b\u8865\u4e4b\u524d\u88ab\u6e05\u9664\u7684\u5143\u7d20\u3002\u6bd4\u5982\u6211\u4f20\u5165 vec[2] \u7684\u8fed\u4ee3\u5668\uff0c\u53ea erase \u6389 vec[2] \uff0c\u90a3\u4e48\u539f\u672c\u4f4d\u4e8e vec[3] \u7684\u5143\u7d20\u5c31\u79fb\u52a8\u5230\u4e4b\u524d vec[2] \u6240\u5728\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u800c\u6211\u8fd4\u56de\u7684\u8fed\u4ee3\u5668\u4e00\u5b9a\u6307\u5411 vec[3] \uff0c\u6240\u4ee5\u770b\u4e0a\u53bb\u50cf\u662f\u8fd4\u56de\u7684\u8fed\u4ee3\u5668\u548c\u4f20\u5165\u7684\u8fed\u4ee3\u5668\u90fd\u6307\u5411\u4e86\u540c\u4e00\u4e2a\u5185\u5b58\u7a7a\u95f4\uff0c\u4f46\u662f\u8fd9\u662f\u663e\u7136\u9519\u8bef\u7684\u3002\u4e0d\u8fc7\u662f\u6307\u5411\u7684\u5143\u7d20\u78b0\u5de7\u5148\u540e\u5360\u7528\u4e86\u540c\u4e00\u5757\u5185\u5b58\u7a7a\u95f4\u3002 \u60c5\u51b5\u4e8c\uff0c erase \u5bfc\u81f4\u4e86 shrink \u7684\u53d1\u751f\u3002\u4e5f\u5c31\u662f\u8bf4 vec \u5bb9\u91cf\u51cf\u5c11\u7684\u65f6\u5019\u53ef\u80fd\u4f1a\u53d1\u751f shrink\uff0c\u53ef\u80fd\u6574\u4e2a vector \u88ab\u642c\u5230\u53e6\u5916\u4e00\u4e2a\u8f83\u5c0f\u7684\u5185\u5b58\u7a7a\u95f4\u3002\u8fd9\u4e2a\u65f6\u5019\uff0c erase \u8fd4\u56de\u7684\u6307\u9488\u4ecd\u7136\u6307\u5411\u88ab erase \u6389\u7684\u6240\u6709\u5143\u7d20\u4e4b\u540e\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u50a8\u5b58\u8fd9\u4e2a\u5143\u7d20\u7684\u5185\u5b58\u7a7a\u95f4\u5730\u5740\u53ef\u80fd\u548c\u4e4b\u524d\u7684\u5b8c\u5168\u6ca1\u6709\u5173\u7cfb\u3002 \u4e00\u4e2a\u7edd\u5bf9\u5b89\u5168\u7684\u51c6\u5219\uff1a \u7406\u89e3\u6e05\u695a\u8fed\u4ee3\u5668\u6240\u6307\u7684\u5bf9\u8c61\uff0c\u5728\u4fee\u6539\u8fc7\u5bb9\u5668\u540e\uff0c\u6362\u7528\u65b0\u7684\u8fed\u4ee3\u5668\uff0c\u4e0d\u4f7f\u7528\u4e4b\u524d\u7684\u8fed\u4ee3\u5668\u3002 \u5728 C++ Reference \u4e2d\uff0c\u5bb9\u5668\u7684\u4fee\u6539\u64cd\u4f5c\u6709\u4e00\u9879 Iterator validity\uff0c\u8868\u793a\u8be5\u64cd\u4f5c\u662f\u5426\u4f1a\u5f15\u53d1\u8fed\u4ee3\u5668\u5931\u6548\u3002\u82e5\u4fee\u6539\u5bb9\u5668\u540e\u4ecd\u8981\u4f7f\u7528\u539f\u6765\u7684\u8fed\u4ee3\u5668\uff0c\u67e5\u6587\u6863\u786e\u5b9a\u8fed\u4ee3\u5668\u662f\u5426\u6709\u6548\u3002 http://www.cplusplus.com/reference/algorithm/find/?kw=find","title":"\u8fed\u4ee3\u5668\u5931\u6548"},{"location":"languages/c-oop/templates-and-intro-to-stl/#list","text":"\u94fe\u8868\u5bb9\u5668\uff08\u5e95\u5c42\u5b9e\u73b0\u662f\u53cc\u5411\u94fe\u8868\uff09\u3002 1 2 3 4 5 6 7 8 #include <list> #include <algorithm> std :: list < int > l ; // \u5b9a\u4e49 l . push_front ( 1 ); // \u63d2\u5165\u524d\u7aef l . push_back ( 2 ); // \u63d2\u5165\u672b\u7aef std :: find ( l . begin (), l . end (), 2 ); // \u8fd4\u56de\u8fed\u4ee3\u5668 l . insert ( it , 4 ); // it \u4e3a\u8fed\u4ee3\u5668\uff0c\u5c06 4 \u63d2\u5165\u5230 it \u6307\u5411\u7684\u5143\u7d20\u524d\u9762 \u6ce8\u610f\uff0c\u5bf9 list \u4f7f\u7528\u7684 find \u51fd\u6570\uff0c\u9700\u8981\u5305\u542b\u5934\u6587\u4ef6 <algorithm> \u3002\u5982\u679c find \u51fd\u6570\u6ca1\u6709\u641c\u7d22\u5230\u60f3\u8981\u7684\u5bf9\u8c61\uff0c\u4f1a\u8fd4\u56de\u6307\u5411 end \u7684\u6307\u9488\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 #include <iostream> using namespace std ; #include <list> #include <algorithm> std :: list < int > l ; // \u5b9a\u4e49 l . push_front ( 1 ); // \u63d2\u5165\u524d\u7aef l . push_back ( 2 ); // \u63d2\u5165\u672b\u7aef l . push_back ( 5 ); // \u63d2\u5165\u672b\u7aef l . push_front ( 100 ); // \u63d2\u5165\u524d\u7aef l . push_back ( 100 ); // \u63d2\u5165\u672b\u7aef l . push_back ( 2 ); // \u63d2\u5165\u672b\u7aef auto it = std :: find ( l . begin (), l . end (), 2 ); // \u8fd4\u56de\u8fed\u4ee3\u5668 l . insert ( it , 4 ); // it \u4e3a\u8fed\u4ee3\u5668\uff0c\u5c06 4 \u63d2\u5165\u5230 it \u6307\u5411\u7684\u5143\u7d20\u524d\u9762 cout << * it << endl ; cout << \"==========================\" << endl ; for ( auto it = l . begin (); it != l . end (); it ++ ) { cout << * it << endl ; } /* output: 2 ========================== 100 1 4 2 5 100 2 */ \u4e0a\u8ff0\u4f8b\u5b50\u518d\u6b21\u9a8c\u8bc1\u4e86\u4e4b\u524d\u5bf9\u4e8e\u8fed\u4ee3\u5668\u7684\u7406\u89e3\u3002\u6211\u7684 it \u8fed\u4ee3\u5668\u6307\u5411\u7684\u6c38\u8fdc\u662f\u7b2c\u4e00\u4e2a 2 \u8fd9\u4e2a\u5143\u7d20\u3002\u867d\u7136\u6211\u5728 it \u524d\u9762\u63d2\u5165\u4e86 4 \uff0c\u7136\u540e 2 \u8fd9\u4e2a\u5143\u7d20\u5f80\u540e\u79fb\u8d70\u4e86\uff0c\u4f46\u662f it \u4ecd\u7136\u6307\u5411 2 \u3002\u53e6\u5916\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u53d1\u73b0\uff0c list \u7684 find \u529f\u80fd\u9047\u89c1\u591a\u4e2a\u76f8\u540c\u5143\u7d20\u65f6\uff0c\u4f1a\u9ed8\u8ba4\u8fd4\u56de\u4ece\u524d\u5230\u540e\u7b2c\u4e00\u4e2a\u7b26\u5408\u6761\u4ef6\u7684\u5143\u7d20\u7684\u8fed\u4ee3\u5668\u3002 \u5982\u679c list \u7684\u6210\u5458\u662f\u81ea\u5b9a\u4e49\u7684 class \u6216 struct \uff0c\u53ef\u4ee5\u901a\u8fc7\u91cd\u8f7d operator== \u548c\u81ea\u5df1\u5b9a\u4e49\u6784\u9020\u51fd\u6570\u6765\u6784\u9020 find \u3002 \u6ce8\u610f\uff1a == \u8fd0\u7b97\u7b26\u91cd\u8f7d\u7684\u53c2\u6570\u5fc5\u987b\u662f\u5e38\u91cf\u5de6\u503c\u5f15\u7528\u200b 1 2 3 4 5 6 7 8 9 10 class myint { int i ; bool operator == ( cosnt myint & other ) { return i == other . i ; } myint ( int t ) : i ( t ) { }; }; int main () { list < myint > test ; std :: find ( test . begin (), test . end (), myint ( 2 )); // \u67e5\u627e test \u91cc\u9762\u6709\u6ca1\u6709\u6210\u5458 i \u4e3a 2 \u7684 myint } \u7ed3\u5408\u94fe\u8868\u7684\u539f\u7406\u5f88\u5bb9\u6613\u5c31\u80fd\u7406\u89e3\u4ee5\u4e0b\u7279\u70b9\uff1a \u4e0d\u652f\u6301\u4e0b\u6807\u7b49\u968f\u673a\u8bbf\u95ee\uff0c\u5373\u65e0\u6cd5\u4f7f\u7528\u7c7b\u4f3c test[2] \u7684\u8bed\u53e5\u3002 \u6545\u800c\u60f3\u8981\u904d\u5386 list \uff0c\u5fc5\u987b\u7528\u8fed\u4ee3\u5668\u3002 \u652f\u6301\u9ad8\u901f\u7684\u5728\u4efb\u610f\u4f4d\u7f6e\u63d2\u5165\u3001\u5220\u9664\u6570\u636e\uff08\u94fe\u8868\u5e38\u5e38\u5728\u9700\u8981\u4e0d\u65ad\u63d2\u5165\u5220\u9664\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\uff09\u3002 \u5176\u8bbf\u95ee\u4e3b\u8981\u4f9d\u8d56\u8fed\u4ee3\u5668\u3002 \u64cd\u4f5c\u4e0d\u4f1a\u5bfc\u81f4\u8fed\u4ee3\u5668\u5931\u6548\uff08\u9664\u6307\u5411\u88ab\u5220\u9664\u7684\u5143\u7d20\u7684\u8fed\u4ee3\u5668\u5916\uff09\u3002 \u5173\u4e8e list \u7684\u66f4\u591a\u51fd\u6570\u53c2\u89c1\uff1a https://blog.csdn.net/yas12345678/article/details/52601578","title":"list \u5bb9\u5668"},{"location":"languages/c-oop/templates-and-intro-to-stl/#set","text":"\u4e0d\u91cd\u590d\u5143\u7d20\u6784\u6210\u7684\u65e0\u5e8f\u96c6\u5408\uff1b\u5185\u90e8\u6309\u5927\u5c0f\u987a\u5e8f\u6392\u5217\uff0c\u6bd4\u8f83\u5668\u7531\u51fd\u6570\u5bf9\u8c61 compare \u5b8c\u6210\u3002\u65e0\u5e8f\u662f\u6307\u4e0d\u4fdd\u6301\u63d2\u5165\u987a\u5e8f\uff08\u4e0d\u540c\u4e8e vector \u548c list \uff09\uff0c\u5bb9\u5668\u5185\u90e8\u6392\u5217\u987a\u5e8f\u662f\u6839\u636e\u5143\u7d20\u5927\u5c0f\u6392\u5217\u3002 1 2 3 4 5 std :: set < int > s ; // \u5b9a\u4e49 s . insert ( 1 ); s . find ( 1 ); // \u8fd4\u56de\u8fed\u4ee3\u5668\uff08\u4f4d\u7f6e\uff09 s . erase ( s . find ( 1 )); // \u5bfc\u81f4\u88ab\u5220\u9664\u5143\u7d20\u7684\u8fed\u4ee3\u5668\u5931\u6548\uff08\u8fd9\u53e5\u8bdd\u662f\u5220\u9664\u4e86\u96c6\u5408\u91cc\u7684\u5143\u7d20 1\uff09 s . count ( 1 ); // 1\u7684\u4e2a\u6570\uff0c\u603b\u662f 0 \u6216 1\uff08\u5b58\u5728\u6027\uff09","title":"set \u5173\u8054\u5bb9\u5668"},{"location":"languages/c-oop/templates-and-intro-to-stl/#map","text":"map \u7684\u503c\u7c7b\u578b\u4e3a pair<key, val> \u3002 map \u4e2d\u7684\u5143\u7d20 key \u4e92\u4e0d\u76f8\u540c\uff0c\u9700\u8981 key \u5b58\u5728\u6bd4\u8f83\u5668\u3002 \u53ef\u4ee5\u901a\u8fc7\u4e0b\u6807\u8bbf\u95ee\uff08\u5373\u4f7f key \u4e0d\u662f\u6574\u6570\uff09\u3002 \u4e0b\u6807\u8bbf\u95ee\u65f6\u5982\u679c\u5143\u7d20\u4e0d\u5b58\u5728\uff0c\u5219\u521b\u5efa\u5bf9\u5e94\u5143\u7d20\uff0c\u800c\u4e0d\u4f1a\u63d0\u793a\u8bbf\u95ee\u9519\u8bef \u3002\u4e5f\u53ef\u4f7f\u7528 insert \u51fd\u6570\u8fdb\u884c\u63d2\u5165\u3002 \u6240\u8c13\u7684\u521b\u5efa\u5bf9\u5e94\u5143\u7d20\uff1a\u6bd4\u5982 map \u5305\u542b\u7684\u5143\u7d20\u4e3a pair<key, T> \uff0c\u90a3\u4e48\u627e\u4e0d\u5230 key \uff0c\u5c31\u4f1a\u6784\u9020 T() \uff0c\u8c03\u7528\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u3002 1 2 3 4 template < class Key , class T , class Compare = std :: less < Key > , class Allocator = std :: allocator < std :: pair < const Key , T > > \u6bcf\u4e2a\u5143\u7d20\u7531\u4e24\u4e2a\u6570\u636e\u9879\u7ec4\u6210\uff0c map \u5c06\u4e00\u4e2a\u6570\u636e\u9879\u6620\u5c04\u5230\u53e6\u4e00\u4e2a\u6570\u636e\u9879\u4e2d\u3002 1 2 3 4 5 6 7 8 9 10 #include <string> #include <map> int main () { std :: map < std :: string , int > s ; // \u521b\u5efa\u4e86 key \u4e3a string \u7c7b\u578b\uff0cval \u4e3a int \u7c7b\u578b\u7684 map s [ \"oop\" ] = 1 ; // \u63d2\u5165\u65b9\u5f0f 1 // \u5982\u679c \"oop\" \u6709\u5bf9\u5e94\u7684 val\uff0c\u90a3\u5c31\u662f\u8d4b\u503c\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u63d2\u5165\uff0c\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u6784\u9020 // \u770b\u8d77\u6765\u50cf\u662f\u91cd\u8f7d\u4e86 []\uff0c\u4f7f\u5f97\u4e0b\u6807\u4e0d\u662f int \u4e5f\u53ef\u4ee5\u8bbf\u95ee\uff0c\u8fd9\u662f map \u7c7b\u578b\u652f\u6301\u7684\u64cd\u4f5c\u3002\u5728 [] \u4e2d\u7528 key \u76f4\u63a5\u8bbf\u95ee val s . insert ( std :: make_pair ( std :: string ( \"oop\" ), 1 )); // \u63d2\u5165\u65b9\u5f0f 2 return 0 ; } map \u652f\u6301\u7528 key \u76f4\u63a5\u8bbf\u95ee\u5bf9\u5e94\u8fed\u4ee3\u5668\uff1a 1 2 3 4 s . find ( key ); // \u67e5\u8be2\uff0c\u4ec5\u9700\u8981\u63d0\u4f9b key \u503c\uff0c\u8fd4\u56de\u8fed\u4ee3\u5668\u3002 s . count ( key ); // \u7edf\u8ba1\uff0c\u4ec5\u9700\u8981\u63d0\u4f9b key \u503c\uff0c\u8fd4\u56de 0 \u6216 1\u3002 s . erase ( it ); // it \u662f\u8fed\u4ee3\u5668\uff0c\u5220\u9664 it \u6307\u5411\u7684\u5143\u7d20\uff0c\u5bfc\u81f4 it \u5931\u6548 s . erase ( s . find ( key )); map \u5e38\u7528\u4f5c\u8fc7\u5927\u7684\u7a00\u758f\u6570\u7ec4\u6216\u4ee5\u5b57\u7b26\u4e32\u4e3a\u4e0b\u6807\u7684\u6570\u7ec4\u3002 1 2 3 4 5 6 7 8 9 10 #include <string> #include <map> int main () { std :: map < std :: string , std :: string > M ; M [ \"fp\" ] = \"c\" ; M [ \"oop\" ] = M [ \"fp\" ] + \"++\" ; // M[\"oop\"] = \"c++\" // string \u7684\u795e\u5947\u64cd\u4f5c\uff1a\"a\" + \"b\" = \"ab\" return 0 ; } set \u548c map \u6240\u7528\u5230\u7684\u6570\u636e\u7ed3\u6784\u90fd\u662f\u7ea2\u9ed1\u6811\uff08\u4e00\u79cd\u4e8c\u53c9\u5e73\u8861\u6811\uff09\uff0c\u5176\u51e0\u4e4e\u6240\u6709\u64cd\u4f5c\u590d\u6742\u5ea6\u5747\u4e3a O(\\log n) O(\\log n) \u3002","title":"map \u5173\u8054\u5bb9\u5668"},{"location":"languages/c-oop/templates-and-intro-to-stl/#_9","text":"","title":"\u603b\u7ed3"},{"location":"languages/c-oop/templates-and-intro-to-stl/#_10","text":"\u5e8f\u5217\u5bb9\u5668\uff1a vector \u3001 list \u5173\u8054\u5bb9\u5668\uff1a set \u3001 map \u5e8f\u5217\u5bb9\u5668\u4e0e\u5173\u8054\u5bb9\u5668\u7684\u533a\u522b\uff1a \u5e8f\u5217\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\u6709\u987a\u5e8f\uff0c\u53ef\u4ee5\u6309\u987a\u5e8f\u8bbf\u95ee\u3002 \u5173\u8054\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\u65e0\u987a\u5e8f\uff0c\u53ef\u4ee5\u6309\u6570\u503c\uff08\u5927\u5c0f\uff09\u8bbf\u95ee\u3002 vector \u4e2d\u63d2\u5165\u5220\u9664\u64cd\u4f5c\u4f1a\u4f7f\u64cd\u4f5c\u4f4d\u7f6e\u4e4b\u540e\u5168\u90e8\u7684\u8fed\u4ee3\u5668\u5931\u6548\u3002 \u5176\u4ed6\u5bb9\u5668\u4e2d\u53ea\u6709\u88ab\u5220\u9664\u5143\u7d20\u7684\u8fed\u4ee3\u5668\u5931\u6548\u3002","title":"\u5e8f\u5217\u5bb9\u5668\uff08\u6709\u987a\u5e8f\uff09\u548c\u5173\u8054\u5bb9\u5668\uff08\u65e0\u987a\u5e8f\uff09\u7684\u533a\u522b"},{"location":"languages/c-oop/templates-and-intro-to-stl/#_11","text":"\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u5bb9\u5668\u7684\u9009\u62e9\u53ef\u80fd\u9700\u8981\u7efc\u5408\u8003\u8651\u591a\u65b9\u9762\u56e0\u7d20\uff0c\u5305\u62ec\u7b97\u6cd5\u590d\u6742\u5ea6\uff0c\u529f\u80fd\u9700\u6c42\uff0c\u5185\u5b58\u5206\u914d\u7b56\u7565\u7b49\uff0c\u4e0b\u9762\u63d0\u4f9b\u51e0\u4e2a\u53ef\u4f9b\u53c2\u8003\u4f46\u4e0d\u5b8c\u6574\u7684\u89d2\u5ea6\uff08\u53ef\u4ee5\u8fdb\u4e00\u6b65\u9605\u8bfb\u300aEffective STL\u300b\uff09\uff1a \u7b97\u6cd5\u590d\u6742\u5ea6\uff1a\u5bf9\u4e8e\u5e8f\u5217\u5bb9\u5668\u800c\u8a00\uff0c\u5982\u679c\u5728\u5e8f\u5217\u4e2d\u95f4\u5b58\u5728\u9891\u7e41\u7684\u63d2\u5165\u6216\u5220\u9664\u64cd\u4f5c\uff0c\u4f7f\u7528 list \uff0c\u5426\u5219\u4f7f\u7528 vector \uff08\u6216 deque \uff09 \u5143\u7d20\u7684\u987a\u5e8f\uff1a\u5982\u679c\u9700\u8981\u5728\u5bb9\u5668\u7684\u4efb\u610f\u4f4d\u7f6e\u63d2\u5165\u65b0\u5143\u7d20\uff0c\u9700\u8981\u9009\u62e9\u5e8f\u5217\u5bb9\u5668\u800c\u4e0d\u662f\u5173\u8054\u5bb9\u5668 \u5143\u7d20\u67e5\u627e\u901f\u5ea6\uff1a\u5982\u5143\u7d20\u7684\u67e5\u627e\u901f\u5ea6\u662f\u5173\u952e\u7684\u8003\u8651\u56e0\u7d20\uff0c\u53ef\u4ee5\u8003\u8651\u6392\u5e8f\u7684 vector \u6216\u5173\u8054\u5bb9\u5668 set \u3001 map \u7b49 \u8fed\u4ee3\u5668\u3001\u6307\u9488\u6216\u5f15\u7528\u5931\u6548\uff1a\u5982\u679c\u5e0c\u671b\u5728\u5143\u7d20\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u540e\uff0c\u8fed\u4ee3\u5668\u3001\u6307\u9488\u6216\u5f15\u7528\u5931\u6548\u7684\u60c5\u51b5\u5c3d\u53ef\u80fd\u5c11\u51fa\u73b0\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528 list \u548c\u5173\u8054\u5bb9\u5668 set \u3001 map \u7b49","title":"\u9009\u62e9\u4f9d\u636e"},{"location":"languages/c-oop/virtual-function/","text":"\u865a\u51fd\u6570 \u00b6 \u5411\u4e0a\u7c7b\u578b\u8f6c\u6362 \u00b6 \u5b9a\u4e49 \u00b6 \u6d3e\u751f\u7c7b\u5bf9\u8c61\u3001\u5f15\u7528\u3001\u6307\u9488\u8f6c\u6362\u6210\u57fa\u7c7b\u5bf9\u8c61\u3001\u5f15\u7528\u3001\u6307\u9488\uff0c\u79f0\u4e3a\u5411\u4e0a\u7c7b\u578b\u8f6c\u6362\u3002\u53ea\u5bf9 public \u7ee7\u627f\u6709\u6548\uff0c\u5728\u7ee7\u627f\u56fe\u4e0a\u662f\u4e0a\u5347\u7684\uff1b\u5bf9 private \u3001 protected \u7ee7\u627f\u65e0\u6548\u3002 \u5411\u4e0a\u7c7b\u578b\u8f6c\u6362\uff08\u6d3e\u751f\u7c7b\u5230\u57fa\u7c7b\uff09\u53ef\u4ee5\u7531\u7f16\u8bd1\u5668\u81ea\u52a8\u5b8c\u6210\uff0c\u662f\u4e00\u79cd\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\u3002\u51e1\u662f\u63a5\u53d7\u57fa\u7c7b\u5bf9\u8c61\u3001\u5f15\u7528\u3001\u6307\u9488\u7684\u5730\u65b9\uff08\u5982\u51fd\u6570\u53c2\u6570\uff09\uff0c\u90fd\u53ef\u4ee5\u4f7f\u7528\u6d3e\u751f\u7c7b\u5bf9\u8c61\u3001\u5f15\u7528\u3001\u6307\u9488\uff0c\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u5c06\u6d3e\u751f\u7c7b\u5bf9\u8c61\u8f6c\u6362\u4e3a\u57fa\u7c7b\u5bf9\u8c61\u4ee5\u4fbf\u4f7f\u7528\u3002 \u4e0d\u5141\u8bb8\u975e public \u7ee7\u627f\u7684\u5411\u4e0a\u8f6c\u6362 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 #include <iostream> using namespace std ; class Base { private : int data { 0 }; public : int getData () { return data ; } void setData ( int i ) { data = i ; } }; class Derive1 : private Base { public : using Base :: getData ; }; int main () { Derive1 d1 ; cout << d1 . getData (); Base & b = d1 ; // \u4e0d\u5141\u8bb8\u79c1\u6709\u7ee7\u627f\u7684\u5411\u4e0a\u8f6c\u6362 b . setData ( 10 ); // \u5426\u5219\u53ef\u4ee5\u7ed5\u8fc7 D1\uff0c\u8c03\u7528\u57fa\u7c7b\u7684 setData \u51fd\u6570 return 0 ; } /* output: error: cannot cast 'Derive1' to its private base class 'Base' Base& b = d1; */ \u5982\u679c private \u7ee7\u627f\u4e5f\u53ef\u4ee5\u5411\u4e0a\u8f6c\u6362\uff0c\u90a3\u4e48\u57fa\u7c7b\u5bf9\u8c61\u91cc\u7684 public \u6210\u5458\u4e5f\u53ef\u4ee5\u88ab\u6d3e\u751f\u7c7b\u8c03\u7528\u4e86\u3002\u800c private \u7ee7\u627f\u7684\u539f\u610f\u5c31\u662f\u8ba9\u57fa\u7c7b\u6210\u5458\u5728\u6d3e\u751f\u7c7b\u91cc\u53d8\u6210 private \u5c5e\u6027\uff0c\u6240\u4ee5 private \u7ee7\u627f\u4e0d\u80fd\u5411\u4e0a\u8f6c\u6362\u3002 \u4f8b\u5b50 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 #include <iostream> using namespace std ; class Base { public : void print () { cout << \"Base::print()\" << endl ; } }; class Derive : public Base { public : void print () { cout << \"Derive::print()\" << endl ; } }; void fun ( Base obj ) { obj . print (); } // \u8c03\u7528 Base \u5bf9\u8c61\u7684 print int main () { Derive d ; d . print (); fun ( d ); // \u672c\u610f\u5e0c\u671b\u5bf9 Derive::print \u8c03\u7528 return 0 ; } /* output: Derive::print() Base::print() */ \u6d3e\u751f\u7c7b\u4f1a\u8986\u76d6\u6389\u57fa\u7c7b\u7684\u540c\u540d\u51fd\u6570\uff0c\u672a\u53d1\u751f\u5207\u7247\u524d\uff0c\u60f3\u8981\u8ba9\u6d3e\u751f\u7c7b\u4f7f\u7528\u57fa\u7c7b\u7684 print \uff0c\u65b9\u6cd5\u4e00\u662f\u4f7f\u7528 using \u5173\u952e\u5b57\uff0c\u65b9\u6cd5\u4e8c\u662f\u542f\u7528\u547d\u540d\u7a7a\u95f4\u3002 \u5bf9\u8c61\u5207\u7247 \u00b6 \u5b9a\u4e49 \u00b6 \u5f53\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61 b \uff08\u4e0d\u662f\u6307\u9488\u6216\u5f15\u7528\uff09\u88ab\u8f6c\u6362\u4e3a\u57fa\u7c7b\u7684\u5bf9\u8c61 a \u65f6\uff0c\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\u88ab\u5207\u7247\u4e3a\u5bf9\u5e94\u57fa\u7c7b\u7684\u5b50\u5bf9\u8c61\u3002\u8fd9\u53e5\u8bdd\u7684\u610f\u4e49\u662f a \u4ec5\u4ec5\u53ea\u80fd\u542b\u6709 b \u4e2d\u57fa\u7c7b\u7684\u90e8\u5206\uff0c\u800c b \u5bf9\u8c61\u672c\u8eab\u4e0d\u53d7\u5230\u5f71\u54cd\u3002 \u5207\u7247\u8fc7\u7a0b\u4e0d\u53ef\u9006\uff0c\u5373\u4fbf\u5207\u7247\u672c\u8eab\u4e0d\u6539\u53d8\u6307\u9488\u7684\u4f4d\u7f6e\uff0c\u6539\u53d8\u4e86\u6307\u9488\u7684\u7c7b\u578b\uff0c\u8fd9\u4e00\u8fc7\u7a0b\u4e5f\u4e0d\u53ef\u9006\u3002 \u4f8b\u5b50 \u5b58\u50a8\u7a7a\u95f4\u7684\u53d8\u5316 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 #include <iostream> using namespace std ; #pragma pack(4) // \u6309\u7167\u56db\u5b57\u8282\u8fdb\u884c\u5185\u5b58\u5bf9\u9f50 class Pet { public : int att_i ; // \u8868\u793a\u5c5e\u6027 Pet ( int x = 0 ) : att_i ( x ) { }; }; class Dog : public Pet { public : int att_j ; Dog ( int x = 0 , int y = 0 ) : Pet ( x ), att_j ( y ) { } }; void getSize ( Pet p ) { cout << \"Pet size:\" << sizeof ( p ) << endl ; } int main () { Pet p ; cout << \"Pet size:\" << sizeof ( p ) << endl ; Dog g ; cout << \"Dog size:\" << sizeof ( g ) << endl ; getSize ( g ); // \u5bf9\u8c61\u5207\u7247\uff0cp \u4e22\u5931\u4e86 g \u7684\u6570\u636e\uff0c\u4f46\u662f g \u4e0d\u53d7\u5f71\u54cd cout << \"Dog size:\" << sizeof ( g ) << endl ; p = g ; // \u5bf9\u8c61\u5207\u7247\uff0cp \u4e22\u5931\u4e86 g \u7684\u6570\u636e\uff0c\u4f46\u662f g \u4e0d\u53d7\u5f71\u54cd cout << \"Dog size:\" << sizeof ( g ) << endl ; return 0 ; } /* Pet size:4 Dog size:8 Pet size:4 Dog size:8 Dog size:8 */ \u6d3e\u751f\u7c7b\u6570\u636e\u65e0\u6743\u8bbf\u95ee 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 #include <iostream> using namespace std ; #pragma pack(4) class Pet { public : int att_i ; // \u8868\u793a\u5c5e\u6027 Pet ( int x = 0 ) : att_i ( x ) { } }; class Dog : public Pet { public : int att_j ; Dog ( int x = 0 , int y = 0 ) : Pet ( x ), att_j ( y ) { } }; int main () { Pet p ( 1 ); cout << p . att_i << endl ; Dog g ( 2 , 3 ); cout << g . att_i << \" \" << g . att_j << endl ; p = g ; // \u5bf9\u8c61\u5207\u7247\uff0c\u53ea\u8d4b\u503c\u57fa\u7c7b\u6570\u636e cout << p . att_i << endl ; // cout << p.att_j << endl; // \u6ca1\u6709\u8be5\u53c2\u6570\uff0c\u7f16\u8bd1\u9519\u8bef return 0 ; } /* output: 1 2 3 2 */ \u6d3e\u751f\u7c7b\u65b9\u6cd5\u65e0\u6743\u8bbf\u95ee 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 #include <iostream> using namespace std ; class Pet { public : void name () { cout << \"Pet::name()\" << endl ; } }; class Dog : public Pet { public : void name () { cout << \"Dog::name()\" << endl ; } }; void getName ( Pet p ) { p . name (); } int main () { Dog g ; g . name (); getName ( g ); // \u5bf9\u8c61\u5207\u7247\uff08\u4f20\u53c2\uff09\uff0c\u8c03\u7528\u57fa\u7c7b\u7684 name \u51fd\u6570 Pet p = g ; p . name (); // \u5bf9\u8c61\u5207\u7247\uff08\u8d4b\u503c\uff09\uff0c\u8c03\u7528\u57fa\u7c7b\u7684 name \u51fd\u6570 return 0 ; } /* output: Dog::name() Pet::name() Pet::name() */ \u5bf9\u8c61\u5207\u7247\u7684\u7406\u89e3 \u00b6 \u6307\u9488\u578b\u5411\u4e0a\u7c7b\u578b\u8f6c\u6362 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 #include <iostream> using namespace std ; #pragma pack(4) class Pet { public : int att_i ; // \u8868\u793a\u5c5e\u6027 Pet ( int x = 0 ) : att_i ( x ) { }; }; class Dog : public Pet { public : int att_j ; Dog ( int x = 0 , int y = 0 ) : Pet ( x ), att_j ( y ) { } }; int main () { Dog * g = new Dog ( 1 , 2 ); Pet * p = g ; cout << g << ' ' << p << endl ; int * a = ( int * ) g ; // \u6307\u9488\u8f6c\u6362 cout << a << ' ' << a + 1 << endl ; cout << * a << ' ' << * ( a + 1 ) << endl ; cout << p -> att_i << endl ; cout << g -> att_i << \" \" << g -> att_j << endl ; return 0 ; } /* output: 0x1c94eb0 0x1c94eb0 0x1c94eb0 0x1c94eb4 1 2 1 1 2 */ \u5728\u4e3b\u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u57fa\u7c7b\u6307\u9488 p \u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61 g \u3002\u5c06 p \u548c g \u6307\u5411\u5185\u5b58\u7a7a\u95f4\u7684\u5730\u5740\u6253\u5370\u51fa\u6765\uff0c\u540c\u65f6\u5c06 g \u6307\u5411\u5185\u5b58\u7a7a\u95f4\u4e0a\u7684\u4e24\u4e2a int \u5730\u5740\u6253\u5370\u51fa\u6765\uff0c\u6211\u4eec\u53d1\u73b0 g \u548c p \u90fd\u6307\u5411\u540c\u4e00\u4e2a\u5730\u5740\uff08\u8fd9\u4e2a\u5730\u5740\u5c31\u662f att_i \uff09\u3002 \u5b9e\u9645\u4e0a\uff0c\u6570\u636e\u5728\u5185\u5b58\u4e2d\u662f\u8fde\u7eed\u7d27\u5bc6\u6392\u5217\u7684\u3002\u5148\u6392\u5217\u57fa\u7c7b\u6570\u636e att_i \uff0c\u518d\u6392\u5217\u6d3e\u751f\u7c7b\u6570\u636e att_j \u3002\u800c\u6211\u4eec\u7528\u57fa\u7c7b\u6307\u9488\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61\u65f6\uff0c\u57fa\u7c7b\u548c\u6d3e\u751f\u7c7b\u6307\u9488\u90fd\u6307\u5411\u540c\u4e00\u4e2a\u5185\u5b58\u5730\u5740\uff0c\u5373\u57fa\u7c7b\u6570\u636e\u7684\u5730\u5740\u3002\u4f46\u662f\u8bbf\u95ee\u6743\u9650\u4e0d\u540c\uff0c\u57fa\u7c7b\u6307\u9488\u53ea\u80fd\u8bbf\u95ee\u57fa\u7c7b\u7684\u90e8\u5206\uff0c\u6d3e\u751f\u7c7b\u80fd\u8bbf\u95ee\u6240\u6709\u90e8\u5206\u3002\u60c5\u51b5\u4e00\u7c7b\u578b\u7684\u6570\u636e\u4e22\u5931\uff0c\u5e76\u975e\u6d3e\u751f\u7c7b\u6570\u636e\u9500\u6bc1\u4e86\uff0c\u800c\u662f\u88ab\u8f6c\u6362\u751f\u6210\u7684\u6307\u9488\u6ca1\u6709\u8bbf\u95ee\u6d3e\u751f\u7c7b\u6570\u636e\u7684\u6743\u9650\u3002 \u4e0d\u8fc7\uff0c\u5f53\u591a\u91cd\u7ee7\u627f\u65f6\uff0c\u6bd4\u5982 A \u540c\u65f6 public \u7ee7\u627f B \u3001 C \uff08\u6309\u7167\u7c7b\u7684\u5b9a\u4e49\u987a\u5e8f\u4ece\u5de6\u5230\u53f3\uff09\u3002\u5728\u5185\u5b58\u4e2d\u5219\u5148\u6392\u5217 B \uff0c\u4e4b\u540e C \uff0c\u6700\u540e A \u3002\u8fd8\u662f\u4f7f\u7528\u57fa\u7c7b\u6307\u9488\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61\u7684\u8bdd\uff0c\u5982\u679c A \u7c7b\u6307\u9488 a \u548c C \u7c7b\u6307\u9488 c \u4e0d\u91cd\u5408\u3002 a \u6307\u5411\u5934\u90e8\uff0c c \u6307\u5411 C \u7684\u90e8\u5206\uff0c\u8bbf\u95ee\u6743\u9650\u4e5f\u4e0d\u540c\u3002 \u62f7\u8d1d\u578b\u5411\u4e0a\u7c7b\u578b\u8f6c\u6362 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 #include <iostream> using namespace std ; #pragma pack(4) class Pet { public : int att_i ; // \u8868\u793a\u5c5e\u6027 Pet ( int x = 0 ) : att_i ( x ) { }; }; class Dog : public Pet { public : int att_j ; Dog ( int x = 0 , int y = 0 ) : Pet ( x ), att_j ( y ) { } }; int main () { Dog d ( 10 , 12 ); Pet t ; cout << \"locate of d: \" << & d << endl ; cout << d . att_i << \" \" << d . att_j << endl ; cout << \"locate of t: \" << & t << endl ; cout << t . att_i << endl ; t = d ; cout << t . att_i << endl ; cout << \"locate of t: \" << & t << endl ; return 0 ; } /* output: locate of d: 0x7ffefd9e81a0 10 12 locate of t: 0x7ffefd9e8198 0 10 locate of t: 0x7ffefd9e8198 */ \u53ef\u4ee5\u53d1\u73b0\uff0c\u5728\u5b9a\u4e49\u4e86 Pet t \u540e\uff0c\u5c31\u5df2\u7ecf\u4e3a t \u5206\u914d\u4e86\u5185\u5b58\u7a7a\u95f4\uff0c\u548c d \u5e76\u4e0d\u662f\u540c\u4e00\u5757\u7a7a\u95f4\u3002\u63a5\u4e0b\u6765\u7684 t = d \u7c7b\u4f3c\u4e8e\u4e00\u4e2a\u90e8\u5206\u62f7\u8d1d\u8d4b\u503c\u8bed\u53e5\uff0c\u5e76\u6ca1\u6709\u6539\u53d8 t \u548c d \u7684\u5730\u5740\u3002\u6bd4\u8d77\u6307\u9488\u578b\u7684\u5207\u7247\u7b80\u5355\u8bb8\u591a\u3002 \u8fdb\u4e00\u6b65\u8ba8\u8bba \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 #include <iostream> using namespace std ; #pragma pack(4) class Pet { public : int att_i ; // \u8868\u793a\u5c5e\u6027 Pet ( int x = 0 ) : att_i ( x ) { }; }; class Dog : public Pet { public : int att_j ; Dog ( int x = 0 , int y = 0 ) : Pet ( x ), att_j ( y ) { } }; void getSize ( Pet p ) { cout << \"locate of p: \" << & p << endl ; cout << \"Pet size:\" << sizeof ( p ) << endl ; } int main () { Dog * g = new Dog ( 1 , 2 ); cout << \"locate of g: \" << g << endl ; Pet * j = g ; cout << \"locate of j: \" << j << endl ; getSize ( * g ); cout << g -> att_i << endl ; delete j ; cout << g -> att_i ; return 0 ; } /* output: locate of g: 0x18beeb0 locate of j: 0x18beeb0 locate of p: 0x7ffe369b8848 Pet size:4 1 6334 */ \u8fd9\u91cc\u5bf9\u4e8e\u62f7\u8d1d\u578b\u5411\u4e0a\u7c7b\u578b\u8f6c\u6362\u548c\u6307\u9488\u578b\u5411\u4e0a\u7c7b\u578b\u8f6c\u6362\u8fdb\u884c\u5206\u6790\u3002\u601d\u8003\u4e00\u4e2a\u95ee\u9898\uff0c\u62f7\u8d1d\u578b\u5411\u4e0a\u7c7b\u578b\u8f6c\u6362\u662f\u5426\u4f1a\u5728\u53c2\u6570\u88ab\u6790\u6784\u540e\u7834\u574f\u539f\u6709\u7684\u6d3e\u751f\u7c7b\u6570\u636e\uff1f \u7b54\u6848\u662f\u4e0d\u4f1a\u7684\u3002 \u4e0a\u8ff0\u4f8b\u5b50\u901a\u8fc7\u4f20\u9012\u53c2\u6570\u53c2\u6570\u4ea7\u751f\u7684\u5207\u7247\u5b9e\u8d28\u662f\u62f7\u8d1d\u4f20\u53c2\uff0c\u76f8\u5f53\u4e8e\u7528\u6d3e\u751f\u7c7b\u5bf9\u8c61\u5728\u53e6\u5916\u4e00\u5757\u5730\u5740\u4e0a\u62f7\u8d1d\u4e86\u4e00\u4e2a\u57fa\u7c7b\u5bf9\u8c61\u3002\u8fd9\u4e00\u5bf9\u8c61\u6307\u9488\u6307\u9488\u6307\u5411\u7684\u5185\u5b58\u548c\u6d3e\u751f\u7c7b\u6307\u9488\u6307\u5411\u7684\u5185\u5b58\u5f53\u7136\u4e0d\u662f\u540c\u4e00\u5757\uff0c\u6545\u800c\u6790\u6784\u7684\u65f6\u5019\u4e0d\u4f1a\u6709\u95ee\u9898\u3002 \u800c\u5bf9\u4e8e\u6307\u9488\u578b\u5411\u4e0a\u7c7b\u578b\u8f6c\u6362\uff0c\u5728\u4e0a\u6587\u5df2\u7ecf\u8ba8\u8bba\u8fc7\u8fd9\u4e00\u5207\u7247\u7684\u672c\u8d28\u2014\u2014\u4e24\u4e2a\u6307\u5411\u5730\u5740\u76f8\u540c\u7684\u6307\u9488\uff0c\u4f46\u662f\u8bbf\u95ee\u6743\u9650\u4e0d\u540c\u3002 \u5982\u540c\u4e0a\u6587\u8f93\u51fa\u6240\u793a\uff0c\u60c5\u51b5\u4e00\u7c7b\u578b\u7684\u5207\u7247\u751f\u6210\u7684\u57fa\u7c7b\u6307\u9488\u548c\u6d3e\u751f\u7c7b\u6307\u9488\u6307\u5411\u540c\u4e00\u5757\u7a7a\u95f4\u3002\u5c06\u57fa\u7c7b\u6307\u9488\u6240\u6307\u7a7a\u95f4\u91ca\u653e\u540e\uff0c\u7834\u574f\u4e86\u6d3e\u751f\u7c7b\u6570\u636e\u3002 \u53c8\u4f8b\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 #include <iostream> using namespace std ; #pragma pack(4) class Pet { public : int att_i ; Pet ( int x = 0 ) : att_i ( x ) { } }; class Dog : public Pet { public : int att_j ; Dog ( int x = 0 , int y = 0 ) : Pet ( x ), att_j ( y ) { } }; int main () { Dog g ( 2 , 3 ); cout << g . att_i << \" \" << g . att_j << endl ; Pet & p = g ; // \u5f15\u7528\u5411\u4e0a\u8f6c\u6362 cout << p . att_i << endl ; p . att_i = 1 ; // \u4fee\u6539\u57fa\u7c7b\u5b58\u5728\u7684\u6570\u636e cout << p . att_i << endl ; cout << g . att_i << \" \" << g . att_j << endl ; // \u5f71\u54cd\u6d3e\u751f\u7c7b\uff0c\u4f46\u662f\u5c06\u6d3e\u751f\u7c7b\u8f6c\u5316\u4e3a\u57fa\u7c7b\u7684\u5f15\u7528\u540e\uff0c\u539f\u6765\u7684\u6d3e\u751f\u7c7b\u5bf9\u8c61\u5e76\u4e0d\u4f1a\u88ab\u9500\u6bc1 return 0 ; } /* output: 2 3 2 1 1 3 */ \u8bfe\u5802\u4e0a\u7684\u4f8b\u5b50\u53ea\u5f3a\u8c03\u4e86\u57fa\u7c7b\u5f15\u7528\u4f1a\u5f71\u54cd\u6d3e\u751f\u7c7b\u6570\u636e\uff0c\u5b9e\u9645\u4e0a\u5e94\u7ed3\u5408\u5730\u5740\u548c\u5185\u5b58\u7a7a\u95f4\u6765\u7406\u89e3\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 #include <iostream> using namespace std ; class Instrument { public : void play () { cout << \"Instrument::play\" << endl ; } }; class Wind : public Instrument { public : // Redefine interface function void play () { cout << \"Wind::play\" << endl ; } }; void tune ( Instrument & i ) { i . play (); } int main () { Wind flute ; tune ( flute ); // \u5f15\u7528\u7684\u5411\u4e0a\u7c7b\u578b\u8f6c\u6362\uff0c\u7f16\u8bd1\u5668\u65e9\u7ed1\u5b9a\uff0c\u65e0\u5bf9\u8c61\u5207\u7247\u4ea7\u751f Instrument & inst = flute ; // \u5f15\u7528\u7684\u5411\u4e0a\u7c7b\u578b\u8f6c\u6362 inst . play (); return 0 ; } /* output: Instrument::play Instrument::play */ \u540c\u6837\u7684\uff0c Ins \u7c7b\u7684\u5f15\u7528\u7684\u6743\u9650\u4e0d\u8db3\u4ee5\u8bbf\u95ee Wind \u7684 public \u63a5\u53e3\u3002 \u6700\u540e\uff0c\u6307\u9488\u7684\u57fa\u672c\u77e5\u8bc6\uff1a\u6307\u9488\u7684\u503c\u662f\u6307\u6307\u9488\u6240\u6307\u5411\u7684\u5730\u5740\u3002\u800c\u6307\u9488\u672c\u8eab\u662f\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u4e5f\u9700\u8981\u5185\u5b58\u7a7a\u95f4\u5b58\u653e\uff0c\u6307\u9488\u7684\u5730\u5740\u5c31\u662f\u5b58\u653e\u6307\u9488\u7684\u5185\u5b58\u7a7a\u95f4\u7684\u5730\u5740\u3002\u6bd4\u5982 g \u662f Dog \u7c7b\u578b\u7684\u6307\u9488 cout << \"locate of g: \" << g << endl \u662f\u6253\u5370 g \u6307\u5411\u7684\u5185\u5b58\u7a7a\u95f4\u7684\u5730\u5740\u3002 cout << \"locate of g: \" << &g << endl \u662f\u5b58\u50a8 g \u7684\u5185\u5b58\u7a7a\u95f4\u7684\u5730\u5740\u3002 \u800c\u5bf9\u4e8e\u53d8\u91cf\uff0c\u4f8b\u5982 Pet p \uff0c & \u53d6\u5730\u5740\u7b26\u5373\u53ef\u8f93\u51fa\u5730\u5740\u3002\u5373 cout << \"locate of p: \" << &p << endl \u3002 \u865a\u51fd\u6570 \u00b6 \u51fd\u6570\u8c03\u7528\u7ed1\u5b9a \u00b6 \u628a\u51fd\u6570\u4f53\u4e0e\u51fd\u6570\u8c03\u7528\u76f8\u8054\u7cfb\u79f0\u4e3a\u6346\u7ed1\u3002\u5373\u5c06\u51fd\u6570\u4f53\u7684\u5177\u4f53\u5b9e\u73b0\u4ee3\u7801\uff0c\u4e0e\u8c03\u7528\u7684\u51fd\u6570\u540d\u7ed1\u5b9a\uff0c\u6267\u884c\u5230\u8c03\u7528\u4ee3\u7801\u65f6\u8fdb\u5165\u76f4\u63a5\u8fdb\u5165\u6346\u7ed1\u597d\u7684\u51fd\u6570\u4f53\u5185\u90e8\u3002 \u5f53\u6346\u7ed1\u5728\u7a0b\u5e8f\u8fd0\u884c\u4e4b\u524d\uff08\u7531\u7f16\u8bd1\u5668\u548c\u94fe\u63a5\u5668\uff09\u5b8c\u6210\uff0c\u4e5f\u5373\u662f\u8fd0\u884c\u4e4b\u524d\u5df2\u7ecf\u51b3\u5b9a\u4e86\u51fd\u6570\u7a76\u7adf\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\uff0c\u79f0\u4e3a\u65e9\u6346\u7ed1\u3002 \u4f8b\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 #include <iostream> using namespace std ; class Instrument { public : void play () { cout << \"Instrument::play\" << endl ; } }; class Wind : public Instrument { public : // Redefine interface function void play () { cout << \"Wind::play\" << endl ; } }; void tune ( Instrument & i ) { i . play (); } int main () { Wind flute ; tune ( flute ); // (1) Instrument & inst = flute ; // \u5f15\u7528\u7684\u5411\u4e0a\u7c7b\u578b\u8f6c\u6362(\u8d4b\u503c) inst . play (); // (2) // \u5982\u679c\u5bf9 play \u51fd\u6570\u52a0\u4e0a virtual \u5173\u952e\u5b57\uff0c\u5219\u4e24\u6b21\u8c03\u7528\u90fd\u4f1a\u8c03\u7528 Wind \u7684 play \u51fd\u6570\u4e86\u3002\uff08\u865a\u51fd\u6570\u5185\u5bb9\u89c1\u4e0b\uff09 return 0 ; } /* output: Instrument::play Instrument::play */ (1) \u5904\u7531\u4e8e\u662f\u7f16\u8bd1\u5668\u65e9\u7ed1\u5b9a\uff0c\u7f16\u8bd1\u5668\u6839\u636e tune \u51fd\u6570\u7684\u53c2\u6570\u7c7b\u578b\uff08\u4e5f\u5c31\u662f Instrument \uff09\u51b3\u5b9a\u8981\u8c03\u7528 Instrument \u7c7b\u578b\u7684 play \u3002\u6240\u4ee5\u5728\u771f\u6b63\u8fd0\u884c\u7684\u65f6\u5019\uff0c\u5373\u4f7f\u4f20\u8fdb\u53bb\u7684\u662f\u4e00\u4e2a Wind \u7c7b\u578b\uff0c\u7f16\u8bd1\u5668\u4e3a\u4e86\u8c03\u7528 Instrument \u7c7b\u578b\u7684\u6210\u5458\u51fd\u6570\uff0c\u4f1a\u5bf9\u4f20\u8fdb\u53bb\u7684 Wind \u5bf9\u8c61\u8fdb\u884c\u5207\u7247\uff0c\u800c\u4e0d\u4f1a\u53bb\u8c03\u7528 Wind \u7684\u6210\u5458\u51fd\u6570\u3002 (2) \u5904 inst \u662f flute \u7684\u5f15\u7528\uff0c\u7531\u4e8e\u53d1\u751f\u5207\u7247\uff0c\u7f16\u8bd1\u5668\u5c06 tune \u4e2d\u7684\u51fd\u6570\u8c03\u7528 i.play() \u4e0e Instrument::play() \u7ed1\u5b9a\u3002 \u5f53\u6346\u7ed1\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\uff08\u4e0a\u4f8b\u4e2d\u5373\u5b50\u7c7b Wind \u800c\u975e Instrument \uff09\uff0c\u53d1\u751f\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\uff0c\u79f0\u4e3a\u665a\u6346\u7ed1\uff0c\u53c8\u79f0\u52a8\u6001\u6346\u7ed1\u6216\u8fd0\u884c\u65f6\u6346\u7ed1\u3002 \u4e5f\u5373\u662f\u8981\u6c42\u5728\u8fd0\u884c\u65f6\u80fd\u786e\u5b9a\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\uff0c\u5e76\u7ed1\u5b9a\u6b63\u786e\u7684\u51fd\u6570\u3002 \u665a\u6346\u7ed1\u53ea\u5bf9\u7c7b\u4e2d\u7684\u865a\u51fd\u6570\u8d77\u4f5c\u7528\uff0c\u4f7f\u7528 virtual \u5173\u952e\u5b57\u58f0\u660e\u865a\u51fd\u6570\u3002 \u865a\u51fd\u6570\u5b9a\u4e49 \u00b6 \u5bf9\u4e8e\u88ab\u6d3e\u751f\u7c7b\u91cd\u65b0\u5b9a\u4e49\u7684\u6210\u5458\u51fd\u6570\uff0c\u82e5\u5b83\u5728\u57fa\u7c7b\u4e2d\u88ab\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff08\u5982\u4e0b\u6240\u793a\uff09\uff0c\u5219\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u8c03\u7528\u8be5\u6210\u5458\u51fd\u6570\u65f6\uff0c\u7f16\u8bd1\u5668\u5c06\u6839\u636e\u6240\u6307\uff08\u6216\u5f15\u7528\uff09\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u51b3\u5b9a\u662f\u8c03\u7528\u57fa\u7c7b\u4e2d\u7684\u51fd\u6570\uff0c\u8fd8\u662f\u8c03\u7528\u6d3e\u751f\u7c7b\u91cd\u5199\u7684\u51fd\u6570\u3002 1 2 3 4 class Base { public : virtual ReturnType FuncName ( argument ); // \u865a\u51fd\u6570 }; \u82e5\u67d0\u6210\u5458\u51fd\u6570\u5728\u57fa\u7c7b\u4e2d\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff0c\u5f53\u6d3e\u751f\u7c7b override \u5b83\u65f6\uff08\u540c\u540d\uff0c\u540c\u53c2\u6570\u51fd\u6570\uff09\uff0c\u65e0\u8bba\u662f\u5426\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff0c\u8be5\u6210\u5458\u51fd\u6570\u90fd\u4ecd\u7136\u662f\u865a\u51fd\u6570\u3002 \u533a\u5206 override \u548c redefining\u3002redefining \u662f\u5728\u6d3e\u751f\u7c7b\u4e2d\u91cd\u65b0\u5b9a\u4e49\u540c\u540d\u3001\u53c2\u6570\u53ef\u80fd\u4e0d\u540c\u7684\u51fd\u6570\uff0c\u5e76\u5c4f\u853d\u4e86\u57fa\u7c7b\u7684\u6240\u6709\u540c\u540d\u51fd\u6570\u3002override \u5219\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u91cd\u5199\u9690\u85cf\uff0c\u8981\u6c42\u4e0d\u4ec5\u540c\u540d\uff0c\u53c2\u6570\u4e5f\u8981\u76f8\u540c\uff0c\u662f\u4e00\u4e2a\u9488\u5bf9\u865a\u51fd\u6570\u7684\u6982\u5ff5\uff0c\u4f7f\u7528\u6761\u4ef6\u66f4\u52a0\u4e25\u683c\u3002 \u4ec0\u4e48\u662f\u6307\u9488\u548c\u5f15\u7528\u7684\u201c\u5b9e\u9645\u7c7b\u578b\u201d\uff1f 1 2 3 4 Wind flute ; Instrument * inst = & flute ; // \u6307\u9488 inst \u7684\u5b9e\u9645\u7c7b\u578b\u662f Wind Wind flute ; Instrument & inst = flute ; // \u5f15\u7528 inst \u7684\u5b9e\u9645\u7c7b\u578b\u662f Wind \u7531\u6b64\u4e5f\u80fd\u770b\u51fa\u4e3a\u4ec0\u4e48\u53ea\u6709\u5728\u4f7f\u7528\u6307\u9488\u548c\u5f15\u7528\u7684\u65f6\u5019\u591a\u6001\u624d\u53ef\u80fd\u53d1\u751f\uff0c\u800c\u5bf9\u4e8e\u5bf9\u8c61\uff0c\u591a\u6001\u4e0d\u4f1a\u53d1\u751f\u3002\u6bd4\u5982\uff1a 1 2 Wind flute ; Instrument inst = flute ; // \u62f7\u8d1d\u5207\u7247\u540e\u6784\u9020\u4e86 Instrument \u5bf9\u8c61 inst \u6b64\u65f6 inst \u5c31\u662f Instrument \u7c7b\u578b\uff0c\u6ca1\u6709\u201c\u5b9e\u9645\u7c7b\u578b\u201d\u548c\u201c\u8868\u73b0\u7c7b\u578b\u201d\u7684\u533a\u522b\u3002 \u8fd9\u5bf9\u4e8e\u53c2\u6570\u662f Instrument \u7c7b\u578b\u7684\u5168\u5c40\u51fd\u6570\u4e5f\u9002\u7528\uff0c\u5982\u4e0b\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 #include <iostream> using namespace std ; class Instrument { public : virtual void play () { cout << \"Instrument::play\" << endl ; } }; class Wind : public Instrument { public : void play () { cout << \"Wind::play\" << endl ; } }; void tune ( Instrument & ins ) { ins . play (); // \u7531\u4e8e Instrument::play \u662f\u865a\u51fd\u6570\uff0c\u7f16\u8bd1\u65f6\u4e0d\u518d\u76f4\u63a5\u7ed1\u5b9a\uff0c\u8fd0\u884c\u65f6\u6839\u636e ins \u7684\u5b9e\u9645\u7c7b\u578b\u8c03\u7528\u3002 } int main () { Wind flute ; tune ( flute ); // \u5411\u4e0a\u7c7b\u578b\u8f6c\u6362 return 0 ; } /* output: Wind::play */ \u6ce8\u610f\u5230\u4e0a\u65b9 void tune(Instrument& ins) \u7684\u53c2\u6570\u662f\u5f15\u7528\uff08\u6216\u6307\u9488\uff09\uff0c\u624d\u6210\u529f\u8d77\u5230\u4e86\u665a\u7ed1\u5b9a\u6548\u679c\u3002\u5982\u679c\u53c2\u6570\u662f void tune(Instrument ins) \uff0c\u90a3\u4e48\u53d1\u751f\u62f7\u8d1d\u578b\u5207\u7247\uff0c\u4f9d\u7136\u65e0\u6cd5\u665a\u7ed1\u5b9a\u3002 \u865a\u51fd\u6570\u8868 \u00b6 \u6982\u8ff0 \u00b6 \u4e3a\u4e86\u5b9e\u73b0 C++ \u7684\u591a\u6001\uff0cC++ \u4f7f\u7528\u4e86\u4e00\u79cd\u52a8\u6001\u7ed1\u5b9a\u7684\u6280\u672f\u3002\u8fd9\u4e2a\u6280\u672f\u7684\u6838\u5fc3\u662f\u865a\u51fd\u6570\u8868\uff08\u7b80\u79f0\u865a\u8868\uff09\u3002\u672c\u8282\u4ecb\u7ecd\u865a\u51fd\u6570\u8868\u662f\u5982\u4f55\u5b9e\u73b0\u52a8\u6001\u7ed1\u5b9a\u7684\u3002 \u7c7b\u7684\u865a\u8868 \u00b6 \u6bcf\u4e2a\u5305\u542b\u4e86\u865a\u51fd\u6570\u7684\u7c7b\u90fd\u5305\u542b\u4e00\u4e2a\u5c5e\u4e8e\u6574\u4e2a\u7c7b\u7684\u865a\u8868\u3002 \u5f53\u4e00\u4e2a\u7c7b A \u7ee7\u627f\u53e6\u4e00\u4e2a\u7c7b B \u65f6\uff0c\u7c7b A \u4f1a\u7ee7\u627f\u7c7b B \u7684\u51fd\u6570\u7684\u8c03\u7528\u6743\u3002\u6240\u4ee5\u5982\u679c\u4e00\u4e2a\u57fa\u7c7b\u5305\u542b\u4e86\u865a\u51fd\u6570\uff0c\u90a3\u4e48\u5176\u7ee7\u627f\u7c7b\u4e5f\u53ef\u8c03\u7528\u8fd9\u4e9b\u865a\u51fd\u6570\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u4e00\u4e2a\u7c7b\u7ee7\u627f\u4e86\u5305\u542b\u865a\u51fd\u6570\u7684\u57fa\u7c7b\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7c7b\u4e5f\u62e5\u6709\u81ea\u5df1\u7684\u865a\u8868\u3002 \u4f8b\u5982\uff1a 1 2 3 4 5 6 7 8 9 class A { public : virtual void vfunc1 (); virtual void vfunc2 (); void func1 (); void func2 (); private : int m_data1 , m_data2 ; }; \u7c7b A \u5305\u542b\u865a\u51fd\u6570 vfunc1 \u3001 vfunc2 \uff0c\u7531\u4e8e\u7c7b A \u5305\u542b\u865a\u51fd\u6570\uff0c\u6545\u7c7b A \u62e5\u6709\u4e00\u4e2a\u865a\u8868\u3002 \u865a\u8868\u662f\u4e00\u4e2a\u6307\u9488\u6570\u7ec4\uff0c\u5176\u5143\u7d20\u662f\u865a\u51fd\u6570\u7684\u6307\u9488\uff0c\u6bcf\u4e2a\u5143\u7d20\u5bf9\u5e94\u4e00\u4e2a\u865a\u51fd\u6570\u7684\u51fd\u6570\u6307\u9488\u3002\u9700\u8981\u6307\u51fa\u7684\u662f\uff0c\u666e\u901a\u7684\u51fd\u6570\u5373\u975e\u865a\u51fd\u6570\uff0c\u5176\u8c03\u7528\u5e76\u4e0d\u9700\u8981\u7ecf\u8fc7\u865a\u8868\uff0c\u6240\u4ee5\u865a\u8868\u7684\u5143\u7d20\u5e76\u4e0d\u5305\u62ec\u666e\u901a\u51fd\u6570\u7684\u51fd\u6570\u6307\u9488\u3002 \u865a\u8868\u5185\u7684\u6761\u76ee\uff0c\u5373\u865a\u51fd\u6570\u6307\u9488\u7684\u8d4b\u503c\u53d1\u751f\u5728\u7f16\u8bd1\u5668\u7684\u7f16\u8bd1\u9636\u6bb5\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728\u4ee3\u7801\u7684\u7f16\u8bd1\u9636\u6bb5\uff0c\u865a\u8868\u5c31\u5b8c\u6210\u4e86\u6784\u9020\u3002 \u865a\u8868\u6307\u9488 \u00b6 \u865a\u8868\u662f\u5c5e\u4e8e\u7c7b\u7684\uff0c\u800c\u4e0d\u662f\u5c5e\u4e8e\u67d0\u4e2a\u5177\u4f53\u7684\u5bf9\u8c61\uff0c\u4e00\u4e2a\u7c7b\u53ea\u9700\u8981\u4e00\u4e2a\u865a\u8868\u5373\u53ef\uff0c\u540c\u4e00\u4e2a\u7c7b\u7684\u6240\u6709\u5bf9\u8c61\u90fd\u4f7f\u7528\u540c\u4e00\u4e2a\u865a\u8868\uff08\u4f46\u53e6\u4e00\u65b9\u9762\uff0c\u4e0d\u540c\u7684\u7c7b\u7684\u865a\u8868\u4e0d\u540c\uff0c\u5373\u4f7f\u5b83\u4eec\u6709\u7ee7\u627f\u5173\u7cfb\uff09\u3002 \u6bcf\u4e00\u4e2a\u865a\u51fd\u6570\u7c7b\u5bf9\u8c61\u5185\u90e8\u5305\u542b\u4e00\u4e2a\u6307\u5411\u6240\u5c5e\u7c7b\u7684\u865a\u8868\u7684\u6307\u9488\uff0c\u6765\u6307\u5411\u81ea\u5df1\u6240\u4f7f\u7528\u7684\u865a\u8868\u3002\u4e3a\u4e86\u8ba9\u6bcf\u4e2a\u5305\u542b\u865a\u8868\u7684\u7c7b\u7684\u5bf9\u8c61\u90fd\u62e5\u6709\u4e00\u4e2a\u865a\u8868\u6307\u9488\uff0c\u7f16\u8bd1\u5668\u5728\u7c7b\u4e2d\u9690\u5f0f\u6dfb\u52a0\u4e86\u4e00\u4e2a\u6307\u9488 *vptr \uff0c\u7528\u6765\u6307\u5411\u865a\u8868\u3002\u8fd9\u6837\uff0c\u5f53\u7c7b\u7684\u5bf9\u8c61\u5728\u521b\u5efa\u65f6\u4fbf\u62e5\u6709\u4e86\u8fd9\u4e2a\u6307\u9488\uff0c\u4e14\u8fd9\u4e2a\u6307\u9488\u7684\u503c\u4f1a\u81ea\u52a8\u88ab\u8bbe\u7f6e\u4e3a\u6307\u5411\u7c7b\u7684\u865a\u8868\u3002 \u8fdb\u4e00\u6b65\u800c\u8a00\uff0c\u5bf9\u8c61\u7684\u865a\u8868\u6307\u9488\u7528\u6765\u6307\u5411\u81ea\u5df1\u6240\u5c5e\u7c7b\u7684\u865a\u8868\uff0c\u865a\u8868\u4e2d\u7684\u51fd\u6570\u6307\u9488\u4f1a\u6307\u5411\u5176\u7ee7\u627f\u7684\u6700\u8fd1\u7684\u4e00\u4e2a\u7c7b\u7684\u865a\u51fd\u6570\u4e0e\u81ea\u8eab\u91cd\u5199\u8986\u76d6\u7684\u865a\u51fd\u6570\u3002 \u524d\u6587\u6307\u51fa\uff0c\u4e00\u4e2a\u7ee7\u627f\u7c7b\u7684\u57fa\u7c7b\u5982\u679c\u5305\u542b\u865a\u51fd\u6570\uff0c\u90a3\u4e2a\u8fd9\u4e2a\u7ee7\u627f\u7c7b\u4e5f\u6709\u62e5\u6709\u81ea\u5df1\u7684\u4e0d\u540c\u7684\u865a\u8868\u3002\u8fd9\u4e2a\u7ee7\u627f\u7c7b\u7684\u5bf9\u8c61\u4e5f\u5305\u542b\u4e00\u4e2a\u865a\u8868\u6307\u9488\uff0c\u7528\u6765\u6307\u5411\u5b83\u7684\u865a\u8868\u3002 \u52a8\u6001\u7ed1\u5b9a \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 class A { public : virtual void vfunc1 (); virtual void vfunc2 (); void func1 (); void func2 (); private : int m_data1 , m_data2 ; }; class B : public A { public : virtual void vfunc1 (); void func1 (); private : int m_data3 ; }; class C : public B { public : virtual void vfunc2 (); void func2 (); private : int m_data1 , m_data4 ; }; \u7c7b A \u662f\u57fa\u7c7b\uff0c\u7c7b B \u7ee7\u627f\u7c7b A \uff0c\u7c7b C \u53c8\u7ee7\u627f\u7c7b B \u3002\u7531\u4e8e\u8fd9\u4e09\u4e2a\u7c7b\u90fd\u6709\u865a\u51fd\u6570\uff0c\u6545\u7f16\u8bd1\u5668\u4e3a\u6bcf\u4e2a\u7c7b\u90fd\u521b\u5efa\u4e86\u4e00\u4e2a\u865a\u8868\uff0c\u5373\u7c7b A \u7684\u865a\u8868\uff0c\u7c7b B \u7684\u865a\u8868\uff0c\u7c7b C \u7684\u865a\u8868\u3002\u7c7b A \uff0c\u7c7b B \uff0c\u7c7b C \u7684\u5bf9\u8c61\u90fd\u62e5\u6709\u4e00\u4e2a\u865a\u8868\u6307\u9488 *__vptr \u7528\u6765\u6307\u5411\u81ea\u5df1\u6240\u5c5e\u7c7b\u7684\u865a\u8868\u3002 \u6ce8\u610f\u5230\u524d\u6587\u6240\u8ff0\uff1a\u5bf9\u8c61\u7684\u865a\u8868\u6307\u9488\u7528\u6765\u6307\u5411\u81ea\u5df1\u6240\u5c5e\u7c7b\u7684\u865a\u8868\uff0c\u865a\u8868\u4e2d\u7684\u51fd\u6570\u6307\u9488\u4f1a\u6307\u5411\u5176\u7ee7\u627f\u7684\u6700\u8fd1\u7684\u4e00\u4e2a\u7c7b\u7684\u865a\u51fd\u6570\uff08\u8fd9\u4e5f\u5c31\u662f\u4e3a\u4ec0\u4e48 C \u7c7b\u5bf9\u8c61\u7684\u865a\u8868\u4e2d\u7684\u51fd\u6570\u6307\u9488\u4f1a\u6307\u5411 B::vfunc1 \uff09\u4e0e\u81ea\u8eab\u91cd\u5199\u8986\u76d6\u7684\u865a\u51fd\u6570\u3002 \u7c7b A \u5305\u62ec\u4e24\u4e2a\u865a\u51fd\u6570\uff0c\u6545 A \u7684\u865a\u8868\u5305\u542b\u4e24\u4e2a\u6307\u9488\uff0c\u5206\u522b\u6307\u5411 A::vfunc1() \u548c A::vfunc2() \u3002 \u7c7b B \u7ee7\u627f\u4e8e\u7c7b A \uff0c\u6545\u7c7b B \u53ef\u4ee5\u8c03\u7528\u7c7b A \u7684\u51fd\u6570\uff0c\u4f46\u7531\u4e8e\u7c7b B \u91cd\u5199\u4e86 B::vfunc1() \u51fd\u6570\uff0c\u6545 B \u7684\u865a\u8868\u7684\u4e24\u4e2a\u6307\u9488\u5206\u522b\u6307\u5411 B::vfunc1() \u548c A::vfunc2() \u3002 \u7c7b C \u7ee7\u627f\u4e8e\u7c7b B \uff0c\u6545\u7c7b C \u53ef\u4ee5\u8c03\u7528\u7c7b B \u7684\u51fd\u6570\uff0c\u4f46\u7531\u4e8e\u7c7b C \u91cd\u5199\u4e86 C::vfunc2() \u51fd\u6570\uff0c\u6545 C \u7684\u865a\u8868\u7684\u4e24\u4e2a\u6307\u9488\u5206\u522b\u6307\u5411 B::vfunc1() \uff08\u6307\u5411\u7ee7\u627f\u7684\u6700\u8fd1\u7684\u4e00\u4e2a\u7c7b\u7684\u51fd\u6570\uff09\u548c C::vfunc2() \u3002 \u603b\u800c\u8a00\u4e4b\uff0c\u7c7b X \u7684\u865a\u51fd\u6570\u8868\u7684\u51fd\u6570\u6307\u9488\u6307\u5411\u7ee7\u627f\u94fe\u4e0a\u6240\u6709\u6ca1\u6709\u53d1\u751f\u91cd\u5199\u8986\u76d6\u7684\u865a\u51fd\u6570\u548c\u88ab X \u7c7b\u91cd\u5199\u8986\u76d6\u7684\u865a\u51fd\u6570\uff08\u4f46\u662f\uff0c\u5982\u679c\u7ee7\u627f\u94fe\u4e0a X \u4e4b\u4e0a\u7684\u7c7b\u4e2d\uff0c\u67d0\u51fd\u6570\u53d1\u751f\u4e86\u91cd\u5199\u8986\u76d6\uff0c\u4f46\u540c\u65f6\u91cd\u65b0\u58f0\u660e\u4e86 virtual \u5173\u952e\u5b57\uff0c\u90a3\u4e48\u5b83\u4f1a\u7ee7\u7eed\u51fa\u73b0\u5728\u8be5\u7c7b\u7684\u6d3e\u751f\u7c7b\u7684\u865a\u51fd\u6570\u8868\u4e2d\uff09\u3002\u800c\u6bcf\u4e00\u4e2a\u7c7b X \u7684\u5bf9\u8c61\u90fd\u6709\u4e00\u4e2a\u72ec\u5c5e\u4e8e\u81ea\u8eab\u7684\u865a\u8868\u6307\u9488\uff0c\u6765\u6307\u5411 X \u7c7b\u7684\u865a\u8868\u3002\u6ce8\u610f\u5230\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u6d3e\u751f\u7c7b\u5bf9\u8c61 y \uff0c y \u7684\u865a\u8868\u6307\u9488\u4f4d\u4e8e\u57fa\u7c7b\u90e8\u5206\uff0c\u4e5f\u5c31\u662f y \u7684\u5185\u5b58\u7a7a\u95f4\u7684\u5934\u90e8\u3002\u7ed3\u5408\u5230\u524d\u6587\u53d9\u8ff0\u7684\u201c\u7ee7\u627f\u7c7b\u7684\u5185\u5b58\u7ed3\u6784\u201d\uff0c\u65e0\u8bba\u7528\u54ea\u4e00\u4e2a\u57fa\u7c7b\u7684\u6307\u9488\u53bb\u6307\u5411\u4e00\u4e2a\u6d3e\u751f\u7c7b\u5bf9\u8c61\uff0c\u57fa\u7c7b\u6307\u9488\u90fd\u80fd\u6709\u6743\u8bbf\u95ee\u6d3e\u751f\u7c7b\u5bf9\u8c61\u5185\u5b58\u7a7a\u95f4\u7684\u5934\u90e8\uff0c\u90fd\u6709\u6743\u8bbf\u95ee\u6d3e\u751f\u7c7b\u5bf9\u8c61\u7684\u865a\u51fd\u6570\u6307\u9488\uff0c\u8fdb\u800c\u80fd\u591f\u5b8c\u5168\u8bbf\u95ee\u6d3e\u751f\u7c7b\u7684\u865a\u51fd\u6570\u8868\u3002 \u8fd9\u4e5f\u53ef\u4ee5\u89e3\u91ca\uff0c\u4e3a\u4ec0\u4e48\u53ea\u6709\u6307\u9488\u578b\u7684\u5207\u7247\u80fd\u591f\u5b9e\u73b0\u665a\u7ed1\u5b9a\u3002\u56e0\u4e3a\u62f7\u8d1d\u578b\u7684\u5207\u7247\u65e0\u6cd5\u8bbf\u95ee\u539f\u5bf9\u8c61\u7684\u5185\u5b58\u7a7a\u95f4\u5934\u90e8\uff0c\u800c\u662f\u5c06\u8fd9\u7247\u5185\u5b58\u7a7a\u95f4\u4e0a\u7684\u6570\u636e\u5728\u53e6\u4e00\u7247\u5185\u5b58\u7a7a\u95f4\u62f7\u8d1d\u4e86\u4e00\u756a\u3002 \u4f8b\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 class A { public : virtual void vfunc1 (); virtual void vfunc2 (); void func1 (); void func2 (); private : int m_data1 , m_data2 ; }; class B : public A { public : virtual void vfunc1 (); void func1 (); private : int m_data3 ; }; class C : public B { public : virtual void vfunc2 (); void func2 (); private : int m_data1 , m_data4 ; }; int main () { B bObject ; A * p = & bObject ; p -> vfunc1 (); } \u7a0b\u5e8f\u5728\u6267\u884c p->vfunc1() \u65f6\uff0c\u68c0\u6d4b\u5230 p \u662f\u4e2a\u6307\u9488\uff08\u5df2\u7ecf\u65e0\u9700\u5728\u610f\u662f\u4ec0\u4e48\u7c7b\u7684\u6307\u9488\u4e86\uff09\uff0c\u4e14\u8c03\u7528\u7684\u51fd\u6570\u662f\u865a\u51fd\u6570\u3002\u9996\u5148\uff0c\u6839\u636e\u865a\u8868\u6307\u9488 p->__vptr \u6765\u8bbf\u95ee\u5bf9\u8c61 bObject \u5bf9\u5e94\u7684\u865a\u8868\u3002\u867d\u7136\u6307\u9488 p \u662f\u57fa\u7c7b A* \u7c7b\u578b\uff0c\u4f46\u662f *__vptr \u4e5f\u662f\u57fa\u7c7b\u7684\u4e00\u90e8\u5206\uff0c\u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7 p->__vptr \u53ef\u4ee5\u8bbf\u95ee\u5230\u5bf9\u8c61\u5bf9\u5e94\u7684\u865a\u8868\u3002 \u7136\u540e\uff0c\u5728\u865a\u8868\u4e2d\u67e5\u627e\u6240\u8c03\u7528\u7684\u51fd\u6570\u5bf9\u5e94\u7684\u6761\u76ee\u3002\u7531\u4e8e\u865a\u8868\u5728\u7f16\u8bd1\u9636\u6bb5\u5c31\u5df2\u5b8c\u6210\u6784\u9020\uff0c\u6240\u4ee5\u53ef\u4ee5\u6839\u636e\u6240\u8c03\u7528\u7684\u51fd\u6570\u5b9a\u4f4d\u5230\u865a\u8868\u4e2d\u7684\u5bf9\u5e94\u6761\u76ee\u3002 p->vfunc1() \u7684\u8c03\u7528\u5bf9\u5e94 B \u865a\u8868\u7684\u7b2c\u4e00\u9879\uff0c\u5373\u662f B::vfunc1 \u5bf9\u5e94\u7684\u6761\u76ee\u3002 \u6700\u540e\uff0c\u6839\u636e\u865a\u8868\u4e2d\u627e\u5230\u7684\u51fd\u6570\u6307\u9488\uff0c\u8c03\u7528\u51fd\u6570\u3002\u4ece\u56fe\u53ef\u4ee5\u770b\u5230\uff0c B \u865a\u8868\u7684\u7b2c\u4e00\u9879\u6307\u5411 B::vfunc1() \uff0c\u6240\u4ee5 p->vfunc1() \u5b9e\u8d28\u4f1a\u8c03\u7528 B::vfunc1() \u51fd\u6570\u3002 \u53c8\u6bd4\u5982\uff1a 1 2 3 4 5 int main () { A aObject ; A * p = & aObject ; p -> vfunc1 (); } p \u6307\u5411\u7c7b A \u7684\u5bf9\u8c61\uff0c\u5f53 aObject \u5728\u521b\u5efa\u65f6\uff0c\u5b83\u7684\u865a\u8868\u6307\u9488 __vptr \u5df2\u8bbe\u7f6e\u4e3a\u6307\u5411 A \u7684\u865a\u8868\uff0c\u8fd9\u6837 p->__vptr \u5c31\u6307\u5411 A \u7684\u865a\u8868\u3002 vfunc1 \u5728 A \u7684\u865a\u8868\u5bf9\u5e94\u5728\u6761\u76ee\u6307\u5411\u4e86 A::vfunc1() \u51fd\u6570\uff0c\u6240\u4ee5 p->vfunc1() \u5b9e\u8d28\u4f1a\u8c03\u7528 A::vfunc1() \u51fd\u6570\u3002 \u52a8\u6001\u7ed1\u5b9a\u7684\u6761\u4ef6 \u00b6 \u901a\u8fc7\u6307\u9488\u6765\u8c03\u7528\u51fd\u6570 \u6307\u9488 upcast \u5411\u4e0a\u7c7b\u578b\u8f6c\u6362 \u8c03\u7528\u7684\u662f\u865a\u51fd\u6570 \u5982\u679c\u4e00\u4e2a\u51fd\u6570\u8c03\u7528\u7b26\u5408\u4ee5\u4e0a\u4e09\u4e2a\u6761\u4ef6\uff0c\u7f16\u8bd1\u5668\u5c31\u4f1a\u628a\u8be5\u51fd\u6570\u8c03\u7528\u7f16\u8bd1\u6210\u52a8\u6001\u7ed1\u5b9a\uff0c\u5176\u51fd\u6570\u7684\u8c03\u7528\u8fc7\u7a0b\u8d70\u7684\u662f\u4e0a\u8ff0\u901a\u8fc7\u865a\u8868\u7684\u673a\u5236\u3002 \u865a\u6307\u9488\u5927\u5c0f \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 #include <iostream> using namespace std ; #pragma pack(4) // \u6309\u7167 4 \u5b57\u8282\u8fdb\u884c\u5185\u5b58\u5bf9\u9f50 class NoVirtual { // \u6ca1\u6709\u865a\u51fd\u6570 int a ; public : void f1 () const { } int f2 () const { return 1 ; } }; class OneVirtual { // \u4e00\u4e2a\u865a\u51fd\u6570 int a ; public : virtual void f1 () const { } int f2 () const { return 1 ; } }; class TwoVirtual { // \u4e24\u4e2a\u865a\u51fd\u6570 int a ; public : virtual void f1 () const { } virtual int f2 () const { return 1 ; } }; int main () { cout << \"int: \" << sizeof ( int ) << endl ; cout << \"NoVirtual: \" << sizeof ( NoVirtual ) << endl ; cout << \"void*: \" << sizeof ( void * ) << endl ; cout << \"OneVirtual: \" << sizeof ( OneVirtual ) << endl ; cout << \"TwoVirtual: \" << sizeof ( TwoVirtual ) << endl ; return 0 ; } /* output: int: 4 NoVirtual: 4 void*: 8 OneVirtual: 12 TwoVirtual: 12 */ \u53ef\u4ee5\u89c2\u5bdf\u5230\uff0c\u865a\u6307\u9488\u7684\u5927\u5c0f\u4e3a 8 \u5b57\u8282\uff0c\u4e14\u865a\u6307\u9488\u53ea\u662f\u6307\u5411\u4e86\u865a\u8868\uff0c\u865a\u51fd\u6570\u7684\u4e2a\u6570\u53ea\u662f\u5f71\u54cd\u865a\u8868\u7684\u5927\u5c0f\uff0c\u4e0d\u5f71\u54cd\u865a\u6307\u9488\u7684\u5927\u5c0f\u3002 \u603b\u7ed3 \u00b6 \u901a\u8fc7\u4f7f\u7528\u8fd9\u4e9b\u865a\u51fd\u6570\u8868\uff0c\u5373\u4f7f\u4f7f\u7528\u7684\u662f\u57fa\u7c7b\u7684\u6307\u9488\u6765\u8c03\u7528\u51fd\u6570\uff0c\u4e5f\u53ef\u4ee5\u8fbe\u5230\u6b63\u786e\u8c03\u7528\u8fd0\u884c\u4e2d\u5b9e\u9645\u5bf9\u8c61\u7684\u865a\u51fd\u6570\u3002 \u628a\u7ecf\u8fc7\u865a\u8868\u8c03\u7528\u865a\u51fd\u6570\u7684\u8fc7\u7a0b\u79f0\u4e3a\u52a8\u6001\u7ed1\u5b9a\uff0c\u5176\u8868\u73b0\u51fa\u6765\u7684\u73b0\u8c61\u79f0\u4e3a\u8fd0\u884c\u65f6\u591a\u6001\u3002\u52a8\u6001\u7ed1\u5b9a\u533a\u522b\u4e8e\u4f20\u7edf\u7684\u51fd\u6570\u8c03\u7528\uff0c\u4f20\u7edf\u7684\u51fd\u6570\u8c03\u7528\u6211\u4eec\u79f0\u4e4b\u4e3a\u9759\u6001\u7ed1\u5b9a\uff0c\u5373\u51fd\u6570\u7684\u8c03\u7528\u5728\u7f16\u8bd1\u9636\u6bb5\u5c31\u53ef\u4ee5\u786e\u5b9a\u4e0b\u6765\u3002\u5c01\u88c5\uff0c\u7ee7\u627f\uff0c\u591a\u6001\u662f\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u7684\u4e09\u4e2a\u7279\u5f81\uff0c\u800c\u591a\u6001\u662f\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u7684\u5173\u952e\u3002C++ \u901a\u8fc7\u865a\u51fd\u6570\u8868\uff0c\u5b9e\u73b0\u4e86\u865a\u51fd\u6570\u4e0e\u5bf9\u8c61\u7684\u52a8\u6001\u7ed1\u5b9a\uff0c\u4ece\u800c\u6784\u5efa\u4e86 C++ \u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u57fa\u77f3\u3002 \u865a\u51fd\u6570\u4e0e\u6784\u9020\u3001\u6790\u6784 \u00b6 \u865a\u51fd\u6570\u4e0e\u6784\u9020\u51fd\u6570 \u00b6 \u5f53\u521b\u5efa\u4e00\u4e2a\u5305\u542b\u6709\u865a\u51fd\u6570\u7684\u5bf9\u8c61\u65f6\uff0c\u5fc5\u987b\u521d\u59cb\u5316\u5b83\u7684 VPTR \u4ee5\u6307\u5411\u76f8\u5e94\u7684 VTABLE\u3002\u8bbe\u7f6e VPTR \u7684\u5de5\u4f5c\u7531\u6784\u9020\u51fd\u6570\u5b8c\u6210\u3002\u7f16\u8bd1\u5668\u5728\u6784\u9020\u51fd\u6570\u7684\u5f00\u5934\u79d8\u5bc6\u7684\u63d2\u5165\u80fd\u521d\u59cb\u5316 VPTR \u7684\u4ee3\u7801\u3002 \u6784\u9020\u51fd\u6570\u4e0d\u80fd\u4e5f\u4e0d\u5fc5\u662f\u865a\u51fd\u6570\u3002 \u4e0d\u80fd\uff1a\u5982\u679c\u6784\u9020\u51fd\u6570\u662f\u865a\u51fd\u6570\uff0c\u5219\u521b\u5efa\u5bf9\u8c61\u65f6\u9700\u8981\u5148\u77e5\u9053 VPTR\uff0c\u800c\u5728\u6784\u9020\u51fd\u6570\u8c03\u7528\u524d\uff0cVPTR \u672a\u521d\u59cb\u5316\u3002 \u4e0d\u5fc5\uff1a\u6784\u9020\u51fd\u6570\u7684\u4f5c\u7528\u662f\u63d0\u4f9b\u7c7b\u4e2d\u6210\u5458\u521d\u59cb\u5316\uff0c\u8c03\u7528\u65f6\u660e\u786e\u6307\u5b9a\u8981\u521b\u5efa\u5bf9\u8c61\u7684\u7c7b\u578b\uff0c\u6ca1\u6709\u5fc5\u8981\u662f\u865a\u51fd\u6570\u3002 \u793a\u4f8b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 #include <iostream> using namespace std ; class Base { public : virtual void foo () { cout << \"Base::foo\" << endl ; } Base () { foo (); } // \u5728\u6784\u9020\u51fd\u6570\u4e2d\u8c03\u7528\u865a\u51fd\u6570 foo void bar () { foo (); } // \u5728\u666e\u901a\u51fd\u6570\u4e2d\u8c03\u7528\u865a\u51fd\u6570 foo }; class Derived : public Base { public : int _num ; void foo () { cout << \"Derived::foo \" << _num << endl ;} Derived ( int j ) : Base (), _num ( j ) { } }; int main () { Derived d ( 0 ); Base & b = d ; b . bar (); b . foo (); return 0 ; } /* output: Base::foo Derived::foo 0 Derived::foo 0 */ \u6ce8\u610f\u5230\uff0c\u6784\u9020\u51fd\u6570\u91cc\u8c03\u7528\u7684\u662f Base::foo() \uff0c\u56e0\u4e3a\u521d\u59cb\u5316\u5217\u8868\u662f\u6309\u7167\u5b9a\u4e49\u7684\u5148\u540e\u987a\u5e8f\u6765\u521d\u59cb\u5316\u7684\uff0c\u4e0e\u521d\u59cb\u5316\u5217\u8868\u5199\u6cd5\u5148\u540e\u987a\u5e8f\u65e0\u5173\u3002\u800c\u6211\u4eec\u5df2\u77e5\uff0c\u521d\u59cb\u5316\u662f\u5148\u521d\u59cb\u5316\u57fa\u7c7b\u90e8\u5206\uff0c\u518d\u521d\u59cb\u5316\u6d3e\u751f\u7c7b\u90e8\u5206\u3002\u6545\u800c Derived \u7684\u521d\u59cb\u5316\u5217\u8868\u4e2d\u8c03\u7528 Base \u6765\u8fdb\u884c\u6784\u9020\u65f6\uff0c\u4e00\u5b9a\u4f1a\u5148\u8c03\u7528 Base \u7684\u672c\u5730\u7248\u672c\u7684 foo \uff0c\u56e0\u4e3a _num \u8fd8\u672a\u88ab\u521d\u59cb\u5316\u3002\u4e0d\u8fc7\uff0c\u5982\u679c\u5c06 _num \u53bb\u6389\u53c8\u4f1a\u5982\u4f55\uff1f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 #include <iostream> using namespace std ; class Base { public : virtual void foo () { cout << \"Base::foo\" << endl ; } Base () { foo (); } // \u5728\u6784\u9020\u51fd\u6570\u4e2d\u8c03\u7528\u865a\u51fd\u6570 foo void bar () { foo (); } // \u5728\u666e\u901a\u51fd\u6570\u4e2d\u8c03\u7528\u865a\u51fd\u6570 foo }; class Derived : public Base { public : void foo () { cout << \"Derived::foo\" << endl ; } Derived ( int j ) : Base () { } }; int main () { Derived d ( 0 ); return 0 ; } /* output: Base::foo */ \u4f9d\u7136\u53ea\u662f\u8c03\u7528\u4e86\u672c\u5730\u7248\u672c\u7684 foo \u51fd\u6570\uff0c\u56e0\u4e3a\u5728\u6784\u9020\u51fd\u6570\u4e2d\uff0c\u57fa\u7c7b\u4e2d\u8c03\u7528\u865a\u51fd\u6570\u5982\u679c\u5141\u8bb8\u591a\u6001\u7279\u6027\u7684\u8bdd\uff0c\u5c31\u4f1a\u4f7f\u7528\u6d3e\u751f\u7c7b\u4e2d\u8fd8\u6ca1\u6709\u6784\u9020\u7684\u90e8\u5206\uff0c\u8fd9\u6709\u98ce\u9669\u3002\u6545\u800c C++11 \u7981\u6b62\u4e86\u5728\u672a\u5b8c\u6210\u6784\u9020\u4e4b\u524d\u542f\u7528\u591a\u6001\u7279\u6027\u3002 \u9000\u56de\u5230\u6700\u5f00\u59cb\u7684\u4f8b\u5b50\u3002\u5728\u6784\u9020 d \u4e4b\u540e\uff0c b.bar() \u8c03\u7528\u4e4b\u540e\u5b9e\u9645\u4e0a\u4e3a b.foo() \uff0c\u5b8c\u6210\u865a\u51fd\u6570\u5339\u914d\u8c03\u7528\uff0c\u6545\u800c\u8c03\u7528\u4e86 Derived::foo() \u3002 \u603b\u7ed3\u3002\u5728\u6784\u9020\u51fd\u6570\u4e2d\u8c03\u7528\u4e00\u4e2a\u865a\u51fd\u6570\uff0c\u88ab\u8c03\u7528\u7684\u53ea\u662f\u8fd9\u4e2a\u51fd\u6570\u7684\u672c\u5730\u7248\u672c\uff08\u5373\u5f53\u524d\u7c7b\u7684\u7248\u672c\uff09\uff0c\u5373\u865a\u673a\u5236\u5728\u6784\u9020\u51fd\u6570\u4e2d\u4e0d\u5de5\u4f5c\u3002 \u6784\u9020\u51fd\u6570\u8bed\u53e5\u7684\u6267\u884c\u987a\u5e8f\uff08\u4e0e\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u5217\u8868\u987a\u5e8f\u65e0\u5173\uff09\uff1a \u57fa\u7c7b\u521d\u59cb\u5316 \u5bf9\u8c61\u6210\u5458\u521d\u59cb\u5316 \u6784\u9020\u51fd\u6570\u4f53 \u865a\u51fd\u6570\u4e0e\u6790\u6784\u51fd\u6570 \u00b6 \u6790\u6784\u51fd\u6570\u53ef\u4ee5\u662f\u865a\u7684\uff0c\u4e14\u5e38\u5e38\u662f\u865a\u7684\u3002\u865a\u6790\u6784\u51fd\u6570\u4ecd\u9700\u5b9a\u4e49\u51fd\u6570\u4f53\u3002\u5e76\u4e14\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u662f\u865a\u7684\uff0c\u90a3\u4e48\u6d3e\u751f\u7c7b\u7684\u6790\u6784\u51fd\u6570\u4e5f\u662f\u865a\u7684\uff08\u8fd9\u548c\u91cd\u5199\u8986\u76d6\u8981\u6c42\u540c\u540d\u540c\u53c2\u6570\u5e76\u4e0d\u4e00\u6837\uff09\u3002 \u865a\u6790\u6784\u51fd\u6570\u7684\u7528\u9014\uff1a\u5f53\u5220\u9664\u57fa\u7c7b\u5bf9\u8c61\u6307\u9488\u65f6\uff0c\u7f16\u8bd1\u5668\u5c06\u6839\u636e\u6307\u9488\u6240\u6307\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\uff0c\u8c03\u7528\u76f8\u5e94\u7684\u6790\u6784\u51fd\u6570\u3002 \u82e5\u57fa\u7c7b\u6790\u6784\u4e0d\u662f\u865a\u51fd\u6570\uff0c\u5219\u5220\u9664\u57fa\u7c7b\u6307\u9488\u6240\u6307\u6d3e\u751f\u7c7b\u5bf9\u8c61\u65f6\uff0c\u7f16\u8bd1\u5668\u4ec5\u81ea\u52a8\u8c03\u7528\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\uff0c\u800c\u4e0d\u4f1a\u8003\u8651\u5b9e\u9645\u5bf9\u8c61\u662f\u4e0d\u662f\u57fa\u7c7b\u7684\u5bf9\u8c61\u3002\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5185\u5b58\u6cc4\u6f0f\u3002 \u5728\u6790\u6784\u51fd\u6570\u4e2d\u8c03\u7528\u4e00\u4e2a\u865a\u51fd\u6570\uff0c\u88ab\u8c03\u7528\u7684\u53ea\u662f\u8fd9\u4e2a\u51fd\u6570\u7684\u672c\u5730\u7248\u672c\uff0c\u5373\u865a\u673a\u5236\u5728\u6790\u6784\u51fd\u6570\u4e2d\u4e0d\u5de5\u4f5c\u3002\u7406\u7531\u548c\u6784\u9020\u51fd\u6570\u7c7b\u4f3c\uff0c\u56e0\u4e3a\u6d3e\u751f\u7c7b\u5148\u88ab\u6790\u6784\u3002\u5982\u679c\u5728\u57fa\u7c7b\u7684\u6790\u6784\u91cc\u5141\u8bb8\u542f\u7528\u591a\u6001\u6027\uff0c\u53ef\u80fd\u5c31\u4f1a\u8bbf\u95ee\u5230\u5df2\u7ecf\u88ab\u6d3e\u751f\u7c7b\u6790\u6784\u51fd\u6570\u91ca\u653e\u7684\u5185\u5b58\uff0c\u5b58\u5728\u98ce\u9669\u3002 \u53ef\u4ee5\u8fdb\u4e00\u6b65\u8fd9\u4e48\u7406\u89e3\uff1a\u6d3e\u751f\u7c7b\u7684\u6790\u6784\u51fd\u6570\u5176\u5b9e\u662f\u53ea\u6790\u6784\u6d3e\u751f\u7c7b\u591a\u51fa\u7684\u90e8\u5206\u3002\u66f4\u5177\u4f53\u7684\u7ec6\u8282\u662f\u865a\u6307\u9488\u6307\u5411\u7684\u5b50\u7c7b\u865a\u51fd\u6570\u8868\u5df2\u7ecf\u88ab\u91ca\u653e\u4e86\uff0c\u4f1a\u4ea7\u751f\u5185\u5b58\u4e0d\u5b89\u5168\uff0c\u6240\u4ee5\u4e0d\u5141\u8bb8\u6790\u6784\u51fd\u6570\u542f\u7528\u591a\u6001\u6027\uff08\u8fd9\u4e2a\u66f4\u5177\u4f53\u7684\u7ec6\u8282\u6709\u5f85\u5546\u69b7\uff09\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 #include <iostream> using namespace std ; class Base1 { public : ~ Base1 () { cout << \"~Base1() \\n \" ; } }; class Derived1 : public Base1 { public : ~ Derived1 () { cout << \"~Derived1() \\n \" ; } }; class Base2 { public : virtual ~ Base2 () { cout << \"~Base2() \\n \" ; } }; class Derived2 : public Base2 { public : ~ Derived2 () { cout << \"~Derived2() \\n \" ; } }; int main () { Base1 * bp = new Derived1 ; delete bp ; // \u53ea\u8c03\u7528\u4e86\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570 Base2 * b2p = new Derived2 ; delete b2p ; // \u6d3e\u751f\u7c7b\u865a\u6790\u6784\u51fd\u6570\u8c03\u7528\u5b8c\u540e\u8c03\u7528\u57fa\u7c7b\u7684\u865a\u6790\u6784\u51fd\u6570 return 0 ; } /* output: ~Base1() ~Derived2() ~Base2() */ \u6709\u7684\u65f6\u5019\u6211\u4eec\u53ef\u80fd\u4f1a\u8bf4\uff0c\u6790\u6784\u51fd\u6570\u4e2d\u4e0d\u80fd\u8c03\u7528\u865a\u51fd\u6570\uff0c\u8fd9\u53e5\u8bdd\u662f\u5bf9\u7684\u3002\u8fd9\u53e5\u8bdd\u5b9e\u9645\u4e0a\u662f\u6307\uff0c\u6790\u6784\u51fd\u6570\u548c\u6784\u9020\u51fd\u6570\u4e2d\u90fd\u6ca1\u6709\u591a\u6001\u6027\uff0c\u4f46\u662f\u8fd8\u662f\u53ef\u4ee5\u5b8c\u6210\u8c03\u7528\u672c\u5730\u7248\u672c\u3002 \u603b\u4e4b\uff0c\u91cd\u8981\u539f\u5219\uff1a\u603b\u662f\u5c06\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u8bbe\u7f6e\u4e3a\u865a\u6790\u6784\u51fd\u6570\u3002 \u91cd\u8f7d\u3001\u91cd\u5199\u9690\u85cf\u3001\u91cd\u5199\u8986\u76d6 \u00b6 \u91cd\u8f7d\uff08overload\uff09 \u00b6 \u76ee\u7684\uff1a\u63d0\u4f9b\u540c\u540d\u51fd\u6570\u7684\u4e0d\u540c\u5b9e\u73b0\uff0c\u5c5e\u4e8e\u9759\u6001\u591a\u6001\u3002 \u51fd\u6570\u540d\u5fc5\u987b\u76f8\u540c\uff0c\u51fd\u6570\u53c2\u6570\u5fc5\u987b\u4e0d\u540c\uff0c\u4f5c\u7528\u57df\u76f8\u540c\uff08\u5982\u4f4d\u4e8e\u540c\u4e00\u4e2a\u7c7b\u4e2d\u6216\u540c\u540d\u5168\u5c40\u51fd\u6570\uff09\u3002 \u91cd\u5199\u9690\u85cf\uff08redefining\uff09 \u00b6 \u76ee\u7684\uff1a\u5728\u6d3e\u751f\u7c7b\u4e2d\u91cd\u65b0\u5b9a\u4e49\u57fa\u7c7b\u51fd\u6570\uff0c\u5b9e\u73b0\u6d3e\u751f\u7c7b\u7684\u7279\u6b8a\u529f\u80fd\u3002 \u5c4f\u853d\u4e86\u57fa\u7c7b\u7684\u6240\u6709\u5176\u5b83\u540c\u540d\u51fd\u6570\u3002 \u5982\u679c\u8be5\u51fd\u6570\u540d\u5728\u57fa\u7c7b\u91cc\u662f\u975e\u865a\u51fd\u6570\uff0c\u6b64\u65f6\u6d3e\u751f\u7c7b\u91cc\u91cd\u65b0\u5b9a\u4e49\u7684\u51fd\u6570\u65e0\u8bba\u53c2\u6570\u662f\u5426\u76f8\u540c\uff08\u8fd9\u79cd\u76f8\u540c\u662f\u4e0d\u8003\u8651\u9ed8\u8ba4\u503c\u7684\uff09\uff0c\u53d1\u751f\u7684\u90fd\u662f\u91cd\u5199\u9690\u85cf\uff1b\u800c\u5982\u679c\u8be5\u51fd\u6570\u5728\u57fa\u7c7b\u91cc\u662f\u865a\u51fd\u6570\uff0c\u6b64\u65f6\u6d3e\u751f\u7c7b\u91cc\u91cd\u65b0\u5b9a\u4e49\u7684\u51fd\u6570\u5982\u679c\u53c2\u6570\u76f8\u540c\uff0c\u5219\u53d1\u751f override\uff1b\u5982\u679c\u53c2\u6570\u4e0d\u540c\uff0c\u5219\u53d1\u751f redefining\u3002 \u91cd\u5199\u8986\u76d6\uff08override\uff09 \u00b6 \u76ee\u7684\uff1a\u5bf9\u57fa\u7c7b\u7684\u865a\u51fd\u6570\u8fdb\u884c\u91cd\u5b9a\u4e49\uff0c\u51fd\u6570\u540d\u548c\u53c2\u6570\u5b8c\u5168\u76f8\u540c\uff0c\u8fd4\u56de\u503c\u4e00\u822c\u76f8\u540c\uff08\u5982\u679c\u6d3e\u751f\u7c7b\u5b9a\u4e49\u65b0\u51fd\u6570\u4e0e\u57fa\u7c7b\u865a\u51fd\u6570\u7684\u51fd\u6570\u540d\u76f8\u540c\u800c\u53c2\u6570\u4e0d\u540c\uff0c\u6d3e\u751f\u7c7b\u5b9a\u4e49\u7684\u51fd\u6570\u4f1a redefining \u57fa\u7c7b\u865a\u51fd\u6570\uff0c\u53d1\u751f\u9690\u85cf\u800c\u4e0d\u662f\u8986\u76d6\uff09\u3002 \u8986\u76d6\u7684\u7531\u6765\uff1a\u57fa\u7c7b\u865a\u51fd\u6570\u8868\u4e2d\u7684\u865a\u51fd\u6570\u6307\u9488\u4f1a\u88ab\u6d3e\u751f\u7c7b\u4e2d\u91cd\u65b0\u5b9a\u4e49\u7684\u540c\u540d\u540c\u53c2\u6570\u7684\u865a\u51fd\u6570\u7684\u6307\u9488\u8986\u76d6\u6389\uff0c\u4ee5\u6b64\u6765\u5b9e\u73b0\u52a8\u6001\u7ed1\u5b9a\u3002 \u603b\u7ed3 \u00b6 \u975e\u865a\u540c\u540d\u51fd\u6570\u5728\u540c\u4e00\u4e2a\u7c7b\u4e2d\u53d1\u751f\u91cd\u8f7d\uff0c\u5728\u4e0d\u540c\u7c7b\uff08\u57fa\u7c7b\u548c\u6d3e\u751f\u7c7b\uff09\u4e2d\u53d1\u751f\u9690\u85cf \u3002 \u865a\u540c\u540d\u51fd\u6570\uff0c\u53c2\u6570\u76f8\u540c\u5219\u5728\u6d3e\u751f\u7c7b\u4e2d\u53d1\u751f\u91cd\u5199\u8986\u76d6\uff0c\u53c2\u6570\u4e0d\u540c\u5219\u5728\u6d3e\u751f\u7c7b\u4e2d\u53d1\u751f\u91cd\u5199\u9690\u85cf \u3002 \u91cd\u8f7d\uff1a\u540c\u7ea7\u8c03\u7528\u7684\u4f18\u5148\u5339\u914d\u95ee\u9898\u3002 \u91cd\u5199\u9690\u85cf\uff1a\u6d3e\u751f\u7c7b\u4f18\u5148\u8c03\u7528\u6d3e\u751f\u7c7b\u540c\u540d\u51fd\u6570\u3002 \u91cd\u5199\u8986\u76d6\uff1a\u65e0\u8bba\u662f\u57fa\u7c7b\u8fd8\u662f\u6d3e\u751f\u7c7b\u7684\u6307\u9488\uff0c\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61\u53ea\u80fd\u8c03\u7528\u6d3e\u751f\u7c7b\u540c\u540d\u51fd\u6570\u3002 \u793a\u4f8b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 #include <iostream> using namespace std ; class Base { public : virtual void foo () { cout << \"Base::foo()\" << endl ; } virtual void foo ( int ) { cout << \"Base::foo(int)\" << endl ; } // \u91cd\u8f7d void bar () { }; }; class Derived1 : public Base { public : void foo ( int ) { cout << \"Derived1::foo(int)\" << endl ; } // \u91cd\u5199\u8986\u76d6 }; class Derived2 : public Base { public : void foo ( float ) { cout << \"Derived2::foo(float)\" << endl ; } // \u91cd\u5199\u9690\u85cf }; int main () { Derived1 d1 ; Derived2 d2 ; Base * p1 = & d1 ; Base * p2 = & d2 ; Derived2 & tag = d2 ; Derived2 * pointer = & d2 ; d1 . Base :: foo (); d2 . Base :: foo (); p1 -> foo (); p2 -> foo (); d1 . foo ( 3 ); d2 . foo ( 3.0 ); p1 -> foo ( 3 ); p2 -> foo ( 3.0 ); d2 . foo ( 3.0 ); tag . foo ( 3.0 ); pointer -> foo ( 3.0 ); return 0 ; } /* output: Base::foo() Base::foo() Base::foo() Base::foo() Derived1::foo(int) Derived2::foo(float) Derived1::foo(int) Base::foo(int) Derived2::foo(float) Derived2::foo(float) Derived2::foo(float) */ \u9996\u5148\uff0c d1.foo() \u4e0e d2.foo() \u90fd\u4e0d\u5408\u6cd5\uff0c\u7531\u4e8e\u6d3e\u751f\u7c7b\u90fd\u5b9a\u4e49\u4e86\u5e26\u53c2\u6570\u7684 foo \uff0c\u57fa\u7c7b foo() \u5bf9\u5b9e\u4f8b\u4e0d\u53ef\u89c1\uff08\u53d1\u751f\u4e86 redefining \u91cd\u5199\u9690\u85cf\uff09\u3002\u6545\u800c\u8fd9\u4e24\u53e5\u4f1a\u62a5\u9519\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u7528 Base:: \u3002 \u5176\u6b21\uff0c p1->foo() \u65f6\uff0c\u6d3e\u751f\u7c7b\u6ca1\u6709\u540c\u540d\u540c\u53c2\u6570\u8986\u76d6\u6389\u57fa\u7c7b\u865a\u51fd\u6570\uff0c\u865a\u51fd\u6570\u8868\u7ee7\u627f\u57fa\u7c7b\u7684 foo() \u865a\u51fd\u6570\uff0c\u6545\u800c\u8c03\u7528\u4e86\u57fa\u7c7b\u7684 foo() \u3002 \u6700\u540e\uff0c p2->foo(3.0) \u8fd9\u91cc\u6ca1\u6709\u53d1\u751f\u91cd\u5199\u8986\u76d6\uff0c\u53d1\u751f\u4e86\u91cd\u5199\u9690\u85cf\u3002\u5728\u6743\u9650\u8db3\u591f\u7684\u65f6\u5019\uff0c\u6bd4\u5982\u4ece\u6d3e\u751f\u7c7b\u5bf9\u8c61\u6216\u8005\u6d3e\u751f\u7c7b\u6307\u9488\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\u540c\u540d\u51fd\u6570\u3002\u4f46\u662f\u7528\u57fa\u7c7b\u6307\u9488\u7684\u8bbf\u95ee\u6743\u9650\u4ec5\u9650\u4e8e\u57fa\u7c7b\u90e8\u5206\uff0c\u65e0\u6cd5\u8bbf\u95ee\u5b9a\u4e49\u5728\u6d3e\u751f\u7c7b\u90e8\u5206\u7684\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\u51fd\u6570\uff0c\u6545\u800c\u53ea\u80fd\u8bbf\u95ee\u57fa\u7c7b\u5b9a\u4e49\u7684\u540c\u540d\u51fd\u6570\u4e2d\u5339\u914d\u7684\u4e00\u4e2a\u3002 \u53e6\u4e00\u4e2a\u4f8b\u5b50 \u5bf9\u4e8e A\uff0c\u6ce8\u610f\u91cd\u5199\u8986\u76d6\u7684\u6761\u4ef6\uff1a\u5728\u6d3e\u751f\u7c7b\u4e2d\u5b9a\u4e49\u57fa\u7c7b\u865a\u51fd\u6570\u7684\u540c\u540d\u540c\u53c2\u51fd\u6570\u3002\u6b64\u5904 (1) \u4e0d\u662f\u865a\u51fd\u6570\uff0c\u6240\u4ee5\u4e0d\u662f\u91cd\u5199\u8986\u76d6\uff0c\u662f\u91cd\u5199\u9690\u85cf\u3002\u5bf9\u4e8e D\uff0c\u9996\u5148\uff0c (5) \u4e0d\u662f\u91cd\u5199\u8986\u76d6\uff0c\u662f\u91cd\u5199\u9690\u85cf\uff0c\u56e0\u800c\u76f4\u63a5\u8c03\u7528 (5) \u3002\u7b2c\u4e8c\uff0c\u57fa\u7c7b\u51fd\u6570\u5bf9\u4e8e\u6d3e\u751f\u7c7b\u5bf9\u8c61\u4e0d\u53ef\u89c1\uff0c\u6d3e\u751f\u7c7b\u5bf9\u8c61\u6216\u6d3e\u751f\u7c7b\u6307\u9488\u5f15\u7528\u54ea\u6015 warning \u4e5f\u4f1a\u5148\u8c03\u7528\u81ea\u8eab\u7684\u51fd\u6570\u3002\u5982\u679c\u81ea\u8eab\u7684\u51fd\u6570\u6ca1\u6709\u4e00\u4e2a\u53ef\u4ee5\u8c03\u7528\u7684\uff0c\u54ea\u6015\u57fa\u7c7b\u51fd\u6570\u6709\u53ef\u4ee5\u8c03\u7528\u7684\uff0c\u6d3e\u751f\u7c7b\u5bf9\u8c61\u5b81\u613f error \u4e5f\u4e0d\u4f1a\u8c03\u7528\u57fa\u7c7b\u51fd\u6570\u3002 override \u5173\u952e\u5b57 \u00b6 \u91cd\u5199\u8986\u76d6\u8981\u6ee1\u8db3\u7684\u6761\u4ef6\u5f88\u591a\uff0c\u5f88\u5bb9\u6613\u5199\u9519\uff0c\u53ef\u4ee5\u4f7f\u7528 override \u5173\u952e\u5b57\u8f85\u52a9\u68c0\u67e5\u3002 override \u5173\u952e\u5b57\u660e\u786e\u5730\u544a\u8bc9\u7f16\u8bd1\u5668\u4e00\u4e2a\u51fd\u6570\u662f\u5bf9\u57fa\u7c7b\u4e2d\u4e00\u4e2a\u865a\u51fd\u6570\u7684\u91cd\u5199\u8986\u76d6\uff0c\u7f16\u8bd1\u5668\u5c06\u5bf9\u91cd\u5199\u8986\u76d6\u8981\u6ee1\u8db3\u7684\u6761\u4ef6\u8fdb\u884c\u68c0\u67e5\uff0c\u6b63\u786e\u7684\u91cd\u5199\u8986\u76d6\u624d\u80fd\u901a\u8fc7\u7f16\u8bd1\u3002\u5982\u679c\u6ca1\u6709 override \u5173\u952e\u5b57\uff0c\u4f46\u662f\u6ee1\u8db3\u4e86\u91cd\u5199\u8986\u76d6\u7684\u5404\u9879\u6761\u4ef6\uff0c\u4e5f\u80fd\u5b9e\u73b0\u91cd\u5199\u8986\u76d6\u3002\u5b83\u53ea\u662f\u7f16\u8bd1\u5668\u7684\u4e00\u4e2a\u68c0\u67e5\uff0c\u6b63\u786e\u5b9e\u73b0 override \u65f6\uff0c\u5bf9\u7f16\u8bd1\u7ed3\u679c\u6ca1\u6709\u5f71\u54cd\u3002 \u4f8b\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 #include <iostream> using namespace std ; class Base { public : virtual void foo () { cout << \"Base::foo()\" << endl ; } virtual void foo ( int ) { cout << \"Base::foo(int)\" << endl ; } // \u91cd\u8f7d void bar () { }; }; class Derived1 : public Base { public : void foo ( int ) { cout << \"Derived1::foo(int )\" << endl ; } // \u91cd\u5199\u8986\u76d6 }; class Derived2 : public Base { public : void foo ( float ) { cout << \"Derived2::foo(float)\" << endl ; } // \u8bef\u628a\u53c2\u6570\u5199\u9519\u4e86\uff0c\u4f46\u662f\u4ecd\u7136\u901a\u8fc7\u4e86\u7f16\u8bd1 }; class Derived3 : public Base { public : void foo ( int ) override { cout << \"Derived3::foo(int)\" << endl ; } // \u91cd\u5199\u8986\u76d6\u6b63\u786e void foo ( float ) override { } // \u53c2\u6570\u4e0d\u540c\uff0c\u4e0d\u662f\u91cd\u5199\u8986\u76d6\uff0c\u7f16\u8bd1\u9519\u8bef void bar () override { } // bar \u975e\u865a\u51fd\u6570\uff0c\u7f16\u8bd1\u9519\u8bef }; final \u5173\u952e\u5b57 \u00b6 \u5728\u865a\u51fd\u6570\u58f0\u660e\u6216\u5b9a\u4e49\u4e2d\u4f7f\u7528 final \u5173\u952e\u5b57\u540e\uff0c\u786e\u4fdd\u51fd\u6570\u4e3a\u865a\u4e14\u4e0d\u53ef\u88ab\u6d3e\u751f\u7c7b\u91cd\u5199\u3002\u53ef\u5728\u7ee7\u627f\u5173\u7cfb\u94fe\u7684\u201c\u4e2d\u9014\u201d\u8fdb\u884c\u8bbe\u5b9a\uff0c\u7981\u6b62\u540e\u7eed\u6d3e\u751f\u7c7b\u5bf9\u6307\u5b9a\u865a\u51fd\u6570\u91cd\u5199\uff0c\u4f46\u662f\u6d3e\u751f\u7c7b\u4ecd\u53ef\u8c03\u7528\u8be5\u865a\u51fd\u6570\u3002 \u5728\u7c7b\u5b9a\u4e49\u4e2d\u4f7f\u7528\u65f6\uff0c final \u6307\u5b9a\u6b64\u7c7b\u4e0d\u53ef\u88ab\u7ee7\u627f\u3002 \u683c\u5f0f\uff1afinal \u5199\u5728\u7ee7\u627f\u7c7b\u7c7b\u540d\u540e\uff0c\u7ee7\u627f\u65b9\u5f0f\u524d\u3002 1 2 3 class B final : public A { /* CODE */ } final \u548c override \u5728\u4fee\u9970\u51fd\u6570\u65f6\uff0c\u90fd\u53ea\u80fd\u4fee\u9970\u865a\u51fd\u6570\u3002\u4f8b\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 class Base { virtual void foo () { }; }; class A : public Base { void foo () final { }; // \u91cd\u5199\u8986\u76d6\uff0c\u4e14\u662f\u6700\u7ec8\u8986\u76d6 void bar () final { }; // bar \u975e\u865a\u51fd\u6570\uff0c\u7f16\u8bd1\u9519\u8bef }; class B final : public A { void foo () override { }; // A::foo \u5df2\u662f\u6700\u7ec8\u8986\u76d6\uff0c\u7f16\u8bd1\u9519\u8bef }; class C : public B { // B \u4e0d\u80fd\u88ab\u7ee7\u627f\uff0c\u7f16\u8bd1\u9519\u8bef };","title":"\u865a\u51fd\u6570"},{"location":"languages/c-oop/virtual-function/#_1","text":"","title":"\u865a\u51fd\u6570"},{"location":"languages/c-oop/virtual-function/#_2","text":"","title":"\u5411\u4e0a\u7c7b\u578b\u8f6c\u6362"},{"location":"languages/c-oop/virtual-function/#_3","text":"\u6d3e\u751f\u7c7b\u5bf9\u8c61\u3001\u5f15\u7528\u3001\u6307\u9488\u8f6c\u6362\u6210\u57fa\u7c7b\u5bf9\u8c61\u3001\u5f15\u7528\u3001\u6307\u9488\uff0c\u79f0\u4e3a\u5411\u4e0a\u7c7b\u578b\u8f6c\u6362\u3002\u53ea\u5bf9 public \u7ee7\u627f\u6709\u6548\uff0c\u5728\u7ee7\u627f\u56fe\u4e0a\u662f\u4e0a\u5347\u7684\uff1b\u5bf9 private \u3001 protected \u7ee7\u627f\u65e0\u6548\u3002 \u5411\u4e0a\u7c7b\u578b\u8f6c\u6362\uff08\u6d3e\u751f\u7c7b\u5230\u57fa\u7c7b\uff09\u53ef\u4ee5\u7531\u7f16\u8bd1\u5668\u81ea\u52a8\u5b8c\u6210\uff0c\u662f\u4e00\u79cd\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\u3002\u51e1\u662f\u63a5\u53d7\u57fa\u7c7b\u5bf9\u8c61\u3001\u5f15\u7528\u3001\u6307\u9488\u7684\u5730\u65b9\uff08\u5982\u51fd\u6570\u53c2\u6570\uff09\uff0c\u90fd\u53ef\u4ee5\u4f7f\u7528\u6d3e\u751f\u7c7b\u5bf9\u8c61\u3001\u5f15\u7528\u3001\u6307\u9488\uff0c\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u5c06\u6d3e\u751f\u7c7b\u5bf9\u8c61\u8f6c\u6362\u4e3a\u57fa\u7c7b\u5bf9\u8c61\u4ee5\u4fbf\u4f7f\u7528\u3002","title":"\u5b9a\u4e49"},{"location":"languages/c-oop/virtual-function/#public","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 #include <iostream> using namespace std ; class Base { private : int data { 0 }; public : int getData () { return data ; } void setData ( int i ) { data = i ; } }; class Derive1 : private Base { public : using Base :: getData ; }; int main () { Derive1 d1 ; cout << d1 . getData (); Base & b = d1 ; // \u4e0d\u5141\u8bb8\u79c1\u6709\u7ee7\u627f\u7684\u5411\u4e0a\u8f6c\u6362 b . setData ( 10 ); // \u5426\u5219\u53ef\u4ee5\u7ed5\u8fc7 D1\uff0c\u8c03\u7528\u57fa\u7c7b\u7684 setData \u51fd\u6570 return 0 ; } /* output: error: cannot cast 'Derive1' to its private base class 'Base' Base& b = d1; */ \u5982\u679c private \u7ee7\u627f\u4e5f\u53ef\u4ee5\u5411\u4e0a\u8f6c\u6362\uff0c\u90a3\u4e48\u57fa\u7c7b\u5bf9\u8c61\u91cc\u7684 public \u6210\u5458\u4e5f\u53ef\u4ee5\u88ab\u6d3e\u751f\u7c7b\u8c03\u7528\u4e86\u3002\u800c private \u7ee7\u627f\u7684\u539f\u610f\u5c31\u662f\u8ba9\u57fa\u7c7b\u6210\u5458\u5728\u6d3e\u751f\u7c7b\u91cc\u53d8\u6210 private \u5c5e\u6027\uff0c\u6240\u4ee5 private \u7ee7\u627f\u4e0d\u80fd\u5411\u4e0a\u8f6c\u6362\u3002","title":"\u4e0d\u5141\u8bb8\u975e public \u7ee7\u627f\u7684\u5411\u4e0a\u8f6c\u6362"},{"location":"languages/c-oop/virtual-function/#_4","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 #include <iostream> using namespace std ; class Base { public : void print () { cout << \"Base::print()\" << endl ; } }; class Derive : public Base { public : void print () { cout << \"Derive::print()\" << endl ; } }; void fun ( Base obj ) { obj . print (); } // \u8c03\u7528 Base \u5bf9\u8c61\u7684 print int main () { Derive d ; d . print (); fun ( d ); // \u672c\u610f\u5e0c\u671b\u5bf9 Derive::print \u8c03\u7528 return 0 ; } /* output: Derive::print() Base::print() */ \u6d3e\u751f\u7c7b\u4f1a\u8986\u76d6\u6389\u57fa\u7c7b\u7684\u540c\u540d\u51fd\u6570\uff0c\u672a\u53d1\u751f\u5207\u7247\u524d\uff0c\u60f3\u8981\u8ba9\u6d3e\u751f\u7c7b\u4f7f\u7528\u57fa\u7c7b\u7684 print \uff0c\u65b9\u6cd5\u4e00\u662f\u4f7f\u7528 using \u5173\u952e\u5b57\uff0c\u65b9\u6cd5\u4e8c\u662f\u542f\u7528\u547d\u540d\u7a7a\u95f4\u3002","title":"\u4f8b\u5b50"},{"location":"languages/c-oop/virtual-function/#_5","text":"","title":"\u5bf9\u8c61\u5207\u7247"},{"location":"languages/c-oop/virtual-function/#_6","text":"\u5f53\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61 b \uff08\u4e0d\u662f\u6307\u9488\u6216\u5f15\u7528\uff09\u88ab\u8f6c\u6362\u4e3a\u57fa\u7c7b\u7684\u5bf9\u8c61 a \u65f6\uff0c\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\u88ab\u5207\u7247\u4e3a\u5bf9\u5e94\u57fa\u7c7b\u7684\u5b50\u5bf9\u8c61\u3002\u8fd9\u53e5\u8bdd\u7684\u610f\u4e49\u662f a \u4ec5\u4ec5\u53ea\u80fd\u542b\u6709 b \u4e2d\u57fa\u7c7b\u7684\u90e8\u5206\uff0c\u800c b \u5bf9\u8c61\u672c\u8eab\u4e0d\u53d7\u5230\u5f71\u54cd\u3002 \u5207\u7247\u8fc7\u7a0b\u4e0d\u53ef\u9006\uff0c\u5373\u4fbf\u5207\u7247\u672c\u8eab\u4e0d\u6539\u53d8\u6307\u9488\u7684\u4f4d\u7f6e\uff0c\u6539\u53d8\u4e86\u6307\u9488\u7684\u7c7b\u578b\uff0c\u8fd9\u4e00\u8fc7\u7a0b\u4e5f\u4e0d\u53ef\u9006\u3002 \u4f8b\u5b50 \u5b58\u50a8\u7a7a\u95f4\u7684\u53d8\u5316 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 #include <iostream> using namespace std ; #pragma pack(4) // \u6309\u7167\u56db\u5b57\u8282\u8fdb\u884c\u5185\u5b58\u5bf9\u9f50 class Pet { public : int att_i ; // \u8868\u793a\u5c5e\u6027 Pet ( int x = 0 ) : att_i ( x ) { }; }; class Dog : public Pet { public : int att_j ; Dog ( int x = 0 , int y = 0 ) : Pet ( x ), att_j ( y ) { } }; void getSize ( Pet p ) { cout << \"Pet size:\" << sizeof ( p ) << endl ; } int main () { Pet p ; cout << \"Pet size:\" << sizeof ( p ) << endl ; Dog g ; cout << \"Dog size:\" << sizeof ( g ) << endl ; getSize ( g ); // \u5bf9\u8c61\u5207\u7247\uff0cp \u4e22\u5931\u4e86 g \u7684\u6570\u636e\uff0c\u4f46\u662f g \u4e0d\u53d7\u5f71\u54cd cout << \"Dog size:\" << sizeof ( g ) << endl ; p = g ; // \u5bf9\u8c61\u5207\u7247\uff0cp \u4e22\u5931\u4e86 g \u7684\u6570\u636e\uff0c\u4f46\u662f g \u4e0d\u53d7\u5f71\u54cd cout << \"Dog size:\" << sizeof ( g ) << endl ; return 0 ; } /* Pet size:4 Dog size:8 Pet size:4 Dog size:8 Dog size:8 */ \u6d3e\u751f\u7c7b\u6570\u636e\u65e0\u6743\u8bbf\u95ee 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 #include <iostream> using namespace std ; #pragma pack(4) class Pet { public : int att_i ; // \u8868\u793a\u5c5e\u6027 Pet ( int x = 0 ) : att_i ( x ) { } }; class Dog : public Pet { public : int att_j ; Dog ( int x = 0 , int y = 0 ) : Pet ( x ), att_j ( y ) { } }; int main () { Pet p ( 1 ); cout << p . att_i << endl ; Dog g ( 2 , 3 ); cout << g . att_i << \" \" << g . att_j << endl ; p = g ; // \u5bf9\u8c61\u5207\u7247\uff0c\u53ea\u8d4b\u503c\u57fa\u7c7b\u6570\u636e cout << p . att_i << endl ; // cout << p.att_j << endl; // \u6ca1\u6709\u8be5\u53c2\u6570\uff0c\u7f16\u8bd1\u9519\u8bef return 0 ; } /* output: 1 2 3 2 */ \u6d3e\u751f\u7c7b\u65b9\u6cd5\u65e0\u6743\u8bbf\u95ee 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 #include <iostream> using namespace std ; class Pet { public : void name () { cout << \"Pet::name()\" << endl ; } }; class Dog : public Pet { public : void name () { cout << \"Dog::name()\" << endl ; } }; void getName ( Pet p ) { p . name (); } int main () { Dog g ; g . name (); getName ( g ); // \u5bf9\u8c61\u5207\u7247\uff08\u4f20\u53c2\uff09\uff0c\u8c03\u7528\u57fa\u7c7b\u7684 name \u51fd\u6570 Pet p = g ; p . name (); // \u5bf9\u8c61\u5207\u7247\uff08\u8d4b\u503c\uff09\uff0c\u8c03\u7528\u57fa\u7c7b\u7684 name \u51fd\u6570 return 0 ; } /* output: Dog::name() Pet::name() Pet::name() */","title":"\u5b9a\u4e49"},{"location":"languages/c-oop/virtual-function/#_7","text":"\u6307\u9488\u578b\u5411\u4e0a\u7c7b\u578b\u8f6c\u6362 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 #include <iostream> using namespace std ; #pragma pack(4) class Pet { public : int att_i ; // \u8868\u793a\u5c5e\u6027 Pet ( int x = 0 ) : att_i ( x ) { }; }; class Dog : public Pet { public : int att_j ; Dog ( int x = 0 , int y = 0 ) : Pet ( x ), att_j ( y ) { } }; int main () { Dog * g = new Dog ( 1 , 2 ); Pet * p = g ; cout << g << ' ' << p << endl ; int * a = ( int * ) g ; // \u6307\u9488\u8f6c\u6362 cout << a << ' ' << a + 1 << endl ; cout << * a << ' ' << * ( a + 1 ) << endl ; cout << p -> att_i << endl ; cout << g -> att_i << \" \" << g -> att_j << endl ; return 0 ; } /* output: 0x1c94eb0 0x1c94eb0 0x1c94eb0 0x1c94eb4 1 2 1 1 2 */ \u5728\u4e3b\u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u57fa\u7c7b\u6307\u9488 p \u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61 g \u3002\u5c06 p \u548c g \u6307\u5411\u5185\u5b58\u7a7a\u95f4\u7684\u5730\u5740\u6253\u5370\u51fa\u6765\uff0c\u540c\u65f6\u5c06 g \u6307\u5411\u5185\u5b58\u7a7a\u95f4\u4e0a\u7684\u4e24\u4e2a int \u5730\u5740\u6253\u5370\u51fa\u6765\uff0c\u6211\u4eec\u53d1\u73b0 g \u548c p \u90fd\u6307\u5411\u540c\u4e00\u4e2a\u5730\u5740\uff08\u8fd9\u4e2a\u5730\u5740\u5c31\u662f att_i \uff09\u3002 \u5b9e\u9645\u4e0a\uff0c\u6570\u636e\u5728\u5185\u5b58\u4e2d\u662f\u8fde\u7eed\u7d27\u5bc6\u6392\u5217\u7684\u3002\u5148\u6392\u5217\u57fa\u7c7b\u6570\u636e att_i \uff0c\u518d\u6392\u5217\u6d3e\u751f\u7c7b\u6570\u636e att_j \u3002\u800c\u6211\u4eec\u7528\u57fa\u7c7b\u6307\u9488\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61\u65f6\uff0c\u57fa\u7c7b\u548c\u6d3e\u751f\u7c7b\u6307\u9488\u90fd\u6307\u5411\u540c\u4e00\u4e2a\u5185\u5b58\u5730\u5740\uff0c\u5373\u57fa\u7c7b\u6570\u636e\u7684\u5730\u5740\u3002\u4f46\u662f\u8bbf\u95ee\u6743\u9650\u4e0d\u540c\uff0c\u57fa\u7c7b\u6307\u9488\u53ea\u80fd\u8bbf\u95ee\u57fa\u7c7b\u7684\u90e8\u5206\uff0c\u6d3e\u751f\u7c7b\u80fd\u8bbf\u95ee\u6240\u6709\u90e8\u5206\u3002\u60c5\u51b5\u4e00\u7c7b\u578b\u7684\u6570\u636e\u4e22\u5931\uff0c\u5e76\u975e\u6d3e\u751f\u7c7b\u6570\u636e\u9500\u6bc1\u4e86\uff0c\u800c\u662f\u88ab\u8f6c\u6362\u751f\u6210\u7684\u6307\u9488\u6ca1\u6709\u8bbf\u95ee\u6d3e\u751f\u7c7b\u6570\u636e\u7684\u6743\u9650\u3002 \u4e0d\u8fc7\uff0c\u5f53\u591a\u91cd\u7ee7\u627f\u65f6\uff0c\u6bd4\u5982 A \u540c\u65f6 public \u7ee7\u627f B \u3001 C \uff08\u6309\u7167\u7c7b\u7684\u5b9a\u4e49\u987a\u5e8f\u4ece\u5de6\u5230\u53f3\uff09\u3002\u5728\u5185\u5b58\u4e2d\u5219\u5148\u6392\u5217 B \uff0c\u4e4b\u540e C \uff0c\u6700\u540e A \u3002\u8fd8\u662f\u4f7f\u7528\u57fa\u7c7b\u6307\u9488\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61\u7684\u8bdd\uff0c\u5982\u679c A \u7c7b\u6307\u9488 a \u548c C \u7c7b\u6307\u9488 c \u4e0d\u91cd\u5408\u3002 a \u6307\u5411\u5934\u90e8\uff0c c \u6307\u5411 C \u7684\u90e8\u5206\uff0c\u8bbf\u95ee\u6743\u9650\u4e5f\u4e0d\u540c\u3002 \u62f7\u8d1d\u578b\u5411\u4e0a\u7c7b\u578b\u8f6c\u6362 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 #include <iostream> using namespace std ; #pragma pack(4) class Pet { public : int att_i ; // \u8868\u793a\u5c5e\u6027 Pet ( int x = 0 ) : att_i ( x ) { }; }; class Dog : public Pet { public : int att_j ; Dog ( int x = 0 , int y = 0 ) : Pet ( x ), att_j ( y ) { } }; int main () { Dog d ( 10 , 12 ); Pet t ; cout << \"locate of d: \" << & d << endl ; cout << d . att_i << \" \" << d . att_j << endl ; cout << \"locate of t: \" << & t << endl ; cout << t . att_i << endl ; t = d ; cout << t . att_i << endl ; cout << \"locate of t: \" << & t << endl ; return 0 ; } /* output: locate of d: 0x7ffefd9e81a0 10 12 locate of t: 0x7ffefd9e8198 0 10 locate of t: 0x7ffefd9e8198 */ \u53ef\u4ee5\u53d1\u73b0\uff0c\u5728\u5b9a\u4e49\u4e86 Pet t \u540e\uff0c\u5c31\u5df2\u7ecf\u4e3a t \u5206\u914d\u4e86\u5185\u5b58\u7a7a\u95f4\uff0c\u548c d \u5e76\u4e0d\u662f\u540c\u4e00\u5757\u7a7a\u95f4\u3002\u63a5\u4e0b\u6765\u7684 t = d \u7c7b\u4f3c\u4e8e\u4e00\u4e2a\u90e8\u5206\u62f7\u8d1d\u8d4b\u503c\u8bed\u53e5\uff0c\u5e76\u6ca1\u6709\u6539\u53d8 t \u548c d \u7684\u5730\u5740\u3002\u6bd4\u8d77\u6307\u9488\u578b\u7684\u5207\u7247\u7b80\u5355\u8bb8\u591a\u3002","title":"\u5bf9\u8c61\u5207\u7247\u7684\u7406\u89e3"},{"location":"languages/c-oop/virtual-function/#_8","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 #include <iostream> using namespace std ; #pragma pack(4) class Pet { public : int att_i ; // \u8868\u793a\u5c5e\u6027 Pet ( int x = 0 ) : att_i ( x ) { }; }; class Dog : public Pet { public : int att_j ; Dog ( int x = 0 , int y = 0 ) : Pet ( x ), att_j ( y ) { } }; void getSize ( Pet p ) { cout << \"locate of p: \" << & p << endl ; cout << \"Pet size:\" << sizeof ( p ) << endl ; } int main () { Dog * g = new Dog ( 1 , 2 ); cout << \"locate of g: \" << g << endl ; Pet * j = g ; cout << \"locate of j: \" << j << endl ; getSize ( * g ); cout << g -> att_i << endl ; delete j ; cout << g -> att_i ; return 0 ; } /* output: locate of g: 0x18beeb0 locate of j: 0x18beeb0 locate of p: 0x7ffe369b8848 Pet size:4 1 6334 */ \u8fd9\u91cc\u5bf9\u4e8e\u62f7\u8d1d\u578b\u5411\u4e0a\u7c7b\u578b\u8f6c\u6362\u548c\u6307\u9488\u578b\u5411\u4e0a\u7c7b\u578b\u8f6c\u6362\u8fdb\u884c\u5206\u6790\u3002\u601d\u8003\u4e00\u4e2a\u95ee\u9898\uff0c\u62f7\u8d1d\u578b\u5411\u4e0a\u7c7b\u578b\u8f6c\u6362\u662f\u5426\u4f1a\u5728\u53c2\u6570\u88ab\u6790\u6784\u540e\u7834\u574f\u539f\u6709\u7684\u6d3e\u751f\u7c7b\u6570\u636e\uff1f \u7b54\u6848\u662f\u4e0d\u4f1a\u7684\u3002 \u4e0a\u8ff0\u4f8b\u5b50\u901a\u8fc7\u4f20\u9012\u53c2\u6570\u53c2\u6570\u4ea7\u751f\u7684\u5207\u7247\u5b9e\u8d28\u662f\u62f7\u8d1d\u4f20\u53c2\uff0c\u76f8\u5f53\u4e8e\u7528\u6d3e\u751f\u7c7b\u5bf9\u8c61\u5728\u53e6\u5916\u4e00\u5757\u5730\u5740\u4e0a\u62f7\u8d1d\u4e86\u4e00\u4e2a\u57fa\u7c7b\u5bf9\u8c61\u3002\u8fd9\u4e00\u5bf9\u8c61\u6307\u9488\u6307\u9488\u6307\u5411\u7684\u5185\u5b58\u548c\u6d3e\u751f\u7c7b\u6307\u9488\u6307\u5411\u7684\u5185\u5b58\u5f53\u7136\u4e0d\u662f\u540c\u4e00\u5757\uff0c\u6545\u800c\u6790\u6784\u7684\u65f6\u5019\u4e0d\u4f1a\u6709\u95ee\u9898\u3002 \u800c\u5bf9\u4e8e\u6307\u9488\u578b\u5411\u4e0a\u7c7b\u578b\u8f6c\u6362\uff0c\u5728\u4e0a\u6587\u5df2\u7ecf\u8ba8\u8bba\u8fc7\u8fd9\u4e00\u5207\u7247\u7684\u672c\u8d28\u2014\u2014\u4e24\u4e2a\u6307\u5411\u5730\u5740\u76f8\u540c\u7684\u6307\u9488\uff0c\u4f46\u662f\u8bbf\u95ee\u6743\u9650\u4e0d\u540c\u3002 \u5982\u540c\u4e0a\u6587\u8f93\u51fa\u6240\u793a\uff0c\u60c5\u51b5\u4e00\u7c7b\u578b\u7684\u5207\u7247\u751f\u6210\u7684\u57fa\u7c7b\u6307\u9488\u548c\u6d3e\u751f\u7c7b\u6307\u9488\u6307\u5411\u540c\u4e00\u5757\u7a7a\u95f4\u3002\u5c06\u57fa\u7c7b\u6307\u9488\u6240\u6307\u7a7a\u95f4\u91ca\u653e\u540e\uff0c\u7834\u574f\u4e86\u6d3e\u751f\u7c7b\u6570\u636e\u3002 \u53c8\u4f8b\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 #include <iostream> using namespace std ; #pragma pack(4) class Pet { public : int att_i ; Pet ( int x = 0 ) : att_i ( x ) { } }; class Dog : public Pet { public : int att_j ; Dog ( int x = 0 , int y = 0 ) : Pet ( x ), att_j ( y ) { } }; int main () { Dog g ( 2 , 3 ); cout << g . att_i << \" \" << g . att_j << endl ; Pet & p = g ; // \u5f15\u7528\u5411\u4e0a\u8f6c\u6362 cout << p . att_i << endl ; p . att_i = 1 ; // \u4fee\u6539\u57fa\u7c7b\u5b58\u5728\u7684\u6570\u636e cout << p . att_i << endl ; cout << g . att_i << \" \" << g . att_j << endl ; // \u5f71\u54cd\u6d3e\u751f\u7c7b\uff0c\u4f46\u662f\u5c06\u6d3e\u751f\u7c7b\u8f6c\u5316\u4e3a\u57fa\u7c7b\u7684\u5f15\u7528\u540e\uff0c\u539f\u6765\u7684\u6d3e\u751f\u7c7b\u5bf9\u8c61\u5e76\u4e0d\u4f1a\u88ab\u9500\u6bc1 return 0 ; } /* output: 2 3 2 1 1 3 */ \u8bfe\u5802\u4e0a\u7684\u4f8b\u5b50\u53ea\u5f3a\u8c03\u4e86\u57fa\u7c7b\u5f15\u7528\u4f1a\u5f71\u54cd\u6d3e\u751f\u7c7b\u6570\u636e\uff0c\u5b9e\u9645\u4e0a\u5e94\u7ed3\u5408\u5730\u5740\u548c\u5185\u5b58\u7a7a\u95f4\u6765\u7406\u89e3\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 #include <iostream> using namespace std ; class Instrument { public : void play () { cout << \"Instrument::play\" << endl ; } }; class Wind : public Instrument { public : // Redefine interface function void play () { cout << \"Wind::play\" << endl ; } }; void tune ( Instrument & i ) { i . play (); } int main () { Wind flute ; tune ( flute ); // \u5f15\u7528\u7684\u5411\u4e0a\u7c7b\u578b\u8f6c\u6362\uff0c\u7f16\u8bd1\u5668\u65e9\u7ed1\u5b9a\uff0c\u65e0\u5bf9\u8c61\u5207\u7247\u4ea7\u751f Instrument & inst = flute ; // \u5f15\u7528\u7684\u5411\u4e0a\u7c7b\u578b\u8f6c\u6362 inst . play (); return 0 ; } /* output: Instrument::play Instrument::play */ \u540c\u6837\u7684\uff0c Ins \u7c7b\u7684\u5f15\u7528\u7684\u6743\u9650\u4e0d\u8db3\u4ee5\u8bbf\u95ee Wind \u7684 public \u63a5\u53e3\u3002 \u6700\u540e\uff0c\u6307\u9488\u7684\u57fa\u672c\u77e5\u8bc6\uff1a\u6307\u9488\u7684\u503c\u662f\u6307\u6307\u9488\u6240\u6307\u5411\u7684\u5730\u5740\u3002\u800c\u6307\u9488\u672c\u8eab\u662f\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u4e5f\u9700\u8981\u5185\u5b58\u7a7a\u95f4\u5b58\u653e\uff0c\u6307\u9488\u7684\u5730\u5740\u5c31\u662f\u5b58\u653e\u6307\u9488\u7684\u5185\u5b58\u7a7a\u95f4\u7684\u5730\u5740\u3002\u6bd4\u5982 g \u662f Dog \u7c7b\u578b\u7684\u6307\u9488 cout << \"locate of g: \" << g << endl \u662f\u6253\u5370 g \u6307\u5411\u7684\u5185\u5b58\u7a7a\u95f4\u7684\u5730\u5740\u3002 cout << \"locate of g: \" << &g << endl \u662f\u5b58\u50a8 g \u7684\u5185\u5b58\u7a7a\u95f4\u7684\u5730\u5740\u3002 \u800c\u5bf9\u4e8e\u53d8\u91cf\uff0c\u4f8b\u5982 Pet p \uff0c & \u53d6\u5730\u5740\u7b26\u5373\u53ef\u8f93\u51fa\u5730\u5740\u3002\u5373 cout << \"locate of p: \" << &p << endl \u3002","title":"\u8fdb\u4e00\u6b65\u8ba8\u8bba"},{"location":"languages/c-oop/virtual-function/#_9","text":"","title":"\u865a\u51fd\u6570"},{"location":"languages/c-oop/virtual-function/#_10","text":"\u628a\u51fd\u6570\u4f53\u4e0e\u51fd\u6570\u8c03\u7528\u76f8\u8054\u7cfb\u79f0\u4e3a\u6346\u7ed1\u3002\u5373\u5c06\u51fd\u6570\u4f53\u7684\u5177\u4f53\u5b9e\u73b0\u4ee3\u7801\uff0c\u4e0e\u8c03\u7528\u7684\u51fd\u6570\u540d\u7ed1\u5b9a\uff0c\u6267\u884c\u5230\u8c03\u7528\u4ee3\u7801\u65f6\u8fdb\u5165\u76f4\u63a5\u8fdb\u5165\u6346\u7ed1\u597d\u7684\u51fd\u6570\u4f53\u5185\u90e8\u3002 \u5f53\u6346\u7ed1\u5728\u7a0b\u5e8f\u8fd0\u884c\u4e4b\u524d\uff08\u7531\u7f16\u8bd1\u5668\u548c\u94fe\u63a5\u5668\uff09\u5b8c\u6210\uff0c\u4e5f\u5373\u662f\u8fd0\u884c\u4e4b\u524d\u5df2\u7ecf\u51b3\u5b9a\u4e86\u51fd\u6570\u7a76\u7adf\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\uff0c\u79f0\u4e3a\u65e9\u6346\u7ed1\u3002 \u4f8b\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 #include <iostream> using namespace std ; class Instrument { public : void play () { cout << \"Instrument::play\" << endl ; } }; class Wind : public Instrument { public : // Redefine interface function void play () { cout << \"Wind::play\" << endl ; } }; void tune ( Instrument & i ) { i . play (); } int main () { Wind flute ; tune ( flute ); // (1) Instrument & inst = flute ; // \u5f15\u7528\u7684\u5411\u4e0a\u7c7b\u578b\u8f6c\u6362(\u8d4b\u503c) inst . play (); // (2) // \u5982\u679c\u5bf9 play \u51fd\u6570\u52a0\u4e0a virtual \u5173\u952e\u5b57\uff0c\u5219\u4e24\u6b21\u8c03\u7528\u90fd\u4f1a\u8c03\u7528 Wind \u7684 play \u51fd\u6570\u4e86\u3002\uff08\u865a\u51fd\u6570\u5185\u5bb9\u89c1\u4e0b\uff09 return 0 ; } /* output: Instrument::play Instrument::play */ (1) \u5904\u7531\u4e8e\u662f\u7f16\u8bd1\u5668\u65e9\u7ed1\u5b9a\uff0c\u7f16\u8bd1\u5668\u6839\u636e tune \u51fd\u6570\u7684\u53c2\u6570\u7c7b\u578b\uff08\u4e5f\u5c31\u662f Instrument \uff09\u51b3\u5b9a\u8981\u8c03\u7528 Instrument \u7c7b\u578b\u7684 play \u3002\u6240\u4ee5\u5728\u771f\u6b63\u8fd0\u884c\u7684\u65f6\u5019\uff0c\u5373\u4f7f\u4f20\u8fdb\u53bb\u7684\u662f\u4e00\u4e2a Wind \u7c7b\u578b\uff0c\u7f16\u8bd1\u5668\u4e3a\u4e86\u8c03\u7528 Instrument \u7c7b\u578b\u7684\u6210\u5458\u51fd\u6570\uff0c\u4f1a\u5bf9\u4f20\u8fdb\u53bb\u7684 Wind \u5bf9\u8c61\u8fdb\u884c\u5207\u7247\uff0c\u800c\u4e0d\u4f1a\u53bb\u8c03\u7528 Wind \u7684\u6210\u5458\u51fd\u6570\u3002 (2) \u5904 inst \u662f flute \u7684\u5f15\u7528\uff0c\u7531\u4e8e\u53d1\u751f\u5207\u7247\uff0c\u7f16\u8bd1\u5668\u5c06 tune \u4e2d\u7684\u51fd\u6570\u8c03\u7528 i.play() \u4e0e Instrument::play() \u7ed1\u5b9a\u3002 \u5f53\u6346\u7ed1\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\uff08\u4e0a\u4f8b\u4e2d\u5373\u5b50\u7c7b Wind \u800c\u975e Instrument \uff09\uff0c\u53d1\u751f\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\uff0c\u79f0\u4e3a\u665a\u6346\u7ed1\uff0c\u53c8\u79f0\u52a8\u6001\u6346\u7ed1\u6216\u8fd0\u884c\u65f6\u6346\u7ed1\u3002 \u4e5f\u5373\u662f\u8981\u6c42\u5728\u8fd0\u884c\u65f6\u80fd\u786e\u5b9a\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\uff0c\u5e76\u7ed1\u5b9a\u6b63\u786e\u7684\u51fd\u6570\u3002 \u665a\u6346\u7ed1\u53ea\u5bf9\u7c7b\u4e2d\u7684\u865a\u51fd\u6570\u8d77\u4f5c\u7528\uff0c\u4f7f\u7528 virtual \u5173\u952e\u5b57\u58f0\u660e\u865a\u51fd\u6570\u3002","title":"\u51fd\u6570\u8c03\u7528\u7ed1\u5b9a"},{"location":"languages/c-oop/virtual-function/#_11","text":"\u5bf9\u4e8e\u88ab\u6d3e\u751f\u7c7b\u91cd\u65b0\u5b9a\u4e49\u7684\u6210\u5458\u51fd\u6570\uff0c\u82e5\u5b83\u5728\u57fa\u7c7b\u4e2d\u88ab\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff08\u5982\u4e0b\u6240\u793a\uff09\uff0c\u5219\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u8c03\u7528\u8be5\u6210\u5458\u51fd\u6570\u65f6\uff0c\u7f16\u8bd1\u5668\u5c06\u6839\u636e\u6240\u6307\uff08\u6216\u5f15\u7528\uff09\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u51b3\u5b9a\u662f\u8c03\u7528\u57fa\u7c7b\u4e2d\u7684\u51fd\u6570\uff0c\u8fd8\u662f\u8c03\u7528\u6d3e\u751f\u7c7b\u91cd\u5199\u7684\u51fd\u6570\u3002 1 2 3 4 class Base { public : virtual ReturnType FuncName ( argument ); // \u865a\u51fd\u6570 }; \u82e5\u67d0\u6210\u5458\u51fd\u6570\u5728\u57fa\u7c7b\u4e2d\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff0c\u5f53\u6d3e\u751f\u7c7b override \u5b83\u65f6\uff08\u540c\u540d\uff0c\u540c\u53c2\u6570\u51fd\u6570\uff09\uff0c\u65e0\u8bba\u662f\u5426\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff0c\u8be5\u6210\u5458\u51fd\u6570\u90fd\u4ecd\u7136\u662f\u865a\u51fd\u6570\u3002 \u533a\u5206 override \u548c redefining\u3002redefining \u662f\u5728\u6d3e\u751f\u7c7b\u4e2d\u91cd\u65b0\u5b9a\u4e49\u540c\u540d\u3001\u53c2\u6570\u53ef\u80fd\u4e0d\u540c\u7684\u51fd\u6570\uff0c\u5e76\u5c4f\u853d\u4e86\u57fa\u7c7b\u7684\u6240\u6709\u540c\u540d\u51fd\u6570\u3002override \u5219\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u91cd\u5199\u9690\u85cf\uff0c\u8981\u6c42\u4e0d\u4ec5\u540c\u540d\uff0c\u53c2\u6570\u4e5f\u8981\u76f8\u540c\uff0c\u662f\u4e00\u4e2a\u9488\u5bf9\u865a\u51fd\u6570\u7684\u6982\u5ff5\uff0c\u4f7f\u7528\u6761\u4ef6\u66f4\u52a0\u4e25\u683c\u3002 \u4ec0\u4e48\u662f\u6307\u9488\u548c\u5f15\u7528\u7684\u201c\u5b9e\u9645\u7c7b\u578b\u201d\uff1f 1 2 3 4 Wind flute ; Instrument * inst = & flute ; // \u6307\u9488 inst \u7684\u5b9e\u9645\u7c7b\u578b\u662f Wind Wind flute ; Instrument & inst = flute ; // \u5f15\u7528 inst \u7684\u5b9e\u9645\u7c7b\u578b\u662f Wind \u7531\u6b64\u4e5f\u80fd\u770b\u51fa\u4e3a\u4ec0\u4e48\u53ea\u6709\u5728\u4f7f\u7528\u6307\u9488\u548c\u5f15\u7528\u7684\u65f6\u5019\u591a\u6001\u624d\u53ef\u80fd\u53d1\u751f\uff0c\u800c\u5bf9\u4e8e\u5bf9\u8c61\uff0c\u591a\u6001\u4e0d\u4f1a\u53d1\u751f\u3002\u6bd4\u5982\uff1a 1 2 Wind flute ; Instrument inst = flute ; // \u62f7\u8d1d\u5207\u7247\u540e\u6784\u9020\u4e86 Instrument \u5bf9\u8c61 inst \u6b64\u65f6 inst \u5c31\u662f Instrument \u7c7b\u578b\uff0c\u6ca1\u6709\u201c\u5b9e\u9645\u7c7b\u578b\u201d\u548c\u201c\u8868\u73b0\u7c7b\u578b\u201d\u7684\u533a\u522b\u3002 \u8fd9\u5bf9\u4e8e\u53c2\u6570\u662f Instrument \u7c7b\u578b\u7684\u5168\u5c40\u51fd\u6570\u4e5f\u9002\u7528\uff0c\u5982\u4e0b\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 #include <iostream> using namespace std ; class Instrument { public : virtual void play () { cout << \"Instrument::play\" << endl ; } }; class Wind : public Instrument { public : void play () { cout << \"Wind::play\" << endl ; } }; void tune ( Instrument & ins ) { ins . play (); // \u7531\u4e8e Instrument::play \u662f\u865a\u51fd\u6570\uff0c\u7f16\u8bd1\u65f6\u4e0d\u518d\u76f4\u63a5\u7ed1\u5b9a\uff0c\u8fd0\u884c\u65f6\u6839\u636e ins \u7684\u5b9e\u9645\u7c7b\u578b\u8c03\u7528\u3002 } int main () { Wind flute ; tune ( flute ); // \u5411\u4e0a\u7c7b\u578b\u8f6c\u6362 return 0 ; } /* output: Wind::play */ \u6ce8\u610f\u5230\u4e0a\u65b9 void tune(Instrument& ins) \u7684\u53c2\u6570\u662f\u5f15\u7528\uff08\u6216\u6307\u9488\uff09\uff0c\u624d\u6210\u529f\u8d77\u5230\u4e86\u665a\u7ed1\u5b9a\u6548\u679c\u3002\u5982\u679c\u53c2\u6570\u662f void tune(Instrument ins) \uff0c\u90a3\u4e48\u53d1\u751f\u62f7\u8d1d\u578b\u5207\u7247\uff0c\u4f9d\u7136\u65e0\u6cd5\u665a\u7ed1\u5b9a\u3002","title":"\u865a\u51fd\u6570\u5b9a\u4e49"},{"location":"languages/c-oop/virtual-function/#_12","text":"","title":"\u865a\u51fd\u6570\u8868"},{"location":"languages/c-oop/virtual-function/#_13","text":"\u4e3a\u4e86\u5b9e\u73b0 C++ \u7684\u591a\u6001\uff0cC++ \u4f7f\u7528\u4e86\u4e00\u79cd\u52a8\u6001\u7ed1\u5b9a\u7684\u6280\u672f\u3002\u8fd9\u4e2a\u6280\u672f\u7684\u6838\u5fc3\u662f\u865a\u51fd\u6570\u8868\uff08\u7b80\u79f0\u865a\u8868\uff09\u3002\u672c\u8282\u4ecb\u7ecd\u865a\u51fd\u6570\u8868\u662f\u5982\u4f55\u5b9e\u73b0\u52a8\u6001\u7ed1\u5b9a\u7684\u3002","title":"\u6982\u8ff0"},{"location":"languages/c-oop/virtual-function/#_14","text":"\u6bcf\u4e2a\u5305\u542b\u4e86\u865a\u51fd\u6570\u7684\u7c7b\u90fd\u5305\u542b\u4e00\u4e2a\u5c5e\u4e8e\u6574\u4e2a\u7c7b\u7684\u865a\u8868\u3002 \u5f53\u4e00\u4e2a\u7c7b A \u7ee7\u627f\u53e6\u4e00\u4e2a\u7c7b B \u65f6\uff0c\u7c7b A \u4f1a\u7ee7\u627f\u7c7b B \u7684\u51fd\u6570\u7684\u8c03\u7528\u6743\u3002\u6240\u4ee5\u5982\u679c\u4e00\u4e2a\u57fa\u7c7b\u5305\u542b\u4e86\u865a\u51fd\u6570\uff0c\u90a3\u4e48\u5176\u7ee7\u627f\u7c7b\u4e5f\u53ef\u8c03\u7528\u8fd9\u4e9b\u865a\u51fd\u6570\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u4e00\u4e2a\u7c7b\u7ee7\u627f\u4e86\u5305\u542b\u865a\u51fd\u6570\u7684\u57fa\u7c7b\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7c7b\u4e5f\u62e5\u6709\u81ea\u5df1\u7684\u865a\u8868\u3002 \u4f8b\u5982\uff1a 1 2 3 4 5 6 7 8 9 class A { public : virtual void vfunc1 (); virtual void vfunc2 (); void func1 (); void func2 (); private : int m_data1 , m_data2 ; }; \u7c7b A \u5305\u542b\u865a\u51fd\u6570 vfunc1 \u3001 vfunc2 \uff0c\u7531\u4e8e\u7c7b A \u5305\u542b\u865a\u51fd\u6570\uff0c\u6545\u7c7b A \u62e5\u6709\u4e00\u4e2a\u865a\u8868\u3002 \u865a\u8868\u662f\u4e00\u4e2a\u6307\u9488\u6570\u7ec4\uff0c\u5176\u5143\u7d20\u662f\u865a\u51fd\u6570\u7684\u6307\u9488\uff0c\u6bcf\u4e2a\u5143\u7d20\u5bf9\u5e94\u4e00\u4e2a\u865a\u51fd\u6570\u7684\u51fd\u6570\u6307\u9488\u3002\u9700\u8981\u6307\u51fa\u7684\u662f\uff0c\u666e\u901a\u7684\u51fd\u6570\u5373\u975e\u865a\u51fd\u6570\uff0c\u5176\u8c03\u7528\u5e76\u4e0d\u9700\u8981\u7ecf\u8fc7\u865a\u8868\uff0c\u6240\u4ee5\u865a\u8868\u7684\u5143\u7d20\u5e76\u4e0d\u5305\u62ec\u666e\u901a\u51fd\u6570\u7684\u51fd\u6570\u6307\u9488\u3002 \u865a\u8868\u5185\u7684\u6761\u76ee\uff0c\u5373\u865a\u51fd\u6570\u6307\u9488\u7684\u8d4b\u503c\u53d1\u751f\u5728\u7f16\u8bd1\u5668\u7684\u7f16\u8bd1\u9636\u6bb5\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728\u4ee3\u7801\u7684\u7f16\u8bd1\u9636\u6bb5\uff0c\u865a\u8868\u5c31\u5b8c\u6210\u4e86\u6784\u9020\u3002","title":"\u7c7b\u7684\u865a\u8868"},{"location":"languages/c-oop/virtual-function/#_15","text":"\u865a\u8868\u662f\u5c5e\u4e8e\u7c7b\u7684\uff0c\u800c\u4e0d\u662f\u5c5e\u4e8e\u67d0\u4e2a\u5177\u4f53\u7684\u5bf9\u8c61\uff0c\u4e00\u4e2a\u7c7b\u53ea\u9700\u8981\u4e00\u4e2a\u865a\u8868\u5373\u53ef\uff0c\u540c\u4e00\u4e2a\u7c7b\u7684\u6240\u6709\u5bf9\u8c61\u90fd\u4f7f\u7528\u540c\u4e00\u4e2a\u865a\u8868\uff08\u4f46\u53e6\u4e00\u65b9\u9762\uff0c\u4e0d\u540c\u7684\u7c7b\u7684\u865a\u8868\u4e0d\u540c\uff0c\u5373\u4f7f\u5b83\u4eec\u6709\u7ee7\u627f\u5173\u7cfb\uff09\u3002 \u6bcf\u4e00\u4e2a\u865a\u51fd\u6570\u7c7b\u5bf9\u8c61\u5185\u90e8\u5305\u542b\u4e00\u4e2a\u6307\u5411\u6240\u5c5e\u7c7b\u7684\u865a\u8868\u7684\u6307\u9488\uff0c\u6765\u6307\u5411\u81ea\u5df1\u6240\u4f7f\u7528\u7684\u865a\u8868\u3002\u4e3a\u4e86\u8ba9\u6bcf\u4e2a\u5305\u542b\u865a\u8868\u7684\u7c7b\u7684\u5bf9\u8c61\u90fd\u62e5\u6709\u4e00\u4e2a\u865a\u8868\u6307\u9488\uff0c\u7f16\u8bd1\u5668\u5728\u7c7b\u4e2d\u9690\u5f0f\u6dfb\u52a0\u4e86\u4e00\u4e2a\u6307\u9488 *vptr \uff0c\u7528\u6765\u6307\u5411\u865a\u8868\u3002\u8fd9\u6837\uff0c\u5f53\u7c7b\u7684\u5bf9\u8c61\u5728\u521b\u5efa\u65f6\u4fbf\u62e5\u6709\u4e86\u8fd9\u4e2a\u6307\u9488\uff0c\u4e14\u8fd9\u4e2a\u6307\u9488\u7684\u503c\u4f1a\u81ea\u52a8\u88ab\u8bbe\u7f6e\u4e3a\u6307\u5411\u7c7b\u7684\u865a\u8868\u3002 \u8fdb\u4e00\u6b65\u800c\u8a00\uff0c\u5bf9\u8c61\u7684\u865a\u8868\u6307\u9488\u7528\u6765\u6307\u5411\u81ea\u5df1\u6240\u5c5e\u7c7b\u7684\u865a\u8868\uff0c\u865a\u8868\u4e2d\u7684\u51fd\u6570\u6307\u9488\u4f1a\u6307\u5411\u5176\u7ee7\u627f\u7684\u6700\u8fd1\u7684\u4e00\u4e2a\u7c7b\u7684\u865a\u51fd\u6570\u4e0e\u81ea\u8eab\u91cd\u5199\u8986\u76d6\u7684\u865a\u51fd\u6570\u3002 \u524d\u6587\u6307\u51fa\uff0c\u4e00\u4e2a\u7ee7\u627f\u7c7b\u7684\u57fa\u7c7b\u5982\u679c\u5305\u542b\u865a\u51fd\u6570\uff0c\u90a3\u4e2a\u8fd9\u4e2a\u7ee7\u627f\u7c7b\u4e5f\u6709\u62e5\u6709\u81ea\u5df1\u7684\u4e0d\u540c\u7684\u865a\u8868\u3002\u8fd9\u4e2a\u7ee7\u627f\u7c7b\u7684\u5bf9\u8c61\u4e5f\u5305\u542b\u4e00\u4e2a\u865a\u8868\u6307\u9488\uff0c\u7528\u6765\u6307\u5411\u5b83\u7684\u865a\u8868\u3002","title":"\u865a\u8868\u6307\u9488"},{"location":"languages/c-oop/virtual-function/#_16","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 class A { public : virtual void vfunc1 (); virtual void vfunc2 (); void func1 (); void func2 (); private : int m_data1 , m_data2 ; }; class B : public A { public : virtual void vfunc1 (); void func1 (); private : int m_data3 ; }; class C : public B { public : virtual void vfunc2 (); void func2 (); private : int m_data1 , m_data4 ; }; \u7c7b A \u662f\u57fa\u7c7b\uff0c\u7c7b B \u7ee7\u627f\u7c7b A \uff0c\u7c7b C \u53c8\u7ee7\u627f\u7c7b B \u3002\u7531\u4e8e\u8fd9\u4e09\u4e2a\u7c7b\u90fd\u6709\u865a\u51fd\u6570\uff0c\u6545\u7f16\u8bd1\u5668\u4e3a\u6bcf\u4e2a\u7c7b\u90fd\u521b\u5efa\u4e86\u4e00\u4e2a\u865a\u8868\uff0c\u5373\u7c7b A \u7684\u865a\u8868\uff0c\u7c7b B \u7684\u865a\u8868\uff0c\u7c7b C \u7684\u865a\u8868\u3002\u7c7b A \uff0c\u7c7b B \uff0c\u7c7b C \u7684\u5bf9\u8c61\u90fd\u62e5\u6709\u4e00\u4e2a\u865a\u8868\u6307\u9488 *__vptr \u7528\u6765\u6307\u5411\u81ea\u5df1\u6240\u5c5e\u7c7b\u7684\u865a\u8868\u3002 \u6ce8\u610f\u5230\u524d\u6587\u6240\u8ff0\uff1a\u5bf9\u8c61\u7684\u865a\u8868\u6307\u9488\u7528\u6765\u6307\u5411\u81ea\u5df1\u6240\u5c5e\u7c7b\u7684\u865a\u8868\uff0c\u865a\u8868\u4e2d\u7684\u51fd\u6570\u6307\u9488\u4f1a\u6307\u5411\u5176\u7ee7\u627f\u7684\u6700\u8fd1\u7684\u4e00\u4e2a\u7c7b\u7684\u865a\u51fd\u6570\uff08\u8fd9\u4e5f\u5c31\u662f\u4e3a\u4ec0\u4e48 C \u7c7b\u5bf9\u8c61\u7684\u865a\u8868\u4e2d\u7684\u51fd\u6570\u6307\u9488\u4f1a\u6307\u5411 B::vfunc1 \uff09\u4e0e\u81ea\u8eab\u91cd\u5199\u8986\u76d6\u7684\u865a\u51fd\u6570\u3002 \u7c7b A \u5305\u62ec\u4e24\u4e2a\u865a\u51fd\u6570\uff0c\u6545 A \u7684\u865a\u8868\u5305\u542b\u4e24\u4e2a\u6307\u9488\uff0c\u5206\u522b\u6307\u5411 A::vfunc1() \u548c A::vfunc2() \u3002 \u7c7b B \u7ee7\u627f\u4e8e\u7c7b A \uff0c\u6545\u7c7b B \u53ef\u4ee5\u8c03\u7528\u7c7b A \u7684\u51fd\u6570\uff0c\u4f46\u7531\u4e8e\u7c7b B \u91cd\u5199\u4e86 B::vfunc1() \u51fd\u6570\uff0c\u6545 B \u7684\u865a\u8868\u7684\u4e24\u4e2a\u6307\u9488\u5206\u522b\u6307\u5411 B::vfunc1() \u548c A::vfunc2() \u3002 \u7c7b C \u7ee7\u627f\u4e8e\u7c7b B \uff0c\u6545\u7c7b C \u53ef\u4ee5\u8c03\u7528\u7c7b B \u7684\u51fd\u6570\uff0c\u4f46\u7531\u4e8e\u7c7b C \u91cd\u5199\u4e86 C::vfunc2() \u51fd\u6570\uff0c\u6545 C \u7684\u865a\u8868\u7684\u4e24\u4e2a\u6307\u9488\u5206\u522b\u6307\u5411 B::vfunc1() \uff08\u6307\u5411\u7ee7\u627f\u7684\u6700\u8fd1\u7684\u4e00\u4e2a\u7c7b\u7684\u51fd\u6570\uff09\u548c C::vfunc2() \u3002 \u603b\u800c\u8a00\u4e4b\uff0c\u7c7b X \u7684\u865a\u51fd\u6570\u8868\u7684\u51fd\u6570\u6307\u9488\u6307\u5411\u7ee7\u627f\u94fe\u4e0a\u6240\u6709\u6ca1\u6709\u53d1\u751f\u91cd\u5199\u8986\u76d6\u7684\u865a\u51fd\u6570\u548c\u88ab X \u7c7b\u91cd\u5199\u8986\u76d6\u7684\u865a\u51fd\u6570\uff08\u4f46\u662f\uff0c\u5982\u679c\u7ee7\u627f\u94fe\u4e0a X \u4e4b\u4e0a\u7684\u7c7b\u4e2d\uff0c\u67d0\u51fd\u6570\u53d1\u751f\u4e86\u91cd\u5199\u8986\u76d6\uff0c\u4f46\u540c\u65f6\u91cd\u65b0\u58f0\u660e\u4e86 virtual \u5173\u952e\u5b57\uff0c\u90a3\u4e48\u5b83\u4f1a\u7ee7\u7eed\u51fa\u73b0\u5728\u8be5\u7c7b\u7684\u6d3e\u751f\u7c7b\u7684\u865a\u51fd\u6570\u8868\u4e2d\uff09\u3002\u800c\u6bcf\u4e00\u4e2a\u7c7b X \u7684\u5bf9\u8c61\u90fd\u6709\u4e00\u4e2a\u72ec\u5c5e\u4e8e\u81ea\u8eab\u7684\u865a\u8868\u6307\u9488\uff0c\u6765\u6307\u5411 X \u7c7b\u7684\u865a\u8868\u3002\u6ce8\u610f\u5230\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u6d3e\u751f\u7c7b\u5bf9\u8c61 y \uff0c y \u7684\u865a\u8868\u6307\u9488\u4f4d\u4e8e\u57fa\u7c7b\u90e8\u5206\uff0c\u4e5f\u5c31\u662f y \u7684\u5185\u5b58\u7a7a\u95f4\u7684\u5934\u90e8\u3002\u7ed3\u5408\u5230\u524d\u6587\u53d9\u8ff0\u7684\u201c\u7ee7\u627f\u7c7b\u7684\u5185\u5b58\u7ed3\u6784\u201d\uff0c\u65e0\u8bba\u7528\u54ea\u4e00\u4e2a\u57fa\u7c7b\u7684\u6307\u9488\u53bb\u6307\u5411\u4e00\u4e2a\u6d3e\u751f\u7c7b\u5bf9\u8c61\uff0c\u57fa\u7c7b\u6307\u9488\u90fd\u80fd\u6709\u6743\u8bbf\u95ee\u6d3e\u751f\u7c7b\u5bf9\u8c61\u5185\u5b58\u7a7a\u95f4\u7684\u5934\u90e8\uff0c\u90fd\u6709\u6743\u8bbf\u95ee\u6d3e\u751f\u7c7b\u5bf9\u8c61\u7684\u865a\u51fd\u6570\u6307\u9488\uff0c\u8fdb\u800c\u80fd\u591f\u5b8c\u5168\u8bbf\u95ee\u6d3e\u751f\u7c7b\u7684\u865a\u51fd\u6570\u8868\u3002 \u8fd9\u4e5f\u53ef\u4ee5\u89e3\u91ca\uff0c\u4e3a\u4ec0\u4e48\u53ea\u6709\u6307\u9488\u578b\u7684\u5207\u7247\u80fd\u591f\u5b9e\u73b0\u665a\u7ed1\u5b9a\u3002\u56e0\u4e3a\u62f7\u8d1d\u578b\u7684\u5207\u7247\u65e0\u6cd5\u8bbf\u95ee\u539f\u5bf9\u8c61\u7684\u5185\u5b58\u7a7a\u95f4\u5934\u90e8\uff0c\u800c\u662f\u5c06\u8fd9\u7247\u5185\u5b58\u7a7a\u95f4\u4e0a\u7684\u6570\u636e\u5728\u53e6\u4e00\u7247\u5185\u5b58\u7a7a\u95f4\u62f7\u8d1d\u4e86\u4e00\u756a\u3002 \u4f8b\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 class A { public : virtual void vfunc1 (); virtual void vfunc2 (); void func1 (); void func2 (); private : int m_data1 , m_data2 ; }; class B : public A { public : virtual void vfunc1 (); void func1 (); private : int m_data3 ; }; class C : public B { public : virtual void vfunc2 (); void func2 (); private : int m_data1 , m_data4 ; }; int main () { B bObject ; A * p = & bObject ; p -> vfunc1 (); } \u7a0b\u5e8f\u5728\u6267\u884c p->vfunc1() \u65f6\uff0c\u68c0\u6d4b\u5230 p \u662f\u4e2a\u6307\u9488\uff08\u5df2\u7ecf\u65e0\u9700\u5728\u610f\u662f\u4ec0\u4e48\u7c7b\u7684\u6307\u9488\u4e86\uff09\uff0c\u4e14\u8c03\u7528\u7684\u51fd\u6570\u662f\u865a\u51fd\u6570\u3002\u9996\u5148\uff0c\u6839\u636e\u865a\u8868\u6307\u9488 p->__vptr \u6765\u8bbf\u95ee\u5bf9\u8c61 bObject \u5bf9\u5e94\u7684\u865a\u8868\u3002\u867d\u7136\u6307\u9488 p \u662f\u57fa\u7c7b A* \u7c7b\u578b\uff0c\u4f46\u662f *__vptr \u4e5f\u662f\u57fa\u7c7b\u7684\u4e00\u90e8\u5206\uff0c\u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7 p->__vptr \u53ef\u4ee5\u8bbf\u95ee\u5230\u5bf9\u8c61\u5bf9\u5e94\u7684\u865a\u8868\u3002 \u7136\u540e\uff0c\u5728\u865a\u8868\u4e2d\u67e5\u627e\u6240\u8c03\u7528\u7684\u51fd\u6570\u5bf9\u5e94\u7684\u6761\u76ee\u3002\u7531\u4e8e\u865a\u8868\u5728\u7f16\u8bd1\u9636\u6bb5\u5c31\u5df2\u5b8c\u6210\u6784\u9020\uff0c\u6240\u4ee5\u53ef\u4ee5\u6839\u636e\u6240\u8c03\u7528\u7684\u51fd\u6570\u5b9a\u4f4d\u5230\u865a\u8868\u4e2d\u7684\u5bf9\u5e94\u6761\u76ee\u3002 p->vfunc1() \u7684\u8c03\u7528\u5bf9\u5e94 B \u865a\u8868\u7684\u7b2c\u4e00\u9879\uff0c\u5373\u662f B::vfunc1 \u5bf9\u5e94\u7684\u6761\u76ee\u3002 \u6700\u540e\uff0c\u6839\u636e\u865a\u8868\u4e2d\u627e\u5230\u7684\u51fd\u6570\u6307\u9488\uff0c\u8c03\u7528\u51fd\u6570\u3002\u4ece\u56fe\u53ef\u4ee5\u770b\u5230\uff0c B \u865a\u8868\u7684\u7b2c\u4e00\u9879\u6307\u5411 B::vfunc1() \uff0c\u6240\u4ee5 p->vfunc1() \u5b9e\u8d28\u4f1a\u8c03\u7528 B::vfunc1() \u51fd\u6570\u3002 \u53c8\u6bd4\u5982\uff1a 1 2 3 4 5 int main () { A aObject ; A * p = & aObject ; p -> vfunc1 (); } p \u6307\u5411\u7c7b A \u7684\u5bf9\u8c61\uff0c\u5f53 aObject \u5728\u521b\u5efa\u65f6\uff0c\u5b83\u7684\u865a\u8868\u6307\u9488 __vptr \u5df2\u8bbe\u7f6e\u4e3a\u6307\u5411 A \u7684\u865a\u8868\uff0c\u8fd9\u6837 p->__vptr \u5c31\u6307\u5411 A \u7684\u865a\u8868\u3002 vfunc1 \u5728 A \u7684\u865a\u8868\u5bf9\u5e94\u5728\u6761\u76ee\u6307\u5411\u4e86 A::vfunc1() \u51fd\u6570\uff0c\u6240\u4ee5 p->vfunc1() \u5b9e\u8d28\u4f1a\u8c03\u7528 A::vfunc1() \u51fd\u6570\u3002","title":"\u52a8\u6001\u7ed1\u5b9a"},{"location":"languages/c-oop/virtual-function/#_17","text":"\u901a\u8fc7\u6307\u9488\u6765\u8c03\u7528\u51fd\u6570 \u6307\u9488 upcast \u5411\u4e0a\u7c7b\u578b\u8f6c\u6362 \u8c03\u7528\u7684\u662f\u865a\u51fd\u6570 \u5982\u679c\u4e00\u4e2a\u51fd\u6570\u8c03\u7528\u7b26\u5408\u4ee5\u4e0a\u4e09\u4e2a\u6761\u4ef6\uff0c\u7f16\u8bd1\u5668\u5c31\u4f1a\u628a\u8be5\u51fd\u6570\u8c03\u7528\u7f16\u8bd1\u6210\u52a8\u6001\u7ed1\u5b9a\uff0c\u5176\u51fd\u6570\u7684\u8c03\u7528\u8fc7\u7a0b\u8d70\u7684\u662f\u4e0a\u8ff0\u901a\u8fc7\u865a\u8868\u7684\u673a\u5236\u3002","title":"\u52a8\u6001\u7ed1\u5b9a\u7684\u6761\u4ef6"},{"location":"languages/c-oop/virtual-function/#_18","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 #include <iostream> using namespace std ; #pragma pack(4) // \u6309\u7167 4 \u5b57\u8282\u8fdb\u884c\u5185\u5b58\u5bf9\u9f50 class NoVirtual { // \u6ca1\u6709\u865a\u51fd\u6570 int a ; public : void f1 () const { } int f2 () const { return 1 ; } }; class OneVirtual { // \u4e00\u4e2a\u865a\u51fd\u6570 int a ; public : virtual void f1 () const { } int f2 () const { return 1 ; } }; class TwoVirtual { // \u4e24\u4e2a\u865a\u51fd\u6570 int a ; public : virtual void f1 () const { } virtual int f2 () const { return 1 ; } }; int main () { cout << \"int: \" << sizeof ( int ) << endl ; cout << \"NoVirtual: \" << sizeof ( NoVirtual ) << endl ; cout << \"void*: \" << sizeof ( void * ) << endl ; cout << \"OneVirtual: \" << sizeof ( OneVirtual ) << endl ; cout << \"TwoVirtual: \" << sizeof ( TwoVirtual ) << endl ; return 0 ; } /* output: int: 4 NoVirtual: 4 void*: 8 OneVirtual: 12 TwoVirtual: 12 */ \u53ef\u4ee5\u89c2\u5bdf\u5230\uff0c\u865a\u6307\u9488\u7684\u5927\u5c0f\u4e3a 8 \u5b57\u8282\uff0c\u4e14\u865a\u6307\u9488\u53ea\u662f\u6307\u5411\u4e86\u865a\u8868\uff0c\u865a\u51fd\u6570\u7684\u4e2a\u6570\u53ea\u662f\u5f71\u54cd\u865a\u8868\u7684\u5927\u5c0f\uff0c\u4e0d\u5f71\u54cd\u865a\u6307\u9488\u7684\u5927\u5c0f\u3002","title":"\u865a\u6307\u9488\u5927\u5c0f"},{"location":"languages/c-oop/virtual-function/#_19","text":"\u901a\u8fc7\u4f7f\u7528\u8fd9\u4e9b\u865a\u51fd\u6570\u8868\uff0c\u5373\u4f7f\u4f7f\u7528\u7684\u662f\u57fa\u7c7b\u7684\u6307\u9488\u6765\u8c03\u7528\u51fd\u6570\uff0c\u4e5f\u53ef\u4ee5\u8fbe\u5230\u6b63\u786e\u8c03\u7528\u8fd0\u884c\u4e2d\u5b9e\u9645\u5bf9\u8c61\u7684\u865a\u51fd\u6570\u3002 \u628a\u7ecf\u8fc7\u865a\u8868\u8c03\u7528\u865a\u51fd\u6570\u7684\u8fc7\u7a0b\u79f0\u4e3a\u52a8\u6001\u7ed1\u5b9a\uff0c\u5176\u8868\u73b0\u51fa\u6765\u7684\u73b0\u8c61\u79f0\u4e3a\u8fd0\u884c\u65f6\u591a\u6001\u3002\u52a8\u6001\u7ed1\u5b9a\u533a\u522b\u4e8e\u4f20\u7edf\u7684\u51fd\u6570\u8c03\u7528\uff0c\u4f20\u7edf\u7684\u51fd\u6570\u8c03\u7528\u6211\u4eec\u79f0\u4e4b\u4e3a\u9759\u6001\u7ed1\u5b9a\uff0c\u5373\u51fd\u6570\u7684\u8c03\u7528\u5728\u7f16\u8bd1\u9636\u6bb5\u5c31\u53ef\u4ee5\u786e\u5b9a\u4e0b\u6765\u3002\u5c01\u88c5\uff0c\u7ee7\u627f\uff0c\u591a\u6001\u662f\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u7684\u4e09\u4e2a\u7279\u5f81\uff0c\u800c\u591a\u6001\u662f\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u7684\u5173\u952e\u3002C++ \u901a\u8fc7\u865a\u51fd\u6570\u8868\uff0c\u5b9e\u73b0\u4e86\u865a\u51fd\u6570\u4e0e\u5bf9\u8c61\u7684\u52a8\u6001\u7ed1\u5b9a\uff0c\u4ece\u800c\u6784\u5efa\u4e86 C++ \u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u57fa\u77f3\u3002","title":"\u603b\u7ed3"},{"location":"languages/c-oop/virtual-function/#_20","text":"","title":"\u865a\u51fd\u6570\u4e0e\u6784\u9020\u3001\u6790\u6784"},{"location":"languages/c-oop/virtual-function/#_21","text":"\u5f53\u521b\u5efa\u4e00\u4e2a\u5305\u542b\u6709\u865a\u51fd\u6570\u7684\u5bf9\u8c61\u65f6\uff0c\u5fc5\u987b\u521d\u59cb\u5316\u5b83\u7684 VPTR \u4ee5\u6307\u5411\u76f8\u5e94\u7684 VTABLE\u3002\u8bbe\u7f6e VPTR \u7684\u5de5\u4f5c\u7531\u6784\u9020\u51fd\u6570\u5b8c\u6210\u3002\u7f16\u8bd1\u5668\u5728\u6784\u9020\u51fd\u6570\u7684\u5f00\u5934\u79d8\u5bc6\u7684\u63d2\u5165\u80fd\u521d\u59cb\u5316 VPTR \u7684\u4ee3\u7801\u3002 \u6784\u9020\u51fd\u6570\u4e0d\u80fd\u4e5f\u4e0d\u5fc5\u662f\u865a\u51fd\u6570\u3002 \u4e0d\u80fd\uff1a\u5982\u679c\u6784\u9020\u51fd\u6570\u662f\u865a\u51fd\u6570\uff0c\u5219\u521b\u5efa\u5bf9\u8c61\u65f6\u9700\u8981\u5148\u77e5\u9053 VPTR\uff0c\u800c\u5728\u6784\u9020\u51fd\u6570\u8c03\u7528\u524d\uff0cVPTR \u672a\u521d\u59cb\u5316\u3002 \u4e0d\u5fc5\uff1a\u6784\u9020\u51fd\u6570\u7684\u4f5c\u7528\u662f\u63d0\u4f9b\u7c7b\u4e2d\u6210\u5458\u521d\u59cb\u5316\uff0c\u8c03\u7528\u65f6\u660e\u786e\u6307\u5b9a\u8981\u521b\u5efa\u5bf9\u8c61\u7684\u7c7b\u578b\uff0c\u6ca1\u6709\u5fc5\u8981\u662f\u865a\u51fd\u6570\u3002 \u793a\u4f8b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 #include <iostream> using namespace std ; class Base { public : virtual void foo () { cout << \"Base::foo\" << endl ; } Base () { foo (); } // \u5728\u6784\u9020\u51fd\u6570\u4e2d\u8c03\u7528\u865a\u51fd\u6570 foo void bar () { foo (); } // \u5728\u666e\u901a\u51fd\u6570\u4e2d\u8c03\u7528\u865a\u51fd\u6570 foo }; class Derived : public Base { public : int _num ; void foo () { cout << \"Derived::foo \" << _num << endl ;} Derived ( int j ) : Base (), _num ( j ) { } }; int main () { Derived d ( 0 ); Base & b = d ; b . bar (); b . foo (); return 0 ; } /* output: Base::foo Derived::foo 0 Derived::foo 0 */ \u6ce8\u610f\u5230\uff0c\u6784\u9020\u51fd\u6570\u91cc\u8c03\u7528\u7684\u662f Base::foo() \uff0c\u56e0\u4e3a\u521d\u59cb\u5316\u5217\u8868\u662f\u6309\u7167\u5b9a\u4e49\u7684\u5148\u540e\u987a\u5e8f\u6765\u521d\u59cb\u5316\u7684\uff0c\u4e0e\u521d\u59cb\u5316\u5217\u8868\u5199\u6cd5\u5148\u540e\u987a\u5e8f\u65e0\u5173\u3002\u800c\u6211\u4eec\u5df2\u77e5\uff0c\u521d\u59cb\u5316\u662f\u5148\u521d\u59cb\u5316\u57fa\u7c7b\u90e8\u5206\uff0c\u518d\u521d\u59cb\u5316\u6d3e\u751f\u7c7b\u90e8\u5206\u3002\u6545\u800c Derived \u7684\u521d\u59cb\u5316\u5217\u8868\u4e2d\u8c03\u7528 Base \u6765\u8fdb\u884c\u6784\u9020\u65f6\uff0c\u4e00\u5b9a\u4f1a\u5148\u8c03\u7528 Base \u7684\u672c\u5730\u7248\u672c\u7684 foo \uff0c\u56e0\u4e3a _num \u8fd8\u672a\u88ab\u521d\u59cb\u5316\u3002\u4e0d\u8fc7\uff0c\u5982\u679c\u5c06 _num \u53bb\u6389\u53c8\u4f1a\u5982\u4f55\uff1f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 #include <iostream> using namespace std ; class Base { public : virtual void foo () { cout << \"Base::foo\" << endl ; } Base () { foo (); } // \u5728\u6784\u9020\u51fd\u6570\u4e2d\u8c03\u7528\u865a\u51fd\u6570 foo void bar () { foo (); } // \u5728\u666e\u901a\u51fd\u6570\u4e2d\u8c03\u7528\u865a\u51fd\u6570 foo }; class Derived : public Base { public : void foo () { cout << \"Derived::foo\" << endl ; } Derived ( int j ) : Base () { } }; int main () { Derived d ( 0 ); return 0 ; } /* output: Base::foo */ \u4f9d\u7136\u53ea\u662f\u8c03\u7528\u4e86\u672c\u5730\u7248\u672c\u7684 foo \u51fd\u6570\uff0c\u56e0\u4e3a\u5728\u6784\u9020\u51fd\u6570\u4e2d\uff0c\u57fa\u7c7b\u4e2d\u8c03\u7528\u865a\u51fd\u6570\u5982\u679c\u5141\u8bb8\u591a\u6001\u7279\u6027\u7684\u8bdd\uff0c\u5c31\u4f1a\u4f7f\u7528\u6d3e\u751f\u7c7b\u4e2d\u8fd8\u6ca1\u6709\u6784\u9020\u7684\u90e8\u5206\uff0c\u8fd9\u6709\u98ce\u9669\u3002\u6545\u800c C++11 \u7981\u6b62\u4e86\u5728\u672a\u5b8c\u6210\u6784\u9020\u4e4b\u524d\u542f\u7528\u591a\u6001\u7279\u6027\u3002 \u9000\u56de\u5230\u6700\u5f00\u59cb\u7684\u4f8b\u5b50\u3002\u5728\u6784\u9020 d \u4e4b\u540e\uff0c b.bar() \u8c03\u7528\u4e4b\u540e\u5b9e\u9645\u4e0a\u4e3a b.foo() \uff0c\u5b8c\u6210\u865a\u51fd\u6570\u5339\u914d\u8c03\u7528\uff0c\u6545\u800c\u8c03\u7528\u4e86 Derived::foo() \u3002 \u603b\u7ed3\u3002\u5728\u6784\u9020\u51fd\u6570\u4e2d\u8c03\u7528\u4e00\u4e2a\u865a\u51fd\u6570\uff0c\u88ab\u8c03\u7528\u7684\u53ea\u662f\u8fd9\u4e2a\u51fd\u6570\u7684\u672c\u5730\u7248\u672c\uff08\u5373\u5f53\u524d\u7c7b\u7684\u7248\u672c\uff09\uff0c\u5373\u865a\u673a\u5236\u5728\u6784\u9020\u51fd\u6570\u4e2d\u4e0d\u5de5\u4f5c\u3002 \u6784\u9020\u51fd\u6570\u8bed\u53e5\u7684\u6267\u884c\u987a\u5e8f\uff08\u4e0e\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u5217\u8868\u987a\u5e8f\u65e0\u5173\uff09\uff1a \u57fa\u7c7b\u521d\u59cb\u5316 \u5bf9\u8c61\u6210\u5458\u521d\u59cb\u5316 \u6784\u9020\u51fd\u6570\u4f53","title":"\u865a\u51fd\u6570\u4e0e\u6784\u9020\u51fd\u6570"},{"location":"languages/c-oop/virtual-function/#_22","text":"\u6790\u6784\u51fd\u6570\u53ef\u4ee5\u662f\u865a\u7684\uff0c\u4e14\u5e38\u5e38\u662f\u865a\u7684\u3002\u865a\u6790\u6784\u51fd\u6570\u4ecd\u9700\u5b9a\u4e49\u51fd\u6570\u4f53\u3002\u5e76\u4e14\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u662f\u865a\u7684\uff0c\u90a3\u4e48\u6d3e\u751f\u7c7b\u7684\u6790\u6784\u51fd\u6570\u4e5f\u662f\u865a\u7684\uff08\u8fd9\u548c\u91cd\u5199\u8986\u76d6\u8981\u6c42\u540c\u540d\u540c\u53c2\u6570\u5e76\u4e0d\u4e00\u6837\uff09\u3002 \u865a\u6790\u6784\u51fd\u6570\u7684\u7528\u9014\uff1a\u5f53\u5220\u9664\u57fa\u7c7b\u5bf9\u8c61\u6307\u9488\u65f6\uff0c\u7f16\u8bd1\u5668\u5c06\u6839\u636e\u6307\u9488\u6240\u6307\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\uff0c\u8c03\u7528\u76f8\u5e94\u7684\u6790\u6784\u51fd\u6570\u3002 \u82e5\u57fa\u7c7b\u6790\u6784\u4e0d\u662f\u865a\u51fd\u6570\uff0c\u5219\u5220\u9664\u57fa\u7c7b\u6307\u9488\u6240\u6307\u6d3e\u751f\u7c7b\u5bf9\u8c61\u65f6\uff0c\u7f16\u8bd1\u5668\u4ec5\u81ea\u52a8\u8c03\u7528\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\uff0c\u800c\u4e0d\u4f1a\u8003\u8651\u5b9e\u9645\u5bf9\u8c61\u662f\u4e0d\u662f\u57fa\u7c7b\u7684\u5bf9\u8c61\u3002\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5185\u5b58\u6cc4\u6f0f\u3002 \u5728\u6790\u6784\u51fd\u6570\u4e2d\u8c03\u7528\u4e00\u4e2a\u865a\u51fd\u6570\uff0c\u88ab\u8c03\u7528\u7684\u53ea\u662f\u8fd9\u4e2a\u51fd\u6570\u7684\u672c\u5730\u7248\u672c\uff0c\u5373\u865a\u673a\u5236\u5728\u6790\u6784\u51fd\u6570\u4e2d\u4e0d\u5de5\u4f5c\u3002\u7406\u7531\u548c\u6784\u9020\u51fd\u6570\u7c7b\u4f3c\uff0c\u56e0\u4e3a\u6d3e\u751f\u7c7b\u5148\u88ab\u6790\u6784\u3002\u5982\u679c\u5728\u57fa\u7c7b\u7684\u6790\u6784\u91cc\u5141\u8bb8\u542f\u7528\u591a\u6001\u6027\uff0c\u53ef\u80fd\u5c31\u4f1a\u8bbf\u95ee\u5230\u5df2\u7ecf\u88ab\u6d3e\u751f\u7c7b\u6790\u6784\u51fd\u6570\u91ca\u653e\u7684\u5185\u5b58\uff0c\u5b58\u5728\u98ce\u9669\u3002 \u53ef\u4ee5\u8fdb\u4e00\u6b65\u8fd9\u4e48\u7406\u89e3\uff1a\u6d3e\u751f\u7c7b\u7684\u6790\u6784\u51fd\u6570\u5176\u5b9e\u662f\u53ea\u6790\u6784\u6d3e\u751f\u7c7b\u591a\u51fa\u7684\u90e8\u5206\u3002\u66f4\u5177\u4f53\u7684\u7ec6\u8282\u662f\u865a\u6307\u9488\u6307\u5411\u7684\u5b50\u7c7b\u865a\u51fd\u6570\u8868\u5df2\u7ecf\u88ab\u91ca\u653e\u4e86\uff0c\u4f1a\u4ea7\u751f\u5185\u5b58\u4e0d\u5b89\u5168\uff0c\u6240\u4ee5\u4e0d\u5141\u8bb8\u6790\u6784\u51fd\u6570\u542f\u7528\u591a\u6001\u6027\uff08\u8fd9\u4e2a\u66f4\u5177\u4f53\u7684\u7ec6\u8282\u6709\u5f85\u5546\u69b7\uff09\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 #include <iostream> using namespace std ; class Base1 { public : ~ Base1 () { cout << \"~Base1() \\n \" ; } }; class Derived1 : public Base1 { public : ~ Derived1 () { cout << \"~Derived1() \\n \" ; } }; class Base2 { public : virtual ~ Base2 () { cout << \"~Base2() \\n \" ; } }; class Derived2 : public Base2 { public : ~ Derived2 () { cout << \"~Derived2() \\n \" ; } }; int main () { Base1 * bp = new Derived1 ; delete bp ; // \u53ea\u8c03\u7528\u4e86\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570 Base2 * b2p = new Derived2 ; delete b2p ; // \u6d3e\u751f\u7c7b\u865a\u6790\u6784\u51fd\u6570\u8c03\u7528\u5b8c\u540e\u8c03\u7528\u57fa\u7c7b\u7684\u865a\u6790\u6784\u51fd\u6570 return 0 ; } /* output: ~Base1() ~Derived2() ~Base2() */ \u6709\u7684\u65f6\u5019\u6211\u4eec\u53ef\u80fd\u4f1a\u8bf4\uff0c\u6790\u6784\u51fd\u6570\u4e2d\u4e0d\u80fd\u8c03\u7528\u865a\u51fd\u6570\uff0c\u8fd9\u53e5\u8bdd\u662f\u5bf9\u7684\u3002\u8fd9\u53e5\u8bdd\u5b9e\u9645\u4e0a\u662f\u6307\uff0c\u6790\u6784\u51fd\u6570\u548c\u6784\u9020\u51fd\u6570\u4e2d\u90fd\u6ca1\u6709\u591a\u6001\u6027\uff0c\u4f46\u662f\u8fd8\u662f\u53ef\u4ee5\u5b8c\u6210\u8c03\u7528\u672c\u5730\u7248\u672c\u3002 \u603b\u4e4b\uff0c\u91cd\u8981\u539f\u5219\uff1a\u603b\u662f\u5c06\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u8bbe\u7f6e\u4e3a\u865a\u6790\u6784\u51fd\u6570\u3002","title":"\u865a\u51fd\u6570\u4e0e\u6790\u6784\u51fd\u6570"},{"location":"languages/c-oop/virtual-function/#_23","text":"","title":"\u91cd\u8f7d\u3001\u91cd\u5199\u9690\u85cf\u3001\u91cd\u5199\u8986\u76d6"},{"location":"languages/c-oop/virtual-function/#overload","text":"\u76ee\u7684\uff1a\u63d0\u4f9b\u540c\u540d\u51fd\u6570\u7684\u4e0d\u540c\u5b9e\u73b0\uff0c\u5c5e\u4e8e\u9759\u6001\u591a\u6001\u3002 \u51fd\u6570\u540d\u5fc5\u987b\u76f8\u540c\uff0c\u51fd\u6570\u53c2\u6570\u5fc5\u987b\u4e0d\u540c\uff0c\u4f5c\u7528\u57df\u76f8\u540c\uff08\u5982\u4f4d\u4e8e\u540c\u4e00\u4e2a\u7c7b\u4e2d\u6216\u540c\u540d\u5168\u5c40\u51fd\u6570\uff09\u3002","title":"\u91cd\u8f7d\uff08overload\uff09"},{"location":"languages/c-oop/virtual-function/#redefining","text":"\u76ee\u7684\uff1a\u5728\u6d3e\u751f\u7c7b\u4e2d\u91cd\u65b0\u5b9a\u4e49\u57fa\u7c7b\u51fd\u6570\uff0c\u5b9e\u73b0\u6d3e\u751f\u7c7b\u7684\u7279\u6b8a\u529f\u80fd\u3002 \u5c4f\u853d\u4e86\u57fa\u7c7b\u7684\u6240\u6709\u5176\u5b83\u540c\u540d\u51fd\u6570\u3002 \u5982\u679c\u8be5\u51fd\u6570\u540d\u5728\u57fa\u7c7b\u91cc\u662f\u975e\u865a\u51fd\u6570\uff0c\u6b64\u65f6\u6d3e\u751f\u7c7b\u91cc\u91cd\u65b0\u5b9a\u4e49\u7684\u51fd\u6570\u65e0\u8bba\u53c2\u6570\u662f\u5426\u76f8\u540c\uff08\u8fd9\u79cd\u76f8\u540c\u662f\u4e0d\u8003\u8651\u9ed8\u8ba4\u503c\u7684\uff09\uff0c\u53d1\u751f\u7684\u90fd\u662f\u91cd\u5199\u9690\u85cf\uff1b\u800c\u5982\u679c\u8be5\u51fd\u6570\u5728\u57fa\u7c7b\u91cc\u662f\u865a\u51fd\u6570\uff0c\u6b64\u65f6\u6d3e\u751f\u7c7b\u91cc\u91cd\u65b0\u5b9a\u4e49\u7684\u51fd\u6570\u5982\u679c\u53c2\u6570\u76f8\u540c\uff0c\u5219\u53d1\u751f override\uff1b\u5982\u679c\u53c2\u6570\u4e0d\u540c\uff0c\u5219\u53d1\u751f redefining\u3002","title":"\u91cd\u5199\u9690\u85cf\uff08redefining\uff09"},{"location":"languages/c-oop/virtual-function/#override","text":"\u76ee\u7684\uff1a\u5bf9\u57fa\u7c7b\u7684\u865a\u51fd\u6570\u8fdb\u884c\u91cd\u5b9a\u4e49\uff0c\u51fd\u6570\u540d\u548c\u53c2\u6570\u5b8c\u5168\u76f8\u540c\uff0c\u8fd4\u56de\u503c\u4e00\u822c\u76f8\u540c\uff08\u5982\u679c\u6d3e\u751f\u7c7b\u5b9a\u4e49\u65b0\u51fd\u6570\u4e0e\u57fa\u7c7b\u865a\u51fd\u6570\u7684\u51fd\u6570\u540d\u76f8\u540c\u800c\u53c2\u6570\u4e0d\u540c\uff0c\u6d3e\u751f\u7c7b\u5b9a\u4e49\u7684\u51fd\u6570\u4f1a redefining \u57fa\u7c7b\u865a\u51fd\u6570\uff0c\u53d1\u751f\u9690\u85cf\u800c\u4e0d\u662f\u8986\u76d6\uff09\u3002 \u8986\u76d6\u7684\u7531\u6765\uff1a\u57fa\u7c7b\u865a\u51fd\u6570\u8868\u4e2d\u7684\u865a\u51fd\u6570\u6307\u9488\u4f1a\u88ab\u6d3e\u751f\u7c7b\u4e2d\u91cd\u65b0\u5b9a\u4e49\u7684\u540c\u540d\u540c\u53c2\u6570\u7684\u865a\u51fd\u6570\u7684\u6307\u9488\u8986\u76d6\u6389\uff0c\u4ee5\u6b64\u6765\u5b9e\u73b0\u52a8\u6001\u7ed1\u5b9a\u3002","title":"\u91cd\u5199\u8986\u76d6\uff08override\uff09"},{"location":"languages/c-oop/virtual-function/#_24","text":"\u975e\u865a\u540c\u540d\u51fd\u6570\u5728\u540c\u4e00\u4e2a\u7c7b\u4e2d\u53d1\u751f\u91cd\u8f7d\uff0c\u5728\u4e0d\u540c\u7c7b\uff08\u57fa\u7c7b\u548c\u6d3e\u751f\u7c7b\uff09\u4e2d\u53d1\u751f\u9690\u85cf \u3002 \u865a\u540c\u540d\u51fd\u6570\uff0c\u53c2\u6570\u76f8\u540c\u5219\u5728\u6d3e\u751f\u7c7b\u4e2d\u53d1\u751f\u91cd\u5199\u8986\u76d6\uff0c\u53c2\u6570\u4e0d\u540c\u5219\u5728\u6d3e\u751f\u7c7b\u4e2d\u53d1\u751f\u91cd\u5199\u9690\u85cf \u3002 \u91cd\u8f7d\uff1a\u540c\u7ea7\u8c03\u7528\u7684\u4f18\u5148\u5339\u914d\u95ee\u9898\u3002 \u91cd\u5199\u9690\u85cf\uff1a\u6d3e\u751f\u7c7b\u4f18\u5148\u8c03\u7528\u6d3e\u751f\u7c7b\u540c\u540d\u51fd\u6570\u3002 \u91cd\u5199\u8986\u76d6\uff1a\u65e0\u8bba\u662f\u57fa\u7c7b\u8fd8\u662f\u6d3e\u751f\u7c7b\u7684\u6307\u9488\uff0c\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61\u53ea\u80fd\u8c03\u7528\u6d3e\u751f\u7c7b\u540c\u540d\u51fd\u6570\u3002 \u793a\u4f8b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 #include <iostream> using namespace std ; class Base { public : virtual void foo () { cout << \"Base::foo()\" << endl ; } virtual void foo ( int ) { cout << \"Base::foo(int)\" << endl ; } // \u91cd\u8f7d void bar () { }; }; class Derived1 : public Base { public : void foo ( int ) { cout << \"Derived1::foo(int)\" << endl ; } // \u91cd\u5199\u8986\u76d6 }; class Derived2 : public Base { public : void foo ( float ) { cout << \"Derived2::foo(float)\" << endl ; } // \u91cd\u5199\u9690\u85cf }; int main () { Derived1 d1 ; Derived2 d2 ; Base * p1 = & d1 ; Base * p2 = & d2 ; Derived2 & tag = d2 ; Derived2 * pointer = & d2 ; d1 . Base :: foo (); d2 . Base :: foo (); p1 -> foo (); p2 -> foo (); d1 . foo ( 3 ); d2 . foo ( 3.0 ); p1 -> foo ( 3 ); p2 -> foo ( 3.0 ); d2 . foo ( 3.0 ); tag . foo ( 3.0 ); pointer -> foo ( 3.0 ); return 0 ; } /* output: Base::foo() Base::foo() Base::foo() Base::foo() Derived1::foo(int) Derived2::foo(float) Derived1::foo(int) Base::foo(int) Derived2::foo(float) Derived2::foo(float) Derived2::foo(float) */ \u9996\u5148\uff0c d1.foo() \u4e0e d2.foo() \u90fd\u4e0d\u5408\u6cd5\uff0c\u7531\u4e8e\u6d3e\u751f\u7c7b\u90fd\u5b9a\u4e49\u4e86\u5e26\u53c2\u6570\u7684 foo \uff0c\u57fa\u7c7b foo() \u5bf9\u5b9e\u4f8b\u4e0d\u53ef\u89c1\uff08\u53d1\u751f\u4e86 redefining \u91cd\u5199\u9690\u85cf\uff09\u3002\u6545\u800c\u8fd9\u4e24\u53e5\u4f1a\u62a5\u9519\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u7528 Base:: \u3002 \u5176\u6b21\uff0c p1->foo() \u65f6\uff0c\u6d3e\u751f\u7c7b\u6ca1\u6709\u540c\u540d\u540c\u53c2\u6570\u8986\u76d6\u6389\u57fa\u7c7b\u865a\u51fd\u6570\uff0c\u865a\u51fd\u6570\u8868\u7ee7\u627f\u57fa\u7c7b\u7684 foo() \u865a\u51fd\u6570\uff0c\u6545\u800c\u8c03\u7528\u4e86\u57fa\u7c7b\u7684 foo() \u3002 \u6700\u540e\uff0c p2->foo(3.0) \u8fd9\u91cc\u6ca1\u6709\u53d1\u751f\u91cd\u5199\u8986\u76d6\uff0c\u53d1\u751f\u4e86\u91cd\u5199\u9690\u85cf\u3002\u5728\u6743\u9650\u8db3\u591f\u7684\u65f6\u5019\uff0c\u6bd4\u5982\u4ece\u6d3e\u751f\u7c7b\u5bf9\u8c61\u6216\u8005\u6d3e\u751f\u7c7b\u6307\u9488\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\u540c\u540d\u51fd\u6570\u3002\u4f46\u662f\u7528\u57fa\u7c7b\u6307\u9488\u7684\u8bbf\u95ee\u6743\u9650\u4ec5\u9650\u4e8e\u57fa\u7c7b\u90e8\u5206\uff0c\u65e0\u6cd5\u8bbf\u95ee\u5b9a\u4e49\u5728\u6d3e\u751f\u7c7b\u90e8\u5206\u7684\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\u51fd\u6570\uff0c\u6545\u800c\u53ea\u80fd\u8bbf\u95ee\u57fa\u7c7b\u5b9a\u4e49\u7684\u540c\u540d\u51fd\u6570\u4e2d\u5339\u914d\u7684\u4e00\u4e2a\u3002 \u53e6\u4e00\u4e2a\u4f8b\u5b50 \u5bf9\u4e8e A\uff0c\u6ce8\u610f\u91cd\u5199\u8986\u76d6\u7684\u6761\u4ef6\uff1a\u5728\u6d3e\u751f\u7c7b\u4e2d\u5b9a\u4e49\u57fa\u7c7b\u865a\u51fd\u6570\u7684\u540c\u540d\u540c\u53c2\u51fd\u6570\u3002\u6b64\u5904 (1) \u4e0d\u662f\u865a\u51fd\u6570\uff0c\u6240\u4ee5\u4e0d\u662f\u91cd\u5199\u8986\u76d6\uff0c\u662f\u91cd\u5199\u9690\u85cf\u3002\u5bf9\u4e8e D\uff0c\u9996\u5148\uff0c (5) \u4e0d\u662f\u91cd\u5199\u8986\u76d6\uff0c\u662f\u91cd\u5199\u9690\u85cf\uff0c\u56e0\u800c\u76f4\u63a5\u8c03\u7528 (5) \u3002\u7b2c\u4e8c\uff0c\u57fa\u7c7b\u51fd\u6570\u5bf9\u4e8e\u6d3e\u751f\u7c7b\u5bf9\u8c61\u4e0d\u53ef\u89c1\uff0c\u6d3e\u751f\u7c7b\u5bf9\u8c61\u6216\u6d3e\u751f\u7c7b\u6307\u9488\u5f15\u7528\u54ea\u6015 warning \u4e5f\u4f1a\u5148\u8c03\u7528\u81ea\u8eab\u7684\u51fd\u6570\u3002\u5982\u679c\u81ea\u8eab\u7684\u51fd\u6570\u6ca1\u6709\u4e00\u4e2a\u53ef\u4ee5\u8c03\u7528\u7684\uff0c\u54ea\u6015\u57fa\u7c7b\u51fd\u6570\u6709\u53ef\u4ee5\u8c03\u7528\u7684\uff0c\u6d3e\u751f\u7c7b\u5bf9\u8c61\u5b81\u613f error \u4e5f\u4e0d\u4f1a\u8c03\u7528\u57fa\u7c7b\u51fd\u6570\u3002","title":"\u603b\u7ed3"},{"location":"languages/c-oop/virtual-function/#override_1","text":"\u91cd\u5199\u8986\u76d6\u8981\u6ee1\u8db3\u7684\u6761\u4ef6\u5f88\u591a\uff0c\u5f88\u5bb9\u6613\u5199\u9519\uff0c\u53ef\u4ee5\u4f7f\u7528 override \u5173\u952e\u5b57\u8f85\u52a9\u68c0\u67e5\u3002 override \u5173\u952e\u5b57\u660e\u786e\u5730\u544a\u8bc9\u7f16\u8bd1\u5668\u4e00\u4e2a\u51fd\u6570\u662f\u5bf9\u57fa\u7c7b\u4e2d\u4e00\u4e2a\u865a\u51fd\u6570\u7684\u91cd\u5199\u8986\u76d6\uff0c\u7f16\u8bd1\u5668\u5c06\u5bf9\u91cd\u5199\u8986\u76d6\u8981\u6ee1\u8db3\u7684\u6761\u4ef6\u8fdb\u884c\u68c0\u67e5\uff0c\u6b63\u786e\u7684\u91cd\u5199\u8986\u76d6\u624d\u80fd\u901a\u8fc7\u7f16\u8bd1\u3002\u5982\u679c\u6ca1\u6709 override \u5173\u952e\u5b57\uff0c\u4f46\u662f\u6ee1\u8db3\u4e86\u91cd\u5199\u8986\u76d6\u7684\u5404\u9879\u6761\u4ef6\uff0c\u4e5f\u80fd\u5b9e\u73b0\u91cd\u5199\u8986\u76d6\u3002\u5b83\u53ea\u662f\u7f16\u8bd1\u5668\u7684\u4e00\u4e2a\u68c0\u67e5\uff0c\u6b63\u786e\u5b9e\u73b0 override \u65f6\uff0c\u5bf9\u7f16\u8bd1\u7ed3\u679c\u6ca1\u6709\u5f71\u54cd\u3002 \u4f8b\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 #include <iostream> using namespace std ; class Base { public : virtual void foo () { cout << \"Base::foo()\" << endl ; } virtual void foo ( int ) { cout << \"Base::foo(int)\" << endl ; } // \u91cd\u8f7d void bar () { }; }; class Derived1 : public Base { public : void foo ( int ) { cout << \"Derived1::foo(int )\" << endl ; } // \u91cd\u5199\u8986\u76d6 }; class Derived2 : public Base { public : void foo ( float ) { cout << \"Derived2::foo(float)\" << endl ; } // \u8bef\u628a\u53c2\u6570\u5199\u9519\u4e86\uff0c\u4f46\u662f\u4ecd\u7136\u901a\u8fc7\u4e86\u7f16\u8bd1 }; class Derived3 : public Base { public : void foo ( int ) override { cout << \"Derived3::foo(int)\" << endl ; } // \u91cd\u5199\u8986\u76d6\u6b63\u786e void foo ( float ) override { } // \u53c2\u6570\u4e0d\u540c\uff0c\u4e0d\u662f\u91cd\u5199\u8986\u76d6\uff0c\u7f16\u8bd1\u9519\u8bef void bar () override { } // bar \u975e\u865a\u51fd\u6570\uff0c\u7f16\u8bd1\u9519\u8bef };","title":"override \u5173\u952e\u5b57"},{"location":"languages/c-oop/virtual-function/#final","text":"\u5728\u865a\u51fd\u6570\u58f0\u660e\u6216\u5b9a\u4e49\u4e2d\u4f7f\u7528 final \u5173\u952e\u5b57\u540e\uff0c\u786e\u4fdd\u51fd\u6570\u4e3a\u865a\u4e14\u4e0d\u53ef\u88ab\u6d3e\u751f\u7c7b\u91cd\u5199\u3002\u53ef\u5728\u7ee7\u627f\u5173\u7cfb\u94fe\u7684\u201c\u4e2d\u9014\u201d\u8fdb\u884c\u8bbe\u5b9a\uff0c\u7981\u6b62\u540e\u7eed\u6d3e\u751f\u7c7b\u5bf9\u6307\u5b9a\u865a\u51fd\u6570\u91cd\u5199\uff0c\u4f46\u662f\u6d3e\u751f\u7c7b\u4ecd\u53ef\u8c03\u7528\u8be5\u865a\u51fd\u6570\u3002 \u5728\u7c7b\u5b9a\u4e49\u4e2d\u4f7f\u7528\u65f6\uff0c final \u6307\u5b9a\u6b64\u7c7b\u4e0d\u53ef\u88ab\u7ee7\u627f\u3002 \u683c\u5f0f\uff1afinal \u5199\u5728\u7ee7\u627f\u7c7b\u7c7b\u540d\u540e\uff0c\u7ee7\u627f\u65b9\u5f0f\u524d\u3002 1 2 3 class B final : public A { /* CODE */ } final \u548c override \u5728\u4fee\u9970\u51fd\u6570\u65f6\uff0c\u90fd\u53ea\u80fd\u4fee\u9970\u865a\u51fd\u6570\u3002\u4f8b\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 class Base { virtual void foo () { }; }; class A : public Base { void foo () final { }; // \u91cd\u5199\u8986\u76d6\uff0c\u4e14\u662f\u6700\u7ec8\u8986\u76d6 void bar () final { }; // bar \u975e\u865a\u51fd\u6570\uff0c\u7f16\u8bd1\u9519\u8bef }; class B final : public A { void foo () override { }; // A::foo \u5df2\u662f\u6700\u7ec8\u8986\u76d6\uff0c\u7f16\u8bd1\u9519\u8bef }; class C : public B { // B \u4e0d\u80fd\u88ab\u7ee7\u627f\uff0c\u7f16\u8bd1\u9519\u8bef };","title":"final \u5173\u952e\u5b57"},{"location":"languages/css/","text":"CSS \u8bed\u8a00\u57fa\u7840 \u00b6 \u6837\u5f0f\u4e0e\u6837\u5f0f\u8868 \u00b6 CSS \u7684\u5168\u79f0\u4e3a C ascading S tyle S heets\uff08\u5c42\u53e0\u6837\u5f0f\u8868\uff09\uff0c\u53ef\u4ee5\u7cfb\u7edf\u5730\u63cf\u8ff0\u7f51\u9875\u5185\u5bb9\u7684\u5e03\u5c40\u4e0e\u9762\u8c8c\u3002 \u4f60\u53ef\u4ee5\u70b9\u51fb \u94fe\u63a5 \u6765\u4f53\u4f1a\u4e00\u4e0b\u6837\u5f0f\u8868\u7684\u610f\u4e49\u3002\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u63cf\u8ff0\u7f51\u9875\u5185\u5bb9\u7684 HTML \u6587\u672c\u53ea\u6709\u4e00\u4efd\uff0c\u4f46\u901a\u8fc7\u6539\u53d8\u6837\u5f0f\u8868\uff0c\u7f51\u9875\u7684\u5e03\u5c40\u5c31\u6709\u4e86\u5929\u7ffb\u5730\u8986\u7684\u53d8\u5316\u3002 \u5f15\u5165 CSS \u5728 HTML \u4e2d\u5f15\u5165\u6837\u5f0f\u7684\u65b9\u5f0f\u901a\u5e38\u6709\u4e09\u79cd\uff1a \u5185\u5d4c\u4e8e\u9875\u9762\u5143\u7d20\u4e2d\uff1b \u901a\u8fc7 <style> \u5143\u7d20\u5d4c\u5165\u7f51\u9875\uff1b \u901a\u8fc7\u5916\u90e8\u94fe\u63a5\u5f15\u7528\u3002 \u5728\u8fd9\u4efd\u6587\u6863\u4e2d\uff0c\u51fa\u4e8e\u65b9\u4fbf\u8003\u8651\uff0c\u6211\u4eec\u91c7\u7528\u901a\u8fc7 <style> \u5143\u7d20\u5d4c\u5165\u7f51\u9875\u7684\u5f62\u5f0f\u8fdb\u884c\u8bb2\u89e3\u3002 \u5e38\u89c1\u7684\u6837\u5f0f\u6709\u989c\u8272\u3001\u5b57\u4f53\u3001\u8fb9\u8ddd\u3001\u5bf9\u9f50\u3001\u80cc\u666f\u3001\u8fb9\u6846\u7b49\u3002 \u6211\u4eec\u5148\u56de\u5230\u719f\u6089\u7684 HTML\uff1a 1 2 3 4 5 6 7 8 < body > < h1 > \u8fd9\u662f\u6807\u9898 </ h1 > < p > \u8fd9\u662f\u6bb5\u843d\u3002\u548c\u6211\u4e00\u8d77\u8bfb\uff1a </ p > < p > \u4f60\u2014\u2014\u597d\u2014\u2014\u4e16\u2014\u2014\u754c\u2014\u2014 </ p > < p > < a href = \"https://www.baidu.com\" > \u524d\u5f80\u767e\u5ea6 </ a > </ p > </ body > \u8003\u8651\u8fd9\u6837\u4e00\u4e2a\u9700\u6c42\uff1a \u5c06\u4e3b\u4f53\uff08 <body> \uff09\u80cc\u666f\u8bbe\u4e3a\u6de1\u84dd\u8272\uff08 lightblue \uff09\uff1b \u5c06\u6807\u9898\uff08 <h1> \uff09\u8bbe\u4e3a\u767d\u8272\u5c45\u4e2d\uff1b \u5c06\u6b63\u6587\uff08 <p> \uff09\u5b57\u53f7\u8bbe\u4e3a 20px \uff1b \u5c06\u94fe\u63a5\uff08 <a> \uff09\u989c\u8272\u8bbe\u4e3a\u7ea2\u8272\uff08 red \uff09\u3002 \u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e9b\u6837\u5f0f\u5c42\u9762\u7684\u9700\u6c42\uff0c\u6837\u5f0f\u8868\u8bde\u751f\u4e86\u3002\u6211\u4eec\u5148\u770b\u793a\u4f8b\uff0c\u518d\u6765\u5206\u6790 CSS \u7684\u8bed\u6cd5\u683c\u5f0f\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 body { background : lightblue ; } h1 { color : white ; text-align : center ; } p { font-size : 20 px ; } a { color : red ; } \u6211\u76f8\u4fe1\uff0c\u5f53\u4f60\u770b\u5230\u8fd9\u6837\u7684\u6587\u672c\u65f6\uff0c\u5df2\u7ecf\u80fd\u51ed\u501f\u76f4\u89c9\u7406\u89e3\u5b83\u7684\u542b\u4e49\u4e86\u3002\u4f8b\u5982\uff0c body { background: lightblue; } \u7684\u542b\u4e49\u5c31\u662f\u5c06\u6240\u6709 <body> \u5143\u7d20\u7684 background \u8bbe\u7f6e\u4e3a lightblue \u3002 CSS \u7684\u8bed\u6cd5\u683c\u5f0f\u975e\u5e38\u7b80\u5355\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u4e5f\u6b63\u5f0f\u8fd9\u6837\u4e00\u7cfb\u5217\u7b80\u5355\u7684\u89c4\u5219\u63cf\u8ff0\uff0c\u76f8\u4e92\u7ec4\u5408\u4e4b\u540e\u5c31\u80fd\u63cf\u8ff0\u4e30\u5bcc\u7684\u7f51\u9875\u6392\u7248\u6837\u5f0f\u3002 \u6211\u4eec\u518d\u6765\u770b\u4e00\u4e0b\uff0c\u5c06 CSS \u5f15\u5165 HTML \u540e\u7684\u4e00\u4e2a\u5b8c\u6574\u7f51\u9875\u6587\u4ef6\u5c06\u4f1a\u5448\u73b0\u600e\u6837\u7684\u7ed3\u6784\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 <!DOCTYPE html> < html lang = \"zh\" > < head > < meta charset = \"utf-8\" > < style > body { background : lightblue ; } h1 { color : white ; text-align : center ; } p { font-size : 20 px ; } a { color : red ; } </ style > < title > CSS \u793a\u4f8b </ title > </ head > < body > < h1 > \u8fd9\u662f\u6807\u9898 </ h1 > < p > \u8fd9\u662f\u6bb5\u843d\u3002\u548c\u6211\u4e00\u8d77\u8bfb\uff1a </ p > < p > \u4f60\u2014\u2014\u597d\u2014\u2014\u4e16\u2014\u2014\u754c\u2014\u2014 </ p > < p > < a href = \"https://www.baidu.com\" > \u524d\u5f80\u767e\u5ea6 </ a > </ p > </ body > </ html > \u4f60\u53ef\u4ee5\u70b9\u51fb\u94fe\u63a5 \u5f15\u5165 CSS \u524d \u4ee5\u53ca \u5f15\u5165 CSS \u540e \u6765\u611f\u53d7 CSS \u7684\u4f5c\u7528\u3002 \u7c7b \u00b6 \u4f7f\u7528\u4e0a\u8ff0\u6837\u5f0f\u8868\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u7f51\u9875\u4e2d\u6307\u5b9a\u7c7b\u578b\u7684\u5143\u7d20\u8bbe\u7f6e\u7edf\u4e00\u7684\u6837\u5f0f\u3002\u7136\u800c\uff0c\u6211\u4eec\u6709\u65f6\u4f1a\u5e0c\u671b\u53ea\u5bf9\u67d0\u4e00\u90e8\u5206\u5143\u7d20\u8bbe\u5b9a\u6837\u5f0f\uff0c\u8fd9\u65f6\u5c31\u8981\u5f15\u5165 \u7c7b \u7684\u6982\u5ff5\u4e86\u3002 \u7c7b\u7684 CSS \u9009\u62e9\u8bed\u6cd5\u4e0e\u5143\u7d20\u7684\u7c7b\u4f3c\uff0c\u53ea\u9700\u5728\u7c7b\u540d\u524d\u52a0\u4e0a\u4e00\u4e2a . \u5373\u53ef\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u5e0c\u671b\u5b9a\u4e49\u4e00\u4e2a\u7c7b red \uff0c\u5b83\u7684\u80cc\u666f\u8272\u662f\u7ea2\u8272\uff08 red \uff09\uff0c\u6587\u672c\u989c\u8272\u4e3a\u767d\u8272\uff0c\u4e14\u5177\u6709 10px \u7684\u5185\u8fb9\u8ddd\uff08 padding \uff09\u548c 5px \u7684\u5916\u8fb9\u8ddd\uff08 margin \uff09\u3002\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u5199\uff1a 1 2 3 4 5 6 . red { background : red ; color : white ; padding : 10 px ; margin : 5 px ; } \u5728 HTML \u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u7ed9\u4e00\u4e2a\u5143\u7d20\u8d4b\u4e88 class=\"red\" \u7684\u5c5e\u6027\uff0c\u8fd9\u4e2a\u5143\u7d20\u5c31\u5177\u5907\u4e86\u6211\u4eec\u6240\u5b9a\u4e49\u7684 red \u7c7b\u7684\u6837\u5f0f\uff1a 1 2 3 < div class = \"red\" > < p > \u7ea2\u8272\u4e3b\u9898 </ p > </ div > \u4f7f\u7528 <div> \u6dfb\u52a0\u5206\u7ec4 \u5f53\u6211\u4eec\u60f3\u8981\u5c06\u4e00\u7cfb\u5217\u5143\u7d20\u89c6\u4e3a\u4e00\u4e2a\u6574\u4f53\u8fdb\u884c\u5e03\u5c40\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u91c7\u7528 <div> \u5143\u7d20\u521b\u5efa\u4e00\u4e2a\u5206\u7ec4\uff0c\u5bf9\u8fd9\u4e2a\u5206\u7ec4\u8bbe\u7f6e\u6837\u5f0f\u6216\u8fdb\u884c\u6392\u7248\u3002 \u6211\u4eec\u8fd8\u53ef\u4ee5\u4ee5\u6b64\u7c7b\u63a8\uff0c\u521b\u5efa blue \u3001 green \u7c7b\u3002\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 <!DOCTYPE html> < html lang = \"zh\" > < head > < meta charset = \"utf-8\" > < style > . red { background : red ; color : white ; padding : 10 px ; margin : 5 px ; } . blue { background : blue ; color : white ; padding : 10 px ; margin : 5 px ; } . green { background : green ; color : white ; padding : 10 px ; margin : 5 px ; } </ style > < title > CSS \u793a\u4f8b </ title > </ head > < body > < div class = \"red\" > < p > \u7ea2\u8272\u4e3b\u9898 </ p > </ div > < div class = \"blue\" > < p > \u84dd\u8272\u4e3b\u9898 </ p > </ div > < div class = \"green\" > < p > \u7eff\u8272\u4e3b\u9898 </ p > </ div > </ body > </ html > \u4f60\u53ef\u4ee5\u70b9\u51fb \u94fe\u63a5 \u5728\u6d4f\u89c8\u5668\u4e2d\u9884\u89c8\u8fd9\u6bb5\u4ee3\u7801\u3002 \u89c2\u5bdf\u4e0a\u8ff0\u4ee3\u7801\uff0c\u6211\u4eec\u53d1\u73b0\uff0c red \u3001 blue \u3001 green \u7c7b\u7684 CSS \u5b9a\u4e49\u4e2d\u90fd\u6709\u4e09\u6761\u91cd\u590d\u7684\u5c5e\u6027\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u516c\u5171\u90e8\u5206\u63d0\u53d6\u4e3a\u4e00\u4e2a\u516c\u5171\u7684\u7c7b theme \uff0c\u5e76\u7ed9 HTML \u4e2d\u7684\u6bcf\u4e2a <div> \u5143\u7d20\u7684 class \u5c5e\u6027\u90fd\u989d\u5916\u6dfb\u52a0\u4e00\u4e2a theme \u7c7b\uff0c\u5982\u4e0b\u6240\u793a\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 <!DOCTYPE html> < html lang = \"zh\" > < head > < meta charset = \"utf-8\" > < style > . theme { color : white ; padding : 10 px ; margin : 5 px ; } . red { background : red ; } . blue { background : blue ; } . green { background : green ; } </ style > < title > CSS \u793a\u4f8b </ title > </ head > < body > < div class = \"red theme\" > < p > \u7ea2\u8272\u4e3b\u9898 </ p > </ div > < div class = \"blue theme\" > < p > \u84dd\u8272\u4e3b\u9898 </ p > </ div > < div class = \"green theme\" > < p > \u7eff\u8272\u4e3b\u9898 </ p > </ div > </ body > </ html > \u8fd9\u6837\uff0c\u6211\u4eec\u7684 CSS \u4ee3\u7801\u4e5f\u53d8\u5f97\u66f4\u52a0\u6e05\u6670\u4e0e\u7b80\u6d01\u3002 \u7528\u597d\u5f00\u53d1\u8005\u5de5\u5177 Firefox\u3001Chrome\u3001Edge\u3001Safari \u7b49\u6d4f\u89c8\u5668\u5747\u4e3a\u5f00\u53d1\u8005\u63d0\u4f9b\u4e86\u7528\u4e8e\u67e5\u770b\u548c\u8c03\u8bd5\u7f51\u9875\u7684\u5de5\u5177\u3002\u6253\u5f00\u5f00\u53d1\u8005\u5de5\u5177\u7684\u5feb\u6377\u952e\u901a\u5e38\u4e3a F12\uff0c\u5f53\u7136\u8fd9\u4e5f\u53ef\u80fd\u56e0\u4f60\u7684\u6d4f\u89c8\u5668\u548c\u64cd\u4f5c\u7cfb\u7edf\u800c\u5f02\u3002\u4f60\u53ef\u4ee5\u501f\u52a9\u641c\u7d22\u5f15\u64ce\u8fdb\u4e00\u6b65\u4e86\u89e3\u3002 \u4ee5\u4e0a\u8ff0\u793a\u4f8b\u4ee3\u7801\u7684\u7f51\u9875\u4e3a\u4f8b\uff0c\u70b9\u51fb \u94fe\u63a5 \uff0c\u5728\u6253\u5f00\u7684\u9875\u9762\u4e2d\u542f\u52a8\u5f00\u53d1\u8005\u5de5\u5177\uff0c\u52a8\u624b\u67e5\u770b\u4e00\u4e0b\u5143\u7d20\u7684\u7ec4\u7ec7\u65b9\u5f0f\u3001\u5143\u7d20\u7684\u6837\u5f0f\u4ee5\u53ca\u5b83\u4eec\u6240\u5c5e\u7684\u7c7b\u5427\uff01 \u4ee5\u4e0b\u662f\u4f7f\u7528 Firefox \u6d4f\u89c8\u5668\u8c03\u8bd5\u4e0a\u8ff0\u793a\u4f8b\u4ee3\u7801\u7f51\u9875\u7684\u622a\u5c4f\u3002 \u4f60\u4e5f\u53ef\u4ee5\u5229\u7528\u540c\u6837\u7684\u65b9\u5f0f\u5bf9\u540e\u7eed\u7684\u793a\u4f8b\u7f51\u9875\u8fdb\u884c\u67e5\u770b\u4e0e\u8c03\u8bd5\u3002 \u7ec4\u5408\u9009\u62e9\u5668 \u00b6 \u8003\u8651\u8fd9\u6837\u7684\u9700\u6c42\uff1a\u53ea\u5e0c\u671b theme \u7c7b\u4e0b\u7684\u94fe\u63a5\u53d8\u4e3a\u7ea2\u8272\uff0c\u5176\u4f59\u4f4d\u7f6e\u7684\u94fe\u63a5\u4ecd\u9700\u4f7f\u7528\u9ed8\u8ba4\u6837\u5f0f\u3002\u8fd9\u5c31\u9700\u8981\u7528\u5230 CSS \u7ec4\u5408\u9009\u62e9\u5668\u7684\u8bed\u6cd5\u4e86\u3002\u5982\u4e0b\u6240\u793a\uff1a 1 2 3 . theme a { color : red ; } .theme \u662f\u7c7b\u9009\u62e9\u5668\uff0c a \u662f\u5143\u7d20\u9009\u62e9\u5668\uff0c\u5b83\u4eec\u4e4b\u95f4\u901a\u8fc7\u7a7a\u683c\u5206\u9694\uff0c\u8868\u793a\u53ea\u5bf9 .theme \u7c7b\u7684 <a> \u5143\u7d20\u540e\u4ee3\u6709\u6548\u3002 \u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 <!DOCTYPE html> < html lang = \"zh\" > < head > < meta charset = \"utf-8\" > < style > . theme { color : white ; background : darkred ; padding : 20 px ; margin : 10 px ; } . theme a { color : red ; } </ style > < title > CSS \u793a\u4f8b </ title > </ head > < body > < div class = \"theme\" > < p > \u7ea2\u8272\u4e3b\u9898\uff0c < a href = \"https://www.baidu.com\" > \u7ea2\u8272\u94fe\u63a5 </ a ></ p > </ div > < p >< a href = \"https://www.baidu.com\" > \u666e\u901a\u94fe\u63a5 </ a ></ p > </ body > </ html > \u4f60\u53ef\u4ee5\u70b9\u51fb \u94fe\u63a5 \u5728\u6d4f\u89c8\u5668\u4e2d\u9884\u89c8\u8fd9\u6bb5\u4ee3\u7801\u3002 \u4e0d\u540c\u7684\u7ec4\u5408\u65b9\u5f0f \u5728 CSS3 \u4e2d\u4e00\u5171\u5305\u542b\u4e86\u56db\u79cd\u7ec4\u5408\u65b9\u5f0f\uff1a \u540e\u4ee3\u9009\u62e9\u5668(\u4ee5\u7a7a\u683c\u5206\u9694) \u5b50\u5143\u7d20\u9009\u62e9\u5668(\u4ee5\u5927\u4e8e\u53f7 > \u5206\u9694\uff09 \u76f8\u90bb\u5144\u5f1f\u9009\u62e9\u5668\uff08\u4ee5\u52a0\u53f7 + \u5206\u9694\uff09 \u666e\u901a\u5144\u5f1f\u9009\u62e9\u5668\uff08\u4ee5\u6ce2\u6d6a\u53f7 ~ \u5206\u9694\uff09 \u53c2\u8003\u624b\u518c CSS \u9009\u62e9\u5668\u6709\u591a\u79cd\u591a\u6837\u7684\u8868\u8fbe\u5f62\u5f0f\uff0c\u4f60\u53ef\u4ee5\u53c2\u9605 CSS \u9009\u62e9\u5668\u53c2\u8003\u624b\u518c \u6765\u627e\u5230\u4f60\u6240\u9700\u8981\u7684\u9009\u62e9\u5668\u8bed\u6cd5\u3002 \u76d2\u6a21\u578b \u00b6 \u76d2\u6a21\u578b\u5c06\u6bcf\u4e2a HTML \u5143\u7d20\u89c6\u4e3a\u4e00\u4e2a\u65b9\u5f62\u76d2\u5b50\uff0c\u5173\u6ce8\u7684\u6838\u5fc3\u5728\u4e8e\u5185\u5916\u8fb9\u8ddd\u4ee5\u53ca\u8fb9\u6846\u7684\u6837\u5f0f\u3002\u5728\u6392\u7248\u5e03\u5c40\u65f6\uff0c\u6211\u4eec\u9700\u8981\u5408\u7406\u8bbe\u7f6e padding \u548c margin \u7684\u6570\u503c\uff0c\u624d\u80fd\u8ba9\u81ea\u5df1\u7684\u7f51\u9875\u5448\u73b0\u51fa\u6700\u8212\u9002\u7684\u5e03\u5c40\u3002 \u7f51\u9875\u5e03\u5c40 \u00b6 \u7f51\u9875\u7684\u5e03\u5c40\u901a\u5e38\u6709\u4e00\u4e9b\u56fa\u5b9a\u7684\u6a21\u5f0f\u3002\u6211\u4eec\u4e00\u822c\u4f1a\u5c06\u5404\u4e2a\u533a\u57df\u7528 <div> \u5143\u7d20\u7ec4\u5408\u8d77\u6765\uff0c\u7136\u540e\u8003\u8651\u8fd9\u4e9b\u533a\u57df\u7684\u6392\u7248\u5e03\u5c40\u3002 \u4e86\u89e3\u539f\u7406\u5373\u53ef \u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u5f88\u5c11\u4f1a\u5b8c\u5168\u624b\u5199\u7f51\u9875\u7684\u5e03\u5c40\uff0c\u56e0\u4e3a\u8bb8\u591a\u524d\u7aef\u6837\u5f0f\u5e93\u80fd\u591f\u5e2e\u6211\u4eec\u5b9e\u73b0\u8fd9\u4e9b\u4e8b\u60c5\uff0c\u4e14\u901a\u5e38\u6bd4\u6211\u4eec\u624b\u5199\u7684\u505a\u5f97\u66f4\u597d\u3002 \u5de6\u53f3\u5e03\u5c40 \u00b6 \u7f51\u9875\u7684\u6392\u5e03\u903b\u8f91\u4e00\u822c\u90fd\u662f\u81ea\u4e0a\u800c\u4e0b\u7684\u3002\u5de6\u53f3\u5e03\u5c40\u7684\u533a\u57df\u901a\u5e38\u9700\u8981\u7ec4\u5408\u540e\u5d4c\u5957\u5728\u4e00\u884c\u4e2d\uff0c\u4e14\u9700\u8981\u5229\u7528\u6d6e\u52a8\uff08 float \uff09\u5c5e\u6027\uff0c\u5982\u4e0b\u6240\u793a\uff1a 1 2 3 4 5 6 7 < div > \u4e0a\u9762\u7684\u5185\u5bb9 </ div > < div > < div style = \"width: 25%; float: left;\" > \u5de6 </ div > < div style = \"width: 50%; float: left;\" > \u4e2d </ div > < div style = \"width: 25%; float: right;\" > \u53f3 </ div > </ div > < div > \u4e0b\u9762\u7684\u5185\u5bb9 </ div > \u5185\u5d4c\u6837\u5f0f \u4f60\u53ef\u80fd\u6ce8\u610f\u5230\u4e86\uff0c\u4e0a\u9762\u7684\u793a\u4f8b\u4ee3\u7801\u4e2d\uff0c\u5de6\u8fb9\u533a\u57df\u548c\u53f3\u8fb9\u533a\u57df\u7684 <div> \u5143\u7d20\u4e0a\u90fd\u6dfb\u52a0\u4e86 width \u3001 float \u7b49\u6837\u5f0f\u5c5e\u6027\u3002 \u8fd9\u662f\u4e00\u79cd\u901a\u8fc7\u5185\u5d4c\u4e8e\u9875\u9762\u5143\u7d20\u5f15\u5165 CSS \u7684\u65b9\u5f0f\uff0c\u53ef\u4ee5\u201c\u4e34\u65f6\u201d\u201c\u4e00\u6b21\u6027\u201d\u5730\u4e3a\u4e00\u4e9b\u5143\u7d20\u6dfb\u52a0\u6837\u5f0f\u3002 \u56fa\u5b9a\u5e03\u5c40 \u00b6 \u6211\u4eec\u6709\u65f6\u4f1a\u5e0c\u671b\u4e00\u4e9b\u533a\u57df\u56fa\u5b9a\u5728\u7f51\u9875\u7684\u67d0\u4e2a\u4f4d\u7f6e\uff0c\u4f8b\u5982\u6211\u4eec\u4f1a\u5e0c\u671b\u5bfc\u822a\u680f\u56fa\u5b9a\u5728\u9875\u9762\u9876\u90e8\uff0c\u4e0d\u968f\u9875\u9762\u6eda\u52a8\u800c\u6539\u53d8\u3002\u8fd9\u65f6\uff0c\u6211\u4eec\u53ea\u9700\u4f7f\u7528 position: fixed \u5c5e\u6027\uff0c\u5982\u4e0b\u6240\u793a\uff1a 1 2 3 4 5 . top { position : fixed ; top : 0 ; left : 0 ; } \u5373\u53ef\u8ba9 top \u7c7b\u7684\u5143\u7d20\u5b9e\u73b0\u56fa\u5b9a\u9876\u90e8\u7684\u6548\u679c\u3002 \u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 <!DOCTYPE html> < html lang = \"zh\" > < head > < meta charset = \"utf-8\" > < style > body { margin : 0 ; } . top { position : fixed ; top : 0 ; left : 0 ; height : 50 px ; width : 100 % ; background : red ; } . main { margin-top : 50 px ; } . left { width : 25 % ; background : lightgray ; height : 200 px ; float : left ; } . center { width : 50 % ; background : lightgreen ; height : 2000 px ; float : left ; } . right { width : 25 % ; background : lightgray ; height : 200 px ; float : right ; } . footer { height : 50 px ; width : 100 % ; background : green ; } . row : after { content : \"\" ; display : table ; clear : both ; } </ style > < title > CSS \u793a\u4f8b </ title > </ head > < body > < div class = \"top\" ></ div > < div class = \"main\" > < div class = \"row\" > < div class = \"left\" ></ div > < div class = \"center\" ></ div > < div class = \"right\" ></ div > </ div > < div class = \"footer\" ></ div > </ div > </ body > </ html > \u4f60\u53ef\u4ee5\u70b9\u51fb \u94fe\u63a5 \u5728\u6d4f\u89c8\u5668\u4e2d\u9884\u89c8\u8fd9\u6bb5\u4ee3\u7801\u3002 \u540e\u7eed\u62d3\u5c55 \u00b6 \u73b0\u5728\uff0c\u4f60\u5df2\u7ecf\u5b66\u4f1a\u4e86\u901a\u8fc7 CSS \u63a7\u5236\u7f51\u9875\u7684\u6837\u5f0f\u3002\u63a5\u4e0b\u6765\uff0c\u4f60\u53ef\u4ee5\u4e3a\u4f60\u7684\u7f51\u9875\u8d4b\u4e88\u884c\u4e3a\uff0c\u8fd9\u5c31\u9700\u8981 JavaScript \u7684\u76f8\u5173\u77e5\u8bc6\u3002 \u5f53\u7136\uff0c\u4f60\u53ef\u80fd\u4f1a\u4e0d\u6ee1\u4e8e\u624b\u5199 CSS \u6837\u5f0f\uff0c\u60f3\u8981\u63a2\u7d22\u4e00\u4e9b\u524d\u7aef\u6837\u5f0f\u5e93\uff0c\u56e0\u6b64\u4f60\u4e5f\u53ef\u4ee5\u7ee7\u7eed\u5f80\u4e0b\u9605\u8bfb\u524d\u7aef\u6837\u5f0f\u5e93\u7684\u6709\u5173\u6587\u6863\u3002 \u540e\u7eed\u53ef\u4ee5\u9605\u8bfb\u7684\u6587\u6863\u6709\uff1a JavaScript \u8bed\u8a00\u57fa\u7840 /languages/javascript Bootstrap \u7b80\u4ecb /languages/css/bootstrap MDUI \u7b80\u4ecb /languages/css/mdui \u8d44\u6e90\u94fe\u63a5 \u00b6 w3school CSS \u6559\u7a0b https://www.w3school.com.cn/css/index.asp \u83dc\u9e1f\u6559\u7a0b CSS \u6559\u7a0b https://www.runoob.com/css/css-tutorial.html","title":"CSS \u8bed\u8a00\u57fa\u7840"},{"location":"languages/css/#css","text":"","title":"CSS \u8bed\u8a00\u57fa\u7840"},{"location":"languages/css/#_1","text":"CSS \u7684\u5168\u79f0\u4e3a C ascading S tyle S heets\uff08\u5c42\u53e0\u6837\u5f0f\u8868\uff09\uff0c\u53ef\u4ee5\u7cfb\u7edf\u5730\u63cf\u8ff0\u7f51\u9875\u5185\u5bb9\u7684\u5e03\u5c40\u4e0e\u9762\u8c8c\u3002 \u4f60\u53ef\u4ee5\u70b9\u51fb \u94fe\u63a5 \u6765\u4f53\u4f1a\u4e00\u4e0b\u6837\u5f0f\u8868\u7684\u610f\u4e49\u3002\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u63cf\u8ff0\u7f51\u9875\u5185\u5bb9\u7684 HTML \u6587\u672c\u53ea\u6709\u4e00\u4efd\uff0c\u4f46\u901a\u8fc7\u6539\u53d8\u6837\u5f0f\u8868\uff0c\u7f51\u9875\u7684\u5e03\u5c40\u5c31\u6709\u4e86\u5929\u7ffb\u5730\u8986\u7684\u53d8\u5316\u3002 \u5f15\u5165 CSS \u5728 HTML \u4e2d\u5f15\u5165\u6837\u5f0f\u7684\u65b9\u5f0f\u901a\u5e38\u6709\u4e09\u79cd\uff1a \u5185\u5d4c\u4e8e\u9875\u9762\u5143\u7d20\u4e2d\uff1b \u901a\u8fc7 <style> \u5143\u7d20\u5d4c\u5165\u7f51\u9875\uff1b \u901a\u8fc7\u5916\u90e8\u94fe\u63a5\u5f15\u7528\u3002 \u5728\u8fd9\u4efd\u6587\u6863\u4e2d\uff0c\u51fa\u4e8e\u65b9\u4fbf\u8003\u8651\uff0c\u6211\u4eec\u91c7\u7528\u901a\u8fc7 <style> \u5143\u7d20\u5d4c\u5165\u7f51\u9875\u7684\u5f62\u5f0f\u8fdb\u884c\u8bb2\u89e3\u3002 \u5e38\u89c1\u7684\u6837\u5f0f\u6709\u989c\u8272\u3001\u5b57\u4f53\u3001\u8fb9\u8ddd\u3001\u5bf9\u9f50\u3001\u80cc\u666f\u3001\u8fb9\u6846\u7b49\u3002 \u6211\u4eec\u5148\u56de\u5230\u719f\u6089\u7684 HTML\uff1a 1 2 3 4 5 6 7 8 < body > < h1 > \u8fd9\u662f\u6807\u9898 </ h1 > < p > \u8fd9\u662f\u6bb5\u843d\u3002\u548c\u6211\u4e00\u8d77\u8bfb\uff1a </ p > < p > \u4f60\u2014\u2014\u597d\u2014\u2014\u4e16\u2014\u2014\u754c\u2014\u2014 </ p > < p > < a href = \"https://www.baidu.com\" > \u524d\u5f80\u767e\u5ea6 </ a > </ p > </ body > \u8003\u8651\u8fd9\u6837\u4e00\u4e2a\u9700\u6c42\uff1a \u5c06\u4e3b\u4f53\uff08 <body> \uff09\u80cc\u666f\u8bbe\u4e3a\u6de1\u84dd\u8272\uff08 lightblue \uff09\uff1b \u5c06\u6807\u9898\uff08 <h1> \uff09\u8bbe\u4e3a\u767d\u8272\u5c45\u4e2d\uff1b \u5c06\u6b63\u6587\uff08 <p> \uff09\u5b57\u53f7\u8bbe\u4e3a 20px \uff1b \u5c06\u94fe\u63a5\uff08 <a> \uff09\u989c\u8272\u8bbe\u4e3a\u7ea2\u8272\uff08 red \uff09\u3002 \u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e9b\u6837\u5f0f\u5c42\u9762\u7684\u9700\u6c42\uff0c\u6837\u5f0f\u8868\u8bde\u751f\u4e86\u3002\u6211\u4eec\u5148\u770b\u793a\u4f8b\uff0c\u518d\u6765\u5206\u6790 CSS \u7684\u8bed\u6cd5\u683c\u5f0f\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 body { background : lightblue ; } h1 { color : white ; text-align : center ; } p { font-size : 20 px ; } a { color : red ; } \u6211\u76f8\u4fe1\uff0c\u5f53\u4f60\u770b\u5230\u8fd9\u6837\u7684\u6587\u672c\u65f6\uff0c\u5df2\u7ecf\u80fd\u51ed\u501f\u76f4\u89c9\u7406\u89e3\u5b83\u7684\u542b\u4e49\u4e86\u3002\u4f8b\u5982\uff0c body { background: lightblue; } \u7684\u542b\u4e49\u5c31\u662f\u5c06\u6240\u6709 <body> \u5143\u7d20\u7684 background \u8bbe\u7f6e\u4e3a lightblue \u3002 CSS \u7684\u8bed\u6cd5\u683c\u5f0f\u975e\u5e38\u7b80\u5355\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u4e5f\u6b63\u5f0f\u8fd9\u6837\u4e00\u7cfb\u5217\u7b80\u5355\u7684\u89c4\u5219\u63cf\u8ff0\uff0c\u76f8\u4e92\u7ec4\u5408\u4e4b\u540e\u5c31\u80fd\u63cf\u8ff0\u4e30\u5bcc\u7684\u7f51\u9875\u6392\u7248\u6837\u5f0f\u3002 \u6211\u4eec\u518d\u6765\u770b\u4e00\u4e0b\uff0c\u5c06 CSS \u5f15\u5165 HTML \u540e\u7684\u4e00\u4e2a\u5b8c\u6574\u7f51\u9875\u6587\u4ef6\u5c06\u4f1a\u5448\u73b0\u600e\u6837\u7684\u7ed3\u6784\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 <!DOCTYPE html> < html lang = \"zh\" > < head > < meta charset = \"utf-8\" > < style > body { background : lightblue ; } h1 { color : white ; text-align : center ; } p { font-size : 20 px ; } a { color : red ; } </ style > < title > CSS \u793a\u4f8b </ title > </ head > < body > < h1 > \u8fd9\u662f\u6807\u9898 </ h1 > < p > \u8fd9\u662f\u6bb5\u843d\u3002\u548c\u6211\u4e00\u8d77\u8bfb\uff1a </ p > < p > \u4f60\u2014\u2014\u597d\u2014\u2014\u4e16\u2014\u2014\u754c\u2014\u2014 </ p > < p > < a href = \"https://www.baidu.com\" > \u524d\u5f80\u767e\u5ea6 </ a > </ p > </ body > </ html > \u4f60\u53ef\u4ee5\u70b9\u51fb\u94fe\u63a5 \u5f15\u5165 CSS \u524d \u4ee5\u53ca \u5f15\u5165 CSS \u540e \u6765\u611f\u53d7 CSS \u7684\u4f5c\u7528\u3002","title":"\u6837\u5f0f\u4e0e\u6837\u5f0f\u8868"},{"location":"languages/css/#_2","text":"\u4f7f\u7528\u4e0a\u8ff0\u6837\u5f0f\u8868\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u7f51\u9875\u4e2d\u6307\u5b9a\u7c7b\u578b\u7684\u5143\u7d20\u8bbe\u7f6e\u7edf\u4e00\u7684\u6837\u5f0f\u3002\u7136\u800c\uff0c\u6211\u4eec\u6709\u65f6\u4f1a\u5e0c\u671b\u53ea\u5bf9\u67d0\u4e00\u90e8\u5206\u5143\u7d20\u8bbe\u5b9a\u6837\u5f0f\uff0c\u8fd9\u65f6\u5c31\u8981\u5f15\u5165 \u7c7b \u7684\u6982\u5ff5\u4e86\u3002 \u7c7b\u7684 CSS \u9009\u62e9\u8bed\u6cd5\u4e0e\u5143\u7d20\u7684\u7c7b\u4f3c\uff0c\u53ea\u9700\u5728\u7c7b\u540d\u524d\u52a0\u4e0a\u4e00\u4e2a . \u5373\u53ef\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u5e0c\u671b\u5b9a\u4e49\u4e00\u4e2a\u7c7b red \uff0c\u5b83\u7684\u80cc\u666f\u8272\u662f\u7ea2\u8272\uff08 red \uff09\uff0c\u6587\u672c\u989c\u8272\u4e3a\u767d\u8272\uff0c\u4e14\u5177\u6709 10px \u7684\u5185\u8fb9\u8ddd\uff08 padding \uff09\u548c 5px \u7684\u5916\u8fb9\u8ddd\uff08 margin \uff09\u3002\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u5199\uff1a 1 2 3 4 5 6 . red { background : red ; color : white ; padding : 10 px ; margin : 5 px ; } \u5728 HTML \u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u7ed9\u4e00\u4e2a\u5143\u7d20\u8d4b\u4e88 class=\"red\" \u7684\u5c5e\u6027\uff0c\u8fd9\u4e2a\u5143\u7d20\u5c31\u5177\u5907\u4e86\u6211\u4eec\u6240\u5b9a\u4e49\u7684 red \u7c7b\u7684\u6837\u5f0f\uff1a 1 2 3 < div class = \"red\" > < p > \u7ea2\u8272\u4e3b\u9898 </ p > </ div > \u4f7f\u7528 <div> \u6dfb\u52a0\u5206\u7ec4 \u5f53\u6211\u4eec\u60f3\u8981\u5c06\u4e00\u7cfb\u5217\u5143\u7d20\u89c6\u4e3a\u4e00\u4e2a\u6574\u4f53\u8fdb\u884c\u5e03\u5c40\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u91c7\u7528 <div> \u5143\u7d20\u521b\u5efa\u4e00\u4e2a\u5206\u7ec4\uff0c\u5bf9\u8fd9\u4e2a\u5206\u7ec4\u8bbe\u7f6e\u6837\u5f0f\u6216\u8fdb\u884c\u6392\u7248\u3002 \u6211\u4eec\u8fd8\u53ef\u4ee5\u4ee5\u6b64\u7c7b\u63a8\uff0c\u521b\u5efa blue \u3001 green \u7c7b\u3002\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 <!DOCTYPE html> < html lang = \"zh\" > < head > < meta charset = \"utf-8\" > < style > . red { background : red ; color : white ; padding : 10 px ; margin : 5 px ; } . blue { background : blue ; color : white ; padding : 10 px ; margin : 5 px ; } . green { background : green ; color : white ; padding : 10 px ; margin : 5 px ; } </ style > < title > CSS \u793a\u4f8b </ title > </ head > < body > < div class = \"red\" > < p > \u7ea2\u8272\u4e3b\u9898 </ p > </ div > < div class = \"blue\" > < p > \u84dd\u8272\u4e3b\u9898 </ p > </ div > < div class = \"green\" > < p > \u7eff\u8272\u4e3b\u9898 </ p > </ div > </ body > </ html > \u4f60\u53ef\u4ee5\u70b9\u51fb \u94fe\u63a5 \u5728\u6d4f\u89c8\u5668\u4e2d\u9884\u89c8\u8fd9\u6bb5\u4ee3\u7801\u3002 \u89c2\u5bdf\u4e0a\u8ff0\u4ee3\u7801\uff0c\u6211\u4eec\u53d1\u73b0\uff0c red \u3001 blue \u3001 green \u7c7b\u7684 CSS \u5b9a\u4e49\u4e2d\u90fd\u6709\u4e09\u6761\u91cd\u590d\u7684\u5c5e\u6027\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u516c\u5171\u90e8\u5206\u63d0\u53d6\u4e3a\u4e00\u4e2a\u516c\u5171\u7684\u7c7b theme \uff0c\u5e76\u7ed9 HTML \u4e2d\u7684\u6bcf\u4e2a <div> \u5143\u7d20\u7684 class \u5c5e\u6027\u90fd\u989d\u5916\u6dfb\u52a0\u4e00\u4e2a theme \u7c7b\uff0c\u5982\u4e0b\u6240\u793a\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 <!DOCTYPE html> < html lang = \"zh\" > < head > < meta charset = \"utf-8\" > < style > . theme { color : white ; padding : 10 px ; margin : 5 px ; } . red { background : red ; } . blue { background : blue ; } . green { background : green ; } </ style > < title > CSS \u793a\u4f8b </ title > </ head > < body > < div class = \"red theme\" > < p > \u7ea2\u8272\u4e3b\u9898 </ p > </ div > < div class = \"blue theme\" > < p > \u84dd\u8272\u4e3b\u9898 </ p > </ div > < div class = \"green theme\" > < p > \u7eff\u8272\u4e3b\u9898 </ p > </ div > </ body > </ html > \u8fd9\u6837\uff0c\u6211\u4eec\u7684 CSS \u4ee3\u7801\u4e5f\u53d8\u5f97\u66f4\u52a0\u6e05\u6670\u4e0e\u7b80\u6d01\u3002 \u7528\u597d\u5f00\u53d1\u8005\u5de5\u5177 Firefox\u3001Chrome\u3001Edge\u3001Safari \u7b49\u6d4f\u89c8\u5668\u5747\u4e3a\u5f00\u53d1\u8005\u63d0\u4f9b\u4e86\u7528\u4e8e\u67e5\u770b\u548c\u8c03\u8bd5\u7f51\u9875\u7684\u5de5\u5177\u3002\u6253\u5f00\u5f00\u53d1\u8005\u5de5\u5177\u7684\u5feb\u6377\u952e\u901a\u5e38\u4e3a F12\uff0c\u5f53\u7136\u8fd9\u4e5f\u53ef\u80fd\u56e0\u4f60\u7684\u6d4f\u89c8\u5668\u548c\u64cd\u4f5c\u7cfb\u7edf\u800c\u5f02\u3002\u4f60\u53ef\u4ee5\u501f\u52a9\u641c\u7d22\u5f15\u64ce\u8fdb\u4e00\u6b65\u4e86\u89e3\u3002 \u4ee5\u4e0a\u8ff0\u793a\u4f8b\u4ee3\u7801\u7684\u7f51\u9875\u4e3a\u4f8b\uff0c\u70b9\u51fb \u94fe\u63a5 \uff0c\u5728\u6253\u5f00\u7684\u9875\u9762\u4e2d\u542f\u52a8\u5f00\u53d1\u8005\u5de5\u5177\uff0c\u52a8\u624b\u67e5\u770b\u4e00\u4e0b\u5143\u7d20\u7684\u7ec4\u7ec7\u65b9\u5f0f\u3001\u5143\u7d20\u7684\u6837\u5f0f\u4ee5\u53ca\u5b83\u4eec\u6240\u5c5e\u7684\u7c7b\u5427\uff01 \u4ee5\u4e0b\u662f\u4f7f\u7528 Firefox \u6d4f\u89c8\u5668\u8c03\u8bd5\u4e0a\u8ff0\u793a\u4f8b\u4ee3\u7801\u7f51\u9875\u7684\u622a\u5c4f\u3002 \u4f60\u4e5f\u53ef\u4ee5\u5229\u7528\u540c\u6837\u7684\u65b9\u5f0f\u5bf9\u540e\u7eed\u7684\u793a\u4f8b\u7f51\u9875\u8fdb\u884c\u67e5\u770b\u4e0e\u8c03\u8bd5\u3002","title":"\u7c7b"},{"location":"languages/css/#_3","text":"\u8003\u8651\u8fd9\u6837\u7684\u9700\u6c42\uff1a\u53ea\u5e0c\u671b theme \u7c7b\u4e0b\u7684\u94fe\u63a5\u53d8\u4e3a\u7ea2\u8272\uff0c\u5176\u4f59\u4f4d\u7f6e\u7684\u94fe\u63a5\u4ecd\u9700\u4f7f\u7528\u9ed8\u8ba4\u6837\u5f0f\u3002\u8fd9\u5c31\u9700\u8981\u7528\u5230 CSS \u7ec4\u5408\u9009\u62e9\u5668\u7684\u8bed\u6cd5\u4e86\u3002\u5982\u4e0b\u6240\u793a\uff1a 1 2 3 . theme a { color : red ; } .theme \u662f\u7c7b\u9009\u62e9\u5668\uff0c a \u662f\u5143\u7d20\u9009\u62e9\u5668\uff0c\u5b83\u4eec\u4e4b\u95f4\u901a\u8fc7\u7a7a\u683c\u5206\u9694\uff0c\u8868\u793a\u53ea\u5bf9 .theme \u7c7b\u7684 <a> \u5143\u7d20\u540e\u4ee3\u6709\u6548\u3002 \u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 <!DOCTYPE html> < html lang = \"zh\" > < head > < meta charset = \"utf-8\" > < style > . theme { color : white ; background : darkred ; padding : 20 px ; margin : 10 px ; } . theme a { color : red ; } </ style > < title > CSS \u793a\u4f8b </ title > </ head > < body > < div class = \"theme\" > < p > \u7ea2\u8272\u4e3b\u9898\uff0c < a href = \"https://www.baidu.com\" > \u7ea2\u8272\u94fe\u63a5 </ a ></ p > </ div > < p >< a href = \"https://www.baidu.com\" > \u666e\u901a\u94fe\u63a5 </ a ></ p > </ body > </ html > \u4f60\u53ef\u4ee5\u70b9\u51fb \u94fe\u63a5 \u5728\u6d4f\u89c8\u5668\u4e2d\u9884\u89c8\u8fd9\u6bb5\u4ee3\u7801\u3002 \u4e0d\u540c\u7684\u7ec4\u5408\u65b9\u5f0f \u5728 CSS3 \u4e2d\u4e00\u5171\u5305\u542b\u4e86\u56db\u79cd\u7ec4\u5408\u65b9\u5f0f\uff1a \u540e\u4ee3\u9009\u62e9\u5668(\u4ee5\u7a7a\u683c\u5206\u9694) \u5b50\u5143\u7d20\u9009\u62e9\u5668(\u4ee5\u5927\u4e8e\u53f7 > \u5206\u9694\uff09 \u76f8\u90bb\u5144\u5f1f\u9009\u62e9\u5668\uff08\u4ee5\u52a0\u53f7 + \u5206\u9694\uff09 \u666e\u901a\u5144\u5f1f\u9009\u62e9\u5668\uff08\u4ee5\u6ce2\u6d6a\u53f7 ~ \u5206\u9694\uff09 \u53c2\u8003\u624b\u518c CSS \u9009\u62e9\u5668\u6709\u591a\u79cd\u591a\u6837\u7684\u8868\u8fbe\u5f62\u5f0f\uff0c\u4f60\u53ef\u4ee5\u53c2\u9605 CSS \u9009\u62e9\u5668\u53c2\u8003\u624b\u518c \u6765\u627e\u5230\u4f60\u6240\u9700\u8981\u7684\u9009\u62e9\u5668\u8bed\u6cd5\u3002","title":"\u7ec4\u5408\u9009\u62e9\u5668"},{"location":"languages/css/#_4","text":"\u76d2\u6a21\u578b\u5c06\u6bcf\u4e2a HTML \u5143\u7d20\u89c6\u4e3a\u4e00\u4e2a\u65b9\u5f62\u76d2\u5b50\uff0c\u5173\u6ce8\u7684\u6838\u5fc3\u5728\u4e8e\u5185\u5916\u8fb9\u8ddd\u4ee5\u53ca\u8fb9\u6846\u7684\u6837\u5f0f\u3002\u5728\u6392\u7248\u5e03\u5c40\u65f6\uff0c\u6211\u4eec\u9700\u8981\u5408\u7406\u8bbe\u7f6e padding \u548c margin \u7684\u6570\u503c\uff0c\u624d\u80fd\u8ba9\u81ea\u5df1\u7684\u7f51\u9875\u5448\u73b0\u51fa\u6700\u8212\u9002\u7684\u5e03\u5c40\u3002","title":"\u76d2\u6a21\u578b"},{"location":"languages/css/#_5","text":"\u7f51\u9875\u7684\u5e03\u5c40\u901a\u5e38\u6709\u4e00\u4e9b\u56fa\u5b9a\u7684\u6a21\u5f0f\u3002\u6211\u4eec\u4e00\u822c\u4f1a\u5c06\u5404\u4e2a\u533a\u57df\u7528 <div> \u5143\u7d20\u7ec4\u5408\u8d77\u6765\uff0c\u7136\u540e\u8003\u8651\u8fd9\u4e9b\u533a\u57df\u7684\u6392\u7248\u5e03\u5c40\u3002 \u4e86\u89e3\u539f\u7406\u5373\u53ef \u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u5f88\u5c11\u4f1a\u5b8c\u5168\u624b\u5199\u7f51\u9875\u7684\u5e03\u5c40\uff0c\u56e0\u4e3a\u8bb8\u591a\u524d\u7aef\u6837\u5f0f\u5e93\u80fd\u591f\u5e2e\u6211\u4eec\u5b9e\u73b0\u8fd9\u4e9b\u4e8b\u60c5\uff0c\u4e14\u901a\u5e38\u6bd4\u6211\u4eec\u624b\u5199\u7684\u505a\u5f97\u66f4\u597d\u3002","title":"\u7f51\u9875\u5e03\u5c40"},{"location":"languages/css/#_6","text":"\u7f51\u9875\u7684\u6392\u5e03\u903b\u8f91\u4e00\u822c\u90fd\u662f\u81ea\u4e0a\u800c\u4e0b\u7684\u3002\u5de6\u53f3\u5e03\u5c40\u7684\u533a\u57df\u901a\u5e38\u9700\u8981\u7ec4\u5408\u540e\u5d4c\u5957\u5728\u4e00\u884c\u4e2d\uff0c\u4e14\u9700\u8981\u5229\u7528\u6d6e\u52a8\uff08 float \uff09\u5c5e\u6027\uff0c\u5982\u4e0b\u6240\u793a\uff1a 1 2 3 4 5 6 7 < div > \u4e0a\u9762\u7684\u5185\u5bb9 </ div > < div > < div style = \"width: 25%; float: left;\" > \u5de6 </ div > < div style = \"width: 50%; float: left;\" > \u4e2d </ div > < div style = \"width: 25%; float: right;\" > \u53f3 </ div > </ div > < div > \u4e0b\u9762\u7684\u5185\u5bb9 </ div > \u5185\u5d4c\u6837\u5f0f \u4f60\u53ef\u80fd\u6ce8\u610f\u5230\u4e86\uff0c\u4e0a\u9762\u7684\u793a\u4f8b\u4ee3\u7801\u4e2d\uff0c\u5de6\u8fb9\u533a\u57df\u548c\u53f3\u8fb9\u533a\u57df\u7684 <div> \u5143\u7d20\u4e0a\u90fd\u6dfb\u52a0\u4e86 width \u3001 float \u7b49\u6837\u5f0f\u5c5e\u6027\u3002 \u8fd9\u662f\u4e00\u79cd\u901a\u8fc7\u5185\u5d4c\u4e8e\u9875\u9762\u5143\u7d20\u5f15\u5165 CSS \u7684\u65b9\u5f0f\uff0c\u53ef\u4ee5\u201c\u4e34\u65f6\u201d\u201c\u4e00\u6b21\u6027\u201d\u5730\u4e3a\u4e00\u4e9b\u5143\u7d20\u6dfb\u52a0\u6837\u5f0f\u3002","title":"\u5de6\u53f3\u5e03\u5c40"},{"location":"languages/css/#_7","text":"\u6211\u4eec\u6709\u65f6\u4f1a\u5e0c\u671b\u4e00\u4e9b\u533a\u57df\u56fa\u5b9a\u5728\u7f51\u9875\u7684\u67d0\u4e2a\u4f4d\u7f6e\uff0c\u4f8b\u5982\u6211\u4eec\u4f1a\u5e0c\u671b\u5bfc\u822a\u680f\u56fa\u5b9a\u5728\u9875\u9762\u9876\u90e8\uff0c\u4e0d\u968f\u9875\u9762\u6eda\u52a8\u800c\u6539\u53d8\u3002\u8fd9\u65f6\uff0c\u6211\u4eec\u53ea\u9700\u4f7f\u7528 position: fixed \u5c5e\u6027\uff0c\u5982\u4e0b\u6240\u793a\uff1a 1 2 3 4 5 . top { position : fixed ; top : 0 ; left : 0 ; } \u5373\u53ef\u8ba9 top \u7c7b\u7684\u5143\u7d20\u5b9e\u73b0\u56fa\u5b9a\u9876\u90e8\u7684\u6548\u679c\u3002 \u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 <!DOCTYPE html> < html lang = \"zh\" > < head > < meta charset = \"utf-8\" > < style > body { margin : 0 ; } . top { position : fixed ; top : 0 ; left : 0 ; height : 50 px ; width : 100 % ; background : red ; } . main { margin-top : 50 px ; } . left { width : 25 % ; background : lightgray ; height : 200 px ; float : left ; } . center { width : 50 % ; background : lightgreen ; height : 2000 px ; float : left ; } . right { width : 25 % ; background : lightgray ; height : 200 px ; float : right ; } . footer { height : 50 px ; width : 100 % ; background : green ; } . row : after { content : \"\" ; display : table ; clear : both ; } </ style > < title > CSS \u793a\u4f8b </ title > </ head > < body > < div class = \"top\" ></ div > < div class = \"main\" > < div class = \"row\" > < div class = \"left\" ></ div > < div class = \"center\" ></ div > < div class = \"right\" ></ div > </ div > < div class = \"footer\" ></ div > </ div > </ body > </ html > \u4f60\u53ef\u4ee5\u70b9\u51fb \u94fe\u63a5 \u5728\u6d4f\u89c8\u5668\u4e2d\u9884\u89c8\u8fd9\u6bb5\u4ee3\u7801\u3002","title":"\u56fa\u5b9a\u5e03\u5c40"},{"location":"languages/css/#_8","text":"\u73b0\u5728\uff0c\u4f60\u5df2\u7ecf\u5b66\u4f1a\u4e86\u901a\u8fc7 CSS \u63a7\u5236\u7f51\u9875\u7684\u6837\u5f0f\u3002\u63a5\u4e0b\u6765\uff0c\u4f60\u53ef\u4ee5\u4e3a\u4f60\u7684\u7f51\u9875\u8d4b\u4e88\u884c\u4e3a\uff0c\u8fd9\u5c31\u9700\u8981 JavaScript \u7684\u76f8\u5173\u77e5\u8bc6\u3002 \u5f53\u7136\uff0c\u4f60\u53ef\u80fd\u4f1a\u4e0d\u6ee1\u4e8e\u624b\u5199 CSS \u6837\u5f0f\uff0c\u60f3\u8981\u63a2\u7d22\u4e00\u4e9b\u524d\u7aef\u6837\u5f0f\u5e93\uff0c\u56e0\u6b64\u4f60\u4e5f\u53ef\u4ee5\u7ee7\u7eed\u5f80\u4e0b\u9605\u8bfb\u524d\u7aef\u6837\u5f0f\u5e93\u7684\u6709\u5173\u6587\u6863\u3002 \u540e\u7eed\u53ef\u4ee5\u9605\u8bfb\u7684\u6587\u6863\u6709\uff1a JavaScript \u8bed\u8a00\u57fa\u7840 /languages/javascript Bootstrap \u7b80\u4ecb /languages/css/bootstrap MDUI \u7b80\u4ecb /languages/css/mdui","title":"\u540e\u7eed\u62d3\u5c55"},{"location":"languages/css/#_9","text":"w3school CSS \u6559\u7a0b https://www.w3school.com.cn/css/index.asp \u83dc\u9e1f\u6559\u7a0b CSS \u6559\u7a0b https://www.runoob.com/css/css-tutorial.html","title":"\u8d44\u6e90\u94fe\u63a5"},{"location":"languages/css/bootstrap/","text":"Bootstrap \u7b80\u4ecb \u00b6 \u7f16\u8f91\u8005\u62db\u52df \u6211\u4eec\u6b63\u5728\u5bfb\u627e\u8fd9\u4e00\u7bc7\u6587\u6863\u7684\u7f16\u8f91\u8005\u3002","title":"Bootstrap \u7b80\u4ecb"},{"location":"languages/css/bootstrap/#bootstrap","text":"\u7f16\u8f91\u8005\u62db\u52df \u6211\u4eec\u6b63\u5728\u5bfb\u627e\u8fd9\u4e00\u7bc7\u6587\u6863\u7684\u7f16\u8f91\u8005\u3002","title":"Bootstrap \u7b80\u4ecb"},{"location":"languages/css/mdui/","text":"MDUI \u7b80\u4ecb \u00b6 \u7f16\u8f91\u8005\u62db\u52df \u6211\u4eec\u6b63\u5728\u5bfb\u627e\u8fd9\u4e00\u7bc7\u6587\u6863\u7684\u7f16\u8f91\u8005\u3002","title":"MDUI \u7b80\u4ecb"},{"location":"languages/css/mdui/#mdui","text":"\u7f16\u8f91\u8005\u62db\u52df \u6211\u4eec\u6b63\u5728\u5bfb\u627e\u8fd9\u4e00\u7bc7\u6587\u6863\u7684\u7f16\u8f91\u8005\u3002","title":"MDUI \u7b80\u4ecb"},{"location":"languages/javascript/","text":"JavaScript \u8bed\u8a00\u57fa\u7840 \u00b6 \u524d\u7f6e\u77e5\u8bc6 \u00b6 \u5177\u6709 C/C++ \u8bed\u8a00\u57fa\u7840\uff0c\u80fd\u591f\u7f16\u5199\u57fa\u672c\u7684 C/C++ \u4ee3\u7801 \u5177\u6709\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u57fa\u7840\uff0c\u80fd\u591f\u7406\u89e3\u7c7b\u5c01\u88c5\u548c\u65b9\u6cd5\u91cd\u5199\uff08\u8bed\u8a00\u6700\u597d\u662f C++\uff09 \uff08\u5982\u679c\u9700\u8981\u5b66\u4e60 JavaScript \u5f02\u6b65\uff09\u80fd\u591f\u7406\u89e3\u57fa\u672c\u7684\u591a\u7ebf\u7a0b\u548c\u5f02\u6b65\uff0c\u7406\u89e3\u5f02\u6b65\u548c\u540c\u6b65\u7684\u5dee\u522b \uff08\u5982\u679c\u9700\u8981\u5b66\u4e60 JavaScript \u5f02\u6b65\uff09\u80fd\u591f\u7406\u89e3\u6808\u548c\u961f\u5217\u4e24\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u7406\u89e3\u51fd\u6570\u6808\u7684\u5de5\u4f5c\u673a\u5236 \u8fb9\u5b66\u8fb9\u505a \u9605\u8bfb\u8fd9\u7bc7\u6587\u6863\u7684\u65f6\u5019\uff0c\u7f16\u8005\u5efa\u8bae\u6309\u4e0b F12 \u952e\uff0c\u6253\u5f00\u6d4f\u89c8\u5668\u7684\u63a7\u5236\u53f0\uff0c\u628a\u7f16\u8005\u63d0\u4f9b\u7684\u793a\u4f8b\u4ee3\u7801\u5728\u63a7\u5236\u53f0\u91cc\u771f\u6b63\u8fd0\u884c\u4e00\u4e0b\uff0c\u76f8\u4fe1\u4f1a\u7ed9\u5e2e\u52a9\u4f60\u66f4\u597d\u7406\u89e3 JavaScript \u8bed\u8a00\u7684\u3002 \u540e\u7eed\u62d3\u5c55 \u00b6 JavaScript \u662f\u5e94\u7528\u76f8\u5f53\u5e7f\u6cdb\u7684\u4e00\u95e8\u811a\u672c\u8bed\u8a00\uff0c\u5927\u91cf\u7684 Web \u5e94\u7528\u6216\u8005\u79fb\u52a8\u7aef\u5e94\u7528\u4f9d\u9760 JavaScript \u4ee5\u53ca\u5176\u884d\u751f\u8bed\u8a00\u5f00\u53d1\u3002\u800c\u4e14\u4f5c\u4e3a\u201c\u524d\u7aef\u4e09\u4ef6\u5957\u201d\uff08\u6307 HTML\u3001CSS \u548c JavaScript\uff09\u4e4b\u4e00\uff0c\u5b66\u4e60 JavaScript \u5bf9\u7f16\u5199\u524d\u7aef\u5de5\u7a0b\u7684\u91cd\u8981\u6027\u4e0d\u8a00\u800c\u55bb\u3002 \u540e\u7eed\u53ef\u4ee5\u9605\u8bfb\u7684\u6587\u6863\u6709\uff1a TypeScript \u8bed\u8a00\u5165\u95e8 /languages/typescript \u53ef\u4ee5\u5e94\u7528 JavaScript \u8bed\u8a00\u76f8\u5173\u77e5\u8bc6\u7684\u8bfe\u7a0b\uff1a \u7a0b\u5e8f\u8bbe\u8ba1\u8bad\u7ec3 \u8f6f\u4ef6\u5de5\u7a0b \u8d44\u6e90\u94fe\u63a5 \u00b6 \u5ed6\u96ea\u5cf0 JavaScript \u8bed\u8a00\u6559\u7a0b https://www.liaoxuefeng.com/wiki/1022910821149312 Mozilla JavaScript \u8bed\u8a00\u6559\u7a0b https://developer.mozilla.org/zh-CN/docs/Web/JavaScript JSFuck \u5b98\u65b9\u7f51\u7ad9 http://www.jsfuck.com/","title":"JavaScript \u8bed\u8a00\u57fa\u7840"},{"location":"languages/javascript/#javascript","text":"","title":"JavaScript \u8bed\u8a00\u57fa\u7840"},{"location":"languages/javascript/#_1","text":"\u5177\u6709 C/C++ \u8bed\u8a00\u57fa\u7840\uff0c\u80fd\u591f\u7f16\u5199\u57fa\u672c\u7684 C/C++ \u4ee3\u7801 \u5177\u6709\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u57fa\u7840\uff0c\u80fd\u591f\u7406\u89e3\u7c7b\u5c01\u88c5\u548c\u65b9\u6cd5\u91cd\u5199\uff08\u8bed\u8a00\u6700\u597d\u662f C++\uff09 \uff08\u5982\u679c\u9700\u8981\u5b66\u4e60 JavaScript \u5f02\u6b65\uff09\u80fd\u591f\u7406\u89e3\u57fa\u672c\u7684\u591a\u7ebf\u7a0b\u548c\u5f02\u6b65\uff0c\u7406\u89e3\u5f02\u6b65\u548c\u540c\u6b65\u7684\u5dee\u522b \uff08\u5982\u679c\u9700\u8981\u5b66\u4e60 JavaScript \u5f02\u6b65\uff09\u80fd\u591f\u7406\u89e3\u6808\u548c\u961f\u5217\u4e24\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u7406\u89e3\u51fd\u6570\u6808\u7684\u5de5\u4f5c\u673a\u5236 \u8fb9\u5b66\u8fb9\u505a \u9605\u8bfb\u8fd9\u7bc7\u6587\u6863\u7684\u65f6\u5019\uff0c\u7f16\u8005\u5efa\u8bae\u6309\u4e0b F12 \u952e\uff0c\u6253\u5f00\u6d4f\u89c8\u5668\u7684\u63a7\u5236\u53f0\uff0c\u628a\u7f16\u8005\u63d0\u4f9b\u7684\u793a\u4f8b\u4ee3\u7801\u5728\u63a7\u5236\u53f0\u91cc\u771f\u6b63\u8fd0\u884c\u4e00\u4e0b\uff0c\u76f8\u4fe1\u4f1a\u7ed9\u5e2e\u52a9\u4f60\u66f4\u597d\u7406\u89e3 JavaScript \u8bed\u8a00\u7684\u3002","title":"\u524d\u7f6e\u77e5\u8bc6"},{"location":"languages/javascript/#_2","text":"JavaScript \u662f\u5e94\u7528\u76f8\u5f53\u5e7f\u6cdb\u7684\u4e00\u95e8\u811a\u672c\u8bed\u8a00\uff0c\u5927\u91cf\u7684 Web \u5e94\u7528\u6216\u8005\u79fb\u52a8\u7aef\u5e94\u7528\u4f9d\u9760 JavaScript \u4ee5\u53ca\u5176\u884d\u751f\u8bed\u8a00\u5f00\u53d1\u3002\u800c\u4e14\u4f5c\u4e3a\u201c\u524d\u7aef\u4e09\u4ef6\u5957\u201d\uff08\u6307 HTML\u3001CSS \u548c JavaScript\uff09\u4e4b\u4e00\uff0c\u5b66\u4e60 JavaScript \u5bf9\u7f16\u5199\u524d\u7aef\u5de5\u7a0b\u7684\u91cd\u8981\u6027\u4e0d\u8a00\u800c\u55bb\u3002 \u540e\u7eed\u53ef\u4ee5\u9605\u8bfb\u7684\u6587\u6863\u6709\uff1a TypeScript \u8bed\u8a00\u5165\u95e8 /languages/typescript \u53ef\u4ee5\u5e94\u7528 JavaScript \u8bed\u8a00\u76f8\u5173\u77e5\u8bc6\u7684\u8bfe\u7a0b\uff1a \u7a0b\u5e8f\u8bbe\u8ba1\u8bad\u7ec3 \u8f6f\u4ef6\u5de5\u7a0b","title":"\u540e\u7eed\u62d3\u5c55"},{"location":"languages/javascript/#_3","text":"\u5ed6\u96ea\u5cf0 JavaScript \u8bed\u8a00\u6559\u7a0b https://www.liaoxuefeng.com/wiki/1022910821149312 Mozilla JavaScript \u8bed\u8a00\u6559\u7a0b https://developer.mozilla.org/zh-CN/docs/Web/JavaScript JSFuck \u5b98\u65b9\u7f51\u7ad9 http://www.jsfuck.com/","title":"\u8d44\u6e90\u94fe\u63a5"},{"location":"languages/javascript/async/","text":"JavaScript \u7684\u5f02\u6b65 \u00b6 \u5f02\u6b65\u7684\u5fc5\u8981\u6027 \u6b63\u5e38\u6211\u4eec\u7f16\u5199\u7684\u4ee3\u7801\u90fd\u662f\u540c\u6b65\u4ee3\u7801\uff0c\u4e5f\u5c31\u662f\u8bf4\u4ee3\u7801\u6267\u884c\u7684\u987a\u5e8f\u662f\u4ece\u4e0a\u5230\u4e0b\uff0c\u4e0a\u9762\u7684\u64cd\u4f5c\u8fd8\u6ca1\u6709\u6267\u884c\u5b8c\uff0c\u4e0b\u9762\u7684\u64cd\u4f5c\u5c31\u4e0d\u4f1a\u88ab\u6267\u884c\u5230\u3002\u4f46\u662f\u5728\u524d\u7aef\u4ee3\u7801\u4e4b\u4e2d\uff0c\u6211\u4eec\u4f1a\u7ecf\u5e38\u5411\u540e\u7aef\u6216\u8005\u7f51\u7edc\u8bf7\u6c42\u6570\u636e\uff0c\u5373\u4f7f\u73b0\u5728\u7f51\u7edc\u5df2\u7ecf\u5f88\u5feb\uff0c\u5728\u8bf7\u6c42\u6570\u636e\u91cf\u8f83\u5927\u7684\u65f6\u5019\uff0c\u8bf7\u6c42\u6570\u636e\u7684\u64cd\u4f5c\u4f9d\u7136\u4f1a\u5360\u636e\u76f8\u5f53\u957f\u7684\u65f6\u95f4\u3002\u5982\u679c\u6211\u4eec\u8fd8\u4f9d\u7136\u4f7f\u7528\u540c\u6b65\u4ee3\u7801\uff0c\u90a3\u4e48\u5c31\u4f1a\u5bfc\u81f4\u9875\u9762\u5361\u987f\uff08\u56e0\u4e3a\u8fd9\u4e2a\u65f6\u5019\u4ee3\u7801\u5361\u987f\u5728\u4e86\u8bf7\u6c42\u6570\u636e\u8fd9\u4e00\u6b65\uff09\u3002 \u53e6\u5916\u4e00\u65b9\u9762\uff0c\u6709\u4e9b\u64cd\u4f5c\u5b8c\u5168\u53ef\u4ee5\u5728\u524d\u7aef\u8bf7\u6c42\u9875\u9762\u7684\u65f6\u5019\u5b8c\u6210\uff0c\u6bd4\u5982\u8bf4\u6e32\u67d3\u51fa\u9875\u9762\u7684\u6a21\u677f\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u6570\u636e\u5b8c\u5168\u83b7\u53d6\u4e4b\u540e\u518d\u628a\u8fd9\u4e9b\u6570\u636e\u586b\u5165\u9875\u9762\u3002 \u603b\u800c\u8a00\u4e4b\uff0c\u524d\u7aef\u9700\u8981\u4f7f\u7528\u5f02\u6b65\u4ee3\u7801\uff0c\u9700\u8981\u5141\u8bb8\u591a\u6bb5\u4ee3\u7801\u540c\u65f6\u6267\u884c\u800c\u975e\u4e25\u683c\u6309\u7167\u987a\u5e8f\u4e00\u6b65\u6b65\u8d70\u3002\u8fd9\u79cd\u5141\u8bb8\u591a\u6bb5\u4ee3\u7801\u540c\u65f6\u6267\u884c\u7684\u4ee3\u7801\u5c31\u662f \u5f02\u6b65\uff08\u82f1\u8bed\uff1aAsynchronous\uff09 \u3002 \u4e8b\u4ef6\u5faa\u73af\u4e0e\u6d88\u606f\u961f\u5217\u673a\u5236 \u00b6 \u9996\u5148\u6211\u4eec\u9700\u8981\u660e\u786e\uff0cJavaScript \u662f\u5355\u7ebf\u7a0b\u8bed\u8a00\uff0c\u8fd9\u4e5f\u5c31\u4ee3\u8868 JavaScript \u5e76\u4e0d\u80fd\u50cf C++ \u6216\u8005 Java \u90a3\u6837\u5b9e\u73b0\u591a\u7ebf\u7a0b\u5e76\u53d1\u7684\u5f02\u6b65\u3002 \u4e3a\u4f55\u7981\u7528\u591a\u7ebf\u7a0b JavaScript \u7684\u8bbe\u8ba1\u521d\u8877\u5c31\u662f\u6d4f\u89c8\u5668\u7684\u811a\u672c\u8bed\u8a00\uff0c\u5176\u4f5c\u7528\u5c31\u662f\u4fee\u6539\u6587\u6863\u6811\u3002\u5982\u679c JavaScript \u5141\u8bb8\u591a\u7ebf\u7a0b\uff0c\u90a3\u4e48\u5176\u5f88\u6709\u53ef\u80fd\u56e0\u4e3a\u591a\u7ebf\u7a0b\u5e76\u53d1\u4fee\u6539\u6587\u6863\u6811\u5bfc\u81f4\u51b2\u7a81\u3002 \u4f46 JavaScript \u4f7f\u7528\u4e86\u53e6\u5916\u4e00\u79cd\u65b9\u5f0f\u5b9e\u73b0\u5f02\u6b65\uff0c\u4e5f\u5c31\u662f\u4e8b\u4ef6\u5faa\u73af\u548c\u6d88\u606f\u961f\u5217\u673a\u5236\u3002 \u5728\u8be6\u7ec6\u53d9\u8ff0\u8fd9\u4e2a\u673a\u5236\u4e4b\u524d\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u91cd\u65b0\u8ba4\u8bc6\u4e00\u4e0b\u56de\u8c03\u51fd\u6570\u3002\u5f53\u4e3b\u7ebf\u7a0b\u6d3e\u9063\u51fa\u4e00\u4e2a\u5f02\u6b65\u8fc7\u7a0b\uff0c\u6bd4\u5982\u8bf4\u89e6\u53d1\u4e86\u7f51\u7edc\u8bf7\u6c42\uff0c\u4e00\u822c\u800c\u8a00\u9700\u8981\u8bbe\u5b9a\u4e00\u4e2a\u8fd9\u4e2a\u5f02\u6b65\u8fc7\u7a0b\u7684\u56de\u8c03\u51fd\u6570\u3002\u8fd9\u4e2a\u56de\u8c03\u51fd\u6570\u63cf\u8ff0\u7684\uff0c\u662f\u8fd9\u4e2a\u5f02\u6b65\u8fc7\u7a0b\u6267\u884c\u5b8c\u6bd5\u540e\u9700\u8981\u505a\u7684\u4e8b\u60c5\u3002 \u9700\u8981\u5b9a\u4e49\u8fd9\u4e2a\u56de\u8c03\u51fd\u6570\u7684\u539f\u56e0\u4e5f\u5f88\u7b80\u5355\uff0c\u4e3b\u7ebf\u7a0b\u6ca1\u6709\u529e\u6cd5\u4e86\u89e3\u5230\u5f02\u6b65\u8fc7\u7a0b\u4f55\u65f6\u624d\u80fd\u7ed3\u675f\uff0c\u751a\u81f3\u5e76\u4e0d\u6e05\u695a\u8fd9\u4e2a\u8fc7\u7a0b\u80fd\u5426\u7ed3\u675f\u3002\u5728\u8fd9\u6837\u7684\u60c5\u51b5\u4e0b\uff0c\u4e3b\u7ebf\u7a0b\u5b8c\u5168\u4e0d\u80fd\u77e5\u6653\u4ec0\u4e48\u65f6\u5019\u505a\u8fd9\u4e2a\u5f02\u6b65\u8fc7\u7a0b\u7684\u5584\u540e\u5de5\u4f5c\uff08\u6bd4\u5982\u8bf4\u4ece\u7f51\u7edc\u83b7\u53d6\u6570\u636e\u540e\uff0c\u4e3b\u7ebf\u7a0b\u5e94\u8be5\u628a\u8fd9\u4e9b\u6570\u636e\u52a0\u8f7d\u5230\u9875\u9762\u4e0a\uff09\u3002\u90a3\u4e48\u4e0d\u5982\u5b9a\u4e49\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u5177\u4f53\u4ec0\u4e48\u65f6\u5019\u8c03\u7528\uff0c\u6839\u636e\u5f02\u6b65\u8fc7\u7a0b\u6765\u786e\u5b9a\u3002 \u56de\u5230\u4e8b\u4ef6\u5faa\u73af\u548c\u6d88\u606f\u961f\u5217\u3002JavaScript \u7684\u4e3b\u7ebf\u7a0b\u4e0a\u4f1a\u6709\u4e00\u4e2a\u6b7b\u5faa\u73af\uff0c\u79f0\u4e3a \u4e8b\u4ef6\u5faa\u73af \u3002\u5176\u6267\u884c\u903b\u8f91\u4e3a\u5728\u7a7a\u95f2\u7684\u65f6\u5019\u4e0d\u65ad\u68c0\u67e5\u6d88\u606f\u961f\u5217\u662f\u5426\u6709\u6d88\u606f\uff0c\u5982\u679c\u6709\uff0c\u5219\u6267\u884c\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u5219\u7b49\u5f85\u3002\u800c\u7a7a\u95f2\u7684\u542b\u4e49\u662f\u5f53\u524d\u51fd\u6570\u6808\u7a7a\u3002 \u800c\u9700\u8981\u5f02\u6b65\u6267\u884c\u7684\u4ee3\u7801\u5219\u4f1a\u8d1f\u8f7d\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u5f53\u5f02\u6b65\u8fc7\u7a0b\u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u5219\u4f1a\u628a\u56de\u8c03\u51fd\u6570\u653e\u5165\u6d88\u606f\u961f\u5217\u672b\u5c3e\u3002\u5f53\u4e3b\u7ebf\u7a0b\u7a7a\u95f2\u4e14\u68c0\u6d4b\u5230\u6d88\u606f\u961f\u5217\u4e4b\u4e2d\u6709\u56de\u8c03\u51fd\u6570\u7684\u65f6\u5019\uff0c\u4e3b\u7ebf\u7a0b\u5c31\u4f1a\u6267\u884c\u56de\u8c03\u51fd\u6570\uff0c\u505a\u597d\u5f02\u6b65\u8fc7\u7a0b\u7684\u5584\u540e\u5de5\u4f5c\u3002 \u901a\u8fc7\u8fd9\u6837\u7684\u673a\u5236\uff0cJavaScript \u4f9d\u7136\u662f\u5355\u7ebf\u7a0b\u7684\uff0c\u5bf9\u6587\u6863\u6811\u7684\u64cd\u4f5c\u4f9d\u7136\u662f\u540c\u6b65\u7684\u3001\u4e0d\u4f1a\u51fa\u73b0\u51b2\u7a81\u7684\u3002\u4f46\u4f9d\u9760\u8fd9\u4e2a\u673a\u5236\uff0cJavaScript \u5b9e\u73b0\u4e86\u5f02\u6b65\u3002 \u5b8f\u6d88\u606f\u961f\u5217\u548c\u5fae\u6d88\u606f\u961f\u5217 \u5b9e\u9645\u4e0a JavaScript \u7684\u6d88\u606f\u961f\u5217\u6709\u4e24\u79cd\uff0c\u5206\u4e3a\u5b8f\u6d88\u606f\u961f\u5217\u548c\u5fae\u6d88\u606f\u961f\u5217\u3002 setTimeout, setInterval \u8fd9\u7c7b\u5f15\u53d1\u7684\u56de\u8c03\u4f1a\u653e\u5165\u5b8f\u6d88\u606f\u961f\u5217\uff0c\u800c Promise \u7684 then \u4f1a\u653e\u5165\u5fae\u6d88\u606f\u961f\u5217\u3002 JavaScript \u7684\u4e8b\u4ef6\u5faa\u73af\u5728\u67e5\u770b\u6d88\u606f\u961f\u5217\u7684\u65f6\u5019\uff0c\u4f1a\u9996\u5148\u67e5\u770b\u5fae\u6d88\u606f\u961f\u5217\uff0c\u5982\u679c\u5b58\u5728\u56de\u8c03\u5219 \u6267\u884c\u6bcf\u4e00\u4e2a\u56de\u8c03\u76f4\u5230\u5fae\u6d88\u606f\u961f\u5217\u6e05\u7a7a \u3002\u4e4b\u540e\u518d\u53bb\u67e5\u770b\u5b8f\u6d88\u606f\u961f\u5217\uff0c\u5e76\u4e14 \u53ea\u6267\u884c\u961f\u5217\u7b2c\u4e00\u4e2a\u56de\u8c03 \u3002 \u73b0\u5728\u6211\u4eec\u7f16\u5199\u4e00\u4e2a\u5f02\u6b65\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u4f1a\u7528\u5230 setTimeout \u51fd\u6570\uff0c\u5176\u63a5\u53d7\u4e24\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3a\u591a\u957f\u65f6\u95f4\u540e\u6267\u884c\u4e0a\u8ff0\u56de\u8c03\u51fd\u6570\u3002\u6bd4\u5982\u4e0b\u5217\u4ee3\u7801\uff1a 1 2 3 setTimeout (() => { console . log ( \"1s has passed!\" ); }, 1000 ); \u8fd9\u4e2a\u4ee3\u7801\u5c06\u4f1a\u5ef6\u8fdf\u4e00\u79d2\u540e\u8f93\u51fa \"1s has passed!\" \u3002\u8fd9\u4e2a\u51fd\u6570\u7684\u7b49\u5f85\u8fc7\u7a0b\u4f1a\u5f02\u6b65\u4e8e\u4e3b\u7ebf\u7a0b\u6267\u884c\uff0c\u800c\u5176\u901a\u8fc7\u7b2c\u4e00\u4e2a\u53c2\u6570\u63a5\u53d7\u7684\u56de\u8c03\u5c31\u4f1a\u5728\u7b49\u5f85\u5b8c\u6bd5\u540e\u653e\u5165\u6d88\u606f\u961f\u5217\u3002\u73b0\u5728\u6211\u4eec\u5229\u7528\u8fd9\u4e2a\u51fd\u6570\u5199\u51fa\u4e00\u4e2a\u9700\u8981\u8017\u65f6\u7684\u64cd\u4f5c\uff0c\u4ee5\u6b64\u6a21\u62df\u7f51\u7edc\u8bf7\u6c42\uff1a 1 2 3 4 5 const fetchData = () => { setTimeout (() => { console . log ( \"Data got!\" ); }, 1000 ); }; \u8fd9\u4e2a\u51fd\u6570\u8c03\u7528\u540e\u4f1a\u7acb\u523b\u8fd4\u56de\uff0c\u56e0\u4e3a\u5b83\u7684\u4efb\u52a1\u662f\u6d3e\u9063\u4e00\u4e2a\u5f02\u6b65\u8fc7\u7a0b\uff0c\u800c\u4e0d\u8d1f\u8d23\u7b49\u5f85\u5f02\u6b65\u7ed3\u675f\u548c\u5584\u540e\uff0c\u5584\u540e\u5de5\u4f5c\u5e94\u8be5\u5199\u5728\u56de\u8c03\u51fd\u6570\u4e4b\u4e2d\u7b49\u5f85\u4e3b\u7ebf\u7a0b\u6267\u884c\u3002 \u5728\u7b49\u5f85\u5f02\u6b65\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e3b\u7ebf\u7a0b\u53ef\u4ee5\u5b8c\u6210\u5176\u4ed6\u7684\u4efb\u52a1\uff1a 1 2 3 4 5 6 7 8 9 const fetchData = () => { setTimeout (() => { console . log ( \"Data get!\" ); }, 1000 ); }; fetchData (); // Dispatch async task console . log ( \"Rendering template...\" ); console . log ( \"Loading local storage...\" ); // Main thread doing other tasks \u56de\u8c03\u51fd\u6570\u7684\u7f3a\u9677 \u00b6 \u56de\u8c03\u51fd\u6570\u4e0d\u9700\u8981\u5f15\u5165\u5f88\u591a\u7684\u5176\u4ed6\u8bed\u6cd5\u5c31\u53ef\u4ee5\u65b9\u4fbf\u5730\u4f7f\u7528\u5230\u5f02\u6b65\u4e4b\u4e2d\uff0c\u4f46\u662f\u5176\u95ee\u9898\u4e5f\u662f\u5f88\u7a81\u51fa\u7684\u3002\u56de\u8c03\u51fd\u6570\u672c\u8eab\u53ef\u8bfb\u6027\u5c31\u4e0d\u662f\u5f88\u597d\uff0c\u800c\u4e14\u4e5f\u5e76\u4e0d\u80fd\u5f88\u597d\u8d34\u5408\u6211\u4eec\u7684\u76f4\u89c2\u601d\u7ef4\u903b\u8f91\u3002\u800c\u5176\u6700\u5927\u7684\u95ee\u9898\u5c31\u662f\u53ef\u80fd\u9020\u6210\u56de\u8c03\u51fd\u6570\u8fc7\u5206\u5d4c\u5957\uff0c\u5bfc\u81f4\u4ee3\u7801\u96be\u4ee5\u7ef4\u62a4\u3002\u8fd9\u4e00\u822c\u88ab\u79f0\u4e3a \u56de\u8c03\u5730\u72f1 \u3002 \u771f\u6b63\u7684\u5f02\u6b65\u4e1a\u52a1\u903b\u8f91\u53ef\u80fd\u5e76\u4e0d\u4f1a\u5f88\u5355\u4e00\uff0c\u6bd4\u5982\u8bf4\u524d\u7aef\u8981\u4ece\u591a\u4e2a\u6570\u636e\u6e90\u52a0\u8f7d\u6570\u636e\uff0c\u4f46\u662f\u540e\u4e00\u4e2a\u6570\u636e\u7684\u52a0\u8f7d\u9700\u8981\u4f9d\u9760\u524d\u4e00\u4e2a\u6570\u636e\u7684\u7ed3\u679c\u3002\u8fd9\u6837\u5c31\u4e0d\u80fd\u5728\u4e3b\u7ebf\u7a0b\u4e2d\u540c\u65f6\u6d3e\u9063\u591a\u4e2a\u5f02\u6b65\u8fc7\u7a0b\uff0c\u800c\u5fc5\u987b\u5728\u524d\u4e00\u4e2a\u5f02\u6b65\u8fc7\u7a0b\u7684\u56de\u8c03\u4e4b\u4e2d\u6d3e\u9063\u4e0b\u4e00\u4e2a\u5f02\u6b65\u8fc7\u7a0b\u3002\u8fd9\u91cc\u6211\u4eec\u4f9d\u7136\u7528 setTimeout \u6765\u6a21\u62df\u8017\u65f6\u64cd\u4f5c\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 setTimeout (() => { // Get data #1 console . log ( \"Data #1 get!\" ); setTimeout (() => { // Get data #2 console . log ( \"Data #2 get!\" ); setTimeout (() => { // Get data #3 console . log ( \"Data #3 get!\" ); setTimeout (() => { // Get data #4 console . log ( \"Data #4 get!\" ); }, 1000 ); }, 1000 ); }, 1000 ); }, 1000 ); \u8fd9\u6837\u7684\u4ee3\u7801\u5f88\u96be\u9605\u8bfb\uff0c\u4e5f\u5f88\u96be\u7ef4\u62a4\uff0c\u800c\u5b9e\u9645\u4e0a\u7684\u4e1a\u52a1\u903b\u8f91\u4e5f\u4e0d\u53ef\u80fd\u662f setTimeout \u8fd9\u6837\u7b80\u5355\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5904\u7406\u5f02\u6b65\u5f02\u5e38\u7684\u60c5\u51b5\uff0c\u5982\u679c\u53d1\u751f\u9519\u8bef\uff0c\u5c31\u5e94\u5f53\u7acb\u523b\u8df3\u51fa\u5f02\u6b65\uff0c\u4ea4\u7531\u4e3b\u7ebf\u7a0b\u505a\u5f02\u5e38\u5904\u7406\u3002\u800c\u663e\u7136\uff0c\u6211\u4eec\u5f88\u96be\u7ed9\u8fd9\u6837\u7684\u4ee3\u7801\u6dfb\u52a0\u5f02\u5e38\u5904\u7406\u529f\u80fd\u3002 Promise \u5bf9\u8c61 \u00b6 \u4e3a\u4e86\u89e3\u51b3\u56de\u8c03\u51fd\u6570\u4e0d\u76f4\u89c2\u7684\u95ee\u9898\uff0c\u65b0\u7248\u672c\u7684 JavaScript \u8bbe\u7acb\u4e86 Promise \u5bf9\u8c61\uff0c\u53ef\u4ee5\u8bf4\u8fd9\u4e2a\u5bf9\u8c61\u5b8c\u5168\u6539\u53d8\u4e86 JavaScript \u5f02\u6b65\u4ee3\u7801\u7f16\u5199\u7684\u89c4\u8303\u3002 \u521b\u5efa\u4e00\u4e2a Promise \u5bf9\u8c61\u53ef\u4ee5\u4f7f\u7528\u5176\u6784\u9020\u51fd\u6570\uff1a 1 2 3 4 5 6 7 8 9 10 new Promise (( resolve , reject ) => { let asyncSucceeded = Math . random () > 0.2 ; setTimeout (() => { if ( asyncSucceeded ) { resolve ( \"Async succeeded!\" ); } else { reject ( \"Async failed!\" ); } }, 1000 ); }); \u5176\u6784\u9020\u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u8fd9\u4e2a\u56de\u8c03\u51fd\u6570\u7684\u4e24\u4e2a\u53c2\u6570\u662f\u53e6\u5916\u7684\u4e24\u4e2a\u56de\u8c03\u51fd\u6570\u3002 resolve \u4ee3\u8868\u5f02\u6b65\u6210\u529f\u7684\u56de\u8c03\u51fd\u6570\uff0c reject \u4ee3\u8868\u5f02\u6b65\u5931\u8d25\u7684\u56de\u8c03\u51fd\u6570\u3002\u800c\u6784\u9020\u51fd\u6570\u63a5\u53d7\u7684\u56de\u8c03\u51fd\u6570\u7684\u51fd\u6570\u4f53\u5219\u662f\u9700\u8981\u6267\u884c\u7684\u8017\u65f6\u64cd\u4f5c\u3002 \u4e3a\u4ec0\u4e48\u8981\u53eb\u8fd9\u4e2a\u540d\u5b57\uff0c\u5b83\u7684\u6784\u9020\u51fd\u6570\u4e3a\u4ec0\u4e48\u957f\u6210\u8fd9\u6837 Promise \u7684\u4e2d\u6587\u4e00\u822c\u662f\u201c\u627f\u8bfa\u201d\uff0c\u90a3\u5f02\u6b65\u548c\u627f\u8bfa\u7a76\u7adf\u6709\u4ec0\u4e48\u5173\u7cfb\uff1f \u6211\u4eec\u6765\u8bbe\u60f3\u8fd9\u6837\u7684\u4e00\u4e2a\u60c5\u666f\u3002\u5c0f\u660e\u662f\u4e00\u4f4d\u4e94\u5e74\u7ea7\u7684\u5c0f\u5b66\u751f\uff0c\u4ed6\u7684\u5988\u5988\u4e3a\u4e86\u8ba9\u4ed6\u597d\u597d\u5b66\u4e60\uff0c \u627f\u8bfa \u5c0f\u660e\u5982\u679c\u4ed6\u671f\u672b\u8003\u8bd5\u8003\u5230 100 \u5206\uff0c\u5c31\u7ed9\u4ed6\u4e70\u65b0\u624b\u673a\u3002\u800c\u7b49\u5f85\u671f\u672b\u8003\u8bd5\u51fa\u6210\u7ee9\uff0c\u5c31\u662f\u5f02\u6b65\u8fc7\u7a0b\u3002\u5728\u8fd9\u6bb5\u65f6\u95f4\u5185\uff0c\u4f5c\u4e3a\u4e3b\u7ebf\u7a0b\u7684\u5c0f\u660e\u7684\u5988\u5988\u53ef\u4ee5\u53bb\u505a\u5176\u4ed6\u7684\u5de5\u4f5c\uff0c\u800c\u8d1f\u8d23\u6267\u884c\u5f02\u6b65\u8fc7\u7a0b\u7684\u5c0f\u660e\u5219\u8981\u597d\u597d\u5b66\u4e60\u3002 \u7b49\u5230\u5f02\u6b65\u8fc7\u7a0b\u6267\u884c\u5b8c\u6bd5\uff0c\u4e5f\u5c31\u662f\u671f\u672b\u8003\u8bd5\u51fa\u6210\u7ee9\u4e86\uff0c\u5c31\u5230\u4e86 \u627f\u8bfa \u5151\u73b0\u7684\u65f6\u5019\u4e86\u3002\u5c0f\u660e\u548c\u5988\u5988\u5c31\u4f1a\u6838\u5bf9\u5c0f\u660e\u7684\u5b66\u4e60\u6210\u679c\uff08\u5f02\u6b65\u8fc7\u7a0b\u7684\u6267\u884c\u72b6\u6001\uff09\uff0c\u5982\u679c\u5c0f\u660e\u8003\u5230\u4e86 100 \u5206\uff08\u5f02\u6b65\u8fc7\u7a0b\u6267\u884c\u6210\u529f\uff09\uff0c\u4f5c\u4e3a\u4e3b\u7ebf\u7a0b\u7684\u5c0f\u660e\u7684\u5988\u5988\u5c31\u4f1a\u53bb\u4e70\u65b0\u624b\u673a\u3002\u800c\u5982\u679c\u5c0f\u660e\u6ca1\u8003\u5230 100 \u5206\uff08\u5f02\u6b65\u8fc7\u7a0b\u6267\u884c\u5931\u8d25\uff09\uff0c\u5c0f\u660e\u7684\u5988\u5988\u5c31\u4e0d\u4f1a\u4e70\u65b0\u624b\u673a\u3002\u65e0\u8bba\u4e70\u4e0d\u4e70\uff0c\u4f5c\u4e3a\u4e3b\u7ebf\u7a0b\u7684\u5c0f\u660e\u7684\u5988\u5988\u90fd\u505a\u597d\u4e86\u5f02\u6b65\u8fc7\u7a0b\u7684\u5584\u540e\u5de5\u4f5c\u3002 \u6362\u5230\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u60c5\u666f\u3002\u4e00\u4e2a \u627f\u8bfa \u8981\u6210\u7acb\uff0c\u5c31\u9700\u8981\u89c4\u5b9a\u597d\uff0c\u5f02\u6b65\u8fc7\u7a0b\u6267\u884c\u5b8c\u6bd5\uff0c\u4e3b\u7ebf\u7a0b\u9700\u8981\u505a\u4ec0\u4e48\uff0c\u5176\u5b9e\u8fd9\u5c31\u662f\u6307\u6d3e\u5f02\u6b65\u8fc7\u7a0b\u7684\u56de\u8c03\u51fd\u6570\u3002\u5728 Promise \u7684\u6784\u9020\u51fd\u6570\u4e4b\u4e2d\uff0c resolve \u5b9e\u9645\u4e0a\u5c31\u662f\u201c\u8003\u5230 100 \u5206\uff0c\u5c0f\u660e\u7684\u5988\u5988\u8981\u4e70\u65b0\u624b\u673a\u201d\uff0c reject \u5b9e\u9645\u4e0a\u5c31\u662f\u201c\u8003\u4e0d\u5230 100 \u5206\uff0c\u5c0f\u660e\u7684\u5988\u5988\u4e0d\u4e70\u65b0\u624b\u673a\u201d\uff0c\u51fd\u6570\u4f53\u5c31\u662f\u201c\u5c0f\u660e\u52aa\u529b\u5b66\u4e60\u201d\u3002 \u4f46\u662f\u6784\u9020\u51fd\u6570\u4e4b\u4e2d\u867d\u7136\u6709\u4e86 resolve \u548c reject \uff0c\u4f46\u5b9e\u9645\u4e0a\u6211\u4eec\u8fd8\u6ca1\u6709\u5177\u4f53\u89c4\u5b9a\u8fd9\u4e24\u4e2a\u56de\u8c03\u5230\u5e95\u662f\u5565\u3002\u800c\u6307\u5b9a\u8fd9\u4e24\u4e2a\u56de\u8c03\u9700\u8981\u8c03\u7528 Promise \u7684 then \u548c catch \u65b9\u6cd5\u3002\u8fd9\u4e2a\u6211\u4eec\u5728\u4e0b\u9762\u8bb2\u89e3\u3002 \u7ed9 resolve \u548c reject \u6307\u5b9a\u5177\u4f53\u7684\u51fd\u6570\u4f53\u9700\u8981\u4f7f\u7528 then \u548c catch \u65b9\u6cd5\u3002\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u90fd\u4f1a\u63a5\u53d7\u56de\u8c03\u51fd\u6570\uff0c\u5e76\u4e14\u8fd4\u56de Promise \u5bf9\u8c61\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 new Promise (( resolve , reject ) => { let asyncSucceeded = Math . random () > 0.2 ; setTimeout (() => { if ( asyncSucceeded ) { resolve ( \"Async succeeded!\" ); } else { reject ( \"Async failed!\" ); } }, 1000 ); }) . then (( res ) => { console . log ( \"Then\" ); console . log ( res ); }) . catch (( err ) => { console . log ( \"Catch\" ); console . log ( err ); }); \u901a\u8fc7\u8fd9\u6837\u7684\u65b9\u5f0f\uff0c\u6211\u4eec\u5c31\u5728 Promise \u6784\u9020\u51fd\u6570\u63a5\u53d7\u7684\u56de\u8c03\u51fd\u6570\u7684\u51fd\u6570\u4f53\u4e2d\u89c4\u5b9a\u4e86\u5f02\u6b65\u8fc7\u7a0b\u7684\u5177\u4f53\u4efb\u52a1\uff0c\u5728 then \u548c catch \u65b9\u6cd5\u4e4b\u4e2d\u6307\u6d3e\u4e86\u5f02\u6b65\u8fc7\u7a0b\u7684\u56de\u8c03\u51fd\u6570\u3002\u8fd9\u6837\uff0c\u4e3b\u7ebf\u7a0b\u5c31\u5b8c\u6574\u5b8c\u6210\u4e86\u5f02\u6b65\u8fc7\u7a0b\u7684\u6d3e\u9063\u3002 Promise \u6bd4\u76f4\u63a5\u5199\u56de\u8c03\u6a21\u5f0f\u4f18\u8d8a\u7684\u5730\u65b9\u5c31\u662f\u8fd9\u79cd\u5199\u6cd5\u89e3\u51b3\u4e86\u56de\u8c03\u5730\u72f1\u3002\u6211\u4eec\u4f9d\u7136\u8003\u8651\u4f9d\u6b21\u83b7\u53d6\u591a\u6570\u636e\u6e90\u6570\u636e\u7684\u4e1a\u52a1\u573a\u666f\uff0c\u7531\u4e8e then \u65b9\u6cd5\u4f9d\u7136\u8fd4\u56de Promise \u5bf9\u8c61\uff0c\u6240\u4ee5\u5b9e\u9645\u4e0a\u6211\u4eec\u53ef\u4ee5\u5728 then \u540e\u9762\u63a5\u7740\u8c03\u7528 then \u3002\u800c\u4e0a\u4e00\u4e2a then \u4e4b\u4e2d\u7684\u56de\u8c03\u51fd\u6570\u7684\u8fd4\u56de\u503c\u4f1a\u88ab\u4f20\u5165\u4e0b\u4e00\u4e2a then \u4e4b\u4e2d\u7684\u56de\u8c03\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 new Promise (( resolve , reject ) => { // Get Data #1 resolve ( \"Data #1\" ); }) . then (( res ) => { console . log ( res ); // Get Data #2 return \"Data #2\" ; }) . then (( res ) => { console . log ( res ); // Get Data #3 return \"Data #3\" ; }) . then ( console . log ) . catch ( console . log ); \u8fd9\u79cd\u5199\u6cd5\u88ab\u79f0\u4e3a then \u94fe\uff0c\u5176\u597d\u5904\u662f\u6bd4\u56de\u8c03\u51fd\u6570\u5199\u6cd5\u66f4\u6613\u8bfb\u4e14\u6613\u7ef4\u62a4\u3002 \u53e6\u5916\uff0c\u5bf9\u4e8e\u591a\u4f9d\u8d56\u95ee\u9898\uff08\u9700\u8981\u591a\u4e2a\u5f02\u6b65\u5168\u90e8\u7ed3\u675f\u540e\u624d\u80fd\u6d3e\u9063\u4e0b\u4e00\u4e2a\u5f02\u6b65\uff09\uff0c Promise \u63d0\u4f9b\u4e86 all \u65b9\u6cd5\uff1a 1 2 3 4 5 6 7 8 9 10 11 Promise . all ( [ 1 , 2 , 3 ]. map (( val ) => { return new Promise (( resolve , reject ) => { resolve ( `Promise # ${ val } ` ); }); }) ) . then (( res ) => { console . log ( res ); // [\"Promise #1\", \"Promise #2\", \"Promise #3\"] }) . catch (( err ) => {}); \u8fd9\u91cc then \u4e4b\u4e2d\u7684\u56de\u8c03\u51fd\u6570\u63a5\u53d7\u7684\u53c2\u6570\u662f\u6240\u6709 Promise \u5bf9\u8c61 resolve \u56de\u8c03\u6240\u63a5\u53d7\u7684\u53c2\u6570\u62fc\u6210\u7684\u6570\u7ec4\uff0c catch \u540c\u7406\u3002 \u53e6\u5916\uff0c\u6ce8\u610f\u4e24\u70b9\uff1a Promise \u4e00\u65e6\u521b\u5efa\uff0c\u5185\u90e8\u7684\u5f02\u6b65\u8fc7\u7a0b\u5c31\u5f00\u59cb\u6267\u884c\uff0c\u4e14\u5f00\u59cb\u6267\u884c\u540e\u5c31\u4e0d\u4f1a\u53d6\u6d88 \u521b\u5efa Promise \u4f1a\u5199\u5f88\u591a\u5f88\u957f\u7684\u56de\u8c03\uff0c\u5199\u5b8c\u8fd9\u4e9b\u56de\u8c03\u540e\u5f88\u5bb9\u6613\u7ed9\u7f16\u5199\u8005\u4e00\u79cd\u201c\u5f02\u6b65\u5df2\u7ecf\u6267\u884c\u7ed3\u675f\u201d\u7684\u9519\u89c9\u3002\u5b9e\u9645\u4e0a\u8fd9\u4e48\u957f\u7684\u8bed\u53e5\u4ec5\u4ec5\u662f \u5b9a\u4e49\u4e86 Promise \u5bf9\u8c61 \uff0c\u4e5f\u5c31\u662f\u4ec5\u4ec5\u53ea\u662f\u6d3e\u9063\u4e86\u5f02\u6b65\u3002 \u5173\u4e8e\u7b2c\u4e8c\u70b9\uff0c\u53ef\u4ee5\u770b\u4e0b\u9762\u7684\u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 9 10 11 let i = 1 ; new Promise (( resolve , reject ) => { resolve ( 2 ); }) . then (( res ) => { i = 2 ; }) . catch ( console . log ); console . log ( i ); // 1 \u8fd9\u91cc\u521b\u5efa\u5b8c Promise \u5bf9\u8c61\u4e4b\u540e\u7acb\u523b\u8f93\u51fa i \uff0c\u7531\u4e8e\u6b64\u65f6\u5f02\u6b65\u8fd8\u6ca1\u6709\u6267\u884c\u5b8c\u6bd5\uff0c\u4e5f\u5c31\u662f\u8fd8\u6ca1\u6709\u5c06 i \u91cd\u65b0\u8d4b\u503c\uff0c\u6240\u4ee5\u53ea\u80fd\u5f97\u5230\u539f\u5148\u503c 1 \u3002 \u7f16\u8005\u66fe\u7ecf\u8e29\u8fc7\u7684\u5751\u4e0d\u80fd\u8ba9\u8bfb\u8005\u518d\u8e29 \u5728\u5b9e\u9645\u5de5\u7a0b\u4e2d\uff0c\u521b\u5efa Promise \u5bf9\u8c61\u7684\u8bed\u53e5\u53ef\u4ee5\u6bd4\u8fd9\u4e2a\u793a\u4f8b\u957f\u5f88\u591a\uff0c\u751a\u81f3\u53ef\u4ee5\u8d85\u51fa\u4e00\u4e2a\u5c4f\u5e55\u663e\u793a\u7684\u8303\u56f4\u3002\u6b64\u65f6\u4e00\u5b9a\u8981\u4fdd\u6301\u6e05\u9192\uff0c\u8fd9\u4e48\u957f\u7684\u8bed\u53e5\uff0c \u4ec5\u4ec5\u662f\u6d3e\u9063\u4e86\u5f02\u6b65 \uff0c\u4e0d\u8981\u7d27\u63a5\u7740\u540e\u9762\u4f7f\u7528\u4e00\u4e9b\u4f1a\u88ab\u5f02\u6b65\u8fc7\u7a0b\u4fee\u6539\u7684\u503c\u3002 \u8ddf\u7740\u6211\u5ff5\uff0c \u518d\u957f\u7684\u8bed\u53e5\u4e5f\u4ec5\u4ec5\u662f\u6d3e\u9063\u4e86\u5f02\u6b65 \uff0c \u518d\u957f\u7684\u8bed\u53e5\u4e5f\u4ec5\u4ec5\u662f\u6d3e\u9063\u4e86\u5f02\u6b65 \uff0c \u518d\u957f\u7684\u8bed\u53e5\u4e5f\u4ec5\u4ec5\u662f\u6d3e\u9063\u4e86\u5f02\u6b65 \u3002 \u6b64\u5916\uff0c\u5b9e\u9645\u5de5\u7a0b\u4e4b\u4e2d\uff0c\u4e00\u822c\u4f1a\u8bbe\u8ba1\u4e00\u4e2a\u6807\u8bb0\u8868\u793a\u67d0\u4e2a\u5f02\u6b65\u662f\u5426\u8fd8\u5728\u6267\u884c\u3002\u8fd9\u4e2a\u6807\u8bb0\u4f1a\u5728\u521b\u5efa Promise \u5bf9\u8c61\u6d3e\u9063\u5f02\u6b65\u7684\u65f6\u5019\u7f6e\u771f\uff0c\u7136\u540e\u5728 then \u94fe\u6700\u540e\u7684\u56de\u8c03\u4e2d\u7f6e\u5047\u3002\u8fd9\u6837\u4e3b\u7ebf\u7a0b\u5c31\u53ef\u4ee5\u6839\u636e\u8fd9\u4e2a\u6807\u8bb0\u786e\u5b9a\u662f\u5426\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b\u654f\u611f\u53d8\u91cf\uff08\u6bd4\u5982\u4e0a\u9762\u4f8b\u5b50\u4e2d\u7684 i \uff09\u3002 \u8fd9\u79cd\u601d\u60f3\u5176\u5b9e\u7c7b\u4f3c\u4e8e\u8bfb\u5199\u9501\u7684\u601d\u60f3\u3002 async \u4e0e await \u00b6 \u5728\u6700\u65b0\u6807\u51c6\u4e4b\u4e2d\uff0cJavaScript \u5f15\u5165\u4e86 async, await \u8fd9\u4e24\u4e2a\u5173\u952e\u5b57\uff0c\u8fd9\u4e24\u4e2a\u5173\u952e\u5b57\u7684\u4f5c\u7528\u662f\u80fd\u591f\u8ba9\u5f02\u6b65\u4ee3\u7801\u5199\u5f97\u548c\u540c\u6b65\u4ee3\u7801\u4e00\u6837\u81ea\u7136\u3002 \u6211\u4eec\u53ef\u4ee5\u7528 async \u5173\u952e\u5b57\u5c06\u4e00\u4e2a\u51fd\u6570\u58f0\u660e\u4e3a\u5f02\u6b65\u51fd\u6570\u3002\u8c03\u7528\u5f02\u6b65\u51fd\u6570\u7684\u65f6\u5019\uff0c\u5176\u4f1a\u7acb\u523b\u8fd4\u56de\u5e76\u6d3e\u9063\u4e00\u4e2a\u5f02\u6b65\uff1a 1 2 3 4 5 6 7 8 const foo = async () => { setTimeout (() => { console . log ( \"Async over!\" ); }, 1000 ); }; foo (); console . log ( \"Sync code here!\" ); \u800c async \u5173\u952e\u5b57\u7684\u7684\u53e6\u5916\u4e00\u4e2a\u4f5c\u7528\u5c31\u662f\u5c06\u51fd\u6570\u7684\u8fd4\u56de\u503c\u5305\u88c5\u4e3a Promise \u5bf9\u8c61\uff1a 1 2 3 4 5 6 7 const foo = async () => { setTimeout (() => { console . log ( \"Async over!\" ); }, 1000 ); }; typeof foo (); // \"object\", note \"undefined\" \u90a3\u4e48\u6211\u4eec\u4e5f\u53ef\u4ee5\u6309\u7167 Promise \u7684 then \u94fe\u5199\u6cd5\u4f7f\u7528\u5f02\u6b65\u51fd\u6570\uff1a 1 2 3 4 5 6 7 8 9 10 11 const foo = async () => { return \"Data #1\" ; }; foo () . then (( res ) => { console . log ( res ); return \"Data #2\" ; }) . then ( console . log ) . catch ( console . log ); await \u5173\u952e\u5b57\u540e\u9762\u53ef\u4ee5\u63a5\u4e00\u4e2a\u53d8\u91cf\uff0c\u5982\u679c\u8fd9\u4e2a\u53d8\u91cf\u4e0d\u662f Promise \u5bf9\u8c61\uff0c\u90a3\u4e48 await \u5173\u952e\u5b57\u4e0d\u4ea7\u751f\u4efb\u4f55\u6548\u679c\u3002 \u5982\u679c\u662f Promise \u5bf9\u8c61\uff0c\u90a3\u4e48 await \u5173\u952e\u5b57\u4f1a\u963b\u585e\u4ee3\u7801\u8fd0\u884c\uff0c\u76f4\u5230\u8fd9\u4e2a Promise \u5bf9\u8c61\u4ee3\u8868\u7684\u5f02\u6b65\u6267\u884c\u5b8c\u6bd5\u3002 \u5982\u679c\u5f02\u6b65\u6210\u529f\uff0c\u8fd9\u4e2a\u65f6\u5019 await \u8bed\u53e5\u7684\u8fd4\u56de\u503c\u662f Promise \u7684 resolve \u56de\u8c03\u63a5\u53d7\u7684\u53c2\u6570\uff0c\u65e0\u8bba\u6709\u6ca1\u6709\u901a\u8fc7 then \u65b9\u6cd5\u6307\u5b9a resolve \u56de\u8c03\u3002 \u5982\u679c\u5f02\u6b65\u5931\u8d25\uff0c\u9996\u5148\u786e\u5b9a\u8fd9\u4e2a Promise \u6709\u6ca1\u6709\u901a\u8fc7 catch \u65b9\u6cd5\u89c4\u5b9a reject \u56de\u8c03\u3002\u5982\u679c\u6709\uff0c await \u8fd4\u56de catch \u4e4b\u4e2d\u56de\u8c03\u51fd\u6570\u7684\u8fd4\u56de\u503c\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u629b\u51fa Uncaught Failure \u9519\u8bef\u3002 \u6bd4\u5982\u8bf4\uff1a 1 2 3 4 5 6 7 8 9 10 let a = await 1 ; a ; // 1 let b = await new Promise (( resolve , reject ) => { let succeeded = Math . random () > 0.2 ; if ( succeeded ) resolve ( \"Success\" ); else reject ( \"Failure\" ); }) . catch (( err ) => \"Error \" + err ); b ; // Maybe \"Success\", maybe \"Error Failure\" async, await \u5173\u952e\u5b57\u5b9e\u9645\u4e0a\u662f\u9488\u5bf9 then \u94fe\u53ef\u80fd\u8fc7\u957f\u5bfc\u81f4\u53ef\u8bfb\u6027\u964d\u4f4e\u7684\u95ee\u9898\u800c\u63d0\u51fa\u7684\u3002\u6211\u4eec\u73b0\u5728\u8fd8\u662f\u8003\u8651\u4f9d\u6b21\u4ece\u591a\u4e2a\u6570\u636e\u6e90\u83b7\u53d6\u6570\u636e\u7684\u95ee\u9898\uff0c\u4e8b\u5b9e\u4e0a\u901a\u8fc7 async, await \u5173\u952e\u5b57\uff0c\u8fd9\u4e2a\u5f02\u6b65\u8fc7\u7a0b\u751a\u81f3\u53ef\u4ee5\u5199\u5f97\u5f88\u50cf\u540c\u6b65\u4ee3\u7801\uff1a 1 2 3 4 5 6 const fetchData = async () => { let data_1 = await fetchData_1 ( initData ); let data_2 = await fetchData_2 ( data_1 ); let data_3 = await fetchData_3 ( data_2 ); return [ data_1 , data_2 , data_3 ]; } \u8fd9\u91cc\u7684 fetchData \u7cfb\u5217\u51fd\u6570\u5747\u662f\u5f02\u6b65\u51fd\u6570\u3002 \u53ef\u4ee5\u53d1\u73b0\u8fd9\u79cd\u5199\u6cd5\u548c\u540c\u6b65\u4ee3\u7801\u51e0\u4e4e\u6ca1\u6709\u4ec0\u4e48\u5dee\u522b\uff0c\u53ef\u8bfb\u6027\u6bd4 then \u94fe\u597d\u4e00\u4e9b\uff0c\u66f4\u662f\u6bd4\u56de\u8c03\u51fd\u6570\u5199\u6cd5\u597d\u5f88\u591a\u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u5176\u89e3\u51b3\u4e86\u4e0d\u5b9a\u957f then \u94fe\u7684\u95ee\u9898\u3002\u5982\u679c\u8981\u4f9d\u6b21\u62c9\u53d6\u6570\u636e\u7684\u4fe1\u606f\u6e90\u4e2a\u6570\u4e0d\u662f\u56fa\u5b9a\u7684\uff0c\u800c\u662f\u901a\u8fc7\u53d8\u91cf\u6307\u5b9a\uff0c\u90a3\u4e48 then \u94fe\u5c31\u4e0d\u53ef\u7528\u4e86\uff0c\u56e0\u4e3a\u6211\u4eec\u4e0d\u77e5\u9053\u5177\u4f53\u8981\u5199\u591a\u5c11\u4e2a then \u3002\u4f46\u662f\u901a\u8fc7 async, await \u7ed3\u5408 for \u5faa\u73af\u5c31\u53ef\u4ee5\u89e3\u51b3\u95ee\u9898\u3002 \u4f46\u662f async, await \u5e26\u6765\u7684\u4e89\u8bae\u4e5f\u4e0d\u5c0f\uff0c\u6700\u5927\u7684\u5371\u9669\u662f\u5f02\u6b65\u4f20\u67d3\u3002 await \u5173\u952e\u5b57\u7684\u4f7f\u7528\u6709\u4e00\u4e2a\u8981\u6c42\uff0c\u4e5f\u5c31\u662f\u5982\u679c\u5728\u51fd\u6570\u4e2d\u4f7f\u7528\uff0c\u90a3\u4e48\u8fd9\u4e2a\u51fd\u6570\u5fc5\u987b\u662f\u5f02\u6b65\u7684\u3002\u539f\u56e0\u4e5f\u662f\u597d\u7406\u89e3\u7684\uff0c\u56e0\u4e3a await \u4f1a\u963b\u585e\u4ee3\u7801\u8fd0\u884c\uff0c\u5982\u679c\u5728\u4e3b\u7ebf\u7a0b\u4e0a\u963b\u585e\uff0c\u5219\u4f1a\u5bfc\u81f4\u9875\u9762\u5361\u987f\uff0c\u8fd9\u672c\u6765\u5c31\u548c\u5f02\u6b65\u7684\u521d\u8877\u77db\u76fe\u3002 \u90a3\u4e48\u8fdb\u4e00\u6b65\uff0c\u8c03\u7528\u4e86\u8fd9\u4e2a\u51fd\u6570\u7684\u5916\u5c42\u51fd\u6570\u4e2d\u7684\u8bed\u53e5\u4e3a\u4e86\u9632\u6b62\u5f02\u6b65\u53ef\u80fd\u5e26\u6765\u7684\u654f\u611f\u53d8\u91cf\u95ee\u9898\uff08\u548c Promise \u95ee\u9898\u7c7b\u4f3c\uff0c\u5f02\u6b65\u51fd\u6570\u5982\u679c\u4fee\u6539\u4e86\u67d0\u4e00\u4e2a\u53d8\u91cf\uff0c\u8fd9\u4e2a\u53d8\u91cf\u5f88\u6709\u53ef\u80fd\u4e0d\u4f1a\u88ab\u53ca\u65f6\u4fee\u6539\uff09\uff0c\u5916\u5c42\u51fd\u6570\u4e5f\u5f88\u6709\u53ef\u80fd\u7ed9\u8fd9\u4e2a\u51fd\u6570\u52a0\u4e0a await \uff0c\u8fd9\u53c8\u4f1a\u5bfc\u81f4\u5916\u5c42\u51fd\u6570\u4e0d\u53ef\u6297\u529b\u5730\u53d8\u4e3a\u5f02\u6b65\u51fd\u6570\u3002\u8fd9\u79cd\u4f20\u67d3\u4f1a\u5bfc\u81f4\u6574\u7247\u51fd\u6570\u53d8\u4e3a\u5f02\u6b65\uff0c\u4ece\u800c\u8ba9\u903b\u8f91\u53d8\u5f97\u6df7\u4e71\u3002 \u53e6\u5916\uff0c async, await \u5173\u952e\u5b57\u4f1a\u964d\u4f4e\u6211\u4eec\u5bf9\u963b\u585e\u7684\u654f\u611f\uff0c\u4ece\u800c\u7f16\u5199\u51fa\u4e0d\u5fc5\u8981\u7684\u963b\u585e\u548c\u4e32\u884c\u4ee3\u7801\u3002\u5b9e\u9645\u4e0a\uff0c async, await \u53ea\u662f\u8ba9 \u4f9d\u6b21 \u62c9\u53d6\u4fe1\u606f\u7684\u4ee3\u7801\u53d8\u5f97\u7b80\u6d01\uff0c\u5bf9\u4e8e\u672c\u5c31\u53ef\u4ee5\u591a\u5e76\u53d1\u7684\u4fe1\u606f\u62c9\u53d6\uff0c\u53cd\u800c\u4f1a\u6709\u8ba9\u6211\u4eec\u5199\u51fa\u4e0d\u5fc5\u8981\u7684\u4e32\u884c\u4ee3\u7801\u7684\u53ef\u80fd\uff0c\u4ece\u800c\u964d\u4f4e\u4ee3\u7801\u6548\u7387\uff1a 1 2 3 4 const fetchData = async () => { let data_1 = await fetchData_1 (); let data_2 = await fetchData_2 (); } \u5982\u679c data_1, data_2 \u672c\u5c31\u53ef\u4ee5\u5e76\u53d1\u83b7\u53d6\uff0c\u8fd9\u6837\u7684\u5199\u6cd5\u53cd\u800c\u4f1a\u964d\u4f4e\u6548\u7387\uff0c\u56e0\u4e3a\u8fd9\u6837\u4ee3\u7801\u7684\u5b9e\u9645\u542b\u4e49\u662f\u4e32\u884c\u5730\u83b7\u53d6\u6570\u636e\u3002\u771f\u6b63\u7684\u5199\u6cd5\u5e94\u8be5\u662f\uff1a 1 2 3 4 5 6 const fetchData = async () => { let data_1_promise = fetchData_1 (); let data_2_promise = fetchData_2 (); let data_1 = await data_1_promise ; let data_2 = await data_2_promise ; } \u53ea\u6709\u5148\u83b7\u53d6\u4e24\u4e2a\u5f02\u6b65\u7684 Promise \u5bf9\u8c61\uff0c\u540c\u65f6\u6d3e\u9063\u51fa\u4e24\u4e2a\u5f02\u6b65\u540e\u540e\u5206\u522b await \u624d\u80fd\u5b9e\u73b0\u5e76\u53d1\u3002 \u4f46\u662f async, await \u7684\u76ee\u7684\u672c\u6765\u5c31\u662f\u7528\u4e8e\u9690\u85cf\u6389 Promise \u7684\u5b58\u5728\uff0c\u5c06\u5f02\u6b65\u4ee3\u7801\u5199\u6210\u540c\u6b65\u7684\u683c\u5f0f\uff0c\u8fd9\u6837\u505a\u5176\u5b9e\u8fd8\u4e0d\u5982\u76f4\u63a5\u628a Promise \u5199\u51fa\u6765\u3002 \u6b64\u5916\uff0c\u5bf9\u4e8e\u591a\u4f9d\u8d56\u95ee\u9898\uff0c async, await \u5173\u952e\u5b57\u5e76\u6ca1\u6709\u89e3\u51b3\uff0c\u56e0\u4e3a await \u4e00\u6b21\u53ea\u80fd\u7b49\u5f85\u4e00\u4e2a\u5f02\u6b65\u3002\u8fd9\u4e2a\u65f6\u5019\u8fd8\u662f\u4e0d\u53ef\u907f\u514d\u5730\u9700\u8981\u4f7f\u7528 Promise \u5bf9\u8c61\u3002 \u8be5\u5982\u4f55\u5199\u597d\u5f02\u6b65\u4ee3\u7801 \u73b0\u4ee3\u7684 JavaScript \u5df2\u7ecf\u5c06\u5f02\u6b65\u64cd\u4f5c\u5c01\u88c5\u5f97\u8db3\u591f\u6613\u7528\uff0c\u501f\u52a9 Promise, async, await \u5c31\u53ef\u4ee5\u5199\u51fa\u5f88\u660e\u6670\u5730\u5f02\u6b65\u4ee3\u7801\u3002 \u4f46\u662f\u6211\u4eec\u5728\u7f16\u5199\u7684\u65f6\u5019\u4e00\u5b9a\u9700\u8981\u6ce8\u610f\u81ea\u5df1\u5199\u7684\u4e0d\u662f\u540c\u6b65\u4ee3\u7801\u800c\u662f\u5f02\u6b65\u4ee3\u7801\uff0c\u4ee5\u514d\u51fa\u73b0\u95ee\u9898\u3002\u6b64\u5916\uff0c\u5e94\u5f53\u6839\u636e\u5b9e\u9645\u5e94\u7528\u8981\u6c42\u5408\u7406\u9009\u62e9\u76f4\u63a5\u4f7f\u7528 Promise \u5bf9\u8c61\u8fd8\u662f async, await \u5173\u952e\u5b57\u3002 \u5b9e\u9645\u4e0a\u6587\u6863\u80fd\u6559\u7ed9\u8bfb\u8005\u7684\u5f88\u6709\u9650\uff0c\u7f16\u8005\u8fd8\u662f\u5e0c\u671b\u5927\u5bb6\u591a\u53bb\u7f16\u5199\u771f\u5b9e\u7684\u5de5\u7a0b\u4ee3\u7801\u4ee5\u771f\u6b63\u638c\u63e1 JavaScript \u5f02\u6b65\u3002","title":"JavaScript \u7684\u5f02\u6b65"},{"location":"languages/javascript/async/#javascript","text":"\u5f02\u6b65\u7684\u5fc5\u8981\u6027 \u6b63\u5e38\u6211\u4eec\u7f16\u5199\u7684\u4ee3\u7801\u90fd\u662f\u540c\u6b65\u4ee3\u7801\uff0c\u4e5f\u5c31\u662f\u8bf4\u4ee3\u7801\u6267\u884c\u7684\u987a\u5e8f\u662f\u4ece\u4e0a\u5230\u4e0b\uff0c\u4e0a\u9762\u7684\u64cd\u4f5c\u8fd8\u6ca1\u6709\u6267\u884c\u5b8c\uff0c\u4e0b\u9762\u7684\u64cd\u4f5c\u5c31\u4e0d\u4f1a\u88ab\u6267\u884c\u5230\u3002\u4f46\u662f\u5728\u524d\u7aef\u4ee3\u7801\u4e4b\u4e2d\uff0c\u6211\u4eec\u4f1a\u7ecf\u5e38\u5411\u540e\u7aef\u6216\u8005\u7f51\u7edc\u8bf7\u6c42\u6570\u636e\uff0c\u5373\u4f7f\u73b0\u5728\u7f51\u7edc\u5df2\u7ecf\u5f88\u5feb\uff0c\u5728\u8bf7\u6c42\u6570\u636e\u91cf\u8f83\u5927\u7684\u65f6\u5019\uff0c\u8bf7\u6c42\u6570\u636e\u7684\u64cd\u4f5c\u4f9d\u7136\u4f1a\u5360\u636e\u76f8\u5f53\u957f\u7684\u65f6\u95f4\u3002\u5982\u679c\u6211\u4eec\u8fd8\u4f9d\u7136\u4f7f\u7528\u540c\u6b65\u4ee3\u7801\uff0c\u90a3\u4e48\u5c31\u4f1a\u5bfc\u81f4\u9875\u9762\u5361\u987f\uff08\u56e0\u4e3a\u8fd9\u4e2a\u65f6\u5019\u4ee3\u7801\u5361\u987f\u5728\u4e86\u8bf7\u6c42\u6570\u636e\u8fd9\u4e00\u6b65\uff09\u3002 \u53e6\u5916\u4e00\u65b9\u9762\uff0c\u6709\u4e9b\u64cd\u4f5c\u5b8c\u5168\u53ef\u4ee5\u5728\u524d\u7aef\u8bf7\u6c42\u9875\u9762\u7684\u65f6\u5019\u5b8c\u6210\uff0c\u6bd4\u5982\u8bf4\u6e32\u67d3\u51fa\u9875\u9762\u7684\u6a21\u677f\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u6570\u636e\u5b8c\u5168\u83b7\u53d6\u4e4b\u540e\u518d\u628a\u8fd9\u4e9b\u6570\u636e\u586b\u5165\u9875\u9762\u3002 \u603b\u800c\u8a00\u4e4b\uff0c\u524d\u7aef\u9700\u8981\u4f7f\u7528\u5f02\u6b65\u4ee3\u7801\uff0c\u9700\u8981\u5141\u8bb8\u591a\u6bb5\u4ee3\u7801\u540c\u65f6\u6267\u884c\u800c\u975e\u4e25\u683c\u6309\u7167\u987a\u5e8f\u4e00\u6b65\u6b65\u8d70\u3002\u8fd9\u79cd\u5141\u8bb8\u591a\u6bb5\u4ee3\u7801\u540c\u65f6\u6267\u884c\u7684\u4ee3\u7801\u5c31\u662f \u5f02\u6b65\uff08\u82f1\u8bed\uff1aAsynchronous\uff09 \u3002","title":"JavaScript \u7684\u5f02\u6b65"},{"location":"languages/javascript/async/#_1","text":"\u9996\u5148\u6211\u4eec\u9700\u8981\u660e\u786e\uff0cJavaScript \u662f\u5355\u7ebf\u7a0b\u8bed\u8a00\uff0c\u8fd9\u4e5f\u5c31\u4ee3\u8868 JavaScript \u5e76\u4e0d\u80fd\u50cf C++ \u6216\u8005 Java \u90a3\u6837\u5b9e\u73b0\u591a\u7ebf\u7a0b\u5e76\u53d1\u7684\u5f02\u6b65\u3002 \u4e3a\u4f55\u7981\u7528\u591a\u7ebf\u7a0b JavaScript \u7684\u8bbe\u8ba1\u521d\u8877\u5c31\u662f\u6d4f\u89c8\u5668\u7684\u811a\u672c\u8bed\u8a00\uff0c\u5176\u4f5c\u7528\u5c31\u662f\u4fee\u6539\u6587\u6863\u6811\u3002\u5982\u679c JavaScript \u5141\u8bb8\u591a\u7ebf\u7a0b\uff0c\u90a3\u4e48\u5176\u5f88\u6709\u53ef\u80fd\u56e0\u4e3a\u591a\u7ebf\u7a0b\u5e76\u53d1\u4fee\u6539\u6587\u6863\u6811\u5bfc\u81f4\u51b2\u7a81\u3002 \u4f46 JavaScript \u4f7f\u7528\u4e86\u53e6\u5916\u4e00\u79cd\u65b9\u5f0f\u5b9e\u73b0\u5f02\u6b65\uff0c\u4e5f\u5c31\u662f\u4e8b\u4ef6\u5faa\u73af\u548c\u6d88\u606f\u961f\u5217\u673a\u5236\u3002 \u5728\u8be6\u7ec6\u53d9\u8ff0\u8fd9\u4e2a\u673a\u5236\u4e4b\u524d\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u91cd\u65b0\u8ba4\u8bc6\u4e00\u4e0b\u56de\u8c03\u51fd\u6570\u3002\u5f53\u4e3b\u7ebf\u7a0b\u6d3e\u9063\u51fa\u4e00\u4e2a\u5f02\u6b65\u8fc7\u7a0b\uff0c\u6bd4\u5982\u8bf4\u89e6\u53d1\u4e86\u7f51\u7edc\u8bf7\u6c42\uff0c\u4e00\u822c\u800c\u8a00\u9700\u8981\u8bbe\u5b9a\u4e00\u4e2a\u8fd9\u4e2a\u5f02\u6b65\u8fc7\u7a0b\u7684\u56de\u8c03\u51fd\u6570\u3002\u8fd9\u4e2a\u56de\u8c03\u51fd\u6570\u63cf\u8ff0\u7684\uff0c\u662f\u8fd9\u4e2a\u5f02\u6b65\u8fc7\u7a0b\u6267\u884c\u5b8c\u6bd5\u540e\u9700\u8981\u505a\u7684\u4e8b\u60c5\u3002 \u9700\u8981\u5b9a\u4e49\u8fd9\u4e2a\u56de\u8c03\u51fd\u6570\u7684\u539f\u56e0\u4e5f\u5f88\u7b80\u5355\uff0c\u4e3b\u7ebf\u7a0b\u6ca1\u6709\u529e\u6cd5\u4e86\u89e3\u5230\u5f02\u6b65\u8fc7\u7a0b\u4f55\u65f6\u624d\u80fd\u7ed3\u675f\uff0c\u751a\u81f3\u5e76\u4e0d\u6e05\u695a\u8fd9\u4e2a\u8fc7\u7a0b\u80fd\u5426\u7ed3\u675f\u3002\u5728\u8fd9\u6837\u7684\u60c5\u51b5\u4e0b\uff0c\u4e3b\u7ebf\u7a0b\u5b8c\u5168\u4e0d\u80fd\u77e5\u6653\u4ec0\u4e48\u65f6\u5019\u505a\u8fd9\u4e2a\u5f02\u6b65\u8fc7\u7a0b\u7684\u5584\u540e\u5de5\u4f5c\uff08\u6bd4\u5982\u8bf4\u4ece\u7f51\u7edc\u83b7\u53d6\u6570\u636e\u540e\uff0c\u4e3b\u7ebf\u7a0b\u5e94\u8be5\u628a\u8fd9\u4e9b\u6570\u636e\u52a0\u8f7d\u5230\u9875\u9762\u4e0a\uff09\u3002\u90a3\u4e48\u4e0d\u5982\u5b9a\u4e49\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u5177\u4f53\u4ec0\u4e48\u65f6\u5019\u8c03\u7528\uff0c\u6839\u636e\u5f02\u6b65\u8fc7\u7a0b\u6765\u786e\u5b9a\u3002 \u56de\u5230\u4e8b\u4ef6\u5faa\u73af\u548c\u6d88\u606f\u961f\u5217\u3002JavaScript \u7684\u4e3b\u7ebf\u7a0b\u4e0a\u4f1a\u6709\u4e00\u4e2a\u6b7b\u5faa\u73af\uff0c\u79f0\u4e3a \u4e8b\u4ef6\u5faa\u73af \u3002\u5176\u6267\u884c\u903b\u8f91\u4e3a\u5728\u7a7a\u95f2\u7684\u65f6\u5019\u4e0d\u65ad\u68c0\u67e5\u6d88\u606f\u961f\u5217\u662f\u5426\u6709\u6d88\u606f\uff0c\u5982\u679c\u6709\uff0c\u5219\u6267\u884c\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u5219\u7b49\u5f85\u3002\u800c\u7a7a\u95f2\u7684\u542b\u4e49\u662f\u5f53\u524d\u51fd\u6570\u6808\u7a7a\u3002 \u800c\u9700\u8981\u5f02\u6b65\u6267\u884c\u7684\u4ee3\u7801\u5219\u4f1a\u8d1f\u8f7d\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u5f53\u5f02\u6b65\u8fc7\u7a0b\u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u5219\u4f1a\u628a\u56de\u8c03\u51fd\u6570\u653e\u5165\u6d88\u606f\u961f\u5217\u672b\u5c3e\u3002\u5f53\u4e3b\u7ebf\u7a0b\u7a7a\u95f2\u4e14\u68c0\u6d4b\u5230\u6d88\u606f\u961f\u5217\u4e4b\u4e2d\u6709\u56de\u8c03\u51fd\u6570\u7684\u65f6\u5019\uff0c\u4e3b\u7ebf\u7a0b\u5c31\u4f1a\u6267\u884c\u56de\u8c03\u51fd\u6570\uff0c\u505a\u597d\u5f02\u6b65\u8fc7\u7a0b\u7684\u5584\u540e\u5de5\u4f5c\u3002 \u901a\u8fc7\u8fd9\u6837\u7684\u673a\u5236\uff0cJavaScript \u4f9d\u7136\u662f\u5355\u7ebf\u7a0b\u7684\uff0c\u5bf9\u6587\u6863\u6811\u7684\u64cd\u4f5c\u4f9d\u7136\u662f\u540c\u6b65\u7684\u3001\u4e0d\u4f1a\u51fa\u73b0\u51b2\u7a81\u7684\u3002\u4f46\u4f9d\u9760\u8fd9\u4e2a\u673a\u5236\uff0cJavaScript \u5b9e\u73b0\u4e86\u5f02\u6b65\u3002 \u5b8f\u6d88\u606f\u961f\u5217\u548c\u5fae\u6d88\u606f\u961f\u5217 \u5b9e\u9645\u4e0a JavaScript \u7684\u6d88\u606f\u961f\u5217\u6709\u4e24\u79cd\uff0c\u5206\u4e3a\u5b8f\u6d88\u606f\u961f\u5217\u548c\u5fae\u6d88\u606f\u961f\u5217\u3002 setTimeout, setInterval \u8fd9\u7c7b\u5f15\u53d1\u7684\u56de\u8c03\u4f1a\u653e\u5165\u5b8f\u6d88\u606f\u961f\u5217\uff0c\u800c Promise \u7684 then \u4f1a\u653e\u5165\u5fae\u6d88\u606f\u961f\u5217\u3002 JavaScript \u7684\u4e8b\u4ef6\u5faa\u73af\u5728\u67e5\u770b\u6d88\u606f\u961f\u5217\u7684\u65f6\u5019\uff0c\u4f1a\u9996\u5148\u67e5\u770b\u5fae\u6d88\u606f\u961f\u5217\uff0c\u5982\u679c\u5b58\u5728\u56de\u8c03\u5219 \u6267\u884c\u6bcf\u4e00\u4e2a\u56de\u8c03\u76f4\u5230\u5fae\u6d88\u606f\u961f\u5217\u6e05\u7a7a \u3002\u4e4b\u540e\u518d\u53bb\u67e5\u770b\u5b8f\u6d88\u606f\u961f\u5217\uff0c\u5e76\u4e14 \u53ea\u6267\u884c\u961f\u5217\u7b2c\u4e00\u4e2a\u56de\u8c03 \u3002 \u73b0\u5728\u6211\u4eec\u7f16\u5199\u4e00\u4e2a\u5f02\u6b65\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u4f1a\u7528\u5230 setTimeout \u51fd\u6570\uff0c\u5176\u63a5\u53d7\u4e24\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3a\u591a\u957f\u65f6\u95f4\u540e\u6267\u884c\u4e0a\u8ff0\u56de\u8c03\u51fd\u6570\u3002\u6bd4\u5982\u4e0b\u5217\u4ee3\u7801\uff1a 1 2 3 setTimeout (() => { console . log ( \"1s has passed!\" ); }, 1000 ); \u8fd9\u4e2a\u4ee3\u7801\u5c06\u4f1a\u5ef6\u8fdf\u4e00\u79d2\u540e\u8f93\u51fa \"1s has passed!\" \u3002\u8fd9\u4e2a\u51fd\u6570\u7684\u7b49\u5f85\u8fc7\u7a0b\u4f1a\u5f02\u6b65\u4e8e\u4e3b\u7ebf\u7a0b\u6267\u884c\uff0c\u800c\u5176\u901a\u8fc7\u7b2c\u4e00\u4e2a\u53c2\u6570\u63a5\u53d7\u7684\u56de\u8c03\u5c31\u4f1a\u5728\u7b49\u5f85\u5b8c\u6bd5\u540e\u653e\u5165\u6d88\u606f\u961f\u5217\u3002\u73b0\u5728\u6211\u4eec\u5229\u7528\u8fd9\u4e2a\u51fd\u6570\u5199\u51fa\u4e00\u4e2a\u9700\u8981\u8017\u65f6\u7684\u64cd\u4f5c\uff0c\u4ee5\u6b64\u6a21\u62df\u7f51\u7edc\u8bf7\u6c42\uff1a 1 2 3 4 5 const fetchData = () => { setTimeout (() => { console . log ( \"Data got!\" ); }, 1000 ); }; \u8fd9\u4e2a\u51fd\u6570\u8c03\u7528\u540e\u4f1a\u7acb\u523b\u8fd4\u56de\uff0c\u56e0\u4e3a\u5b83\u7684\u4efb\u52a1\u662f\u6d3e\u9063\u4e00\u4e2a\u5f02\u6b65\u8fc7\u7a0b\uff0c\u800c\u4e0d\u8d1f\u8d23\u7b49\u5f85\u5f02\u6b65\u7ed3\u675f\u548c\u5584\u540e\uff0c\u5584\u540e\u5de5\u4f5c\u5e94\u8be5\u5199\u5728\u56de\u8c03\u51fd\u6570\u4e4b\u4e2d\u7b49\u5f85\u4e3b\u7ebf\u7a0b\u6267\u884c\u3002 \u5728\u7b49\u5f85\u5f02\u6b65\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e3b\u7ebf\u7a0b\u53ef\u4ee5\u5b8c\u6210\u5176\u4ed6\u7684\u4efb\u52a1\uff1a 1 2 3 4 5 6 7 8 9 const fetchData = () => { setTimeout (() => { console . log ( \"Data get!\" ); }, 1000 ); }; fetchData (); // Dispatch async task console . log ( \"Rendering template...\" ); console . log ( \"Loading local storage...\" ); // Main thread doing other tasks","title":"\u4e8b\u4ef6\u5faa\u73af\u4e0e\u6d88\u606f\u961f\u5217\u673a\u5236"},{"location":"languages/javascript/async/#_2","text":"\u56de\u8c03\u51fd\u6570\u4e0d\u9700\u8981\u5f15\u5165\u5f88\u591a\u7684\u5176\u4ed6\u8bed\u6cd5\u5c31\u53ef\u4ee5\u65b9\u4fbf\u5730\u4f7f\u7528\u5230\u5f02\u6b65\u4e4b\u4e2d\uff0c\u4f46\u662f\u5176\u95ee\u9898\u4e5f\u662f\u5f88\u7a81\u51fa\u7684\u3002\u56de\u8c03\u51fd\u6570\u672c\u8eab\u53ef\u8bfb\u6027\u5c31\u4e0d\u662f\u5f88\u597d\uff0c\u800c\u4e14\u4e5f\u5e76\u4e0d\u80fd\u5f88\u597d\u8d34\u5408\u6211\u4eec\u7684\u76f4\u89c2\u601d\u7ef4\u903b\u8f91\u3002\u800c\u5176\u6700\u5927\u7684\u95ee\u9898\u5c31\u662f\u53ef\u80fd\u9020\u6210\u56de\u8c03\u51fd\u6570\u8fc7\u5206\u5d4c\u5957\uff0c\u5bfc\u81f4\u4ee3\u7801\u96be\u4ee5\u7ef4\u62a4\u3002\u8fd9\u4e00\u822c\u88ab\u79f0\u4e3a \u56de\u8c03\u5730\u72f1 \u3002 \u771f\u6b63\u7684\u5f02\u6b65\u4e1a\u52a1\u903b\u8f91\u53ef\u80fd\u5e76\u4e0d\u4f1a\u5f88\u5355\u4e00\uff0c\u6bd4\u5982\u8bf4\u524d\u7aef\u8981\u4ece\u591a\u4e2a\u6570\u636e\u6e90\u52a0\u8f7d\u6570\u636e\uff0c\u4f46\u662f\u540e\u4e00\u4e2a\u6570\u636e\u7684\u52a0\u8f7d\u9700\u8981\u4f9d\u9760\u524d\u4e00\u4e2a\u6570\u636e\u7684\u7ed3\u679c\u3002\u8fd9\u6837\u5c31\u4e0d\u80fd\u5728\u4e3b\u7ebf\u7a0b\u4e2d\u540c\u65f6\u6d3e\u9063\u591a\u4e2a\u5f02\u6b65\u8fc7\u7a0b\uff0c\u800c\u5fc5\u987b\u5728\u524d\u4e00\u4e2a\u5f02\u6b65\u8fc7\u7a0b\u7684\u56de\u8c03\u4e4b\u4e2d\u6d3e\u9063\u4e0b\u4e00\u4e2a\u5f02\u6b65\u8fc7\u7a0b\u3002\u8fd9\u91cc\u6211\u4eec\u4f9d\u7136\u7528 setTimeout \u6765\u6a21\u62df\u8017\u65f6\u64cd\u4f5c\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 setTimeout (() => { // Get data #1 console . log ( \"Data #1 get!\" ); setTimeout (() => { // Get data #2 console . log ( \"Data #2 get!\" ); setTimeout (() => { // Get data #3 console . log ( \"Data #3 get!\" ); setTimeout (() => { // Get data #4 console . log ( \"Data #4 get!\" ); }, 1000 ); }, 1000 ); }, 1000 ); }, 1000 ); \u8fd9\u6837\u7684\u4ee3\u7801\u5f88\u96be\u9605\u8bfb\uff0c\u4e5f\u5f88\u96be\u7ef4\u62a4\uff0c\u800c\u5b9e\u9645\u4e0a\u7684\u4e1a\u52a1\u903b\u8f91\u4e5f\u4e0d\u53ef\u80fd\u662f setTimeout \u8fd9\u6837\u7b80\u5355\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5904\u7406\u5f02\u6b65\u5f02\u5e38\u7684\u60c5\u51b5\uff0c\u5982\u679c\u53d1\u751f\u9519\u8bef\uff0c\u5c31\u5e94\u5f53\u7acb\u523b\u8df3\u51fa\u5f02\u6b65\uff0c\u4ea4\u7531\u4e3b\u7ebf\u7a0b\u505a\u5f02\u5e38\u5904\u7406\u3002\u800c\u663e\u7136\uff0c\u6211\u4eec\u5f88\u96be\u7ed9\u8fd9\u6837\u7684\u4ee3\u7801\u6dfb\u52a0\u5f02\u5e38\u5904\u7406\u529f\u80fd\u3002","title":"\u56de\u8c03\u51fd\u6570\u7684\u7f3a\u9677"},{"location":"languages/javascript/async/#promise","text":"\u4e3a\u4e86\u89e3\u51b3\u56de\u8c03\u51fd\u6570\u4e0d\u76f4\u89c2\u7684\u95ee\u9898\uff0c\u65b0\u7248\u672c\u7684 JavaScript \u8bbe\u7acb\u4e86 Promise \u5bf9\u8c61\uff0c\u53ef\u4ee5\u8bf4\u8fd9\u4e2a\u5bf9\u8c61\u5b8c\u5168\u6539\u53d8\u4e86 JavaScript \u5f02\u6b65\u4ee3\u7801\u7f16\u5199\u7684\u89c4\u8303\u3002 \u521b\u5efa\u4e00\u4e2a Promise \u5bf9\u8c61\u53ef\u4ee5\u4f7f\u7528\u5176\u6784\u9020\u51fd\u6570\uff1a 1 2 3 4 5 6 7 8 9 10 new Promise (( resolve , reject ) => { let asyncSucceeded = Math . random () > 0.2 ; setTimeout (() => { if ( asyncSucceeded ) { resolve ( \"Async succeeded!\" ); } else { reject ( \"Async failed!\" ); } }, 1000 ); }); \u5176\u6784\u9020\u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u8fd9\u4e2a\u56de\u8c03\u51fd\u6570\u7684\u4e24\u4e2a\u53c2\u6570\u662f\u53e6\u5916\u7684\u4e24\u4e2a\u56de\u8c03\u51fd\u6570\u3002 resolve \u4ee3\u8868\u5f02\u6b65\u6210\u529f\u7684\u56de\u8c03\u51fd\u6570\uff0c reject \u4ee3\u8868\u5f02\u6b65\u5931\u8d25\u7684\u56de\u8c03\u51fd\u6570\u3002\u800c\u6784\u9020\u51fd\u6570\u63a5\u53d7\u7684\u56de\u8c03\u51fd\u6570\u7684\u51fd\u6570\u4f53\u5219\u662f\u9700\u8981\u6267\u884c\u7684\u8017\u65f6\u64cd\u4f5c\u3002 \u4e3a\u4ec0\u4e48\u8981\u53eb\u8fd9\u4e2a\u540d\u5b57\uff0c\u5b83\u7684\u6784\u9020\u51fd\u6570\u4e3a\u4ec0\u4e48\u957f\u6210\u8fd9\u6837 Promise \u7684\u4e2d\u6587\u4e00\u822c\u662f\u201c\u627f\u8bfa\u201d\uff0c\u90a3\u5f02\u6b65\u548c\u627f\u8bfa\u7a76\u7adf\u6709\u4ec0\u4e48\u5173\u7cfb\uff1f \u6211\u4eec\u6765\u8bbe\u60f3\u8fd9\u6837\u7684\u4e00\u4e2a\u60c5\u666f\u3002\u5c0f\u660e\u662f\u4e00\u4f4d\u4e94\u5e74\u7ea7\u7684\u5c0f\u5b66\u751f\uff0c\u4ed6\u7684\u5988\u5988\u4e3a\u4e86\u8ba9\u4ed6\u597d\u597d\u5b66\u4e60\uff0c \u627f\u8bfa \u5c0f\u660e\u5982\u679c\u4ed6\u671f\u672b\u8003\u8bd5\u8003\u5230 100 \u5206\uff0c\u5c31\u7ed9\u4ed6\u4e70\u65b0\u624b\u673a\u3002\u800c\u7b49\u5f85\u671f\u672b\u8003\u8bd5\u51fa\u6210\u7ee9\uff0c\u5c31\u662f\u5f02\u6b65\u8fc7\u7a0b\u3002\u5728\u8fd9\u6bb5\u65f6\u95f4\u5185\uff0c\u4f5c\u4e3a\u4e3b\u7ebf\u7a0b\u7684\u5c0f\u660e\u7684\u5988\u5988\u53ef\u4ee5\u53bb\u505a\u5176\u4ed6\u7684\u5de5\u4f5c\uff0c\u800c\u8d1f\u8d23\u6267\u884c\u5f02\u6b65\u8fc7\u7a0b\u7684\u5c0f\u660e\u5219\u8981\u597d\u597d\u5b66\u4e60\u3002 \u7b49\u5230\u5f02\u6b65\u8fc7\u7a0b\u6267\u884c\u5b8c\u6bd5\uff0c\u4e5f\u5c31\u662f\u671f\u672b\u8003\u8bd5\u51fa\u6210\u7ee9\u4e86\uff0c\u5c31\u5230\u4e86 \u627f\u8bfa \u5151\u73b0\u7684\u65f6\u5019\u4e86\u3002\u5c0f\u660e\u548c\u5988\u5988\u5c31\u4f1a\u6838\u5bf9\u5c0f\u660e\u7684\u5b66\u4e60\u6210\u679c\uff08\u5f02\u6b65\u8fc7\u7a0b\u7684\u6267\u884c\u72b6\u6001\uff09\uff0c\u5982\u679c\u5c0f\u660e\u8003\u5230\u4e86 100 \u5206\uff08\u5f02\u6b65\u8fc7\u7a0b\u6267\u884c\u6210\u529f\uff09\uff0c\u4f5c\u4e3a\u4e3b\u7ebf\u7a0b\u7684\u5c0f\u660e\u7684\u5988\u5988\u5c31\u4f1a\u53bb\u4e70\u65b0\u624b\u673a\u3002\u800c\u5982\u679c\u5c0f\u660e\u6ca1\u8003\u5230 100 \u5206\uff08\u5f02\u6b65\u8fc7\u7a0b\u6267\u884c\u5931\u8d25\uff09\uff0c\u5c0f\u660e\u7684\u5988\u5988\u5c31\u4e0d\u4f1a\u4e70\u65b0\u624b\u673a\u3002\u65e0\u8bba\u4e70\u4e0d\u4e70\uff0c\u4f5c\u4e3a\u4e3b\u7ebf\u7a0b\u7684\u5c0f\u660e\u7684\u5988\u5988\u90fd\u505a\u597d\u4e86\u5f02\u6b65\u8fc7\u7a0b\u7684\u5584\u540e\u5de5\u4f5c\u3002 \u6362\u5230\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u60c5\u666f\u3002\u4e00\u4e2a \u627f\u8bfa \u8981\u6210\u7acb\uff0c\u5c31\u9700\u8981\u89c4\u5b9a\u597d\uff0c\u5f02\u6b65\u8fc7\u7a0b\u6267\u884c\u5b8c\u6bd5\uff0c\u4e3b\u7ebf\u7a0b\u9700\u8981\u505a\u4ec0\u4e48\uff0c\u5176\u5b9e\u8fd9\u5c31\u662f\u6307\u6d3e\u5f02\u6b65\u8fc7\u7a0b\u7684\u56de\u8c03\u51fd\u6570\u3002\u5728 Promise \u7684\u6784\u9020\u51fd\u6570\u4e4b\u4e2d\uff0c resolve \u5b9e\u9645\u4e0a\u5c31\u662f\u201c\u8003\u5230 100 \u5206\uff0c\u5c0f\u660e\u7684\u5988\u5988\u8981\u4e70\u65b0\u624b\u673a\u201d\uff0c reject \u5b9e\u9645\u4e0a\u5c31\u662f\u201c\u8003\u4e0d\u5230 100 \u5206\uff0c\u5c0f\u660e\u7684\u5988\u5988\u4e0d\u4e70\u65b0\u624b\u673a\u201d\uff0c\u51fd\u6570\u4f53\u5c31\u662f\u201c\u5c0f\u660e\u52aa\u529b\u5b66\u4e60\u201d\u3002 \u4f46\u662f\u6784\u9020\u51fd\u6570\u4e4b\u4e2d\u867d\u7136\u6709\u4e86 resolve \u548c reject \uff0c\u4f46\u5b9e\u9645\u4e0a\u6211\u4eec\u8fd8\u6ca1\u6709\u5177\u4f53\u89c4\u5b9a\u8fd9\u4e24\u4e2a\u56de\u8c03\u5230\u5e95\u662f\u5565\u3002\u800c\u6307\u5b9a\u8fd9\u4e24\u4e2a\u56de\u8c03\u9700\u8981\u8c03\u7528 Promise \u7684 then \u548c catch \u65b9\u6cd5\u3002\u8fd9\u4e2a\u6211\u4eec\u5728\u4e0b\u9762\u8bb2\u89e3\u3002 \u7ed9 resolve \u548c reject \u6307\u5b9a\u5177\u4f53\u7684\u51fd\u6570\u4f53\u9700\u8981\u4f7f\u7528 then \u548c catch \u65b9\u6cd5\u3002\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u90fd\u4f1a\u63a5\u53d7\u56de\u8c03\u51fd\u6570\uff0c\u5e76\u4e14\u8fd4\u56de Promise \u5bf9\u8c61\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 new Promise (( resolve , reject ) => { let asyncSucceeded = Math . random () > 0.2 ; setTimeout (() => { if ( asyncSucceeded ) { resolve ( \"Async succeeded!\" ); } else { reject ( \"Async failed!\" ); } }, 1000 ); }) . then (( res ) => { console . log ( \"Then\" ); console . log ( res ); }) . catch (( err ) => { console . log ( \"Catch\" ); console . log ( err ); }); \u901a\u8fc7\u8fd9\u6837\u7684\u65b9\u5f0f\uff0c\u6211\u4eec\u5c31\u5728 Promise \u6784\u9020\u51fd\u6570\u63a5\u53d7\u7684\u56de\u8c03\u51fd\u6570\u7684\u51fd\u6570\u4f53\u4e2d\u89c4\u5b9a\u4e86\u5f02\u6b65\u8fc7\u7a0b\u7684\u5177\u4f53\u4efb\u52a1\uff0c\u5728 then \u548c catch \u65b9\u6cd5\u4e4b\u4e2d\u6307\u6d3e\u4e86\u5f02\u6b65\u8fc7\u7a0b\u7684\u56de\u8c03\u51fd\u6570\u3002\u8fd9\u6837\uff0c\u4e3b\u7ebf\u7a0b\u5c31\u5b8c\u6574\u5b8c\u6210\u4e86\u5f02\u6b65\u8fc7\u7a0b\u7684\u6d3e\u9063\u3002 Promise \u6bd4\u76f4\u63a5\u5199\u56de\u8c03\u6a21\u5f0f\u4f18\u8d8a\u7684\u5730\u65b9\u5c31\u662f\u8fd9\u79cd\u5199\u6cd5\u89e3\u51b3\u4e86\u56de\u8c03\u5730\u72f1\u3002\u6211\u4eec\u4f9d\u7136\u8003\u8651\u4f9d\u6b21\u83b7\u53d6\u591a\u6570\u636e\u6e90\u6570\u636e\u7684\u4e1a\u52a1\u573a\u666f\uff0c\u7531\u4e8e then \u65b9\u6cd5\u4f9d\u7136\u8fd4\u56de Promise \u5bf9\u8c61\uff0c\u6240\u4ee5\u5b9e\u9645\u4e0a\u6211\u4eec\u53ef\u4ee5\u5728 then \u540e\u9762\u63a5\u7740\u8c03\u7528 then \u3002\u800c\u4e0a\u4e00\u4e2a then \u4e4b\u4e2d\u7684\u56de\u8c03\u51fd\u6570\u7684\u8fd4\u56de\u503c\u4f1a\u88ab\u4f20\u5165\u4e0b\u4e00\u4e2a then \u4e4b\u4e2d\u7684\u56de\u8c03\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 new Promise (( resolve , reject ) => { // Get Data #1 resolve ( \"Data #1\" ); }) . then (( res ) => { console . log ( res ); // Get Data #2 return \"Data #2\" ; }) . then (( res ) => { console . log ( res ); // Get Data #3 return \"Data #3\" ; }) . then ( console . log ) . catch ( console . log ); \u8fd9\u79cd\u5199\u6cd5\u88ab\u79f0\u4e3a then \u94fe\uff0c\u5176\u597d\u5904\u662f\u6bd4\u56de\u8c03\u51fd\u6570\u5199\u6cd5\u66f4\u6613\u8bfb\u4e14\u6613\u7ef4\u62a4\u3002 \u53e6\u5916\uff0c\u5bf9\u4e8e\u591a\u4f9d\u8d56\u95ee\u9898\uff08\u9700\u8981\u591a\u4e2a\u5f02\u6b65\u5168\u90e8\u7ed3\u675f\u540e\u624d\u80fd\u6d3e\u9063\u4e0b\u4e00\u4e2a\u5f02\u6b65\uff09\uff0c Promise \u63d0\u4f9b\u4e86 all \u65b9\u6cd5\uff1a 1 2 3 4 5 6 7 8 9 10 11 Promise . all ( [ 1 , 2 , 3 ]. map (( val ) => { return new Promise (( resolve , reject ) => { resolve ( `Promise # ${ val } ` ); }); }) ) . then (( res ) => { console . log ( res ); // [\"Promise #1\", \"Promise #2\", \"Promise #3\"] }) . catch (( err ) => {}); \u8fd9\u91cc then \u4e4b\u4e2d\u7684\u56de\u8c03\u51fd\u6570\u63a5\u53d7\u7684\u53c2\u6570\u662f\u6240\u6709 Promise \u5bf9\u8c61 resolve \u56de\u8c03\u6240\u63a5\u53d7\u7684\u53c2\u6570\u62fc\u6210\u7684\u6570\u7ec4\uff0c catch \u540c\u7406\u3002 \u53e6\u5916\uff0c\u6ce8\u610f\u4e24\u70b9\uff1a Promise \u4e00\u65e6\u521b\u5efa\uff0c\u5185\u90e8\u7684\u5f02\u6b65\u8fc7\u7a0b\u5c31\u5f00\u59cb\u6267\u884c\uff0c\u4e14\u5f00\u59cb\u6267\u884c\u540e\u5c31\u4e0d\u4f1a\u53d6\u6d88 \u521b\u5efa Promise \u4f1a\u5199\u5f88\u591a\u5f88\u957f\u7684\u56de\u8c03\uff0c\u5199\u5b8c\u8fd9\u4e9b\u56de\u8c03\u540e\u5f88\u5bb9\u6613\u7ed9\u7f16\u5199\u8005\u4e00\u79cd\u201c\u5f02\u6b65\u5df2\u7ecf\u6267\u884c\u7ed3\u675f\u201d\u7684\u9519\u89c9\u3002\u5b9e\u9645\u4e0a\u8fd9\u4e48\u957f\u7684\u8bed\u53e5\u4ec5\u4ec5\u662f \u5b9a\u4e49\u4e86 Promise \u5bf9\u8c61 \uff0c\u4e5f\u5c31\u662f\u4ec5\u4ec5\u53ea\u662f\u6d3e\u9063\u4e86\u5f02\u6b65\u3002 \u5173\u4e8e\u7b2c\u4e8c\u70b9\uff0c\u53ef\u4ee5\u770b\u4e0b\u9762\u7684\u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 9 10 11 let i = 1 ; new Promise (( resolve , reject ) => { resolve ( 2 ); }) . then (( res ) => { i = 2 ; }) . catch ( console . log ); console . log ( i ); // 1 \u8fd9\u91cc\u521b\u5efa\u5b8c Promise \u5bf9\u8c61\u4e4b\u540e\u7acb\u523b\u8f93\u51fa i \uff0c\u7531\u4e8e\u6b64\u65f6\u5f02\u6b65\u8fd8\u6ca1\u6709\u6267\u884c\u5b8c\u6bd5\uff0c\u4e5f\u5c31\u662f\u8fd8\u6ca1\u6709\u5c06 i \u91cd\u65b0\u8d4b\u503c\uff0c\u6240\u4ee5\u53ea\u80fd\u5f97\u5230\u539f\u5148\u503c 1 \u3002 \u7f16\u8005\u66fe\u7ecf\u8e29\u8fc7\u7684\u5751\u4e0d\u80fd\u8ba9\u8bfb\u8005\u518d\u8e29 \u5728\u5b9e\u9645\u5de5\u7a0b\u4e2d\uff0c\u521b\u5efa Promise \u5bf9\u8c61\u7684\u8bed\u53e5\u53ef\u4ee5\u6bd4\u8fd9\u4e2a\u793a\u4f8b\u957f\u5f88\u591a\uff0c\u751a\u81f3\u53ef\u4ee5\u8d85\u51fa\u4e00\u4e2a\u5c4f\u5e55\u663e\u793a\u7684\u8303\u56f4\u3002\u6b64\u65f6\u4e00\u5b9a\u8981\u4fdd\u6301\u6e05\u9192\uff0c\u8fd9\u4e48\u957f\u7684\u8bed\u53e5\uff0c \u4ec5\u4ec5\u662f\u6d3e\u9063\u4e86\u5f02\u6b65 \uff0c\u4e0d\u8981\u7d27\u63a5\u7740\u540e\u9762\u4f7f\u7528\u4e00\u4e9b\u4f1a\u88ab\u5f02\u6b65\u8fc7\u7a0b\u4fee\u6539\u7684\u503c\u3002 \u8ddf\u7740\u6211\u5ff5\uff0c \u518d\u957f\u7684\u8bed\u53e5\u4e5f\u4ec5\u4ec5\u662f\u6d3e\u9063\u4e86\u5f02\u6b65 \uff0c \u518d\u957f\u7684\u8bed\u53e5\u4e5f\u4ec5\u4ec5\u662f\u6d3e\u9063\u4e86\u5f02\u6b65 \uff0c \u518d\u957f\u7684\u8bed\u53e5\u4e5f\u4ec5\u4ec5\u662f\u6d3e\u9063\u4e86\u5f02\u6b65 \u3002 \u6b64\u5916\uff0c\u5b9e\u9645\u5de5\u7a0b\u4e4b\u4e2d\uff0c\u4e00\u822c\u4f1a\u8bbe\u8ba1\u4e00\u4e2a\u6807\u8bb0\u8868\u793a\u67d0\u4e2a\u5f02\u6b65\u662f\u5426\u8fd8\u5728\u6267\u884c\u3002\u8fd9\u4e2a\u6807\u8bb0\u4f1a\u5728\u521b\u5efa Promise \u5bf9\u8c61\u6d3e\u9063\u5f02\u6b65\u7684\u65f6\u5019\u7f6e\u771f\uff0c\u7136\u540e\u5728 then \u94fe\u6700\u540e\u7684\u56de\u8c03\u4e2d\u7f6e\u5047\u3002\u8fd9\u6837\u4e3b\u7ebf\u7a0b\u5c31\u53ef\u4ee5\u6839\u636e\u8fd9\u4e2a\u6807\u8bb0\u786e\u5b9a\u662f\u5426\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b\u654f\u611f\u53d8\u91cf\uff08\u6bd4\u5982\u4e0a\u9762\u4f8b\u5b50\u4e2d\u7684 i \uff09\u3002 \u8fd9\u79cd\u601d\u60f3\u5176\u5b9e\u7c7b\u4f3c\u4e8e\u8bfb\u5199\u9501\u7684\u601d\u60f3\u3002","title":"Promise \u5bf9\u8c61"},{"location":"languages/javascript/async/#async-await","text":"\u5728\u6700\u65b0\u6807\u51c6\u4e4b\u4e2d\uff0cJavaScript \u5f15\u5165\u4e86 async, await \u8fd9\u4e24\u4e2a\u5173\u952e\u5b57\uff0c\u8fd9\u4e24\u4e2a\u5173\u952e\u5b57\u7684\u4f5c\u7528\u662f\u80fd\u591f\u8ba9\u5f02\u6b65\u4ee3\u7801\u5199\u5f97\u548c\u540c\u6b65\u4ee3\u7801\u4e00\u6837\u81ea\u7136\u3002 \u6211\u4eec\u53ef\u4ee5\u7528 async \u5173\u952e\u5b57\u5c06\u4e00\u4e2a\u51fd\u6570\u58f0\u660e\u4e3a\u5f02\u6b65\u51fd\u6570\u3002\u8c03\u7528\u5f02\u6b65\u51fd\u6570\u7684\u65f6\u5019\uff0c\u5176\u4f1a\u7acb\u523b\u8fd4\u56de\u5e76\u6d3e\u9063\u4e00\u4e2a\u5f02\u6b65\uff1a 1 2 3 4 5 6 7 8 const foo = async () => { setTimeout (() => { console . log ( \"Async over!\" ); }, 1000 ); }; foo (); console . log ( \"Sync code here!\" ); \u800c async \u5173\u952e\u5b57\u7684\u7684\u53e6\u5916\u4e00\u4e2a\u4f5c\u7528\u5c31\u662f\u5c06\u51fd\u6570\u7684\u8fd4\u56de\u503c\u5305\u88c5\u4e3a Promise \u5bf9\u8c61\uff1a 1 2 3 4 5 6 7 const foo = async () => { setTimeout (() => { console . log ( \"Async over!\" ); }, 1000 ); }; typeof foo (); // \"object\", note \"undefined\" \u90a3\u4e48\u6211\u4eec\u4e5f\u53ef\u4ee5\u6309\u7167 Promise \u7684 then \u94fe\u5199\u6cd5\u4f7f\u7528\u5f02\u6b65\u51fd\u6570\uff1a 1 2 3 4 5 6 7 8 9 10 11 const foo = async () => { return \"Data #1\" ; }; foo () . then (( res ) => { console . log ( res ); return \"Data #2\" ; }) . then ( console . log ) . catch ( console . log ); await \u5173\u952e\u5b57\u540e\u9762\u53ef\u4ee5\u63a5\u4e00\u4e2a\u53d8\u91cf\uff0c\u5982\u679c\u8fd9\u4e2a\u53d8\u91cf\u4e0d\u662f Promise \u5bf9\u8c61\uff0c\u90a3\u4e48 await \u5173\u952e\u5b57\u4e0d\u4ea7\u751f\u4efb\u4f55\u6548\u679c\u3002 \u5982\u679c\u662f Promise \u5bf9\u8c61\uff0c\u90a3\u4e48 await \u5173\u952e\u5b57\u4f1a\u963b\u585e\u4ee3\u7801\u8fd0\u884c\uff0c\u76f4\u5230\u8fd9\u4e2a Promise \u5bf9\u8c61\u4ee3\u8868\u7684\u5f02\u6b65\u6267\u884c\u5b8c\u6bd5\u3002 \u5982\u679c\u5f02\u6b65\u6210\u529f\uff0c\u8fd9\u4e2a\u65f6\u5019 await \u8bed\u53e5\u7684\u8fd4\u56de\u503c\u662f Promise \u7684 resolve \u56de\u8c03\u63a5\u53d7\u7684\u53c2\u6570\uff0c\u65e0\u8bba\u6709\u6ca1\u6709\u901a\u8fc7 then \u65b9\u6cd5\u6307\u5b9a resolve \u56de\u8c03\u3002 \u5982\u679c\u5f02\u6b65\u5931\u8d25\uff0c\u9996\u5148\u786e\u5b9a\u8fd9\u4e2a Promise \u6709\u6ca1\u6709\u901a\u8fc7 catch \u65b9\u6cd5\u89c4\u5b9a reject \u56de\u8c03\u3002\u5982\u679c\u6709\uff0c await \u8fd4\u56de catch \u4e4b\u4e2d\u56de\u8c03\u51fd\u6570\u7684\u8fd4\u56de\u503c\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u629b\u51fa Uncaught Failure \u9519\u8bef\u3002 \u6bd4\u5982\u8bf4\uff1a 1 2 3 4 5 6 7 8 9 10 let a = await 1 ; a ; // 1 let b = await new Promise (( resolve , reject ) => { let succeeded = Math . random () > 0.2 ; if ( succeeded ) resolve ( \"Success\" ); else reject ( \"Failure\" ); }) . catch (( err ) => \"Error \" + err ); b ; // Maybe \"Success\", maybe \"Error Failure\" async, await \u5173\u952e\u5b57\u5b9e\u9645\u4e0a\u662f\u9488\u5bf9 then \u94fe\u53ef\u80fd\u8fc7\u957f\u5bfc\u81f4\u53ef\u8bfb\u6027\u964d\u4f4e\u7684\u95ee\u9898\u800c\u63d0\u51fa\u7684\u3002\u6211\u4eec\u73b0\u5728\u8fd8\u662f\u8003\u8651\u4f9d\u6b21\u4ece\u591a\u4e2a\u6570\u636e\u6e90\u83b7\u53d6\u6570\u636e\u7684\u95ee\u9898\uff0c\u4e8b\u5b9e\u4e0a\u901a\u8fc7 async, await \u5173\u952e\u5b57\uff0c\u8fd9\u4e2a\u5f02\u6b65\u8fc7\u7a0b\u751a\u81f3\u53ef\u4ee5\u5199\u5f97\u5f88\u50cf\u540c\u6b65\u4ee3\u7801\uff1a 1 2 3 4 5 6 const fetchData = async () => { let data_1 = await fetchData_1 ( initData ); let data_2 = await fetchData_2 ( data_1 ); let data_3 = await fetchData_3 ( data_2 ); return [ data_1 , data_2 , data_3 ]; } \u8fd9\u91cc\u7684 fetchData \u7cfb\u5217\u51fd\u6570\u5747\u662f\u5f02\u6b65\u51fd\u6570\u3002 \u53ef\u4ee5\u53d1\u73b0\u8fd9\u79cd\u5199\u6cd5\u548c\u540c\u6b65\u4ee3\u7801\u51e0\u4e4e\u6ca1\u6709\u4ec0\u4e48\u5dee\u522b\uff0c\u53ef\u8bfb\u6027\u6bd4 then \u94fe\u597d\u4e00\u4e9b\uff0c\u66f4\u662f\u6bd4\u56de\u8c03\u51fd\u6570\u5199\u6cd5\u597d\u5f88\u591a\u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u5176\u89e3\u51b3\u4e86\u4e0d\u5b9a\u957f then \u94fe\u7684\u95ee\u9898\u3002\u5982\u679c\u8981\u4f9d\u6b21\u62c9\u53d6\u6570\u636e\u7684\u4fe1\u606f\u6e90\u4e2a\u6570\u4e0d\u662f\u56fa\u5b9a\u7684\uff0c\u800c\u662f\u901a\u8fc7\u53d8\u91cf\u6307\u5b9a\uff0c\u90a3\u4e48 then \u94fe\u5c31\u4e0d\u53ef\u7528\u4e86\uff0c\u56e0\u4e3a\u6211\u4eec\u4e0d\u77e5\u9053\u5177\u4f53\u8981\u5199\u591a\u5c11\u4e2a then \u3002\u4f46\u662f\u901a\u8fc7 async, await \u7ed3\u5408 for \u5faa\u73af\u5c31\u53ef\u4ee5\u89e3\u51b3\u95ee\u9898\u3002 \u4f46\u662f async, await \u5e26\u6765\u7684\u4e89\u8bae\u4e5f\u4e0d\u5c0f\uff0c\u6700\u5927\u7684\u5371\u9669\u662f\u5f02\u6b65\u4f20\u67d3\u3002 await \u5173\u952e\u5b57\u7684\u4f7f\u7528\u6709\u4e00\u4e2a\u8981\u6c42\uff0c\u4e5f\u5c31\u662f\u5982\u679c\u5728\u51fd\u6570\u4e2d\u4f7f\u7528\uff0c\u90a3\u4e48\u8fd9\u4e2a\u51fd\u6570\u5fc5\u987b\u662f\u5f02\u6b65\u7684\u3002\u539f\u56e0\u4e5f\u662f\u597d\u7406\u89e3\u7684\uff0c\u56e0\u4e3a await \u4f1a\u963b\u585e\u4ee3\u7801\u8fd0\u884c\uff0c\u5982\u679c\u5728\u4e3b\u7ebf\u7a0b\u4e0a\u963b\u585e\uff0c\u5219\u4f1a\u5bfc\u81f4\u9875\u9762\u5361\u987f\uff0c\u8fd9\u672c\u6765\u5c31\u548c\u5f02\u6b65\u7684\u521d\u8877\u77db\u76fe\u3002 \u90a3\u4e48\u8fdb\u4e00\u6b65\uff0c\u8c03\u7528\u4e86\u8fd9\u4e2a\u51fd\u6570\u7684\u5916\u5c42\u51fd\u6570\u4e2d\u7684\u8bed\u53e5\u4e3a\u4e86\u9632\u6b62\u5f02\u6b65\u53ef\u80fd\u5e26\u6765\u7684\u654f\u611f\u53d8\u91cf\u95ee\u9898\uff08\u548c Promise \u95ee\u9898\u7c7b\u4f3c\uff0c\u5f02\u6b65\u51fd\u6570\u5982\u679c\u4fee\u6539\u4e86\u67d0\u4e00\u4e2a\u53d8\u91cf\uff0c\u8fd9\u4e2a\u53d8\u91cf\u5f88\u6709\u53ef\u80fd\u4e0d\u4f1a\u88ab\u53ca\u65f6\u4fee\u6539\uff09\uff0c\u5916\u5c42\u51fd\u6570\u4e5f\u5f88\u6709\u53ef\u80fd\u7ed9\u8fd9\u4e2a\u51fd\u6570\u52a0\u4e0a await \uff0c\u8fd9\u53c8\u4f1a\u5bfc\u81f4\u5916\u5c42\u51fd\u6570\u4e0d\u53ef\u6297\u529b\u5730\u53d8\u4e3a\u5f02\u6b65\u51fd\u6570\u3002\u8fd9\u79cd\u4f20\u67d3\u4f1a\u5bfc\u81f4\u6574\u7247\u51fd\u6570\u53d8\u4e3a\u5f02\u6b65\uff0c\u4ece\u800c\u8ba9\u903b\u8f91\u53d8\u5f97\u6df7\u4e71\u3002 \u53e6\u5916\uff0c async, await \u5173\u952e\u5b57\u4f1a\u964d\u4f4e\u6211\u4eec\u5bf9\u963b\u585e\u7684\u654f\u611f\uff0c\u4ece\u800c\u7f16\u5199\u51fa\u4e0d\u5fc5\u8981\u7684\u963b\u585e\u548c\u4e32\u884c\u4ee3\u7801\u3002\u5b9e\u9645\u4e0a\uff0c async, await \u53ea\u662f\u8ba9 \u4f9d\u6b21 \u62c9\u53d6\u4fe1\u606f\u7684\u4ee3\u7801\u53d8\u5f97\u7b80\u6d01\uff0c\u5bf9\u4e8e\u672c\u5c31\u53ef\u4ee5\u591a\u5e76\u53d1\u7684\u4fe1\u606f\u62c9\u53d6\uff0c\u53cd\u800c\u4f1a\u6709\u8ba9\u6211\u4eec\u5199\u51fa\u4e0d\u5fc5\u8981\u7684\u4e32\u884c\u4ee3\u7801\u7684\u53ef\u80fd\uff0c\u4ece\u800c\u964d\u4f4e\u4ee3\u7801\u6548\u7387\uff1a 1 2 3 4 const fetchData = async () => { let data_1 = await fetchData_1 (); let data_2 = await fetchData_2 (); } \u5982\u679c data_1, data_2 \u672c\u5c31\u53ef\u4ee5\u5e76\u53d1\u83b7\u53d6\uff0c\u8fd9\u6837\u7684\u5199\u6cd5\u53cd\u800c\u4f1a\u964d\u4f4e\u6548\u7387\uff0c\u56e0\u4e3a\u8fd9\u6837\u4ee3\u7801\u7684\u5b9e\u9645\u542b\u4e49\u662f\u4e32\u884c\u5730\u83b7\u53d6\u6570\u636e\u3002\u771f\u6b63\u7684\u5199\u6cd5\u5e94\u8be5\u662f\uff1a 1 2 3 4 5 6 const fetchData = async () => { let data_1_promise = fetchData_1 (); let data_2_promise = fetchData_2 (); let data_1 = await data_1_promise ; let data_2 = await data_2_promise ; } \u53ea\u6709\u5148\u83b7\u53d6\u4e24\u4e2a\u5f02\u6b65\u7684 Promise \u5bf9\u8c61\uff0c\u540c\u65f6\u6d3e\u9063\u51fa\u4e24\u4e2a\u5f02\u6b65\u540e\u540e\u5206\u522b await \u624d\u80fd\u5b9e\u73b0\u5e76\u53d1\u3002 \u4f46\u662f async, await \u7684\u76ee\u7684\u672c\u6765\u5c31\u662f\u7528\u4e8e\u9690\u85cf\u6389 Promise \u7684\u5b58\u5728\uff0c\u5c06\u5f02\u6b65\u4ee3\u7801\u5199\u6210\u540c\u6b65\u7684\u683c\u5f0f\uff0c\u8fd9\u6837\u505a\u5176\u5b9e\u8fd8\u4e0d\u5982\u76f4\u63a5\u628a Promise \u5199\u51fa\u6765\u3002 \u6b64\u5916\uff0c\u5bf9\u4e8e\u591a\u4f9d\u8d56\u95ee\u9898\uff0c async, await \u5173\u952e\u5b57\u5e76\u6ca1\u6709\u89e3\u51b3\uff0c\u56e0\u4e3a await \u4e00\u6b21\u53ea\u80fd\u7b49\u5f85\u4e00\u4e2a\u5f02\u6b65\u3002\u8fd9\u4e2a\u65f6\u5019\u8fd8\u662f\u4e0d\u53ef\u907f\u514d\u5730\u9700\u8981\u4f7f\u7528 Promise \u5bf9\u8c61\u3002 \u8be5\u5982\u4f55\u5199\u597d\u5f02\u6b65\u4ee3\u7801 \u73b0\u4ee3\u7684 JavaScript \u5df2\u7ecf\u5c06\u5f02\u6b65\u64cd\u4f5c\u5c01\u88c5\u5f97\u8db3\u591f\u6613\u7528\uff0c\u501f\u52a9 Promise, async, await \u5c31\u53ef\u4ee5\u5199\u51fa\u5f88\u660e\u6670\u5730\u5f02\u6b65\u4ee3\u7801\u3002 \u4f46\u662f\u6211\u4eec\u5728\u7f16\u5199\u7684\u65f6\u5019\u4e00\u5b9a\u9700\u8981\u6ce8\u610f\u81ea\u5df1\u5199\u7684\u4e0d\u662f\u540c\u6b65\u4ee3\u7801\u800c\u662f\u5f02\u6b65\u4ee3\u7801\uff0c\u4ee5\u514d\u51fa\u73b0\u95ee\u9898\u3002\u6b64\u5916\uff0c\u5e94\u5f53\u6839\u636e\u5b9e\u9645\u5e94\u7528\u8981\u6c42\u5408\u7406\u9009\u62e9\u76f4\u63a5\u4f7f\u7528 Promise \u5bf9\u8c61\u8fd8\u662f async, await \u5173\u952e\u5b57\u3002 \u5b9e\u9645\u4e0a\u6587\u6863\u80fd\u6559\u7ed9\u8bfb\u8005\u7684\u5f88\u6709\u9650\uff0c\u7f16\u8005\u8fd8\u662f\u5e0c\u671b\u5927\u5bb6\u591a\u53bb\u7f16\u5199\u771f\u5b9e\u7684\u5de5\u7a0b\u4ee3\u7801\u4ee5\u771f\u6b63\u638c\u63e1 JavaScript \u5f02\u6b65\u3002","title":"async \u4e0e await"},{"location":"languages/javascript/browser/","text":"\u6d4f\u89c8\u5668\u4e2d\u7684 JavaScript \u00b6 JavaScript \u6700\u521d\u8bbe\u8ba1\u7684\u76ee\u7684\u5c31\u662f\u8fd0\u884c\u5728\u6d4f\u89c8\u5668\u4e2d\u7ed9\u9759\u6001 HTML \u8d4b\u4e88\u52a8\u6001\u6548\u679c\uff0c\u800c\u5373\u4f7f\u7ecf\u5386\u4e86\u82e5\u5e72\u5e74\u4ee3\uff0c\u73b0\u5728\u7684\u6d4f\u89c8\u5668\u4e2d\u901a\u7528\u7684\u811a\u672c\u8bed\u8a00\u4f9d\u7136\u662f JavaScript\u3002 \u5373\u4f7f\u4f60\u4f7f\u7528\u524d\u7aef\u6846\u67b6\u642d\u5efa\u7f51\u9875\u5e94\u7528\uff0c\u6211\u4eec\u4f9d\u7136\u5efa\u8bae\u4f60\u9605\u8bfb\u8fd9\u4e00\u90e8\u5206\u5185\u5bb9\u3002\u8fd9\u662f\u56e0\u4e3a\u524d\u7aef\u6846\u67b6\u6700\u7ec8\u4f9d\u7136\u662f\u5c06\u4f60\u7684\u4ee3\u7801\u7ffb\u8bd1\u4e3a\u6d4f\u89c8\u5668\u4e2d\u7684 JavaScript \u5e76\u8fd0\u884c\uff0c\u638c\u63e1\u8fd9\u4e00\u90e8\u5206\u5185\u5bb9\u53ef\u4ee5\u5e2e\u52a9\u4f60\u66f4\u597d\u5730\u7406\u89e3\u6846\u67b6\u8fd0\u4f5c\u6d41\u7a0b\u548c debug\u3002 \u6d4f\u89c8\u5668\u5185\u7f6e\u5bf9\u8c61 \u00b6 \u6d4f\u89c8\u5668\u5185\u7f6e\u4e86\u90e8\u5206\u5168\u5c40\u5bf9\u8c61\uff0c\u8fd9\u4e9b\u5bf9\u8c61\u5f80\u5f80\u4e0e\u7a97\u53e3\u3001\u5c4f\u5e55\u3001\u6d4f\u89c8\u8bb0\u5f55\u7b49\u4fe1\u606f\u6709\u5173\u3002\u7f16\u5199\u76f8\u5173 JavaScript \u4ee3\u7801\u7684\u65f6\u5019\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e9b\u5bf9\u8c61\u83b7\u53d6\u76f8\u5173\u4fe1\u606f\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e9b\u8c03\u7528\u5bf9\u8c61\u7684\u65b9\u6cd5\u6765\u5b9e\u73b0\u4e00\u4e9b\u548c\u6d4f\u89c8\u5668\u76f8\u5173\u7684\u64cd\u4f5c\u3002 window \u5bf9\u8c61\u662f\u6700\u5e38\u7528\u7684\u5185\u7f6e\u5168\u5c40\u53d8\u91cf\u4e4b\u4e00\u3002\u8be5\u53d8\u91cf\u7684\u4e00\u5927\u91cd\u8981\u4f5c\u7528\u662f \u5145\u5f53\u5168\u5c40\u4f5c\u7528\u57df \uff0c\u4e5f\u5c31\u662f\u5c06\u6240\u6709\u5168\u5c40\u53d8\u91cf\u548c\u51fd\u6570\u7ed1\u5b9a\u4e3a\u5176\u5c5e\u6027\uff0c\u8fd9\u4e00\u70b9\u5728\u5148\u524d\u8bb2\u89e3 this \u6307\u5411\u7684\u65f6\u5019\u63d0\u5230\u8fc7\uff0c\u53c2\u89c1 JavaScript \u7684\u9762\u5411\u5bf9\u8c61 \u90e8\u5206\u7684\u201c\u5168\u5c40\u5bf9\u8c61\u201d\u6ce8\u89e3\u3002 \u9664\u6b64\u4e4b\u5916\uff0c window \u5bf9\u8c61\u6709 innerHeight, innerWidth, outerHeight, outerWidth \u7b49\u4e0e\u7a97\u53e3\u5c3a\u5bf8\u6709\u5173\u7684\u5c5e\u6027\uff0c\u6bd4\u5982\u4f60\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u63a7\u5236\u53f0\u4e2d\u8fd0\u884c\u4e0b\u8ff0\u4ee3\u7801\u83b7\u53d6\u6d4f\u89c8\u5668\u5185\u7a97\u53e3\u7684\u5bbd\u9ad8\uff1a 1 console . log ( `Inner window size: ${ window . innerWidth } x ${ window . innerHeight } ` ); \u4f60\u53ef\u4ee5\u5c1d\u8bd5\u6700\u5927\u5316\u6216\u62d6\u52a8\u7f29\u653e\u6d4f\u89c8\u5668\u7a97\u53e3\u540e\u518d\u8fd0\u884c\u4e0a\u8ff0\u4ee3\u7801\uff0c\u89c2\u5bdf\u8f93\u51fa\u7684\u6539\u53d8\u3002 screen \u5bf9\u8c61\u4fdd\u5b58\u7684\u5219\u662f\u5c4f\u5e55\u76f8\u5173\u7684\u4fe1\u606f\uff0c\u5982\u5c4f\u5e55\u5bbd\u9ad8\u548c\u989c\u8272\u4f4d\u6570\u7b49\uff1a 1 console . log ( `Screen size: ${ screen . width } x ${ screen . height } ` ); navigator \u5bf9\u8c61\u4fdd\u5b58\u4e86\u6d4f\u89c8\u5668\u76f8\u5173\u7684\u5927\u91cf\u4fe1\u606f\uff0c\u6bd4\u5982\u8bf4\u6d4f\u89c8\u5668\u540d\u79f0\u3001\u8bed\u8a00\u3001\u7248\u672c\u3001\u64cd\u4f5c\u7cfb\u7edf\u7c7b\u578b\u7b49\u7b49\uff1a 1 2 3 4 5 6 7 console . log ( `{ name: ${ navigator . appName } , version: ${ navigator . appVersion } , language: ${ navigator . language } , platform: ${ navigator . platform } , userAgent: ${ navigator . userAgent } , }` ); location \u5bf9\u8c61\u4fdd\u5b58\u4e86\u548c URL \u76f8\u5173\u7684\u4e00\u4e9b\u4fe1\u606f\u3002\u5047\u8bbe\u5f53\u524d\u9875\u9762\u7684 URL \u4e3a\u4e0b\u8ff0\uff0c\u5176\u5305\u542b\u4e86\u534f\u8bae\u3001\u4e3b\u673a\u540d\u3001\u7aef\u53e3\u53f7\u3001\u53c2\u6570\u7b49\u7b49\u4fe1\u606f\uff1a 1 https://www.test.com:8000/static/path?key=114514 \u6b64\u65f6 location \u5bf9\u8c61\u4e2d\u7684\u5404\u4e2a\u5c5e\u6027\u5b58\u50a8\u7740\u8fd9\u4e2a URL \u7684\u5404\u90e8\u5206\uff1a location.href \u5b58\u50a8 URL \u672c\u8eab\u3002\u5373 https://www.test.com:8000/static/path?key=114514 location.protocol \u5b58\u50a8 URL \u4f7f\u7528\u7684\u534f\u8bae\u3002\u5373 https location.host \u5b58\u50a8\u5f53\u524d\u7684\u4e3b\u673a\u540d\u3002\u5373 www.host.com location.port \u5b58\u50a8\u5f53\u524d\u4f7f\u7528\u7684\u7aef\u53e3\u3002\u5373 8000 location.pathname \u5b58\u50a8\u5f53\u524d\u8bbf\u95ee\u7684\u8d44\u6e90\u8def\u5f84\u3002\u5373 /static/path location.search \u5b58\u50a8\u5f53\u524d\u4f20\u9012\u7684\u53c2\u6570\u5217\u8868\u3002\u5373 ?key=114514 \uff0c\u6ce8\u610f ? \u5b57\u7b26\u4e5f\u5305\u542b\u5728\u5185 location \u5bf9\u8c61\u8fd8\u6709\u4e24\u4e2a\u5e38\u7528\u65b9\u6cd5\uff0c\u5373 location.assign \u548c location.reload \u3002\u524d\u8005\u7528\u4e8e\u5f3a\u5236\u9875\u9762\u8df3\u8f6c\uff0c\u540e\u8005\u5219\u7528\u4e8e\u5f3a\u5236\u91cd\u65b0\u8f7d\u5165\u5f53\u524d\u9875\u9762\u3002\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u5c1d\u8bd5\u5728\u63a7\u5236\u53f0\u4e2d\u8fd0\u884c\u4e0b\u8ff0\u4ee3\u7801\uff1a 1 2 location . assign ( \"https://docs.net9.org\" ); location . reload (); document \u5bf9\u8c61\u662f\u5f53\u524d\u9875\u9762\u6574\u4e2a DOM \u6811\u7684\u6839\u8282\u70b9\u3002 \u4ec0\u4e48\u662f DOM \u6811 HTML \u6240\u8868\u793a\u7684\u9875\u9762\u4e2d\u5404\u4e2a\u5143\u7d20\u662f\u6309\u7167\u6811\u7684\u7ed3\u6784\u5b89\u6392\u7684\uff0c\u6811\u4e0a\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u662f\u4e00\u4e2a HTML \u5143\u7d20\uff0c\u800c\u8fd9\u68f5\u6811\u5c31\u662f\u6240\u8c13\u7684 DOM \u6811\uff08\u82f1\u8bed\uff1aDocument Object Module Tree\uff09\u3002 \u76f8\u5173\u77e5\u8bc6\u53ef\u4ee5\u53c2\u8003 HTML \u8bed\u8a00\u57fa\u7840 \u3002 \u5728\u540e\u7eed\u90e8\u5206\u6211\u4eec\u4f1a\u5177\u4f53\u4ecb\u7ecd\u8be5\u5982\u4f55\u5229\u7528\u597d document \u5bf9\u8c61\u6765\u67e5\u8be2\u3001\u4fee\u6539 DOM \u6811\u3002 DOM \u6811\u8282\u70b9\u5e38\u7528\u65b9\u6cd5 \u00b6 \u5f88\u591a\u65f6\u5019\u4f60\u4e0d\u9700\u8981\u76f4\u63a5\u64cd\u4f5c DOM \u6811 JavaScript \u8bed\u8a00\u672c\u8eab\u5f00\u653e\u4e86\u76f8\u5f53\u591a\u4e14\u529f\u80fd\u5f3a\u52b2\u7684\u51fd\u6570\u4ee5\u64cd\u4f5c DOM \u6811\uff0c\u4f46\u662f\u5982\u679c\u5229\u7528\u4e0d\u5f53\uff0c\u5f88\u6709\u53ef\u80fd\u9020\u6210\u7f51\u9875\u5d29\u6e83\u7b49\u610f\u6599\u4e4b\u5916\u7684\u7ed3\u679c\u3002\u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\u4ee5\u53ca\u65b9\u4fbf\u7f16\u7a0b\u4eba\u5458\uff0c\u8bb8\u591a\u7f51\u9875\u524d\u7aef\u6846\u67b6\u5df2\u7ecf\u5c06\u5bf9 DOM \u6811\u7684\u64cd\u4f5c\u5c01\u88c5\u6210\u76f8\u5173\u7684\u51fd\u6570\u6216\u8005\u8bed\u6cd5\u3002 \u5982\u679c\u4f60\u53ea\u9700\u8981\u5b66\u4e60\u5177\u4f53\u7684\u6846\u67b6\u4ee5\u5b8c\u6210\u7279\u5b9a\u7684\u524d\u7aef\u9879\u76ee\uff0c\u8bf7\u5c3d\u91cf\u51cf\u5c11\u5bf9 DOM \u6811\u7684\u76f4\u63a5\u64cd\u4f5c\u3002\u4f46\u662f\u4e3a\u4e86\u6784\u5efa\u5b8c\u6574\u7684 JavaScript \u903b\u8f91\u4f53\u7cfb\uff0c\u6211\u4eec\u8fd8\u662f\u5efa\u8bae\u81f3\u5c11\u4e86\u89e3\u3001\u77e5\u6653\u8fd9\u4e9b DOM \u6811\u8bed\u6cd5\u3002 \u4f7f\u7528\u6211\u4eec\u63d0\u4f9b\u7684\u6837\u4f8b \u5728\u5b66\u4e60\u8fd9\u4e00\u5c0f\u8282\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u70b9\u51fb\u8fdb\u5165 \u6211\u4eec\u7684\u6837\u4f8b\u7f51\u9875 \u5e76\u6309\u4e0b F12 \u6253\u5f00\u63a7\u5236\u53f0\uff0c\u5728\u63a7\u5236\u53f0\u91cc\u8fd0\u884c\u8fd9\u4e00\u8282\u63d0\u4f9b\u7684\u6837\u4f8b\u4ee3\u7801\u6765\u7406\u89e3 DOM \u6811\u64cd\u4f5c\u3002 \u67e5\u627e DOM \u8282\u70b9 \u00b6 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0b\u8ff0\u5185\u7f6e\u65b9\u6cd5\u67e5\u627e\u7b26\u5408\u8981\u6c42\u7684 DOM \u8282\u70b9\uff1a document.getElementById \u3002\u6839\u636e\u8282\u70b9 ID \u67e5\u627e\uff0c\u8282\u70b9 ID \u662f\u552f\u4e00\u7684\uff0c\u6545\u8be5\u65b9\u6cd5\u8fd4\u56de\u7684\u662f\u5177\u4f53\u7684 DOM \u8282\u70b9\u3002\u6bd4\u5982\u8bf4\uff1a 1 document . getElementById ( \"red-block\" ); \u4e0a\u8ff0\u4ee3\u7801\u4f1a\u8fd4\u56de\u4e00\u4e2a DOM \u5143\u7d20\uff0c\u5728\u63a7\u5236\u53f0\u91cc\u663e\u793a\u4e3a\u4e00\u4e2a HTML \u6807\u7b7e\uff0c\u9f20\u6807\u60ac\u6d6e\u4e8e\u6807\u7b7e\u4e0a\u53ef\u4ee5\u770b\u5230\u7f51\u9875\u4e0a\u5bf9\u5e94\u5143\u7d20\u9ad8\u4eae\u663e\u793a\u3002 getElementsByClassName \u3002\u8be5\u65b9\u6cd5\u4e3a DOM \u8282\u70b9\u5bf9\u8c61\u5185\u7f6e\u65b9\u6cd5\uff0c\u542b\u4e49\u4e3a\u5728\u4ee5\u8be5\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u5185\u67e5\u627e\u6240\u6709 class \u5c5e\u6027\u4e3a\u7ed9\u5b9a\u503c\u7684\u8282\u70b9\uff0c\u5176\u8fd4\u56de\u7684\u662f\u4e00\u4e2a DOM \u8282\u70b9\u7684\u5217\u8868\u3002\u6bd4\u5982\u8bf4\uff1a 1 document . getElementsByClassName ( \"block\" ); \u8be5\u65b9\u6cd5\u8fd4\u56de\u4e86\u6240\u6709 class \u4e3a square \u7684 DOM \u8282\u70b9\u6784\u6210\u7684\u5217\u8868\u3002 \u4e0a\u8ff0\u4e24\u4e2a\u65b9\u6cd5\u53ef\u4ee5\u8054\u5408\u4f7f\u7528\uff1a 1 document . getElementById ( \"circle-wrapper\" ). getElementsByClassName ( \"circle\" ); \u8fd9\u6bb5\u4ee3\u7801\u610f\u5473\u7740\u5148\u6839\u636e ID \u67e5\u627e\u5230\u4e00\u4e2a DOM \u8282\u70b9\uff0c\u518d\u5728\u5176\u5185\u90e8\u67e5\u627e\u6240\u6709 class \u5c5e\u6027\u4e3a circle \u7684\u8282\u70b9\u3002 getElementsByTagName \u3002\u8be5\u65b9\u6cd5\u4e3a DOM \u8282\u70b9\u5bf9\u8c61\u5185\u7f6e\u65b9\u6cd5\uff0c\u542b\u4e49\u4e3a\u5728\u4ee5\u8be5\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u5185\u67e5\u627e\u6240\u6709\u6807\u7b7e\u540d\u4e3a\u7ed9\u5b9a\u503c\u7684\u8282\u70b9\uff08\u5982 <p /> \u8282\u70b9\u7684\u6807\u7b7e\u540d\u5c31\u662f 'p' \uff09\uff0c\u5176\u8fd4\u56de\u7684\u662f\u4e00\u4e2a DOM \u8282\u70b9\u7684\u5217\u8868\u3002\u6bd4\u5982\u8bf4\uff1a 1 document . getElementById ( \"circle-wrapper\" ). getElementsByTagName ( \"div\" ); \u9664\u6b64\u4ee5\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528 DOM \u8282\u70b9\u5bf9\u8c61\u5185\u7f6e\u7684 querySelector \u4e0e querySelectorAll \u65b9\u6cd5\uff0c\u5229\u7528\u9009\u62e9\u5668\u8bed\u6cd5\u6765\u8fdb\u884c\u66f4\u7cbe\u786e\u7684\u67e5\u627e\u3002 querySelector \u641c\u7d22\u8303\u56f4\u662f\u4ee5\u8be5 DOM \u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u6ee1\u8db3\u9009\u62e9\u5668\u8981\u6c42\u7684 \u7b2c\u4e00\u4e2a DOM \u8282\u70b9\u3002\u800c querySelectorAll \u4f1a\u8fd4\u56de\u5b50\u6811\u5185\u6240\u6709\u6ee1\u8db3\u9009\u62e9\u5668\u8981\u6c42\u7684 DOM \u8282\u70b9\u6784\u6210\u7684\u5217\u8868\u3002 \u5177\u4f53\u7684\u9009\u62e9\u5668\u8bed\u6cd5\u53ef\u4ee5\u53c2\u8003 CSS \u8bed\u8a00\u57fa\u7840\u6587\u6863\u4e2d\u76f8\u5173\u90e8\u5206 \u3002 \u66f4\u65b0 DOM \u6811\u8282\u70b9 \u00b6 \u8fb9\u505a\u8fb9\u5b66 \u8fd9\u4e00\u8282\u4e2d\uff0c\u8bfb\u8005\u53ef\u4ee5\u5148\u5728\u63a7\u5236\u53f0\u4e2d\u8fd0\u884c\uff1a 1 let node = document . getElementById ( \"test-text\" ); \u6765\u83b7\u53d6\u6211\u4eec\u7528\u4e8e\u6f14\u793a\u7684 DOM \u8282\u70b9\u3002 DOM \u8282\u70b9\u5bf9\u8c61\u6709\u4e00\u4e2a\u76f8\u5f53\u91cd\u8981\u7684\u5c5e\u6027\uff0c\u5373 innerHTML \uff0c\u5176\u503c\u5c31\u662f\u4e00\u5bf9\u95ed\u5408\u7684 HTML \u6807\u7b7e\u4e4b\u95f4\u7684\u6587\u672c\u3002\u6bd4\u5982\u8bf4\u4e0b\u8ff0 HTML \u7684 <p> \u8282\u70b9\uff1a 1 < p > The color is < span style = \"color:red\" > RED </ span > ! </ p > \u5176 innerHTML \u5c5e\u6027\u503c\u5c31\u662f ' The color is <span style=\"color:red\"> RED </span> ! ' \u3002 \u8fd9\u4e2a\u5c5e\u6027\u662f\u53ef\u4ee5\u968f\u610f\u8bfb\u5199\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539\u8fd9\u4e2a\u5c5e\u6027\u503c\u6765\u76f4\u63a5\u8c03\u6574 DOM \u8282\u70b9\u3002\u6bd4\u5982\u8bf4\u5728\u63a7\u5236\u53f0\u4e2d\u8fd0\u884c\u4e0b\u8ff0\u4ee3\u7801\uff1a 1 node . innerHTML = ' The color is <span style=\"color:red\"> RED </span> ! ' \u5c31\u4f1a\u53d1\u73b0\u539f\u5148\u7684\u6587\u672c This is a test text node. \u66ff\u6362\u6210\u4e86\u6211\u4eec\u8bbe\u7f6e\u7684\u6587\u672c\u3002 XSS \u653b\u51fb \u4f60\u53ef\u80fd\u5df2\u7ecf\u610f\u8bc6\u5230\u4e86\uff0c\u8d4b\u7ed9 innerHTML \u5c5e\u6027\u7684\u5b57\u7b26\u4e32\u503c\u4e2d\u53ef\u4ee5\u5305\u62ec\u65b0\u7684 HTML \u8282\u70b9\uff0c\u8fd9\u610f\u5473\u7740\u901a\u8fc7\u7f16\u5199\u7279\u5b9a\u7684\u5b57\u7b26\u4e32\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed9 DOM \u6811\u63d2\u5165\u65b0\u8282\u70b9\uff0c\u751a\u81f3\u901a\u8fc7 <script> \u6807\u7b7e\u5f15\u5165\u6076\u610f JavaScript \u4ee3\u7801\u3002 \u8fd9\u4e5f\u5c31\u662f\u6211\u4eec\u9700\u8981\u6ce8\u610f\u7684 XSS \u653b\u51fb\u3002\u9632\u8303\u8fd9\u79cd\u653b\u51fb\u7684\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u5c31\u662f\uff0c\u4e25\u683c\u63a7\u5236 innerHTML \u5c5e\u6027\u7684\u8d4b\u503c\uff08\u6700\u597d\u4e0d\u624b\u52a8\u7ed9\u8fd9\u4e2a\u5c5e\u6027\u8d4b\u503c\uff0c\u5c24\u5176\u662f\u7ed9\u5176\u8d4b\u4e88\u4ece\u7f51\u7edc\u4e0a\u83b7\u53d6\u7684\u5b57\u7b26\u4e32\u503c\uff09\u6216\u8005\u4f7f\u7528 innerText \u5c5e\u6027\u3002 \u53e6\u5916\u4e00\u4e2a\u5e38\u7528\u7684\u5c5e\u6027\u662f innerText \uff0c\u5176\u548c innerHTML \u5c5e\u6027\u57fa\u672c\u7c7b\u4f3c\uff0c\u4f46\u662f\u4e0d\u540c\u4e4b\u5904\u662f\u5176\u4f1a\u8fdb\u884c\u5b57\u7b26\u8f6c\u4e49\uff0c\u6bd4\u5982\u8bf4 < \u5b57\u7b26\u4f1a\u8f6c\u4e49\u4e3a &lt; \uff0c\u8fd9\u6837\u5c31\u4fdd\u8bc1\u4e86\u5b57\u7b26\u4e32\u5c31\u662f\u5b57\u7b26\u4e32\uff0c\u4e0d\u4f1a\u88ab\u89e3\u8bfb\u4e3a\u65b0 DOM \u8282\u70b9\u3002 \u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u4fee\u6539\u8282\u70b9\u7684\u6837\u5f0f\uff0c\u53ea\u9700\u8981\u4fee\u6539\u5176 style \u5c5e\u6027\u5373\u53ef\u3002\u4e0d\u8fc7\u6ce8\u610f\uff0cCSS \u4e2d\u5141\u8bb8\u5c5e\u6027\u540d\u4e2d\u5305\u542b\u77ed\u5212\u7ebf - \uff0c\u4f46\u662f JavaScript \u4e2d\u4e0d\u5141\u8bb8\uff0c\u6240\u4ee5\u9047\u5230\u8fd9\u7c7b\u5c5e\u6027\u540d\u65f6\uff0c\u8bf7\u4f7f\u7528\u9a7c\u5cf0\u547d\u540d\u6cd5\u8f6c\u5199\uff1a 1 2 node . style . color = \"red\" ; node . style . fontSize = \"20px\" ; // \"font-size\" in CSS \u8c03\u6574 DOM \u6811\u7ed3\u6784 \u00b6 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 DOM \u8282\u70b9\u5bf9\u8c61\u7684 appendChild \u65b9\u6cd5\u6765\u4e3a\u8be5\u8282\u70b9\u589e\u6dfb\u4e00\u4e2a\u5b50\u8282\u70b9\u3002\u4e0d\u8fc7\u6ce8\u610f\uff0c\u5982\u679c\u589e\u6dfb\u7684\u5b50\u8282\u70b9\u662f\u539f\u5148 DOM \u6811\u4e0a\u5177\u6709\u7684\u8282\u70b9\uff0c\u5219\u9996\u5148\u4f1a\u5c06\u8fd9\u4e2a\u8282\u70b9\u6458\u9664\u540e\u6dfb\u52a0\u5230\u6307\u5b9a\u7684\u4f4d\u7f6e\u3002 \u5728\u63a7\u5236\u53f0\u4e2d\u8fd0\u884c\u4ee5\u4e0b\u4ee3\u7801\uff1a 1 2 3 let wrapper = document . getElementById ( \"circle-wrapper\" ); let redCircle = document . getElementById ( \"red-circle\" ); wrapper . appendChild ( redCircle ); \u53ef\u4ee5\u53d1\u73b0\u4e09\u4e2a\u5706\u5f62\u8c03\u6362\u4e86\u4f4d\u7f6e\uff0c\u7ea2\u8272\u7684\u5706\u5f62\u6210\u4e3a\u4e86\u4f4d\u4e8e\u6700\u5e95\u90e8\u7684\u5706\u5f62\u3002 \u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0 appendChild \u65b9\u6cd5\u6c38\u8fdc\u5c06\u8be5\u8282\u70b9\u63d2\u5165\u4e3a\u6307\u5b9a\u8282\u70b9\u7684\u6700\u540e\u4e00\u4e2a\u5b50\u8282\u70b9\uff0c\u5982\u679c\u6211\u4eec\u9700\u8981\u5177\u4f53\u6307\u5b9a\u63d2\u5165\u4f4d\u7f6e\uff0c\u5c31\u9700\u8981\u4f7f\u7528 insertBefore \u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u9700\u8981\u6307\u5b9a\u8282\u70b9\u7684\u4e00\u4e2a\u5b50\u8282\u70b9\u4f5c\u4e3a\u53c2\u8003\u5b50\u8282\u70b9\uff1a 1 2 3 4 let wrapper = document . getElementById ( \"circle-wrapper\" ); let redCircle = document . getElementById ( \"red-circle\" ); let blueCircle = document . getElementById ( \"blue-circle\" ); wrapper . insertBefore ( redCircle , blueCircle ); // The 2nd param is the reference node \u8fd9\u6837\uff0c\u7ea2\u8272\u7684\u5706\u5f62\u5c31\u63d2\u5165\u5728\u84dd\u8272\u7684\u5706\u5f62\u4e4b\u524d\u3002 \u6709\u65f6\u6211\u4eec\u9700\u8981\u7ed9 DOM \u6811\u589e\u6dfb\u8282\u70b9\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u9700\u8981\u4f7f\u7528 document.createElement \u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u80fd\u521b\u9020\u4e00\u4e2a\u6307\u5b9a\u7c7b\u578b\u7684 DOM \u6811\u8282\u70b9\u3002\u968f\u540e\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u5176\u5404\u79cd\u5c5e\u6027\u503c\uff0c\u6700\u540e\u53ef\u4ee5\u4f7f\u7528\u5404\u79cd\u63d2\u5165\u65b9\u6cd5\u5c06\u8fd9\u4e2a\u65b0\u8282\u70b9\u63d2\u5165\u5230 DOM \u6811\u4e2d\u3002 1 2 3 4 5 6 7 let purpleCircle = document . createElement ( \"div\" ); purpleCircle . id = \"purple-circle\" ; purpleCircle . className = \"circle\" ; purpleCircle . style . backgroundColor = \"purple\" ; let wrapper = document . getElementById ( \"circle-wrapper\" ); wrapper . appendChild ( purpleCircle ); \u5220\u9664\u67d0\u4e00\u4e2a\u8282\u70b9\u5219\u8f83\u4e3a\u7b80\u5355\uff0c\u6211\u4eec\u53ea\u9700\u8981\u83b7\u53d6\u9700\u8981\u5220\u9664\u7684\u8282\u70b9\u7684\u5f15\u7528\u4ee5\u53ca\u5176\u7236\u8282\u70b9\u7684\u5f15\u7528\uff0c\u7136\u540e\u5728\u7236\u7ed3\u70b9\u4e0a\u8c03\u7528 removeChild \u65b9\u6cd5\u5373\u53ef\u5220\u9664\u3002\u53c2\u8003\u4ee5\u4e0b\u4ee3\u7801\uff1a 1 2 3 4 5 let wrapper = document . getElementById ( \"circle-wrapper\" ); let redCircle = document . getElementById ( \"red-circle\" ); let removedCircle = wrapper . removeChild ( redCircle ); console . log ( redCircle === removedCircle ); // true \u53ef\u4ee5\u53d1\u73b0\uff0c removedChild \u65b9\u6cd5\u5177\u6709\u8fd4\u56de\u503c\uff0c\u5176\u8fd4\u56de\u503c\u662f\u5220\u9664\u6389\u7684\u8282\u70b9\u7684\u5f15\u7528\u3002 jQuery \u00b6 \u4f60\u6216\u8bb8\u542c\u95fb\u8fc7 jQuery \u8fd9\u4e2a\u7b2c\u4e09\u65b9\u5e93\uff0c\u5176\u5982\u6b64\u6d41\u884c\u7684\u539f\u56e0\u662f\u5176\u7b80\u5316\u4e86 JavaScript \u8bed\u8a00\u64cd\u4f5c DOM \u6811\u3001\u4fee\u6539 CSS \u7684\u8bed\u6cd5\uff0c\u5e76\u4e14\u6d88\u9664\u6d4f\u89c8\u5668\u5dee\u5f02\uff0c\u53ef\u4ee5\u5c06\u7edf\u4e00\u7684\u8bed\u6cd5\u8fd0\u7528\u4e8e\u4efb\u4f55\u4e00\u4e2a\u4e3b\u6d41\u6d4f\u89c8\u5668\u3002 Web \u524d\u7aef\u7684\u66f4\u65b0\u6362\u4ee3 \u6700\u521d\u7684\u524d\u7aef\u662f\u6ca1\u6709 jQuery \u7684\uff0c\u6240\u4ee5\u90fd\u9700\u8981\u4f7f\u7528 getElementById \u7b49 DOM \u8282\u70b9\u5185\u7f6e\u65b9\u6cd5\u6765\u5b8c\u6210 DOM \u6811\u64cd\u4f5c\u3002\u800c\u968f\u540e\uff0cjQuery \u51fa\u73b0\uff0c\u8fd9\u79cd\u8de8\u6d4f\u89c8\u5668\u4e14\u8bed\u6cd5\u7b80\u6d01\u7684\u7b2c\u4e09\u65b9\u5e93\u7acb\u523b\u5f97\u5230\u4e86\u5e7f\u6cdb\u8fd0\u7528\u3002 \u4f46\u662f\u8fd1\u5e74\u6765\u968f\u7740\u524d\u7aef\u6846\u67b6\u6d41\u884c\uff0c\u7f16\u5199\u88f8 JavaScript \u7684\u673a\u4f1a\u8d8a\u6765\u8d8a\u5c11\uff0c\u4fee\u6539 DOM \u6811\u7b49\u64cd\u4f5c\u4e5f\u5728\u524d\u7aef\u6846\u67b6\u5185\u88ab\u5c01\u88c5\u4e3a\u5404\u79cd\u6846\u67b6\u65b9\u6cd5\uff0cjQuery \u4e5f\u6e10\u6e10\u6de1\u51fa\u3002\u4f46\u662f\u7531\u4e8e\u5386\u53f2\u539f\u56e0\uff0c\u6211\u4eec\u73b0\u5728\u8fd8\u662f\u80fd\u770b\u5230\u5927\u91cf\u7684\u9700\u8981\u624b\u5199\u88f8 JavaScript \u7684\u524d\u7aef\uff0c\u8fd9\u4e9b\u524d\u7aef\u5f80\u5f80\u5e94\u7528\u4e86 jQuery\u3002\u6240\u4ee5\uff0c\u5b66\u4e60 jQuery \u7684\u57fa\u7840\u77e5\u8bc6\u8fd8\u662f\u6709\u4e00\u5b9a\u7684\u5fc5\u8981\u3002 \u6211\u4eec\u63d0\u4f9b\u7684 \u6837\u4f8b\u7f51\u9875 \u5df2\u7ecf\u4e3a\u4f60\u5f15\u7528\u4e86 jQuery\uff0c\u53ef\u4ee5\u8fd0\u884c\u4e0b\u8ff0\u4ee3\u7801\u6765\u786e\u5b9a\u662f\u5426\u5f15\u7528\u6210\u529f\uff1a 1 console . log ( $ . fn . jquery ); // 2.1.4 \u8fd9\u91cc $ \u5c31\u662f jQuery \u7684\u5168\u5c40\u5c01\u88c5\u5bf9\u8c61\uff0c\u5176\u63d0\u4f9b\u7684\u6240\u6709\u529f\u80fd\u5168\u90fd\u662f $ \u7684\u6210\u5458\u51fd\u6570\u5b9e\u73b0\u7684\u3002 \u9009\u62e9\u5668 \u00b6 \u5177\u4f53\u7684\u9009\u62e9\u5668\u8bed\u6cd5\u53ef\u4ee5\u53c2\u8003 CSS \u8bed\u8a00\u57fa\u7840\u6587\u6863\u4e2d\u76f8\u5173\u90e8\u5206 \u3002 \u6211\u4eec\u53ef\u4ee5\u5728 jQuery \u4e2d\u4f7f\u7528\u9009\u62e9\u5668\u8bed\u6cd5\u6765\u83b7\u53d6 DOM \u6811\u8282\u70b9\uff0c\u6ce8\u610f\u901a\u8fc7\u4e0b\u8ff0\u65b9\u6cd5\u83b7\u53d6\u7684\u662f\u4e00\u4e2a DOM \u6811\u8282\u70b9\u7684\u5217\u8868\uff0c\u5982\u679c\u6ca1\u6709\u7b26\u5408\u9009\u62e9\u5668\u8981\u6c42\u7684\u8282\u70b9\u5219\u8fd4\u56de\u7a7a\u5217\u8868\u3002\u5982\uff1a 1 2 3 let wrapper = $ ( \"#circle-wrapper\" ); // Find nodes with 'id=circle-wrapper' console . log ( wrapper . length ); // 1 console . log ( wrapper [ 0 ]); \u9664\u4e86\u6309\u7167 ID \u67e5\u627e\uff0c\u4e0b\u9762\u8fd8\u4e3e\u51fa\u4e86\u4e00\u4e9b\u5e38\u7528\u7684\u9009\u62e9\u5668\uff1a 1 2 3 4 5 let circles = $ ( \".circle\" ); // Find nodes with 'class=circle' console . log ( circles ); let divs = $ ( \"div\" ); // Find nodes which are <div> console . log ( divs ); \u53ef\u4ee5\u6ce8\u610f\u5230\u8fd9\u91cc\u8f93\u51fa\u7684\u5217\u8868\u5e76\u4e0d\u662f\u6211\u4eec\u4e4b\u524d\u89c1\u8fc7\u7684 DOM \u6811\u8282\u70b9\u3002\u5b9e\u9645\u4e0a\uff0c\u5176\u8fd4\u56de\u7684\u662f\u5305\u88c5\u8fc7\u4e00\u5c42\u7684 jQuery \u5bf9\u8c61\u3002\u5982\u679c\u9700\u8981\u5f97\u5230\u6700\u57fa\u672c\u7684 DOM \u6811\u8282\u70b9\u5bf9\u8c61\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u6807\u8fd0\u7b97\u7b26 [] \u53d6\u51fa\u5177\u4f53\u7684\u5143\u7d20\u6216\u8005\u4f7f\u7528 .get() \u65b9\u6cd5\u3002 1 2 3 4 let circles = $ ( \".circle\" ); // Find nodes with 'class=circle' console . log ( circles ); console . log ( circles [ 0 ]); console . log ( circles . get ( 0 )); \u4fee\u6539 DOM \u6811 \u00b6 \u5728\u83b7\u53d6\u5230 DOM \u6811\u8282\u70b9\u540e\uff0c\u5982\u679c\u9700\u8981\u4fee\u6539\u8fd9\u4e2a\u8282\u70b9\u7684\u5185\u5bb9\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 .text() \u6216\u8005 .html() \u65b9\u6cd5\u3002\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u7684\u5171\u540c\u70b9\u662f\u5982\u679c\u65e0\u53c2\u6570\u8c03\u7528\uff0c\u5219\u662f\u83b7\u53d6\u8fd9\u4e2a\u8282\u70b9\u7684\u5185\u5bb9\u3002\u5982\u679c\u6709\u53c2\u6570\u8c03\u7528\uff0c\u5219\u662f\u5c06\u8282\u70b9\u7684\u5185\u5bb9\u4fee\u6539\u4e3a\u4f20\u5165\u7684\u53c2\u6570\u3002 .text() \u4e0e .html() \u5206\u522b\u5bf9\u5e94\u7740 innerText \u548c innerHTML \u5c5e\u6027\u3002 1 2 $ ( \"#test-text\" ). text (); // \"This is a test text node.\" $ ( \"#test-text\" ). text ( \"Hello world!\" ); \u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u4fee\u6539\u67d0\u4e2a\u8282\u70b9\u7684 CSS\uff1a 1 $ ( \"#red-circle\" ). css ( \"background-color\" , \"black\" ); .css() \u4e0d\u80fd\u5b8c\u5168\u65e0\u53c2\u8c03\u7528\uff0c\u81f3\u5c11\u9700\u8981\u5728\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e2d\u4f20\u9012 CSS \u5c5e\u6027\u540d\u3002\u5982\u679c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e0d\u4f20\u5165\uff0c\u5219\u8868\u793a\u83b7\u53d6\u8fd9\u4e2a\u8282\u70b9\u67d0\u4e2a CSS \u5c5e\u6027\u7684\u503c\u3002\u5982\u679c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u7a7a\u5b57\u7b26\u4e32\uff0c\u5219\u8868\u793a\u5220\u53bb\u8fd9\u4e2a CSS \u5c5e\u6027\u3002 1 $ ( \"#red-circle\" ). css ( \"background-color\" ); // \"rgb(255, 0, 0)\" \u6211\u4eec\u4e4b\u524d\u63d0\u8fc7\uff0c\u4f7f\u7528\u9009\u62e9\u5668\u83b7\u53d6\u7684\u662f DOM \u6811\u8282\u70b9\u7684\u5217\u8868\u800c\u975e\u5355\u4e2a\u8282\u70b9\u3002\u6240\u4ee5\u5982\u679c\u5728\u542b\u6709\u591a\u4e2a DOM \u6811\u8282\u70b9\u7684 jQuery \u5bf9\u8c61\u4e0a\u4f7f\u7528 .text() \u7b49\u65b9\u6cd5\u4fee\u6539\u5185\u5bb9\uff0c\u8be5\u4fee\u6539\u4f1a\u5bf9\u8fd9\u4e2a\u5217\u8868\u5185\u6240\u6709\u7684 DOM \u6811\u8282\u70b9\u751f\u6548\u3002 \u6bd4\u5982\u6211\u60f3\u628a\u4e09\u4e2a\u5706\u90fd\u53d8\u4e3a\u9ed1\u8272\uff0c\u5c31\u53ef\u4ee5\uff1a 1 $ ( \".circle\" ). css ( \"background-color\" , \"black\" ); \u9664\u53bb .text() \u3001 .html() \u4ee5\u53ca .css() \uff0c\u83b7\u53d6\u5176\u4f59\u7684 HTML \u6807\u7b7e\u5c5e\u6027\u53ef\u4ee5\u4f7f\u7528 .attr() \uff0c\u8fd9\u91cc\u53ef\u4ee5\u53c2\u8003 \u5ed6\u96ea\u5cf0\u7684\u6559\u7a0b \u3002 \u589e\u6dfb\u548c\u5220\u9664\u8282\u70b9\u4e5f\u662f\u7b80\u5355\u7684\u3002\u589e\u6dfb\u8282\u70b9\u53ea\u9700\u8981\u5bf9\u7236\u8282\u70b9\u8c03\u7528 .append() \u65b9\u6cd5\uff0c\u5220\u9664\u5219\u662f\u5bf9\u8981\u5220\u9664\u7684\u8282\u70b9\u8c03\u7528 .remove() \u65b9\u6cd5\uff1a 1 2 $ ( \"#circle-wrapper\" ). append ( $ ( \"#red-circle\" )); $ ( \"#red-circle\" ). remove (); \u8981\u5728\u6307\u5b9a\u8282\u70b9\u7684\u524d\u9762\u6216\u540e\u9762\u589e\u6dfb\u5144\u5f1f\u8282\u70b9\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528 .after() \u6216\u8005 .before() \u65b9\u6cd5\uff1a 1 2 3 4 5 $ ( \"#red-circle\" ). after ( $ ( document . createElement ( \"div\" )) . attr ( \"class\" , \"circle\" ) . css ( \"background-color\" , \"purple\" ) ) \u53ef\u4ee5\u6ce8\u610f\u5230\u8fd9\u91cc\u5c06\u4e00\u4e2a DOM \u6811\u8282\u70b9\u5bf9\u8c61\u4f20\u5165\u4e86 $() \u4e4b\u4e2d\uff0c\u5176\u4f5c\u7528\u662f\u5c06 DOM \u6811\u8282\u70b9\u5305\u88c5\u4e3a jQuery \u5bf9\u8c61\u4ee5\u4f7f\u7528 .attr() \u7b49\u65b9\u6cd5\u3002 \u4e8b\u4ef6 \u00b6 \u6211\u4eec\u73b0\u5728\u8003\u8651\u7f51\u9875\u5982\u4f55\u4e0e\u7528\u6237\u4ea4\u4e92\uff0c\u4e5f\u5c31\u662f\u8bf4\u7528\u6237\u662f\u5982\u4f55\u89e6\u53d1\u63cf\u8ff0\u4ea4\u4e92\u884c\u4e3a\u7684 JavaScript \u7684\u3002\u8fd9\u91cc\uff0c\u5c31\u9700\u8981\u5f15\u5165 \u4e8b\u4ef6 \u8fd9\u4e2a\u6982\u5ff5\u3002 \u7528\u6237\u70b9\u51fb\u67d0\u4e00\u4e2a HTML \u7ec4\u4ef6\u6216\u8005\u5728\u6587\u672c\u6846\u4e2d\u8f93\u5165\u3001\u6587\u6863\u6811\u52a0\u8f7d\u7b49\u884c\u4e3a\u90fd\u53ef\u4ee5\u662f\u4e8b\u4ef6\uff0c\u8fd9\u4e9b\u4e8b\u4ef6\u7684\u76f8\u5173\u4fe1\u606f\uff08\u6bd4\u5982\u9f20\u6807\u70b9\u51fb\u4e8b\u4ef6\u4e2d\u9f20\u6807\u70b9\u51fb\u4f4d\u7f6e\u7684\u6a2a\u7eb5\u5750\u6807\u7b49\uff09\u5c06\u4f1a\u88ab\u5305\u88c5\u4e3a\u4e00\u4e2a\u5bf9\u8c61\u4f20\u5165\u5230 JavaScript \u7684\u4e8b\u4ef6\u5904\u7406\u5faa\u73af\uff0cJavaScript \u5f15\u64ce\u63a5\u53d7\u5230\u4e8b\u4ef6\u540e\u5c31\u4f1a\u8c03\u7528\u76f8\u5e94\u7684\u56de\u8c03\u51fd\u6570\uff0c\u800c\u4ea4\u4e92\u884c\u4e3a\u5c31\u5b9a\u4e49\u5728\u8fd9\u4e9b\u56de\u8c03\u51fd\u6570\u4e4b\u4e2d\u3002 \u73b0\u5728\u5c31\u4ee5\u6309\u94ae\u70b9\u51fb\u4e8b\u4ef6\u4e3a\u4f8b\uff0c\u4ecb\u7ecd\u5982\u4f55\u5229\u7528 jQuery \u7f16\u5199\u70b9\u51fb\u4e8b\u4ef6\u7684\u56de\u8c03\u51fd\u6570\u3002 \u4f7f\u7528\u6211\u4eec\u63d0\u4f9b\u7684\u6837\u4f8b \u5728\u5b66\u4e60\u8fd9\u4e00\u5c0f\u8282\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u70b9\u51fb\u8fdb\u5165 \u6211\u4eec\u7684\u6837\u4f8b\u7f51\u9875 \u5e76\u6309\u4e0b F12 \u6253\u5f00\u63a7\u5236\u53f0\uff0c\u5728\u63a7\u5236\u53f0\u91cc\u8fd0\u884c\u8fd9\u4e00\u8282\u63d0\u4f9b\u7684\u6837\u4f8b\u4ee3\u7801\u6765\u7406\u89e3 DOM \u6811\u64cd\u4f5c\u3002 \u6211\u4eec\u73b0\u5728\u5e0c\u671b\u6211\u4eec\u70b9\u51fb\u8fd9\u4e2a\u6309\u94ae\u540e\uff0c\u7f51\u9875\u80fd\u5f39\u7a97\u663e\u793a\u5bf9\u6211\u4eec\u7684\u95ee\u5019\u3002\u663e\u793a\u5f39\u7a97\u7684\u56de\u8c03\u51fd\u6570\u53ef\u4ee5\u89c4\u5b9a\u4e3a\uff1a 1 2 3 () => { alert ( \"Hello!\" ); } \u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u5c06\u4e0a\u8ff0\u56de\u8c03\u51fd\u6570\u7ed1\u5b9a\u5230\u6309\u94ae\u4e0a\uff1a 1 2 3 $ ( \"#test-button\" ). on ( \"click\" , () => { alert ( \"Hello!\" ); }); \u8fd9\u91cc $(\"#test-button\") \u662f\u5148\u524d\u63d0\u5230\u8fc7\u7684\u9009\u62e9\u5668\uff0c\u7528\u4e8e\u9009\u62e9\u51fa\u9700\u8981\u7ed1\u5b9a\u4e8b\u4ef6\u56de\u8c03\u51fd\u6570\u7684\u6309\u94ae\u3002\u4e4b\u540e\u8c03\u7528\u5176 .on() \u65b9\u6cd5\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u6307\u793a\u9700\u8981\u7ed9\u4f55\u79cd\u4e8b\u4ef6\u7ed1\u5b9a\u56de\u8c03\uff0c\u8fd9\u91cc \"click\" \u8868\u793a\u7ed9\u70b9\u51fb\u4e8b\u4ef6\u7ed1\u5b9a\u3002\u7b2c\u4e8c\u4e2a\u53c2\u6570\u5219\u662f\u9700\u8981\u6267\u884c\u7684\u56de\u8c03\u51fd\u6570\uff0c\u5728\u8fd9\u91cc\uff0c\u6309\u94ae\u88ab\u70b9\u51fb\u7684\u65f6\u5019\uff0c\u8be5\u56de\u8c03\u5c31\u4f1a\u6267\u884c\u3002 \u7531\u4e8e\u70b9\u51fb\u4e8b\u4ef6\u5f88\u5e38\u7528\uff0c\u6240\u4ee5\u8fd8\u6709\u8fd9\u6837\u7684\u7b80\u5199\uff1a 1 2 3 $ ( \"#test-button\" ). click (() => { alert ( \"Hello!\" ); }); \u6211\u4eec\u5148\u524d\u63d0\u5230\u4e86\uff0c\u548c\u4e8b\u4ef6\u76f8\u5173\u7684\u6240\u6709\u53c2\u6570\u90fd\u4f1a\u88ab\u5305\u88c5\u4e3a\u5bf9\u8c61\u4f20\u5165\u5904\u7406\u5f15\u64ce\uff0c\u800c\u8fd9\u4e2a\u5bf9\u8c61\u5c31\u4f1a\u8fdb\u4e00\u6b65\u4f5c\u4e3a\u56de\u8c03\u51fd\u6570\u7684\u53c2\u6570\u4f20\u5165\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u6253\u5370\u51fa\u6765\uff1a 1 $ ( \"#test-button\" ). click ( console . log ); \u8fd9\u4e2a\u65f6\u5019\u70b9\u51fb\u6309\u94ae\u5c31\u53ef\u4ee5\u770b\u5230\u63a7\u5236\u53f0\u4e0a\u8f93\u51fa\u7684\u4e8b\u4ef6\u76f8\u5173\u53c2\u6570\u4e86\u3002 \u4f46\u662f\u5982\u679c\u6211\u4eec\u9700\u8981\u771f\u6b63\u81ea\u5df1\u7f16\u5199\u4e00\u4e2a\u6709\u4ea4\u4e92\u884c\u4e3a\u7684\u7f51\u9875\uff0c\u6211\u4eec\u5c31\u9700\u8981\u628a\u4e0a\u9762\u63d0\u5230\u7684\u4ee3\u7801\u5d4c\u5165 HTML \u4e4b\u4e2d\uff0c\u56e0\u4e3a\u6211\u4eec\u8981\u6c42\u8fd9\u4e9b\u4ea4\u4e92\u884c\u4e3a\u968f\u7740\u7f51\u9875\u52a0\u8f7d\u5c31\u5b9a\u4e49\u597d\uff0c\u5426\u5219\u5c31\u9700\u8981\u7528\u6237\u624b\u52a8\u5728\u7f51\u9875\u52a0\u8f7d\u540e\u5728\u63a7\u5236\u53f0\u5b9a\u4e49\uff0c\u8fd9\u663e\u7136\u8fdd\u53cd\u5e38\u7406\u3002 \u4f60\u53ef\u80fd\u5df2\u7ecf\u4e86\u89e3\uff0cHTML \u4e2d\u53ef\u4ee5\u4f7f\u7528 <script /> \u6807\u7b7e\u63d2\u5165 JavaScript \u4ee3\u7801\uff0c\u6240\u4ee5\u4f60\u53ef\u80fd\u6253\u7b97\u8fd9\u6837\u5199\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <!DOCTYPE html> < html lang = \"zh\" > < head > < meta charset = \"utf-8\" > < title > \u6309\u94ae\u70b9\u51fb\u4e8b\u4ef6\u6f14\u793a\u7f51\u9875 </ title > < script src = \"//code.jquery.com/jquery-2.1.4.min.js\" ></ script > < script > $ ( \"#test-button\" ). on ( \"click\" , () => { alert ( \"Hello!\" ); }); console . log ( $ ( \"#test-button\" ). length ); </ script > </ head > < body > < button id = \"test-button\" > Click me! </ button > </ body > </ html > \u4e0a\u8ff0 HTML \u4ee3\u7801\u5df2\u7ecf\u653e\u5728 \u6211\u4eec\u7684\u6837\u4f8b\u7f51\u9875\u4e4b\u4e2d \u3002\u5982\u679c\u4f60\u6d4f\u89c8\u540e\u70b9\u51fb\u6309\u94ae\uff0c\u4f60\u4f1a\u53d1\u73b0\u5e76\u6ca1\u6709\u6309\u7167\u9884\u671f\u5f39\u51fa\u5f39\u7a97\u3002 \u8fd9\u91cc\u5c31\u9700\u8981\u63d0\u5230 <script /> \u6807\u7b7e\u4e2d\u4ee3\u7801\u7684\u6267\u884c\u65f6\u673a\u3002\u5b9e\u9645\u4e0a\uff0c\u8fd9\u4e9b\u4ee3\u7801\u5c06\u4f1a\u5728\u6587\u6863\u52a0\u8f7d\u5b8c\u6bd5\u4e4b\u524d\u5c31\u6267\u884c\u5b8c\u6bd5\uff0c\u6b64\u65f6\u7684 DOM \u4e0a\u8fd8\u672a\u6709\u6309\u94ae\u5bf9\u8c61\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u9009\u62e9\u5668\u5e94\u8be5\u4ec0\u4e48\u90fd\u83b7\u5f97\u4e0d\u5230\uff0c\u4ece\u800c\u7ed1\u5b9a\u5931\u8d25\u3002 \u5b9e\u9645\u4e0a\u4e0a\u8ff0\u4ee3\u7801\u91cc\uff0c\u6211\u4eec\u7559\u4e0b\u4e86\u4e00\u53e5 console.log($(\"#test-button\").length) \uff0c\u6240\u4ee5\u53ef\u4ee5\u5728\u63a7\u5236\u53f0\u91cc\u53d1\u73b0\uff0c\u6b64\u65f6\u9009\u62e9\u5668\u4ec0\u4e48\u90fd\u6ca1\u6709\u9009\u62e9\u5230\uff08\u8f93\u51fa\u4e3a 0 \uff09\uff0c\u7b26\u5408\u6211\u4eec\u7684\u8bb2\u89e3\u3002 \u90a3\u4e48\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5462\uff0c\u4e8b\u5b9e\u4e0a\u6211\u4eec\u5148\u524d\u63d0\u5230\u8fc7 DOM \u52a0\u8f7d\u5b8c\u6bd5\u4e5f\u662f\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06\u7ed1\u5b9a\u6309\u94ae\u70b9\u51fb\u4e8b\u4ef6\u5199\u4e3a DOM \u52a0\u8f7d\u5b8c\u6bd5\u7684\u56de\u8c03\uff1a 1 2 3 4 5 $ ( document ). on ( \"ready\" , () => { $ ( \"#test-button\" ). on ( \"click\" , () => { alert ( \"Hello!\" ); }); }); \u7531\u4e8e\u5728 DOM \u52a0\u8f7d\u5b8c\u6bd5\u540e\u6302\u8f7d\u5404\u79cd\u56de\u8c03\u51fd\u6570\u662f\u76f8\u5f53\u5e38\u89c1\u7684\u9700\u6c42\uff0c\u6240\u4ee5\u4e0a\u8ff0\u5199\u6cd5\u4e00\u822c\u53ef\u4ee5\u7b80\u5316\u4e3a\uff1a 1 2 3 4 5 $ (() => { $ ( \"#test-button\" ). on ( \"click\" , () => { alert ( \"Hello!\" ); }); }); \u8fd9\u6837\u4fee\u6539\u540e\u7684\u4ee3\u7801\u53ef\u4ee5\u53c2\u89c1 \u6211\u4eec\u7684\u6837\u4f8b\u7f51\u9875 \u3002","title":"\u6d4f\u89c8\u5668\u4e2d\u7684 JavaScript"},{"location":"languages/javascript/browser/#javascript","text":"JavaScript \u6700\u521d\u8bbe\u8ba1\u7684\u76ee\u7684\u5c31\u662f\u8fd0\u884c\u5728\u6d4f\u89c8\u5668\u4e2d\u7ed9\u9759\u6001 HTML \u8d4b\u4e88\u52a8\u6001\u6548\u679c\uff0c\u800c\u5373\u4f7f\u7ecf\u5386\u4e86\u82e5\u5e72\u5e74\u4ee3\uff0c\u73b0\u5728\u7684\u6d4f\u89c8\u5668\u4e2d\u901a\u7528\u7684\u811a\u672c\u8bed\u8a00\u4f9d\u7136\u662f JavaScript\u3002 \u5373\u4f7f\u4f60\u4f7f\u7528\u524d\u7aef\u6846\u67b6\u642d\u5efa\u7f51\u9875\u5e94\u7528\uff0c\u6211\u4eec\u4f9d\u7136\u5efa\u8bae\u4f60\u9605\u8bfb\u8fd9\u4e00\u90e8\u5206\u5185\u5bb9\u3002\u8fd9\u662f\u56e0\u4e3a\u524d\u7aef\u6846\u67b6\u6700\u7ec8\u4f9d\u7136\u662f\u5c06\u4f60\u7684\u4ee3\u7801\u7ffb\u8bd1\u4e3a\u6d4f\u89c8\u5668\u4e2d\u7684 JavaScript \u5e76\u8fd0\u884c\uff0c\u638c\u63e1\u8fd9\u4e00\u90e8\u5206\u5185\u5bb9\u53ef\u4ee5\u5e2e\u52a9\u4f60\u66f4\u597d\u5730\u7406\u89e3\u6846\u67b6\u8fd0\u4f5c\u6d41\u7a0b\u548c debug\u3002","title":"\u6d4f\u89c8\u5668\u4e2d\u7684 JavaScript"},{"location":"languages/javascript/browser/#_1","text":"\u6d4f\u89c8\u5668\u5185\u7f6e\u4e86\u90e8\u5206\u5168\u5c40\u5bf9\u8c61\uff0c\u8fd9\u4e9b\u5bf9\u8c61\u5f80\u5f80\u4e0e\u7a97\u53e3\u3001\u5c4f\u5e55\u3001\u6d4f\u89c8\u8bb0\u5f55\u7b49\u4fe1\u606f\u6709\u5173\u3002\u7f16\u5199\u76f8\u5173 JavaScript \u4ee3\u7801\u7684\u65f6\u5019\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e9b\u5bf9\u8c61\u83b7\u53d6\u76f8\u5173\u4fe1\u606f\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e9b\u8c03\u7528\u5bf9\u8c61\u7684\u65b9\u6cd5\u6765\u5b9e\u73b0\u4e00\u4e9b\u548c\u6d4f\u89c8\u5668\u76f8\u5173\u7684\u64cd\u4f5c\u3002 window \u5bf9\u8c61\u662f\u6700\u5e38\u7528\u7684\u5185\u7f6e\u5168\u5c40\u53d8\u91cf\u4e4b\u4e00\u3002\u8be5\u53d8\u91cf\u7684\u4e00\u5927\u91cd\u8981\u4f5c\u7528\u662f \u5145\u5f53\u5168\u5c40\u4f5c\u7528\u57df \uff0c\u4e5f\u5c31\u662f\u5c06\u6240\u6709\u5168\u5c40\u53d8\u91cf\u548c\u51fd\u6570\u7ed1\u5b9a\u4e3a\u5176\u5c5e\u6027\uff0c\u8fd9\u4e00\u70b9\u5728\u5148\u524d\u8bb2\u89e3 this \u6307\u5411\u7684\u65f6\u5019\u63d0\u5230\u8fc7\uff0c\u53c2\u89c1 JavaScript \u7684\u9762\u5411\u5bf9\u8c61 \u90e8\u5206\u7684\u201c\u5168\u5c40\u5bf9\u8c61\u201d\u6ce8\u89e3\u3002 \u9664\u6b64\u4e4b\u5916\uff0c window \u5bf9\u8c61\u6709 innerHeight, innerWidth, outerHeight, outerWidth \u7b49\u4e0e\u7a97\u53e3\u5c3a\u5bf8\u6709\u5173\u7684\u5c5e\u6027\uff0c\u6bd4\u5982\u4f60\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u63a7\u5236\u53f0\u4e2d\u8fd0\u884c\u4e0b\u8ff0\u4ee3\u7801\u83b7\u53d6\u6d4f\u89c8\u5668\u5185\u7a97\u53e3\u7684\u5bbd\u9ad8\uff1a 1 console . log ( `Inner window size: ${ window . innerWidth } x ${ window . innerHeight } ` ); \u4f60\u53ef\u4ee5\u5c1d\u8bd5\u6700\u5927\u5316\u6216\u62d6\u52a8\u7f29\u653e\u6d4f\u89c8\u5668\u7a97\u53e3\u540e\u518d\u8fd0\u884c\u4e0a\u8ff0\u4ee3\u7801\uff0c\u89c2\u5bdf\u8f93\u51fa\u7684\u6539\u53d8\u3002 screen \u5bf9\u8c61\u4fdd\u5b58\u7684\u5219\u662f\u5c4f\u5e55\u76f8\u5173\u7684\u4fe1\u606f\uff0c\u5982\u5c4f\u5e55\u5bbd\u9ad8\u548c\u989c\u8272\u4f4d\u6570\u7b49\uff1a 1 console . log ( `Screen size: ${ screen . width } x ${ screen . height } ` ); navigator \u5bf9\u8c61\u4fdd\u5b58\u4e86\u6d4f\u89c8\u5668\u76f8\u5173\u7684\u5927\u91cf\u4fe1\u606f\uff0c\u6bd4\u5982\u8bf4\u6d4f\u89c8\u5668\u540d\u79f0\u3001\u8bed\u8a00\u3001\u7248\u672c\u3001\u64cd\u4f5c\u7cfb\u7edf\u7c7b\u578b\u7b49\u7b49\uff1a 1 2 3 4 5 6 7 console . log ( `{ name: ${ navigator . appName } , version: ${ navigator . appVersion } , language: ${ navigator . language } , platform: ${ navigator . platform } , userAgent: ${ navigator . userAgent } , }` ); location \u5bf9\u8c61\u4fdd\u5b58\u4e86\u548c URL \u76f8\u5173\u7684\u4e00\u4e9b\u4fe1\u606f\u3002\u5047\u8bbe\u5f53\u524d\u9875\u9762\u7684 URL \u4e3a\u4e0b\u8ff0\uff0c\u5176\u5305\u542b\u4e86\u534f\u8bae\u3001\u4e3b\u673a\u540d\u3001\u7aef\u53e3\u53f7\u3001\u53c2\u6570\u7b49\u7b49\u4fe1\u606f\uff1a 1 https://www.test.com:8000/static/path?key=114514 \u6b64\u65f6 location \u5bf9\u8c61\u4e2d\u7684\u5404\u4e2a\u5c5e\u6027\u5b58\u50a8\u7740\u8fd9\u4e2a URL \u7684\u5404\u90e8\u5206\uff1a location.href \u5b58\u50a8 URL \u672c\u8eab\u3002\u5373 https://www.test.com:8000/static/path?key=114514 location.protocol \u5b58\u50a8 URL \u4f7f\u7528\u7684\u534f\u8bae\u3002\u5373 https location.host \u5b58\u50a8\u5f53\u524d\u7684\u4e3b\u673a\u540d\u3002\u5373 www.host.com location.port \u5b58\u50a8\u5f53\u524d\u4f7f\u7528\u7684\u7aef\u53e3\u3002\u5373 8000 location.pathname \u5b58\u50a8\u5f53\u524d\u8bbf\u95ee\u7684\u8d44\u6e90\u8def\u5f84\u3002\u5373 /static/path location.search \u5b58\u50a8\u5f53\u524d\u4f20\u9012\u7684\u53c2\u6570\u5217\u8868\u3002\u5373 ?key=114514 \uff0c\u6ce8\u610f ? \u5b57\u7b26\u4e5f\u5305\u542b\u5728\u5185 location \u5bf9\u8c61\u8fd8\u6709\u4e24\u4e2a\u5e38\u7528\u65b9\u6cd5\uff0c\u5373 location.assign \u548c location.reload \u3002\u524d\u8005\u7528\u4e8e\u5f3a\u5236\u9875\u9762\u8df3\u8f6c\uff0c\u540e\u8005\u5219\u7528\u4e8e\u5f3a\u5236\u91cd\u65b0\u8f7d\u5165\u5f53\u524d\u9875\u9762\u3002\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u5c1d\u8bd5\u5728\u63a7\u5236\u53f0\u4e2d\u8fd0\u884c\u4e0b\u8ff0\u4ee3\u7801\uff1a 1 2 location . assign ( \"https://docs.net9.org\" ); location . reload (); document \u5bf9\u8c61\u662f\u5f53\u524d\u9875\u9762\u6574\u4e2a DOM \u6811\u7684\u6839\u8282\u70b9\u3002 \u4ec0\u4e48\u662f DOM \u6811 HTML \u6240\u8868\u793a\u7684\u9875\u9762\u4e2d\u5404\u4e2a\u5143\u7d20\u662f\u6309\u7167\u6811\u7684\u7ed3\u6784\u5b89\u6392\u7684\uff0c\u6811\u4e0a\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u662f\u4e00\u4e2a HTML \u5143\u7d20\uff0c\u800c\u8fd9\u68f5\u6811\u5c31\u662f\u6240\u8c13\u7684 DOM \u6811\uff08\u82f1\u8bed\uff1aDocument Object Module Tree\uff09\u3002 \u76f8\u5173\u77e5\u8bc6\u53ef\u4ee5\u53c2\u8003 HTML \u8bed\u8a00\u57fa\u7840 \u3002 \u5728\u540e\u7eed\u90e8\u5206\u6211\u4eec\u4f1a\u5177\u4f53\u4ecb\u7ecd\u8be5\u5982\u4f55\u5229\u7528\u597d document \u5bf9\u8c61\u6765\u67e5\u8be2\u3001\u4fee\u6539 DOM \u6811\u3002","title":"\u6d4f\u89c8\u5668\u5185\u7f6e\u5bf9\u8c61"},{"location":"languages/javascript/browser/#dom","text":"\u5f88\u591a\u65f6\u5019\u4f60\u4e0d\u9700\u8981\u76f4\u63a5\u64cd\u4f5c DOM \u6811 JavaScript \u8bed\u8a00\u672c\u8eab\u5f00\u653e\u4e86\u76f8\u5f53\u591a\u4e14\u529f\u80fd\u5f3a\u52b2\u7684\u51fd\u6570\u4ee5\u64cd\u4f5c DOM \u6811\uff0c\u4f46\u662f\u5982\u679c\u5229\u7528\u4e0d\u5f53\uff0c\u5f88\u6709\u53ef\u80fd\u9020\u6210\u7f51\u9875\u5d29\u6e83\u7b49\u610f\u6599\u4e4b\u5916\u7684\u7ed3\u679c\u3002\u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\u4ee5\u53ca\u65b9\u4fbf\u7f16\u7a0b\u4eba\u5458\uff0c\u8bb8\u591a\u7f51\u9875\u524d\u7aef\u6846\u67b6\u5df2\u7ecf\u5c06\u5bf9 DOM \u6811\u7684\u64cd\u4f5c\u5c01\u88c5\u6210\u76f8\u5173\u7684\u51fd\u6570\u6216\u8005\u8bed\u6cd5\u3002 \u5982\u679c\u4f60\u53ea\u9700\u8981\u5b66\u4e60\u5177\u4f53\u7684\u6846\u67b6\u4ee5\u5b8c\u6210\u7279\u5b9a\u7684\u524d\u7aef\u9879\u76ee\uff0c\u8bf7\u5c3d\u91cf\u51cf\u5c11\u5bf9 DOM \u6811\u7684\u76f4\u63a5\u64cd\u4f5c\u3002\u4f46\u662f\u4e3a\u4e86\u6784\u5efa\u5b8c\u6574\u7684 JavaScript \u903b\u8f91\u4f53\u7cfb\uff0c\u6211\u4eec\u8fd8\u662f\u5efa\u8bae\u81f3\u5c11\u4e86\u89e3\u3001\u77e5\u6653\u8fd9\u4e9b DOM \u6811\u8bed\u6cd5\u3002 \u4f7f\u7528\u6211\u4eec\u63d0\u4f9b\u7684\u6837\u4f8b \u5728\u5b66\u4e60\u8fd9\u4e00\u5c0f\u8282\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u70b9\u51fb\u8fdb\u5165 \u6211\u4eec\u7684\u6837\u4f8b\u7f51\u9875 \u5e76\u6309\u4e0b F12 \u6253\u5f00\u63a7\u5236\u53f0\uff0c\u5728\u63a7\u5236\u53f0\u91cc\u8fd0\u884c\u8fd9\u4e00\u8282\u63d0\u4f9b\u7684\u6837\u4f8b\u4ee3\u7801\u6765\u7406\u89e3 DOM \u6811\u64cd\u4f5c\u3002","title":"DOM \u6811\u8282\u70b9\u5e38\u7528\u65b9\u6cd5"},{"location":"languages/javascript/browser/#dom_1","text":"\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0b\u8ff0\u5185\u7f6e\u65b9\u6cd5\u67e5\u627e\u7b26\u5408\u8981\u6c42\u7684 DOM \u8282\u70b9\uff1a document.getElementById \u3002\u6839\u636e\u8282\u70b9 ID \u67e5\u627e\uff0c\u8282\u70b9 ID \u662f\u552f\u4e00\u7684\uff0c\u6545\u8be5\u65b9\u6cd5\u8fd4\u56de\u7684\u662f\u5177\u4f53\u7684 DOM \u8282\u70b9\u3002\u6bd4\u5982\u8bf4\uff1a 1 document . getElementById ( \"red-block\" ); \u4e0a\u8ff0\u4ee3\u7801\u4f1a\u8fd4\u56de\u4e00\u4e2a DOM \u5143\u7d20\uff0c\u5728\u63a7\u5236\u53f0\u91cc\u663e\u793a\u4e3a\u4e00\u4e2a HTML \u6807\u7b7e\uff0c\u9f20\u6807\u60ac\u6d6e\u4e8e\u6807\u7b7e\u4e0a\u53ef\u4ee5\u770b\u5230\u7f51\u9875\u4e0a\u5bf9\u5e94\u5143\u7d20\u9ad8\u4eae\u663e\u793a\u3002 getElementsByClassName \u3002\u8be5\u65b9\u6cd5\u4e3a DOM \u8282\u70b9\u5bf9\u8c61\u5185\u7f6e\u65b9\u6cd5\uff0c\u542b\u4e49\u4e3a\u5728\u4ee5\u8be5\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u5185\u67e5\u627e\u6240\u6709 class \u5c5e\u6027\u4e3a\u7ed9\u5b9a\u503c\u7684\u8282\u70b9\uff0c\u5176\u8fd4\u56de\u7684\u662f\u4e00\u4e2a DOM \u8282\u70b9\u7684\u5217\u8868\u3002\u6bd4\u5982\u8bf4\uff1a 1 document . getElementsByClassName ( \"block\" ); \u8be5\u65b9\u6cd5\u8fd4\u56de\u4e86\u6240\u6709 class \u4e3a square \u7684 DOM \u8282\u70b9\u6784\u6210\u7684\u5217\u8868\u3002 \u4e0a\u8ff0\u4e24\u4e2a\u65b9\u6cd5\u53ef\u4ee5\u8054\u5408\u4f7f\u7528\uff1a 1 document . getElementById ( \"circle-wrapper\" ). getElementsByClassName ( \"circle\" ); \u8fd9\u6bb5\u4ee3\u7801\u610f\u5473\u7740\u5148\u6839\u636e ID \u67e5\u627e\u5230\u4e00\u4e2a DOM \u8282\u70b9\uff0c\u518d\u5728\u5176\u5185\u90e8\u67e5\u627e\u6240\u6709 class \u5c5e\u6027\u4e3a circle \u7684\u8282\u70b9\u3002 getElementsByTagName \u3002\u8be5\u65b9\u6cd5\u4e3a DOM \u8282\u70b9\u5bf9\u8c61\u5185\u7f6e\u65b9\u6cd5\uff0c\u542b\u4e49\u4e3a\u5728\u4ee5\u8be5\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u5185\u67e5\u627e\u6240\u6709\u6807\u7b7e\u540d\u4e3a\u7ed9\u5b9a\u503c\u7684\u8282\u70b9\uff08\u5982 <p /> \u8282\u70b9\u7684\u6807\u7b7e\u540d\u5c31\u662f 'p' \uff09\uff0c\u5176\u8fd4\u56de\u7684\u662f\u4e00\u4e2a DOM \u8282\u70b9\u7684\u5217\u8868\u3002\u6bd4\u5982\u8bf4\uff1a 1 document . getElementById ( \"circle-wrapper\" ). getElementsByTagName ( \"div\" ); \u9664\u6b64\u4ee5\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528 DOM \u8282\u70b9\u5bf9\u8c61\u5185\u7f6e\u7684 querySelector \u4e0e querySelectorAll \u65b9\u6cd5\uff0c\u5229\u7528\u9009\u62e9\u5668\u8bed\u6cd5\u6765\u8fdb\u884c\u66f4\u7cbe\u786e\u7684\u67e5\u627e\u3002 querySelector \u641c\u7d22\u8303\u56f4\u662f\u4ee5\u8be5 DOM \u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u6ee1\u8db3\u9009\u62e9\u5668\u8981\u6c42\u7684 \u7b2c\u4e00\u4e2a DOM \u8282\u70b9\u3002\u800c querySelectorAll \u4f1a\u8fd4\u56de\u5b50\u6811\u5185\u6240\u6709\u6ee1\u8db3\u9009\u62e9\u5668\u8981\u6c42\u7684 DOM \u8282\u70b9\u6784\u6210\u7684\u5217\u8868\u3002 \u5177\u4f53\u7684\u9009\u62e9\u5668\u8bed\u6cd5\u53ef\u4ee5\u53c2\u8003 CSS \u8bed\u8a00\u57fa\u7840\u6587\u6863\u4e2d\u76f8\u5173\u90e8\u5206 \u3002","title":"\u67e5\u627e DOM \u8282\u70b9"},{"location":"languages/javascript/browser/#dom_2","text":"\u8fb9\u505a\u8fb9\u5b66 \u8fd9\u4e00\u8282\u4e2d\uff0c\u8bfb\u8005\u53ef\u4ee5\u5148\u5728\u63a7\u5236\u53f0\u4e2d\u8fd0\u884c\uff1a 1 let node = document . getElementById ( \"test-text\" ); \u6765\u83b7\u53d6\u6211\u4eec\u7528\u4e8e\u6f14\u793a\u7684 DOM \u8282\u70b9\u3002 DOM \u8282\u70b9\u5bf9\u8c61\u6709\u4e00\u4e2a\u76f8\u5f53\u91cd\u8981\u7684\u5c5e\u6027\uff0c\u5373 innerHTML \uff0c\u5176\u503c\u5c31\u662f\u4e00\u5bf9\u95ed\u5408\u7684 HTML \u6807\u7b7e\u4e4b\u95f4\u7684\u6587\u672c\u3002\u6bd4\u5982\u8bf4\u4e0b\u8ff0 HTML \u7684 <p> \u8282\u70b9\uff1a 1 < p > The color is < span style = \"color:red\" > RED </ span > ! </ p > \u5176 innerHTML \u5c5e\u6027\u503c\u5c31\u662f ' The color is <span style=\"color:red\"> RED </span> ! ' \u3002 \u8fd9\u4e2a\u5c5e\u6027\u662f\u53ef\u4ee5\u968f\u610f\u8bfb\u5199\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539\u8fd9\u4e2a\u5c5e\u6027\u503c\u6765\u76f4\u63a5\u8c03\u6574 DOM \u8282\u70b9\u3002\u6bd4\u5982\u8bf4\u5728\u63a7\u5236\u53f0\u4e2d\u8fd0\u884c\u4e0b\u8ff0\u4ee3\u7801\uff1a 1 node . innerHTML = ' The color is <span style=\"color:red\"> RED </span> ! ' \u5c31\u4f1a\u53d1\u73b0\u539f\u5148\u7684\u6587\u672c This is a test text node. \u66ff\u6362\u6210\u4e86\u6211\u4eec\u8bbe\u7f6e\u7684\u6587\u672c\u3002 XSS \u653b\u51fb \u4f60\u53ef\u80fd\u5df2\u7ecf\u610f\u8bc6\u5230\u4e86\uff0c\u8d4b\u7ed9 innerHTML \u5c5e\u6027\u7684\u5b57\u7b26\u4e32\u503c\u4e2d\u53ef\u4ee5\u5305\u62ec\u65b0\u7684 HTML \u8282\u70b9\uff0c\u8fd9\u610f\u5473\u7740\u901a\u8fc7\u7f16\u5199\u7279\u5b9a\u7684\u5b57\u7b26\u4e32\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed9 DOM \u6811\u63d2\u5165\u65b0\u8282\u70b9\uff0c\u751a\u81f3\u901a\u8fc7 <script> \u6807\u7b7e\u5f15\u5165\u6076\u610f JavaScript \u4ee3\u7801\u3002 \u8fd9\u4e5f\u5c31\u662f\u6211\u4eec\u9700\u8981\u6ce8\u610f\u7684 XSS \u653b\u51fb\u3002\u9632\u8303\u8fd9\u79cd\u653b\u51fb\u7684\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u5c31\u662f\uff0c\u4e25\u683c\u63a7\u5236 innerHTML \u5c5e\u6027\u7684\u8d4b\u503c\uff08\u6700\u597d\u4e0d\u624b\u52a8\u7ed9\u8fd9\u4e2a\u5c5e\u6027\u8d4b\u503c\uff0c\u5c24\u5176\u662f\u7ed9\u5176\u8d4b\u4e88\u4ece\u7f51\u7edc\u4e0a\u83b7\u53d6\u7684\u5b57\u7b26\u4e32\u503c\uff09\u6216\u8005\u4f7f\u7528 innerText \u5c5e\u6027\u3002 \u53e6\u5916\u4e00\u4e2a\u5e38\u7528\u7684\u5c5e\u6027\u662f innerText \uff0c\u5176\u548c innerHTML \u5c5e\u6027\u57fa\u672c\u7c7b\u4f3c\uff0c\u4f46\u662f\u4e0d\u540c\u4e4b\u5904\u662f\u5176\u4f1a\u8fdb\u884c\u5b57\u7b26\u8f6c\u4e49\uff0c\u6bd4\u5982\u8bf4 < \u5b57\u7b26\u4f1a\u8f6c\u4e49\u4e3a &lt; \uff0c\u8fd9\u6837\u5c31\u4fdd\u8bc1\u4e86\u5b57\u7b26\u4e32\u5c31\u662f\u5b57\u7b26\u4e32\uff0c\u4e0d\u4f1a\u88ab\u89e3\u8bfb\u4e3a\u65b0 DOM \u8282\u70b9\u3002 \u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u4fee\u6539\u8282\u70b9\u7684\u6837\u5f0f\uff0c\u53ea\u9700\u8981\u4fee\u6539\u5176 style \u5c5e\u6027\u5373\u53ef\u3002\u4e0d\u8fc7\u6ce8\u610f\uff0cCSS \u4e2d\u5141\u8bb8\u5c5e\u6027\u540d\u4e2d\u5305\u542b\u77ed\u5212\u7ebf - \uff0c\u4f46\u662f JavaScript \u4e2d\u4e0d\u5141\u8bb8\uff0c\u6240\u4ee5\u9047\u5230\u8fd9\u7c7b\u5c5e\u6027\u540d\u65f6\uff0c\u8bf7\u4f7f\u7528\u9a7c\u5cf0\u547d\u540d\u6cd5\u8f6c\u5199\uff1a 1 2 node . style . color = \"red\" ; node . style . fontSize = \"20px\" ; // \"font-size\" in CSS","title":"\u66f4\u65b0 DOM \u6811\u8282\u70b9"},{"location":"languages/javascript/browser/#dom_3","text":"\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 DOM \u8282\u70b9\u5bf9\u8c61\u7684 appendChild \u65b9\u6cd5\u6765\u4e3a\u8be5\u8282\u70b9\u589e\u6dfb\u4e00\u4e2a\u5b50\u8282\u70b9\u3002\u4e0d\u8fc7\u6ce8\u610f\uff0c\u5982\u679c\u589e\u6dfb\u7684\u5b50\u8282\u70b9\u662f\u539f\u5148 DOM \u6811\u4e0a\u5177\u6709\u7684\u8282\u70b9\uff0c\u5219\u9996\u5148\u4f1a\u5c06\u8fd9\u4e2a\u8282\u70b9\u6458\u9664\u540e\u6dfb\u52a0\u5230\u6307\u5b9a\u7684\u4f4d\u7f6e\u3002 \u5728\u63a7\u5236\u53f0\u4e2d\u8fd0\u884c\u4ee5\u4e0b\u4ee3\u7801\uff1a 1 2 3 let wrapper = document . getElementById ( \"circle-wrapper\" ); let redCircle = document . getElementById ( \"red-circle\" ); wrapper . appendChild ( redCircle ); \u53ef\u4ee5\u53d1\u73b0\u4e09\u4e2a\u5706\u5f62\u8c03\u6362\u4e86\u4f4d\u7f6e\uff0c\u7ea2\u8272\u7684\u5706\u5f62\u6210\u4e3a\u4e86\u4f4d\u4e8e\u6700\u5e95\u90e8\u7684\u5706\u5f62\u3002 \u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0 appendChild \u65b9\u6cd5\u6c38\u8fdc\u5c06\u8be5\u8282\u70b9\u63d2\u5165\u4e3a\u6307\u5b9a\u8282\u70b9\u7684\u6700\u540e\u4e00\u4e2a\u5b50\u8282\u70b9\uff0c\u5982\u679c\u6211\u4eec\u9700\u8981\u5177\u4f53\u6307\u5b9a\u63d2\u5165\u4f4d\u7f6e\uff0c\u5c31\u9700\u8981\u4f7f\u7528 insertBefore \u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u9700\u8981\u6307\u5b9a\u8282\u70b9\u7684\u4e00\u4e2a\u5b50\u8282\u70b9\u4f5c\u4e3a\u53c2\u8003\u5b50\u8282\u70b9\uff1a 1 2 3 4 let wrapper = document . getElementById ( \"circle-wrapper\" ); let redCircle = document . getElementById ( \"red-circle\" ); let blueCircle = document . getElementById ( \"blue-circle\" ); wrapper . insertBefore ( redCircle , blueCircle ); // The 2nd param is the reference node \u8fd9\u6837\uff0c\u7ea2\u8272\u7684\u5706\u5f62\u5c31\u63d2\u5165\u5728\u84dd\u8272\u7684\u5706\u5f62\u4e4b\u524d\u3002 \u6709\u65f6\u6211\u4eec\u9700\u8981\u7ed9 DOM \u6811\u589e\u6dfb\u8282\u70b9\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u9700\u8981\u4f7f\u7528 document.createElement \u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u80fd\u521b\u9020\u4e00\u4e2a\u6307\u5b9a\u7c7b\u578b\u7684 DOM \u6811\u8282\u70b9\u3002\u968f\u540e\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u5176\u5404\u79cd\u5c5e\u6027\u503c\uff0c\u6700\u540e\u53ef\u4ee5\u4f7f\u7528\u5404\u79cd\u63d2\u5165\u65b9\u6cd5\u5c06\u8fd9\u4e2a\u65b0\u8282\u70b9\u63d2\u5165\u5230 DOM \u6811\u4e2d\u3002 1 2 3 4 5 6 7 let purpleCircle = document . createElement ( \"div\" ); purpleCircle . id = \"purple-circle\" ; purpleCircle . className = \"circle\" ; purpleCircle . style . backgroundColor = \"purple\" ; let wrapper = document . getElementById ( \"circle-wrapper\" ); wrapper . appendChild ( purpleCircle ); \u5220\u9664\u67d0\u4e00\u4e2a\u8282\u70b9\u5219\u8f83\u4e3a\u7b80\u5355\uff0c\u6211\u4eec\u53ea\u9700\u8981\u83b7\u53d6\u9700\u8981\u5220\u9664\u7684\u8282\u70b9\u7684\u5f15\u7528\u4ee5\u53ca\u5176\u7236\u8282\u70b9\u7684\u5f15\u7528\uff0c\u7136\u540e\u5728\u7236\u7ed3\u70b9\u4e0a\u8c03\u7528 removeChild \u65b9\u6cd5\u5373\u53ef\u5220\u9664\u3002\u53c2\u8003\u4ee5\u4e0b\u4ee3\u7801\uff1a 1 2 3 4 5 let wrapper = document . getElementById ( \"circle-wrapper\" ); let redCircle = document . getElementById ( \"red-circle\" ); let removedCircle = wrapper . removeChild ( redCircle ); console . log ( redCircle === removedCircle ); // true \u53ef\u4ee5\u53d1\u73b0\uff0c removedChild \u65b9\u6cd5\u5177\u6709\u8fd4\u56de\u503c\uff0c\u5176\u8fd4\u56de\u503c\u662f\u5220\u9664\u6389\u7684\u8282\u70b9\u7684\u5f15\u7528\u3002","title":"\u8c03\u6574 DOM \u6811\u7ed3\u6784"},{"location":"languages/javascript/browser/#jquery","text":"\u4f60\u6216\u8bb8\u542c\u95fb\u8fc7 jQuery \u8fd9\u4e2a\u7b2c\u4e09\u65b9\u5e93\uff0c\u5176\u5982\u6b64\u6d41\u884c\u7684\u539f\u56e0\u662f\u5176\u7b80\u5316\u4e86 JavaScript \u8bed\u8a00\u64cd\u4f5c DOM \u6811\u3001\u4fee\u6539 CSS \u7684\u8bed\u6cd5\uff0c\u5e76\u4e14\u6d88\u9664\u6d4f\u89c8\u5668\u5dee\u5f02\uff0c\u53ef\u4ee5\u5c06\u7edf\u4e00\u7684\u8bed\u6cd5\u8fd0\u7528\u4e8e\u4efb\u4f55\u4e00\u4e2a\u4e3b\u6d41\u6d4f\u89c8\u5668\u3002 Web \u524d\u7aef\u7684\u66f4\u65b0\u6362\u4ee3 \u6700\u521d\u7684\u524d\u7aef\u662f\u6ca1\u6709 jQuery \u7684\uff0c\u6240\u4ee5\u90fd\u9700\u8981\u4f7f\u7528 getElementById \u7b49 DOM \u8282\u70b9\u5185\u7f6e\u65b9\u6cd5\u6765\u5b8c\u6210 DOM \u6811\u64cd\u4f5c\u3002\u800c\u968f\u540e\uff0cjQuery \u51fa\u73b0\uff0c\u8fd9\u79cd\u8de8\u6d4f\u89c8\u5668\u4e14\u8bed\u6cd5\u7b80\u6d01\u7684\u7b2c\u4e09\u65b9\u5e93\u7acb\u523b\u5f97\u5230\u4e86\u5e7f\u6cdb\u8fd0\u7528\u3002 \u4f46\u662f\u8fd1\u5e74\u6765\u968f\u7740\u524d\u7aef\u6846\u67b6\u6d41\u884c\uff0c\u7f16\u5199\u88f8 JavaScript \u7684\u673a\u4f1a\u8d8a\u6765\u8d8a\u5c11\uff0c\u4fee\u6539 DOM \u6811\u7b49\u64cd\u4f5c\u4e5f\u5728\u524d\u7aef\u6846\u67b6\u5185\u88ab\u5c01\u88c5\u4e3a\u5404\u79cd\u6846\u67b6\u65b9\u6cd5\uff0cjQuery \u4e5f\u6e10\u6e10\u6de1\u51fa\u3002\u4f46\u662f\u7531\u4e8e\u5386\u53f2\u539f\u56e0\uff0c\u6211\u4eec\u73b0\u5728\u8fd8\u662f\u80fd\u770b\u5230\u5927\u91cf\u7684\u9700\u8981\u624b\u5199\u88f8 JavaScript \u7684\u524d\u7aef\uff0c\u8fd9\u4e9b\u524d\u7aef\u5f80\u5f80\u5e94\u7528\u4e86 jQuery\u3002\u6240\u4ee5\uff0c\u5b66\u4e60 jQuery \u7684\u57fa\u7840\u77e5\u8bc6\u8fd8\u662f\u6709\u4e00\u5b9a\u7684\u5fc5\u8981\u3002 \u6211\u4eec\u63d0\u4f9b\u7684 \u6837\u4f8b\u7f51\u9875 \u5df2\u7ecf\u4e3a\u4f60\u5f15\u7528\u4e86 jQuery\uff0c\u53ef\u4ee5\u8fd0\u884c\u4e0b\u8ff0\u4ee3\u7801\u6765\u786e\u5b9a\u662f\u5426\u5f15\u7528\u6210\u529f\uff1a 1 console . log ( $ . fn . jquery ); // 2.1.4 \u8fd9\u91cc $ \u5c31\u662f jQuery \u7684\u5168\u5c40\u5c01\u88c5\u5bf9\u8c61\uff0c\u5176\u63d0\u4f9b\u7684\u6240\u6709\u529f\u80fd\u5168\u90fd\u662f $ \u7684\u6210\u5458\u51fd\u6570\u5b9e\u73b0\u7684\u3002","title":"jQuery"},{"location":"languages/javascript/browser/#_2","text":"\u5177\u4f53\u7684\u9009\u62e9\u5668\u8bed\u6cd5\u53ef\u4ee5\u53c2\u8003 CSS \u8bed\u8a00\u57fa\u7840\u6587\u6863\u4e2d\u76f8\u5173\u90e8\u5206 \u3002 \u6211\u4eec\u53ef\u4ee5\u5728 jQuery \u4e2d\u4f7f\u7528\u9009\u62e9\u5668\u8bed\u6cd5\u6765\u83b7\u53d6 DOM \u6811\u8282\u70b9\uff0c\u6ce8\u610f\u901a\u8fc7\u4e0b\u8ff0\u65b9\u6cd5\u83b7\u53d6\u7684\u662f\u4e00\u4e2a DOM \u6811\u8282\u70b9\u7684\u5217\u8868\uff0c\u5982\u679c\u6ca1\u6709\u7b26\u5408\u9009\u62e9\u5668\u8981\u6c42\u7684\u8282\u70b9\u5219\u8fd4\u56de\u7a7a\u5217\u8868\u3002\u5982\uff1a 1 2 3 let wrapper = $ ( \"#circle-wrapper\" ); // Find nodes with 'id=circle-wrapper' console . log ( wrapper . length ); // 1 console . log ( wrapper [ 0 ]); \u9664\u4e86\u6309\u7167 ID \u67e5\u627e\uff0c\u4e0b\u9762\u8fd8\u4e3e\u51fa\u4e86\u4e00\u4e9b\u5e38\u7528\u7684\u9009\u62e9\u5668\uff1a 1 2 3 4 5 let circles = $ ( \".circle\" ); // Find nodes with 'class=circle' console . log ( circles ); let divs = $ ( \"div\" ); // Find nodes which are <div> console . log ( divs ); \u53ef\u4ee5\u6ce8\u610f\u5230\u8fd9\u91cc\u8f93\u51fa\u7684\u5217\u8868\u5e76\u4e0d\u662f\u6211\u4eec\u4e4b\u524d\u89c1\u8fc7\u7684 DOM \u6811\u8282\u70b9\u3002\u5b9e\u9645\u4e0a\uff0c\u5176\u8fd4\u56de\u7684\u662f\u5305\u88c5\u8fc7\u4e00\u5c42\u7684 jQuery \u5bf9\u8c61\u3002\u5982\u679c\u9700\u8981\u5f97\u5230\u6700\u57fa\u672c\u7684 DOM \u6811\u8282\u70b9\u5bf9\u8c61\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u6807\u8fd0\u7b97\u7b26 [] \u53d6\u51fa\u5177\u4f53\u7684\u5143\u7d20\u6216\u8005\u4f7f\u7528 .get() \u65b9\u6cd5\u3002 1 2 3 4 let circles = $ ( \".circle\" ); // Find nodes with 'class=circle' console . log ( circles ); console . log ( circles [ 0 ]); console . log ( circles . get ( 0 ));","title":"\u9009\u62e9\u5668"},{"location":"languages/javascript/browser/#dom_4","text":"\u5728\u83b7\u53d6\u5230 DOM \u6811\u8282\u70b9\u540e\uff0c\u5982\u679c\u9700\u8981\u4fee\u6539\u8fd9\u4e2a\u8282\u70b9\u7684\u5185\u5bb9\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 .text() \u6216\u8005 .html() \u65b9\u6cd5\u3002\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u7684\u5171\u540c\u70b9\u662f\u5982\u679c\u65e0\u53c2\u6570\u8c03\u7528\uff0c\u5219\u662f\u83b7\u53d6\u8fd9\u4e2a\u8282\u70b9\u7684\u5185\u5bb9\u3002\u5982\u679c\u6709\u53c2\u6570\u8c03\u7528\uff0c\u5219\u662f\u5c06\u8282\u70b9\u7684\u5185\u5bb9\u4fee\u6539\u4e3a\u4f20\u5165\u7684\u53c2\u6570\u3002 .text() \u4e0e .html() \u5206\u522b\u5bf9\u5e94\u7740 innerText \u548c innerHTML \u5c5e\u6027\u3002 1 2 $ ( \"#test-text\" ). text (); // \"This is a test text node.\" $ ( \"#test-text\" ). text ( \"Hello world!\" ); \u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u4fee\u6539\u67d0\u4e2a\u8282\u70b9\u7684 CSS\uff1a 1 $ ( \"#red-circle\" ). css ( \"background-color\" , \"black\" ); .css() \u4e0d\u80fd\u5b8c\u5168\u65e0\u53c2\u8c03\u7528\uff0c\u81f3\u5c11\u9700\u8981\u5728\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e2d\u4f20\u9012 CSS \u5c5e\u6027\u540d\u3002\u5982\u679c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e0d\u4f20\u5165\uff0c\u5219\u8868\u793a\u83b7\u53d6\u8fd9\u4e2a\u8282\u70b9\u67d0\u4e2a CSS \u5c5e\u6027\u7684\u503c\u3002\u5982\u679c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u7a7a\u5b57\u7b26\u4e32\uff0c\u5219\u8868\u793a\u5220\u53bb\u8fd9\u4e2a CSS \u5c5e\u6027\u3002 1 $ ( \"#red-circle\" ). css ( \"background-color\" ); // \"rgb(255, 0, 0)\" \u6211\u4eec\u4e4b\u524d\u63d0\u8fc7\uff0c\u4f7f\u7528\u9009\u62e9\u5668\u83b7\u53d6\u7684\u662f DOM \u6811\u8282\u70b9\u7684\u5217\u8868\u800c\u975e\u5355\u4e2a\u8282\u70b9\u3002\u6240\u4ee5\u5982\u679c\u5728\u542b\u6709\u591a\u4e2a DOM \u6811\u8282\u70b9\u7684 jQuery \u5bf9\u8c61\u4e0a\u4f7f\u7528 .text() \u7b49\u65b9\u6cd5\u4fee\u6539\u5185\u5bb9\uff0c\u8be5\u4fee\u6539\u4f1a\u5bf9\u8fd9\u4e2a\u5217\u8868\u5185\u6240\u6709\u7684 DOM \u6811\u8282\u70b9\u751f\u6548\u3002 \u6bd4\u5982\u6211\u60f3\u628a\u4e09\u4e2a\u5706\u90fd\u53d8\u4e3a\u9ed1\u8272\uff0c\u5c31\u53ef\u4ee5\uff1a 1 $ ( \".circle\" ). css ( \"background-color\" , \"black\" ); \u9664\u53bb .text() \u3001 .html() \u4ee5\u53ca .css() \uff0c\u83b7\u53d6\u5176\u4f59\u7684 HTML \u6807\u7b7e\u5c5e\u6027\u53ef\u4ee5\u4f7f\u7528 .attr() \uff0c\u8fd9\u91cc\u53ef\u4ee5\u53c2\u8003 \u5ed6\u96ea\u5cf0\u7684\u6559\u7a0b \u3002 \u589e\u6dfb\u548c\u5220\u9664\u8282\u70b9\u4e5f\u662f\u7b80\u5355\u7684\u3002\u589e\u6dfb\u8282\u70b9\u53ea\u9700\u8981\u5bf9\u7236\u8282\u70b9\u8c03\u7528 .append() \u65b9\u6cd5\uff0c\u5220\u9664\u5219\u662f\u5bf9\u8981\u5220\u9664\u7684\u8282\u70b9\u8c03\u7528 .remove() \u65b9\u6cd5\uff1a 1 2 $ ( \"#circle-wrapper\" ). append ( $ ( \"#red-circle\" )); $ ( \"#red-circle\" ). remove (); \u8981\u5728\u6307\u5b9a\u8282\u70b9\u7684\u524d\u9762\u6216\u540e\u9762\u589e\u6dfb\u5144\u5f1f\u8282\u70b9\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528 .after() \u6216\u8005 .before() \u65b9\u6cd5\uff1a 1 2 3 4 5 $ ( \"#red-circle\" ). after ( $ ( document . createElement ( \"div\" )) . attr ( \"class\" , \"circle\" ) . css ( \"background-color\" , \"purple\" ) ) \u53ef\u4ee5\u6ce8\u610f\u5230\u8fd9\u91cc\u5c06\u4e00\u4e2a DOM \u6811\u8282\u70b9\u5bf9\u8c61\u4f20\u5165\u4e86 $() \u4e4b\u4e2d\uff0c\u5176\u4f5c\u7528\u662f\u5c06 DOM \u6811\u8282\u70b9\u5305\u88c5\u4e3a jQuery \u5bf9\u8c61\u4ee5\u4f7f\u7528 .attr() \u7b49\u65b9\u6cd5\u3002","title":"\u4fee\u6539 DOM \u6811"},{"location":"languages/javascript/browser/#_3","text":"\u6211\u4eec\u73b0\u5728\u8003\u8651\u7f51\u9875\u5982\u4f55\u4e0e\u7528\u6237\u4ea4\u4e92\uff0c\u4e5f\u5c31\u662f\u8bf4\u7528\u6237\u662f\u5982\u4f55\u89e6\u53d1\u63cf\u8ff0\u4ea4\u4e92\u884c\u4e3a\u7684 JavaScript \u7684\u3002\u8fd9\u91cc\uff0c\u5c31\u9700\u8981\u5f15\u5165 \u4e8b\u4ef6 \u8fd9\u4e2a\u6982\u5ff5\u3002 \u7528\u6237\u70b9\u51fb\u67d0\u4e00\u4e2a HTML \u7ec4\u4ef6\u6216\u8005\u5728\u6587\u672c\u6846\u4e2d\u8f93\u5165\u3001\u6587\u6863\u6811\u52a0\u8f7d\u7b49\u884c\u4e3a\u90fd\u53ef\u4ee5\u662f\u4e8b\u4ef6\uff0c\u8fd9\u4e9b\u4e8b\u4ef6\u7684\u76f8\u5173\u4fe1\u606f\uff08\u6bd4\u5982\u9f20\u6807\u70b9\u51fb\u4e8b\u4ef6\u4e2d\u9f20\u6807\u70b9\u51fb\u4f4d\u7f6e\u7684\u6a2a\u7eb5\u5750\u6807\u7b49\uff09\u5c06\u4f1a\u88ab\u5305\u88c5\u4e3a\u4e00\u4e2a\u5bf9\u8c61\u4f20\u5165\u5230 JavaScript \u7684\u4e8b\u4ef6\u5904\u7406\u5faa\u73af\uff0cJavaScript \u5f15\u64ce\u63a5\u53d7\u5230\u4e8b\u4ef6\u540e\u5c31\u4f1a\u8c03\u7528\u76f8\u5e94\u7684\u56de\u8c03\u51fd\u6570\uff0c\u800c\u4ea4\u4e92\u884c\u4e3a\u5c31\u5b9a\u4e49\u5728\u8fd9\u4e9b\u56de\u8c03\u51fd\u6570\u4e4b\u4e2d\u3002 \u73b0\u5728\u5c31\u4ee5\u6309\u94ae\u70b9\u51fb\u4e8b\u4ef6\u4e3a\u4f8b\uff0c\u4ecb\u7ecd\u5982\u4f55\u5229\u7528 jQuery \u7f16\u5199\u70b9\u51fb\u4e8b\u4ef6\u7684\u56de\u8c03\u51fd\u6570\u3002 \u4f7f\u7528\u6211\u4eec\u63d0\u4f9b\u7684\u6837\u4f8b \u5728\u5b66\u4e60\u8fd9\u4e00\u5c0f\u8282\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u70b9\u51fb\u8fdb\u5165 \u6211\u4eec\u7684\u6837\u4f8b\u7f51\u9875 \u5e76\u6309\u4e0b F12 \u6253\u5f00\u63a7\u5236\u53f0\uff0c\u5728\u63a7\u5236\u53f0\u91cc\u8fd0\u884c\u8fd9\u4e00\u8282\u63d0\u4f9b\u7684\u6837\u4f8b\u4ee3\u7801\u6765\u7406\u89e3 DOM \u6811\u64cd\u4f5c\u3002 \u6211\u4eec\u73b0\u5728\u5e0c\u671b\u6211\u4eec\u70b9\u51fb\u8fd9\u4e2a\u6309\u94ae\u540e\uff0c\u7f51\u9875\u80fd\u5f39\u7a97\u663e\u793a\u5bf9\u6211\u4eec\u7684\u95ee\u5019\u3002\u663e\u793a\u5f39\u7a97\u7684\u56de\u8c03\u51fd\u6570\u53ef\u4ee5\u89c4\u5b9a\u4e3a\uff1a 1 2 3 () => { alert ( \"Hello!\" ); } \u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u5c06\u4e0a\u8ff0\u56de\u8c03\u51fd\u6570\u7ed1\u5b9a\u5230\u6309\u94ae\u4e0a\uff1a 1 2 3 $ ( \"#test-button\" ). on ( \"click\" , () => { alert ( \"Hello!\" ); }); \u8fd9\u91cc $(\"#test-button\") \u662f\u5148\u524d\u63d0\u5230\u8fc7\u7684\u9009\u62e9\u5668\uff0c\u7528\u4e8e\u9009\u62e9\u51fa\u9700\u8981\u7ed1\u5b9a\u4e8b\u4ef6\u56de\u8c03\u51fd\u6570\u7684\u6309\u94ae\u3002\u4e4b\u540e\u8c03\u7528\u5176 .on() \u65b9\u6cd5\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u6307\u793a\u9700\u8981\u7ed9\u4f55\u79cd\u4e8b\u4ef6\u7ed1\u5b9a\u56de\u8c03\uff0c\u8fd9\u91cc \"click\" \u8868\u793a\u7ed9\u70b9\u51fb\u4e8b\u4ef6\u7ed1\u5b9a\u3002\u7b2c\u4e8c\u4e2a\u53c2\u6570\u5219\u662f\u9700\u8981\u6267\u884c\u7684\u56de\u8c03\u51fd\u6570\uff0c\u5728\u8fd9\u91cc\uff0c\u6309\u94ae\u88ab\u70b9\u51fb\u7684\u65f6\u5019\uff0c\u8be5\u56de\u8c03\u5c31\u4f1a\u6267\u884c\u3002 \u7531\u4e8e\u70b9\u51fb\u4e8b\u4ef6\u5f88\u5e38\u7528\uff0c\u6240\u4ee5\u8fd8\u6709\u8fd9\u6837\u7684\u7b80\u5199\uff1a 1 2 3 $ ( \"#test-button\" ). click (() => { alert ( \"Hello!\" ); }); \u6211\u4eec\u5148\u524d\u63d0\u5230\u4e86\uff0c\u548c\u4e8b\u4ef6\u76f8\u5173\u7684\u6240\u6709\u53c2\u6570\u90fd\u4f1a\u88ab\u5305\u88c5\u4e3a\u5bf9\u8c61\u4f20\u5165\u5904\u7406\u5f15\u64ce\uff0c\u800c\u8fd9\u4e2a\u5bf9\u8c61\u5c31\u4f1a\u8fdb\u4e00\u6b65\u4f5c\u4e3a\u56de\u8c03\u51fd\u6570\u7684\u53c2\u6570\u4f20\u5165\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u6253\u5370\u51fa\u6765\uff1a 1 $ ( \"#test-button\" ). click ( console . log ); \u8fd9\u4e2a\u65f6\u5019\u70b9\u51fb\u6309\u94ae\u5c31\u53ef\u4ee5\u770b\u5230\u63a7\u5236\u53f0\u4e0a\u8f93\u51fa\u7684\u4e8b\u4ef6\u76f8\u5173\u53c2\u6570\u4e86\u3002 \u4f46\u662f\u5982\u679c\u6211\u4eec\u9700\u8981\u771f\u6b63\u81ea\u5df1\u7f16\u5199\u4e00\u4e2a\u6709\u4ea4\u4e92\u884c\u4e3a\u7684\u7f51\u9875\uff0c\u6211\u4eec\u5c31\u9700\u8981\u628a\u4e0a\u9762\u63d0\u5230\u7684\u4ee3\u7801\u5d4c\u5165 HTML \u4e4b\u4e2d\uff0c\u56e0\u4e3a\u6211\u4eec\u8981\u6c42\u8fd9\u4e9b\u4ea4\u4e92\u884c\u4e3a\u968f\u7740\u7f51\u9875\u52a0\u8f7d\u5c31\u5b9a\u4e49\u597d\uff0c\u5426\u5219\u5c31\u9700\u8981\u7528\u6237\u624b\u52a8\u5728\u7f51\u9875\u52a0\u8f7d\u540e\u5728\u63a7\u5236\u53f0\u5b9a\u4e49\uff0c\u8fd9\u663e\u7136\u8fdd\u53cd\u5e38\u7406\u3002 \u4f60\u53ef\u80fd\u5df2\u7ecf\u4e86\u89e3\uff0cHTML \u4e2d\u53ef\u4ee5\u4f7f\u7528 <script /> \u6807\u7b7e\u63d2\u5165 JavaScript \u4ee3\u7801\uff0c\u6240\u4ee5\u4f60\u53ef\u80fd\u6253\u7b97\u8fd9\u6837\u5199\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <!DOCTYPE html> < html lang = \"zh\" > < head > < meta charset = \"utf-8\" > < title > \u6309\u94ae\u70b9\u51fb\u4e8b\u4ef6\u6f14\u793a\u7f51\u9875 </ title > < script src = \"//code.jquery.com/jquery-2.1.4.min.js\" ></ script > < script > $ ( \"#test-button\" ). on ( \"click\" , () => { alert ( \"Hello!\" ); }); console . log ( $ ( \"#test-button\" ). length ); </ script > </ head > < body > < button id = \"test-button\" > Click me! </ button > </ body > </ html > \u4e0a\u8ff0 HTML \u4ee3\u7801\u5df2\u7ecf\u653e\u5728 \u6211\u4eec\u7684\u6837\u4f8b\u7f51\u9875\u4e4b\u4e2d \u3002\u5982\u679c\u4f60\u6d4f\u89c8\u540e\u70b9\u51fb\u6309\u94ae\uff0c\u4f60\u4f1a\u53d1\u73b0\u5e76\u6ca1\u6709\u6309\u7167\u9884\u671f\u5f39\u51fa\u5f39\u7a97\u3002 \u8fd9\u91cc\u5c31\u9700\u8981\u63d0\u5230 <script /> \u6807\u7b7e\u4e2d\u4ee3\u7801\u7684\u6267\u884c\u65f6\u673a\u3002\u5b9e\u9645\u4e0a\uff0c\u8fd9\u4e9b\u4ee3\u7801\u5c06\u4f1a\u5728\u6587\u6863\u52a0\u8f7d\u5b8c\u6bd5\u4e4b\u524d\u5c31\u6267\u884c\u5b8c\u6bd5\uff0c\u6b64\u65f6\u7684 DOM \u4e0a\u8fd8\u672a\u6709\u6309\u94ae\u5bf9\u8c61\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u9009\u62e9\u5668\u5e94\u8be5\u4ec0\u4e48\u90fd\u83b7\u5f97\u4e0d\u5230\uff0c\u4ece\u800c\u7ed1\u5b9a\u5931\u8d25\u3002 \u5b9e\u9645\u4e0a\u4e0a\u8ff0\u4ee3\u7801\u91cc\uff0c\u6211\u4eec\u7559\u4e0b\u4e86\u4e00\u53e5 console.log($(\"#test-button\").length) \uff0c\u6240\u4ee5\u53ef\u4ee5\u5728\u63a7\u5236\u53f0\u91cc\u53d1\u73b0\uff0c\u6b64\u65f6\u9009\u62e9\u5668\u4ec0\u4e48\u90fd\u6ca1\u6709\u9009\u62e9\u5230\uff08\u8f93\u51fa\u4e3a 0 \uff09\uff0c\u7b26\u5408\u6211\u4eec\u7684\u8bb2\u89e3\u3002 \u90a3\u4e48\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5462\uff0c\u4e8b\u5b9e\u4e0a\u6211\u4eec\u5148\u524d\u63d0\u5230\u8fc7 DOM \u52a0\u8f7d\u5b8c\u6bd5\u4e5f\u662f\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06\u7ed1\u5b9a\u6309\u94ae\u70b9\u51fb\u4e8b\u4ef6\u5199\u4e3a DOM \u52a0\u8f7d\u5b8c\u6bd5\u7684\u56de\u8c03\uff1a 1 2 3 4 5 $ ( document ). on ( \"ready\" , () => { $ ( \"#test-button\" ). on ( \"click\" , () => { alert ( \"Hello!\" ); }); }); \u7531\u4e8e\u5728 DOM \u52a0\u8f7d\u5b8c\u6bd5\u540e\u6302\u8f7d\u5404\u79cd\u56de\u8c03\u51fd\u6570\u662f\u76f8\u5f53\u5e38\u89c1\u7684\u9700\u6c42\uff0c\u6240\u4ee5\u4e0a\u8ff0\u5199\u6cd5\u4e00\u822c\u53ef\u4ee5\u7b80\u5316\u4e3a\uff1a 1 2 3 4 5 $ (() => { $ ( \"#test-button\" ). on ( \"click\" , () => { alert ( \"Hello!\" ); }); }); \u8fd9\u6837\u4fee\u6539\u540e\u7684\u4ee3\u7801\u53ef\u4ee5\u53c2\u89c1 \u6211\u4eec\u7684\u6837\u4f8b\u7f51\u9875 \u3002","title":"\u4e8b\u4ef6"},{"location":"languages/javascript/control/","text":"JavaScript \u7684\u63a7\u5236\u8bed\u53e5 \u00b6 JavaScript \u652f\u6301\u7684\u63a7\u5236\u8bed\u53e5\u5173\u952e\u5b57\u5305\u62ec if, else, switch, case, while, do, for \uff0c\u5176\u7528\u6cd5\u548c C/C++ \u8bed\u8a00\u51e0\u4e4e\u5b8c\u5168\u4e00\u81f4\u3002\u8fd9\u91cc\u7ed9\u51fa\u6837\u4f8b\u7a0b\u5e8f\u4e0d\u8fdb\u884c\u5177\u4f53\u7684\u8bb2\u89e3\uff1a 1 2 3 4 5 6 7 8 9 10 11 let i = 0 ; if ( i > 0 ) { console . log ( \"i is greater than 0\" ); } else { console . log ( \"i is not greater than 0\" ); } let arr = [ 1 , 2 , 3 , 4 , 5 ]; for ( let j = 0 ; j < arr . length ; ++ j ) { console . log ( `arr[ ${ j } ] = ${ arr [ j ] } \\n` ); } \u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6d89\u53ca\u5230\u6761\u4ef6\u5224\u65ad\u7684\u65f6\u5019\u4f1a\u53d1\u751f \u5f3a\u5236\u7c7b\u578b\u8f6c\u6362 \uff08\u5c06\u53d8\u91cf\u5f3a\u5236\u8f6c\u6362\u4e3a\u5e03\u5c14\u503c\uff09\uff0c\u5176\u903b\u8f91\u4e3a\uff1a undefined, null, 0, NaN, \"\", false \u8f6c\u5316\u4e3a false \u5176\u4f59\u5747\u8f6c\u5316\u4e3a true \uff08\u65e0\u8bba\u662f\u5bf9\u8c61\u8fd8\u662f\u57fa\u672c\u7c7b\u578b\uff09 \u503c\u5f97\u6ce8\u610f\u7684\u662f\u5e03\u5c14\u503c\u7c7b\u578b\u7684\u5305\u88c5\u7c7b Boolean \u5bf9\u8c61\uff0c\u65e0\u8bba\u5176\u8868\u793a true \u8fd8\u662f false \uff0c\u5176\u5747\u4f1a\u88ab\u8f6c\u5316\u4e3a true \uff0c\u6240\u4ee5\u9700\u8981\u7279\u522b\u6ce8\u610f\u7c7b\u4f3c\u4e0b\u8ff0\u7a0b\u5e8f\u7684\u60c5\u51b5\uff1a 1 2 3 if ( new Boolean ( false )) { console . log ( \"WTF?\" ); } // \"WTF!\"","title":"JavaScript \u7684\u63a7\u5236\u8bed\u53e5"},{"location":"languages/javascript/control/#javascript","text":"JavaScript \u652f\u6301\u7684\u63a7\u5236\u8bed\u53e5\u5173\u952e\u5b57\u5305\u62ec if, else, switch, case, while, do, for \uff0c\u5176\u7528\u6cd5\u548c C/C++ \u8bed\u8a00\u51e0\u4e4e\u5b8c\u5168\u4e00\u81f4\u3002\u8fd9\u91cc\u7ed9\u51fa\u6837\u4f8b\u7a0b\u5e8f\u4e0d\u8fdb\u884c\u5177\u4f53\u7684\u8bb2\u89e3\uff1a 1 2 3 4 5 6 7 8 9 10 11 let i = 0 ; if ( i > 0 ) { console . log ( \"i is greater than 0\" ); } else { console . log ( \"i is not greater than 0\" ); } let arr = [ 1 , 2 , 3 , 4 , 5 ]; for ( let j = 0 ; j < arr . length ; ++ j ) { console . log ( `arr[ ${ j } ] = ${ arr [ j ] } \\n` ); } \u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6d89\u53ca\u5230\u6761\u4ef6\u5224\u65ad\u7684\u65f6\u5019\u4f1a\u53d1\u751f \u5f3a\u5236\u7c7b\u578b\u8f6c\u6362 \uff08\u5c06\u53d8\u91cf\u5f3a\u5236\u8f6c\u6362\u4e3a\u5e03\u5c14\u503c\uff09\uff0c\u5176\u903b\u8f91\u4e3a\uff1a undefined, null, 0, NaN, \"\", false \u8f6c\u5316\u4e3a false \u5176\u4f59\u5747\u8f6c\u5316\u4e3a true \uff08\u65e0\u8bba\u662f\u5bf9\u8c61\u8fd8\u662f\u57fa\u672c\u7c7b\u578b\uff09 \u503c\u5f97\u6ce8\u610f\u7684\u662f\u5e03\u5c14\u503c\u7c7b\u578b\u7684\u5305\u88c5\u7c7b Boolean \u5bf9\u8c61\uff0c\u65e0\u8bba\u5176\u8868\u793a true \u8fd8\u662f false \uff0c\u5176\u5747\u4f1a\u88ab\u8f6c\u5316\u4e3a true \uff0c\u6240\u4ee5\u9700\u8981\u7279\u522b\u6ce8\u610f\u7c7b\u4f3c\u4e0b\u8ff0\u7a0b\u5e8f\u7684\u60c5\u51b5\uff1a 1 2 3 if ( new Boolean ( false )) { console . log ( \"WTF?\" ); } // \"WTF!\"","title":"JavaScript \u7684\u63a7\u5236\u8bed\u53e5"},{"location":"languages/javascript/function/","text":"JavaScript \u7684\u51fd\u6570 \u00b6 \u51fd\u6570\u58f0\u660e\u548c\u8c03\u7528 \u00b6 \u6211\u4eec\u4e00\u822c\u628a JavaScript \u7684\u51fd\u6570\u4e5f\u8ba4\u4e3a\u662f\u4e00\u79cd\u53d8\u91cf\uff0c\u56e0\u4e3a\u5728 JavaScript \u4e4b\u4e2d\uff0c\u51fd\u6570\u7684\u884c\u4e3a\u5f88\u5927\u7a0b\u5ea6\u4e0a\u548c\u53d8\u91cf\u7c7b\u4f3c\u3002 JavaScript \u8bed\u8a00\u4e4b\u4e2d\u58f0\u660e\u4e00\u4e2a\u51fd\u6570\u7684\u8bed\u6cd5\u4e3a\uff1a 1 2 3 function sum ( x , y ) { return x + y ; } \u800c\u53e6\u5916\u4e00\u79cd\u58f0\u660e\u65b9\u5f0f\u5982\u4e0b\uff0c\u8fd9\u79cd\u65b9\u5f0f\u7684\u5185\u6db5\u5c31\u662f\u628a\u51fd\u6570\u5f53\u6210\u4e00\u79cd\u53d8\u91cf\uff1a 1 2 3 const sum = function ( x , y ) { return x + y ; }; \u51fd\u6570\u8c03\u7528\u7684\u8bed\u6cd5\u5219\u548c C/C++ \u8bed\u8a00\u4e00\u81f4\uff1a 1 sum ( 1 , 2 ); // 3 \u65e0\u7528\u7684\u53c2\u6570\u5217\u8868 \u5b9e\u9645\u4e0a JavaScript \u4ece\u6765\u4e0d\u68c0\u67e5\u4f60\u51fd\u6570\u8c03\u7528\u662f\u4e0d\u662f\u7b26\u5408\u53c2\u6570\u5217\u8868\uff0c\u672c\u8eab JavaScript \u5c31\u4e0d\u68c0\u67e5\u53d8\u91cf\u7c7b\u578b\uff0c\u5b9e\u9645\u4e0a JavaScript \u8fd8\u4e0d\u68c0\u67e5\u4f60\u51fd\u6570\u8c03\u7528\u7684\u65f6\u5019\u4f20\u5165\u7684\u53c2\u6570\u4e2a\u6570\u3002\u6bd4\u5982\u8bf4\u4f60\u7ed9 sum \u51fd\u6570\u4f20\u5165\u4e00\u4e2a\u53c2\u6570\u8fd8\u662f\u4e09\u4e2a\u53c2\u6570\uff0c\u5176\u90fd\u6b63\u5e38\u5de5\u4f5c\uff1a 1 2 sum ( 1 ); // NaN sum ( 1 , 2 , 3 ); // 3 \u5176\u5904\u7406\u903b\u8f91\u4e3a \u58f0\u660e\u4e86\u5374\u6ca1\u6709\u4f20\u5165\u7684\u53c2\u6570\u5f53\u6210 undefined \uff0c\u591a\u4f59\u7684\u53c2\u6570\u5219\u9700\u8981\u624b\u52a8\u6355\u83b7 \u3002\u4e5f\u5c31\u662f\u8bf4 sum(1) \u5728\u6267\u884c\u7684\u65f6\u5019\uff0c\u53c2\u6570 x \u662f 1 \uff0c\u800c\u53c2\u6570 y \u662f undefined \uff0c\u7ed3\u679c\u81ea\u7136\u662f NaN \u3002 \u800c\u6355\u83b7\u591a\u4f59\u53c2\u6570\u7684\u65b9\u6cd5\u6709\u4e24\u79cd\uff0c\u4e00\u79cd\u662f\u5728\u53c2\u6570\u5217\u8868\u4e2d\u52a0\u5165\u53ef\u53d8\u957f\u53c2\u6570 ...rest \u3002\u4e0d\u8fc7\u6ce8\u610f\uff0c\u53ef\u53d8\u957f\u53c2\u6570\u4f1a\u88ab\u8d4b\u503c\u4e3a\u4e00\u4e2a\u6570\u7ec4\uff0c\u5e76\u4e14\u5728\u6ca1\u6709\u591a\u4e8e\u53c2\u6570\u7684\u65f6\u5019\u88ab\u8d4b\u503c\u4e3a \u7a7a\u6570\u7ec4 \u800c\u975e undefined \uff1a 1 2 3 4 5 function sum ( x , y , ... rest ) { let s = 0 ; for ( let i = 0 ; i < rest . length ; ++ i ) s += rest [ i ]; return x + y + s ; } \u53e6\u5916\u4e00\u79cd\u662f\u5728\u51fd\u6570\u4e4b\u4e2d\u4f7f\u7528 arguments \u53d8\u91cf\uff0c\u8fd9\u4e2a\u53d8\u91cf\u5b58\u50a8\u4e86\u51fd\u6570\u6240\u63a5\u53d7\u7684\u6240\u6709\u53c2\u6570\uff0c\u5e76\u5c06\u5176\u5305\u88c5\u4e3a\u4e00\u4e2a\u6570\u7ec4\u3002\u6240\u4ee5\u7406\u8bba\u4e0a\u751a\u81f3\u90fd\u4e0d\u9700\u8981\u58f0\u660e\u53c2\u6570\u5217\u8868\uff1a 1 2 3 4 5 function sum () { let s = 0 ; for ( let i = 0 ; i < arguments . length ; ++ i ) s += arguments [ i ]; return s ; } \u6d88\u5931\u7684\u8fd4\u56de\u503c JavaScript \u4e0d\u5f3a\u5236\u8981\u6c42\u8bed\u53e5\u4ee5\u5206\u53f7\u7ed3\u5c3e\uff0c\u800c\u5176\u5f15\u64ce\u4f1a\u5728\u6bcf\u4e00\u884c\u6ca1\u6709\u4ee5\u5206\u53f7\u7ed3\u5c3e\u7684\u8bed\u53e5\u540e\u9762\u81ea\u52a8\u6dfb\u52a0\u5206\u53f7\u3002\u4f46\u662f\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e00\u4e9b\u610f\u60f3\u4e0d\u5230\u7684\u7ed3\u679c\u3002 \u90e8\u5206 C/C++ \u7a0b\u5e8f\u7f16\u5199\u8005\u53ef\u80fd\u5728\u8fd4\u56de\u503c\u8f83\u4e3a\u5e9e\u5927\u7684\u65f6\u5019\u5c06\u8fd4\u56de\u503c\u6362\u884c\u5199\uff0c\u8fd9\u6837\u7f8e\u89c2\u5ea6\u8f83\u597d\uff0c\u4f46\u662f\u5728 JavaScript \u8bed\u8a00\u4e2d\uff0c\u8fd9\u6837\u5f88\u53ef\u80fd\u51fa\u73b0\u95ee\u9898\uff1a 1 2 3 4 function foo () { return ({ name : \"foo\" , }); } \u5b9e\u9645\u4e0a\u8c03\u7528\u51fd\u6570\u5f97\u5230\u7684\u8fd4\u56de\u503c\u662f undefined \u3002\u8fd9\u4e2a bug \u7684\u539f\u56e0\u5728\u4e0a\u9762\u5df2\u7ecf\u89e3\u91ca\u4e86\uff0c\u56e0\u4e3a return \u8bed\u53e5\u5355\u72ec\u6210\u4e00\u884c\uff0c\u6240\u4ee5 JavaScript \u5f15\u64ce\u4f1a\u7ed9 return \u540e\u9762\u52a0\u4e00\u4e2a\u5206\u53f7\uff0c\u4ece\u800c\u4e0a\u8ff0\u4ee3\u7801\u5b9e\u9645\u4e0a\u662f\uff1a 1 2 3 4 function foo () { return ; ({ name : \"foo\" , }); } \u8fd9\u4e2a\u51fd\u6570\u5c31\u6ca1\u6709\u8fd4\u56de\u503c\u4e86\uff08\u4e5f\u5c31\u662f\u8fd4\u56de\u503c\u662f undefined \uff09\u3002 \u6b63\u786e\u5199\u6cd5\u5e94\u5f53\u662f\uff1a 1 2 3 4 5 function foo () { return { name : \"foo\" , }; } \u8fd9\u4e2a\u65f6\u5019 JavaScript \u5f15\u64ce\u5e76\u4e0d\u8ba4\u4e3a return { \u662f\u4e00\u4e2a\u5b8c\u6574\u8bed\u53e5\uff0c\u6240\u4ee5\u4e0d\u4f1a\u5728\u5176\u672b\u5c3e\u6dfb\u52a0\u5206\u53f7\u3002 \u53d8\u91cf\u63d0\u5347 \u6211\u4eec\u8bf4\u8fc7 JavaScript \u7531\u4e8e\u5de5\u671f\u77ed\uff0c\u5177\u6709\u4e00\u4e9b\u8bbe\u8ba1\u4e0a\u7684\u7f3a\u9677\uff08\u4e00\u90e8\u5206\u5df2\u7ecf\u8f6c\u53d8\u4e3a\u8bed\u8a00\u7279\u6027\uff09\u3002\u53d8\u91cf\u63d0\u5347\u5c31\u662f\u8fd9\u4e9b\u7f3a\u9677\u4e4b\u4e00\uff0c\u5176\u5173\u7cfb\u5230 JavaScript \u7684\u53d8\u91cf\u4f5c\u7528\u57df\u95ee\u9898\u3002 C/C++ \u8bed\u8a00\u4f7f\u7528\u5927\u62ec\u53f7\u4ee3\u7801\u5757 {...} \u6765\u6807\u8bb0\u53d8\u91cf\u4f5c\u7528\u57df\uff0c\u8fd9\u88ab\u79f0\u4e3a \u5757\u4f5c\u7528\u57df \u3002\u4f46\u6700\u521d\u59cb\u7684 JavaScript \u5e76\u4e0d\u5177\u6709\u5757\u4f5c\u7528\u57df\uff0c\u5176\u53ea\u5177\u6709 \u51fd\u6570\u4f5c\u7528\u57df \u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u63a7\u5236\u8bed\u53e5\u5757 for, if \u7b49\u7b49\u90fd\u4e0d\u4f1a\u5f62\u6210\u4f5c\u7528\u57df\uff0c\u771f\u6b63\u9650\u5b9a\u53d8\u91cf\u4f5c\u7528\u4e8e\u7684\u662f\u51fd\u6570\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 // i is *not* visible here // j is *not* visible here function test () { // i *is* visible here // j *is* visible here var i ; for ( var j = 0 ; j < 10 ; ++ j ) { // i *is* visible here // j *is* visible here } // i *is* visible here // j *is* visible here } // i is *not* visible here // j is *not* visible here \u8fd9\u79cd\u4f5c\u7528\u57df\u5f62\u6210\u7684\u539f\u7406\u662f JavaScript \u8bed\u8a00\u4f1a\u5c06\u6bcf\u4e00\u4e2a\u53d8\u91cf\u7684\u58f0\u660e\u63d0\u5347\u5230\u5176\u6240\u5c5e\u51fd\u6570\u6700\u9876\u90e8\uff0c\u539f\u5148\u7684\u58f0\u660e\u8bed\u53e5\u53d8\u4e3a\u8d4b\u503c\u8bed\u53e5 \uff0c\u5f53\u7136\u5728\u6240\u6709\u51fd\u6570\u5916\u58f0\u660e\u7684\u53d8\u91cf\u5c31\u4f1a\u5177\u6709\u5168\u5c40\u4f5c\u7528\u57df\u3002 \u6bd4\u5982\u4e0b\u9762\u7684\u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 var name = \"Mike\" ; function foo () { console . log ( `Hello, ${ name } !` ); if ( true ) { var name = \"Helen\" ; } } foo (); \u8fd9\u6bb5\u4ee3\u7801\u7684\u6267\u884c\u7ed3\u679c\u4e3a \"Hello, undefined!\" \u3002 \u8981\u7406\u89e3\u4e3a\u4ec0\u4e48\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u624b\u52a8\u5e2e JavaScript \u505a\u4e00\u6b65\u53d8\u91cf\u63d0\u5347\u3002\u6ce8\u610f\u5230\u8fd9\u91cc\u6709\u4e24\u4e2a\u58f0\u660e\u8bed\u53e5\uff0c\u90a3\u4e48\u6211\u4eec\u5c06\u5176\u58f0\u660e\u63d0\u5347\u5230\u51fd\u6570\u6700\u9876\u90e8\uff0c\u539f\u5148\u7684\u58f0\u660e\u6539\u6210\u8d4b\u503c\uff1a 1 2 3 4 5 6 7 8 9 10 var name ; name = \"Mike\" ; function foo () { var name ; console . log ( `Hello, ${ name } !` ); if ( true ) { name = \"Helen\" ; } } foo (); \u8fd9\u6837\u5c31\u4e0d\u96be\u7406\u89e3 undefined \u51fa\u73b0\u7684\u539f\u56e0\u4e86\u3002 \u4e8b\u5b9e\u4e0a\u4e0d\u4ec5\u662f\u53d8\u91cf\uff0c\u51fd\u6570\u4e5f\u4f1a\u88ab\u63d0\u5347\u3002\u6bd4\u5982\u8bf4\uff1a 1 2 3 4 greet (); // \"Hello!\" function greet () { console . log ( \"Hello!\" ); } \u8fd9\u4e2a\u7a0b\u5e8f\u4f1a\u6b63\u5e38\u8f93\u51fa \"Hello!\" \u3002\u51fd\u6570\u63d0\u5347\u7684\u7279\u70b9\u662f\u5176\u4f1a\u5c06\u51fd\u6570\u4f53\u8ddf\u968f\u7740\u5411\u4e0a\u63d0\u5347\uff0c\u800c\u53d8\u91cf\u63d0\u5347\u5e76\u4e0d\u4f1a\u628a\u5176\u521d\u59cb\u503c\u8ddf\u968f\u7740\u63d0\u5347\u3002 \u4f46\u53e6\u5916\u4e00\u4e2a\u65b9\u9762\uff0c\u5982\u679c\u6211\u4eec\u4f7f\u7528\u7c7b\u4f3c\u58f0\u660e\u53d8\u91cf\u7684\u65b9\u5f0f\u58f0\u660e\u51fd\u6570\uff0c \u5176\u51fd\u6570\u4f53\u4e0d\u4f1a\u8ddf\u968f\u7740\u63d0\u5347 \uff1a 1 2 3 4 greet (); // Uncaught TypeError: greet is not a function var greet = function () { console . log ( \"Hello!\" ); } \u4e4b\u540e\u518d\u8865\u5145\u4e00\u70b9\u6709\u5173\u63d0\u5347\u987a\u5e8f\u7684\u89c4\u5219\uff0c\u5c31\u662f \u53d8\u91cf\u548c\u51fd\u6570\u540c\u65f6\u63d0\u5347\u7684\u65f6\u5019\uff0c\u53d8\u91cf\u58f0\u660e\u6309\u7167\u58f0\u660e\u987a\u5e8f\u6574\u4f53\u653e\u5728\u4f5c\u7528\u57df\u6700\u5f00\u5934\uff0c\u4e4b\u540e\u51fd\u6570\u58f0\u660e\u6309\u7167\u58f0\u660e\u987a\u5e8f\u6574\u4f53\u7d27\u63a5\u7740\u53d8\u91cf\u58f0\u660e\u6574\u4f53\uff0c\u6309\u7167\u53d8\u91cf\u5f62\u5f0f\u58f0\u660e\u7684\u51fd\u6570\u5f53\u4f5c\u53d8\u91cf\u58f0\u660e \uff0c\u4ee5\u53ca \u5982\u679c\u67d0\u4e00\u4e2a\u7b26\u53f7\u540c\u65f6\u7528\u5728\u591a\u4e2a\u53d8\u91cf\u58f0\u660e\u4e2d\uff0c\u89c6\u4f5c\u4e00\u6b21\u58f0\u660e\u3002\u7528\u5728\u591a\u4e2a\u51fd\u6570\u58f0\u660e\u4e2d\uff0c\u540e\u8005\u8986\u76d6\u524d\u8005\u3002\u540c\u65f6\u7528\u5728\u51fd\u6570\u548c\u53d8\u91cf\u58f0\u660e\u4e4b\u4e2d\uff0c\u91c7\u7528\u51fd\u6570\u7684\u58f0\u660e \u3002\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 console . log ( f ); // function f() {} function f () {} var f = 3 ; console . log ( f ); // function f() {} var f = 3 ; function f () {} \u8fd9\u91cc\u65e0\u8bba\u5982\u4f55\u8c03\u6574\u987a\u5e8f\uff0c\u51fd\u6570\u7684\u58f0\u660e\u4f1a\u8986\u76d6\u53d8\u91cf\u7684\u58f0\u660e\u3002 \u5176\u5b9e\u5173\u4e8e JavaScript \u53d8\u91cf\u4f5c\u7528\u57df\u7684\u95ee\u9898\uff0c\u8fd8\u6709\u4e00\u4e2a\u503c\u5f97\u6ce8\u610f\u7684\u662f \u9690\u5f0f\u5168\u5c40\u53d8\u91cf \u95ee\u9898\u3002\u5982\u679c\u4e0d\u4f7f\u7528\u4efb\u4f55\u5173\u952e\u5b57\u76f4\u63a5\u7f16\u5199\u4e00\u4e2a\u53d8\u91cf\u8d4b\u503c\u8bed\u53e5\uff0c\u800c\u4f60\u6240\u8981\u8d4b\u503c\u7684\u53d8\u91cf\u6839\u672c\u6ca1\u6709\u5b9a\u4e49\uff0c\u90a3\u4e48\u8fd9\u4e2a\u53d8\u91cf\u4f1a\u88ab\u58f0\u660e\u4e3a\u5168\u5c40\u53d8\u91cf\u3002\u6bd4\u5982\uff1a 1 2 3 4 5 function fn () { foo = 100 ; } fn (); console . log ( foo ); // 100 \u8fd9\u91cc\u51fd\u6570\u4f53\u91cc\u7684 fn \u5728\u8d4b\u503c\u7684\u65f6\u5019\u6ca1\u6709\u5b9a\u4e49\uff0c\u90a3\u4e48\u5b83\u5c31\u4f1a\u88ab\u63d0\u5347\u4e3a\u9690\u5f0f\u5168\u5c40\u53d8\u91cf\uff0c\u5373\u4f7f\u5728\u51fd\u6570\u4f53\u5916\u4e5f\u53ef\u4ee5\u8bbf\u95ee\u3002 \u4f46\u662f\u8fd9\u4e2a\u95ee\u9898\u5f88\u5feb\u88ab\u89e3\u51b3\u4e86\uff0c\u53ea\u9700\u8981\u4f7f\u7528 JavaScript \u7684\u4e25\u683c\u6a21\u5f0f\u5c31\u53ef\u4ee5\u7981\u6b62\u9690\u5f0f\u5168\u5c40\u53d8\u91cf\u3002\u4f7f\u7528\u65b9\u5f0f\u662f\u76f4\u63a5\u5728\u4ee3\u7801\u5f00\u5934\u52a0\u5165\u5b57\u7b26\u4e32 \"use strict\" \u3002 1 2 3 4 5 6 \"use strict\" ; function fn () { foo = 100 ; } fn (); console . log ( foo ); // Uncaught ReferenceError: foo is not defined \u4e8b\u5b9e\u4e0a\uff0c\u8bfb\u8005\u53ef\u4ee5\u53d1\u73b0\u4e0a\u9762\u6f14\u793a\u7684\u6240\u6709\u53d8\u91cf\u58f0\u660e\u5747\u662f\u4f7f\u7528 var \u58f0\u660e\u3002\u5176\u5b9e\uff0c\u5728\u6700\u521d\u7684 JavaScript \u8bed\u8a00\u53ea\u6709 var \u5173\u952e\u5b57\u53ef\u4ee5\u7528\u4e8e\u58f0\u660e\u53d8\u91cf\uff0c\u5e76\u4e14\u4e25\u683c\u6309\u7167\u53d8\u91cf\u63d0\u5347\u7684\u89c4\u5219\u8f6c\u6362\u3002\u7136\u800c\u7531\u4e8e\u53d8\u91cf\u63d0\u5347\u89c4\u5219\u5f88\u53cd\u76f4\u89c9\uff0c\u5e76\u4e14\u51fd\u6570\u4f5c\u7528\u57df\u7c92\u5ea6\u8fc7\u5927\uff0c\u53ef\u80fd\u5bfc\u81f4\u4f7f\u7528\u4e0d\u4fbf\uff08\u53c2\u89c1 \u95ed\u5305 \u7ae0\u8282\uff09\uff0c\u6240\u4ee5\u65b0\u6807\u51c6\u5f15\u5165\u4e86 let, const \u5173\u952e\u5b57\uff0c\u901a\u8fc7\u8fd9\u4e24\u4e2a\u5173\u952e\u5b57\u58f0\u660e\u7684\u53d8\u91cf\u9075\u5faa\u5757\u4f5c\u7528\u57df\uff0c\u5e76\u4e14\u4e0d\u53d1\u751f\u63d0\u5347\uff1a 1 2 3 4 5 console . log ( a ); // Uncaught ReferenceError: a is not defined let a = 1 ; console . log ( b ); // undefined var b = 1 ; \u8fd9\u4e5f\u662f\u6211\u4eec\u5f3a\u70c8\u63a8\u8350\u53ea\u4f7f\u7528 let, const \u5173\u952e\u5b57\u7684\u539f\u56e0\u3002 \u56de\u8c03\u6a21\u5f0f \u00b6 \u4f60 JavaScript \u771f\u6b63\u7684\u7b2c\u4e00\u6b65 \u56de\u8c03\u6a21\u5f0f\u53ef\u4ee5\u8ba4\u4e3a\u662f JavaScript \u7684\u4e00\u5927\u201c\u7075\u9b42\u201d\uff0c\u8fd9\u95e8\u8bed\u8a00\u7684\u5f88\u591a\u529f\u80fd\u5747\u57fa\u4e8e\u8fd9\u4e00\u8bbe\u8ba1\u6a21\u5f0f\u3002\u5b9e\u9645\u4e0a\uff0c\u5373\u4f7f\u4f60\u53ef\u80fd\u6ca1\u6709\u542c\u7f16\u8005\u7684\u8bdd\uff0c\u5077\u5077\u770b\u4e86\u4e0d\u5c11 JavaScript \u7684\u9b54\u6cd5\uff0c\u6df1\u523b\u9886\u609f\u4e00\u756a\u4e4b\u540e\u89c9\u5f97\u5df2\u7ecf\u5927\u5f7b\u5927\u609f\u3002\u4f46\u7f16\u8005\u60f3\u8981\u544a\u8bc9\u4f60\u7684\u662f\uff0c\u90a3\u4e9b\u9b54\u6cd5\u5e76\u4e0d\u662f JavaScript \u7684\u6838\u5fc3\uff0c\u56de\u8c03\u548c\u5230\u5904\u98de\u7684\u533f\u540d\u51fd\u6570\u624d\u4f1a\u662f\u4f60\u5b9e\u9645\u63a5\u89e6 JavaScript \u5de5\u7a0b\u65f6\u5904\u7406\u6700\u591a\u7684\u3002 \u8fd9\u4e00\u90e8\u5206\u5c06\u4f1a\u8bb2\u89e3\u56de\u8c03\u6a21\u5f0f\u3002\u5982\u679c\u8bfb\u8005\u5df2\u7ecf\u7406\u89e3\u638c\u63e1\uff0c\u5219\u53ef\u4ee5\u8df3\u8fc7\u8fd9\u4e00\u90e8\u5206\u3002 \u56de\u8c03\u6a21\u5f0f\u4ece\u8868\u9762\u4e0a\u8bb2\uff0c\u5b9e\u9645\u5c31\u662f \u5c06\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u53e6\u4e00\u4e2a\u51fd\u6570 \u3002 \u6211\u4eec\u9996\u5148\u9700\u8981\u7406\u89e3\u4ec0\u4e48\u662f\u51fd\u6570\u53c2\u6570\u3002\u5f53\u4e00\u4e2a\u51fd\u6570\u65e0\u6cd5\u81ea\u5df1\u83b7\u53d6\u5230\u67d0\u4e00\u4e9b\u4fe1\u606f\u7684\u65f6\u5019\uff0c\u5c31\u9700\u8981\u901a\u8fc7\u5916\u90e8\u5c06\u8fd9\u4e9b\u4fe1\u606f\u901a\u8fc7\u53c2\u6570\u901a\u77e5\u7ed9\u51fd\u6570\u3002\u6bd4\u5982\u8bf4\u8fd9\u6837\u7684\u4ee3\u7801\uff1a 1 2 3 4 5 6 function sum ( x , y ) { return x + y ; } // We tell the function that it needs to add 1 & 3 by passing parameters. let a = sum ( 1 , 3 ); \u51fd\u6570 sum \u662f\u6ca1\u6709\u529e\u6cd5\u81ea\u5df1\u83b7\u53d6\u5176\u9700\u8981\u7ed9\u54ea\u4e24\u4e2a\u6570\u503c\u6c42\u548c\uff0c\u6240\u4ee5\u5916\u90e8\u8c03\u7528\u51fd\u6570\u7684\u65f6\u5019\u9700\u8981\u4f20\u5165\u8fd9\u4e2a\u4fe1\u606f\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u51fd\u6570\u53c2\u6570\u7684\u4f5c\u7528\u662f\u8865\u5168\u51fd\u6570\u6240\u9700\u8981\u4e86\u89e3\u7684\u4fe1\u606f\u3002 \u4f46\u662f\u6709\u4e00\u4e9b\u51fd\u6570\uff0c\u5b83\u6b20\u7f3a\u7684\u4e0d\u4e00\u5b9a\u662f\u201c\u67d0\u4e00\u4e2a\u53d8\u91cf\u662f\u4ec0\u4e48\u201d\u8fd9\u6837\u7684\u4fe1\u606f\uff0c\u5b83\u6b20\u7f3a\u7684\u53ef\u80fd\u662f\u201c\u6211\u4eec\u9700\u8981\u5b83\u505a\u4ec0\u4e48\u201d\u8fd9\u6837\u7684\u4fe1\u606f\u3002\u6bd4\u5982\u8bf4\u6211\u4eec\u60f3\u628a\u4e0a\u9762\u7684 sum \u51fd\u6570\u62d3\u5c55\u529f\u80fd\uff0c\u5347\u7ea7\u4e3a\u4e00\u4e2a\u52a0\u51cf\u4e58\u9664\u90fd\u80fd\u7b97\u7684\u51fd\u6570\u3002\u90a3\u4e48\u95ee\u9898\u5c31\u51fa\u73b0\u5728\uff0c\u6211\u5982\u4f55\u544a\u8bc9\u8fd9\u4e2a\u51fd\u6570\uff0c\u5b83\u5e94\u8be5\u5bf9 x, y \u505a\u4ec0\u4e48\u64cd\u4f5c\u3002 \u4e00\u79cd\u89e3\u51b3\u65b9\u5f0f\u662f\u4f20\u5165\u4e00\u4e2a\u6574\u6570\u6216\u8005\u4e00\u4e2a\u5b57\u7b26\uff0c\u8868\u793a\u8fd9\u4e2a\u51fd\u6570\u5e94\u8be5\u8fdb\u884c\u4ec0\u4e48\u6837\u7684\u8fd0\u7b97\uff1a 1 2 3 4 5 6 7 8 9 function calculate ( x , y , op ) { switch ( op ) { case \"+\" : return x + y ; case \"-\" : return x - y ; case \"*\" : return x * y ; case \"/\" : return x / y ; default : return undefined ; } } \u4f46\u8fd9\u79cd\u89e3\u51b3\u65b9\u6cd5\u5c31\u9700\u8981\u6211\u4eec\u4e8b\u5148\u7ea6\u5b9a op \u5b57\u7b26\u7684\u503c\u548c\u51fd\u6570\u8fdb\u884c\u7684\u64cd\u4f5c\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u90a3\u4e3a\u4f55\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u544a\u8bc9 calculate \u51fd\u6570\u5b83\u9700\u8981\u8fdb\u884c\u4ec0\u4e48\u64cd\u4f5c\u5462\uff1f \u6211\u4eec\u901a\u8fc7\u51fd\u6570\u63cf\u8ff0\u5bf9\u6570\u636e\u7684\u64cd\u4f5c\uff0c\u800c\u544a\u8bc9\u51fd\u6570\u5b83\u9700\u8981\u8fdb\u884c\u4ec0\u4e48\u64cd\u4f5c\uff0c\u5c31\u662f \u5c06\u63cf\u8ff0\u64cd\u4f5c\u7684\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u8fd9\u4e2a\u51fd\u6570 \uff0c\u8fd9\u4e2a\u88ab\u4f20\u5165\u5230\u5176\u4ed6\u51fd\u6570\u91cc\u7684\u51fd\u6570\u5c31\u79f0\u4e3a \u56de\u8c03\u51fd\u6570 \u3002\u5176\u540d\u79f0\u53ef\u4ee5\u5927\u81f4\u7406\u89e3\u4e3a\u201c\u8fd9\u4e2a\u51fd\u6570\u73b0\u5728\u4f20\u8fdb\u53bb\u4f46\u6682\u4e14\u4e0d\u8c03\u7528\uff0c\u9700\u8981\u7684\u65f6\u5019\u518d\u8c03\u7528\u201d\uff1a 1 2 3 4 5 6 7 function calculate ( x , y , op ) { return op ( x , y ); } calculate ( 1 , 2 , function ( x , y ) { return x + y ; }); // 3 calculate ( 1 , 2 , function ( x , y ) { return x - y ; }); // -1 calculate ( 1 , 2 , function ( x , y ) { return x ; }); // 1 \u5173\u4e8e\u56de\u8c03\u51fd\u6570\u66f4\u6df1\u5c42\u6b21\u7684\u8fd0\u7528\u4f1a\u5728 JavaScript \u5f02\u6b65\u90e8\u5206\u8bb2\u89e3\u3002 \u4e8b\u5b9e\u4e0a\uff0cJavaScript \u6709\u5173\u6570\u7ec4\u7684\u5404\u79cd\u64cd\u4f5c\u51e0\u4e4e\u5168\u90fd\u4f7f\u7528\u4e86\u56de\u8c03\u6a21\u5f0f\uff0c\u6bd4\u5982\u8bf4\u904d\u5386\u6570\u7ec4\u7684\u64cd\u4f5c\uff1a 1 2 3 [ 1 , 2 , 3 , 4 ]. forEach ( function ( val , ind ) { console . log ( `The elem with index ${ ind } is ${ val } .\\n` ); }); forEach \u65b9\u6cd5\u63a5\u53d7\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u5e76\u4f1a\u628a\u6570\u7ec4\u7684\u6bcf\u4e00\u9879\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u8fd9\u4e2a\u56de\u8c03\u5e76\u6267\u884c\u3002 \u53e6\u5916\u7684\u4f8b\u5b50\u8fd8\u6709\u6570\u7ec4\u7684\u6620\u5c04\u51fd\u6570 map \uff1a 1 2 3 4 5 6 7 [ 1 , 2 , 3 , 4 ]. map ( function ( val ) { return 2 * val ; }); // [2, 4, 6, 8] let arr = [ 1 , 2 , 3 , 4 ]; let newArr = []; for ( let i = 0 ; i < arr . length ; ++ i ) newArr . push ( 2 * arr [ i ]); \u8fd9\u4e24\u79cd\u5199\u6cd5\u662f\u7b49\u4ef7\u7684\uff0c\u4f46\u662f JavaScript \u66f4\u503e\u5411\u4e8e\u9009\u62e9\u524d\u8005\uff0c\u56e0\u4e3a\u8fd9\u79cd\u56de\u8c03\u5f0f\u7684\u94fe\u6761\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u52a0\u957f\uff0c\u5728\u5904\u7406\u6570\u7ec4\u7684\u65f6\u5019\u5c24\u5176\u65b9\u4fbf\u3002\u6bd4\u5982\u8bf4\u6211\u4eec\u9700\u8981\u5c06\u63a5\u6536\u5230\u7684\u6570\u636e\u6e05\u6d17\u683c\u5f0f\u4e4b\u540e\u7b5b\u9009\u51fa\u5408\u6cd5\u6570\u636e\u5e76\u6392\u5e8f\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 response . data . map ( function ( val , ind ) { return { ... val , index : ind , }; }) . filter ( function ( val ) { return val . name !== undefined ; }) . sort ( function ( a , b ) { return a . subscriberNum - b . subscriberNum ; }); \u5982\u679c\u7528 C/C++ \u683c\u5f0f\u8fdb\u884c\u7f16\u5199\uff0c\u5219\u53ef\u80fd\u7a0d\u663e\u590d\u6742\u3002 \u5c55\u5f00\u8fd0\u7b97\u7b26 \u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u4e86 ... \u8fd0\u7b97\u7b26\uff0c\u8be5\u8fd0\u7b97\u7b26\u5982\u679c\u8bb2\u89e3\u5176\u8fd0\u4f5c\u7ec6\u8282\u5219\u663e\u5f97\u5197\u4f59\uff0c\u6240\u4ee5\u8fd9\u91cc\u8bb2\u89e3\u5176\u5728\u5b9e\u9645\u5de5\u7a0b\u4e2d\u5e38\u89c1\u7684\u7528\u6cd5\uff1a 1 2 let obj = { a : 1 , b : 2 , c : 3 }; let another = { ... obj , c : 2 , d : 4 }; // { a: 1, b: 2, c: 2, d: 4 } \u8fd9\u91cc ...obj \u7684\u542b\u4e49\u5c31\u662f\u5c06 obj \u5bf9\u8c61\u5c55\u5f00\u6210\u952e\u503c\u5bf9\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u91cc another \u5bf9\u8c61\u5c31\u83b7\u5f97\u4e86 a: 1 \u3001 b: 2 \u3001 c: 3 \u8fd9\u4e09\u4e2a\u952e\u503c\u5bf9\u3002\u800c\u5982\u679c\u540e\u7eed\u7684\u952e\u503c\u5bf9\u548c obj \u4e4b\u4e2d\u7684\u53d1\u751f\u91cd\u5408\uff08\u5982\u8fd9\u91cc another \u4e2d\u91cd\u65b0\u5b9a\u4e49\u4e86 c \u8fd9\u4e2a\u5c5e\u6027\uff09\uff0c\u5219\u540e\u8005\u8986\u76d6\u524d\u8005\u3002\u6240\u4ee5\u8fd9\u91cc\u65b0\u5b9a\u4e49\u7684 c: 2 \u8986\u76d6\u6389 obj \u4e4b\u4e2d\u7684 c: 3 \u3002 \u8fd9\u4e2a\u8bed\u6cd5\u7684\u91cd\u8981\u7528\u9014\u5c31\u662f\uff0c\u5982\u679c\u6211\u9700\u8981\u6839\u636e\u4e00\u4e2a\u5df2\u6709\u5bf9\u8c61 obj \u6784\u9020\u4e00\u4e2a\u65b0\u5bf9\u8c61 another \uff0c\u65b0\u5bf9\u8c61\u548c\u5df2\u6709\u5bf9\u8c61\u4ec5\u6709\u4e00\u4e2a\u952e\u503c\u5bf9\u4e0d\u540c\uff0c\u5c31\u53ef\u4ee5\u7528\u8fd9\u4e2a\u8bed\u6cd5\uff1a 1 2 3 4 5 6 const getNewObjectWithOnePropChanged = ( obj , value ) => { return { ... obj , keyToBeChanged : value , } } \u95ed\u5305 \u00b6 \u51fd\u6570\u65e2\u7136\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u90a3\u4e48\u6211\u4eec\u4e5f\u53ef\u4ee5\u7528\u4e00\u4e2a\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u51fd\u6570\u3002\u6bd4\u5982\u8bf4\uff1a 1 2 3 4 5 6 7 8 function getIncreaser ( increment ) { return function ( x ) { return x + increment ; } } const increase5 = getIncreaser ( 5 ); increase5 ( 10 ); // 15 \u6bd4\u5982\u8bf4\u4e0a\u8ff0\u7684 getIncreaser \u53ef\u4ee5\u7528\u4e8e\u83b7\u53d6\u4e00\u4e2a\u201c\u6570\u636e\u589e\u957f\u5668\u201d\uff0c\u800c\u5177\u4f53\u7ed9\u6570\u636e\u589e\u52a0\u591a\u5c11\uff0c\u5219\u662f\u8fd9\u4e2a\u51fd\u6570\u63a5\u6536\u7684\u53c2\u6570\u3002 getIncreaser \u4f1a\u628a increment \u53d8\u91cf\u5305\u88c5\u5728\u5176\u8fd4\u56de\u7684\u533f\u540d\u51fd\u6570\u4e4b\u4e2d\uff0c\u8fd9\u6837\u5c31\u5f62\u6210\u4e86\u4e00\u4e2a \u95ed\u5305 \u3002\u95ed\u5305\u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u4e2a\u5305\u88c5\u4e86\u5176\u6240\u5728\u73af\u5883\u7684\u4e00\u4e9b\u5c40\u90e8\u53d8\u91cf\u7684\u51fd\u6570\u3002 \u4f46\u95ed\u5305\u4f1a\u5e26\u6765\u4e00\u5b9a\u7684\u95ee\u9898\uff0c\u6bd4\u5982\u8bf4\u8fd9\u6837\u7684\u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 function getCounters () { var arr = []; for ( var i = 0 ; i < 3 ; ++ i ) { arr . push ( function () { console . log ( i * i ); }); } return arr ; } var counters = getCounters (); counters [ 0 ](); // 9 counters [ 1 ](); // 9 counters [ 2 ](); // 9 \u8fd9\u4e9b\u4ee3\u7801\u7684\u9884\u671f\u6267\u884c\u7ed3\u679c\u5e94\u8be5\u662f 0, 1, 4 \uff0c\u56e0\u4e3a\u5728\u5c06\u51fd\u6570\u6253\u5305\u7684\u65f6\u5019 i \u7684\u503c\u5e94\u8be5\u5206\u522b\u662f 0, 1, 2 \u3002\u4f46\u662f\u8981\u6ce8\u610f\uff0c\u51fd\u6570\u6253\u5305\u6210\u95ed\u5305\u7684\u65f6\u5019\uff0c\u53ea\u5355\u7eaf\u5b58\u50a8\u4e86 \u4e34\u65f6\u53d8\u91cf\u7684\u5f15\u7528 \uff0c\u800c\u5230\u771f\u6b63\u6267\u884c\u95ed\u5305\u51fd\u6570\u7684\u65f6\u5019\u624d\u4f1a\u53bb\u8bbf\u95ee\u8fd9\u4e9b\u4e34\u65f6\u53d8\u91cf\u7684\u503c\u3002\u4e0a\u9762\u4f8b\u5b50\u4e4b\u4e2d\u7684\u95ed\u5305\u51fd\u6570\u5728\u771f\u6b63\u6267\u884c\u7684\u65f6\u5019\uff0c\u6240\u5f15\u7528\u7684 i \u5df2\u7ecf\u662f 3 \u4e86\uff0c\u6240\u4ee5\u7ed3\u679c\u5168\u4e3a 9 \u3002 \u95ed\u5305\u5f15\u7528\u4f1a\u53d1\u751f\u53d8\u5316\u7684\u91cf\u662f\u5371\u9669\u7684 \u6839\u636e\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u6211\u4eec\u5c31\u5df2\u7ecf\u53ef\u4ee5\u770b\u51fa\uff0c\u95ed\u5305\u6240\u5f15\u7528\u7684\u4e34\u65f6\u53d8\u91cf\u6700\u597d\u662f\u5e38\u91cf\u6216\u786e\u5b9a\u4e0d\u4f1a\u53d1\u751f\u53d8\u5316\u7684\u91cf\uff0c\u8fd9\u6837\u81f3\u5c11\u53ef\u4ee5\u8ba9\u95ed\u5305\u7684\u884c\u4e3a\u53ef\u63a7\u3002 \u6211\u4eec\u6765\u60f3\u60f3\u600e\u4e48\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u8bfb\u8005\u53ef\u80fd\u5df2\u7ecf\u60f3\u5230\u4e86\u4e00\u79cd\u89e3\u51b3\u65b9\u5f0f\uff0c\u4e5f\u5c31\u662f\u628a i \u5305\u88c5\u5230\u95ed\u5305\u4e4b\u524d\u9996\u5148\u4f7f\u7528\u5176\u5b83\u53d8\u91cf\u6355\u83b7\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 function getCounters () { var arr = []; for ( var i = 0 ; i < 3 ; ++ i ) { var j = i ; // Capture i here arr . push ( function () { console . log ( j * j ); }); } return arr ; } var counters = getCounters (); counters [ 0 ](); // 4 counters [ 1 ](); // 4 counters [ 2 ](); // 4 \u4f46\u4f9d\u7136\u6709 bug\uff0c\u539f\u56e0\u662f JavaScript \u7684\u53d8\u91cf\u63d0\u5347\uff0c\u8fd9\u4e00\u90e8\u5206\u53ef\u4ee5\u53c2\u8003\u5148\u524d\u7684\u8bb2\u89e3\u3002\u7531\u4e8e j \u4f7f\u7528\u4e86 var \u58f0\u660e\uff0c\u6240\u4ee5\u5176\u58f0\u660e\u5b9e\u9645\u4e0a\u4f1a\u88ab\u63d0\u5347\u5230\u51fd\u6570\u6700\u524d\u9762\uff0c\u5bfc\u81f4\u5176\u8fd8\u662f\u8ddf\u968f\u7740 i \u88ab\u4fee\u6539\u4e86\u3002 \u4e3a\u4e86\u9632\u6b62\u53d8\u91cf\u63d0\u5347\uff0c\u6709\u4e00\u79cd\u89e3\u51b3\u65b9\u5f0f\u518d\u521b\u5efa\u4e00\u4e2a\u51fd\u6570\u4f5c\u7528\u57df\u9632\u6b62\u8fc7\u5ea6\u63d0\u5347\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function getCounters () { var arr = []; for ( var i = 0 ; i < 3 ; ++ i ) { arr . push (( function ( i ) { return function () { console . log ( i * i ); }; })( i )); } return arr ; } var counters = getCounters (); counters [ 0 ](); // 0 counters [ 1 ](); // 1 counters [ 2 ](); // 4 \u8fd9\u91cc\u6211\u4eec\u53c8\u521b\u5efa\u4e86\u4e00\u4e2a\u95ed\u5305\uff0c\u53ea\u4e0d\u8fc7\u8fd9\u4e2a\u95ed\u5305\u7acb\u523b\u6267\u884c\uff0c\u628a i \u4f20\u8fdb\u53bb\uff0c\u8fd9\u6837\u7684\u8bdd i \u5c31\u53d8\u6210\u4e86\u8fd9\u4e2a\u95ed\u5305\u5185\u90e8\u7684\u53c2\u6570 i \uff0c\u4e0d\u4f1a\u968f\u7740\u5916\u9762\u7684\u5faa\u73af\u53d8\u91cf i \u6539\u53d8\u800c\u6539\u53d8\u3002 \u4f46\u5b9e\u9645\u4e0a\u4e4b\u524d\u8bb2\u89e3\u53d8\u91cf\u63d0\u5347\u7684\u65f6\u5019\u6211\u4eec\u5c31\u63d0\u8fc7\uff0c\u89e3\u51b3\u53d8\u91cf\u63d0\u5347\u6700\u597d\u7684\u65b9\u5f0f\u5c31\u662f\u4e0d\u7528 var \u3002\u6240\u4ee5\u8bf4\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u6700\u597d\u65b9\u6848\u5e94\u8be5\u662f\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 function getCounters () { let arr = []; for ( let i = 0 ; i < 3 ; ++ i ) { arr . push ( function () { console . log ( i * i ); }); } return arr ; } let counters = getCounters (); counters [ 0 ](); // 0 counters [ 1 ](); // 1 counters [ 2 ](); // 4 \u8fd9\u6837\u7684\u4ee3\u7801\u4e0d\u4ec5\u6b63\u786e\u4e86\uff0c\u53ef\u8bfb\u6027\u4e5f\u5f88\u597d\u3002","title":"JavaScript \u7684\u51fd\u6570"},{"location":"languages/javascript/function/#javascript","text":"","title":"JavaScript \u7684\u51fd\u6570"},{"location":"languages/javascript/function/#_1","text":"\u6211\u4eec\u4e00\u822c\u628a JavaScript \u7684\u51fd\u6570\u4e5f\u8ba4\u4e3a\u662f\u4e00\u79cd\u53d8\u91cf\uff0c\u56e0\u4e3a\u5728 JavaScript \u4e4b\u4e2d\uff0c\u51fd\u6570\u7684\u884c\u4e3a\u5f88\u5927\u7a0b\u5ea6\u4e0a\u548c\u53d8\u91cf\u7c7b\u4f3c\u3002 JavaScript \u8bed\u8a00\u4e4b\u4e2d\u58f0\u660e\u4e00\u4e2a\u51fd\u6570\u7684\u8bed\u6cd5\u4e3a\uff1a 1 2 3 function sum ( x , y ) { return x + y ; } \u800c\u53e6\u5916\u4e00\u79cd\u58f0\u660e\u65b9\u5f0f\u5982\u4e0b\uff0c\u8fd9\u79cd\u65b9\u5f0f\u7684\u5185\u6db5\u5c31\u662f\u628a\u51fd\u6570\u5f53\u6210\u4e00\u79cd\u53d8\u91cf\uff1a 1 2 3 const sum = function ( x , y ) { return x + y ; }; \u51fd\u6570\u8c03\u7528\u7684\u8bed\u6cd5\u5219\u548c C/C++ \u8bed\u8a00\u4e00\u81f4\uff1a 1 sum ( 1 , 2 ); // 3 \u65e0\u7528\u7684\u53c2\u6570\u5217\u8868 \u5b9e\u9645\u4e0a JavaScript \u4ece\u6765\u4e0d\u68c0\u67e5\u4f60\u51fd\u6570\u8c03\u7528\u662f\u4e0d\u662f\u7b26\u5408\u53c2\u6570\u5217\u8868\uff0c\u672c\u8eab JavaScript \u5c31\u4e0d\u68c0\u67e5\u53d8\u91cf\u7c7b\u578b\uff0c\u5b9e\u9645\u4e0a JavaScript \u8fd8\u4e0d\u68c0\u67e5\u4f60\u51fd\u6570\u8c03\u7528\u7684\u65f6\u5019\u4f20\u5165\u7684\u53c2\u6570\u4e2a\u6570\u3002\u6bd4\u5982\u8bf4\u4f60\u7ed9 sum \u51fd\u6570\u4f20\u5165\u4e00\u4e2a\u53c2\u6570\u8fd8\u662f\u4e09\u4e2a\u53c2\u6570\uff0c\u5176\u90fd\u6b63\u5e38\u5de5\u4f5c\uff1a 1 2 sum ( 1 ); // NaN sum ( 1 , 2 , 3 ); // 3 \u5176\u5904\u7406\u903b\u8f91\u4e3a \u58f0\u660e\u4e86\u5374\u6ca1\u6709\u4f20\u5165\u7684\u53c2\u6570\u5f53\u6210 undefined \uff0c\u591a\u4f59\u7684\u53c2\u6570\u5219\u9700\u8981\u624b\u52a8\u6355\u83b7 \u3002\u4e5f\u5c31\u662f\u8bf4 sum(1) \u5728\u6267\u884c\u7684\u65f6\u5019\uff0c\u53c2\u6570 x \u662f 1 \uff0c\u800c\u53c2\u6570 y \u662f undefined \uff0c\u7ed3\u679c\u81ea\u7136\u662f NaN \u3002 \u800c\u6355\u83b7\u591a\u4f59\u53c2\u6570\u7684\u65b9\u6cd5\u6709\u4e24\u79cd\uff0c\u4e00\u79cd\u662f\u5728\u53c2\u6570\u5217\u8868\u4e2d\u52a0\u5165\u53ef\u53d8\u957f\u53c2\u6570 ...rest \u3002\u4e0d\u8fc7\u6ce8\u610f\uff0c\u53ef\u53d8\u957f\u53c2\u6570\u4f1a\u88ab\u8d4b\u503c\u4e3a\u4e00\u4e2a\u6570\u7ec4\uff0c\u5e76\u4e14\u5728\u6ca1\u6709\u591a\u4e8e\u53c2\u6570\u7684\u65f6\u5019\u88ab\u8d4b\u503c\u4e3a \u7a7a\u6570\u7ec4 \u800c\u975e undefined \uff1a 1 2 3 4 5 function sum ( x , y , ... rest ) { let s = 0 ; for ( let i = 0 ; i < rest . length ; ++ i ) s += rest [ i ]; return x + y + s ; } \u53e6\u5916\u4e00\u79cd\u662f\u5728\u51fd\u6570\u4e4b\u4e2d\u4f7f\u7528 arguments \u53d8\u91cf\uff0c\u8fd9\u4e2a\u53d8\u91cf\u5b58\u50a8\u4e86\u51fd\u6570\u6240\u63a5\u53d7\u7684\u6240\u6709\u53c2\u6570\uff0c\u5e76\u5c06\u5176\u5305\u88c5\u4e3a\u4e00\u4e2a\u6570\u7ec4\u3002\u6240\u4ee5\u7406\u8bba\u4e0a\u751a\u81f3\u90fd\u4e0d\u9700\u8981\u58f0\u660e\u53c2\u6570\u5217\u8868\uff1a 1 2 3 4 5 function sum () { let s = 0 ; for ( let i = 0 ; i < arguments . length ; ++ i ) s += arguments [ i ]; return s ; } \u6d88\u5931\u7684\u8fd4\u56de\u503c JavaScript \u4e0d\u5f3a\u5236\u8981\u6c42\u8bed\u53e5\u4ee5\u5206\u53f7\u7ed3\u5c3e\uff0c\u800c\u5176\u5f15\u64ce\u4f1a\u5728\u6bcf\u4e00\u884c\u6ca1\u6709\u4ee5\u5206\u53f7\u7ed3\u5c3e\u7684\u8bed\u53e5\u540e\u9762\u81ea\u52a8\u6dfb\u52a0\u5206\u53f7\u3002\u4f46\u662f\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e00\u4e9b\u610f\u60f3\u4e0d\u5230\u7684\u7ed3\u679c\u3002 \u90e8\u5206 C/C++ \u7a0b\u5e8f\u7f16\u5199\u8005\u53ef\u80fd\u5728\u8fd4\u56de\u503c\u8f83\u4e3a\u5e9e\u5927\u7684\u65f6\u5019\u5c06\u8fd4\u56de\u503c\u6362\u884c\u5199\uff0c\u8fd9\u6837\u7f8e\u89c2\u5ea6\u8f83\u597d\uff0c\u4f46\u662f\u5728 JavaScript \u8bed\u8a00\u4e2d\uff0c\u8fd9\u6837\u5f88\u53ef\u80fd\u51fa\u73b0\u95ee\u9898\uff1a 1 2 3 4 function foo () { return ({ name : \"foo\" , }); } \u5b9e\u9645\u4e0a\u8c03\u7528\u51fd\u6570\u5f97\u5230\u7684\u8fd4\u56de\u503c\u662f undefined \u3002\u8fd9\u4e2a bug \u7684\u539f\u56e0\u5728\u4e0a\u9762\u5df2\u7ecf\u89e3\u91ca\u4e86\uff0c\u56e0\u4e3a return \u8bed\u53e5\u5355\u72ec\u6210\u4e00\u884c\uff0c\u6240\u4ee5 JavaScript \u5f15\u64ce\u4f1a\u7ed9 return \u540e\u9762\u52a0\u4e00\u4e2a\u5206\u53f7\uff0c\u4ece\u800c\u4e0a\u8ff0\u4ee3\u7801\u5b9e\u9645\u4e0a\u662f\uff1a 1 2 3 4 function foo () { return ; ({ name : \"foo\" , }); } \u8fd9\u4e2a\u51fd\u6570\u5c31\u6ca1\u6709\u8fd4\u56de\u503c\u4e86\uff08\u4e5f\u5c31\u662f\u8fd4\u56de\u503c\u662f undefined \uff09\u3002 \u6b63\u786e\u5199\u6cd5\u5e94\u5f53\u662f\uff1a 1 2 3 4 5 function foo () { return { name : \"foo\" , }; } \u8fd9\u4e2a\u65f6\u5019 JavaScript \u5f15\u64ce\u5e76\u4e0d\u8ba4\u4e3a return { \u662f\u4e00\u4e2a\u5b8c\u6574\u8bed\u53e5\uff0c\u6240\u4ee5\u4e0d\u4f1a\u5728\u5176\u672b\u5c3e\u6dfb\u52a0\u5206\u53f7\u3002 \u53d8\u91cf\u63d0\u5347 \u6211\u4eec\u8bf4\u8fc7 JavaScript \u7531\u4e8e\u5de5\u671f\u77ed\uff0c\u5177\u6709\u4e00\u4e9b\u8bbe\u8ba1\u4e0a\u7684\u7f3a\u9677\uff08\u4e00\u90e8\u5206\u5df2\u7ecf\u8f6c\u53d8\u4e3a\u8bed\u8a00\u7279\u6027\uff09\u3002\u53d8\u91cf\u63d0\u5347\u5c31\u662f\u8fd9\u4e9b\u7f3a\u9677\u4e4b\u4e00\uff0c\u5176\u5173\u7cfb\u5230 JavaScript \u7684\u53d8\u91cf\u4f5c\u7528\u57df\u95ee\u9898\u3002 C/C++ \u8bed\u8a00\u4f7f\u7528\u5927\u62ec\u53f7\u4ee3\u7801\u5757 {...} \u6765\u6807\u8bb0\u53d8\u91cf\u4f5c\u7528\u57df\uff0c\u8fd9\u88ab\u79f0\u4e3a \u5757\u4f5c\u7528\u57df \u3002\u4f46\u6700\u521d\u59cb\u7684 JavaScript \u5e76\u4e0d\u5177\u6709\u5757\u4f5c\u7528\u57df\uff0c\u5176\u53ea\u5177\u6709 \u51fd\u6570\u4f5c\u7528\u57df \u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u63a7\u5236\u8bed\u53e5\u5757 for, if \u7b49\u7b49\u90fd\u4e0d\u4f1a\u5f62\u6210\u4f5c\u7528\u57df\uff0c\u771f\u6b63\u9650\u5b9a\u53d8\u91cf\u4f5c\u7528\u4e8e\u7684\u662f\u51fd\u6570\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 // i is *not* visible here // j is *not* visible here function test () { // i *is* visible here // j *is* visible here var i ; for ( var j = 0 ; j < 10 ; ++ j ) { // i *is* visible here // j *is* visible here } // i *is* visible here // j *is* visible here } // i is *not* visible here // j is *not* visible here \u8fd9\u79cd\u4f5c\u7528\u57df\u5f62\u6210\u7684\u539f\u7406\u662f JavaScript \u8bed\u8a00\u4f1a\u5c06\u6bcf\u4e00\u4e2a\u53d8\u91cf\u7684\u58f0\u660e\u63d0\u5347\u5230\u5176\u6240\u5c5e\u51fd\u6570\u6700\u9876\u90e8\uff0c\u539f\u5148\u7684\u58f0\u660e\u8bed\u53e5\u53d8\u4e3a\u8d4b\u503c\u8bed\u53e5 \uff0c\u5f53\u7136\u5728\u6240\u6709\u51fd\u6570\u5916\u58f0\u660e\u7684\u53d8\u91cf\u5c31\u4f1a\u5177\u6709\u5168\u5c40\u4f5c\u7528\u57df\u3002 \u6bd4\u5982\u4e0b\u9762\u7684\u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 var name = \"Mike\" ; function foo () { console . log ( `Hello, ${ name } !` ); if ( true ) { var name = \"Helen\" ; } } foo (); \u8fd9\u6bb5\u4ee3\u7801\u7684\u6267\u884c\u7ed3\u679c\u4e3a \"Hello, undefined!\" \u3002 \u8981\u7406\u89e3\u4e3a\u4ec0\u4e48\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u624b\u52a8\u5e2e JavaScript \u505a\u4e00\u6b65\u53d8\u91cf\u63d0\u5347\u3002\u6ce8\u610f\u5230\u8fd9\u91cc\u6709\u4e24\u4e2a\u58f0\u660e\u8bed\u53e5\uff0c\u90a3\u4e48\u6211\u4eec\u5c06\u5176\u58f0\u660e\u63d0\u5347\u5230\u51fd\u6570\u6700\u9876\u90e8\uff0c\u539f\u5148\u7684\u58f0\u660e\u6539\u6210\u8d4b\u503c\uff1a 1 2 3 4 5 6 7 8 9 10 var name ; name = \"Mike\" ; function foo () { var name ; console . log ( `Hello, ${ name } !` ); if ( true ) { name = \"Helen\" ; } } foo (); \u8fd9\u6837\u5c31\u4e0d\u96be\u7406\u89e3 undefined \u51fa\u73b0\u7684\u539f\u56e0\u4e86\u3002 \u4e8b\u5b9e\u4e0a\u4e0d\u4ec5\u662f\u53d8\u91cf\uff0c\u51fd\u6570\u4e5f\u4f1a\u88ab\u63d0\u5347\u3002\u6bd4\u5982\u8bf4\uff1a 1 2 3 4 greet (); // \"Hello!\" function greet () { console . log ( \"Hello!\" ); } \u8fd9\u4e2a\u7a0b\u5e8f\u4f1a\u6b63\u5e38\u8f93\u51fa \"Hello!\" \u3002\u51fd\u6570\u63d0\u5347\u7684\u7279\u70b9\u662f\u5176\u4f1a\u5c06\u51fd\u6570\u4f53\u8ddf\u968f\u7740\u5411\u4e0a\u63d0\u5347\uff0c\u800c\u53d8\u91cf\u63d0\u5347\u5e76\u4e0d\u4f1a\u628a\u5176\u521d\u59cb\u503c\u8ddf\u968f\u7740\u63d0\u5347\u3002 \u4f46\u53e6\u5916\u4e00\u4e2a\u65b9\u9762\uff0c\u5982\u679c\u6211\u4eec\u4f7f\u7528\u7c7b\u4f3c\u58f0\u660e\u53d8\u91cf\u7684\u65b9\u5f0f\u58f0\u660e\u51fd\u6570\uff0c \u5176\u51fd\u6570\u4f53\u4e0d\u4f1a\u8ddf\u968f\u7740\u63d0\u5347 \uff1a 1 2 3 4 greet (); // Uncaught TypeError: greet is not a function var greet = function () { console . log ( \"Hello!\" ); } \u4e4b\u540e\u518d\u8865\u5145\u4e00\u70b9\u6709\u5173\u63d0\u5347\u987a\u5e8f\u7684\u89c4\u5219\uff0c\u5c31\u662f \u53d8\u91cf\u548c\u51fd\u6570\u540c\u65f6\u63d0\u5347\u7684\u65f6\u5019\uff0c\u53d8\u91cf\u58f0\u660e\u6309\u7167\u58f0\u660e\u987a\u5e8f\u6574\u4f53\u653e\u5728\u4f5c\u7528\u57df\u6700\u5f00\u5934\uff0c\u4e4b\u540e\u51fd\u6570\u58f0\u660e\u6309\u7167\u58f0\u660e\u987a\u5e8f\u6574\u4f53\u7d27\u63a5\u7740\u53d8\u91cf\u58f0\u660e\u6574\u4f53\uff0c\u6309\u7167\u53d8\u91cf\u5f62\u5f0f\u58f0\u660e\u7684\u51fd\u6570\u5f53\u4f5c\u53d8\u91cf\u58f0\u660e \uff0c\u4ee5\u53ca \u5982\u679c\u67d0\u4e00\u4e2a\u7b26\u53f7\u540c\u65f6\u7528\u5728\u591a\u4e2a\u53d8\u91cf\u58f0\u660e\u4e2d\uff0c\u89c6\u4f5c\u4e00\u6b21\u58f0\u660e\u3002\u7528\u5728\u591a\u4e2a\u51fd\u6570\u58f0\u660e\u4e2d\uff0c\u540e\u8005\u8986\u76d6\u524d\u8005\u3002\u540c\u65f6\u7528\u5728\u51fd\u6570\u548c\u53d8\u91cf\u58f0\u660e\u4e4b\u4e2d\uff0c\u91c7\u7528\u51fd\u6570\u7684\u58f0\u660e \u3002\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 console . log ( f ); // function f() {} function f () {} var f = 3 ; console . log ( f ); // function f() {} var f = 3 ; function f () {} \u8fd9\u91cc\u65e0\u8bba\u5982\u4f55\u8c03\u6574\u987a\u5e8f\uff0c\u51fd\u6570\u7684\u58f0\u660e\u4f1a\u8986\u76d6\u53d8\u91cf\u7684\u58f0\u660e\u3002 \u5176\u5b9e\u5173\u4e8e JavaScript \u53d8\u91cf\u4f5c\u7528\u57df\u7684\u95ee\u9898\uff0c\u8fd8\u6709\u4e00\u4e2a\u503c\u5f97\u6ce8\u610f\u7684\u662f \u9690\u5f0f\u5168\u5c40\u53d8\u91cf \u95ee\u9898\u3002\u5982\u679c\u4e0d\u4f7f\u7528\u4efb\u4f55\u5173\u952e\u5b57\u76f4\u63a5\u7f16\u5199\u4e00\u4e2a\u53d8\u91cf\u8d4b\u503c\u8bed\u53e5\uff0c\u800c\u4f60\u6240\u8981\u8d4b\u503c\u7684\u53d8\u91cf\u6839\u672c\u6ca1\u6709\u5b9a\u4e49\uff0c\u90a3\u4e48\u8fd9\u4e2a\u53d8\u91cf\u4f1a\u88ab\u58f0\u660e\u4e3a\u5168\u5c40\u53d8\u91cf\u3002\u6bd4\u5982\uff1a 1 2 3 4 5 function fn () { foo = 100 ; } fn (); console . log ( foo ); // 100 \u8fd9\u91cc\u51fd\u6570\u4f53\u91cc\u7684 fn \u5728\u8d4b\u503c\u7684\u65f6\u5019\u6ca1\u6709\u5b9a\u4e49\uff0c\u90a3\u4e48\u5b83\u5c31\u4f1a\u88ab\u63d0\u5347\u4e3a\u9690\u5f0f\u5168\u5c40\u53d8\u91cf\uff0c\u5373\u4f7f\u5728\u51fd\u6570\u4f53\u5916\u4e5f\u53ef\u4ee5\u8bbf\u95ee\u3002 \u4f46\u662f\u8fd9\u4e2a\u95ee\u9898\u5f88\u5feb\u88ab\u89e3\u51b3\u4e86\uff0c\u53ea\u9700\u8981\u4f7f\u7528 JavaScript \u7684\u4e25\u683c\u6a21\u5f0f\u5c31\u53ef\u4ee5\u7981\u6b62\u9690\u5f0f\u5168\u5c40\u53d8\u91cf\u3002\u4f7f\u7528\u65b9\u5f0f\u662f\u76f4\u63a5\u5728\u4ee3\u7801\u5f00\u5934\u52a0\u5165\u5b57\u7b26\u4e32 \"use strict\" \u3002 1 2 3 4 5 6 \"use strict\" ; function fn () { foo = 100 ; } fn (); console . log ( foo ); // Uncaught ReferenceError: foo is not defined \u4e8b\u5b9e\u4e0a\uff0c\u8bfb\u8005\u53ef\u4ee5\u53d1\u73b0\u4e0a\u9762\u6f14\u793a\u7684\u6240\u6709\u53d8\u91cf\u58f0\u660e\u5747\u662f\u4f7f\u7528 var \u58f0\u660e\u3002\u5176\u5b9e\uff0c\u5728\u6700\u521d\u7684 JavaScript \u8bed\u8a00\u53ea\u6709 var \u5173\u952e\u5b57\u53ef\u4ee5\u7528\u4e8e\u58f0\u660e\u53d8\u91cf\uff0c\u5e76\u4e14\u4e25\u683c\u6309\u7167\u53d8\u91cf\u63d0\u5347\u7684\u89c4\u5219\u8f6c\u6362\u3002\u7136\u800c\u7531\u4e8e\u53d8\u91cf\u63d0\u5347\u89c4\u5219\u5f88\u53cd\u76f4\u89c9\uff0c\u5e76\u4e14\u51fd\u6570\u4f5c\u7528\u57df\u7c92\u5ea6\u8fc7\u5927\uff0c\u53ef\u80fd\u5bfc\u81f4\u4f7f\u7528\u4e0d\u4fbf\uff08\u53c2\u89c1 \u95ed\u5305 \u7ae0\u8282\uff09\uff0c\u6240\u4ee5\u65b0\u6807\u51c6\u5f15\u5165\u4e86 let, const \u5173\u952e\u5b57\uff0c\u901a\u8fc7\u8fd9\u4e24\u4e2a\u5173\u952e\u5b57\u58f0\u660e\u7684\u53d8\u91cf\u9075\u5faa\u5757\u4f5c\u7528\u57df\uff0c\u5e76\u4e14\u4e0d\u53d1\u751f\u63d0\u5347\uff1a 1 2 3 4 5 console . log ( a ); // Uncaught ReferenceError: a is not defined let a = 1 ; console . log ( b ); // undefined var b = 1 ; \u8fd9\u4e5f\u662f\u6211\u4eec\u5f3a\u70c8\u63a8\u8350\u53ea\u4f7f\u7528 let, const \u5173\u952e\u5b57\u7684\u539f\u56e0\u3002","title":"\u51fd\u6570\u58f0\u660e\u548c\u8c03\u7528"},{"location":"languages/javascript/function/#_2","text":"\u4f60 JavaScript \u771f\u6b63\u7684\u7b2c\u4e00\u6b65 \u56de\u8c03\u6a21\u5f0f\u53ef\u4ee5\u8ba4\u4e3a\u662f JavaScript \u7684\u4e00\u5927\u201c\u7075\u9b42\u201d\uff0c\u8fd9\u95e8\u8bed\u8a00\u7684\u5f88\u591a\u529f\u80fd\u5747\u57fa\u4e8e\u8fd9\u4e00\u8bbe\u8ba1\u6a21\u5f0f\u3002\u5b9e\u9645\u4e0a\uff0c\u5373\u4f7f\u4f60\u53ef\u80fd\u6ca1\u6709\u542c\u7f16\u8005\u7684\u8bdd\uff0c\u5077\u5077\u770b\u4e86\u4e0d\u5c11 JavaScript \u7684\u9b54\u6cd5\uff0c\u6df1\u523b\u9886\u609f\u4e00\u756a\u4e4b\u540e\u89c9\u5f97\u5df2\u7ecf\u5927\u5f7b\u5927\u609f\u3002\u4f46\u7f16\u8005\u60f3\u8981\u544a\u8bc9\u4f60\u7684\u662f\uff0c\u90a3\u4e9b\u9b54\u6cd5\u5e76\u4e0d\u662f JavaScript \u7684\u6838\u5fc3\uff0c\u56de\u8c03\u548c\u5230\u5904\u98de\u7684\u533f\u540d\u51fd\u6570\u624d\u4f1a\u662f\u4f60\u5b9e\u9645\u63a5\u89e6 JavaScript \u5de5\u7a0b\u65f6\u5904\u7406\u6700\u591a\u7684\u3002 \u8fd9\u4e00\u90e8\u5206\u5c06\u4f1a\u8bb2\u89e3\u56de\u8c03\u6a21\u5f0f\u3002\u5982\u679c\u8bfb\u8005\u5df2\u7ecf\u7406\u89e3\u638c\u63e1\uff0c\u5219\u53ef\u4ee5\u8df3\u8fc7\u8fd9\u4e00\u90e8\u5206\u3002 \u56de\u8c03\u6a21\u5f0f\u4ece\u8868\u9762\u4e0a\u8bb2\uff0c\u5b9e\u9645\u5c31\u662f \u5c06\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u53e6\u4e00\u4e2a\u51fd\u6570 \u3002 \u6211\u4eec\u9996\u5148\u9700\u8981\u7406\u89e3\u4ec0\u4e48\u662f\u51fd\u6570\u53c2\u6570\u3002\u5f53\u4e00\u4e2a\u51fd\u6570\u65e0\u6cd5\u81ea\u5df1\u83b7\u53d6\u5230\u67d0\u4e00\u4e9b\u4fe1\u606f\u7684\u65f6\u5019\uff0c\u5c31\u9700\u8981\u901a\u8fc7\u5916\u90e8\u5c06\u8fd9\u4e9b\u4fe1\u606f\u901a\u8fc7\u53c2\u6570\u901a\u77e5\u7ed9\u51fd\u6570\u3002\u6bd4\u5982\u8bf4\u8fd9\u6837\u7684\u4ee3\u7801\uff1a 1 2 3 4 5 6 function sum ( x , y ) { return x + y ; } // We tell the function that it needs to add 1 & 3 by passing parameters. let a = sum ( 1 , 3 ); \u51fd\u6570 sum \u662f\u6ca1\u6709\u529e\u6cd5\u81ea\u5df1\u83b7\u53d6\u5176\u9700\u8981\u7ed9\u54ea\u4e24\u4e2a\u6570\u503c\u6c42\u548c\uff0c\u6240\u4ee5\u5916\u90e8\u8c03\u7528\u51fd\u6570\u7684\u65f6\u5019\u9700\u8981\u4f20\u5165\u8fd9\u4e2a\u4fe1\u606f\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u51fd\u6570\u53c2\u6570\u7684\u4f5c\u7528\u662f\u8865\u5168\u51fd\u6570\u6240\u9700\u8981\u4e86\u89e3\u7684\u4fe1\u606f\u3002 \u4f46\u662f\u6709\u4e00\u4e9b\u51fd\u6570\uff0c\u5b83\u6b20\u7f3a\u7684\u4e0d\u4e00\u5b9a\u662f\u201c\u67d0\u4e00\u4e2a\u53d8\u91cf\u662f\u4ec0\u4e48\u201d\u8fd9\u6837\u7684\u4fe1\u606f\uff0c\u5b83\u6b20\u7f3a\u7684\u53ef\u80fd\u662f\u201c\u6211\u4eec\u9700\u8981\u5b83\u505a\u4ec0\u4e48\u201d\u8fd9\u6837\u7684\u4fe1\u606f\u3002\u6bd4\u5982\u8bf4\u6211\u4eec\u60f3\u628a\u4e0a\u9762\u7684 sum \u51fd\u6570\u62d3\u5c55\u529f\u80fd\uff0c\u5347\u7ea7\u4e3a\u4e00\u4e2a\u52a0\u51cf\u4e58\u9664\u90fd\u80fd\u7b97\u7684\u51fd\u6570\u3002\u90a3\u4e48\u95ee\u9898\u5c31\u51fa\u73b0\u5728\uff0c\u6211\u5982\u4f55\u544a\u8bc9\u8fd9\u4e2a\u51fd\u6570\uff0c\u5b83\u5e94\u8be5\u5bf9 x, y \u505a\u4ec0\u4e48\u64cd\u4f5c\u3002 \u4e00\u79cd\u89e3\u51b3\u65b9\u5f0f\u662f\u4f20\u5165\u4e00\u4e2a\u6574\u6570\u6216\u8005\u4e00\u4e2a\u5b57\u7b26\uff0c\u8868\u793a\u8fd9\u4e2a\u51fd\u6570\u5e94\u8be5\u8fdb\u884c\u4ec0\u4e48\u6837\u7684\u8fd0\u7b97\uff1a 1 2 3 4 5 6 7 8 9 function calculate ( x , y , op ) { switch ( op ) { case \"+\" : return x + y ; case \"-\" : return x - y ; case \"*\" : return x * y ; case \"/\" : return x / y ; default : return undefined ; } } \u4f46\u8fd9\u79cd\u89e3\u51b3\u65b9\u6cd5\u5c31\u9700\u8981\u6211\u4eec\u4e8b\u5148\u7ea6\u5b9a op \u5b57\u7b26\u7684\u503c\u548c\u51fd\u6570\u8fdb\u884c\u7684\u64cd\u4f5c\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u90a3\u4e3a\u4f55\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u544a\u8bc9 calculate \u51fd\u6570\u5b83\u9700\u8981\u8fdb\u884c\u4ec0\u4e48\u64cd\u4f5c\u5462\uff1f \u6211\u4eec\u901a\u8fc7\u51fd\u6570\u63cf\u8ff0\u5bf9\u6570\u636e\u7684\u64cd\u4f5c\uff0c\u800c\u544a\u8bc9\u51fd\u6570\u5b83\u9700\u8981\u8fdb\u884c\u4ec0\u4e48\u64cd\u4f5c\uff0c\u5c31\u662f \u5c06\u63cf\u8ff0\u64cd\u4f5c\u7684\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u8fd9\u4e2a\u51fd\u6570 \uff0c\u8fd9\u4e2a\u88ab\u4f20\u5165\u5230\u5176\u4ed6\u51fd\u6570\u91cc\u7684\u51fd\u6570\u5c31\u79f0\u4e3a \u56de\u8c03\u51fd\u6570 \u3002\u5176\u540d\u79f0\u53ef\u4ee5\u5927\u81f4\u7406\u89e3\u4e3a\u201c\u8fd9\u4e2a\u51fd\u6570\u73b0\u5728\u4f20\u8fdb\u53bb\u4f46\u6682\u4e14\u4e0d\u8c03\u7528\uff0c\u9700\u8981\u7684\u65f6\u5019\u518d\u8c03\u7528\u201d\uff1a 1 2 3 4 5 6 7 function calculate ( x , y , op ) { return op ( x , y ); } calculate ( 1 , 2 , function ( x , y ) { return x + y ; }); // 3 calculate ( 1 , 2 , function ( x , y ) { return x - y ; }); // -1 calculate ( 1 , 2 , function ( x , y ) { return x ; }); // 1 \u5173\u4e8e\u56de\u8c03\u51fd\u6570\u66f4\u6df1\u5c42\u6b21\u7684\u8fd0\u7528\u4f1a\u5728 JavaScript \u5f02\u6b65\u90e8\u5206\u8bb2\u89e3\u3002 \u4e8b\u5b9e\u4e0a\uff0cJavaScript \u6709\u5173\u6570\u7ec4\u7684\u5404\u79cd\u64cd\u4f5c\u51e0\u4e4e\u5168\u90fd\u4f7f\u7528\u4e86\u56de\u8c03\u6a21\u5f0f\uff0c\u6bd4\u5982\u8bf4\u904d\u5386\u6570\u7ec4\u7684\u64cd\u4f5c\uff1a 1 2 3 [ 1 , 2 , 3 , 4 ]. forEach ( function ( val , ind ) { console . log ( `The elem with index ${ ind } is ${ val } .\\n` ); }); forEach \u65b9\u6cd5\u63a5\u53d7\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u5e76\u4f1a\u628a\u6570\u7ec4\u7684\u6bcf\u4e00\u9879\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u8fd9\u4e2a\u56de\u8c03\u5e76\u6267\u884c\u3002 \u53e6\u5916\u7684\u4f8b\u5b50\u8fd8\u6709\u6570\u7ec4\u7684\u6620\u5c04\u51fd\u6570 map \uff1a 1 2 3 4 5 6 7 [ 1 , 2 , 3 , 4 ]. map ( function ( val ) { return 2 * val ; }); // [2, 4, 6, 8] let arr = [ 1 , 2 , 3 , 4 ]; let newArr = []; for ( let i = 0 ; i < arr . length ; ++ i ) newArr . push ( 2 * arr [ i ]); \u8fd9\u4e24\u79cd\u5199\u6cd5\u662f\u7b49\u4ef7\u7684\uff0c\u4f46\u662f JavaScript \u66f4\u503e\u5411\u4e8e\u9009\u62e9\u524d\u8005\uff0c\u56e0\u4e3a\u8fd9\u79cd\u56de\u8c03\u5f0f\u7684\u94fe\u6761\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u52a0\u957f\uff0c\u5728\u5904\u7406\u6570\u7ec4\u7684\u65f6\u5019\u5c24\u5176\u65b9\u4fbf\u3002\u6bd4\u5982\u8bf4\u6211\u4eec\u9700\u8981\u5c06\u63a5\u6536\u5230\u7684\u6570\u636e\u6e05\u6d17\u683c\u5f0f\u4e4b\u540e\u7b5b\u9009\u51fa\u5408\u6cd5\u6570\u636e\u5e76\u6392\u5e8f\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 response . data . map ( function ( val , ind ) { return { ... val , index : ind , }; }) . filter ( function ( val ) { return val . name !== undefined ; }) . sort ( function ( a , b ) { return a . subscriberNum - b . subscriberNum ; }); \u5982\u679c\u7528 C/C++ \u683c\u5f0f\u8fdb\u884c\u7f16\u5199\uff0c\u5219\u53ef\u80fd\u7a0d\u663e\u590d\u6742\u3002 \u5c55\u5f00\u8fd0\u7b97\u7b26 \u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u4e86 ... \u8fd0\u7b97\u7b26\uff0c\u8be5\u8fd0\u7b97\u7b26\u5982\u679c\u8bb2\u89e3\u5176\u8fd0\u4f5c\u7ec6\u8282\u5219\u663e\u5f97\u5197\u4f59\uff0c\u6240\u4ee5\u8fd9\u91cc\u8bb2\u89e3\u5176\u5728\u5b9e\u9645\u5de5\u7a0b\u4e2d\u5e38\u89c1\u7684\u7528\u6cd5\uff1a 1 2 let obj = { a : 1 , b : 2 , c : 3 }; let another = { ... obj , c : 2 , d : 4 }; // { a: 1, b: 2, c: 2, d: 4 } \u8fd9\u91cc ...obj \u7684\u542b\u4e49\u5c31\u662f\u5c06 obj \u5bf9\u8c61\u5c55\u5f00\u6210\u952e\u503c\u5bf9\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u91cc another \u5bf9\u8c61\u5c31\u83b7\u5f97\u4e86 a: 1 \u3001 b: 2 \u3001 c: 3 \u8fd9\u4e09\u4e2a\u952e\u503c\u5bf9\u3002\u800c\u5982\u679c\u540e\u7eed\u7684\u952e\u503c\u5bf9\u548c obj \u4e4b\u4e2d\u7684\u53d1\u751f\u91cd\u5408\uff08\u5982\u8fd9\u91cc another \u4e2d\u91cd\u65b0\u5b9a\u4e49\u4e86 c \u8fd9\u4e2a\u5c5e\u6027\uff09\uff0c\u5219\u540e\u8005\u8986\u76d6\u524d\u8005\u3002\u6240\u4ee5\u8fd9\u91cc\u65b0\u5b9a\u4e49\u7684 c: 2 \u8986\u76d6\u6389 obj \u4e4b\u4e2d\u7684 c: 3 \u3002 \u8fd9\u4e2a\u8bed\u6cd5\u7684\u91cd\u8981\u7528\u9014\u5c31\u662f\uff0c\u5982\u679c\u6211\u9700\u8981\u6839\u636e\u4e00\u4e2a\u5df2\u6709\u5bf9\u8c61 obj \u6784\u9020\u4e00\u4e2a\u65b0\u5bf9\u8c61 another \uff0c\u65b0\u5bf9\u8c61\u548c\u5df2\u6709\u5bf9\u8c61\u4ec5\u6709\u4e00\u4e2a\u952e\u503c\u5bf9\u4e0d\u540c\uff0c\u5c31\u53ef\u4ee5\u7528\u8fd9\u4e2a\u8bed\u6cd5\uff1a 1 2 3 4 5 6 const getNewObjectWithOnePropChanged = ( obj , value ) => { return { ... obj , keyToBeChanged : value , } }","title":"\u56de\u8c03\u6a21\u5f0f"},{"location":"languages/javascript/function/#_3","text":"\u51fd\u6570\u65e2\u7136\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u90a3\u4e48\u6211\u4eec\u4e5f\u53ef\u4ee5\u7528\u4e00\u4e2a\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u51fd\u6570\u3002\u6bd4\u5982\u8bf4\uff1a 1 2 3 4 5 6 7 8 function getIncreaser ( increment ) { return function ( x ) { return x + increment ; } } const increase5 = getIncreaser ( 5 ); increase5 ( 10 ); // 15 \u6bd4\u5982\u8bf4\u4e0a\u8ff0\u7684 getIncreaser \u53ef\u4ee5\u7528\u4e8e\u83b7\u53d6\u4e00\u4e2a\u201c\u6570\u636e\u589e\u957f\u5668\u201d\uff0c\u800c\u5177\u4f53\u7ed9\u6570\u636e\u589e\u52a0\u591a\u5c11\uff0c\u5219\u662f\u8fd9\u4e2a\u51fd\u6570\u63a5\u6536\u7684\u53c2\u6570\u3002 getIncreaser \u4f1a\u628a increment \u53d8\u91cf\u5305\u88c5\u5728\u5176\u8fd4\u56de\u7684\u533f\u540d\u51fd\u6570\u4e4b\u4e2d\uff0c\u8fd9\u6837\u5c31\u5f62\u6210\u4e86\u4e00\u4e2a \u95ed\u5305 \u3002\u95ed\u5305\u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u4e2a\u5305\u88c5\u4e86\u5176\u6240\u5728\u73af\u5883\u7684\u4e00\u4e9b\u5c40\u90e8\u53d8\u91cf\u7684\u51fd\u6570\u3002 \u4f46\u95ed\u5305\u4f1a\u5e26\u6765\u4e00\u5b9a\u7684\u95ee\u9898\uff0c\u6bd4\u5982\u8bf4\u8fd9\u6837\u7684\u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 function getCounters () { var arr = []; for ( var i = 0 ; i < 3 ; ++ i ) { arr . push ( function () { console . log ( i * i ); }); } return arr ; } var counters = getCounters (); counters [ 0 ](); // 9 counters [ 1 ](); // 9 counters [ 2 ](); // 9 \u8fd9\u4e9b\u4ee3\u7801\u7684\u9884\u671f\u6267\u884c\u7ed3\u679c\u5e94\u8be5\u662f 0, 1, 4 \uff0c\u56e0\u4e3a\u5728\u5c06\u51fd\u6570\u6253\u5305\u7684\u65f6\u5019 i \u7684\u503c\u5e94\u8be5\u5206\u522b\u662f 0, 1, 2 \u3002\u4f46\u662f\u8981\u6ce8\u610f\uff0c\u51fd\u6570\u6253\u5305\u6210\u95ed\u5305\u7684\u65f6\u5019\uff0c\u53ea\u5355\u7eaf\u5b58\u50a8\u4e86 \u4e34\u65f6\u53d8\u91cf\u7684\u5f15\u7528 \uff0c\u800c\u5230\u771f\u6b63\u6267\u884c\u95ed\u5305\u51fd\u6570\u7684\u65f6\u5019\u624d\u4f1a\u53bb\u8bbf\u95ee\u8fd9\u4e9b\u4e34\u65f6\u53d8\u91cf\u7684\u503c\u3002\u4e0a\u9762\u4f8b\u5b50\u4e4b\u4e2d\u7684\u95ed\u5305\u51fd\u6570\u5728\u771f\u6b63\u6267\u884c\u7684\u65f6\u5019\uff0c\u6240\u5f15\u7528\u7684 i \u5df2\u7ecf\u662f 3 \u4e86\uff0c\u6240\u4ee5\u7ed3\u679c\u5168\u4e3a 9 \u3002 \u95ed\u5305\u5f15\u7528\u4f1a\u53d1\u751f\u53d8\u5316\u7684\u91cf\u662f\u5371\u9669\u7684 \u6839\u636e\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u6211\u4eec\u5c31\u5df2\u7ecf\u53ef\u4ee5\u770b\u51fa\uff0c\u95ed\u5305\u6240\u5f15\u7528\u7684\u4e34\u65f6\u53d8\u91cf\u6700\u597d\u662f\u5e38\u91cf\u6216\u786e\u5b9a\u4e0d\u4f1a\u53d1\u751f\u53d8\u5316\u7684\u91cf\uff0c\u8fd9\u6837\u81f3\u5c11\u53ef\u4ee5\u8ba9\u95ed\u5305\u7684\u884c\u4e3a\u53ef\u63a7\u3002 \u6211\u4eec\u6765\u60f3\u60f3\u600e\u4e48\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u8bfb\u8005\u53ef\u80fd\u5df2\u7ecf\u60f3\u5230\u4e86\u4e00\u79cd\u89e3\u51b3\u65b9\u5f0f\uff0c\u4e5f\u5c31\u662f\u628a i \u5305\u88c5\u5230\u95ed\u5305\u4e4b\u524d\u9996\u5148\u4f7f\u7528\u5176\u5b83\u53d8\u91cf\u6355\u83b7\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 function getCounters () { var arr = []; for ( var i = 0 ; i < 3 ; ++ i ) { var j = i ; // Capture i here arr . push ( function () { console . log ( j * j ); }); } return arr ; } var counters = getCounters (); counters [ 0 ](); // 4 counters [ 1 ](); // 4 counters [ 2 ](); // 4 \u4f46\u4f9d\u7136\u6709 bug\uff0c\u539f\u56e0\u662f JavaScript \u7684\u53d8\u91cf\u63d0\u5347\uff0c\u8fd9\u4e00\u90e8\u5206\u53ef\u4ee5\u53c2\u8003\u5148\u524d\u7684\u8bb2\u89e3\u3002\u7531\u4e8e j \u4f7f\u7528\u4e86 var \u58f0\u660e\uff0c\u6240\u4ee5\u5176\u58f0\u660e\u5b9e\u9645\u4e0a\u4f1a\u88ab\u63d0\u5347\u5230\u51fd\u6570\u6700\u524d\u9762\uff0c\u5bfc\u81f4\u5176\u8fd8\u662f\u8ddf\u968f\u7740 i \u88ab\u4fee\u6539\u4e86\u3002 \u4e3a\u4e86\u9632\u6b62\u53d8\u91cf\u63d0\u5347\uff0c\u6709\u4e00\u79cd\u89e3\u51b3\u65b9\u5f0f\u518d\u521b\u5efa\u4e00\u4e2a\u51fd\u6570\u4f5c\u7528\u57df\u9632\u6b62\u8fc7\u5ea6\u63d0\u5347\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function getCounters () { var arr = []; for ( var i = 0 ; i < 3 ; ++ i ) { arr . push (( function ( i ) { return function () { console . log ( i * i ); }; })( i )); } return arr ; } var counters = getCounters (); counters [ 0 ](); // 0 counters [ 1 ](); // 1 counters [ 2 ](); // 4 \u8fd9\u91cc\u6211\u4eec\u53c8\u521b\u5efa\u4e86\u4e00\u4e2a\u95ed\u5305\uff0c\u53ea\u4e0d\u8fc7\u8fd9\u4e2a\u95ed\u5305\u7acb\u523b\u6267\u884c\uff0c\u628a i \u4f20\u8fdb\u53bb\uff0c\u8fd9\u6837\u7684\u8bdd i \u5c31\u53d8\u6210\u4e86\u8fd9\u4e2a\u95ed\u5305\u5185\u90e8\u7684\u53c2\u6570 i \uff0c\u4e0d\u4f1a\u968f\u7740\u5916\u9762\u7684\u5faa\u73af\u53d8\u91cf i \u6539\u53d8\u800c\u6539\u53d8\u3002 \u4f46\u5b9e\u9645\u4e0a\u4e4b\u524d\u8bb2\u89e3\u53d8\u91cf\u63d0\u5347\u7684\u65f6\u5019\u6211\u4eec\u5c31\u63d0\u8fc7\uff0c\u89e3\u51b3\u53d8\u91cf\u63d0\u5347\u6700\u597d\u7684\u65b9\u5f0f\u5c31\u662f\u4e0d\u7528 var \u3002\u6240\u4ee5\u8bf4\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u6700\u597d\u65b9\u6848\u5e94\u8be5\u662f\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 function getCounters () { let arr = []; for ( let i = 0 ; i < 3 ; ++ i ) { arr . push ( function () { console . log ( i * i ); }); } return arr ; } let counters = getCounters (); counters [ 0 ](); // 0 counters [ 1 ](); // 1 counters [ 2 ](); // 4 \u8fd9\u6837\u7684\u4ee3\u7801\u4e0d\u4ec5\u6b63\u786e\u4e86\uff0c\u53ef\u8bfb\u6027\u4e5f\u5f88\u597d\u3002","title":"\u95ed\u5305"},{"location":"languages/javascript/oop-advance/","text":"JavaScript \u7684\u9762\u5411\u5bf9\u8c61\u8fdb\u9636 \u00b6 \u4e00\u4e9b\u53ef\u80fd\u4e0d\u5fc5\u8981\u7684\u77e5\u8bc6 \u672c\u7ae0\u8282\u5c06\u4e3b\u8981\u8bb2\u89e3 JavaScript \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u539f\u578b\u94fe\u903b\u8f91\uff0c\u4f46\u8fd9\u4e9b\u77e5\u8bc6\u5bf9\u4e8e JavaScript \u7684\u521d\u5b66\u8005\u5e76\u4e0d\u4e00\u5b9a\u5fc5\u8981\u3002\u6240\u4ee5\u7f16\u8005\u5efa\u8bae\u5982\u679c\u53ea\u662f\u60f3\u5b66\u4e60 JavaScript \u57fa\u7840\u8bed\u6cd5\u540e\u76f4\u63a5\u8f6c TypeScript \u4ee5\u53ca\u4e0a\u624b\u524d\u7aef\u6846\u67b6\uff0c\u5219\u4e0d\u9700\u8981\u6d6a\u8d39\u65f6\u95f4\u5b66\u4e60\u8fd9\u4e00\u90e8\u5206\u3002\u60f3\u8981\u6df1\u5165\u4e86\u89e3\u8fd9\u4e00\u95e8\u8bed\u8a00\u7684\u8bfb\u8005\uff0c\u7f16\u8005\u5efa\u8bae\u4e00\u5b9a\u8981\u5b66\u4e60\u8fd9\u4e00\u90e8\u5206\u3002 JavaScript \u7684\u7b2c\u4e00\u539f\u5219 \u00b6 \u8fd9\u91cc\uff0c\u8ba9\u6211\u4eec\u9996\u5148\u94ed\u8bb0\u8fd9\u6837\u7684\u4e00\u53e5\u8bdd\uff1a \u51fd\u6570\u662f JavaScript \u7684\u4e00\u7b49\u516c\u6c11\uff0c\u5bf9\u8c61\u7531\u51fd\u6570\u521b\u5efa\u3002 \u6216\u8bb8\u6211\u4eec\u5e38\u89c1\u7684\u521b\u5efa\u5bf9\u8c61\u7684\u65b9\u5f0f\u662f\uff1a 1 2 3 4 5 6 let a = { foo : 1 , bar : \"foobar\" , }; let b = [ 1 , 2 , 3 ]; \u4f46\u8fd9\u53ea\u662f\u65b9\u4fbf\u7f16\u7a0b\u7684\u8bed\u6cd5\u7cd6\uff0c\u6211\u4eec\u8fd9\u91cc\u5e0c\u671b\u4f7f\u7528\u4e0b\u8ff0\u66f4\u4e3a\u672c\u8d28\u7684\u521b\u5efa\u65b9\u5f0f\uff1a 1 2 3 4 5 6 7 8 let a = new Object (); a . foo = 1 ; a . bar = \"foobar\" ; let b = new Array (); b [ 0 ] = 1 ; b [ 1 ] = 2 ; b [ 2 ] = 3 ; \u800c\u8fd9\u91cc Object \u548c Array \u662f\u4e24\u4e2a\u51fd\u6570\uff0c\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u53ef\u4ee5\u7406\u89e3\u4e3a\u6784\u9020\u51fd\u6570\uff1a 1 2 typeof Object ; // function typeof Array ; // function \u539f\u578b\u548c\u6784\u9020\u51fd\u6570 \u00b6 \u6211\u4eec\u8bf4\u8fc7\u5bf9\u8c61\u90fd\u662f\u51fd\u6570\u6784\u9020\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u4ece\u6784\u9020\u51fd\u6570\u51fa\u53d1\u8bb2\u89e3 JavaScript \u7684\u9762\u5411\u5bf9\u8c61\u3002 \u6784\u9020\u51fd\u6570\u7684\u4f5c\u7528\u662f\u6784\u5efa\u4e00\u4e2a\u65b0\u5bf9\u8c61\uff0c\u6bd4\u5982\u8bf4\u6211\u4eec\u53ef\u4ee5\u5199\u4e00\u4e2a\u6839\u636e\u4f20\u5165\u53c2\u6570\u6784\u9020\u5177\u6709\u4e00\u79cd\u7279\u5b9a\u5f62\u5f0f\u7684\u5bf9\u8c61\u7684\u51fd\u6570\uff1a 1 2 3 4 5 6 7 8 function createStudent ( _name , _age ) { let res = {}; res . name = _name ; res . age = _age ; return res ; } let stu = createStudent ( \"Ashitemaru\" , 22 ); \u8fd9\u4e2a\u51fd\u6570\u5c31\u53ef\u4ee5\u63a5\u53d7\u4e00\u4e2a\u5b66\u751f\u7684\u540d\u5b57\u548c\u5e74\u9f84\uff0c\u6784\u9020\u51fa\u4e00\u4e2a\u5305\u542b\u8fd9\u4e24\u4e2a\u4fe1\u606f\u7684\u3001\u63cf\u8ff0\u8fd9\u4e2a\u5b66\u751f\u7684\u5bf9\u8c61\u5e76\u8fd4\u56de\u3002\u8fd9\u7c7b\u9700\u6c42\uff0c\u5373\u6839\u636e\u4fe1\u606f\u6784\u9020\u6307\u5b9a\u5f62\u5f0f\u5bf9\u8c61\u7684\u9700\u6c42\u662f\u5f88\u5e38\u89c1\u7684\uff0c\u6240\u4ee5 JavaScript \u5c31\u63d0\u4f9b\u4e86\u8bed\u6cd5\u4e0a\u7684\u652f\u6301\u4ee5\u5c06\u5176\u4e0e\u666e\u901a\u51fd\u6570\u533a\u5206\u5f00\u3002\u6bd4\u5982\u4e0a\u8ff0\u51fd\u6570\u5c31\u53ef\u4ee5\u5199\u4e3a\uff1a 1 2 3 4 5 6 function Student ( _name , _age ) { this . name = _name ; this . age = _age ; } let stu = new Student ( \"Ashitemaru\" , 22 ); \u8fd9\u91cc\u4f7f\u7528 new \u5173\u952e\u5b57\u8c03\u7528\u6784\u9020\u51fd\u6570\uff0c\u8fd9\u79cd\u8c03\u7528\u65b9\u5f0f\u5c31\u533a\u5206\u4e86\u6784\u9020\u51fd\u6570\u548c\u666e\u901a\u51fd\u6570\u3002\u5e76\u4e14\uff0c\u6784\u9020\u51fd\u6570\u5185\u90e8\u4e0d\u7528\u6211\u4eec\u518d\u81ea\u5df1\u6784\u9020\u4e00\u4e2a\u7a7a\u5bf9\u8c61\uff0c\u800c\u662f\u76f4\u63a5\u4f7f\u7528 this \u5bf9\u8c61\uff0c\u5e76\u4e14\u5728\u4f7f\u7528 new \u8c03\u7528\u7684\u65f6\u5019\uff0c\u51fd\u6570\u4f1a\u81ea\u52a8\u5c06 this \u8fd4\u56de\u3002\u5b9e\u9645\u4e0a\uff0c\u5982\u679c\u4e0d\u7528 new \u5173\u952e\u5b57\u8c03\u7528\u6784\u9020\u51fd\u6570\u4e5f\u662f\u5408\u6cd5\u7684\uff0c\u8fd9\u6837\u7684\u8bdd\u8be5\u51fd\u6570\u5c06\u4f1a\u4f5c\u4e3a\u666e\u901a\u51fd\u6570\u6267\u884c\u5e76\u8fd4\u56de undefined \u3002 \u53ef\u80fd\u7684\u8bed\u6cd5\u7f3a\u9677 \u5982\u679c\u6211\u4eec\u4e0d\u4f7f\u7528 new \u5173\u952e\u5b57\u8c03\u7528\u4e0a\u8ff0\u6784\u9020\u51fd\u6570\uff0c\u6839\u636e\u5148\u524d\u7684\u77e5\u8bc6\uff0c\u8fd9\u91cc this \u5c31\u4f1a\u6307\u5411\u5168\u5c40\u5bf9\u8c61\uff0c\u4ece\u800c\u8bed\u53e5 this.name = _name \u5c06\u4f1a\u6784\u9020\u51fa\u4e00\u4e2a\u65b0\u7684\u5168\u5c40\u5bf9\u8c61\uff1a 1 2 3 4 5 6 7 8 9 function Student ( _name , _age ) { this . name = _name ; this . age = _age ; } let stu = Student ( \"Ashitemaru\" , 22 ); stu ; // undefined name ; // Ashitemaru \u8fd9\u662f\u4e00\u79cd\u5371\u9669\u7684\u884c\u4e3a\uff0c\u56e0\u4e3a\u5176\u53ef\u4ee5\u6c61\u67d3\u5168\u5c40\u4f5c\u7528\u57df\u3002 \u76ee\u524d\u5927\u90e8\u5206\u4ee3\u7801\u68c0\u67e5\u5de5\u5177\u90fd\u4f1a\u8981\u6c42\u6784\u9020\u51fd\u6570\u540d\u79f0\u9996\u5b57\u6bcd\u5927\u5199\u4ee5\u793a\u533a\u5206\uff0c\u57fa\u4e8e\u6b64\uff0c\u4f1a\u5f3a\u5236\u68c0\u67e5\u6784\u9020\u51fd\u6570\u662f\u5426\u4f7f\u7528 new \u5173\u952e\u5b57\u8c03\u7528\u3002 \u6240\u6709\u51fd\u6570\u90fd\u53ef\u4ee5\u662f\u6784\u9020\u51fd\u6570 \u5b9e\u9645\u4e0a\u4e00\u822c\u51fd\u6570\u4e5f\u53ef\u4ee5\u7528 new \u8c03\u7528\uff0c\u5176\u4e5f\u4f1a\u89e6\u53d1\u4e00\u6b21\u5bf9\u8c61\u751f\u6210\u5e76\u8fd4\u56de\u751f\u6210\u7684\u5bf9\u8c61\u3002\u800c\u7531\u4e8e new \u5173\u952e\u5b57\u8c03\u7528\u4f1a\u8ba9\u51fd\u6570\u5f3a\u884c\u8fd4\u56de this \u5bf9\u8c61\u4ece\u800c\u8986\u76d6\u6389\u539f\u5b9a\u4e49\u7684\u8fd4\u56de\u503c\uff0c\u4f46\u662f\u7531\u4e8e\u4e00\u822c\u51fd\u6570\u5185\u90e8\u4e00\u822c\u4e0d\u4f1a\u8bbe\u5b9a this \u5bf9\u8c61\u7684\u5c5e\u6027\uff0c\u6240\u4ee5\u4f7f\u7528 new \u5173\u952e\u5b57\u8c03\u7528\u4e00\u822c\u51fd\u6570\u4e00\u822c\u4f1a\u5f97\u5230\u4e00\u4e2a\u7a7a\u5bf9\u8c61\uff1a 1 2 3 4 5 6 function sum ( x , y ) { return x + y ; } let num = sum ( 1 , 2 ); // 3 let obj = new sum ( 1 , 2 ); // {} \u73b0\u5728\u6211\u4eec\u56de\u9000\u4e00\u6b65\uff0c\u601d\u8003\u4e00\u4e0b\u9762\u5411\u5bf9\u8c61\u7684\u610f\u4e49\u3002\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u4e00\u4e2a\u91cd\u8981\u7684\u601d\u7ef4\u51fa\u53d1\u70b9\u662f\u5c06\u5177\u6709\u7c7b\u4f3c\u62bd\u8c61\u7279\u5f81\u7684\u4e8b\u7269\u5f52\u7eb3\u4e3a\u4e00\u4e2a \u7c7b \uff0c\u6839\u636e\u4e00\u4e2a\u5b9a\u4e49\u597d\u7684\u7c7b\uff0c\u53ef\u4ee5\u521b\u5efa\u8fd9\u4e2a\u7c7b\u7684\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u4f1a\u6ee1\u8db3\u7c7b\u5b9a\u4e49\u7684\u6240\u6709\u8981\u6c42\u3002\u6700\u521d\u7684 JavaScript \u8bed\u8a00\u5e76\u6ca1\u6709\u7c7b\u7684\u6982\u5ff5\uff0c\u5176\u8df5\u884c\u9762\u5411\u5bf9\u8c61\u601d\u7ef4\u7684\u65b9\u5f0f\u662f\u91c7\u7528 \u539f\u578b \u3002 \u539f\u578b\u7684\u542b\u4e49\u5c31\u662f\u4f5c\u4e3a\u539f\u578b\u7684\u8fd9\u4e2a\u5bf9\u8c61\u6240\u884d\u751f\u51fa\u6765\u7684\u5404\u4e2a\u5bf9\u8c61\u90fd\u4e0e\u4e4b\u6709\u8054\u7cfb\uff0c\u6ee1\u8db3\u539f\u578b\u8981\u6c42\u7684\u7ea6\u675f\u3002\u6211\u4eec\u53c8\u8bf4\u8fc7\u6240\u6709\u7684\u5bf9\u8c61\u90fd\u662f\u901a\u8fc7\u51fd\u6570\u751f\u6210\uff0c\u4e0d\u59a8\u8ba9\u6240\u6709\u51fd\u6570\u90fd\u5177\u6709\u4e00\u4e2a prototype \u5c5e\u6027\u6307\u5411\u4e00\u4e2a\u539f\u578b\u5bf9\u8c61 obj \uff0c\u7528\u8fd9\u4e2a\u51fd\u6570\u6784\u9020\u51fa\u6765\u7684\u6240\u6709\u5bf9\u8c61\u90fd\u4ee5 obj \u4e3a\u539f\u578b\uff0c\u6ee1\u8db3\u5176\u7ea6\u675f\u3002 \u6bd4\u5982\u8bf4\u201c\u5b66\u751f\u90fd\u5e94\u5f53\u5b66\u4e60\u201d\uff0c\u6211\u4eec\u5e0c\u671b\u6240\u6709\u901a\u8fc7 Student \u51fd\u6570\u6784\u9020\u51fa\u6765\u7684\u5bf9\u8c61\u90fd\u6709 study() \u65b9\u6cd5\u3002\u9664\u53bb\u5728\u6784\u9020\u51fd\u6570\u4e2d\u8fd9\u6837\u5b9a\u4e49\uff1a 1 2 3 4 5 6 7 8 function Student ( _name , _age ) { this . name = _name ; this . age = _age ; this . study = () => { console . log ( \"studying...\" ); }; } \u6211\u4eec\u8fd8\u53ef\u4ee5\u5728 Student \u7684 prototype \u5c5e\u6027\u4e0b\u5b9a\u4e49\uff1a 1 2 3 Student . prototype . study = () => { console . log ( \"studying...\" ); }; \u8fd9\u6837\uff0c\u901a\u8fc7 Student \u51fd\u6570\u6784\u9020\u51fa\u6765\u7684\u5bf9\u8c61\u5c31\u90fd\u6709\u4e86 study() \u65b9\u6cd5\uff1a 1 2 3 4 5 6 7 8 9 10 function Student ( _name , _age ) { this . name = _name ; this . age = _age ; } Student . prototype . study = () => { console . log ( \"studying...\" ); }; let stu = new Student ( \"Ashitemaru\" , 22 ); stu . study (); // studying... \u6211\u4eec\u53ef\u4ee5\u8fd0\u884c\u4e0b\u8ff0\u4ee3\u7801\u786e\u5b9a stu \u662f\u4ee5 Student.prototype \u4e3a\u539f\u578b\u6784\u9020\u51fa\u6765\u7684\u5bf9\u8c61\uff1a 1 stu . __proto__ === Student . prototype ; // true __proto__ \u5c5e\u6027\u662f\u6240\u6709\u5bf9\u8c61\u90fd\u5177\u6709\u7684\uff0c\u5176\u6307\u5411\u8fd9\u4e2a\u5bf9\u8c61\u7684\u539f\u578b\uff0c\u4e5f\u5c31\u662f\u8fd9\u4e2a\u5bf9\u8c61\u6784\u9020\u51fd\u6570 prototype \u6240\u6307\u5411\u7684\u5bf9\u8c61\u3002 \u5e9f\u5f03\u8b66\u544a __proto__ \u662f\u5373\u5c06\u5e9f\u5f03\u7684\u5c5e\u6027\uff0c\u5e76\u4e14\u548c Python \u7c7b\u4f3c\uff0c\u5176\u540d\u79f0\u4f7f\u7528\u53cc\u4e0b\u5212\u7ebf\u5305\u56f4\u5b9e\u9645\u4e0a\u5c31\u4ee3\u8868\u4e86\u5176\u7406\u5e94\u79c1\u6709\uff0c\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee\u3002 \u53e6\u5916\uff0c\u8fd9\u91cc\u4ecb\u7ecd constructor \u5c5e\u6027\u3002\u6240\u6709\u5bf9\u8c61\u90fd\u5177\u6709\u8fd9\u4e2a\u5c5e\u6027\uff0c\u5176\u6307\u5411\u8fd9\u4e2a\u5bf9\u8c61\u7684\u6784\u9020\u51fd\u6570\uff1a 1 stu . constructor === Student ; // true \u5e76\u4e14\u7531\u4e8e\u539f\u578b\u4e5f\u53ef\u4ee5\u8ba4\u4e3a\u662f\u901a\u8fc7\u6784\u9020\u51fd\u6570\u6784\u9020\uff0c\u6240\u4ee5\uff1a 1 Student . prototype . constructor === Student ; // true \u8fd9\u6837\u7684\u4e09\u89d2\u5173\u7cfb\u53ef\u4ee5\u603b\u7ed3\u4e3a\uff1a \u73b0\u5728\u6211\u4eec\u5c31\u53ef\u4ee5\u4ecb\u7ecd ES6 \u7684\u7c7b\u8bed\u6cd5\u7cd6\u5230\u5e95\u662f\u600e\u4e48\u4e00\u56de\u4e8b\u4e86\uff1a 1 2 3 4 5 6 7 8 9 10 class Student { constructor ( _name , _age ) { this . name = _name ; this . age = _age ; } study () { console . log ( \"studying...\" ); } } \u5176\u5b9e\u9645\u4e0a\u662f\u4e0b\u8ff0\u4ee3\u7801\uff08\u4e00\u79cd\u53ef\u80fd\uff09\uff1a 1 2 3 4 5 6 7 8 9 10 11 var Student = /** @class */ ( function () { function Student ( _name , _age ) { this . name = _name ; this . age = _age ; } Student . prototype . study = function () { console . log ( \"studying...\" ); } return Student ; }()); \u53ef\u4ee5\u770b\u89c1\uff0cES6 \u7684\u7c7b\u4e2d\u5b9a\u4e49\u7684\u7c7b\u65b9\u6cd5\u5c31\u4f1a\u88ab\u6302\u8f7d\u5230\u6784\u9020\u51fd\u6570\u7684 prototype \u5c5e\u6027\u4e0b\u3002\u8fd9\u91cc\u5c24\u5176\u6ce8\u610f\u95ed\u5305\u7684\u4f7f\u7528\uff0c\u8fd9\u6837\u624d\u80fd\u4fdd\u8bc1\u4f5c\u7528\u57df\u6b63\u786e\u3002 \u51fd\u6570\u7684\u539f\u578b \u00b6 \u4e0a\u9762\u6211\u4eec\u90fd\u662f\u4f7f\u7528\u7684\u81ea\u5b9a\u4e49\u6784\u9020\u51fd\u6570\u8bb2\u89e3\u7684\u539f\u578b\uff0c\u90a3\u4e48\u51fd\u6570\u4e5f\u662f\u5bf9\u8c61\uff0c\u4ed6\u4eec\u90fd\u5e94\u8be5\u6709\u539f\u578b\u3002 JavaScript \u7684\u51fd\u6570\u7684\u5305\u88c5\u7c7b\u4e3a Function \uff0c Function \u662f\u51fd\u6570\u7684\u6784\u9020\u51fd\u6570\uff0c\u6240\u4ee5\u5b9e\u9645\u4e0a\u58f0\u660e\u51fd\u6570\u8fd8\u6709\u4e00\u79cd\u5199\u6cd5\uff1a 1 2 const sum = new Function ( \"x\" , \"y\" , \"return x + y\" ); sum ( 1 , 2 ); // 3 \u4f46\u663e\u7136\u4e0d\u63a8\u8350\u8fd9\u6837\u5199\u3002 \u6309\u7167\u4e00\u4e2a\u5bf9\u8c61\u7684 __proto__ \u6307\u5411\u5176\u6784\u9020\u51fd\u6570 prototype \u7684\u539f\u5219\uff0c\u663e\u7136\u6709\uff1a 1 2 3 function foo () { } foo . __proto__ === Function . prototype ; // true \u800c\u663e\u7136\uff0c\u6240\u6709\u6784\u9020\u51fd\u6570\u4e5f\u662f\u51fd\u6570\uff1a 1 2 Object . __proto__ === Function . prototype ; // true Function . __proto__ === Function . prototype ; // true \u8fd9\u91cc\u5c31\u4f1a\u51fa\u73b0\u8fd9\u6837\u7684\u73af\u72b6\u5f15\u7528\uff0c\u5373 Function.__proto__ === Function.prototype \u3002 \u53e6\u5916\uff0c Function \u662f\u6240\u6709\u51fd\u6570\u7684\u6784\u9020\u51fd\u6570\uff0c\u6240\u4ee5\u663e\u7136\u6709\uff1a 1 2 3 4 function foo () { } foo . constructor === Function ; // true Function . constructor === Function ; // true \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u5173\u7cfb\u8bb0\u5f55\u4e0b\u6765\uff0c\u8fd9\u91cc\u6211\u4eec\u5c06 __proto__ \u7684\u6307\u5411\u4f7f\u7528\u7ea2\u8272\u7bad\u5934\uff0c\u8fd9\u4e48\u505a\u7684\u539f\u56e0\u540e\u7eed\u8bb2\u89e3\u3002\u540c\u65f6\uff0c\u6211\u4eec\u5c06\u4e00\u822c\u5bf9\u8c61\u3001\u539f\u578b\u3001\u6784\u9020\u51fd\u6570\u7684\u5916\u6846\u989c\u8272\u4f5c\u51fa\u533a\u5206\uff0c\u540e\u7eed\u6211\u4eec\u4e5f\u5c06\u6cbf\u7528\u8fd9\u4e00\u914d\u8272\uff1a \u539f\u578b\u7684\u539f\u578b \u00b6 \u4e0a\u9762\u8ba8\u8bba\u51fd\u6570\u7684\u539f\u578b\uff0c\u4f46\u662f\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\u6ca1\u6709\u89e3\u51b3\uff0c\u90a3\u5c31\u662f\u539f\u578b\u4e5f\u662f\u5bf9\u8c61\uff0c\u90a3\u4e48\u539f\u578b\u7684\u539f\u578b\u662f\u4ec0\u4e48\uff1f JavaScript \u8ba4\u4e3a\u6240\u6709\u7684\u539f\u578b\u5747\u662f\u7531 Object \u76f4\u63a5\u4ea7\u751f\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u548c new Object() \u521b\u5efa\u51fa\u6765\u7684\u65e0\u5f02\uff0c\u53ea\u4e0d\u8fc7\u540e\u7eed\u589e\u6dfb\u82e5\u5e72\u5c5e\u6027\u3002\u5728\u8fd9\u6837\u7684\u8bbe\u8ba1\u601d\u60f3\u4e0b\uff0c\u6240\u6709\u539f\u578b\u7684 __proto__ \u5747\u6307\u5411 Object.prototype \u3002\u4f46\u6709\u4e2a\u4f8b\u5916\uff0c Object.prototype \u4e5f\u662f\u539f\u578b\uff0c\u4f46\u662f\u5176 __proto__ \u6307\u5411 null \u3002\u4e5f\u5c31\u662f\u8bf4\uff1a \u8fd9\u79cd\u5173\u7cfb\u770b\u8d77\u6765\u590d\u6742\uff0c\u4f46\u5b9e\u9645\u4e0a\u6838\u5fc3\u5c31\u662f\u627e\u4e09\u5143\u7ec4\uff0c\u5373\u5bf9\u8c61\u3001\u6784\u9020\u51fd\u6570\u548c\u539f\u578b\u7684\u5173\u7cfb\u3002\u590d\u6742\u7684\u539f\u56e0\u53ea\u4e0d\u8fc7\u662f\u51fd\u6570\u4e5f\u662f\u5bf9\u8c61\uff0c\u539f\u578b\u4e5f\u662f\u5bf9\u8c61\u800c\u5df2\u3002 \u7ee7\u627f \u00b6 \u539f\u578b\u94fe\u7ee7\u627f \u00b6 \u6211\u4eec\u6240\u8bf4\u7684 \u539f\u578b\u94fe \uff0c\u5c31\u662f\u7531 __proto__ \u5173\u7cfb\u4e32\u8054\u8d77\u7684\u4e00\u6761\u94fe\uff0c\u6bd4\u5982\u8bf4 stu --> Student.prototype --> Object.prototype --> null \u5c31\u662f\u4e00\u6761\u5b8c\u6574\u7684\u539f\u578b\u94fe\u3002 \u5f53\u6211\u4eec\u8bbf\u95ee\u67d0\u4e00\u4e2a\u5bf9\u8c61\u7684\u5c5e\u6027\u7684\u65f6\u5019\uff0cJavaScript \u5f15\u64ce\u641c\u7d22\u8be5\u5c5e\u6027\u7684\u987a\u5e8f\u662f\uff0c\u9996\u5148\u5bfb\u627e\u8be5\u5bf9\u8c61\u672c\u8eab\u662f\u5426\u5177\u6709\u8be5\u5c5e\u6027\uff0c\u82e5\u6ca1\u6709\u5219\u6cbf\u7740\u539f\u578b\u94fe\u4e0a\u5347\u4e00\u7ea7\uff0c\u5728\u4e0a\u5347\u540e\u7684\u5bf9\u8c61\u91cc\u7ee7\u7eed\u5bfb\u627e\uff0c\u82e5\u6ca1\u6709\u627e\u5230\u5219\u7ee7\u7eed\u4e0a\u5347\uff0c\u76f4\u5230\u4e0a\u5347\u5230 null \u3002 \u6211\u4eec\u77e5\u9053 Object.prototype \u4e4b\u4e2d\u5177\u6709\u65b9\u6cd5 toString() \uff0c\u6240\u4ee5\u53ea\u8981\u67d0\u4e2a\u5bf9\u8c61\u7684\u539f\u578b\u94fe\u4e0a\u6709 Object.prototype \uff0c\u5219\u53ef\u4ee5\u5728\u8fd9\u4e2a\u5bf9\u8c61\u4e0a\u8c03\u7528 toString() \uff1a 1 2 3 4 5 6 7 8 9 10 function Student ( _name , _age ) { this . name = _name ; this . age = _age ; } Student . prototype . study = () => { console . log ( \"studying...\" ); }; let stu = new Student ( \"Ashitemaru\" , 22 ); stu . toString (); // '[object Object]' \u73b0\u5728\u6211\u4eec\u8003\u8651\u600e\u4e48\u5728\u539f\u578b\u94fe\u8bed\u6cd5\u4e4b\u4e0b\u5b9e\u73b0\u7ee7\u627f\u3002\u7ee7\u627f\u7684\u76ee\u6807\u662f\u7ed9\u5b9a\u4e00\u4e2a\u57fa\u7c7b\u4ee5\u89c4\u5b9a\u6240\u6709\u6d3e\u751f\u7c7b\u9700\u8981\u6ee1\u8db3\u7684\u6240\u6709\u6761\u4ef6\uff0c\u6d3e\u751f\u7c7b\u53ef\u4ee5\u590d\u7528\u57fa\u7c7b\u5b9a\u4e49\u7684\u7c7b\u65b9\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u8986\u5199\u57fa\u7c7b\u65b9\u6cd5\u5b9e\u73b0\u591a\u6001\u3002\u8fd9\u91cc\u4f7f\u7528\u7684\u4f8b\u5b50\u4e2d Student \u548c Person \u7c7b\u5206\u522b\u5b9a\u4e49\u4e3a\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 let Person = /** @class */ ( function () { function Person ( _name , _age ) { this . name = _name ; this . age = _age ; } Person . prototype . walk = function () { console . log ( \"walking...\" ); } return Person ; }()); let Student = /** @class */ ( function () { function Student ( _school ) { this . school = _school ; } Student . prototype . study = function () { console . log ( \"studying...\" ); } return Student ; }()); \u6211\u4eec\u8981\u6c42 Student \u4f5c\u4e3a\u57fa\u7c7b Person \u7684\u6d3e\u751f\u7c7b\u3002\u5e76\u4e14\u6839\u636e\u4ee5\u4e0a\u7684\u53d9\u8ff0\uff0cJavaScript \u7684\u7c7b\u548c\u6784\u9020\u51fd\u6570\u662f\u8fd1\u4e4e\u7b49\u4ef7\u7684\u6982\u5ff5\u3002 \u5982\u679c\u6211\u4eec\u8981\u6c42 Student \u7c7b\u5bf9\u8c61\u80fd\u591f\u4f7f\u7528 Person \u4e4b\u4e2d\u5b9a\u4e49\u7684\u65b9\u6cd5\uff0c\u8003\u8651\u5230 Person \u4e4b\u4e2d\u5b9a\u4e49\u7684\u65b9\u6cd5\u663e\u7136\u4e0d\u4f1a\u5728 Student \u7c7b\u5bf9\u8c61\u4e4b\u4e2d\uff0c\u6240\u4ee5 Person \u7c7b\u5bf9\u8c61\u5fc5\u7136\u8981\u4f4d\u4e8e Student \u7c7b\u5bf9\u8c61\u7684\u539f\u578b\u94fe\u4e0a \u3002\u6bd4\u5982\u8bf4 per \u662f Person \u7c7b\u7684\u5bf9\u8c61\uff0c\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u8fd9\u6837\u6784\u5efa\u539f\u578b\u94fe\uff1a 1 2 3 4 5 // before stu --> Student.prototype --> Object.prototype --> null // after stu --> Student.prototype(per) --> Person.prototype --> Object.prototype --> null \u90a3\u8fd9\u6837\u6211\u4eec\u505a\u8fd9\u6837\u7684\u5c1d\u8bd5\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 let Person = /** @class */ ( function () { function Person ( _name , _age ) { this . name = _name ; this . age = _age ; this . val = [ 1 ]; // Only for display } Person . prototype . walk = function () { console . log ( \"walking...\" ); } return Person ; }()); let Student = /** @class */ ( function () { function Student ( _school ) { this . school = _school ; } let per = new Person ( \"Ashitemaru\" , 22 ); Student . prototype = per ; // Reset prototype Student . prototype . study = function () { console . log ( \"studying...\" ); } return Student ; }()); let stu = new Student ( \"Tsinghua\" ); stu . walk (); // walking... stu . study (); // studying... console . log ( stu . name , stu . school , stu . age ); // Ashitemaru Tsinghua 22 \u8fd9\u4e2a\u65b9\u6cd5\u5f88\u76f4\u89c2\u4e14\u53ef\u7406\u89e3\uff0c\u57fa\u7c7b\u7684\u65b9\u6cd5\u4e5f\u5f97\u5230\u4e86\u590d\u7528\u3002\u4f46\u662f\u95ee\u9898\u4e5f\u5f88\u5927\uff0c\u4e3b\u8981\u6709\u4e8c\u3002 \u9996\u5148\u6211\u4eec\u6ce8\u610f\u5230\u6211\u4eec\u5728\u521b\u5efa\u57fa\u7c7b\u5bf9\u8c61\u8d4b\u4e88\u7ed9\u6d3e\u751f\u7c7b\u7684 prototype \u7684\u65f6\u5019\u662f\u65e0\u6cd5\u81ea\u5b9a\u4e49\u4f20\u7ed9\u57fa\u7c7b\u6784\u9020\u51fd\u6570\u7684\u53c2\u6570\u7684\uff0c\u4e0a\u8ff0\u4f8b\u5b50\u4e4b\u4e2d\u53ea\u80fd\u5199\u6b7b\u3002 \u53e6\u5916\uff0c\u89c2\u5bdf\uff1a 1 2 3 4 5 let stu1 = new Student ( \"Tsinghua\" ); let stu2 = new Student ( \"Peking\" ); stu1 . val . push ( 2 ); console . log ( stu2 . val ); // [1, 2] \u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u57fa\u7c7b\u6210\u5458\u6709\u6570\u7ec4\u7b49\u975e\u57fa\u672c\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u5219\u5f88\u6709\u53ef\u80fd\u5bfc\u81f4\u610f\u5916\u7684\u4fee\u6539\u3002\u6240\u6709\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\u5171\u4eab\u4e86\u8be5\u57fa\u7c7b\u6210\u5458\u7684\u5f15\u7528\uff0c\u6240\u4ee5\u53ea\u8981\u4efb\u610f\u4e00\u4e2a\u6d3e\u751f\u7c7b\u5bf9\u8c61\u4fee\u6539\u4e86\u8be5\u57fa\u7c7b\u6210\u5458\uff0c\u5c31\u4f1a\u5bfc\u81f4\u5728\u5176\u4ed6\u6d3e\u751f\u7c7b\u6210\u5458\u5bf9\u8c61\u89c6\u89d2\u4e0b\u7684\u610f\u5916\u4fee\u6539\u3002 \u501f\u7528\u6784\u9020\u7ee7\u627f \u00b6 \u6211\u4eec\u521a\u521a\u4ece\u539f\u578b\u94fe\u7684\u89d2\u5ea6\u601d\u8003\u4e86\u5982\u4f55\u5c06\u57fa\u7c7b\u7684\u65b9\u6cd5\u548c\u6210\u5458\u8ba9\u6d3e\u751f\u7c7b\u6210\u5458\u8bbf\u95ee\u5230\uff0c\u6700\u540e\u6211\u4eec\u9009\u62e9\u7684\u65b9\u5f0f\u662f\u4fee\u6539\u539f\u578b\u94fe\u3002\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5c06\u8fd9\u4e9b\u65b9\u6cd5\u548c\u6210\u5458\u76f4\u63a5\u6302\u8f7d\u5230\u6d3e\u751f\u7c7b\u6210\u5458\u4e0a\uff0c\u53ea\u9700\u8981\u8c03\u7528\u57fa\u7c7b\u6784\u9020\u51fd\u6570\u5e76\u4e14\u5f3a\u5236\u6307\u5b9a\u6b64\u65f6\u7684 this \u6307\u5411\u7684\u662f\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\u800c\u975e\u57fa\u7c7b\u5bf9\u8c61\u3002 \u8fd9\u4e2a\u7ee7\u627f\u65b9\u6cd5\u7684\u5b9e\u8d28\u5c31\u662f\u501f\u7528\u4e86\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e3a\u6d3e\u751f\u7c7b\u6784\u9020\u65b9\u6cd5\u548c\u6210\u5458\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 let Person = /** @class */ ( function () { function Person ( _name , _age ) { this . name = _name ; this . age = _age ; this . val = [ 1 ]; // Only for display this . walk = function () { console . log ( \"walking...\" ); } // Must define class methods inside the constructor // instead of defining them in prototype } Person . prototype . run = function () { console . log ( \"running...\" ); } return Person ; }()); let Student = /** @class */ ( function () { function Student ( _name , _age , _school ) { Person . call ( this , _name , _age ); this . school = _school ; } Student . prototype . study = function () { console . log ( \"studying...\" ); } return Student ; }()); let stu = new Student ( \"Ashitemaru\" , 22 , \"Tsinghua\" ); stu . walk (); // walking... stu . study (); // studying... console . log ( stu . name , stu . school , stu . age ); // Ashitemaru Tsinghua 22 \u8fd9\u91cc\u4e00\u5b9a\u8981\u6ce8\u610f\uff0c\u57fa\u7c7b\u7684\u7c7b\u65b9\u6cd5\u4e0d\u80fd\u6302\u8f7d\u5728 prototype \u4e4b\u4e0b\uff0c\u56e0\u4e3a\u5728\u6d3e\u751f\u7c7b\u6784\u9020\u51fd\u6570\u4e2d\u6211\u4eec\u4e0d\u4f1a\u4f7f\u7528 new \u5173\u952e\u5b57\u8c03\u7528\u57fa\u7c7b\u6784\u9020\u51fd\u6570\uff0c\u5176\u5728\u539f\u578b\u4e0b\u6302\u8f7d\u7684\u65b9\u6cd5\u5e76\u4e0d\u4f1a\u6302\u8f7d\u5230 this \u5bf9\u8c61\u4e4b\u4e0b\u3002\u8fd9\u4e5f\u662f\u8fd9\u4e2a\u65b9\u6cd5\u7684\u7f3a\u9677\uff1a 1 2 let stu = new Student ( \"Ashitemaru\" , 22 , \"Tsinghua\" ); stu . run ; // undefined \u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u89e3\u51b3\u4e86\u4e0d\u80fd\u7ed9\u57fa\u7c7b\u6784\u9020\u51fd\u6570\u4f20\u53c2\u6570\u7684\u95ee\u9898\uff0c\u5e76\u4e14\u591a\u4e2a\u6d3e\u751f\u7c7b\u5bf9\u8c61\u6b64\u65f6\u5e76\u4e0d\u4f1a\u5171\u4eab\u6570\u7ec4\u7684\u5f15\u7528\uff0c\u6240\u4ee5\u4e0d\u4f1a\u53d1\u751f\u610f\u5916\u4fee\u6539\uff1a 1 2 3 4 5 let stu1 = new Student ( \"Ashitemaru\" , 22 , \"Tsinghua\" ); let stu2 = new Student ( \"SmileLee\" , 22 , \"Peking\" ); stu1 . val . push ( 2 ); console . log ( stu2 . val ); // [1] \u4f46\u662f\u8fd9\u4e5f\u610f\u5473\u7740\u8d44\u6e90\u6d6a\u8d39\uff0c\u56e0\u4e3a\u7c7b\u65b9\u6cd5\u7684\u5f15\u7528\u662f\u53ef\u4ee5\u5171\u4eab\u800c\u4e0d\u7528\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u4fdd\u7559\u526f\u672c\u7684\uff1a 1 stu1 . walk === stu2 . walk ; // false \u7ec4\u5408\u7ee7\u627f \u00b6 \u663e\u7136\u6211\u4eec\u4ecb\u7ecd\u7684\u4e24\u4e2a\u65b9\u6cd5\u662f\u4e92\u8865\u7684\uff0c\u4e00\u8fb9\u7684\u7f3a\u9677\u53ef\u4ee5\u7531\u53e6\u4e00\u8fb9\u89e3\u51b3\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u540c\u65f6\u4f7f\u7528\u8fd9\u4e24\u79cd\u65b9\u6cd5\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 let Person = /** @class */ ( function () { function Person ( _name , _age ) { this . name = _name ; this . age = _age ; this . val = [ 1 ]; // Only for display } // Keep unshareable variables in constructor Person . prototype . walk = function () { console . log ( \"walking...\" ); } // Keep shareable variables in prototype return Person ; }()); let Student = /** @class */ ( function () { function Student ( _name , _age , _school ) { Person . call ( this , _name , _age ); this . school = _school ; } let per = new Person (); Student . prototype = per ; // Reset prototype Student . prototype . study = function () { console . log ( \"studying...\" ); } return Student ; }()); let stu = new Student ( \"Ashitemaru\" , 22 , \"Tsinghua\" ); stu . walk (); // walking... stu . study (); // studying... console . log ( stu . name , stu . school , stu . age ); // Ashitemaru Tsinghua 22 \u8fd9\u91cc\u6211\u4eec\u53ea\u9700\u8981\u5c06\u4e0d\u80fd\u5171\u4eab\u7684\u6210\u5458\u6216\u8005\u65b9\u6cd5\u5199\u5728\u57fa\u7c7b\u6784\u9020\u51fd\u6570\u4e2d\uff0c\u8fd9\u6837\u8fd9\u4e9b\u65b9\u6cd5\u5c31\u4f1a\u56e0\u4e3a\u6784\u9020\u51fd\u6570\u501f\u7528\u88ab\u6302\u8f7d\u5230\u6d3e\u751f\u7c7b\u5bf9\u8c61\u672c\u8eab\u4e0a\uff0c\u4ece\u800c\u4e0d\u4f1a\u5171\u4eab\u3002\u800c\u9700\u8981\u5171\u4eab\u7684\u7c7b\u65b9\u6cd5\u5219\u53ef\u4ee5\u6302\u8f7d\u5728\u539f\u578b\u4e0a\uff0c\u76f4\u63a5\u901a\u8fc7\u539f\u578b\u94fe\u5b9e\u73b0\u5171\u4eab\u3002 \u53ef\u4ee5\u53d1\u73b0\u95ee\u9898\u786e\u5b9e\u89e3\u51b3\u4e86\uff1a 1 2 3 4 5 6 7 8 let stu1 = new Student ( \"Ashitemaru\" , 22 , \"Tsinghua\" ); let stu2 = new Student ( \"SmileLee\" , 22 , \"Peking\" ); stu1 . val . push ( 2 ); console . log ( stu2 . val ); // [1] stu1 . walk === stu2 . walk ; // true stu1 . walk === undefined ; // false \u5bc4\u751f\u7ec4\u5408\u7ee7\u627f \u00b6 \u4e0a\u8ff0\u7ee7\u627f\u7684\u5b9e\u73b0\u5b9e\u9645\u4e0a\u8fd8\u6709\u4e00\u70b9\u70b9\u6548\u7387\u95ee\u9898\uff0c\u5373\u57fa\u7c7b\u6784\u9020\u51fd\u6570\u8c03\u7528\u4e86\u4e24\u6b21\u3002\u7b2c\u4e00\u6b21\u662f Person.call() \uff0c\u7b2c\u4e8c\u6b21\u662f new Person() \u3002\u53ef\u4ee5\u6ce8\u610f\u5230\u8fd9\u4e24\u6b21\u8c03\u7528\u5206\u522b\u505a\u4e86\u4e0d\u540c\u7684\u4e8b\u60c5\uff0c\u5206\u522b\u662f\u5c06\u975e\u5171\u4eab\u5c5e\u6027\u6302\u8f7d\u5230\u6d3e\u751f\u7c7b\u5bf9\u8c61\u4e0a\u548c\u4fee\u6539\u6d3e\u751f\u7c7b\u539f\u578b\u94fe\u4ee5\u5171\u4eab\u53ef\u5171\u4eab\u5c5e\u6027\u3002\u5982\u679c\u57fa\u7c7b\u5341\u5206\u5e9e\u5927\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u8f83\u5927\u7684\u6548\u7387\u95ee\u9898\u3002 \u4f46\u5b9e\u9645\u4e0a\u7b2c\u4e8c\u6b21\u8c03\u7528\u53ef\u4ee5\u7701\u7565\u3002\u73b0\u5728\u601d\u8003\u5982\u4f55\u7701\u7565\uff0c\u7531\u4e8e\u8fd9\u6b21\u8c03\u7528\u7684\u76ee\u7684\u662f\u4fee\u6539\u539f\u578b\u94fe\uff0c\u6240\u4ee5\u4e0d\u59a8\u89c2\u5bdf\u4e00\u4e0b\u6211\u4eec\u4fee\u6539\u539f\u578b\u94fe\u7684\u601d\u8def\uff1a 1 2 3 4 5 // before stu --> Student.prototype --> Object.prototype --> null // after stu --> Student.prototype(per) --> Person.prototype --> Object.prototype --> null \u4e8b\u5b9e\u4e0a\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u4e0d\u7528\u6784\u9020\u4e00\u4e2a\u5b8c\u6574\u7684 Person \u5bf9\u8c61 per \uff0c\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u7528\u4e00\u4e2a\u7a7a\u5bf9\u8c61 o \u6765\u5b8c\u6210\u8fd9\u4e2a\u4efb\u52a1\u3002\u5373\uff0c\u6211\u4eec\u5c06 Student.prototype \u6307\u5411\u4e00\u4e2a\u7a7a\u5bf9\u8c61 o \uff0c\u518d\u60f3\u529e\u6cd5\u8ba9 o \u7684 __proto__ \u6307\u5411 Person.prototype \u5373\u53ef\u3002 \u8fd9\u6837\uff0c\u6211\u4eec\u7528\u591a\u8bbe\u5b9a\u4e00\u6b21\u539f\u578b\u94fe\u6307\u5411\uff08\u7531\u4e8e per \u7684 __proto__ \u9ed8\u8ba4\u6307\u5411 Person.prototype \u800c\u7a7a\u5bf9\u8c61\u5219\u4e0d\u662f\uff09\u66ff\u6362\u6389\u4e86\u591a\u8c03\u7528\u4e00\u6b21\u57fa\u7c7b\u6784\u9020\u51fd\u6570\uff0c\u8fd9\u6837\u662f\u5b8c\u5168\u503c\u5f97\u7684\u3002 \u4ee3\u7801\u53ef\u4ee5\u662f\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 let Person = /** @class */ ( function () { function Person ( _name , _age ) { this . name = _name ; this . age = _age ; this . val = [ 1 ]; // Only for display } Person . prototype . walk = function () { console . log ( \"walking...\" ); } return Person ; }()); let Student = /** @class */ ( function () { function Student ( _name , _age , _school ) { Person . call ( this , _name , _age ); this . school = _school ; } function F () { } F . prototype = Person . prototype ; Student . prototype = new F (); Student . prototype . constructor = Student ; Student . prototype . study = function () { console . log ( \"studying...\" ); } return Student ; }()); \u8fd9\u91cc\u7684\u6838\u5fc3\u5c31\u662f\u4ee3\u7801\u7684\u9ad8\u4eae\u90e8\u5206\uff0c\u5176\u4e2d\u6700\u6838\u5fc3\u7684\u5c31\u662f\u6ce8\u610f\u8981\u4fee\u590d\u539f\u578b\u7684\u6784\u9020\u51fd\u6570\uff0c\u56e0\u4e3a\u4fee\u590d\u524d\u539f\u578b\u7684\u6784\u9020\u51fd\u6570\u5c06\u4f1a\u662f F \u3002 \u7531\u4e8e\u8fd9\u79cd\u7ee7\u627f\u7684\u5b9e\u73b0\u65b9\u5f0f\u5df2\u7ecf\u8f83\u4e3a\u9ad8\u6548\u4e14\u5bb9\u6613\u7406\u89e3\uff0c\u6240\u4ee5\u76ee\u524d ES6 \u7684 extends \u4e5f\u662f\u57fa\u4e8e\u6b64\u800c\u6765\u3002","title":"JavaScript \u7684\u9762\u5411\u5bf9\u8c61\u8fdb\u9636"},{"location":"languages/javascript/oop-advance/#javascript","text":"\u4e00\u4e9b\u53ef\u80fd\u4e0d\u5fc5\u8981\u7684\u77e5\u8bc6 \u672c\u7ae0\u8282\u5c06\u4e3b\u8981\u8bb2\u89e3 JavaScript \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u539f\u578b\u94fe\u903b\u8f91\uff0c\u4f46\u8fd9\u4e9b\u77e5\u8bc6\u5bf9\u4e8e JavaScript \u7684\u521d\u5b66\u8005\u5e76\u4e0d\u4e00\u5b9a\u5fc5\u8981\u3002\u6240\u4ee5\u7f16\u8005\u5efa\u8bae\u5982\u679c\u53ea\u662f\u60f3\u5b66\u4e60 JavaScript \u57fa\u7840\u8bed\u6cd5\u540e\u76f4\u63a5\u8f6c TypeScript \u4ee5\u53ca\u4e0a\u624b\u524d\u7aef\u6846\u67b6\uff0c\u5219\u4e0d\u9700\u8981\u6d6a\u8d39\u65f6\u95f4\u5b66\u4e60\u8fd9\u4e00\u90e8\u5206\u3002\u60f3\u8981\u6df1\u5165\u4e86\u89e3\u8fd9\u4e00\u95e8\u8bed\u8a00\u7684\u8bfb\u8005\uff0c\u7f16\u8005\u5efa\u8bae\u4e00\u5b9a\u8981\u5b66\u4e60\u8fd9\u4e00\u90e8\u5206\u3002","title":"JavaScript \u7684\u9762\u5411\u5bf9\u8c61\u8fdb\u9636"},{"location":"languages/javascript/oop-advance/#javascript_1","text":"\u8fd9\u91cc\uff0c\u8ba9\u6211\u4eec\u9996\u5148\u94ed\u8bb0\u8fd9\u6837\u7684\u4e00\u53e5\u8bdd\uff1a \u51fd\u6570\u662f JavaScript \u7684\u4e00\u7b49\u516c\u6c11\uff0c\u5bf9\u8c61\u7531\u51fd\u6570\u521b\u5efa\u3002 \u6216\u8bb8\u6211\u4eec\u5e38\u89c1\u7684\u521b\u5efa\u5bf9\u8c61\u7684\u65b9\u5f0f\u662f\uff1a 1 2 3 4 5 6 let a = { foo : 1 , bar : \"foobar\" , }; let b = [ 1 , 2 , 3 ]; \u4f46\u8fd9\u53ea\u662f\u65b9\u4fbf\u7f16\u7a0b\u7684\u8bed\u6cd5\u7cd6\uff0c\u6211\u4eec\u8fd9\u91cc\u5e0c\u671b\u4f7f\u7528\u4e0b\u8ff0\u66f4\u4e3a\u672c\u8d28\u7684\u521b\u5efa\u65b9\u5f0f\uff1a 1 2 3 4 5 6 7 8 let a = new Object (); a . foo = 1 ; a . bar = \"foobar\" ; let b = new Array (); b [ 0 ] = 1 ; b [ 1 ] = 2 ; b [ 2 ] = 3 ; \u800c\u8fd9\u91cc Object \u548c Array \u662f\u4e24\u4e2a\u51fd\u6570\uff0c\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u53ef\u4ee5\u7406\u89e3\u4e3a\u6784\u9020\u51fd\u6570\uff1a 1 2 typeof Object ; // function typeof Array ; // function","title":"JavaScript \u7684\u7b2c\u4e00\u539f\u5219"},{"location":"languages/javascript/oop-advance/#_1","text":"\u6211\u4eec\u8bf4\u8fc7\u5bf9\u8c61\u90fd\u662f\u51fd\u6570\u6784\u9020\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u4ece\u6784\u9020\u51fd\u6570\u51fa\u53d1\u8bb2\u89e3 JavaScript \u7684\u9762\u5411\u5bf9\u8c61\u3002 \u6784\u9020\u51fd\u6570\u7684\u4f5c\u7528\u662f\u6784\u5efa\u4e00\u4e2a\u65b0\u5bf9\u8c61\uff0c\u6bd4\u5982\u8bf4\u6211\u4eec\u53ef\u4ee5\u5199\u4e00\u4e2a\u6839\u636e\u4f20\u5165\u53c2\u6570\u6784\u9020\u5177\u6709\u4e00\u79cd\u7279\u5b9a\u5f62\u5f0f\u7684\u5bf9\u8c61\u7684\u51fd\u6570\uff1a 1 2 3 4 5 6 7 8 function createStudent ( _name , _age ) { let res = {}; res . name = _name ; res . age = _age ; return res ; } let stu = createStudent ( \"Ashitemaru\" , 22 ); \u8fd9\u4e2a\u51fd\u6570\u5c31\u53ef\u4ee5\u63a5\u53d7\u4e00\u4e2a\u5b66\u751f\u7684\u540d\u5b57\u548c\u5e74\u9f84\uff0c\u6784\u9020\u51fa\u4e00\u4e2a\u5305\u542b\u8fd9\u4e24\u4e2a\u4fe1\u606f\u7684\u3001\u63cf\u8ff0\u8fd9\u4e2a\u5b66\u751f\u7684\u5bf9\u8c61\u5e76\u8fd4\u56de\u3002\u8fd9\u7c7b\u9700\u6c42\uff0c\u5373\u6839\u636e\u4fe1\u606f\u6784\u9020\u6307\u5b9a\u5f62\u5f0f\u5bf9\u8c61\u7684\u9700\u6c42\u662f\u5f88\u5e38\u89c1\u7684\uff0c\u6240\u4ee5 JavaScript \u5c31\u63d0\u4f9b\u4e86\u8bed\u6cd5\u4e0a\u7684\u652f\u6301\u4ee5\u5c06\u5176\u4e0e\u666e\u901a\u51fd\u6570\u533a\u5206\u5f00\u3002\u6bd4\u5982\u4e0a\u8ff0\u51fd\u6570\u5c31\u53ef\u4ee5\u5199\u4e3a\uff1a 1 2 3 4 5 6 function Student ( _name , _age ) { this . name = _name ; this . age = _age ; } let stu = new Student ( \"Ashitemaru\" , 22 ); \u8fd9\u91cc\u4f7f\u7528 new \u5173\u952e\u5b57\u8c03\u7528\u6784\u9020\u51fd\u6570\uff0c\u8fd9\u79cd\u8c03\u7528\u65b9\u5f0f\u5c31\u533a\u5206\u4e86\u6784\u9020\u51fd\u6570\u548c\u666e\u901a\u51fd\u6570\u3002\u5e76\u4e14\uff0c\u6784\u9020\u51fd\u6570\u5185\u90e8\u4e0d\u7528\u6211\u4eec\u518d\u81ea\u5df1\u6784\u9020\u4e00\u4e2a\u7a7a\u5bf9\u8c61\uff0c\u800c\u662f\u76f4\u63a5\u4f7f\u7528 this \u5bf9\u8c61\uff0c\u5e76\u4e14\u5728\u4f7f\u7528 new \u8c03\u7528\u7684\u65f6\u5019\uff0c\u51fd\u6570\u4f1a\u81ea\u52a8\u5c06 this \u8fd4\u56de\u3002\u5b9e\u9645\u4e0a\uff0c\u5982\u679c\u4e0d\u7528 new \u5173\u952e\u5b57\u8c03\u7528\u6784\u9020\u51fd\u6570\u4e5f\u662f\u5408\u6cd5\u7684\uff0c\u8fd9\u6837\u7684\u8bdd\u8be5\u51fd\u6570\u5c06\u4f1a\u4f5c\u4e3a\u666e\u901a\u51fd\u6570\u6267\u884c\u5e76\u8fd4\u56de undefined \u3002 \u53ef\u80fd\u7684\u8bed\u6cd5\u7f3a\u9677 \u5982\u679c\u6211\u4eec\u4e0d\u4f7f\u7528 new \u5173\u952e\u5b57\u8c03\u7528\u4e0a\u8ff0\u6784\u9020\u51fd\u6570\uff0c\u6839\u636e\u5148\u524d\u7684\u77e5\u8bc6\uff0c\u8fd9\u91cc this \u5c31\u4f1a\u6307\u5411\u5168\u5c40\u5bf9\u8c61\uff0c\u4ece\u800c\u8bed\u53e5 this.name = _name \u5c06\u4f1a\u6784\u9020\u51fa\u4e00\u4e2a\u65b0\u7684\u5168\u5c40\u5bf9\u8c61\uff1a 1 2 3 4 5 6 7 8 9 function Student ( _name , _age ) { this . name = _name ; this . age = _age ; } let stu = Student ( \"Ashitemaru\" , 22 ); stu ; // undefined name ; // Ashitemaru \u8fd9\u662f\u4e00\u79cd\u5371\u9669\u7684\u884c\u4e3a\uff0c\u56e0\u4e3a\u5176\u53ef\u4ee5\u6c61\u67d3\u5168\u5c40\u4f5c\u7528\u57df\u3002 \u76ee\u524d\u5927\u90e8\u5206\u4ee3\u7801\u68c0\u67e5\u5de5\u5177\u90fd\u4f1a\u8981\u6c42\u6784\u9020\u51fd\u6570\u540d\u79f0\u9996\u5b57\u6bcd\u5927\u5199\u4ee5\u793a\u533a\u5206\uff0c\u57fa\u4e8e\u6b64\uff0c\u4f1a\u5f3a\u5236\u68c0\u67e5\u6784\u9020\u51fd\u6570\u662f\u5426\u4f7f\u7528 new \u5173\u952e\u5b57\u8c03\u7528\u3002 \u6240\u6709\u51fd\u6570\u90fd\u53ef\u4ee5\u662f\u6784\u9020\u51fd\u6570 \u5b9e\u9645\u4e0a\u4e00\u822c\u51fd\u6570\u4e5f\u53ef\u4ee5\u7528 new \u8c03\u7528\uff0c\u5176\u4e5f\u4f1a\u89e6\u53d1\u4e00\u6b21\u5bf9\u8c61\u751f\u6210\u5e76\u8fd4\u56de\u751f\u6210\u7684\u5bf9\u8c61\u3002\u800c\u7531\u4e8e new \u5173\u952e\u5b57\u8c03\u7528\u4f1a\u8ba9\u51fd\u6570\u5f3a\u884c\u8fd4\u56de this \u5bf9\u8c61\u4ece\u800c\u8986\u76d6\u6389\u539f\u5b9a\u4e49\u7684\u8fd4\u56de\u503c\uff0c\u4f46\u662f\u7531\u4e8e\u4e00\u822c\u51fd\u6570\u5185\u90e8\u4e00\u822c\u4e0d\u4f1a\u8bbe\u5b9a this \u5bf9\u8c61\u7684\u5c5e\u6027\uff0c\u6240\u4ee5\u4f7f\u7528 new \u5173\u952e\u5b57\u8c03\u7528\u4e00\u822c\u51fd\u6570\u4e00\u822c\u4f1a\u5f97\u5230\u4e00\u4e2a\u7a7a\u5bf9\u8c61\uff1a 1 2 3 4 5 6 function sum ( x , y ) { return x + y ; } let num = sum ( 1 , 2 ); // 3 let obj = new sum ( 1 , 2 ); // {} \u73b0\u5728\u6211\u4eec\u56de\u9000\u4e00\u6b65\uff0c\u601d\u8003\u4e00\u4e0b\u9762\u5411\u5bf9\u8c61\u7684\u610f\u4e49\u3002\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u4e00\u4e2a\u91cd\u8981\u7684\u601d\u7ef4\u51fa\u53d1\u70b9\u662f\u5c06\u5177\u6709\u7c7b\u4f3c\u62bd\u8c61\u7279\u5f81\u7684\u4e8b\u7269\u5f52\u7eb3\u4e3a\u4e00\u4e2a \u7c7b \uff0c\u6839\u636e\u4e00\u4e2a\u5b9a\u4e49\u597d\u7684\u7c7b\uff0c\u53ef\u4ee5\u521b\u5efa\u8fd9\u4e2a\u7c7b\u7684\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u4f1a\u6ee1\u8db3\u7c7b\u5b9a\u4e49\u7684\u6240\u6709\u8981\u6c42\u3002\u6700\u521d\u7684 JavaScript \u8bed\u8a00\u5e76\u6ca1\u6709\u7c7b\u7684\u6982\u5ff5\uff0c\u5176\u8df5\u884c\u9762\u5411\u5bf9\u8c61\u601d\u7ef4\u7684\u65b9\u5f0f\u662f\u91c7\u7528 \u539f\u578b \u3002 \u539f\u578b\u7684\u542b\u4e49\u5c31\u662f\u4f5c\u4e3a\u539f\u578b\u7684\u8fd9\u4e2a\u5bf9\u8c61\u6240\u884d\u751f\u51fa\u6765\u7684\u5404\u4e2a\u5bf9\u8c61\u90fd\u4e0e\u4e4b\u6709\u8054\u7cfb\uff0c\u6ee1\u8db3\u539f\u578b\u8981\u6c42\u7684\u7ea6\u675f\u3002\u6211\u4eec\u53c8\u8bf4\u8fc7\u6240\u6709\u7684\u5bf9\u8c61\u90fd\u662f\u901a\u8fc7\u51fd\u6570\u751f\u6210\uff0c\u4e0d\u59a8\u8ba9\u6240\u6709\u51fd\u6570\u90fd\u5177\u6709\u4e00\u4e2a prototype \u5c5e\u6027\u6307\u5411\u4e00\u4e2a\u539f\u578b\u5bf9\u8c61 obj \uff0c\u7528\u8fd9\u4e2a\u51fd\u6570\u6784\u9020\u51fa\u6765\u7684\u6240\u6709\u5bf9\u8c61\u90fd\u4ee5 obj \u4e3a\u539f\u578b\uff0c\u6ee1\u8db3\u5176\u7ea6\u675f\u3002 \u6bd4\u5982\u8bf4\u201c\u5b66\u751f\u90fd\u5e94\u5f53\u5b66\u4e60\u201d\uff0c\u6211\u4eec\u5e0c\u671b\u6240\u6709\u901a\u8fc7 Student \u51fd\u6570\u6784\u9020\u51fa\u6765\u7684\u5bf9\u8c61\u90fd\u6709 study() \u65b9\u6cd5\u3002\u9664\u53bb\u5728\u6784\u9020\u51fd\u6570\u4e2d\u8fd9\u6837\u5b9a\u4e49\uff1a 1 2 3 4 5 6 7 8 function Student ( _name , _age ) { this . name = _name ; this . age = _age ; this . study = () => { console . log ( \"studying...\" ); }; } \u6211\u4eec\u8fd8\u53ef\u4ee5\u5728 Student \u7684 prototype \u5c5e\u6027\u4e0b\u5b9a\u4e49\uff1a 1 2 3 Student . prototype . study = () => { console . log ( \"studying...\" ); }; \u8fd9\u6837\uff0c\u901a\u8fc7 Student \u51fd\u6570\u6784\u9020\u51fa\u6765\u7684\u5bf9\u8c61\u5c31\u90fd\u6709\u4e86 study() \u65b9\u6cd5\uff1a 1 2 3 4 5 6 7 8 9 10 function Student ( _name , _age ) { this . name = _name ; this . age = _age ; } Student . prototype . study = () => { console . log ( \"studying...\" ); }; let stu = new Student ( \"Ashitemaru\" , 22 ); stu . study (); // studying... \u6211\u4eec\u53ef\u4ee5\u8fd0\u884c\u4e0b\u8ff0\u4ee3\u7801\u786e\u5b9a stu \u662f\u4ee5 Student.prototype \u4e3a\u539f\u578b\u6784\u9020\u51fa\u6765\u7684\u5bf9\u8c61\uff1a 1 stu . __proto__ === Student . prototype ; // true __proto__ \u5c5e\u6027\u662f\u6240\u6709\u5bf9\u8c61\u90fd\u5177\u6709\u7684\uff0c\u5176\u6307\u5411\u8fd9\u4e2a\u5bf9\u8c61\u7684\u539f\u578b\uff0c\u4e5f\u5c31\u662f\u8fd9\u4e2a\u5bf9\u8c61\u6784\u9020\u51fd\u6570 prototype \u6240\u6307\u5411\u7684\u5bf9\u8c61\u3002 \u5e9f\u5f03\u8b66\u544a __proto__ \u662f\u5373\u5c06\u5e9f\u5f03\u7684\u5c5e\u6027\uff0c\u5e76\u4e14\u548c Python \u7c7b\u4f3c\uff0c\u5176\u540d\u79f0\u4f7f\u7528\u53cc\u4e0b\u5212\u7ebf\u5305\u56f4\u5b9e\u9645\u4e0a\u5c31\u4ee3\u8868\u4e86\u5176\u7406\u5e94\u79c1\u6709\uff0c\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee\u3002 \u53e6\u5916\uff0c\u8fd9\u91cc\u4ecb\u7ecd constructor \u5c5e\u6027\u3002\u6240\u6709\u5bf9\u8c61\u90fd\u5177\u6709\u8fd9\u4e2a\u5c5e\u6027\uff0c\u5176\u6307\u5411\u8fd9\u4e2a\u5bf9\u8c61\u7684\u6784\u9020\u51fd\u6570\uff1a 1 stu . constructor === Student ; // true \u5e76\u4e14\u7531\u4e8e\u539f\u578b\u4e5f\u53ef\u4ee5\u8ba4\u4e3a\u662f\u901a\u8fc7\u6784\u9020\u51fd\u6570\u6784\u9020\uff0c\u6240\u4ee5\uff1a 1 Student . prototype . constructor === Student ; // true \u8fd9\u6837\u7684\u4e09\u89d2\u5173\u7cfb\u53ef\u4ee5\u603b\u7ed3\u4e3a\uff1a \u73b0\u5728\u6211\u4eec\u5c31\u53ef\u4ee5\u4ecb\u7ecd ES6 \u7684\u7c7b\u8bed\u6cd5\u7cd6\u5230\u5e95\u662f\u600e\u4e48\u4e00\u56de\u4e8b\u4e86\uff1a 1 2 3 4 5 6 7 8 9 10 class Student { constructor ( _name , _age ) { this . name = _name ; this . age = _age ; } study () { console . log ( \"studying...\" ); } } \u5176\u5b9e\u9645\u4e0a\u662f\u4e0b\u8ff0\u4ee3\u7801\uff08\u4e00\u79cd\u53ef\u80fd\uff09\uff1a 1 2 3 4 5 6 7 8 9 10 11 var Student = /** @class */ ( function () { function Student ( _name , _age ) { this . name = _name ; this . age = _age ; } Student . prototype . study = function () { console . log ( \"studying...\" ); } return Student ; }()); \u53ef\u4ee5\u770b\u89c1\uff0cES6 \u7684\u7c7b\u4e2d\u5b9a\u4e49\u7684\u7c7b\u65b9\u6cd5\u5c31\u4f1a\u88ab\u6302\u8f7d\u5230\u6784\u9020\u51fd\u6570\u7684 prototype \u5c5e\u6027\u4e0b\u3002\u8fd9\u91cc\u5c24\u5176\u6ce8\u610f\u95ed\u5305\u7684\u4f7f\u7528\uff0c\u8fd9\u6837\u624d\u80fd\u4fdd\u8bc1\u4f5c\u7528\u57df\u6b63\u786e\u3002","title":"\u539f\u578b\u548c\u6784\u9020\u51fd\u6570"},{"location":"languages/javascript/oop-advance/#_2","text":"\u4e0a\u9762\u6211\u4eec\u90fd\u662f\u4f7f\u7528\u7684\u81ea\u5b9a\u4e49\u6784\u9020\u51fd\u6570\u8bb2\u89e3\u7684\u539f\u578b\uff0c\u90a3\u4e48\u51fd\u6570\u4e5f\u662f\u5bf9\u8c61\uff0c\u4ed6\u4eec\u90fd\u5e94\u8be5\u6709\u539f\u578b\u3002 JavaScript \u7684\u51fd\u6570\u7684\u5305\u88c5\u7c7b\u4e3a Function \uff0c Function \u662f\u51fd\u6570\u7684\u6784\u9020\u51fd\u6570\uff0c\u6240\u4ee5\u5b9e\u9645\u4e0a\u58f0\u660e\u51fd\u6570\u8fd8\u6709\u4e00\u79cd\u5199\u6cd5\uff1a 1 2 const sum = new Function ( \"x\" , \"y\" , \"return x + y\" ); sum ( 1 , 2 ); // 3 \u4f46\u663e\u7136\u4e0d\u63a8\u8350\u8fd9\u6837\u5199\u3002 \u6309\u7167\u4e00\u4e2a\u5bf9\u8c61\u7684 __proto__ \u6307\u5411\u5176\u6784\u9020\u51fd\u6570 prototype \u7684\u539f\u5219\uff0c\u663e\u7136\u6709\uff1a 1 2 3 function foo () { } foo . __proto__ === Function . prototype ; // true \u800c\u663e\u7136\uff0c\u6240\u6709\u6784\u9020\u51fd\u6570\u4e5f\u662f\u51fd\u6570\uff1a 1 2 Object . __proto__ === Function . prototype ; // true Function . __proto__ === Function . prototype ; // true \u8fd9\u91cc\u5c31\u4f1a\u51fa\u73b0\u8fd9\u6837\u7684\u73af\u72b6\u5f15\u7528\uff0c\u5373 Function.__proto__ === Function.prototype \u3002 \u53e6\u5916\uff0c Function \u662f\u6240\u6709\u51fd\u6570\u7684\u6784\u9020\u51fd\u6570\uff0c\u6240\u4ee5\u663e\u7136\u6709\uff1a 1 2 3 4 function foo () { } foo . constructor === Function ; // true Function . constructor === Function ; // true \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u5173\u7cfb\u8bb0\u5f55\u4e0b\u6765\uff0c\u8fd9\u91cc\u6211\u4eec\u5c06 __proto__ \u7684\u6307\u5411\u4f7f\u7528\u7ea2\u8272\u7bad\u5934\uff0c\u8fd9\u4e48\u505a\u7684\u539f\u56e0\u540e\u7eed\u8bb2\u89e3\u3002\u540c\u65f6\uff0c\u6211\u4eec\u5c06\u4e00\u822c\u5bf9\u8c61\u3001\u539f\u578b\u3001\u6784\u9020\u51fd\u6570\u7684\u5916\u6846\u989c\u8272\u4f5c\u51fa\u533a\u5206\uff0c\u540e\u7eed\u6211\u4eec\u4e5f\u5c06\u6cbf\u7528\u8fd9\u4e00\u914d\u8272\uff1a","title":"\u51fd\u6570\u7684\u539f\u578b"},{"location":"languages/javascript/oop-advance/#_3","text":"\u4e0a\u9762\u8ba8\u8bba\u51fd\u6570\u7684\u539f\u578b\uff0c\u4f46\u662f\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\u6ca1\u6709\u89e3\u51b3\uff0c\u90a3\u5c31\u662f\u539f\u578b\u4e5f\u662f\u5bf9\u8c61\uff0c\u90a3\u4e48\u539f\u578b\u7684\u539f\u578b\u662f\u4ec0\u4e48\uff1f JavaScript \u8ba4\u4e3a\u6240\u6709\u7684\u539f\u578b\u5747\u662f\u7531 Object \u76f4\u63a5\u4ea7\u751f\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u548c new Object() \u521b\u5efa\u51fa\u6765\u7684\u65e0\u5f02\uff0c\u53ea\u4e0d\u8fc7\u540e\u7eed\u589e\u6dfb\u82e5\u5e72\u5c5e\u6027\u3002\u5728\u8fd9\u6837\u7684\u8bbe\u8ba1\u601d\u60f3\u4e0b\uff0c\u6240\u6709\u539f\u578b\u7684 __proto__ \u5747\u6307\u5411 Object.prototype \u3002\u4f46\u6709\u4e2a\u4f8b\u5916\uff0c Object.prototype \u4e5f\u662f\u539f\u578b\uff0c\u4f46\u662f\u5176 __proto__ \u6307\u5411 null \u3002\u4e5f\u5c31\u662f\u8bf4\uff1a \u8fd9\u79cd\u5173\u7cfb\u770b\u8d77\u6765\u590d\u6742\uff0c\u4f46\u5b9e\u9645\u4e0a\u6838\u5fc3\u5c31\u662f\u627e\u4e09\u5143\u7ec4\uff0c\u5373\u5bf9\u8c61\u3001\u6784\u9020\u51fd\u6570\u548c\u539f\u578b\u7684\u5173\u7cfb\u3002\u590d\u6742\u7684\u539f\u56e0\u53ea\u4e0d\u8fc7\u662f\u51fd\u6570\u4e5f\u662f\u5bf9\u8c61\uff0c\u539f\u578b\u4e5f\u662f\u5bf9\u8c61\u800c\u5df2\u3002","title":"\u539f\u578b\u7684\u539f\u578b"},{"location":"languages/javascript/oop-advance/#_4","text":"","title":"\u7ee7\u627f"},{"location":"languages/javascript/oop-advance/#_5","text":"\u6211\u4eec\u6240\u8bf4\u7684 \u539f\u578b\u94fe \uff0c\u5c31\u662f\u7531 __proto__ \u5173\u7cfb\u4e32\u8054\u8d77\u7684\u4e00\u6761\u94fe\uff0c\u6bd4\u5982\u8bf4 stu --> Student.prototype --> Object.prototype --> null \u5c31\u662f\u4e00\u6761\u5b8c\u6574\u7684\u539f\u578b\u94fe\u3002 \u5f53\u6211\u4eec\u8bbf\u95ee\u67d0\u4e00\u4e2a\u5bf9\u8c61\u7684\u5c5e\u6027\u7684\u65f6\u5019\uff0cJavaScript \u5f15\u64ce\u641c\u7d22\u8be5\u5c5e\u6027\u7684\u987a\u5e8f\u662f\uff0c\u9996\u5148\u5bfb\u627e\u8be5\u5bf9\u8c61\u672c\u8eab\u662f\u5426\u5177\u6709\u8be5\u5c5e\u6027\uff0c\u82e5\u6ca1\u6709\u5219\u6cbf\u7740\u539f\u578b\u94fe\u4e0a\u5347\u4e00\u7ea7\uff0c\u5728\u4e0a\u5347\u540e\u7684\u5bf9\u8c61\u91cc\u7ee7\u7eed\u5bfb\u627e\uff0c\u82e5\u6ca1\u6709\u627e\u5230\u5219\u7ee7\u7eed\u4e0a\u5347\uff0c\u76f4\u5230\u4e0a\u5347\u5230 null \u3002 \u6211\u4eec\u77e5\u9053 Object.prototype \u4e4b\u4e2d\u5177\u6709\u65b9\u6cd5 toString() \uff0c\u6240\u4ee5\u53ea\u8981\u67d0\u4e2a\u5bf9\u8c61\u7684\u539f\u578b\u94fe\u4e0a\u6709 Object.prototype \uff0c\u5219\u53ef\u4ee5\u5728\u8fd9\u4e2a\u5bf9\u8c61\u4e0a\u8c03\u7528 toString() \uff1a 1 2 3 4 5 6 7 8 9 10 function Student ( _name , _age ) { this . name = _name ; this . age = _age ; } Student . prototype . study = () => { console . log ( \"studying...\" ); }; let stu = new Student ( \"Ashitemaru\" , 22 ); stu . toString (); // '[object Object]' \u73b0\u5728\u6211\u4eec\u8003\u8651\u600e\u4e48\u5728\u539f\u578b\u94fe\u8bed\u6cd5\u4e4b\u4e0b\u5b9e\u73b0\u7ee7\u627f\u3002\u7ee7\u627f\u7684\u76ee\u6807\u662f\u7ed9\u5b9a\u4e00\u4e2a\u57fa\u7c7b\u4ee5\u89c4\u5b9a\u6240\u6709\u6d3e\u751f\u7c7b\u9700\u8981\u6ee1\u8db3\u7684\u6240\u6709\u6761\u4ef6\uff0c\u6d3e\u751f\u7c7b\u53ef\u4ee5\u590d\u7528\u57fa\u7c7b\u5b9a\u4e49\u7684\u7c7b\u65b9\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u8986\u5199\u57fa\u7c7b\u65b9\u6cd5\u5b9e\u73b0\u591a\u6001\u3002\u8fd9\u91cc\u4f7f\u7528\u7684\u4f8b\u5b50\u4e2d Student \u548c Person \u7c7b\u5206\u522b\u5b9a\u4e49\u4e3a\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 let Person = /** @class */ ( function () { function Person ( _name , _age ) { this . name = _name ; this . age = _age ; } Person . prototype . walk = function () { console . log ( \"walking...\" ); } return Person ; }()); let Student = /** @class */ ( function () { function Student ( _school ) { this . school = _school ; } Student . prototype . study = function () { console . log ( \"studying...\" ); } return Student ; }()); \u6211\u4eec\u8981\u6c42 Student \u4f5c\u4e3a\u57fa\u7c7b Person \u7684\u6d3e\u751f\u7c7b\u3002\u5e76\u4e14\u6839\u636e\u4ee5\u4e0a\u7684\u53d9\u8ff0\uff0cJavaScript \u7684\u7c7b\u548c\u6784\u9020\u51fd\u6570\u662f\u8fd1\u4e4e\u7b49\u4ef7\u7684\u6982\u5ff5\u3002 \u5982\u679c\u6211\u4eec\u8981\u6c42 Student \u7c7b\u5bf9\u8c61\u80fd\u591f\u4f7f\u7528 Person \u4e4b\u4e2d\u5b9a\u4e49\u7684\u65b9\u6cd5\uff0c\u8003\u8651\u5230 Person \u4e4b\u4e2d\u5b9a\u4e49\u7684\u65b9\u6cd5\u663e\u7136\u4e0d\u4f1a\u5728 Student \u7c7b\u5bf9\u8c61\u4e4b\u4e2d\uff0c\u6240\u4ee5 Person \u7c7b\u5bf9\u8c61\u5fc5\u7136\u8981\u4f4d\u4e8e Student \u7c7b\u5bf9\u8c61\u7684\u539f\u578b\u94fe\u4e0a \u3002\u6bd4\u5982\u8bf4 per \u662f Person \u7c7b\u7684\u5bf9\u8c61\uff0c\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u8fd9\u6837\u6784\u5efa\u539f\u578b\u94fe\uff1a 1 2 3 4 5 // before stu --> Student.prototype --> Object.prototype --> null // after stu --> Student.prototype(per) --> Person.prototype --> Object.prototype --> null \u90a3\u8fd9\u6837\u6211\u4eec\u505a\u8fd9\u6837\u7684\u5c1d\u8bd5\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 let Person = /** @class */ ( function () { function Person ( _name , _age ) { this . name = _name ; this . age = _age ; this . val = [ 1 ]; // Only for display } Person . prototype . walk = function () { console . log ( \"walking...\" ); } return Person ; }()); let Student = /** @class */ ( function () { function Student ( _school ) { this . school = _school ; } let per = new Person ( \"Ashitemaru\" , 22 ); Student . prototype = per ; // Reset prototype Student . prototype . study = function () { console . log ( \"studying...\" ); } return Student ; }()); let stu = new Student ( \"Tsinghua\" ); stu . walk (); // walking... stu . study (); // studying... console . log ( stu . name , stu . school , stu . age ); // Ashitemaru Tsinghua 22 \u8fd9\u4e2a\u65b9\u6cd5\u5f88\u76f4\u89c2\u4e14\u53ef\u7406\u89e3\uff0c\u57fa\u7c7b\u7684\u65b9\u6cd5\u4e5f\u5f97\u5230\u4e86\u590d\u7528\u3002\u4f46\u662f\u95ee\u9898\u4e5f\u5f88\u5927\uff0c\u4e3b\u8981\u6709\u4e8c\u3002 \u9996\u5148\u6211\u4eec\u6ce8\u610f\u5230\u6211\u4eec\u5728\u521b\u5efa\u57fa\u7c7b\u5bf9\u8c61\u8d4b\u4e88\u7ed9\u6d3e\u751f\u7c7b\u7684 prototype \u7684\u65f6\u5019\u662f\u65e0\u6cd5\u81ea\u5b9a\u4e49\u4f20\u7ed9\u57fa\u7c7b\u6784\u9020\u51fd\u6570\u7684\u53c2\u6570\u7684\uff0c\u4e0a\u8ff0\u4f8b\u5b50\u4e4b\u4e2d\u53ea\u80fd\u5199\u6b7b\u3002 \u53e6\u5916\uff0c\u89c2\u5bdf\uff1a 1 2 3 4 5 let stu1 = new Student ( \"Tsinghua\" ); let stu2 = new Student ( \"Peking\" ); stu1 . val . push ( 2 ); console . log ( stu2 . val ); // [1, 2] \u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u57fa\u7c7b\u6210\u5458\u6709\u6570\u7ec4\u7b49\u975e\u57fa\u672c\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u5219\u5f88\u6709\u53ef\u80fd\u5bfc\u81f4\u610f\u5916\u7684\u4fee\u6539\u3002\u6240\u6709\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\u5171\u4eab\u4e86\u8be5\u57fa\u7c7b\u6210\u5458\u7684\u5f15\u7528\uff0c\u6240\u4ee5\u53ea\u8981\u4efb\u610f\u4e00\u4e2a\u6d3e\u751f\u7c7b\u5bf9\u8c61\u4fee\u6539\u4e86\u8be5\u57fa\u7c7b\u6210\u5458\uff0c\u5c31\u4f1a\u5bfc\u81f4\u5728\u5176\u4ed6\u6d3e\u751f\u7c7b\u6210\u5458\u5bf9\u8c61\u89c6\u89d2\u4e0b\u7684\u610f\u5916\u4fee\u6539\u3002","title":"\u539f\u578b\u94fe\u7ee7\u627f"},{"location":"languages/javascript/oop-advance/#_6","text":"\u6211\u4eec\u521a\u521a\u4ece\u539f\u578b\u94fe\u7684\u89d2\u5ea6\u601d\u8003\u4e86\u5982\u4f55\u5c06\u57fa\u7c7b\u7684\u65b9\u6cd5\u548c\u6210\u5458\u8ba9\u6d3e\u751f\u7c7b\u6210\u5458\u8bbf\u95ee\u5230\uff0c\u6700\u540e\u6211\u4eec\u9009\u62e9\u7684\u65b9\u5f0f\u662f\u4fee\u6539\u539f\u578b\u94fe\u3002\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5c06\u8fd9\u4e9b\u65b9\u6cd5\u548c\u6210\u5458\u76f4\u63a5\u6302\u8f7d\u5230\u6d3e\u751f\u7c7b\u6210\u5458\u4e0a\uff0c\u53ea\u9700\u8981\u8c03\u7528\u57fa\u7c7b\u6784\u9020\u51fd\u6570\u5e76\u4e14\u5f3a\u5236\u6307\u5b9a\u6b64\u65f6\u7684 this \u6307\u5411\u7684\u662f\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\u800c\u975e\u57fa\u7c7b\u5bf9\u8c61\u3002 \u8fd9\u4e2a\u7ee7\u627f\u65b9\u6cd5\u7684\u5b9e\u8d28\u5c31\u662f\u501f\u7528\u4e86\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e3a\u6d3e\u751f\u7c7b\u6784\u9020\u65b9\u6cd5\u548c\u6210\u5458\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 let Person = /** @class */ ( function () { function Person ( _name , _age ) { this . name = _name ; this . age = _age ; this . val = [ 1 ]; // Only for display this . walk = function () { console . log ( \"walking...\" ); } // Must define class methods inside the constructor // instead of defining them in prototype } Person . prototype . run = function () { console . log ( \"running...\" ); } return Person ; }()); let Student = /** @class */ ( function () { function Student ( _name , _age , _school ) { Person . call ( this , _name , _age ); this . school = _school ; } Student . prototype . study = function () { console . log ( \"studying...\" ); } return Student ; }()); let stu = new Student ( \"Ashitemaru\" , 22 , \"Tsinghua\" ); stu . walk (); // walking... stu . study (); // studying... console . log ( stu . name , stu . school , stu . age ); // Ashitemaru Tsinghua 22 \u8fd9\u91cc\u4e00\u5b9a\u8981\u6ce8\u610f\uff0c\u57fa\u7c7b\u7684\u7c7b\u65b9\u6cd5\u4e0d\u80fd\u6302\u8f7d\u5728 prototype \u4e4b\u4e0b\uff0c\u56e0\u4e3a\u5728\u6d3e\u751f\u7c7b\u6784\u9020\u51fd\u6570\u4e2d\u6211\u4eec\u4e0d\u4f1a\u4f7f\u7528 new \u5173\u952e\u5b57\u8c03\u7528\u57fa\u7c7b\u6784\u9020\u51fd\u6570\uff0c\u5176\u5728\u539f\u578b\u4e0b\u6302\u8f7d\u7684\u65b9\u6cd5\u5e76\u4e0d\u4f1a\u6302\u8f7d\u5230 this \u5bf9\u8c61\u4e4b\u4e0b\u3002\u8fd9\u4e5f\u662f\u8fd9\u4e2a\u65b9\u6cd5\u7684\u7f3a\u9677\uff1a 1 2 let stu = new Student ( \"Ashitemaru\" , 22 , \"Tsinghua\" ); stu . run ; // undefined \u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u89e3\u51b3\u4e86\u4e0d\u80fd\u7ed9\u57fa\u7c7b\u6784\u9020\u51fd\u6570\u4f20\u53c2\u6570\u7684\u95ee\u9898\uff0c\u5e76\u4e14\u591a\u4e2a\u6d3e\u751f\u7c7b\u5bf9\u8c61\u6b64\u65f6\u5e76\u4e0d\u4f1a\u5171\u4eab\u6570\u7ec4\u7684\u5f15\u7528\uff0c\u6240\u4ee5\u4e0d\u4f1a\u53d1\u751f\u610f\u5916\u4fee\u6539\uff1a 1 2 3 4 5 let stu1 = new Student ( \"Ashitemaru\" , 22 , \"Tsinghua\" ); let stu2 = new Student ( \"SmileLee\" , 22 , \"Peking\" ); stu1 . val . push ( 2 ); console . log ( stu2 . val ); // [1] \u4f46\u662f\u8fd9\u4e5f\u610f\u5473\u7740\u8d44\u6e90\u6d6a\u8d39\uff0c\u56e0\u4e3a\u7c7b\u65b9\u6cd5\u7684\u5f15\u7528\u662f\u53ef\u4ee5\u5171\u4eab\u800c\u4e0d\u7528\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u4fdd\u7559\u526f\u672c\u7684\uff1a 1 stu1 . walk === stu2 . walk ; // false","title":"\u501f\u7528\u6784\u9020\u7ee7\u627f"},{"location":"languages/javascript/oop-advance/#_7","text":"\u663e\u7136\u6211\u4eec\u4ecb\u7ecd\u7684\u4e24\u4e2a\u65b9\u6cd5\u662f\u4e92\u8865\u7684\uff0c\u4e00\u8fb9\u7684\u7f3a\u9677\u53ef\u4ee5\u7531\u53e6\u4e00\u8fb9\u89e3\u51b3\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u540c\u65f6\u4f7f\u7528\u8fd9\u4e24\u79cd\u65b9\u6cd5\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 let Person = /** @class */ ( function () { function Person ( _name , _age ) { this . name = _name ; this . age = _age ; this . val = [ 1 ]; // Only for display } // Keep unshareable variables in constructor Person . prototype . walk = function () { console . log ( \"walking...\" ); } // Keep shareable variables in prototype return Person ; }()); let Student = /** @class */ ( function () { function Student ( _name , _age , _school ) { Person . call ( this , _name , _age ); this . school = _school ; } let per = new Person (); Student . prototype = per ; // Reset prototype Student . prototype . study = function () { console . log ( \"studying...\" ); } return Student ; }()); let stu = new Student ( \"Ashitemaru\" , 22 , \"Tsinghua\" ); stu . walk (); // walking... stu . study (); // studying... console . log ( stu . name , stu . school , stu . age ); // Ashitemaru Tsinghua 22 \u8fd9\u91cc\u6211\u4eec\u53ea\u9700\u8981\u5c06\u4e0d\u80fd\u5171\u4eab\u7684\u6210\u5458\u6216\u8005\u65b9\u6cd5\u5199\u5728\u57fa\u7c7b\u6784\u9020\u51fd\u6570\u4e2d\uff0c\u8fd9\u6837\u8fd9\u4e9b\u65b9\u6cd5\u5c31\u4f1a\u56e0\u4e3a\u6784\u9020\u51fd\u6570\u501f\u7528\u88ab\u6302\u8f7d\u5230\u6d3e\u751f\u7c7b\u5bf9\u8c61\u672c\u8eab\u4e0a\uff0c\u4ece\u800c\u4e0d\u4f1a\u5171\u4eab\u3002\u800c\u9700\u8981\u5171\u4eab\u7684\u7c7b\u65b9\u6cd5\u5219\u53ef\u4ee5\u6302\u8f7d\u5728\u539f\u578b\u4e0a\uff0c\u76f4\u63a5\u901a\u8fc7\u539f\u578b\u94fe\u5b9e\u73b0\u5171\u4eab\u3002 \u53ef\u4ee5\u53d1\u73b0\u95ee\u9898\u786e\u5b9e\u89e3\u51b3\u4e86\uff1a 1 2 3 4 5 6 7 8 let stu1 = new Student ( \"Ashitemaru\" , 22 , \"Tsinghua\" ); let stu2 = new Student ( \"SmileLee\" , 22 , \"Peking\" ); stu1 . val . push ( 2 ); console . log ( stu2 . val ); // [1] stu1 . walk === stu2 . walk ; // true stu1 . walk === undefined ; // false","title":"\u7ec4\u5408\u7ee7\u627f"},{"location":"languages/javascript/oop-advance/#_8","text":"\u4e0a\u8ff0\u7ee7\u627f\u7684\u5b9e\u73b0\u5b9e\u9645\u4e0a\u8fd8\u6709\u4e00\u70b9\u70b9\u6548\u7387\u95ee\u9898\uff0c\u5373\u57fa\u7c7b\u6784\u9020\u51fd\u6570\u8c03\u7528\u4e86\u4e24\u6b21\u3002\u7b2c\u4e00\u6b21\u662f Person.call() \uff0c\u7b2c\u4e8c\u6b21\u662f new Person() \u3002\u53ef\u4ee5\u6ce8\u610f\u5230\u8fd9\u4e24\u6b21\u8c03\u7528\u5206\u522b\u505a\u4e86\u4e0d\u540c\u7684\u4e8b\u60c5\uff0c\u5206\u522b\u662f\u5c06\u975e\u5171\u4eab\u5c5e\u6027\u6302\u8f7d\u5230\u6d3e\u751f\u7c7b\u5bf9\u8c61\u4e0a\u548c\u4fee\u6539\u6d3e\u751f\u7c7b\u539f\u578b\u94fe\u4ee5\u5171\u4eab\u53ef\u5171\u4eab\u5c5e\u6027\u3002\u5982\u679c\u57fa\u7c7b\u5341\u5206\u5e9e\u5927\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u8f83\u5927\u7684\u6548\u7387\u95ee\u9898\u3002 \u4f46\u5b9e\u9645\u4e0a\u7b2c\u4e8c\u6b21\u8c03\u7528\u53ef\u4ee5\u7701\u7565\u3002\u73b0\u5728\u601d\u8003\u5982\u4f55\u7701\u7565\uff0c\u7531\u4e8e\u8fd9\u6b21\u8c03\u7528\u7684\u76ee\u7684\u662f\u4fee\u6539\u539f\u578b\u94fe\uff0c\u6240\u4ee5\u4e0d\u59a8\u89c2\u5bdf\u4e00\u4e0b\u6211\u4eec\u4fee\u6539\u539f\u578b\u94fe\u7684\u601d\u8def\uff1a 1 2 3 4 5 // before stu --> Student.prototype --> Object.prototype --> null // after stu --> Student.prototype(per) --> Person.prototype --> Object.prototype --> null \u4e8b\u5b9e\u4e0a\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u4e0d\u7528\u6784\u9020\u4e00\u4e2a\u5b8c\u6574\u7684 Person \u5bf9\u8c61 per \uff0c\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u7528\u4e00\u4e2a\u7a7a\u5bf9\u8c61 o \u6765\u5b8c\u6210\u8fd9\u4e2a\u4efb\u52a1\u3002\u5373\uff0c\u6211\u4eec\u5c06 Student.prototype \u6307\u5411\u4e00\u4e2a\u7a7a\u5bf9\u8c61 o \uff0c\u518d\u60f3\u529e\u6cd5\u8ba9 o \u7684 __proto__ \u6307\u5411 Person.prototype \u5373\u53ef\u3002 \u8fd9\u6837\uff0c\u6211\u4eec\u7528\u591a\u8bbe\u5b9a\u4e00\u6b21\u539f\u578b\u94fe\u6307\u5411\uff08\u7531\u4e8e per \u7684 __proto__ \u9ed8\u8ba4\u6307\u5411 Person.prototype \u800c\u7a7a\u5bf9\u8c61\u5219\u4e0d\u662f\uff09\u66ff\u6362\u6389\u4e86\u591a\u8c03\u7528\u4e00\u6b21\u57fa\u7c7b\u6784\u9020\u51fd\u6570\uff0c\u8fd9\u6837\u662f\u5b8c\u5168\u503c\u5f97\u7684\u3002 \u4ee3\u7801\u53ef\u4ee5\u662f\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 let Person = /** @class */ ( function () { function Person ( _name , _age ) { this . name = _name ; this . age = _age ; this . val = [ 1 ]; // Only for display } Person . prototype . walk = function () { console . log ( \"walking...\" ); } return Person ; }()); let Student = /** @class */ ( function () { function Student ( _name , _age , _school ) { Person . call ( this , _name , _age ); this . school = _school ; } function F () { } F . prototype = Person . prototype ; Student . prototype = new F (); Student . prototype . constructor = Student ; Student . prototype . study = function () { console . log ( \"studying...\" ); } return Student ; }()); \u8fd9\u91cc\u7684\u6838\u5fc3\u5c31\u662f\u4ee3\u7801\u7684\u9ad8\u4eae\u90e8\u5206\uff0c\u5176\u4e2d\u6700\u6838\u5fc3\u7684\u5c31\u662f\u6ce8\u610f\u8981\u4fee\u590d\u539f\u578b\u7684\u6784\u9020\u51fd\u6570\uff0c\u56e0\u4e3a\u4fee\u590d\u524d\u539f\u578b\u7684\u6784\u9020\u51fd\u6570\u5c06\u4f1a\u662f F \u3002 \u7531\u4e8e\u8fd9\u79cd\u7ee7\u627f\u7684\u5b9e\u73b0\u65b9\u5f0f\u5df2\u7ecf\u8f83\u4e3a\u9ad8\u6548\u4e14\u5bb9\u6613\u7406\u89e3\uff0c\u6240\u4ee5\u76ee\u524d ES6 \u7684 extends \u4e5f\u662f\u57fa\u4e8e\u6b64\u800c\u6765\u3002","title":"\u5bc4\u751f\u7ec4\u5408\u7ee7\u627f"},{"location":"languages/javascript/oop/","text":"JavaScript \u7684\u9762\u5411\u5bf9\u8c61 \u00b6 \u522b\u60f3\u5b66\u4f1a JavaScript \u7684 OOP\uff01 JavaScript \u7684\u9762\u5411\u5bf9\u8c61\u7684\u5b9e\u73b0\u903b\u8f91\u5e76\u975e\u662f\u7c7b\u5c01\u88c5\u903b\u8f91\uff0c\u800c\u662f\u539f\u578b\u94fe\u903b\u8f91\u3002\u6700\u521d\u7684 JavaScript \u5e76\u4e0d\u652f\u6301\u7c7b\u8bed\u6cd5\uff0c\u4f46\u7531\u4e8e\u539f\u578b\u94fe\u5b9e\u5728\u592a\u8fc7\u4e8e\u7279\u7acb\u72ec\u884c\uff0c\u76ee\u524d ES6 \u6807\u51c6\u5c06\u7c7b\u8bed\u6cd5\u4f5c\u4e3a \u8bed\u6cd5\u7cd6 \u52a0\u5165\u4e86\u8bed\u8a00\u6807\u51c6\u3002\u8fd9\u4e5f\u5c31\u662f\u8bf4\uff0cJavaScript \u7684\u9762\u5411\u5bf9\u8c61\u7684\u5e95\u5c42\u4f9d\u7136\u662f\u539f\u578b\u94fe\u800c\u975e\u7c7b\u5c01\u88c5\uff0c\u5982\u679c\u771f\u7684\u60f3\u5f04\u660e\u767d JavaScript \u7684\u539f\u578b\u94fe\u673a\u5236\uff0c\u53ef\u4ee5\u67e5\u770b\u6587\u6863\u672b\u5c3e\u7684\u539f\u578b\u94fe\u7ae0\u8282\u3002\u4f46\u5bf9\u4e8e\u521d\u5b66\u8005\uff0c\u6211\u4eec\u5efa\u8bae\u53ea\u662f\u7528\u7c7b\u8bed\u6cd5\uff0c\u9664\u975e\u9047\u5230\u4e0d\u53ef\u89e3\u51b3\u7684 bug\uff0c\u5426\u5219\u4e0d\u8981\u82b1\u65f6\u95f4\u94bb\u7814\u539f\u578b\u94fe\u3002 \u4f7f\u7528\u7c7b\u8bed\u6cd5\u7684 JavaScript \u5f88\u5927\u7a0b\u5ea6\u4e0a\u548c C++ \u8bed\u8a00\u7c7b\u4f3c\uff0c\u8fd9\u91cc\u6211\u4eec\u7f16\u5199\u4e00\u4e2a\u7b80\u6613\u7684\u590d\u6570\u7c7b\u4f5c\u4e3a\u6f14\u793a\uff0c\u5185\u90e8\u5df2\u7ecf\u5305\u542b\u4e86\u6784\u9020\u51fd\u6570\u3001\u5b9a\u4e49\u6210\u5458\u65b9\u6cd5\u548c\u9759\u6001\u65b9\u6cd5\u7b49 OOP \u57fa\u7840\u5185\u5bb9\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 class Complex { constructor ( _real , _imaginary ) { this . real = _real ; this . imaginary = _imaginary ; // Declare members & initialize } print () { console . log ( ` ${ this . real } ${ this . imaginary >= 0 ? \"+\" : \"-\" } ${ Math . abs ( this . imaginary ) } i` ); } static printInfo () { console . log ( \"This is a complex class.\" ); } } let com = new Complex ( 1 , 2 ); com . print (); // \"1 + 2 i\" Complex . printInfo (); // \"This is a complex class.\" \u6709\u4e00\u4e9b\u7ec6\u8282\u9700\u8981\u6ce8\u610f\uff1a \u7c7b\u65b9\u6cd5\u5185\u4f7f\u7528\u7c7b\u6210\u5458\u7684\u65f6\u5019\u5fc5\u987b\u4f7f\u7528 this \u8c03\u7528 JavaScript \u7684\u6240\u6709\u7c7b\u6210\u5458\u548c\u7c7b\u65b9\u6cd5\u5747\u662f\u516c\u6709\u7684\uff0cJavaScript \u4e0d\u5177\u6709\u8bbf\u95ee\u6743\u9650\u4fee\u9970\u7b26 this \u7684\u6307\u5411\u95ee\u9898 \u00b6 \u4f60\u7684 JavaScript \u6210\u4eba\u793c this \u7684\u6307\u5411\u95ee\u9898\u662f JavaScript \u8bed\u8a00\u8bbe\u8ba1\u91cc\u53ef\u4ee5\u8bf4\u662f\u5f71\u54cd\u6700\u4e3a\u6df1\u8fdc\u7684\u7684\u4e00\u4e2a\u7f3a\u9677\uff0c\u6df1\u8fdc\u5230\u5373\u4f7f\u8981\u5f04\u660e\u767d\u8fd9\u4e2a\u95ee\u9898\u9700\u8981\u82b1\u8d39\u5f88\u957f\u65f6\u95f4\uff0c\u4f46\u4f60\u4e0d\u5f97\u4e0d\u6295\u5165\u8fd9\u4e9b\u7cbe\u529b\uff0c\u5426\u5219\u4f60\u53ef\u80fd\u4f1a\u5728\u672a\u6765\u7684\u4ee3\u7801\u5b9e\u8df5\u4e2d\u9047\u5230\u5f88\u591a this \u76f8\u5173\u7684\u95ee\u9898\u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u5373\u4f7f\u540e\u6765\u4eba\u9488\u5bf9 this \u6307\u5411\u95ee\u9898\u6253\u4e86\u5f88\u591a\u7684\u8865\u4e01\uff0c\u8fd9\u4e2a\u95ee\u9898\u4f9d\u7136\u8426\u7ed5\u5728\u524d\u7aef\u5f00\u53d1\u8005\u5fc3\u4e2d\u3002\u6bd4\u5982\u8bf4 React \u51fd\u6570\u7ec4\u4ef6\u652f\u6301\u8005\u7684\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u8bba\u70b9\u5c31\u662f\u4f7f\u7528\u51fd\u6570\u7ec4\u4ef6\u4e0d\u4f1a\u9047\u5230 this \u6307\u5411\u95ee\u9898\u3002 \u4e25\u683c\u6765\u8bf4\uff0cJavaScript \u7684 this \u6307\u5411\u89c4\u5219\u53ea\u6709\u4e00\u6761\uff0c\u5373 this \u6c38\u8fdc\u6307\u5411\u6700\u8fd1\u7684\u8c03\u7528\u8005 \u3002\u89c2\u5bdf\u8fd9\u6837\u7684\u4ee3\u7801\uff08\u6d4f\u89c8\u5668\u8fd0\u884c\uff09\uff1a 1 2 3 4 5 6 7 8 function foo () { console . log ( this ); } foo (); // window let obj = { foo : foo , }; obj . foo (); // { foo: foo } \u8fd9\u91cc\u4e24\u6b21\u8c03\u7528\u7684\u90fd\u662f\u540c\u4e00\u4e2a foo \u51fd\u6570\uff0c\u4e0d\u540c\u7684\u662f\u524d\u8005\u662f\u5168\u5c40\u8c03\u7528\uff08\u5373\u76f4\u63a5\u8c03\u7528\uff09\uff0c\u800c\u540e\u8005\u662f\u628a\u51fd\u6570\u4f5c\u4e3a\u4e00\u4e2a\u5bf9\u8c61 obj \u7684\u5c5e\u6027\u540e\u901a\u8fc7 obj \u8c03\u7528\u3002\u800c this \u7684\u6307\u5411\u5c31\u662f\u5728\u51fd\u6570\u8c03\u7528\u7684\u65f6\u5019\u786e\u5b9a\u7684\u3002\u5168\u5c40\u8c03\u7528 foo \u51fd\u6570\uff0c\u90a3 this \u5c31\u6307\u5411\u5168\u5c40\u5bf9\u8c61\uff0c\u901a\u8fc7 obj \u8c03\u7528\uff0c\u90a3 this \u5c31\u6307\u5411 obj \u3002 \u5168\u5c40\u5bf9\u8c61 \u4e8b\u5b9e\u4e0a JavaScript \u7684\u5168\u5c40\u53d8\u91cf\u90fd\u662f\u5168\u5c40\u5bf9\u8c61\u7684\u5c5e\u6027\uff0c\u6bcf\u4e00\u4e2a JavaScript \u8fd0\u884c\u73af\u5883\u90fd\u6709\u4e00\u4e2a\u5168\u5c40\u5bf9\u8c61\u3002\u6bd4\u5982\u8bf4\u6d4f\u89c8\u5668\u7684\u5168\u5c40\u5bf9\u8c61\u5f80\u5f80\u662f window \u3002\u4f60\u58f0\u660e\u7684\u6bcf\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u90fd\u4f1a\u7ed1\u5b9a\u4e3a\u5168\u5c40\u5bf9\u8c61\u7684\u5c5e\u6027\uff08\u4e0b\u8ff0\u4ee3\u7801\u5728\u6d4f\u89c8\u5668\u8fd0\u884c\uff09\uff1a 1 2 var a = 1 ; window . a ; // 1 \u800c\u5728\u5168\u5c40\u73af\u5883\u4e0b\u8c03\u7528\u51fd\u6570 foo() \uff0c\u5b9e\u9645\u4e0a\u7b49\u4ef7\u4e8e\u901a\u8fc7\u5168\u5c40\u5bf9\u8c61\u5728\u8c03\u7528\uff1a 1 2 foo (); window . foo (); \u4e0a\u8ff0\u4e24\u4e2a\u8bed\u53e5\u6ca1\u6709\u5dee\u522b\u3002 \u5bf9\u4e8e\u66f4\u4e3a\u590d\u6742\u7684\u5bf9\u8c61\u5d4c\u5957\uff0c this \u7684\u6307\u5411\u4e5f\u9075\u5faa\u7740\u6307\u5411\u6700\u8fd1\u7684\u8c03\u7528\u8005\u7684\u89c4\u5219\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 let obj = { foo : 1 , inner : { foo : 2 , fn : function () { console . log ( this . foo ); }, }, }; obj . inner . fn (); // 2 obj . fn = obj . inner . fn ; obj . fn (); // 1 let fn = obj . inner . fn ; fn (); // undefined \u8fd9\u91cc\u7684 fn \u51fd\u6570\u88ab\u4e09\u4e2a\u5bf9\u8c61\u5206\u522b\u8c03\u7528\uff0c\u4ece\u4e0a\u5230\u4e0b\u4e3a obj.inner, obj, window \uff0c\u53ef\u4ee5\u770b\u51fa\u8fd9\u4e09\u6b21\u8c03\u7528\u4e2d\u7684 this \u5c31\u5206\u522b\u6307\u5411\u8fd9\u4e09\u4e2a\u5bf9\u8c61\u3002 \u4e00\u4e9b\u8865\u5145 \u867d\u8bf4 this \u7684\u6307\u5411\u89c4\u5219\u53ea\u6709\u4e00\u6761\uff0c\u4f46\u5b9e\u9645\u4e0a\u5728\u5199\u7a0b\u5e8f\u7684\u65f6\u5019\uff0c\u4e00\u4e9b\u51fd\u6570\u662f\u6bd4\u8f83\u96be\u5f04\u660e\u767d\u8c03\u7528\u8005\u7684\u3002\u6bd4\u5982\u8bf4\u4f20\u7ed9\u524d\u7aef\u7ec4\u4ef6\u7684\u4e8b\u4ef6\u76d1\u542c\u51fd\u6570\u3001\u4f20\u7ed9\u8ba1\u65f6\u5668\u7684\u56de\u8c03\u3001\u7c7b\u51fd\u6570\u3002\u8fd9\u4e9b\u51fd\u6570\u7684 this \u7684\u6307\u5411\u95ee\u9898\u5b9e\u9645\u4e0a\u5df2\u7ecf\u8131\u79bb\u4e86\u672c\u8282\u8ba8\u8bba\u7684\u8303\u7574\uff0c\u6bd4\u5982\u8bf4\u7c7b\u73af\u5883\u4e0b\u7684 this \u95ee\u9898\u5c31\u5e94\u8be5\u8ba4\u771f\u5b66\u4e60\u539f\u578b\u94fe\u903b\u8f91\u624d\u80fd\u771f\u6b63\u638c\u63e1\u3002 this \u7684\u7f3a\u9677\u5c31\u5728\u4e8e\u5176\u6307\u5411\u662f\u52a8\u6001\u7684\uff0c\u6709\u4e9b\u51fd\u6570\u53ef\u80fd\u5185\u90e8\u4f7f\u7528\u4e86 this \u4f46\u5f00\u53d1\u8005\u5e76\u4e0d\u77e5\u6653\uff0c\u4ece\u800c\u5728\u4e0d\u540c\u60c5\u51b5\u4e0b\u5e94\u7528\u8fd9\u4e2a\u51fd\u6570\u7684\u65f6\u5019\u4f1a\u4ea7\u751f\u4e0d\u53ef\u7406\u89e3\u7684\u9519\u8bef\u3002\u800c\u73b0\u5728\u7684\u4e00\u4e9b\u8865\u4e01\u5c31\u662f\u5141\u8bb8\u5f00\u53d1\u8005\u786c\u6027\u6307\u5b9a this \u7684\u6307\u5411\u6216\u8005\u6c38\u4e45\u7ed1\u5b9a this \u7684\u6307\u5411\u4ee5\u9632\u6b62\u672a\u77e5\u9519\u8bef\u3002 \u6bd4\u5982\u8bf4 call(), apply() \u65b9\u6cd5\u5c31\u5141\u8bb8\u6211\u4eec\u624b\u52a8\u6307\u5b9a this \u7684\u6307\u5411\uff0c\u5176\u63a5\u53d7\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u5c31\u4f1a\u6210\u4e3a this \u7684\u6307\u5411\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 function foo () { console . log ( this . a ); } let obj = { a : 1 , }; let another = { a : 2 , }; foo (); // undefined foo . call ( obj ); // 1 foo . apply ( obj ); // 1 foo . call ( another ); // 2 foo . apply ( another ); // 2 \u800c bind() \u65b9\u6cd5\u5219\u5141\u8bb8\u6211\u4eec\u5c06 this \u7684\u6307\u5411\u6c38\u4e45\u7ed1\u5b9a\u4e8e\u67d0\u4e00\u4e2a\u5bf9\u8c61\u4e0a\u3002\u65e0\u8bba\u540e\u7eed\u4f7f\u7528\u54ea\u4e00\u4e2a\u5bf9\u8c61\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\uff0c\u5176 this \u90fd\u4fdd\u6301\u539f\u5148 bind() \u8bbe\u5b9a\u7684\u6307\u5411\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 function foo () { console . log ( this . a ); } let obj = { a : 1 , }; foo (); // undefined foo = foo . bind ( obj ); foo (); // 1 let another = { foo : foo , a : 2 , }; another . foo (); // 1 \u5728\u8fd9\u4e9b\u8865\u4e01\u51fa\u73b0\u4e4b\u524d\uff0c\u4e3a\u4e86\u786c\u6027\u89c4\u5b9a this \u7684\u6307\u5411\uff0c\u7a0b\u5e8f\u5458\u751a\u81f3\u4f1a\u5728\u51fd\u6570\u4e2d\u4f7f\u7528 var that = this \u8bed\u53e5\u5148\u6355\u83b7 this \uff0c\u4e4b\u540e\u4f7f\u7528 that \u4ee3\u66ff this \u6765\u9632\u6b62 bug\u3002 \u800c\u73b0\u5728\u66f4\u5e38\u7528\u7684\u4e00\u79cd\u89e3\u51b3\u65b9\u6cd5\u662f\u7bad\u5934\u51fd\u6570\uff0c\u8fd9\u79cd\u65b0\u7279\u6027\u503c\u5f97\u4e13\u95e8\u5f00\u51fa\u4e00\u8282\u6765\u8bb2\u8bb2\u3002 \u7bad\u5934\u51fd\u6570 \u00b6 \u8fd9\u4e00\u4e2a\u7ae0\u8282\u672c\u5e94\u8be5\u5728\u51fd\u6570\u90e8\u5206\u8bb2\u89e3\uff0c\u4f46\u662f\u7531\u4e8e\u7bad\u5934\u51fd\u6570\u7684\u51fa\u73b0\u5f88\u5927\u7684\u539f\u56e0\u662f\u4e3a\u4e86\u89e3\u51b3 this \u95ee\u9898\uff0c\u7f16\u8005\u8fd8\u662f\u5c06\u5176\u653e\u5230\u4e86 OOP \u7ae0\u8282\u3002 \u7bad\u5934\u51fd\u6570\u53ea\u662f\u51fd\u6570\u7684\u53e6\u5916\u4e00\u79cd\u5199\u6cd5\uff1a 1 2 3 4 5 const sum = ( x , y ) => { return x + y ; } sum ( 1 , 2 ); // 3 \u540c\u65f6\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u51fd\u6570\u4f53\u6ca1\u6709\u4e2d\u95f4\u64cd\u4f5c\u7684\u51fd\u6570\uff0c\u53ef\u4ee5\u76f4\u63a5\u5728\u7bad\u5934\u53f3\u4fa7\u5199\u8fd4\u56de\u503c\uff1a 1 2 const sum = ( x , y ) => x + y ; sum ( 1 , 2 ); // 3 \u800c\u5728\u56de\u8c03\u51fd\u6570\u91cc\u9762\u5199\u7bad\u5934\u51fd\u6570\u5c06\u4f1a\u8ba9\u4ee3\u7801\u66f4\u53ef\u8bfb\uff1a 1 2 3 4 5 6 7 response . data . map (( val , ind ) => ({ ... val , index : ind , })) . filter (( val ) => val . name !== undefined ) . sort (( a , b ) => a . subscriberNum - b . subscriberNum ); \u552f\u4e00\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u4e00\u4e2a\u7bad\u5934\u51fd\u6570\u76f4\u63a5\u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u7684\u82b1\u62ec\u53f7\u53ef\u80fd\u4f1a\u548c\u4ee3\u7801\u5757\u7684\u82b1\u62ec\u53f7\u6df7\u6dc6\uff0c\u6240\u4ee5\u5982\u679c\u76f4\u63a5\u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\uff0c\u8bb0\u5f97\u5728\u5bf9\u8c61\u7684\u82b1\u62ec\u53f7\u5916\u518d\u5957\u4e00\u5c42\u5c0f\u62ec\u53f7\u9632\u6b62\u51fa\u73b0 Syntax Error\u3002 \u7bad\u5934\u51fd\u6570\u548c function \u51fd\u6570\u6700\u5927\u4e0d\u540c\u7684\u5730\u65b9\u662f\u5176 this \u7684\u6307\u5411\u8ddf\u968f\u4e0a\u4e0b\u6587\u7684 this \uff0c\u4e5f\u5c31\u662f\u8bf4\u5176\u672c\u8eab\u4e0d\u5177\u6709 this \uff0c\u5728\u7bad\u5934\u51fd\u6570\u4f53\u91cc\u4f7f\u7528\u7684 this \u5b9e\u9645\u4e0a\u662f\u5176\u4e0a\u4e0b\u6587\uff08\u4e00\u822c\u662f\u5176\u6240\u5728\u7684\u51fd\u6570\u4f5c\u7528\u57df\uff09\u7684 this \u3002\u6362\u53e5\u8bdd\u8bf4\uff0c \u7bad\u5934\u51fd\u6570\u7684 this \u5728\u5b9a\u4e49\u7684\u65f6\u5019\u5c31\u5b8c\u6210\u4e86\u7ed1\u5b9a \uff0c\u8fd9\u6837\u7684\u6027\u8d28\u5c31\u89e3\u51b3\u4e86 this \u6307\u5411\u4e0d\u660e\u7684\u95ee\u9898\u3002 \u8003\u8651\u8fd9\u6837\u7684\u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 const foo = () => console . log ( this ); foo (); // window // Changing caller will not change 'this' let obj = { foo : foo , }; obj . foo (); // window // 'call' & 'bind' may fail foo . call ( obj ); // window foo = foo . bind ( obj ); foo (); // window \u53ef\u4ee5\u770b\u51fa\uff0c\u5728\u5168\u5c40\u73af\u5883\u4e0b\u8bbe\u5b9a\u7684\u7bad\u5934\u51fd\u6570\u7684 this \u6c38\u8fdc\u8ddf\u968f\u5168\u5c40\u73af\u5883\u6307\u5411\u5168\u5c40\u5bf9\u8c61\u3002 \u4f46\u53e6\u5916\u4e00\u65b9\u9762\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 let obj = { bar : function () { const foo = () => console . log ( this ); return foo ; }, }; const foo = obj . bar (); foo (); // obj const bar = obj . bar ; bar ()(); // window \u8fd9\u91cc\u524d\u9762\u83b7\u53d6 foo \u7684\u65f6\u5019\u662f\u4f7f\u7528\u7684 obj \u8c03\u7528\u7684\u666e\u901a\u51fd\u6570 bar \uff0c\u6240\u4ee5 bar \u7684 this \u6307\u5411 obj \uff0c\u8ddf\u968f\u7740\u7684 foo \u7684 this \u5c31\u6307\u5411 obj \u3002\u800c\u540e\u9762\u83b7\u53d6\u7684\u65f6\u5019 bar \u662f\u88ab\u5168\u5c40\u5bf9\u8c61\u8c03\u7528\u7684\uff0c\u5176 this \u5c31\u88ab\u81ea\u7136\u7ed1\u5b9a\u5230\u4e86\u5168\u5c40\u5bf9\u8c61\u4e0a\uff0c\u6240\u4ee5\u5185\u90e8\u7bad\u5934\u51fd\u6570\u7684 this \u4e5f\u5c31\u7ed1\u5b9a\u5230\u4e86\u5168\u5c40\u5bf9\u8c61\u4e0a\u3002 \u6211\u8be5\u5982\u4f55\u4f7f\u7528 this \u5b9e\u9645\u4e0a\u53ea\u8981\u9075\u5faa\u4e00\u5b9a\u7684\u4ee3\u7801\u89c4\u8303\uff08\u6bd4\u5982\u8bf4\u5728\u5b66\u4e60\u4e00\u4e2a\u524d\u7aef\u6846\u67b6\u7684\u65f6\u5019\u6309\u7167\u5176\u6559\u7a0b\u548c\u6837\u4f8b\u4ee3\u7801\u8fdb\u884c\u5b9e\u8df5\uff09\u7f16\u5199\u4ee3\u7801\uff0c this \u5e76\u4e0d\u4f1a\u6210\u4e3a\u4e00\u4e2a\u5f88\u5927\u7684\u95ee\u9898\u3002\u4f46\u662f\u7f16\u8005\u4f9d\u7136\u5efa\u8bae\u8bfb\u8005\u5e94\u5f53\u4e86\u89e3 this \u7684\u673a\u5236\uff0c\u8fd9\u6837\u624d\u80fd\u5e94\u5bf9\u53ef\u80fd\u51fa\u73b0\u7684\u610f\u5916\u3002","title":"JavaScript \u7684\u9762\u5411\u5bf9\u8c61"},{"location":"languages/javascript/oop/#javascript","text":"\u522b\u60f3\u5b66\u4f1a JavaScript \u7684 OOP\uff01 JavaScript \u7684\u9762\u5411\u5bf9\u8c61\u7684\u5b9e\u73b0\u903b\u8f91\u5e76\u975e\u662f\u7c7b\u5c01\u88c5\u903b\u8f91\uff0c\u800c\u662f\u539f\u578b\u94fe\u903b\u8f91\u3002\u6700\u521d\u7684 JavaScript \u5e76\u4e0d\u652f\u6301\u7c7b\u8bed\u6cd5\uff0c\u4f46\u7531\u4e8e\u539f\u578b\u94fe\u5b9e\u5728\u592a\u8fc7\u4e8e\u7279\u7acb\u72ec\u884c\uff0c\u76ee\u524d ES6 \u6807\u51c6\u5c06\u7c7b\u8bed\u6cd5\u4f5c\u4e3a \u8bed\u6cd5\u7cd6 \u52a0\u5165\u4e86\u8bed\u8a00\u6807\u51c6\u3002\u8fd9\u4e5f\u5c31\u662f\u8bf4\uff0cJavaScript \u7684\u9762\u5411\u5bf9\u8c61\u7684\u5e95\u5c42\u4f9d\u7136\u662f\u539f\u578b\u94fe\u800c\u975e\u7c7b\u5c01\u88c5\uff0c\u5982\u679c\u771f\u7684\u60f3\u5f04\u660e\u767d JavaScript \u7684\u539f\u578b\u94fe\u673a\u5236\uff0c\u53ef\u4ee5\u67e5\u770b\u6587\u6863\u672b\u5c3e\u7684\u539f\u578b\u94fe\u7ae0\u8282\u3002\u4f46\u5bf9\u4e8e\u521d\u5b66\u8005\uff0c\u6211\u4eec\u5efa\u8bae\u53ea\u662f\u7528\u7c7b\u8bed\u6cd5\uff0c\u9664\u975e\u9047\u5230\u4e0d\u53ef\u89e3\u51b3\u7684 bug\uff0c\u5426\u5219\u4e0d\u8981\u82b1\u65f6\u95f4\u94bb\u7814\u539f\u578b\u94fe\u3002 \u4f7f\u7528\u7c7b\u8bed\u6cd5\u7684 JavaScript \u5f88\u5927\u7a0b\u5ea6\u4e0a\u548c C++ \u8bed\u8a00\u7c7b\u4f3c\uff0c\u8fd9\u91cc\u6211\u4eec\u7f16\u5199\u4e00\u4e2a\u7b80\u6613\u7684\u590d\u6570\u7c7b\u4f5c\u4e3a\u6f14\u793a\uff0c\u5185\u90e8\u5df2\u7ecf\u5305\u542b\u4e86\u6784\u9020\u51fd\u6570\u3001\u5b9a\u4e49\u6210\u5458\u65b9\u6cd5\u548c\u9759\u6001\u65b9\u6cd5\u7b49 OOP \u57fa\u7840\u5185\u5bb9\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 class Complex { constructor ( _real , _imaginary ) { this . real = _real ; this . imaginary = _imaginary ; // Declare members & initialize } print () { console . log ( ` ${ this . real } ${ this . imaginary >= 0 ? \"+\" : \"-\" } ${ Math . abs ( this . imaginary ) } i` ); } static printInfo () { console . log ( \"This is a complex class.\" ); } } let com = new Complex ( 1 , 2 ); com . print (); // \"1 + 2 i\" Complex . printInfo (); // \"This is a complex class.\" \u6709\u4e00\u4e9b\u7ec6\u8282\u9700\u8981\u6ce8\u610f\uff1a \u7c7b\u65b9\u6cd5\u5185\u4f7f\u7528\u7c7b\u6210\u5458\u7684\u65f6\u5019\u5fc5\u987b\u4f7f\u7528 this \u8c03\u7528 JavaScript \u7684\u6240\u6709\u7c7b\u6210\u5458\u548c\u7c7b\u65b9\u6cd5\u5747\u662f\u516c\u6709\u7684\uff0cJavaScript \u4e0d\u5177\u6709\u8bbf\u95ee\u6743\u9650\u4fee\u9970\u7b26","title":"JavaScript \u7684\u9762\u5411\u5bf9\u8c61"},{"location":"languages/javascript/oop/#this","text":"\u4f60\u7684 JavaScript \u6210\u4eba\u793c this \u7684\u6307\u5411\u95ee\u9898\u662f JavaScript \u8bed\u8a00\u8bbe\u8ba1\u91cc\u53ef\u4ee5\u8bf4\u662f\u5f71\u54cd\u6700\u4e3a\u6df1\u8fdc\u7684\u7684\u4e00\u4e2a\u7f3a\u9677\uff0c\u6df1\u8fdc\u5230\u5373\u4f7f\u8981\u5f04\u660e\u767d\u8fd9\u4e2a\u95ee\u9898\u9700\u8981\u82b1\u8d39\u5f88\u957f\u65f6\u95f4\uff0c\u4f46\u4f60\u4e0d\u5f97\u4e0d\u6295\u5165\u8fd9\u4e9b\u7cbe\u529b\uff0c\u5426\u5219\u4f60\u53ef\u80fd\u4f1a\u5728\u672a\u6765\u7684\u4ee3\u7801\u5b9e\u8df5\u4e2d\u9047\u5230\u5f88\u591a this \u76f8\u5173\u7684\u95ee\u9898\u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u5373\u4f7f\u540e\u6765\u4eba\u9488\u5bf9 this \u6307\u5411\u95ee\u9898\u6253\u4e86\u5f88\u591a\u7684\u8865\u4e01\uff0c\u8fd9\u4e2a\u95ee\u9898\u4f9d\u7136\u8426\u7ed5\u5728\u524d\u7aef\u5f00\u53d1\u8005\u5fc3\u4e2d\u3002\u6bd4\u5982\u8bf4 React \u51fd\u6570\u7ec4\u4ef6\u652f\u6301\u8005\u7684\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u8bba\u70b9\u5c31\u662f\u4f7f\u7528\u51fd\u6570\u7ec4\u4ef6\u4e0d\u4f1a\u9047\u5230 this \u6307\u5411\u95ee\u9898\u3002 \u4e25\u683c\u6765\u8bf4\uff0cJavaScript \u7684 this \u6307\u5411\u89c4\u5219\u53ea\u6709\u4e00\u6761\uff0c\u5373 this \u6c38\u8fdc\u6307\u5411\u6700\u8fd1\u7684\u8c03\u7528\u8005 \u3002\u89c2\u5bdf\u8fd9\u6837\u7684\u4ee3\u7801\uff08\u6d4f\u89c8\u5668\u8fd0\u884c\uff09\uff1a 1 2 3 4 5 6 7 8 function foo () { console . log ( this ); } foo (); // window let obj = { foo : foo , }; obj . foo (); // { foo: foo } \u8fd9\u91cc\u4e24\u6b21\u8c03\u7528\u7684\u90fd\u662f\u540c\u4e00\u4e2a foo \u51fd\u6570\uff0c\u4e0d\u540c\u7684\u662f\u524d\u8005\u662f\u5168\u5c40\u8c03\u7528\uff08\u5373\u76f4\u63a5\u8c03\u7528\uff09\uff0c\u800c\u540e\u8005\u662f\u628a\u51fd\u6570\u4f5c\u4e3a\u4e00\u4e2a\u5bf9\u8c61 obj \u7684\u5c5e\u6027\u540e\u901a\u8fc7 obj \u8c03\u7528\u3002\u800c this \u7684\u6307\u5411\u5c31\u662f\u5728\u51fd\u6570\u8c03\u7528\u7684\u65f6\u5019\u786e\u5b9a\u7684\u3002\u5168\u5c40\u8c03\u7528 foo \u51fd\u6570\uff0c\u90a3 this \u5c31\u6307\u5411\u5168\u5c40\u5bf9\u8c61\uff0c\u901a\u8fc7 obj \u8c03\u7528\uff0c\u90a3 this \u5c31\u6307\u5411 obj \u3002 \u5168\u5c40\u5bf9\u8c61 \u4e8b\u5b9e\u4e0a JavaScript \u7684\u5168\u5c40\u53d8\u91cf\u90fd\u662f\u5168\u5c40\u5bf9\u8c61\u7684\u5c5e\u6027\uff0c\u6bcf\u4e00\u4e2a JavaScript \u8fd0\u884c\u73af\u5883\u90fd\u6709\u4e00\u4e2a\u5168\u5c40\u5bf9\u8c61\u3002\u6bd4\u5982\u8bf4\u6d4f\u89c8\u5668\u7684\u5168\u5c40\u5bf9\u8c61\u5f80\u5f80\u662f window \u3002\u4f60\u58f0\u660e\u7684\u6bcf\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u90fd\u4f1a\u7ed1\u5b9a\u4e3a\u5168\u5c40\u5bf9\u8c61\u7684\u5c5e\u6027\uff08\u4e0b\u8ff0\u4ee3\u7801\u5728\u6d4f\u89c8\u5668\u8fd0\u884c\uff09\uff1a 1 2 var a = 1 ; window . a ; // 1 \u800c\u5728\u5168\u5c40\u73af\u5883\u4e0b\u8c03\u7528\u51fd\u6570 foo() \uff0c\u5b9e\u9645\u4e0a\u7b49\u4ef7\u4e8e\u901a\u8fc7\u5168\u5c40\u5bf9\u8c61\u5728\u8c03\u7528\uff1a 1 2 foo (); window . foo (); \u4e0a\u8ff0\u4e24\u4e2a\u8bed\u53e5\u6ca1\u6709\u5dee\u522b\u3002 \u5bf9\u4e8e\u66f4\u4e3a\u590d\u6742\u7684\u5bf9\u8c61\u5d4c\u5957\uff0c this \u7684\u6307\u5411\u4e5f\u9075\u5faa\u7740\u6307\u5411\u6700\u8fd1\u7684\u8c03\u7528\u8005\u7684\u89c4\u5219\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 let obj = { foo : 1 , inner : { foo : 2 , fn : function () { console . log ( this . foo ); }, }, }; obj . inner . fn (); // 2 obj . fn = obj . inner . fn ; obj . fn (); // 1 let fn = obj . inner . fn ; fn (); // undefined \u8fd9\u91cc\u7684 fn \u51fd\u6570\u88ab\u4e09\u4e2a\u5bf9\u8c61\u5206\u522b\u8c03\u7528\uff0c\u4ece\u4e0a\u5230\u4e0b\u4e3a obj.inner, obj, window \uff0c\u53ef\u4ee5\u770b\u51fa\u8fd9\u4e09\u6b21\u8c03\u7528\u4e2d\u7684 this \u5c31\u5206\u522b\u6307\u5411\u8fd9\u4e09\u4e2a\u5bf9\u8c61\u3002 \u4e00\u4e9b\u8865\u5145 \u867d\u8bf4 this \u7684\u6307\u5411\u89c4\u5219\u53ea\u6709\u4e00\u6761\uff0c\u4f46\u5b9e\u9645\u4e0a\u5728\u5199\u7a0b\u5e8f\u7684\u65f6\u5019\uff0c\u4e00\u4e9b\u51fd\u6570\u662f\u6bd4\u8f83\u96be\u5f04\u660e\u767d\u8c03\u7528\u8005\u7684\u3002\u6bd4\u5982\u8bf4\u4f20\u7ed9\u524d\u7aef\u7ec4\u4ef6\u7684\u4e8b\u4ef6\u76d1\u542c\u51fd\u6570\u3001\u4f20\u7ed9\u8ba1\u65f6\u5668\u7684\u56de\u8c03\u3001\u7c7b\u51fd\u6570\u3002\u8fd9\u4e9b\u51fd\u6570\u7684 this \u7684\u6307\u5411\u95ee\u9898\u5b9e\u9645\u4e0a\u5df2\u7ecf\u8131\u79bb\u4e86\u672c\u8282\u8ba8\u8bba\u7684\u8303\u7574\uff0c\u6bd4\u5982\u8bf4\u7c7b\u73af\u5883\u4e0b\u7684 this \u95ee\u9898\u5c31\u5e94\u8be5\u8ba4\u771f\u5b66\u4e60\u539f\u578b\u94fe\u903b\u8f91\u624d\u80fd\u771f\u6b63\u638c\u63e1\u3002 this \u7684\u7f3a\u9677\u5c31\u5728\u4e8e\u5176\u6307\u5411\u662f\u52a8\u6001\u7684\uff0c\u6709\u4e9b\u51fd\u6570\u53ef\u80fd\u5185\u90e8\u4f7f\u7528\u4e86 this \u4f46\u5f00\u53d1\u8005\u5e76\u4e0d\u77e5\u6653\uff0c\u4ece\u800c\u5728\u4e0d\u540c\u60c5\u51b5\u4e0b\u5e94\u7528\u8fd9\u4e2a\u51fd\u6570\u7684\u65f6\u5019\u4f1a\u4ea7\u751f\u4e0d\u53ef\u7406\u89e3\u7684\u9519\u8bef\u3002\u800c\u73b0\u5728\u7684\u4e00\u4e9b\u8865\u4e01\u5c31\u662f\u5141\u8bb8\u5f00\u53d1\u8005\u786c\u6027\u6307\u5b9a this \u7684\u6307\u5411\u6216\u8005\u6c38\u4e45\u7ed1\u5b9a this \u7684\u6307\u5411\u4ee5\u9632\u6b62\u672a\u77e5\u9519\u8bef\u3002 \u6bd4\u5982\u8bf4 call(), apply() \u65b9\u6cd5\u5c31\u5141\u8bb8\u6211\u4eec\u624b\u52a8\u6307\u5b9a this \u7684\u6307\u5411\uff0c\u5176\u63a5\u53d7\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u5c31\u4f1a\u6210\u4e3a this \u7684\u6307\u5411\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 function foo () { console . log ( this . a ); } let obj = { a : 1 , }; let another = { a : 2 , }; foo (); // undefined foo . call ( obj ); // 1 foo . apply ( obj ); // 1 foo . call ( another ); // 2 foo . apply ( another ); // 2 \u800c bind() \u65b9\u6cd5\u5219\u5141\u8bb8\u6211\u4eec\u5c06 this \u7684\u6307\u5411\u6c38\u4e45\u7ed1\u5b9a\u4e8e\u67d0\u4e00\u4e2a\u5bf9\u8c61\u4e0a\u3002\u65e0\u8bba\u540e\u7eed\u4f7f\u7528\u54ea\u4e00\u4e2a\u5bf9\u8c61\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\uff0c\u5176 this \u90fd\u4fdd\u6301\u539f\u5148 bind() \u8bbe\u5b9a\u7684\u6307\u5411\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 function foo () { console . log ( this . a ); } let obj = { a : 1 , }; foo (); // undefined foo = foo . bind ( obj ); foo (); // 1 let another = { foo : foo , a : 2 , }; another . foo (); // 1 \u5728\u8fd9\u4e9b\u8865\u4e01\u51fa\u73b0\u4e4b\u524d\uff0c\u4e3a\u4e86\u786c\u6027\u89c4\u5b9a this \u7684\u6307\u5411\uff0c\u7a0b\u5e8f\u5458\u751a\u81f3\u4f1a\u5728\u51fd\u6570\u4e2d\u4f7f\u7528 var that = this \u8bed\u53e5\u5148\u6355\u83b7 this \uff0c\u4e4b\u540e\u4f7f\u7528 that \u4ee3\u66ff this \u6765\u9632\u6b62 bug\u3002 \u800c\u73b0\u5728\u66f4\u5e38\u7528\u7684\u4e00\u79cd\u89e3\u51b3\u65b9\u6cd5\u662f\u7bad\u5934\u51fd\u6570\uff0c\u8fd9\u79cd\u65b0\u7279\u6027\u503c\u5f97\u4e13\u95e8\u5f00\u51fa\u4e00\u8282\u6765\u8bb2\u8bb2\u3002","title":"this \u7684\u6307\u5411\u95ee\u9898"},{"location":"languages/javascript/oop/#_1","text":"\u8fd9\u4e00\u4e2a\u7ae0\u8282\u672c\u5e94\u8be5\u5728\u51fd\u6570\u90e8\u5206\u8bb2\u89e3\uff0c\u4f46\u662f\u7531\u4e8e\u7bad\u5934\u51fd\u6570\u7684\u51fa\u73b0\u5f88\u5927\u7684\u539f\u56e0\u662f\u4e3a\u4e86\u89e3\u51b3 this \u95ee\u9898\uff0c\u7f16\u8005\u8fd8\u662f\u5c06\u5176\u653e\u5230\u4e86 OOP \u7ae0\u8282\u3002 \u7bad\u5934\u51fd\u6570\u53ea\u662f\u51fd\u6570\u7684\u53e6\u5916\u4e00\u79cd\u5199\u6cd5\uff1a 1 2 3 4 5 const sum = ( x , y ) => { return x + y ; } sum ( 1 , 2 ); // 3 \u540c\u65f6\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u51fd\u6570\u4f53\u6ca1\u6709\u4e2d\u95f4\u64cd\u4f5c\u7684\u51fd\u6570\uff0c\u53ef\u4ee5\u76f4\u63a5\u5728\u7bad\u5934\u53f3\u4fa7\u5199\u8fd4\u56de\u503c\uff1a 1 2 const sum = ( x , y ) => x + y ; sum ( 1 , 2 ); // 3 \u800c\u5728\u56de\u8c03\u51fd\u6570\u91cc\u9762\u5199\u7bad\u5934\u51fd\u6570\u5c06\u4f1a\u8ba9\u4ee3\u7801\u66f4\u53ef\u8bfb\uff1a 1 2 3 4 5 6 7 response . data . map (( val , ind ) => ({ ... val , index : ind , })) . filter (( val ) => val . name !== undefined ) . sort (( a , b ) => a . subscriberNum - b . subscriberNum ); \u552f\u4e00\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u4e00\u4e2a\u7bad\u5934\u51fd\u6570\u76f4\u63a5\u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u7684\u82b1\u62ec\u53f7\u53ef\u80fd\u4f1a\u548c\u4ee3\u7801\u5757\u7684\u82b1\u62ec\u53f7\u6df7\u6dc6\uff0c\u6240\u4ee5\u5982\u679c\u76f4\u63a5\u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\uff0c\u8bb0\u5f97\u5728\u5bf9\u8c61\u7684\u82b1\u62ec\u53f7\u5916\u518d\u5957\u4e00\u5c42\u5c0f\u62ec\u53f7\u9632\u6b62\u51fa\u73b0 Syntax Error\u3002 \u7bad\u5934\u51fd\u6570\u548c function \u51fd\u6570\u6700\u5927\u4e0d\u540c\u7684\u5730\u65b9\u662f\u5176 this \u7684\u6307\u5411\u8ddf\u968f\u4e0a\u4e0b\u6587\u7684 this \uff0c\u4e5f\u5c31\u662f\u8bf4\u5176\u672c\u8eab\u4e0d\u5177\u6709 this \uff0c\u5728\u7bad\u5934\u51fd\u6570\u4f53\u91cc\u4f7f\u7528\u7684 this \u5b9e\u9645\u4e0a\u662f\u5176\u4e0a\u4e0b\u6587\uff08\u4e00\u822c\u662f\u5176\u6240\u5728\u7684\u51fd\u6570\u4f5c\u7528\u57df\uff09\u7684 this \u3002\u6362\u53e5\u8bdd\u8bf4\uff0c \u7bad\u5934\u51fd\u6570\u7684 this \u5728\u5b9a\u4e49\u7684\u65f6\u5019\u5c31\u5b8c\u6210\u4e86\u7ed1\u5b9a \uff0c\u8fd9\u6837\u7684\u6027\u8d28\u5c31\u89e3\u51b3\u4e86 this \u6307\u5411\u4e0d\u660e\u7684\u95ee\u9898\u3002 \u8003\u8651\u8fd9\u6837\u7684\u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 const foo = () => console . log ( this ); foo (); // window // Changing caller will not change 'this' let obj = { foo : foo , }; obj . foo (); // window // 'call' & 'bind' may fail foo . call ( obj ); // window foo = foo . bind ( obj ); foo (); // window \u53ef\u4ee5\u770b\u51fa\uff0c\u5728\u5168\u5c40\u73af\u5883\u4e0b\u8bbe\u5b9a\u7684\u7bad\u5934\u51fd\u6570\u7684 this \u6c38\u8fdc\u8ddf\u968f\u5168\u5c40\u73af\u5883\u6307\u5411\u5168\u5c40\u5bf9\u8c61\u3002 \u4f46\u53e6\u5916\u4e00\u65b9\u9762\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 let obj = { bar : function () { const foo = () => console . log ( this ); return foo ; }, }; const foo = obj . bar (); foo (); // obj const bar = obj . bar ; bar ()(); // window \u8fd9\u91cc\u524d\u9762\u83b7\u53d6 foo \u7684\u65f6\u5019\u662f\u4f7f\u7528\u7684 obj \u8c03\u7528\u7684\u666e\u901a\u51fd\u6570 bar \uff0c\u6240\u4ee5 bar \u7684 this \u6307\u5411 obj \uff0c\u8ddf\u968f\u7740\u7684 foo \u7684 this \u5c31\u6307\u5411 obj \u3002\u800c\u540e\u9762\u83b7\u53d6\u7684\u65f6\u5019 bar \u662f\u88ab\u5168\u5c40\u5bf9\u8c61\u8c03\u7528\u7684\uff0c\u5176 this \u5c31\u88ab\u81ea\u7136\u7ed1\u5b9a\u5230\u4e86\u5168\u5c40\u5bf9\u8c61\u4e0a\uff0c\u6240\u4ee5\u5185\u90e8\u7bad\u5934\u51fd\u6570\u7684 this \u4e5f\u5c31\u7ed1\u5b9a\u5230\u4e86\u5168\u5c40\u5bf9\u8c61\u4e0a\u3002 \u6211\u8be5\u5982\u4f55\u4f7f\u7528 this \u5b9e\u9645\u4e0a\u53ea\u8981\u9075\u5faa\u4e00\u5b9a\u7684\u4ee3\u7801\u89c4\u8303\uff08\u6bd4\u5982\u8bf4\u5728\u5b66\u4e60\u4e00\u4e2a\u524d\u7aef\u6846\u67b6\u7684\u65f6\u5019\u6309\u7167\u5176\u6559\u7a0b\u548c\u6837\u4f8b\u4ee3\u7801\u8fdb\u884c\u5b9e\u8df5\uff09\u7f16\u5199\u4ee3\u7801\uff0c this \u5e76\u4e0d\u4f1a\u6210\u4e3a\u4e00\u4e2a\u5f88\u5927\u7684\u95ee\u9898\u3002\u4f46\u662f\u7f16\u8005\u4f9d\u7136\u5efa\u8bae\u8bfb\u8005\u5e94\u5f53\u4e86\u89e3 this \u7684\u673a\u5236\uff0c\u8fd9\u6837\u624d\u80fd\u5e94\u5bf9\u53ef\u80fd\u51fa\u73b0\u7684\u610f\u5916\u3002","title":"\u7bad\u5934\u51fd\u6570"},{"location":"languages/javascript/variable/","text":"JavaScript \u7684\u53d8\u91cf\u4e0e\u53d8\u91cf\u7c7b\u578b \u00b6 \u53d8\u91cf\u58f0\u660e \u00b6 JavaScript \u8bed\u8a00\u4e4b\u4e2d\u58f0\u660e\u53d8\u91cf\u7684\u5173\u952e\u5b57\u6709\u4e09\u4e2a\uff0c\u5206\u522b\u4e3a var, let, const \u3002\u4ece\u5b57\u9762\u610f\u4e49\u4e0a\u6765\u770b\uff0c const \u7528\u4e8e\u58f0\u660e\u5e38\u91cf\uff0c\u800c var, let \u5219\u7528\u4e8e\u58f0\u660e\u53d8\u91cf\u3002\u5728 var, let \u9009\u53d6\u7684\u95ee\u9898\u4e0a\uff0c\u7f16\u8005\u5efa\u8bae\u5c3d\u91cf\u5168\u90e8\u4f7f\u7528 let \u5173\u952e\u5b57\u58f0\u660e\u53d8\u91cf\u4ee5\u9632\u6b62\u6df7\u4e71\uff0c\u5177\u4f53\u539f\u56e0\u53ef\u4ee5\u53c2\u7167\u8bb2\u89e3 JavaScript \u51fd\u6570\u90e8\u5206\u7684 \u53d8\u91cf\u63d0\u5347 \u6ce8\u89e3\u3002 1 2 3 4 5 6 var a = 0 ; a = 1 ; // OK let b = \"Test string\" ; b = \"New string\" ; // OK const c = 0 ; c = 2 ; // Error! \u53e6\u5916\uff0c\u7531\u4e8e JavaScript \u662f\u5f31\u7c7b\u578b\u7684\uff0c\u6240\u4ee5\u91cd\u65b0\u7ed9\u53d8\u91cf\u8d4b\u503c\u7684\u65f6\u5019\u53ef\u4ee5\u6539\u53d8\u7c7b\u578b\uff1a 1 2 let weakType = 0 ; weakType = \"You are a string now!\" ; // OK \u53d8\u91cf\u7c7b\u578b \u00b6 JavaScript \u7684\u9b54\u6cd5 JavaScript \u662f\u4e00\u4e2a\u5728\u4e24\u5468\u5de6\u53f3\u65f6\u95f4\u5c31\u8bbe\u8ba1\u5b8c\u6210\u7684\u8bed\u8a00\uff0c\u5373\u4f7f\u8fd9\u95e8\u8bed\u8a00\u7684\u8bbe\u8ba1\u8005\u6c34\u5e73\u5f88\u9ad8\uff0c\u4f46\u4e0d\u53ef\u5426\u8ba4\u7684\u662f\u5982\u6b64\u7d27\u8feb\u7684\u5de5\u671f\u4e5f\u9020\u6210\u4e86 JavaScript \u4e4b\u4e2d\u6709\u8bb8\u591a\u53cd\u76f4\u89c9\u7684\u8bbe\u8ba1\u7f3a\u9677\uff0c\u8fd9\u4e9b\u7f3a\u9677\u7f16\u8005\u4f1a\u5728\u6587\u6863\u5404\u5bf9\u5e94\u90e8\u5206\u8fdb\u884c\u8bb2\u89e3\u3002 JavaScript \u7684\u57fa\u7840\u7c7b\u578b\u548c\u57fa\u7840\u8fd0\u7b97\u7b26\u7684\u8868\u73b0\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u548c C/C++ \u8bed\u8a00\u7c7b\u4f3c\uff0c\u4f46\u662f\u7531\u4e8e JavaScript \u7684\u8bed\u8a00\u7279\u6027\u6216\u7f3a\u9677\uff0c\u8fd9\u4e9b\u57fa\u7840\u8fd0\u7b97\u7b26\u5728\u53e6\u5916\u4e00\u4e9b\u5e38\u8bc6\u4e4b\u5916\u7684\u8fd0\u7b97\u4e4b\u4e2d\u6709\u7740\u76f8\u5f53 \u8d85\u51e1\u8131\u4fd7\u7684 \u548c\u53cd\u76f4\u89c9\u7684\u8868\u73b0\u3002\u4f60\u53ef\u4ee5\u8ba4\u4e3a\u8fd9\u662f JavaScript \u7684\u8bbe\u8ba1\u7f3a\u9677\uff0c\u4e5f\u53ef\u4ee5\u8ba4\u4e3a\u662f\u8fd9\u95e8\u8bed\u8a00\u7684\u8bed\u6cd5\u7279\u6027\u3002 \u5176\u4e2d\uff0c\u5df2\u7ecf\u88ab\u4f5c\u4e3a\u8bed\u6cd5\u7279\u6027\u800c\u88ab\u5e7f\u6cdb\u8fd0\u7528\u7684\u7528\u6cd5\u5c06\u4f1a\u5728\u6b63\u6587\u4e2d\u6307\u51fa\uff0c\u800c\u5176\u4ed6\u7528\u6cd5\u5c06\u4f1a\u5728\u8fd9\u4e00\u8282\u7684\u6700\u540e\u5177\u4f53\u4ecb\u7ecd\u3002\u5982\u679c\u4f60\u662f JavaScript \u8bed\u8a00\u7684\u521d\u5b66\u8005\uff0c\u7f16\u8005\u5e76\u4e0d\u5efa\u8bae\u9605\u8bfb\u8fd9\u4e00\u90e8\u5206\uff0c\u56e0\u4e3a\u8fd9\u53ef\u80fd\u4f1a\u9020\u6210\u4e0d\u826f\u597d\u7684\u7f16\u7801\u4e60\u60ef\u548c\u7f16\u7a0b\u601d\u7ef4\u7684\u6df7\u4e71\u3002\u5c31\u521d\u5b66\u800c\u8a00\uff0c\u9605\u8bfb\u672c\u6587\u6863\u7684\u6b63\u6587\u5c31\u8db3\u4ee5\u5199\u51fa\u5b9e\u7528\u4e14\u5f3a\u5927\u7684\u4ee3\u7801\u3002\u4f46\u5982\u679c\u4f60\u60f3\u8981\u6df1\u5165\u4e86\u89e3\u8fd9\u4e00\u95e8\u8bed\u8a00\uff0c\u7f16\u8005\u8ba4\u4e3a\u7406\u89e3\u8fd9\u4e9b\u8fd0\u7b97\u7b26\u7684\u5177\u4f53\u8868\u73b0\u662f\u6709\u5fc5\u8981\u7684\u3002 JavaScript \u8bed\u8a00\u652f\u6301\u4e94\u79cd\u57fa\u672c\u7c7b\u578b\uff0c\u5373\u6570\u5b57\u3001\u5b57\u7b26\u4e32\u3001\u5e03\u5c14\u503c\u3001 undefined \u7c7b\u578b\u548c null \u7c7b\u578b\u3002\u524d\u4e09\u4e2a\u7c7b\u578b\u662f\u5bb9\u6613\u7406\u89e3\u7684\uff0c\u800c\u540e\u4e24\u8005\u5219\u4f1a\u5728\u6700\u540e\u8bb2\u89e3\u3002 \u4e00\u4e9b\u9002\u5f53\u7684\u7b80\u5316 \u5b9e\u9645\u4e0a\u6700\u65b0\u7684 JavaScript \u5177\u6709\u4e03\u79cd\u57fa\u672c\u7c7b\u578b\uff0c\u591a\u51fa\u7684\u4e24\u79cd\u4e3a Symbol \u7c7b\u578b\u548c\u5927\u6574\u6570\u7c7b\u578b\u3002\u4f46\u7531\u4e8e\u8fd9\u4e24\u8005\u5728\u5b9e\u9645\u5de5\u7a0b\u4e4b\u4e2d\u4f7f\u7528\u8f83\u5c11\uff0c\u6240\u4ee5\u672c\u6587\u6863\u4f5c\u4e3a\u5165\u95e8\u6587\u6863\u5e76\u4e0d\u4f1a\u4ecb\u7ecd\uff0c\u672c\u6587\u6863\u9ed8\u8ba4 JavaScript \u53ea\u6709\u4e94\u79cd\u57fa\u672c\u7c7b\u578b\u3002 \u5982\u679c\u9700\u8981\u5b66\u4e60\u8fd9\u4e24\u4e2a\u62d3\u5c55\u7c7b\u578b\uff0c\u53ef\u4ee5\u53c2\u8003\u6587\u6863\u672b\u7ed9\u51fa\u7684\u94fe\u63a5\u3002 \u83b7\u53d6\u6570\u636e\u7684\u7c7b\u578b\u53ef\u4ee5\u4f7f\u7528 typeof \u5173\u952e\u5b57\uff1a 1 2 let testNum = 0 ; typeof testNum ; // \"number\" \u5e03\u5c14\u3001\u6570\u5b57\u548c\u5b57\u7b26\u4e32 \u00b6 JavaScript \u7684\u5e03\u5c14\u503c\u7c7b\u578b\u4ec5\u6709\u4e24\u4e2a\u53ef\u80fd\u503c\uff0c\u5373 true \u548c false \u3002\u4e0e\u5e03\u5c14\u503c\u7c7b\u578b\u76f8\u5173\u7684\u8fd0\u7b97\u4e00\u822c\u800c\u8a00\u548c C/C++ \u8bed\u8a00\u7c7b\u4f3c\uff1a 1 2 3 4 5 6 7 4 > 5 ; // false 2 !== 3 ; // true \"I\" === \"You\" ; // false false && false ; // false true || false ; // true ! false ; // true \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cJavaScript \u8bed\u8a00\u7684\u5224\u7b49\u8fd0\u7b97\u7b26\u6709 ==, === \u4e24\u79cd\uff0c\u5224\u4e0d\u7b49\u8fd0\u7b97\u7b26\u4e5f\u76f8\u5e94\u5730\u6709 !=, !== \u4e24\u79cd\u3002\u7f16\u8005\u5efa\u8bae\u5b8c\u5168\u4f7f\u7528 ===, !== \u6765\u4ee3\u66ff ==, != \uff0c\u8fd9\u662f\u56e0\u4e3a\u540e\u8005\u5728\u6bd4\u8f83\u4e4b\u524d\u53ef\u80fd\u4f1a\u53d1\u751f\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff0c\u800c\u8fd9\u79cd\u8f6c\u6362\u901a\u5e38\u4e0d\u5fc5\u8981\u4e14\u96be\u4ee5\u7406\u89e3\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u524d\u8005\u5219\u4f1a\u8fdb\u884c\u4e25\u683c\u7684\u503c\u6bd4\u8f83\uff0c\u4e0d\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\u3002 1 2 1 == true ; // true 1 === true ; // false JavaScript \u8bed\u8a00\u4e4b\u4e2d\u7684\u6570\u5b57\u4e0d\u533a\u5206\u6574\u6570\u548c\u6d6e\u70b9\u6570\uff0c\u7edf\u4e00\u4f7f\u7528\u6d6e\u70b9\u6570\u8868\u793a\u3002\u6240\u4ee5\u9664\u6cd5\u6ca1\u6709\u7c7b\u4f3c C/C++ \u7684\u5411\u4e0b\u53d6\u6574\u7684\u6027\u8d28\uff1a 1 5 / 2 ; // 2.5 \u90e8\u5206\u6570\u5b66\u76f8\u5173\u7684\u51fd\u6570\u3001\u5e38\u6570\u5747\u53ef\u4ee5\u4f7f\u7528\u5185\u7f6e\u5bf9\u8c61 Math \u8c03\u7528\uff0c\u4e0d\u8fc7\u6d89\u53ca\u5230\u7cbe\u786e\u7684\u6570\u5b66\u8ba1\u7b97\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u6ce8\u610f\u6d6e\u70b9\u6570\u8bef\u5dee\u95ee\u9898\uff1a 1 2 3 4 5 Math . PI ; // 3.141592653589793 Math . floor ( 5 / 2 ); // 2 Math . sin ( Math . PI ); // 1.2246467991473532e-16 0.1 + 0.2 ; // 0.30000000000000004 JavaScript \u8bed\u8a00\u7684\u6570\u5b57\u7c7b\u578b\u8fd8\u6709\u4e24\u4e2a\u4fdd\u7559\u5b57\uff0c\u5373 NaN \u548c Infinity \uff0c\u8fd9\u4e24\u8005\u5206\u522b\u4ee3\u8868\u201c\u4e0d\u662f\u6570\u5b57\u201d\u548c\u201c\u65e0\u7a77\u5927\u201d\u3002 NaN \u901a\u5e38\u662f\u4e0d\u5408\u6cd5\u8fd0\u7b97\u7684\u7ed3\u679c\uff0c\u800c\u4e14 NaN \u53c2\u4e0e\u7684\u7b97\u672f\u8fd0\u7b97\u53ea\u4f1a\u5f97\u5230 NaN \uff1a 1 2 3 4 5 6 1 / \"tql\" ; // NaN Math . sqrt ( - 1 ); // NaN parseInt ( \"Not a number\" ); // NaN 1 + NaN ; // NaN NaN + NaN ; // NaN NaN \u8fd8\u9700\u8981\u6ce8\u610f\u4e00\u70b9\uff0c\u5c31\u662f NaN \u548c\u6bd4\u8f83\u8fd0\u7b97\u7b26\u7684\u8fde\u7528\uff1a 1 2 3 4 NaN < 1 ; // false NaN > 1 ; // false NaN === NaN ; // false NaN !== NaN ; // true \u8fd9\u5c31\u4ee3\u8868\u6211\u4eec\u5728\u5224\u5b9a\u4e00\u4e2a\u503c\u662f\u5426\u662f NaN \u7684\u65f6\u5019 \u4e0d\u80fd \u4f7f\u7528\u8fd0\u7b97\u7b26 === \uff0c\u800c\u5e94\u5f53\u4f7f\u7528 isNaN \u51fd\u6570\u3002\u8fd9\u4e2a\u51fd\u6570 \u9996\u5148\u4f1a\u5c06\u53c2\u6570\u5f3a\u5236\u8f6c\u5316\u4e3a\u6570\u5b57\u7c7b\u578b \uff0c\u5e76\u4e14\u53ea\u5728\u8f6c\u5316\u7ed3\u679c\u4e3a NaN \u7684\u65f6\u5019\u8fd4\u56de true \uff1a 1 2 3 4 5 6 7 isNaN ( NaN ); // true isNaN ( 3 ); // false isNaN ( \"2.4\" ); // false, \"2.4\" can be converted to 2.4 isNaN ( \"No\" ); // true, \"No\" can never be converted to legal number isNaN ( true ); // false, true can be converted to 1 \u5f3a\u5236\u7c7b\u578b\u8f6c\u6362 JavaScript \u8fdb\u884c\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u7684\u903b\u8f91\u4f1a\u5199\u5728\u672c\u8282\u672b\u5c3e\uff0c\u4f46\u6211\u4eec\u4f9d\u7136\u5efa\u8bae\u521d\u5b66\u8005\u5148\u9605\u8bfb\u6b63\u6587\uff0c\u5b66\u4f1a\u7f16\u5199\u5b89\u5168\u7684\u4ee3\u7801\u540e\u518d\u53bb\u6df1\u5165\u7406\u89e3\u3002 \u6211\u4eec\u5728\u4ee3\u7801\u4e4b\u4e2d\u5f88\u5c11\u76f4\u63a5\u5199\u51fa NaN \u5b57\u9762\u91cf\uff0c\u4f46\u662f\u6211\u4eec\u4f9d\u7136\u9700\u8981\u6ce8\u610f\u5404\u79cd\u8fd0\u7b97\u53ef\u80fd\u4ea7\u751f\u7684 NaN \uff0c\u5e76\u4e14\u5408\u7406\u4f7f\u7528 isNaN \u51fd\u6570\u8fdb\u884c\u5206\u652f\u5224\u5b9a\uff0c\u4ee5\u9632\u6b62\u7a0b\u5e8f\u51fa\u73b0 bug\u3002 Infinity \u4ee3\u8868\u65e0\u7a77\u5927\uff0c\u5982\u679c\u8fd0\u7b97\u7ed3\u679c\u8d85\u51fa\u4e86 JavaScript \u80fd\u5904\u7406\u7684\u8303\u56f4\uff0c\u5219\u4f1a\u5f97\u5230 Infinity \u3002 Infinity \u6240\u53c2\u4e0e\u7684\u7b97\u672f\u8fd0\u7b97\u4e5f\u4e00\u822c\u7b26\u5408\u6570\u5b66\u76f4\u89c9\uff0c\u5982\u679c\u6d89\u53ca\u5230\u4e0d\u5b9a\u5f0f\uff08\u96f6\u4e58\u4ee5\u65e0\u7a77\u5927\u3001\u65e0\u7a77\u5927\u51cf\u65e0\u7a77\u5927\u7b49\uff09\u5219\u4f1a\u5f97\u5230 NaN \uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 1 / 0 ; // Infinity - 1 / 0 ; // -Infinity 1e100000 ; // Infinity 0 / 0 ; // NaN Infinity + 1 ; // Infinity Infinity - 1 ; // Infinity Infinity * 2 ; // Infinity Infinity / 3 ; // Infinity Infinity * 0 ; // NaN Infinity - Infinity ; // NaN Infinity === Infinity ; // true JavaScript \u7684\u5b57\u7b26\u4e32\u652f\u6301\u4f7f\u7528\u52a0\u6cd5\u8fd0\u7b97\u7b26\u62fc\u63a5\uff0c\u540c\u65f6\u4e5f\u652f\u6301\u76f8\u5f53\u591a\u7684\u5e38\u7528\u51fd\u6570\u3002\u8fd9\u91cc\u5c55\u793a\u4e00\u90e8\u5206\uff1a 1 2 3 4 5 \"a\" + \"b\" ; // \"ab\" \"hello\" . charAt ( 0 ); // \"h\" \"hello, Mike\" . replace ( \"Mike\" , \"Mart\" ); // \"hello, Mart\" \"hello, Mike\" . indexOf ( \"Mike\" ); // 7 \"hello\" . substring ( 2 , 3 ); // \"l\" \u8fd9\u91cc\u9700\u8981\u4ecb\u7ecd\u7684\u662f \u6a21\u677f\u5b57\u7b26\u4e32 \uff0c\u8fd9\u79cd\u5b57\u7b26\u4e32\u4e0d\u4f7f\u7528\u5355\u5f15\u53f7\u6216\u53cc\u5f15\u53f7\u5305\u56f4\uff0c\u800c\u662f\u4f7f\u7528\u53cd\u5f15\u53f7\u5305\u56f4\uff0c\u5185\u90e8\u53ef\u4ee5\u4f7f\u7528 ${} \u5757\u5305\u56f4\u4ee3\u7801\u5757\uff0cJavaScript \u4f1a\u8ba1\u7b97\u51fa\u4ee3\u7801\u5757\u7684\u7ed3\u679c\u5e76\u5c06\u5176\u8f6c\u5316\u4e3a\u5b57\u7b26\u4e32\u5d4c\u5165\u6a21\u677f\u4e4b\u4e2d\u3002\u8fd9\u4e2a\u8bed\u6cd5\u7684\u597d\u5904\u5728\u4e8e\u4e0d\u9700\u8981\u624b\u5199\u5f88\u591a + \u6765\u624b\u52a8\u62fc\u63a5\u5b57\u7b26\u4e32\uff1a 1 2 let i = 1 ; `The val of i + 1 is ${ i + 1 } .` ; // \"The val of i + 1 is 2.\" \u53e6\u5916\u6ce8\u610f\u4e00\u70b9\uff0cJavaScript \u5141\u8bb8\u4efb\u610f\u53d8\u91cf\u548c\u5b57\u7b26\u4e32\u76f8\u52a0\u3002\u800c\u6700\u5e38\u7528\u7684\u662f\u5b57\u7b26\u4e32\u5728\u52a0\u53f7\u5de6\u4fa7\uff0c\u5176\u4ed6\u53d8\u91cf\u5728\u52a0\u53f7\u53f3\u4fa7\u7684\u5f62\u5f0f\uff0c\u8fd9\u79cd\u8fd0\u7b97\u7684\u903b\u8f91\u662f\u5c06\u5176\u4ed6\u53d8\u91cf\u8f6c\u5316\u4e3a\u5b57\u7b26\u4e32\u540e\u8fdb\u884c\u5b57\u7b26\u4e32\u62fc\u63a5\u3002\u8fd9\u5c31\u8bde\u751f\u4e86\u4e00\u4e2a trick\uff0c\u5373\u7528\u4e00\u4e2a\u7a7a\u5b57\u7b26\u4e32\u52a0\u4e00\u4e2a\u53d8\u91cf\uff0c\u5c31\u53ef\u4ee5\u65b9\u4fbf\u5730\u5c06\u8fd9\u4e2a\u53d8\u91cf\u8f6c\u5316\u4e3a\u5b57\u7b26\u4e32\uff1a 1 2 3 4 \"4\" + 3 ; // \"43\" \"\" + 3 ; // \"3\" \"\" + true ; // \"true\" \u800c\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u6570\u5b57\u5219\u53ef\u4ee5\u4f7f\u7528 parseInt \u548c parseFloat \u51fd\u6570\uff0c\u8fd9\u91cc\u8bb2\u89e3 parseInt \u51fd\u6570\u3002\u8fd9\u4e2a\u51fd\u6570\u63a5\u53d7\u4e24\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u662f\u9700\u8981\u8f6c\u6362\u7684\u5b57\u7b26\u4e32\uff0c\u7b2c\u4e8c\u4e2a\u662f\u8f6c\u6362\u7684\u8fdb\u5236\u6570\u3002\u4e0d\u4f20\u5165\u8fd9\u4e2a\u53c2\u6570\u7684\u65f6\u5019\u9ed8\u8ba4\u6839\u636e\u5b57\u7b26\u4e32\u683c\u5f0f\u786e\u5b9a\uff0c\u5982\u679c\u4ee5 0x \u5f00\u5934\uff0c\u5219\u6309\u7167\u5341\u516d\u8fdb\u5236\u8f6c\u6362\uff0c\u5176\u4ed6\u5219\u6309\u7167\u5341\u8fdb\u5236\u8f6c\u6362\uff1a 1 2 3 4 5 6 parseInt ( \"132\" ); // 132 parseInt ( \"0x10\" ); // 16 parseInt ( \"010\" ); // 10 parseInt ( \"365\" , 10 ); // 365 parseInt ( \"10\" , 4 ); // 4 \u516b\u8fdb\u5236\u95ee\u9898 \u5728\u8001\u7248\u672c\u7684 parseInt \u4e4b\u4e2d\uff0c\u5728\u4e0d\u4f20\u5165\u7b2c\u4e8c\u4e2a\u53c2\u6570\u7684\u65f6\u5019\uff0c\u4ee5 0 \u5f00\u5934\u7684\u5b57\u7b26\u4e32\u4f1a\u88ab\u6309\u7167\u516b\u8fdb\u5236\u8f6c\u6362\uff1a 1 parseInt ( \"010\" ); // In old version: 8 \u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u9002\u914d\u95ee\u9898\u51fa\u73b0\uff0c\u5efa\u8bae\u4f7f\u7528\u8fd9\u4e2a\u51fd\u6570\u7684\u65f6\u5019\u4e0d\u4f7f\u7528\u5176\u9ed8\u8ba4\u8fdb\u5236\uff0c\u800c\u662f\u624b\u52a8\u901a\u8fc7\u7b2c\u4e8c\u4e2a\u53c2\u6570\u6307\u5b9a\u3002 parseInt \u51fd\u6570\u5728\u8f6c\u6362\u5931\u8d25\u7684\u65f6\u5019\u4f1a\u8fd4\u56de NaN \u3002\u4f46\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u4e2a\u51fd\u6570\u7684\u903b\u8f91\u662f\u9010\u4e2a\u8bfb\u53d6\u5b57\u7b26\u5e76\u5b9e\u65f6\u8f6c\u6362\uff0c\u9047\u5230\u4e0d\u80fd\u8f6c\u6362\u7684\u5b57\u7b26\u7684\u65f6\u5019\u8fd4\u56de\u5df2\u7ecf\u8f6c\u6362\u597d\u7684\u7ed3\u679c\u800c\u975e NaN \uff1a 1 2 parseInt ( \"hello\" , 10 ); // NaN parseInt ( \"123abc\" , 10 ); // 123 \u5bf9\u8c61\u548c\u6570\u7ec4 \u00b6 \u5bf9\u8c61\u7c7b\u578b\u662f JavaScript \u8bed\u8a00\u4e4b\u4e2d\u6700\u5e38\u7528\u7684\u590d\u5408\u7c7b\u578b\uff0c\u5176\u7531\u82e5\u5e72\u7684\u952e\u503c\u5bf9\u7ec4\u6210\uff0c\u6bcf\u4e00\u4e2a\u952e\u503c\u5bf9\u4e4b\u4e2d\u503c\u53ef\u4ee5\u662f\u4efb\u4f55\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u540c\u65f6\u4e5f\u5141\u8bb8\u5bf9\u8c61\u7684\u5d4c\u5957\u3002\u5bf9\u8c61\u5b57\u9762\u91cf\u4f7f\u7528\u82b1\u62ec\u53f7\u8868\u793a\uff0c\u82b1\u62ec\u53f7\u5185\u90e8\u952e\u503c\u5bf9\u4f7f\u7528\u9017\u53f7\u5206\u9694\uff0c\u6bcf\u4e00\u4e2a\u952e\u503c\u5bf9\u7684\u952e\u548c\u503c\u4f7f\u7528\u5192\u53f7\u5206\u9694\uff1a 1 2 3 4 5 6 7 8 let obj = { foo : 0 , bar : \"bar\" , foobar : { a : 1 , b : \"I am a value\" , }, }; \u6bcf\u4e00\u4e2a\u952e\u503c\u5bf9\u4e4b\u4e2d\u7684\u952e\u79f0\u4e3a\u8fd9\u4e2a\u5bf9\u8c61\u7684 \u5c5e\u6027 \u3002\u8bbf\u95ee\u7ed9\u5b9a\u5bf9\u8c61\u7684\u5c5e\u6027\u4f7f\u7528 . \u8fd0\u7b97\u7b26\uff1a 1 2 let obj = { foo : 1 , }; obj . foo ; // 1 JavaScript \u7684\u6570\u7ec4\u4f7f\u7528\u4e2d\u62ec\u53f7\uff0c\u5404\u5143\u7d20\u4e4b\u95f4\u4f7f\u7528\u9017\u53f7\u5206\u9694\uff0c\u4e14 JavaScript \u4e0d\u8981\u6c42\u6570\u7ec4\u5143\u7d20\u90fd\u662f\u540c\u4e00\u7c7b\u578b\u3002\u8bbf\u95ee\u6570\u7ec4\u7684\u67d0\u4e2a\u5143\u7d20\u4f7f\u7528 [] \u8fd0\u7b97\u7b26\uff1a 1 2 let arr = [ 1 , false , \"test\" , { foo : 1 , }]; arr [ 2 ]; // \"test\" JavaScript \u6570\u7ec4\u6709\u5185\u7f6e\u5c5e\u6027 length \uff0c\u5176\u503c\u4e3a\u53ef\u7528\u7684\u6700\u5927\u7d22\u5f15\u6570\u52a0\u4e00\uff1a 1 2 3 let arr = [ 1 ]; arr [ 100 ] = 2 ; arr . length ; // 101 JavaScript \u6570\u7ec4\u7684\u771f\u6b63\u5f3a\u5927\u4e4b\u5904\u5728\u4e8e\u5176\u5185\u7f6e\u7684\u65b9\u6cd5\uff0c\u9664\u53bb\u5e38\u7528\u7684\u53d6\u7d22\u5f15\u3001\u5207\u7247\u65b9\u6cd5\u4e4b\u5916\uff0c\u8fd8\u652f\u6301\u4f20\u5165\u56de\u8c03\u51fd\u6570\u7684\u904d\u5386\u3001\u6620\u5c04\u3001\u8fed\u4ee3\u3001\u7b5b\u9009\u3001\u6392\u5e8f\u65b9\u6cd5\u3002\u8fd9\u91cc\u5148\u4ecb\u7ecd\u524d\u9762\u7684\u7b80\u5355\u65b9\u6cd5\uff0c\u6d89\u53ca\u5230\u56de\u8c03\u51fd\u6570\u65b9\u6cd5\u5219\u4f1a\u5728\u56de\u8c03\u6a21\u5f0f\u8bb2\u89e3\u5b8c\u6bd5\u540e\u8bb2\u89e3\uff1a 1 2 3 4 5 let arr = [ 1 , 2 , 3 ]; arr . indexOf ( 1 ); // 0 arr . indexOf ( 4 ); // -1 arr . slice ( 1 , 2 ); // [2] arr . join ( \".\" ); // \"1.2.3\" \u6570\u636e\u5b89\u5168 \u4f7f\u7528\u6570\u7ec4\u5185\u7f6e\u65b9\u6cd5\u7684\u65f6\u5019\uff0c\u4e00\u5b9a\u8981\u6ce8\u610f \u8fd9\u4e2a\u65b9\u6cd5\u662f\u5426\u4f1a\u5f71\u54cd\u539f\u6570\u7ec4 \u3002\u6bd4\u5982\u8bf4 slice \u65b9\u6cd5\u83b7\u53d6\u7684\u662f\u4e00\u4e2a\u5168\u65b0\u7684\u6570\u7ec4\uff0c\u5728\u8fd9\u4e2a\u65b0\u6570\u7ec4\u4e0a\u64cd\u4f5c\u4e0d\u4f1a\u5f71\u54cd\u539f\u6709\u6570\u7ec4\u3002\u800c pop \u65b9\u6cd5\u5219\u4f1a\u5f71\u54cd\u539f\u6709\u6570\u7ec4\u3002 1 2 3 4 5 6 7 let arr = [ 1 , 2 , 3 ]; let slicedArr = arr . slice ( 1 , 3 ); slicedArr [ 0 ] = 1 ; console . log ( arr ); // [1, 2, 3] arr . pop (); console . log ( arr ); // [1, 2] \u5982\u679c\u6709\u4e9b\u65b9\u6cd5\u4f1a\u5f71\u54cd\u5230\u539f\u6709\u6570\u7ec4\u800c\u4f60\u5e76\u4e0d\u60f3\u8fd9\u6837\u505a\uff0c\u8bf7\u4e00\u5b9a\u8981\u5728\u8c03\u7528\u65b9\u6cd5\u524d\u521b\u5efa\u526f\u672c\u4ee5\u9632\u6b62\u6570\u636e\u4e22\u5931\u3002\u6b64\u5916\uff0c\u4e3a\u4e86\u517b\u6210\u826f\u597d\u7f16\u7801\u4e60\u60ef\uff0c\u5728\u4f7f\u7528\u8bed\u8a00\u5185\u7f6e\u7684\u65b9\u6cd5\uff0c\u4e43\u81f3\u7b2c\u4e09\u65b9\u5e93\u7684\u65b9\u6cd5\u7684\u65f6\u5019\uff0c\u4e00\u5b9a \u4ed4\u7ec6\u9605\u8bfb\u6587\u6863 \u4ee5\u786e\u5b9a\u8fd9\u4e9b\u65b9\u6cd5\u7684\u884c\u4e3a\u7b26\u5408\u9884\u671f\u4e14\u53ef\u63a7\u3002 \u7a7a\u7c7b\u578b \u00b6 undefined \u7c7b\u578b\u548c null \u7c7b\u578b\u88ab\u79f0\u4e3a\u7a7a\u7c7b\u578b\u3002\u4e24\u8005\u7684\u533a\u522b\u53ef\u4ee5\u76f4\u89c2\u7406\u89e3\u4e3a\u201c\u7a7a\u7684\u7a0b\u5ea6\u4e0d\u4e00\u6837\u201d\uff0c null \u662f\u7a7a\u7684\uff0c\u4f46\u5b83\u662f\u5b58\u5728\u7684\uff0c\u800c undefined \u4e0d\u5b58\u5728\uff0c\u5b83\u6ca1\u6709\u88ab\u5b9a\u4e49\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u5728\u5b9e\u9645\u7684 JavaScript \u7f16\u7a0b\u4e4b\u4e2d\uff0c\u6211\u4eec\u66f4\u5bb9\u6613\u9047\u5230 undefined \u3002\u4ee5\u4e0b\u60c5\u51b5\u5747\u4f1a\u5f97\u5230 undefined \uff1a \u8bbf\u95ee\u6ca1\u6709\u8d4b\u503c\u7684\u53d8\u91cf \u6570\u7ec4\u8d8a\u754c\u8bbf\u95ee \u8bbf\u95ee\u5bf9\u8c61\u4e0a\u4e0d\u5b58\u5728\u7684\u5c5e\u6027 \u83b7\u53d6\u6ca1\u6709\u8fd4\u56de\u503c\u7684\u51fd\u6570\u7684\u8fd4\u56de\u503c 1 2 3 4 5 6 7 8 9 let x ; let arr = [ 1 , 2 ]; let obj = { foo : 1 , }; function foo () { } x ; // undefined arr [ 5 ]; // undefined obj . bar ; // undefined foo (); // undefined \u5728 undefined \u4e0a\u8bbf\u95ee\u5c5e\u6027\u4f1a\u629b\u51fa\u9519\u8bef\uff1a 1 undefined . anyProp ; // Uncaught TypeError: Cannot read properties of undefined \u8fd9\u4e2a\u9519\u8bef\u4f1a\u5728 JavaScript \u7f16\u7a0b\u7684\u65f6\u5019\u7ecf\u5e38\u9047\u5230\uff0c\u800c\u4e14\u539f\u56e0\u5e38\u5e38\u662f\u7c7b\u4f3c\u5982\u4e0b\u8bed\u53e5\u7684\u8fde\u7eed\u5c5e\u6027\u8bbf\u95ee\uff1a 1 response . data . propList [ 3 ]. name ; \u53ea\u8981\u8fd9\u91cc\u67d0\u4e00\u4e2a\u5c5e\u6027\u8bbf\u95ee\u8bbf\u95ee\u5230\u4e86\u4e0d\u5b58\u5728\u7684\u5c5e\u6027\u6216\u8005\u6570\u7ec4\u8d8a\u754c\uff0c\u90a3\u4e48\u4e0b\u4e00\u4e2a\u5c5e\u6027\u8bbf\u95ee\u5c06\u4f1a\u8bbf\u95ee undefined \u4e0a\u7684\u5c5e\u6027\uff0c\u5bfc\u81f4\u7a0b\u5e8f\u62a5\u9519\u9000\u51fa\u3002 \u800c\u4e00\u79cd\u89e3\u51b3\u65b9\u5f0f\u662f\u6bcf\u8fdb\u884c\u4e00\u6b21\u5c5e\u6027\u8bbf\u95ee\u5c31\u5224\u5b9a\u5176\u662f\u5426\u83b7\u5f97\u4e86 undefined \uff0c\u5982\u679c\u662f\uff0c\u5219\u7ec8\u6b62\u7ee7\u7eed\u7684\u5c5e\u6027\u8bbf\u95ee\u3002\u800c\u8f83\u65b0\u7684 JavaScript \u8bed\u8a00\u89c4\u8303\u4e4b\u4e2d\u5f15\u5165\u4e86 ?. \u8fd0\u7b97\u7b26\uff0c\u5176\u4f5c\u7528\u662f \u5728\u8fd9\u4e2a\u5c5e\u6027\u8bbf\u95ee\u51fa\u9519\u7684\u65f6\u5019\u4e2d\u65ad\u5c5e\u6027\u8bbf\u95ee\u5e76\u8fd4\u56de undefined \u3002 \u6bd4\u5982\u4e0a\u8ff0\u4ee3\u7801\u4e4b\u4e2d\uff0c\u5982\u679c\u4f60\u5df2\u7ecf\u77e5\u9053 response \u5f88\u6709\u53ef\u80fd\u6ca1\u6709 data \u5c5e\u6027\uff0c\u90a3\u4e48\u53ef\u4ee5\u8fd9\u6837\u5199\uff1a 1 response . data ? . propList [ 3 ]. name ; \u5982\u679c response \u786e\u5b9e\u6ca1\u6709 data \u5c5e\u6027\uff0c\u90a3\u4e48\u6574\u4e2a\u5f0f\u5b50\u7684\u7ed3\u679c\u5c31\u662f undefined \uff0c\u4f46\u7a0b\u5e8f\u5e76\u4e0d\u4f1a\u62a5\u9519\u9000\u51fa\u3002 \u95ee\u53f7\u5e94\u8be5\u5728\u54ea\u91cc \u7b54\u6848\u662f\uff0c ?. \u5e94\u5f53\u51fa\u73b0\u5728\u53ef\u80fd\u5bfc\u81f4\u8bbf\u95ee undefined \u7684\u5c5e\u6027\u8bbf\u95ee\u4e0a\uff0c\u800c\u975e\u53ef\u80fd\u5bfc\u81f4\u8bbf\u95ee\u7ed3\u679c\u4e3a undefined \u7684\u5c5e\u6027\u8bbf\u95ee\u4e0a\u3002 \u6bd4\u5982\u8bf4\u4e0d\u786e\u5b9a response \u662f\u5426\u6709 data \u5c5e\u6027\u7684\u65f6\u5019\uff0c\u5c31\u662f\u4e0d\u786e\u5b9a response.data \u662f\u5426\u4e3a undefined \uff0c\u90a3\u4e48\u5c31\u5e94\u8be5\u5728\u540e\u7eed\u7684\u8bbf\u95ee\u4f7f\u7528 ?. \u4ee3\u66ff . \u3002 \u5982\u679c\u5199\u6210\uff1a 1 response ? . data . propList [ 3 ]. name ; \u5b9e\u9645\u4e0a\u5728 response \u786e\u5b9e\u6ca1\u6709 data \u5c5e\u6027\u7684\u65f6\u5019\u7a0b\u5e8f\u8fd8\u662f\u4f1a\u56e0\u4e3a\u8bbf\u95ee undefined \u7684\u5c5e\u6027\u800c\u62a5\u9519\u3002 \u4f60\u751a\u81f3\u53ef\u4ee5\u8fd9\u6837\u5c1d\u8bd5 ?. \u8fd0\u7b97\u7b26\uff1a 1 undefined ? . anyProp ; // undefined \u8fd9\u4e00\u6b21\u7a0b\u5e8f\u4e0d\u4f1a\u62a5\u9519\u3002 \u800c null \u76f8\u8f83\u4e8e undefined \u5219\u8f83\u4e3a\u5c11\u89c1\u3002\u5176\u4e00\u4e2a\u5e38\u89c1\u7684\u5e94\u7528\u573a\u666f\u662f\u5728 React \u6846\u67b6\u91cc\u8868\u793a\u8fd9\u91cc\u4e0d\u9700\u8981\u6e32\u67d3\uff1a 1 2 3 4 5 6 < div > < p > Hello ! < /p> { needToRender ? < p > This part is necessary ! < /p> : null } < /div> \u8fd9\u4e00\u90e8\u5206\u53ef\u4ee5\u53c2\u8003 React \u76f8\u5173\u6587\u6863\u3002 \u800c\u76f4\u63a5\u8bbf\u95ee null \u4e0a\u7684\u5c5e\u6027\u4e5f\u4f1a\u62a5\u9519\u3002\u540c\u65f6\uff0c\u5728\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u7684\u65f6\u5019 ?. \u4f9d\u7136\u53ef\u4ee5\u4f7f\u7528\uff1a 1 2 null . anyProp ; // Uncaught TypeError: Cannot read properties of null null ? . anyProp ; // undefined \u4e00\u4e9b\u548c\u7a7a\u7c7b\u578b\u76f8\u5173\u7684\u8bed\u6cd5\u7cd6 \u5728\u5b9e\u9645\u7684 JavaScript \u5de5\u7a0b\u4e4b\u4e2d\uff0c\u6211\u4eec\u5e38\u5e38\u4f1a\u9047\u5230\u7c7b\u4f3c\u8fd9\u6837\u7684\u9700\u6c42\uff1a \u5c06\u67d0\u4e00\u4e2a\u53d8\u91cf\u8bbe\u5b9a\u4e3a\u67d0\u4e00\u4e2a\u503c\uff0c\u5f53\u7ed9\u5b9a\u503c\u672a\u5b9a\u4e49\u7684\u65f6\u5019\uff0c\u5219\u8bbe\u5b9a\u4e3a\u67d0\u4e00\u4e2a\u9ed8\u8ba4\u503c\u3002 \u6bd4\u5982\u8bf4\u8981\u5c06\u5b57\u7b26\u4e32 x \u8bbe\u5b9a\u4e3a\u5b57\u7b26\u4e32 y \u7684\u503c\uff0c\u4f46\u5728 y \u672a\u5b9a\u4e49\u6216\u8005\u4e3a\u7a7a\u5b57\u7b26\u4e32\u7684\u65f6\u5019 x \u8bbe\u5b9a\u4e3a\u9ed8\u8ba4\u503c \"default\" \u3002\u4e00\u822c\u800c\u8a00\u53ef\u4ee5\u5199\u4e3a\uff1a 1 2 if ( y === undefined || y === \"\" ) x = \"default\" ; else x = y ; \u4f46\u5b9e\u9645\u4e0a JavaScript \u7684\u903b\u8f91\u8fd0\u7b97\u6709\u4e00\u4e2a\u7c7b\u4f3c\u8bed\u6cd5\u7cd6\u7684\u5199\u6cd5\u53ef\u4ee5\u5b8c\u6210\u8fd9\u4e00\u529f\u80fd\uff1a 1 x = y || \"default\" ; \u6ce8\u610f\u4e0d\u7b49\u4ef7\u8f6c\u6362 \u5b9e\u9645\u4e0a\u8fd9\u79cd\u8bed\u6cd5\u7cd6\u5199\u6cd5\u548c\u4e4b\u524d\u7684 if-else \u5199\u6cd5 \u5e76\u4e0d\u5b8c\u5168\u7b49\u4ef7 \uff0c\u5177\u4f53\u539f\u56e0\u53ef\u4ee5\u53c2\u9605 JavaScript \u7684\u9b54\u6cd5\u6307\u5bfc\u4e66\u3002 \u8fd9\u79cd\u5199\u6cd5\u8981\u6c42 y \u4e00\u5b9a\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4f46\u8003\u8651\u5230\u5927\u591a\u6570\u5de5\u7a0b\u573a\u666f\u4e0b y \u7684\u7c7b\u578b\u90fd\u80fd\u5f97\u5230\u4fdd\u8bc1\uff0c\u6545\u8fd8\u662f\u53ef\u4ee5\u5728\u5408\u9002\u7684\u6761\u4ef6\u4e0b\u91c7\u7528\u8fd9\u79cd\u5199\u6cd5\u3002 \u53e6\u5916\uff0c\u6709\u4e00\u4e2a\u7c7b\u4f3c\u7684\u8fd0\u7b97\u7b26\u4e3a ?? \u3002\u4e0e x = y ?? \"default\" \u7b49\u4ef7\u7684\u4ee3\u7801\u5757\u4e3a\uff1a 1 2 if ( y === undefined || y === null ) x = \"default\" ; else x = y ; \u6b64\u5916\uff0c\u8fd8\u6709\u4e00\u79cd\u5e38\u89c1\u7684\u9700\u6c42\uff1a \u68c0\u67e5\u67d0\u4e2a\u51fd\u6570\u662f\u5426\u5b9a\u4e49\uff0c\u5982\u679c\u5b9a\u4e49\uff0c\u5219\u6267\u884c\u3002 \u8fd9\u4e2a\u9700\u6c42\u53ef\u4ee5\u8fd9\u6837\u5b9e\u73b0\uff1a 1 if ( foo !== undefined ) foo (); \u800c JavaScript \u6240\u63d0\u4f9b\u7684\u4e00\u79cd\u8bed\u6cd5\u7cd6\u5199\u6cd5\u662f\uff1a 1 foo && foo (); \u4f46\u548c\u4e0a\u8ff0\u4e00\u6837\uff0c\u8fd9\u4e2a\u8f6c\u6362\u5e76\u975e\u5b8c\u5168\u7b49\u4ef7\uff0c\u4f46\u8003\u8651\u5de5\u7a0b\u5b9e\u9645\uff0c\u4e00\u822c\u800c\u8a00\u662f\u53ef\u4ee5\u91c7\u7528\u8fd9\u79cd\u5199\u6cd5\u7684\u3002 \u7a7a\u7684\u4e09\u4e2a\u5883\u754c \u9664\u53bb undefined \u548c null \uff0c\u5b9e\u9645\u4e0a\u7a7a\u5bf9\u8c61 {} \u4e5f\u662f\u7a7a\u7684\u4e00\u79cd\u3002\u4f46\u662f\u8fd9\u4e09\u4e2a\u7a7a\u7684\u5883\u754c\u5404\u6709\u4e0d\u540c\u3002 \u5982\u679c\u7528\u76d2\u5b50\u6bd4\u55bb JavaScript \u5bf9\u8c61\uff0c\u5c06\u952e\u503c\u5bf9\u6bd4\u4f5c\u76d2\u5b50\u4e2d\u7684\u7269\u54c1\u3002\u90a3\u4e48 {} \u662f\u7a7a\u76d2\u5b50\uff0c null \u662f\u8fde\u76d2\u5b50\u90fd\u6ca1\u6709\uff0c\u800c undefined \u662f\u5927\u5bb6\u90fd\u4e0d\u77e5\u9053\u76d2\u5b50\u662f\u4ec0\u4e48\u3002 \u4f46\u5b9e\u9645\u5de5\u7a0b\u4e2d\uff0c null \u548c undefined \u7684\u5dee\u8ddd\u5f88\u5c0f\uff0c\u9664\u53bb\u5f88\u7ec6\u5fae\u7684\u884c\u4e3a\u5dee\u5f02\u5916\uff08\u6bd4\u5982\u4e24\u8005\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u4e3a\u6570\u5b57\u7684\u65f6\u5019\u7ed3\u679c\u5e76\u4e0d\u4e00\u6837\uff09\uff0c\u4e24\u8005\u51e0\u4e4e\u7b49\u540c\u3002\u800c {} \u5219\u548c\u8fd9\u4e24\u8005\u5b8c\u5168\u4e0d\u540c\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbf\u95ee\u5b83\u7684\u5c5e\u6027\uff08\u867d\u7136\u8fd4\u56de undefined \uff09\uff0c\u53ef\u4ee5\u5bf9\u5b83\u505a\u66f4\u591a\u7684\u8fd0\u7b97\u3002\u5b83\u53ea\u662f\u4e00\u4e2a\u7a7a\u76d2\u5b50\uff0c\u6211\u4eec\u53ef\u4ee5\u5f80\u91cc\u9762\u653e\u4e1c\u897f\u8ba9\u5b83\u4ece\u65e0\u5230\u6709\u3002\u4f46 null, undefined \u5219\u662f\u5e72\u5e72\u51c0\u51c0\u7684\u7a7a\uff0c\u51e0\u4e4e\u65e0\u6cd5\u5229\u7528\u3002 \u90a3\u4e3a\u4ec0\u4e48 JavaScript \u7684 null \u548c undefined \u7684\u5dee\u8ddd\u5f88\u5c0f\uff0c\u4f46\u8bbe\u8ba1\u8005\u4f9d\u7136\u8981\u540c\u65f6\u8bbe\u5b9a\u8fd9\u4e24\u8005\u5462\uff1f\u8fd9\u4e2a\u95ee\u9898\u5e76\u6ca1\u6709\u786e\u5207\u7684\u89e3\u7b54\u3002 JavaScript \u7684\u9b54\u6cd5\u6307\u5bfc\u4e66 \u73b0\u5728\u6211\u4eec\u6765\u8bb2\u8ff0 JavaScript \u7684\u57fa\u7840\u8fd0\u7b97\u7b26\u7684\u4e00\u4e9b\u53cd\u76f4\u89c9\u8868\u73b0\uff0c\u4ee5\u53ca\u8fd9\u4e9b\u884c\u4e3a\u6240\u5e26\u6765\u7684\u4e00\u4e9b\u9b54\u6cd5\u3002\u6211\u4eec\u5e76\u4e0d\u5e0c\u671b\u521d\u5b66\u8005\u9605\u8bfb\u8fd9\u4e00\u90e8\u5206\uff0c\u4ee5\u9632\u5f62\u6210\u4e0d\u826f\u597d\u7684\u7f16\u7801\u4e60\u60ef\u3002 \u9996\u5148\u5173\u6ce8\u56db\u5927\u57fa\u7840\u7b97\u672f\u8fd0\u7b97\u7b26 +, -, *, / \u3002\u8fd9\u56db\u4e2a\u8fd0\u7b97\u7b26\u7684\u57fa\u672c\u903b\u8f91\u7c7b\u4f3c\uff0c\u5927\u81f4\u4e3a\uff1a \u9996\u5148\u5c06\u4e24\u8fb9\u53c2\u4e0e\u8fd0\u7b97\u7684\u53d8\u91cf\u8f6c\u5316\u4e3a\u4e94\u5927\u539f\u59cb\u7c7b\u578b \u8f6c\u6362\u5b8c\u6bd5\u540e\u5982\u679c\u6709\u67d0\u4e00\u4e2a\u53d8\u91cf\u4e3a\u5b57\u7b26\u4e32\u4e14\u8fd0\u7b97\u4e3a\u52a0\u6cd5\uff0c\u5219\u5c06\u53e6\u5916\u4e00\u4e2a\u5f3a\u5236\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u8fdb\u884c\u5b57\u7b26\u4e32\u62fc\u63a5\u8fd0\u7b97 \u5176\u4ed6\u60c5\u51b5\u5219\u662f\u5c06\u4e24\u8005\u5747\u5f3a\u5236\u8f6c\u6362\u4e3a\u6570\u5b57\u8fdb\u884c\u7b97\u672f\u8fd0\u7b97 \u90a3\u4e48\u6211\u4eec\u9996\u5148\u5173\u6ce8 \u5f3a\u5236\u8f6c\u5316\u4e3a\u4e94\u5927\u539f\u59cb\u7c7b\u578b \u7684\u903b\u8f91\uff1a \u5982\u679c\u8f6c\u5316\u53d8\u91cf\u5c31\u662f\u4e94\u5927\u539f\u59cb\u7c7b\u578b\uff0c\u5219\u8fd4\u56de\u5176\u672c\u8eab \u5982\u679c\u8f6c\u5316\u53d8\u91cf\u4e0d\u662f\u4e94\u5927\u539f\u59cb\u7c7b\u578b\uff0c\u5219\u5224\u65ad\u5176\u662f\u5426\u4e3a\u65e5\u671f Date \u7c7b\u578b \u5982\u679c\u4e3a Date \u7c7b\u578b\uff0c\u5219\u8c03\u7528\u5176 toString() \u65b9\u6cd5\u8f6c\u5316\u4e3a\u5b57\u7b26\u4e32 \u5982\u679c\u4e0d\u4e3a Date \u7c7b\u578b\uff0c\u5219\u8c03\u7528\u5176 valueOf() \u65b9\u6cd5\uff0c\u5176\u8fd4\u56de\u503c\u53c2\u4e0e\u8fd0\u7b97\u3002\u5982\u6ca1\u6709\u8be5\u65b9\u6cd5\u6216\u5176\u8fd4\u56de\u503c\u4e0d\u662f\u4e94\u5927\u57fa\u672c\u7c7b\u578b\uff0c\u5219\u8c03\u7528\u5176 toString() \u65b9\u6cd5\uff0c\u5176\u8fd4\u56de\u503c\u53c2\u4e0e\u8fd0\u7b97\u3002\u5982\u679c\u8fd8\u6ca1\u6709\u8be5\u65b9\u6cd5\u6216\u5176\u8fd4\u56de\u503c\u4e0d\u662f\u4e94\u5927\u57fa\u672c\u7c7b\u578b\uff0c\u629b\u51fa TypeError \u9519\u8bef \u800c\u56db\u5927\u57fa\u672c\u7c7b\u578b\u5f3a\u5236\u8f6c\u6362\u4e3a\u6570\u5b57\u7684\u903b\u8f91\u5982\u4e0b\uff1a undefined \u5f3a\u5236\u8f6c\u6362\u4e3a NaN \uff0c null \u5f3a\u5236\u8f6c\u6362\u4e3a 0 true \u5f3a\u5236\u8f6c\u6362\u4e3a 1 \uff0c false \u5f3a\u5236\u8f6c\u6362\u4e3a 0 \u5982\u679c\u5b57\u7b26\u4e32\u662f\u5408\u6cd5\u7684\u5341\u8fdb\u5236\u6d6e\u70b9\u6570\uff0c\u5219\u8f6c\u5316\u4e3a\u6d6e\u70b9\u6570\u3002\u5982\u679c\u5b57\u7b26\u4e32\u662f\u5408\u6cd5\u7684\u5341\u516d\u8fdb\u5236\u6570\uff0c\u5219\u6309\u7167\u5341\u516d\u8fdb\u5236\u89c4\u5219\u8f6c\u5316\u3002\u5982\u679c\u5b57\u7b26\u4e32\u53ea\u5305\u542b\u6570\u5b57\u548c\u5f00\u5934\u7684\u8d1f\u53f7\uff0c\u5219\u6309\u7167\u5341\u8fdb\u5236\u89c4\u5219\u8f6c\u5316\u3002\u5982\u679c\u662f\u7a7a\u5b57\u7b26\u4e32\uff0c\u5219\u8f6c\u5316\u4e3a 0 \u3002\u5982\u679c\u5b57\u7b26\u4e32\u4e3a \"Infinity\" \u6216\u8005 \"-Infinity\" \u5219\u5206\u522b\u8f6c\u5316\u4e3a Infinity \u548c -Infinity \u3002\u5176\u4f59\u60c5\u51b5\u8f6c\u5316\u4e3a NaN \u56db\u5927\u57fa\u672c\u7c7b\u578b\u5f3a\u5236\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u7684\u903b\u8f91\u5982\u4e0b\uff1a undefined \u5f3a\u5236\u8f6c\u6362\u4e3a \"undefined\" \uff0c null \u5f3a\u5236\u8f6c\u6362\u4e3a \"null\" true \u5f3a\u5236\u8f6c\u6362\u4e3a \"true\" \uff0c false \u5f3a\u5236\u8f6c\u6362\u4e3a \"false\" \u6570\u5b57\u5f3a\u5236\u8f6c\u5316\u4e3a\u5341\u8fdb\u5236\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\u6570\u5b57\uff0c NaN \u5f3a\u5236\u8f6c\u6362\u4e3a \"NaN\" \uff0c Infinity \u5f3a\u5236\u8f6c\u6362\u4e3a \"Infinity\" \uff0c -Infinity \u5f3a\u5236\u8f6c\u6362\u4e3a \"-Infinity\" \u53e6\u5916\u8fd8\u8981\u8bf4\u660e\u7684\u662f\uff0cJavaScript \u4e4b\u4e2d\u7684 + \u8fd0\u7b97\u7b26\u4e5f\u662f\u4e00\u79cd\u4e00\u5143\u8fd0\u7b97\u7b26\uff0c\u5176\u4f5c\u7528\u662f\u5c06\u64cd\u4f5c\u53d8\u91cf\u5f3a\u5236\u8f6c\u6362\u4e3a\u6570\u5b57\u7c7b\u578b\u3002\u800c\u8fd9\u79cd\u5f3a\u5236\u8f6c\u6362\u7684\u903b\u8f91\u4e5f\u662f\u5148\u628a\u64cd\u4f5c\u53d8\u91cf\u5f3a\u5236\u8f6c\u6362\u4e3a\u57fa\u672c\u7c7b\u578b\u540e\u518d\u5f3a\u5236\u8f6c\u6362\u4e3a\u6570\u5b57\uff1a 1 2 + \"123\" ; // 123 + []; // 0 \u8fd9\u91cc\u5bf9\u7a7a\u6570\u7ec4\u505a\u7684\u5f3a\u5236\u8f6c\u6362\u7684\u903b\u8f91\u4e3a\uff0c\u9996\u5148\u8c03\u7528 [].valueOf() \uff0c\u7ed3\u679c\u4e3a [] \uff0c\u4e0d\u662f\u57fa\u672c\u7c7b\u578b\u3002\u8fdb\u4e00\u6b65\u8c03\u7528 [].toString() \uff0c\u7ed3\u679c\u4e3a \"\" \uff0c\u662f\u57fa\u672c\u7c7b\u578b\u3002\u4ece\u800c\u518d\u5c06 \"\" \u5f3a\u5236\u8f6c\u6362\u4e3a\u6570\u5b57\u5f97\u5230 0 \u3002 \u77e5\u6653\u8fd9\u79cd\u8fd0\u7b97\u903b\u8f91\u4e4b\u540e\uff0c\u6211\u4eec\u6765\u770b\u770b\u4e00\u4e9b\u9b54\u6cd5\u8fd0\u7b97\uff0c\u8bfb\u8005\u53ef\u4ee5\u5c1d\u8bd5\u5411\u4e0a\u9762\u4e00\u6837\u5206\u6790\u8fd9\u4e9b\u8fd0\u7b97\u7684\u5185\u90e8\u54f2\u5b66\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 [] + []; // \"\" [] + {}; // \"[object Object]\" + [] + ( + []); // 0 1 + null ; // 1 1 + undefined ; // NaN 1 + new Date (); // \"1Mon Oct 04 2021 02:04:31 GMT+0800 (\u4e2d\u56fd\u6807\u51c6\u65f6\u95f4)\" + new Date (); // 1633284276012 \"90\" + 1 ; // \"901\" \"90\" - 1 ; // 89 \"Infinity\" + \"-Infinity\" ; // \"Infinity-Infinity\" \"Infinity\" - \"Infinity\" ; // NaN \"8\" * 5 ; // 40 4 / \"5\" ; // 0.8 \u4e0d\u8fc7\u6709\u4e00\u70b9\u6211\u4eec\u9700\u8981\u6ce8\u610f\uff0c\u4e5f\u5c31\u662f\u7a7a\u5bf9\u8c61 {} \u5728\u4e0d\u540c\u7684\u5e73\u53f0\u4e0a\u7684\u89e3\u6790\u662f\u4e0d\u540c\u7684\u3002\u6bd4\u5982\u8bf4\u7b97\u5f0f {} + {} \u4e2d\u7684\u7b2c\u4e00\u4e2a\u7a7a\u5bf9\u8c61\uff0c\u6709\u4e9b\u6d4f\u89c8\u5668\u4f1a\u89e3\u6790\u4e3a\u7a7a\u5bf9\u8c61\uff0c\u800c\u6709\u4e9b\u4f1a\u89e3\u6790\u4e3a\u7a7a\u4ee3\u7801\u5757\u3002\u4e3a\u4e86\u9632\u6b62\u6df7\u6dc6\uff0c\u5efa\u8bae\u52a0\u4e00\u4e2a\u5c0f\u62ec\u53f7\u5199\u6210 ({}) + ({}) \u3002 \u4e0b\u9762\u6211\u4eec\u7814\u7a76\u4e09\u4e2a\u903b\u8f91\u8fd0\u7b97\u7b26 &&, ||, ! \u3002 && \u7684\u903b\u8f91\u4e3a\uff1a \u9996\u5148\u8fd0\u7b97\u5de6\u4fa7\u7684\u8868\u8fbe\u5f0f\uff0c\u5e76\u5c06\u7ed3\u679c\u5f3a\u5236\u8f6c\u5316\u4e3a\u5e03\u5c14\u503c\uff0c\u5982\u679c\u4e3a false \uff0c\u5219\u77ed\u8def\uff08\u4e0d\u8ba1\u7b97\u53f3\u4fa7\u8868\u8fbe\u5f0f\uff09\uff0c\u8fd4\u56de\u5de6\u4fa7\u8868\u8fbe\u5f0f\u7684\u503c\uff08\u8fd4\u56de\u539f\u503c\uff0c\u4e0d\u5f3a\u5236\u8f6c\u5316\u4e3a\u5e03\u5c14\u503c\uff09 \u5426\u5219\u8ba1\u7b97\u53f3\u4fa7\u7684\u8868\u8fbe\u5f0f\uff0c\u5e76\u5c06\u7ed3\u679c\u76f4\u63a5\u8fd4\u56de || \u7684\u903b\u8f91\u7c7b\u4f3c\uff1a \u9996\u5148\u8fd0\u7b97\u5de6\u4fa7\u7684\u8868\u8fbe\u5f0f\uff0c\u5e76\u5c06\u7ed3\u679c\u5f3a\u5236\u8f6c\u5316\u4e3a\u5e03\u5c14\u503c\uff0c\u5982\u679c\u4e3a true \uff0c\u5219\u77ed\u8def\uff08\u4e0d\u8ba1\u7b97\u53f3\u4fa7\u8868\u8fbe\u5f0f\uff09\uff0c\u8fd4\u56de\u5de6\u4fa7\u8868\u8fbe\u5f0f\u7684\u503c\uff08\u8fd4\u56de\u539f\u503c\uff0c\u4e0d\u5f3a\u5236\u8f6c\u5316\u4e3a\u5e03\u5c14\u503c\uff09 \u5426\u5219\u8ba1\u7b97\u53f3\u4fa7\u7684\u8868\u8fbe\u5f0f\uff0c\u5e76\u5c06\u7ed3\u679c\u76f4\u63a5\u8fd4\u56de \u800c\u5404\u79cd\u53d8\u91cf\u8f6c\u5316\u4e3a\u5e03\u5c14\u503c\u7684\u903b\u8f91\u5982\u4e0b\uff1a undefined, null, 0, NaN, \"\", false \u8f6c\u5316\u4e3a false \u5176\u4f59\u5747\u8f6c\u5316\u4e3a true \uff08\u65e0\u8bba\u662f\u5bf9\u8c61\u8fd8\u662f\u57fa\u672c\u7c7b\u578b\uff09 \u8fd9\u4e2a\u903b\u8f91\u5b9e\u9645\u4e0a\u9020\u5c31\u4e86\u4e00\u4e2a\u76f8\u5f53\u8be1\u5f02\u7684\u8fd0\u7b97\u89c4\u5219\u3002JavaScript \u7684\u5e03\u5c14\u503c\u7c7b\u578b\u662f\u6709\u4e00\u4e2a\u5305\u88c5\u7c7b Boolean \u7684\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u8fd9\u6837\u7684\u4e00\u4e2a\u5bf9\u8c61 Boolean(false) \uff0c\u7531\u4e8e\u5176\u662f\u5bf9\u8c61\uff0c\u5176\u5f3a\u5236\u8f6c\u6362\u4e3a\u5e03\u5c14\u503c\u7684\u65f6\u5019\u4f1a\u5f97\u5230 true \u800c\u975e\u76f4\u89c9\u7684 false \u3002 \u6b64\u5916\uff0c ! \u8fd0\u7b97\u7b26\u7684\u903b\u8f91\u5219\u5f88\u7b80\u5355\uff0c\u9996\u5148\u5c06\u64cd\u4f5c\u6570\u5f3a\u5236\u8f6c\u5316\u4e3a\u5e03\u5c14\u503c\u7c7b\u578b\uff0c\u4e4b\u540e\u53d6\u53cd\u4f5c\u4e3a\u8fd4\u56de\u503c\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c\u5b9e\u9645\u4e0a\u8fd9\u4e9b\u903b\u8f91\u8fd0\u7b97\u7b26\uff0c\u53ea\u6709 ! \u4e00\u5b9a\u8fd4\u56de\u5e03\u5c14\u503c\u7c7b\u578b\u3002\u751a\u81f3\u53ef\u4ee5\u8bf4 &&, || \u5f88\u591a\u65f6\u5019\u4e0d\u8fd4\u56de\u5e03\u5c14\u503c\u7c7b\u578b\u3002 \u90a3\u4e48\u5c31\u53ef\u4ee5\u89c2\u5bdf\u8fd9\u4e9b\u8fd0\u7b97\uff1a 1 2 3 4 5 ! []; // false [] && 0 ; // 0 0 || {}; // {} ! ( new Boolean ( false )); // false \u7efc\u5408\u8fd9\u4e9b\u8fd0\u7b97\uff0c\u6211\u4eec\u6765\u770b\u770b\u4e0b\u9762\u7684\u6df7\u5408\u8fd0\u7b97\uff1a 1 !+ [] + [] +! []; // \"truefalse\" \u662f\u4e0d\u662f\u5c31\u663e\u5f97\u5f88\u5408\u7406\u4e86\uff1f \u5b9e\u9645\u4e0a\u73b0\u5728\u5df2\u7ecf\u6709\u4e00\u4e2a\u628a JavaScript \u8fd9\u4e9b\u7279\u6027\u73a9\u51fa\u65b0\u82b1\u6837\u7684\u4ee3\u7801\u5e93\u4e86\uff0c\u5373 JSFuck\uff0c\u5176\u5b97\u65e8\u4e3a\u53ea\u7528 +[]!() \u516d\u4e2a\u5b57\u7b26\u7f16\u5199\u53ef\u8fd0\u884c\u7684 JavaScript \u4ee3\u7801\u3002\u53ef\u4ee5\u8bf4 JSFuck \u4ee3\u7801\u5b8c\u5168\u4f9d\u9760 JavaScript \u7684\u8fd9\u4e9b bug \u5728\u5de5\u4f5c\u3002","title":"JavaScript \u7684\u53d8\u91cf\u4e0e\u53d8\u91cf\u7c7b\u578b"},{"location":"languages/javascript/variable/#javascript","text":"","title":"JavaScript \u7684\u53d8\u91cf\u4e0e\u53d8\u91cf\u7c7b\u578b"},{"location":"languages/javascript/variable/#_1","text":"JavaScript \u8bed\u8a00\u4e4b\u4e2d\u58f0\u660e\u53d8\u91cf\u7684\u5173\u952e\u5b57\u6709\u4e09\u4e2a\uff0c\u5206\u522b\u4e3a var, let, const \u3002\u4ece\u5b57\u9762\u610f\u4e49\u4e0a\u6765\u770b\uff0c const \u7528\u4e8e\u58f0\u660e\u5e38\u91cf\uff0c\u800c var, let \u5219\u7528\u4e8e\u58f0\u660e\u53d8\u91cf\u3002\u5728 var, let \u9009\u53d6\u7684\u95ee\u9898\u4e0a\uff0c\u7f16\u8005\u5efa\u8bae\u5c3d\u91cf\u5168\u90e8\u4f7f\u7528 let \u5173\u952e\u5b57\u58f0\u660e\u53d8\u91cf\u4ee5\u9632\u6b62\u6df7\u4e71\uff0c\u5177\u4f53\u539f\u56e0\u53ef\u4ee5\u53c2\u7167\u8bb2\u89e3 JavaScript \u51fd\u6570\u90e8\u5206\u7684 \u53d8\u91cf\u63d0\u5347 \u6ce8\u89e3\u3002 1 2 3 4 5 6 var a = 0 ; a = 1 ; // OK let b = \"Test string\" ; b = \"New string\" ; // OK const c = 0 ; c = 2 ; // Error! \u53e6\u5916\uff0c\u7531\u4e8e JavaScript \u662f\u5f31\u7c7b\u578b\u7684\uff0c\u6240\u4ee5\u91cd\u65b0\u7ed9\u53d8\u91cf\u8d4b\u503c\u7684\u65f6\u5019\u53ef\u4ee5\u6539\u53d8\u7c7b\u578b\uff1a 1 2 let weakType = 0 ; weakType = \"You are a string now!\" ; // OK","title":"\u53d8\u91cf\u58f0\u660e"},{"location":"languages/javascript/variable/#_2","text":"JavaScript \u7684\u9b54\u6cd5 JavaScript \u662f\u4e00\u4e2a\u5728\u4e24\u5468\u5de6\u53f3\u65f6\u95f4\u5c31\u8bbe\u8ba1\u5b8c\u6210\u7684\u8bed\u8a00\uff0c\u5373\u4f7f\u8fd9\u95e8\u8bed\u8a00\u7684\u8bbe\u8ba1\u8005\u6c34\u5e73\u5f88\u9ad8\uff0c\u4f46\u4e0d\u53ef\u5426\u8ba4\u7684\u662f\u5982\u6b64\u7d27\u8feb\u7684\u5de5\u671f\u4e5f\u9020\u6210\u4e86 JavaScript \u4e4b\u4e2d\u6709\u8bb8\u591a\u53cd\u76f4\u89c9\u7684\u8bbe\u8ba1\u7f3a\u9677\uff0c\u8fd9\u4e9b\u7f3a\u9677\u7f16\u8005\u4f1a\u5728\u6587\u6863\u5404\u5bf9\u5e94\u90e8\u5206\u8fdb\u884c\u8bb2\u89e3\u3002 JavaScript \u7684\u57fa\u7840\u7c7b\u578b\u548c\u57fa\u7840\u8fd0\u7b97\u7b26\u7684\u8868\u73b0\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u548c C/C++ \u8bed\u8a00\u7c7b\u4f3c\uff0c\u4f46\u662f\u7531\u4e8e JavaScript \u7684\u8bed\u8a00\u7279\u6027\u6216\u7f3a\u9677\uff0c\u8fd9\u4e9b\u57fa\u7840\u8fd0\u7b97\u7b26\u5728\u53e6\u5916\u4e00\u4e9b\u5e38\u8bc6\u4e4b\u5916\u7684\u8fd0\u7b97\u4e4b\u4e2d\u6709\u7740\u76f8\u5f53 \u8d85\u51e1\u8131\u4fd7\u7684 \u548c\u53cd\u76f4\u89c9\u7684\u8868\u73b0\u3002\u4f60\u53ef\u4ee5\u8ba4\u4e3a\u8fd9\u662f JavaScript \u7684\u8bbe\u8ba1\u7f3a\u9677\uff0c\u4e5f\u53ef\u4ee5\u8ba4\u4e3a\u662f\u8fd9\u95e8\u8bed\u8a00\u7684\u8bed\u6cd5\u7279\u6027\u3002 \u5176\u4e2d\uff0c\u5df2\u7ecf\u88ab\u4f5c\u4e3a\u8bed\u6cd5\u7279\u6027\u800c\u88ab\u5e7f\u6cdb\u8fd0\u7528\u7684\u7528\u6cd5\u5c06\u4f1a\u5728\u6b63\u6587\u4e2d\u6307\u51fa\uff0c\u800c\u5176\u4ed6\u7528\u6cd5\u5c06\u4f1a\u5728\u8fd9\u4e00\u8282\u7684\u6700\u540e\u5177\u4f53\u4ecb\u7ecd\u3002\u5982\u679c\u4f60\u662f JavaScript \u8bed\u8a00\u7684\u521d\u5b66\u8005\uff0c\u7f16\u8005\u5e76\u4e0d\u5efa\u8bae\u9605\u8bfb\u8fd9\u4e00\u90e8\u5206\uff0c\u56e0\u4e3a\u8fd9\u53ef\u80fd\u4f1a\u9020\u6210\u4e0d\u826f\u597d\u7684\u7f16\u7801\u4e60\u60ef\u548c\u7f16\u7a0b\u601d\u7ef4\u7684\u6df7\u4e71\u3002\u5c31\u521d\u5b66\u800c\u8a00\uff0c\u9605\u8bfb\u672c\u6587\u6863\u7684\u6b63\u6587\u5c31\u8db3\u4ee5\u5199\u51fa\u5b9e\u7528\u4e14\u5f3a\u5927\u7684\u4ee3\u7801\u3002\u4f46\u5982\u679c\u4f60\u60f3\u8981\u6df1\u5165\u4e86\u89e3\u8fd9\u4e00\u95e8\u8bed\u8a00\uff0c\u7f16\u8005\u8ba4\u4e3a\u7406\u89e3\u8fd9\u4e9b\u8fd0\u7b97\u7b26\u7684\u5177\u4f53\u8868\u73b0\u662f\u6709\u5fc5\u8981\u7684\u3002 JavaScript \u8bed\u8a00\u652f\u6301\u4e94\u79cd\u57fa\u672c\u7c7b\u578b\uff0c\u5373\u6570\u5b57\u3001\u5b57\u7b26\u4e32\u3001\u5e03\u5c14\u503c\u3001 undefined \u7c7b\u578b\u548c null \u7c7b\u578b\u3002\u524d\u4e09\u4e2a\u7c7b\u578b\u662f\u5bb9\u6613\u7406\u89e3\u7684\uff0c\u800c\u540e\u4e24\u8005\u5219\u4f1a\u5728\u6700\u540e\u8bb2\u89e3\u3002 \u4e00\u4e9b\u9002\u5f53\u7684\u7b80\u5316 \u5b9e\u9645\u4e0a\u6700\u65b0\u7684 JavaScript \u5177\u6709\u4e03\u79cd\u57fa\u672c\u7c7b\u578b\uff0c\u591a\u51fa\u7684\u4e24\u79cd\u4e3a Symbol \u7c7b\u578b\u548c\u5927\u6574\u6570\u7c7b\u578b\u3002\u4f46\u7531\u4e8e\u8fd9\u4e24\u8005\u5728\u5b9e\u9645\u5de5\u7a0b\u4e4b\u4e2d\u4f7f\u7528\u8f83\u5c11\uff0c\u6240\u4ee5\u672c\u6587\u6863\u4f5c\u4e3a\u5165\u95e8\u6587\u6863\u5e76\u4e0d\u4f1a\u4ecb\u7ecd\uff0c\u672c\u6587\u6863\u9ed8\u8ba4 JavaScript \u53ea\u6709\u4e94\u79cd\u57fa\u672c\u7c7b\u578b\u3002 \u5982\u679c\u9700\u8981\u5b66\u4e60\u8fd9\u4e24\u4e2a\u62d3\u5c55\u7c7b\u578b\uff0c\u53ef\u4ee5\u53c2\u8003\u6587\u6863\u672b\u7ed9\u51fa\u7684\u94fe\u63a5\u3002 \u83b7\u53d6\u6570\u636e\u7684\u7c7b\u578b\u53ef\u4ee5\u4f7f\u7528 typeof \u5173\u952e\u5b57\uff1a 1 2 let testNum = 0 ; typeof testNum ; // \"number\"","title":"\u53d8\u91cf\u7c7b\u578b"},{"location":"languages/javascript/variable/#_3","text":"JavaScript \u7684\u5e03\u5c14\u503c\u7c7b\u578b\u4ec5\u6709\u4e24\u4e2a\u53ef\u80fd\u503c\uff0c\u5373 true \u548c false \u3002\u4e0e\u5e03\u5c14\u503c\u7c7b\u578b\u76f8\u5173\u7684\u8fd0\u7b97\u4e00\u822c\u800c\u8a00\u548c C/C++ \u8bed\u8a00\u7c7b\u4f3c\uff1a 1 2 3 4 5 6 7 4 > 5 ; // false 2 !== 3 ; // true \"I\" === \"You\" ; // false false && false ; // false true || false ; // true ! false ; // true \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cJavaScript \u8bed\u8a00\u7684\u5224\u7b49\u8fd0\u7b97\u7b26\u6709 ==, === \u4e24\u79cd\uff0c\u5224\u4e0d\u7b49\u8fd0\u7b97\u7b26\u4e5f\u76f8\u5e94\u5730\u6709 !=, !== \u4e24\u79cd\u3002\u7f16\u8005\u5efa\u8bae\u5b8c\u5168\u4f7f\u7528 ===, !== \u6765\u4ee3\u66ff ==, != \uff0c\u8fd9\u662f\u56e0\u4e3a\u540e\u8005\u5728\u6bd4\u8f83\u4e4b\u524d\u53ef\u80fd\u4f1a\u53d1\u751f\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff0c\u800c\u8fd9\u79cd\u8f6c\u6362\u901a\u5e38\u4e0d\u5fc5\u8981\u4e14\u96be\u4ee5\u7406\u89e3\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u524d\u8005\u5219\u4f1a\u8fdb\u884c\u4e25\u683c\u7684\u503c\u6bd4\u8f83\uff0c\u4e0d\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\u3002 1 2 1 == true ; // true 1 === true ; // false JavaScript \u8bed\u8a00\u4e4b\u4e2d\u7684\u6570\u5b57\u4e0d\u533a\u5206\u6574\u6570\u548c\u6d6e\u70b9\u6570\uff0c\u7edf\u4e00\u4f7f\u7528\u6d6e\u70b9\u6570\u8868\u793a\u3002\u6240\u4ee5\u9664\u6cd5\u6ca1\u6709\u7c7b\u4f3c C/C++ \u7684\u5411\u4e0b\u53d6\u6574\u7684\u6027\u8d28\uff1a 1 5 / 2 ; // 2.5 \u90e8\u5206\u6570\u5b66\u76f8\u5173\u7684\u51fd\u6570\u3001\u5e38\u6570\u5747\u53ef\u4ee5\u4f7f\u7528\u5185\u7f6e\u5bf9\u8c61 Math \u8c03\u7528\uff0c\u4e0d\u8fc7\u6d89\u53ca\u5230\u7cbe\u786e\u7684\u6570\u5b66\u8ba1\u7b97\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u6ce8\u610f\u6d6e\u70b9\u6570\u8bef\u5dee\u95ee\u9898\uff1a 1 2 3 4 5 Math . PI ; // 3.141592653589793 Math . floor ( 5 / 2 ); // 2 Math . sin ( Math . PI ); // 1.2246467991473532e-16 0.1 + 0.2 ; // 0.30000000000000004 JavaScript \u8bed\u8a00\u7684\u6570\u5b57\u7c7b\u578b\u8fd8\u6709\u4e24\u4e2a\u4fdd\u7559\u5b57\uff0c\u5373 NaN \u548c Infinity \uff0c\u8fd9\u4e24\u8005\u5206\u522b\u4ee3\u8868\u201c\u4e0d\u662f\u6570\u5b57\u201d\u548c\u201c\u65e0\u7a77\u5927\u201d\u3002 NaN \u901a\u5e38\u662f\u4e0d\u5408\u6cd5\u8fd0\u7b97\u7684\u7ed3\u679c\uff0c\u800c\u4e14 NaN \u53c2\u4e0e\u7684\u7b97\u672f\u8fd0\u7b97\u53ea\u4f1a\u5f97\u5230 NaN \uff1a 1 2 3 4 5 6 1 / \"tql\" ; // NaN Math . sqrt ( - 1 ); // NaN parseInt ( \"Not a number\" ); // NaN 1 + NaN ; // NaN NaN + NaN ; // NaN NaN \u8fd8\u9700\u8981\u6ce8\u610f\u4e00\u70b9\uff0c\u5c31\u662f NaN \u548c\u6bd4\u8f83\u8fd0\u7b97\u7b26\u7684\u8fde\u7528\uff1a 1 2 3 4 NaN < 1 ; // false NaN > 1 ; // false NaN === NaN ; // false NaN !== NaN ; // true \u8fd9\u5c31\u4ee3\u8868\u6211\u4eec\u5728\u5224\u5b9a\u4e00\u4e2a\u503c\u662f\u5426\u662f NaN \u7684\u65f6\u5019 \u4e0d\u80fd \u4f7f\u7528\u8fd0\u7b97\u7b26 === \uff0c\u800c\u5e94\u5f53\u4f7f\u7528 isNaN \u51fd\u6570\u3002\u8fd9\u4e2a\u51fd\u6570 \u9996\u5148\u4f1a\u5c06\u53c2\u6570\u5f3a\u5236\u8f6c\u5316\u4e3a\u6570\u5b57\u7c7b\u578b \uff0c\u5e76\u4e14\u53ea\u5728\u8f6c\u5316\u7ed3\u679c\u4e3a NaN \u7684\u65f6\u5019\u8fd4\u56de true \uff1a 1 2 3 4 5 6 7 isNaN ( NaN ); // true isNaN ( 3 ); // false isNaN ( \"2.4\" ); // false, \"2.4\" can be converted to 2.4 isNaN ( \"No\" ); // true, \"No\" can never be converted to legal number isNaN ( true ); // false, true can be converted to 1 \u5f3a\u5236\u7c7b\u578b\u8f6c\u6362 JavaScript \u8fdb\u884c\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u7684\u903b\u8f91\u4f1a\u5199\u5728\u672c\u8282\u672b\u5c3e\uff0c\u4f46\u6211\u4eec\u4f9d\u7136\u5efa\u8bae\u521d\u5b66\u8005\u5148\u9605\u8bfb\u6b63\u6587\uff0c\u5b66\u4f1a\u7f16\u5199\u5b89\u5168\u7684\u4ee3\u7801\u540e\u518d\u53bb\u6df1\u5165\u7406\u89e3\u3002 \u6211\u4eec\u5728\u4ee3\u7801\u4e4b\u4e2d\u5f88\u5c11\u76f4\u63a5\u5199\u51fa NaN \u5b57\u9762\u91cf\uff0c\u4f46\u662f\u6211\u4eec\u4f9d\u7136\u9700\u8981\u6ce8\u610f\u5404\u79cd\u8fd0\u7b97\u53ef\u80fd\u4ea7\u751f\u7684 NaN \uff0c\u5e76\u4e14\u5408\u7406\u4f7f\u7528 isNaN \u51fd\u6570\u8fdb\u884c\u5206\u652f\u5224\u5b9a\uff0c\u4ee5\u9632\u6b62\u7a0b\u5e8f\u51fa\u73b0 bug\u3002 Infinity \u4ee3\u8868\u65e0\u7a77\u5927\uff0c\u5982\u679c\u8fd0\u7b97\u7ed3\u679c\u8d85\u51fa\u4e86 JavaScript \u80fd\u5904\u7406\u7684\u8303\u56f4\uff0c\u5219\u4f1a\u5f97\u5230 Infinity \u3002 Infinity \u6240\u53c2\u4e0e\u7684\u7b97\u672f\u8fd0\u7b97\u4e5f\u4e00\u822c\u7b26\u5408\u6570\u5b66\u76f4\u89c9\uff0c\u5982\u679c\u6d89\u53ca\u5230\u4e0d\u5b9a\u5f0f\uff08\u96f6\u4e58\u4ee5\u65e0\u7a77\u5927\u3001\u65e0\u7a77\u5927\u51cf\u65e0\u7a77\u5927\u7b49\uff09\u5219\u4f1a\u5f97\u5230 NaN \uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 1 / 0 ; // Infinity - 1 / 0 ; // -Infinity 1e100000 ; // Infinity 0 / 0 ; // NaN Infinity + 1 ; // Infinity Infinity - 1 ; // Infinity Infinity * 2 ; // Infinity Infinity / 3 ; // Infinity Infinity * 0 ; // NaN Infinity - Infinity ; // NaN Infinity === Infinity ; // true JavaScript \u7684\u5b57\u7b26\u4e32\u652f\u6301\u4f7f\u7528\u52a0\u6cd5\u8fd0\u7b97\u7b26\u62fc\u63a5\uff0c\u540c\u65f6\u4e5f\u652f\u6301\u76f8\u5f53\u591a\u7684\u5e38\u7528\u51fd\u6570\u3002\u8fd9\u91cc\u5c55\u793a\u4e00\u90e8\u5206\uff1a 1 2 3 4 5 \"a\" + \"b\" ; // \"ab\" \"hello\" . charAt ( 0 ); // \"h\" \"hello, Mike\" . replace ( \"Mike\" , \"Mart\" ); // \"hello, Mart\" \"hello, Mike\" . indexOf ( \"Mike\" ); // 7 \"hello\" . substring ( 2 , 3 ); // \"l\" \u8fd9\u91cc\u9700\u8981\u4ecb\u7ecd\u7684\u662f \u6a21\u677f\u5b57\u7b26\u4e32 \uff0c\u8fd9\u79cd\u5b57\u7b26\u4e32\u4e0d\u4f7f\u7528\u5355\u5f15\u53f7\u6216\u53cc\u5f15\u53f7\u5305\u56f4\uff0c\u800c\u662f\u4f7f\u7528\u53cd\u5f15\u53f7\u5305\u56f4\uff0c\u5185\u90e8\u53ef\u4ee5\u4f7f\u7528 ${} \u5757\u5305\u56f4\u4ee3\u7801\u5757\uff0cJavaScript \u4f1a\u8ba1\u7b97\u51fa\u4ee3\u7801\u5757\u7684\u7ed3\u679c\u5e76\u5c06\u5176\u8f6c\u5316\u4e3a\u5b57\u7b26\u4e32\u5d4c\u5165\u6a21\u677f\u4e4b\u4e2d\u3002\u8fd9\u4e2a\u8bed\u6cd5\u7684\u597d\u5904\u5728\u4e8e\u4e0d\u9700\u8981\u624b\u5199\u5f88\u591a + \u6765\u624b\u52a8\u62fc\u63a5\u5b57\u7b26\u4e32\uff1a 1 2 let i = 1 ; `The val of i + 1 is ${ i + 1 } .` ; // \"The val of i + 1 is 2.\" \u53e6\u5916\u6ce8\u610f\u4e00\u70b9\uff0cJavaScript \u5141\u8bb8\u4efb\u610f\u53d8\u91cf\u548c\u5b57\u7b26\u4e32\u76f8\u52a0\u3002\u800c\u6700\u5e38\u7528\u7684\u662f\u5b57\u7b26\u4e32\u5728\u52a0\u53f7\u5de6\u4fa7\uff0c\u5176\u4ed6\u53d8\u91cf\u5728\u52a0\u53f7\u53f3\u4fa7\u7684\u5f62\u5f0f\uff0c\u8fd9\u79cd\u8fd0\u7b97\u7684\u903b\u8f91\u662f\u5c06\u5176\u4ed6\u53d8\u91cf\u8f6c\u5316\u4e3a\u5b57\u7b26\u4e32\u540e\u8fdb\u884c\u5b57\u7b26\u4e32\u62fc\u63a5\u3002\u8fd9\u5c31\u8bde\u751f\u4e86\u4e00\u4e2a trick\uff0c\u5373\u7528\u4e00\u4e2a\u7a7a\u5b57\u7b26\u4e32\u52a0\u4e00\u4e2a\u53d8\u91cf\uff0c\u5c31\u53ef\u4ee5\u65b9\u4fbf\u5730\u5c06\u8fd9\u4e2a\u53d8\u91cf\u8f6c\u5316\u4e3a\u5b57\u7b26\u4e32\uff1a 1 2 3 4 \"4\" + 3 ; // \"43\" \"\" + 3 ; // \"3\" \"\" + true ; // \"true\" \u800c\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u6570\u5b57\u5219\u53ef\u4ee5\u4f7f\u7528 parseInt \u548c parseFloat \u51fd\u6570\uff0c\u8fd9\u91cc\u8bb2\u89e3 parseInt \u51fd\u6570\u3002\u8fd9\u4e2a\u51fd\u6570\u63a5\u53d7\u4e24\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u662f\u9700\u8981\u8f6c\u6362\u7684\u5b57\u7b26\u4e32\uff0c\u7b2c\u4e8c\u4e2a\u662f\u8f6c\u6362\u7684\u8fdb\u5236\u6570\u3002\u4e0d\u4f20\u5165\u8fd9\u4e2a\u53c2\u6570\u7684\u65f6\u5019\u9ed8\u8ba4\u6839\u636e\u5b57\u7b26\u4e32\u683c\u5f0f\u786e\u5b9a\uff0c\u5982\u679c\u4ee5 0x \u5f00\u5934\uff0c\u5219\u6309\u7167\u5341\u516d\u8fdb\u5236\u8f6c\u6362\uff0c\u5176\u4ed6\u5219\u6309\u7167\u5341\u8fdb\u5236\u8f6c\u6362\uff1a 1 2 3 4 5 6 parseInt ( \"132\" ); // 132 parseInt ( \"0x10\" ); // 16 parseInt ( \"010\" ); // 10 parseInt ( \"365\" , 10 ); // 365 parseInt ( \"10\" , 4 ); // 4 \u516b\u8fdb\u5236\u95ee\u9898 \u5728\u8001\u7248\u672c\u7684 parseInt \u4e4b\u4e2d\uff0c\u5728\u4e0d\u4f20\u5165\u7b2c\u4e8c\u4e2a\u53c2\u6570\u7684\u65f6\u5019\uff0c\u4ee5 0 \u5f00\u5934\u7684\u5b57\u7b26\u4e32\u4f1a\u88ab\u6309\u7167\u516b\u8fdb\u5236\u8f6c\u6362\uff1a 1 parseInt ( \"010\" ); // In old version: 8 \u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u9002\u914d\u95ee\u9898\u51fa\u73b0\uff0c\u5efa\u8bae\u4f7f\u7528\u8fd9\u4e2a\u51fd\u6570\u7684\u65f6\u5019\u4e0d\u4f7f\u7528\u5176\u9ed8\u8ba4\u8fdb\u5236\uff0c\u800c\u662f\u624b\u52a8\u901a\u8fc7\u7b2c\u4e8c\u4e2a\u53c2\u6570\u6307\u5b9a\u3002 parseInt \u51fd\u6570\u5728\u8f6c\u6362\u5931\u8d25\u7684\u65f6\u5019\u4f1a\u8fd4\u56de NaN \u3002\u4f46\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u4e2a\u51fd\u6570\u7684\u903b\u8f91\u662f\u9010\u4e2a\u8bfb\u53d6\u5b57\u7b26\u5e76\u5b9e\u65f6\u8f6c\u6362\uff0c\u9047\u5230\u4e0d\u80fd\u8f6c\u6362\u7684\u5b57\u7b26\u7684\u65f6\u5019\u8fd4\u56de\u5df2\u7ecf\u8f6c\u6362\u597d\u7684\u7ed3\u679c\u800c\u975e NaN \uff1a 1 2 parseInt ( \"hello\" , 10 ); // NaN parseInt ( \"123abc\" , 10 ); // 123","title":"\u5e03\u5c14\u3001\u6570\u5b57\u548c\u5b57\u7b26\u4e32"},{"location":"languages/javascript/variable/#_4","text":"\u5bf9\u8c61\u7c7b\u578b\u662f JavaScript \u8bed\u8a00\u4e4b\u4e2d\u6700\u5e38\u7528\u7684\u590d\u5408\u7c7b\u578b\uff0c\u5176\u7531\u82e5\u5e72\u7684\u952e\u503c\u5bf9\u7ec4\u6210\uff0c\u6bcf\u4e00\u4e2a\u952e\u503c\u5bf9\u4e4b\u4e2d\u503c\u53ef\u4ee5\u662f\u4efb\u4f55\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u540c\u65f6\u4e5f\u5141\u8bb8\u5bf9\u8c61\u7684\u5d4c\u5957\u3002\u5bf9\u8c61\u5b57\u9762\u91cf\u4f7f\u7528\u82b1\u62ec\u53f7\u8868\u793a\uff0c\u82b1\u62ec\u53f7\u5185\u90e8\u952e\u503c\u5bf9\u4f7f\u7528\u9017\u53f7\u5206\u9694\uff0c\u6bcf\u4e00\u4e2a\u952e\u503c\u5bf9\u7684\u952e\u548c\u503c\u4f7f\u7528\u5192\u53f7\u5206\u9694\uff1a 1 2 3 4 5 6 7 8 let obj = { foo : 0 , bar : \"bar\" , foobar : { a : 1 , b : \"I am a value\" , }, }; \u6bcf\u4e00\u4e2a\u952e\u503c\u5bf9\u4e4b\u4e2d\u7684\u952e\u79f0\u4e3a\u8fd9\u4e2a\u5bf9\u8c61\u7684 \u5c5e\u6027 \u3002\u8bbf\u95ee\u7ed9\u5b9a\u5bf9\u8c61\u7684\u5c5e\u6027\u4f7f\u7528 . \u8fd0\u7b97\u7b26\uff1a 1 2 let obj = { foo : 1 , }; obj . foo ; // 1 JavaScript \u7684\u6570\u7ec4\u4f7f\u7528\u4e2d\u62ec\u53f7\uff0c\u5404\u5143\u7d20\u4e4b\u95f4\u4f7f\u7528\u9017\u53f7\u5206\u9694\uff0c\u4e14 JavaScript \u4e0d\u8981\u6c42\u6570\u7ec4\u5143\u7d20\u90fd\u662f\u540c\u4e00\u7c7b\u578b\u3002\u8bbf\u95ee\u6570\u7ec4\u7684\u67d0\u4e2a\u5143\u7d20\u4f7f\u7528 [] \u8fd0\u7b97\u7b26\uff1a 1 2 let arr = [ 1 , false , \"test\" , { foo : 1 , }]; arr [ 2 ]; // \"test\" JavaScript \u6570\u7ec4\u6709\u5185\u7f6e\u5c5e\u6027 length \uff0c\u5176\u503c\u4e3a\u53ef\u7528\u7684\u6700\u5927\u7d22\u5f15\u6570\u52a0\u4e00\uff1a 1 2 3 let arr = [ 1 ]; arr [ 100 ] = 2 ; arr . length ; // 101 JavaScript \u6570\u7ec4\u7684\u771f\u6b63\u5f3a\u5927\u4e4b\u5904\u5728\u4e8e\u5176\u5185\u7f6e\u7684\u65b9\u6cd5\uff0c\u9664\u53bb\u5e38\u7528\u7684\u53d6\u7d22\u5f15\u3001\u5207\u7247\u65b9\u6cd5\u4e4b\u5916\uff0c\u8fd8\u652f\u6301\u4f20\u5165\u56de\u8c03\u51fd\u6570\u7684\u904d\u5386\u3001\u6620\u5c04\u3001\u8fed\u4ee3\u3001\u7b5b\u9009\u3001\u6392\u5e8f\u65b9\u6cd5\u3002\u8fd9\u91cc\u5148\u4ecb\u7ecd\u524d\u9762\u7684\u7b80\u5355\u65b9\u6cd5\uff0c\u6d89\u53ca\u5230\u56de\u8c03\u51fd\u6570\u65b9\u6cd5\u5219\u4f1a\u5728\u56de\u8c03\u6a21\u5f0f\u8bb2\u89e3\u5b8c\u6bd5\u540e\u8bb2\u89e3\uff1a 1 2 3 4 5 let arr = [ 1 , 2 , 3 ]; arr . indexOf ( 1 ); // 0 arr . indexOf ( 4 ); // -1 arr . slice ( 1 , 2 ); // [2] arr . join ( \".\" ); // \"1.2.3\" \u6570\u636e\u5b89\u5168 \u4f7f\u7528\u6570\u7ec4\u5185\u7f6e\u65b9\u6cd5\u7684\u65f6\u5019\uff0c\u4e00\u5b9a\u8981\u6ce8\u610f \u8fd9\u4e2a\u65b9\u6cd5\u662f\u5426\u4f1a\u5f71\u54cd\u539f\u6570\u7ec4 \u3002\u6bd4\u5982\u8bf4 slice \u65b9\u6cd5\u83b7\u53d6\u7684\u662f\u4e00\u4e2a\u5168\u65b0\u7684\u6570\u7ec4\uff0c\u5728\u8fd9\u4e2a\u65b0\u6570\u7ec4\u4e0a\u64cd\u4f5c\u4e0d\u4f1a\u5f71\u54cd\u539f\u6709\u6570\u7ec4\u3002\u800c pop \u65b9\u6cd5\u5219\u4f1a\u5f71\u54cd\u539f\u6709\u6570\u7ec4\u3002 1 2 3 4 5 6 7 let arr = [ 1 , 2 , 3 ]; let slicedArr = arr . slice ( 1 , 3 ); slicedArr [ 0 ] = 1 ; console . log ( arr ); // [1, 2, 3] arr . pop (); console . log ( arr ); // [1, 2] \u5982\u679c\u6709\u4e9b\u65b9\u6cd5\u4f1a\u5f71\u54cd\u5230\u539f\u6709\u6570\u7ec4\u800c\u4f60\u5e76\u4e0d\u60f3\u8fd9\u6837\u505a\uff0c\u8bf7\u4e00\u5b9a\u8981\u5728\u8c03\u7528\u65b9\u6cd5\u524d\u521b\u5efa\u526f\u672c\u4ee5\u9632\u6b62\u6570\u636e\u4e22\u5931\u3002\u6b64\u5916\uff0c\u4e3a\u4e86\u517b\u6210\u826f\u597d\u7f16\u7801\u4e60\u60ef\uff0c\u5728\u4f7f\u7528\u8bed\u8a00\u5185\u7f6e\u7684\u65b9\u6cd5\uff0c\u4e43\u81f3\u7b2c\u4e09\u65b9\u5e93\u7684\u65b9\u6cd5\u7684\u65f6\u5019\uff0c\u4e00\u5b9a \u4ed4\u7ec6\u9605\u8bfb\u6587\u6863 \u4ee5\u786e\u5b9a\u8fd9\u4e9b\u65b9\u6cd5\u7684\u884c\u4e3a\u7b26\u5408\u9884\u671f\u4e14\u53ef\u63a7\u3002","title":"\u5bf9\u8c61\u548c\u6570\u7ec4"},{"location":"languages/javascript/variable/#_5","text":"undefined \u7c7b\u578b\u548c null \u7c7b\u578b\u88ab\u79f0\u4e3a\u7a7a\u7c7b\u578b\u3002\u4e24\u8005\u7684\u533a\u522b\u53ef\u4ee5\u76f4\u89c2\u7406\u89e3\u4e3a\u201c\u7a7a\u7684\u7a0b\u5ea6\u4e0d\u4e00\u6837\u201d\uff0c null \u662f\u7a7a\u7684\uff0c\u4f46\u5b83\u662f\u5b58\u5728\u7684\uff0c\u800c undefined \u4e0d\u5b58\u5728\uff0c\u5b83\u6ca1\u6709\u88ab\u5b9a\u4e49\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u5728\u5b9e\u9645\u7684 JavaScript \u7f16\u7a0b\u4e4b\u4e2d\uff0c\u6211\u4eec\u66f4\u5bb9\u6613\u9047\u5230 undefined \u3002\u4ee5\u4e0b\u60c5\u51b5\u5747\u4f1a\u5f97\u5230 undefined \uff1a \u8bbf\u95ee\u6ca1\u6709\u8d4b\u503c\u7684\u53d8\u91cf \u6570\u7ec4\u8d8a\u754c\u8bbf\u95ee \u8bbf\u95ee\u5bf9\u8c61\u4e0a\u4e0d\u5b58\u5728\u7684\u5c5e\u6027 \u83b7\u53d6\u6ca1\u6709\u8fd4\u56de\u503c\u7684\u51fd\u6570\u7684\u8fd4\u56de\u503c 1 2 3 4 5 6 7 8 9 let x ; let arr = [ 1 , 2 ]; let obj = { foo : 1 , }; function foo () { } x ; // undefined arr [ 5 ]; // undefined obj . bar ; // undefined foo (); // undefined \u5728 undefined \u4e0a\u8bbf\u95ee\u5c5e\u6027\u4f1a\u629b\u51fa\u9519\u8bef\uff1a 1 undefined . anyProp ; // Uncaught TypeError: Cannot read properties of undefined \u8fd9\u4e2a\u9519\u8bef\u4f1a\u5728 JavaScript \u7f16\u7a0b\u7684\u65f6\u5019\u7ecf\u5e38\u9047\u5230\uff0c\u800c\u4e14\u539f\u56e0\u5e38\u5e38\u662f\u7c7b\u4f3c\u5982\u4e0b\u8bed\u53e5\u7684\u8fde\u7eed\u5c5e\u6027\u8bbf\u95ee\uff1a 1 response . data . propList [ 3 ]. name ; \u53ea\u8981\u8fd9\u91cc\u67d0\u4e00\u4e2a\u5c5e\u6027\u8bbf\u95ee\u8bbf\u95ee\u5230\u4e86\u4e0d\u5b58\u5728\u7684\u5c5e\u6027\u6216\u8005\u6570\u7ec4\u8d8a\u754c\uff0c\u90a3\u4e48\u4e0b\u4e00\u4e2a\u5c5e\u6027\u8bbf\u95ee\u5c06\u4f1a\u8bbf\u95ee undefined \u4e0a\u7684\u5c5e\u6027\uff0c\u5bfc\u81f4\u7a0b\u5e8f\u62a5\u9519\u9000\u51fa\u3002 \u800c\u4e00\u79cd\u89e3\u51b3\u65b9\u5f0f\u662f\u6bcf\u8fdb\u884c\u4e00\u6b21\u5c5e\u6027\u8bbf\u95ee\u5c31\u5224\u5b9a\u5176\u662f\u5426\u83b7\u5f97\u4e86 undefined \uff0c\u5982\u679c\u662f\uff0c\u5219\u7ec8\u6b62\u7ee7\u7eed\u7684\u5c5e\u6027\u8bbf\u95ee\u3002\u800c\u8f83\u65b0\u7684 JavaScript \u8bed\u8a00\u89c4\u8303\u4e4b\u4e2d\u5f15\u5165\u4e86 ?. \u8fd0\u7b97\u7b26\uff0c\u5176\u4f5c\u7528\u662f \u5728\u8fd9\u4e2a\u5c5e\u6027\u8bbf\u95ee\u51fa\u9519\u7684\u65f6\u5019\u4e2d\u65ad\u5c5e\u6027\u8bbf\u95ee\u5e76\u8fd4\u56de undefined \u3002 \u6bd4\u5982\u4e0a\u8ff0\u4ee3\u7801\u4e4b\u4e2d\uff0c\u5982\u679c\u4f60\u5df2\u7ecf\u77e5\u9053 response \u5f88\u6709\u53ef\u80fd\u6ca1\u6709 data \u5c5e\u6027\uff0c\u90a3\u4e48\u53ef\u4ee5\u8fd9\u6837\u5199\uff1a 1 response . data ? . propList [ 3 ]. name ; \u5982\u679c response \u786e\u5b9e\u6ca1\u6709 data \u5c5e\u6027\uff0c\u90a3\u4e48\u6574\u4e2a\u5f0f\u5b50\u7684\u7ed3\u679c\u5c31\u662f undefined \uff0c\u4f46\u7a0b\u5e8f\u5e76\u4e0d\u4f1a\u62a5\u9519\u9000\u51fa\u3002 \u95ee\u53f7\u5e94\u8be5\u5728\u54ea\u91cc \u7b54\u6848\u662f\uff0c ?. \u5e94\u5f53\u51fa\u73b0\u5728\u53ef\u80fd\u5bfc\u81f4\u8bbf\u95ee undefined \u7684\u5c5e\u6027\u8bbf\u95ee\u4e0a\uff0c\u800c\u975e\u53ef\u80fd\u5bfc\u81f4\u8bbf\u95ee\u7ed3\u679c\u4e3a undefined \u7684\u5c5e\u6027\u8bbf\u95ee\u4e0a\u3002 \u6bd4\u5982\u8bf4\u4e0d\u786e\u5b9a response \u662f\u5426\u6709 data \u5c5e\u6027\u7684\u65f6\u5019\uff0c\u5c31\u662f\u4e0d\u786e\u5b9a response.data \u662f\u5426\u4e3a undefined \uff0c\u90a3\u4e48\u5c31\u5e94\u8be5\u5728\u540e\u7eed\u7684\u8bbf\u95ee\u4f7f\u7528 ?. \u4ee3\u66ff . \u3002 \u5982\u679c\u5199\u6210\uff1a 1 response ? . data . propList [ 3 ]. name ; \u5b9e\u9645\u4e0a\u5728 response \u786e\u5b9e\u6ca1\u6709 data \u5c5e\u6027\u7684\u65f6\u5019\u7a0b\u5e8f\u8fd8\u662f\u4f1a\u56e0\u4e3a\u8bbf\u95ee undefined \u7684\u5c5e\u6027\u800c\u62a5\u9519\u3002 \u4f60\u751a\u81f3\u53ef\u4ee5\u8fd9\u6837\u5c1d\u8bd5 ?. \u8fd0\u7b97\u7b26\uff1a 1 undefined ? . anyProp ; // undefined \u8fd9\u4e00\u6b21\u7a0b\u5e8f\u4e0d\u4f1a\u62a5\u9519\u3002 \u800c null \u76f8\u8f83\u4e8e undefined \u5219\u8f83\u4e3a\u5c11\u89c1\u3002\u5176\u4e00\u4e2a\u5e38\u89c1\u7684\u5e94\u7528\u573a\u666f\u662f\u5728 React \u6846\u67b6\u91cc\u8868\u793a\u8fd9\u91cc\u4e0d\u9700\u8981\u6e32\u67d3\uff1a 1 2 3 4 5 6 < div > < p > Hello ! < /p> { needToRender ? < p > This part is necessary ! < /p> : null } < /div> \u8fd9\u4e00\u90e8\u5206\u53ef\u4ee5\u53c2\u8003 React \u76f8\u5173\u6587\u6863\u3002 \u800c\u76f4\u63a5\u8bbf\u95ee null \u4e0a\u7684\u5c5e\u6027\u4e5f\u4f1a\u62a5\u9519\u3002\u540c\u65f6\uff0c\u5728\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u7684\u65f6\u5019 ?. \u4f9d\u7136\u53ef\u4ee5\u4f7f\u7528\uff1a 1 2 null . anyProp ; // Uncaught TypeError: Cannot read properties of null null ? . anyProp ; // undefined \u4e00\u4e9b\u548c\u7a7a\u7c7b\u578b\u76f8\u5173\u7684\u8bed\u6cd5\u7cd6 \u5728\u5b9e\u9645\u7684 JavaScript \u5de5\u7a0b\u4e4b\u4e2d\uff0c\u6211\u4eec\u5e38\u5e38\u4f1a\u9047\u5230\u7c7b\u4f3c\u8fd9\u6837\u7684\u9700\u6c42\uff1a \u5c06\u67d0\u4e00\u4e2a\u53d8\u91cf\u8bbe\u5b9a\u4e3a\u67d0\u4e00\u4e2a\u503c\uff0c\u5f53\u7ed9\u5b9a\u503c\u672a\u5b9a\u4e49\u7684\u65f6\u5019\uff0c\u5219\u8bbe\u5b9a\u4e3a\u67d0\u4e00\u4e2a\u9ed8\u8ba4\u503c\u3002 \u6bd4\u5982\u8bf4\u8981\u5c06\u5b57\u7b26\u4e32 x \u8bbe\u5b9a\u4e3a\u5b57\u7b26\u4e32 y \u7684\u503c\uff0c\u4f46\u5728 y \u672a\u5b9a\u4e49\u6216\u8005\u4e3a\u7a7a\u5b57\u7b26\u4e32\u7684\u65f6\u5019 x \u8bbe\u5b9a\u4e3a\u9ed8\u8ba4\u503c \"default\" \u3002\u4e00\u822c\u800c\u8a00\u53ef\u4ee5\u5199\u4e3a\uff1a 1 2 if ( y === undefined || y === \"\" ) x = \"default\" ; else x = y ; \u4f46\u5b9e\u9645\u4e0a JavaScript \u7684\u903b\u8f91\u8fd0\u7b97\u6709\u4e00\u4e2a\u7c7b\u4f3c\u8bed\u6cd5\u7cd6\u7684\u5199\u6cd5\u53ef\u4ee5\u5b8c\u6210\u8fd9\u4e00\u529f\u80fd\uff1a 1 x = y || \"default\" ; \u6ce8\u610f\u4e0d\u7b49\u4ef7\u8f6c\u6362 \u5b9e\u9645\u4e0a\u8fd9\u79cd\u8bed\u6cd5\u7cd6\u5199\u6cd5\u548c\u4e4b\u524d\u7684 if-else \u5199\u6cd5 \u5e76\u4e0d\u5b8c\u5168\u7b49\u4ef7 \uff0c\u5177\u4f53\u539f\u56e0\u53ef\u4ee5\u53c2\u9605 JavaScript \u7684\u9b54\u6cd5\u6307\u5bfc\u4e66\u3002 \u8fd9\u79cd\u5199\u6cd5\u8981\u6c42 y \u4e00\u5b9a\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4f46\u8003\u8651\u5230\u5927\u591a\u6570\u5de5\u7a0b\u573a\u666f\u4e0b y \u7684\u7c7b\u578b\u90fd\u80fd\u5f97\u5230\u4fdd\u8bc1\uff0c\u6545\u8fd8\u662f\u53ef\u4ee5\u5728\u5408\u9002\u7684\u6761\u4ef6\u4e0b\u91c7\u7528\u8fd9\u79cd\u5199\u6cd5\u3002 \u53e6\u5916\uff0c\u6709\u4e00\u4e2a\u7c7b\u4f3c\u7684\u8fd0\u7b97\u7b26\u4e3a ?? \u3002\u4e0e x = y ?? \"default\" \u7b49\u4ef7\u7684\u4ee3\u7801\u5757\u4e3a\uff1a 1 2 if ( y === undefined || y === null ) x = \"default\" ; else x = y ; \u6b64\u5916\uff0c\u8fd8\u6709\u4e00\u79cd\u5e38\u89c1\u7684\u9700\u6c42\uff1a \u68c0\u67e5\u67d0\u4e2a\u51fd\u6570\u662f\u5426\u5b9a\u4e49\uff0c\u5982\u679c\u5b9a\u4e49\uff0c\u5219\u6267\u884c\u3002 \u8fd9\u4e2a\u9700\u6c42\u53ef\u4ee5\u8fd9\u6837\u5b9e\u73b0\uff1a 1 if ( foo !== undefined ) foo (); \u800c JavaScript \u6240\u63d0\u4f9b\u7684\u4e00\u79cd\u8bed\u6cd5\u7cd6\u5199\u6cd5\u662f\uff1a 1 foo && foo (); \u4f46\u548c\u4e0a\u8ff0\u4e00\u6837\uff0c\u8fd9\u4e2a\u8f6c\u6362\u5e76\u975e\u5b8c\u5168\u7b49\u4ef7\uff0c\u4f46\u8003\u8651\u5de5\u7a0b\u5b9e\u9645\uff0c\u4e00\u822c\u800c\u8a00\u662f\u53ef\u4ee5\u91c7\u7528\u8fd9\u79cd\u5199\u6cd5\u7684\u3002 \u7a7a\u7684\u4e09\u4e2a\u5883\u754c \u9664\u53bb undefined \u548c null \uff0c\u5b9e\u9645\u4e0a\u7a7a\u5bf9\u8c61 {} \u4e5f\u662f\u7a7a\u7684\u4e00\u79cd\u3002\u4f46\u662f\u8fd9\u4e09\u4e2a\u7a7a\u7684\u5883\u754c\u5404\u6709\u4e0d\u540c\u3002 \u5982\u679c\u7528\u76d2\u5b50\u6bd4\u55bb JavaScript \u5bf9\u8c61\uff0c\u5c06\u952e\u503c\u5bf9\u6bd4\u4f5c\u76d2\u5b50\u4e2d\u7684\u7269\u54c1\u3002\u90a3\u4e48 {} \u662f\u7a7a\u76d2\u5b50\uff0c null \u662f\u8fde\u76d2\u5b50\u90fd\u6ca1\u6709\uff0c\u800c undefined \u662f\u5927\u5bb6\u90fd\u4e0d\u77e5\u9053\u76d2\u5b50\u662f\u4ec0\u4e48\u3002 \u4f46\u5b9e\u9645\u5de5\u7a0b\u4e2d\uff0c null \u548c undefined \u7684\u5dee\u8ddd\u5f88\u5c0f\uff0c\u9664\u53bb\u5f88\u7ec6\u5fae\u7684\u884c\u4e3a\u5dee\u5f02\u5916\uff08\u6bd4\u5982\u4e24\u8005\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u4e3a\u6570\u5b57\u7684\u65f6\u5019\u7ed3\u679c\u5e76\u4e0d\u4e00\u6837\uff09\uff0c\u4e24\u8005\u51e0\u4e4e\u7b49\u540c\u3002\u800c {} \u5219\u548c\u8fd9\u4e24\u8005\u5b8c\u5168\u4e0d\u540c\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbf\u95ee\u5b83\u7684\u5c5e\u6027\uff08\u867d\u7136\u8fd4\u56de undefined \uff09\uff0c\u53ef\u4ee5\u5bf9\u5b83\u505a\u66f4\u591a\u7684\u8fd0\u7b97\u3002\u5b83\u53ea\u662f\u4e00\u4e2a\u7a7a\u76d2\u5b50\uff0c\u6211\u4eec\u53ef\u4ee5\u5f80\u91cc\u9762\u653e\u4e1c\u897f\u8ba9\u5b83\u4ece\u65e0\u5230\u6709\u3002\u4f46 null, undefined \u5219\u662f\u5e72\u5e72\u51c0\u51c0\u7684\u7a7a\uff0c\u51e0\u4e4e\u65e0\u6cd5\u5229\u7528\u3002 \u90a3\u4e3a\u4ec0\u4e48 JavaScript \u7684 null \u548c undefined \u7684\u5dee\u8ddd\u5f88\u5c0f\uff0c\u4f46\u8bbe\u8ba1\u8005\u4f9d\u7136\u8981\u540c\u65f6\u8bbe\u5b9a\u8fd9\u4e24\u8005\u5462\uff1f\u8fd9\u4e2a\u95ee\u9898\u5e76\u6ca1\u6709\u786e\u5207\u7684\u89e3\u7b54\u3002 JavaScript \u7684\u9b54\u6cd5\u6307\u5bfc\u4e66 \u73b0\u5728\u6211\u4eec\u6765\u8bb2\u8ff0 JavaScript \u7684\u57fa\u7840\u8fd0\u7b97\u7b26\u7684\u4e00\u4e9b\u53cd\u76f4\u89c9\u8868\u73b0\uff0c\u4ee5\u53ca\u8fd9\u4e9b\u884c\u4e3a\u6240\u5e26\u6765\u7684\u4e00\u4e9b\u9b54\u6cd5\u3002\u6211\u4eec\u5e76\u4e0d\u5e0c\u671b\u521d\u5b66\u8005\u9605\u8bfb\u8fd9\u4e00\u90e8\u5206\uff0c\u4ee5\u9632\u5f62\u6210\u4e0d\u826f\u597d\u7684\u7f16\u7801\u4e60\u60ef\u3002 \u9996\u5148\u5173\u6ce8\u56db\u5927\u57fa\u7840\u7b97\u672f\u8fd0\u7b97\u7b26 +, -, *, / \u3002\u8fd9\u56db\u4e2a\u8fd0\u7b97\u7b26\u7684\u57fa\u672c\u903b\u8f91\u7c7b\u4f3c\uff0c\u5927\u81f4\u4e3a\uff1a \u9996\u5148\u5c06\u4e24\u8fb9\u53c2\u4e0e\u8fd0\u7b97\u7684\u53d8\u91cf\u8f6c\u5316\u4e3a\u4e94\u5927\u539f\u59cb\u7c7b\u578b \u8f6c\u6362\u5b8c\u6bd5\u540e\u5982\u679c\u6709\u67d0\u4e00\u4e2a\u53d8\u91cf\u4e3a\u5b57\u7b26\u4e32\u4e14\u8fd0\u7b97\u4e3a\u52a0\u6cd5\uff0c\u5219\u5c06\u53e6\u5916\u4e00\u4e2a\u5f3a\u5236\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u8fdb\u884c\u5b57\u7b26\u4e32\u62fc\u63a5\u8fd0\u7b97 \u5176\u4ed6\u60c5\u51b5\u5219\u662f\u5c06\u4e24\u8005\u5747\u5f3a\u5236\u8f6c\u6362\u4e3a\u6570\u5b57\u8fdb\u884c\u7b97\u672f\u8fd0\u7b97 \u90a3\u4e48\u6211\u4eec\u9996\u5148\u5173\u6ce8 \u5f3a\u5236\u8f6c\u5316\u4e3a\u4e94\u5927\u539f\u59cb\u7c7b\u578b \u7684\u903b\u8f91\uff1a \u5982\u679c\u8f6c\u5316\u53d8\u91cf\u5c31\u662f\u4e94\u5927\u539f\u59cb\u7c7b\u578b\uff0c\u5219\u8fd4\u56de\u5176\u672c\u8eab \u5982\u679c\u8f6c\u5316\u53d8\u91cf\u4e0d\u662f\u4e94\u5927\u539f\u59cb\u7c7b\u578b\uff0c\u5219\u5224\u65ad\u5176\u662f\u5426\u4e3a\u65e5\u671f Date \u7c7b\u578b \u5982\u679c\u4e3a Date \u7c7b\u578b\uff0c\u5219\u8c03\u7528\u5176 toString() \u65b9\u6cd5\u8f6c\u5316\u4e3a\u5b57\u7b26\u4e32 \u5982\u679c\u4e0d\u4e3a Date \u7c7b\u578b\uff0c\u5219\u8c03\u7528\u5176 valueOf() \u65b9\u6cd5\uff0c\u5176\u8fd4\u56de\u503c\u53c2\u4e0e\u8fd0\u7b97\u3002\u5982\u6ca1\u6709\u8be5\u65b9\u6cd5\u6216\u5176\u8fd4\u56de\u503c\u4e0d\u662f\u4e94\u5927\u57fa\u672c\u7c7b\u578b\uff0c\u5219\u8c03\u7528\u5176 toString() \u65b9\u6cd5\uff0c\u5176\u8fd4\u56de\u503c\u53c2\u4e0e\u8fd0\u7b97\u3002\u5982\u679c\u8fd8\u6ca1\u6709\u8be5\u65b9\u6cd5\u6216\u5176\u8fd4\u56de\u503c\u4e0d\u662f\u4e94\u5927\u57fa\u672c\u7c7b\u578b\uff0c\u629b\u51fa TypeError \u9519\u8bef \u800c\u56db\u5927\u57fa\u672c\u7c7b\u578b\u5f3a\u5236\u8f6c\u6362\u4e3a\u6570\u5b57\u7684\u903b\u8f91\u5982\u4e0b\uff1a undefined \u5f3a\u5236\u8f6c\u6362\u4e3a NaN \uff0c null \u5f3a\u5236\u8f6c\u6362\u4e3a 0 true \u5f3a\u5236\u8f6c\u6362\u4e3a 1 \uff0c false \u5f3a\u5236\u8f6c\u6362\u4e3a 0 \u5982\u679c\u5b57\u7b26\u4e32\u662f\u5408\u6cd5\u7684\u5341\u8fdb\u5236\u6d6e\u70b9\u6570\uff0c\u5219\u8f6c\u5316\u4e3a\u6d6e\u70b9\u6570\u3002\u5982\u679c\u5b57\u7b26\u4e32\u662f\u5408\u6cd5\u7684\u5341\u516d\u8fdb\u5236\u6570\uff0c\u5219\u6309\u7167\u5341\u516d\u8fdb\u5236\u89c4\u5219\u8f6c\u5316\u3002\u5982\u679c\u5b57\u7b26\u4e32\u53ea\u5305\u542b\u6570\u5b57\u548c\u5f00\u5934\u7684\u8d1f\u53f7\uff0c\u5219\u6309\u7167\u5341\u8fdb\u5236\u89c4\u5219\u8f6c\u5316\u3002\u5982\u679c\u662f\u7a7a\u5b57\u7b26\u4e32\uff0c\u5219\u8f6c\u5316\u4e3a 0 \u3002\u5982\u679c\u5b57\u7b26\u4e32\u4e3a \"Infinity\" \u6216\u8005 \"-Infinity\" \u5219\u5206\u522b\u8f6c\u5316\u4e3a Infinity \u548c -Infinity \u3002\u5176\u4f59\u60c5\u51b5\u8f6c\u5316\u4e3a NaN \u56db\u5927\u57fa\u672c\u7c7b\u578b\u5f3a\u5236\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u7684\u903b\u8f91\u5982\u4e0b\uff1a undefined \u5f3a\u5236\u8f6c\u6362\u4e3a \"undefined\" \uff0c null \u5f3a\u5236\u8f6c\u6362\u4e3a \"null\" true \u5f3a\u5236\u8f6c\u6362\u4e3a \"true\" \uff0c false \u5f3a\u5236\u8f6c\u6362\u4e3a \"false\" \u6570\u5b57\u5f3a\u5236\u8f6c\u5316\u4e3a\u5341\u8fdb\u5236\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\u6570\u5b57\uff0c NaN \u5f3a\u5236\u8f6c\u6362\u4e3a \"NaN\" \uff0c Infinity \u5f3a\u5236\u8f6c\u6362\u4e3a \"Infinity\" \uff0c -Infinity \u5f3a\u5236\u8f6c\u6362\u4e3a \"-Infinity\" \u53e6\u5916\u8fd8\u8981\u8bf4\u660e\u7684\u662f\uff0cJavaScript \u4e4b\u4e2d\u7684 + \u8fd0\u7b97\u7b26\u4e5f\u662f\u4e00\u79cd\u4e00\u5143\u8fd0\u7b97\u7b26\uff0c\u5176\u4f5c\u7528\u662f\u5c06\u64cd\u4f5c\u53d8\u91cf\u5f3a\u5236\u8f6c\u6362\u4e3a\u6570\u5b57\u7c7b\u578b\u3002\u800c\u8fd9\u79cd\u5f3a\u5236\u8f6c\u6362\u7684\u903b\u8f91\u4e5f\u662f\u5148\u628a\u64cd\u4f5c\u53d8\u91cf\u5f3a\u5236\u8f6c\u6362\u4e3a\u57fa\u672c\u7c7b\u578b\u540e\u518d\u5f3a\u5236\u8f6c\u6362\u4e3a\u6570\u5b57\uff1a 1 2 + \"123\" ; // 123 + []; // 0 \u8fd9\u91cc\u5bf9\u7a7a\u6570\u7ec4\u505a\u7684\u5f3a\u5236\u8f6c\u6362\u7684\u903b\u8f91\u4e3a\uff0c\u9996\u5148\u8c03\u7528 [].valueOf() \uff0c\u7ed3\u679c\u4e3a [] \uff0c\u4e0d\u662f\u57fa\u672c\u7c7b\u578b\u3002\u8fdb\u4e00\u6b65\u8c03\u7528 [].toString() \uff0c\u7ed3\u679c\u4e3a \"\" \uff0c\u662f\u57fa\u672c\u7c7b\u578b\u3002\u4ece\u800c\u518d\u5c06 \"\" \u5f3a\u5236\u8f6c\u6362\u4e3a\u6570\u5b57\u5f97\u5230 0 \u3002 \u77e5\u6653\u8fd9\u79cd\u8fd0\u7b97\u903b\u8f91\u4e4b\u540e\uff0c\u6211\u4eec\u6765\u770b\u770b\u4e00\u4e9b\u9b54\u6cd5\u8fd0\u7b97\uff0c\u8bfb\u8005\u53ef\u4ee5\u5c1d\u8bd5\u5411\u4e0a\u9762\u4e00\u6837\u5206\u6790\u8fd9\u4e9b\u8fd0\u7b97\u7684\u5185\u90e8\u54f2\u5b66\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 [] + []; // \"\" [] + {}; // \"[object Object]\" + [] + ( + []); // 0 1 + null ; // 1 1 + undefined ; // NaN 1 + new Date (); // \"1Mon Oct 04 2021 02:04:31 GMT+0800 (\u4e2d\u56fd\u6807\u51c6\u65f6\u95f4)\" + new Date (); // 1633284276012 \"90\" + 1 ; // \"901\" \"90\" - 1 ; // 89 \"Infinity\" + \"-Infinity\" ; // \"Infinity-Infinity\" \"Infinity\" - \"Infinity\" ; // NaN \"8\" * 5 ; // 40 4 / \"5\" ; // 0.8 \u4e0d\u8fc7\u6709\u4e00\u70b9\u6211\u4eec\u9700\u8981\u6ce8\u610f\uff0c\u4e5f\u5c31\u662f\u7a7a\u5bf9\u8c61 {} \u5728\u4e0d\u540c\u7684\u5e73\u53f0\u4e0a\u7684\u89e3\u6790\u662f\u4e0d\u540c\u7684\u3002\u6bd4\u5982\u8bf4\u7b97\u5f0f {} + {} \u4e2d\u7684\u7b2c\u4e00\u4e2a\u7a7a\u5bf9\u8c61\uff0c\u6709\u4e9b\u6d4f\u89c8\u5668\u4f1a\u89e3\u6790\u4e3a\u7a7a\u5bf9\u8c61\uff0c\u800c\u6709\u4e9b\u4f1a\u89e3\u6790\u4e3a\u7a7a\u4ee3\u7801\u5757\u3002\u4e3a\u4e86\u9632\u6b62\u6df7\u6dc6\uff0c\u5efa\u8bae\u52a0\u4e00\u4e2a\u5c0f\u62ec\u53f7\u5199\u6210 ({}) + ({}) \u3002 \u4e0b\u9762\u6211\u4eec\u7814\u7a76\u4e09\u4e2a\u903b\u8f91\u8fd0\u7b97\u7b26 &&, ||, ! \u3002 && \u7684\u903b\u8f91\u4e3a\uff1a \u9996\u5148\u8fd0\u7b97\u5de6\u4fa7\u7684\u8868\u8fbe\u5f0f\uff0c\u5e76\u5c06\u7ed3\u679c\u5f3a\u5236\u8f6c\u5316\u4e3a\u5e03\u5c14\u503c\uff0c\u5982\u679c\u4e3a false \uff0c\u5219\u77ed\u8def\uff08\u4e0d\u8ba1\u7b97\u53f3\u4fa7\u8868\u8fbe\u5f0f\uff09\uff0c\u8fd4\u56de\u5de6\u4fa7\u8868\u8fbe\u5f0f\u7684\u503c\uff08\u8fd4\u56de\u539f\u503c\uff0c\u4e0d\u5f3a\u5236\u8f6c\u5316\u4e3a\u5e03\u5c14\u503c\uff09 \u5426\u5219\u8ba1\u7b97\u53f3\u4fa7\u7684\u8868\u8fbe\u5f0f\uff0c\u5e76\u5c06\u7ed3\u679c\u76f4\u63a5\u8fd4\u56de || \u7684\u903b\u8f91\u7c7b\u4f3c\uff1a \u9996\u5148\u8fd0\u7b97\u5de6\u4fa7\u7684\u8868\u8fbe\u5f0f\uff0c\u5e76\u5c06\u7ed3\u679c\u5f3a\u5236\u8f6c\u5316\u4e3a\u5e03\u5c14\u503c\uff0c\u5982\u679c\u4e3a true \uff0c\u5219\u77ed\u8def\uff08\u4e0d\u8ba1\u7b97\u53f3\u4fa7\u8868\u8fbe\u5f0f\uff09\uff0c\u8fd4\u56de\u5de6\u4fa7\u8868\u8fbe\u5f0f\u7684\u503c\uff08\u8fd4\u56de\u539f\u503c\uff0c\u4e0d\u5f3a\u5236\u8f6c\u5316\u4e3a\u5e03\u5c14\u503c\uff09 \u5426\u5219\u8ba1\u7b97\u53f3\u4fa7\u7684\u8868\u8fbe\u5f0f\uff0c\u5e76\u5c06\u7ed3\u679c\u76f4\u63a5\u8fd4\u56de \u800c\u5404\u79cd\u53d8\u91cf\u8f6c\u5316\u4e3a\u5e03\u5c14\u503c\u7684\u903b\u8f91\u5982\u4e0b\uff1a undefined, null, 0, NaN, \"\", false \u8f6c\u5316\u4e3a false \u5176\u4f59\u5747\u8f6c\u5316\u4e3a true \uff08\u65e0\u8bba\u662f\u5bf9\u8c61\u8fd8\u662f\u57fa\u672c\u7c7b\u578b\uff09 \u8fd9\u4e2a\u903b\u8f91\u5b9e\u9645\u4e0a\u9020\u5c31\u4e86\u4e00\u4e2a\u76f8\u5f53\u8be1\u5f02\u7684\u8fd0\u7b97\u89c4\u5219\u3002JavaScript \u7684\u5e03\u5c14\u503c\u7c7b\u578b\u662f\u6709\u4e00\u4e2a\u5305\u88c5\u7c7b Boolean \u7684\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u8fd9\u6837\u7684\u4e00\u4e2a\u5bf9\u8c61 Boolean(false) \uff0c\u7531\u4e8e\u5176\u662f\u5bf9\u8c61\uff0c\u5176\u5f3a\u5236\u8f6c\u6362\u4e3a\u5e03\u5c14\u503c\u7684\u65f6\u5019\u4f1a\u5f97\u5230 true \u800c\u975e\u76f4\u89c9\u7684 false \u3002 \u6b64\u5916\uff0c ! \u8fd0\u7b97\u7b26\u7684\u903b\u8f91\u5219\u5f88\u7b80\u5355\uff0c\u9996\u5148\u5c06\u64cd\u4f5c\u6570\u5f3a\u5236\u8f6c\u5316\u4e3a\u5e03\u5c14\u503c\u7c7b\u578b\uff0c\u4e4b\u540e\u53d6\u53cd\u4f5c\u4e3a\u8fd4\u56de\u503c\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c\u5b9e\u9645\u4e0a\u8fd9\u4e9b\u903b\u8f91\u8fd0\u7b97\u7b26\uff0c\u53ea\u6709 ! \u4e00\u5b9a\u8fd4\u56de\u5e03\u5c14\u503c\u7c7b\u578b\u3002\u751a\u81f3\u53ef\u4ee5\u8bf4 &&, || \u5f88\u591a\u65f6\u5019\u4e0d\u8fd4\u56de\u5e03\u5c14\u503c\u7c7b\u578b\u3002 \u90a3\u4e48\u5c31\u53ef\u4ee5\u89c2\u5bdf\u8fd9\u4e9b\u8fd0\u7b97\uff1a 1 2 3 4 5 ! []; // false [] && 0 ; // 0 0 || {}; // {} ! ( new Boolean ( false )); // false \u7efc\u5408\u8fd9\u4e9b\u8fd0\u7b97\uff0c\u6211\u4eec\u6765\u770b\u770b\u4e0b\u9762\u7684\u6df7\u5408\u8fd0\u7b97\uff1a 1 !+ [] + [] +! []; // \"truefalse\" \u662f\u4e0d\u662f\u5c31\u663e\u5f97\u5f88\u5408\u7406\u4e86\uff1f \u5b9e\u9645\u4e0a\u73b0\u5728\u5df2\u7ecf\u6709\u4e00\u4e2a\u628a JavaScript \u8fd9\u4e9b\u7279\u6027\u73a9\u51fa\u65b0\u82b1\u6837\u7684\u4ee3\u7801\u5e93\u4e86\uff0c\u5373 JSFuck\uff0c\u5176\u5b97\u65e8\u4e3a\u53ea\u7528 +[]!() \u516d\u4e2a\u5b57\u7b26\u7f16\u5199\u53ef\u8fd0\u884c\u7684 JavaScript \u4ee3\u7801\u3002\u53ef\u4ee5\u8bf4 JSFuck \u4ee3\u7801\u5b8c\u5168\u4f9d\u9760 JavaScript \u7684\u8fd9\u4e9b bug \u5728\u5de5\u4f5c\u3002","title":"\u7a7a\u7c7b\u578b"},{"location":"languages/node.js/","text":"Node.js \u57fa\u7840 \u00b6 \u524d\u7f6e\u77e5\u8bc6 \u00b6 CLI \u57fa\u672c\u5e38\u8bc6 \u5bf9 JavaScript \u7684\u57fa\u672c\u4e86\u89e3 \u90e8\u5206\u5185\u5bb9\u6d89\u53ca TypeScript \u7684\u57fa\u672c\u4fe1\u606f \u4ec0\u4e48\u662f Node.js \u00b6 \u6839\u636e\u524d\u9762\u4e00\u4e9b\u6587\u6863\u7684\u5185\u5bb9\uff0c\u6211\u4eec\u5927\u6982\u4e86\u89e3\u5230 JavaScript \u662f\u4e00\u79cd\u524d\u7aef\u8bed\u8a00\uff0c\u53ef\u4ee5\u8d4b\u4e88\u9759\u6001\u7684\u7f51\u9875\u4e30\u5bcc\u7684\u52a8\u6001\u6548\u679c\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0cJavaScript \u8fd0\u884c\u5728\u6d4f\u89c8\u5668\u4e2d\uff0c\u80fd\u591f\u8bbf\u95ee\u7684\u53ea\u6709\u4e00\u4e2a\u9875\u9762\u4e0a\u7684\u5185\u5bb9\uff0c\u4ee5\u53ca\u6d4f\u89c8\u5668\u63d0\u4f9b\u7684 API\u3002Node.js \u57fa\u4e8e V8 \u5f15\u64ce\u548c\u4e00\u4e9b\u7cfb\u7edf\u5e93\uff0c\u521b\u5efa\u4e86\u4e00\u4e2a JavaScript \u7684\u8fd0\u884c\u65f6\u73af\u5883\uff0c\u4f7f\u5f97 JavaScript \u80fd\u591f\u72ec\u7acb\u4e8e\u6d4f\u89c8\u5668\u5728\u7cfb\u7edf\u4e0a\u76f4\u63a5\u8fd0\u884c\uff0c\u5e76\u4e14\u8bbf\u95ee\u7cfb\u7edf\u7684\u591a\u79cd\u63a5\u53e3\u3002 V8 \u5f15\u64ce\u7684\u9ad8\u6548\u4f7f\u5f97\u57fa\u4e8e Node.js \u7684\u7a0b\u5e8f\u53ef\u4ee5\u6709\u6781\u9ad8\u7684\u8fd0\u884c\u6548\u7387\uff0c\u540c\u65f6 JavaScript \u7684\u4e00\u4e9b\u7279\u6027\u5728\u7f16\u5199\u90e8\u5206\u670d\u52a1\u7aef\u7a0b\u5e8f\u65f6\u6709\u72ec\u7279\u7684\u597d\u5904\u3002 Node.js \u7684\u8fd0\u884c\u673a\u5236\u4e0e\u6d4f\u89c8\u5668\u4e2d\u6781\u4e3a\u76f8\u4f3c\uff0c\u4e3b\u8981\u7684\u533a\u522b\u4f53\u73b0\u5728\u4e8e\u8fd0\u884c\u73af\u5883\u548c\u6240\u80fd\u8bbf\u95ee\u7684 API \u4e0d\u540c\uff0c\u56e0\u6b64\u4ee5\u4e0b\u5c06\u5c3d\u91cf \u4e0d\u4f1a \u6d89\u53ca\u8bed\u6cd5\u7ec6\u8282\u3002 \u5b89\u88c5 \u00b6 Node.js \u7248\u672c\u7684\u9009\u62e9 Node.js \u6709\u591a\u79cd\u7248\u672c\u53ef\u4ee5\u9009\u62e9\uff0c\u76ee\u524d\uff082021.12.16\uff09\u7684\u957f\u671f\u652f\u6301\uff08LTS\uff09\u7248\u672c\u4e3a v16(.13.1)\uff0c\u4e0a\u4e00\u4e2a\u7248\u672c\u5219\u4e3a v14\uff0c\u4e0d\u540c\u7684\u7248\u672c\u5728\u652f\u6301 JavaScript\uff08\u6216\u8005\u8bf4 ECMAScript\uff09\u65b0\u7279\u6027\u65b9\u9762\u6709\u6240\u533a\u522b\uff0c\u9047\u5230\u5177\u4f53\u95ee\u9898\u65f6\u53ef\u4ee5\u4f7f\u7528 nvm \u6765\u89e3\u51b3\uff0c\u8be6\u89c1\u8d44\u6e90\u94fe\u63a5\u3002 \u8bbf\u95ee Node.js\u5b98\u65b9\u7f51\u7ad9 \u53ef\u4ee5\u83b7\u53d6\u5404\u5e73\u53f0\u4e0b\u8f7d\u5730\u5740\uff0c\u4e5f\u53ef\u4ee5 \u901a\u8fc7\u5305\u7ba1\u7406\u5668\u5b89\u88c5 \u3002 \u5728\u4f7f\u7528\u5305\u7ba1\u7406\u5668\u5b89\u88c5\u65f6\u8bf7\u6ce8\u610f\uff0c\u4e0a\u8ff0\u7f51\u9875\u7ed9\u51fa\u7684\u547d\u4ee4\u4e2d\u53ef\u80fd\u5305\u542b npm \u5373 Node.js package manager \u662f Node.js \u9ed8\u8ba4\u7684\u5305\u7ba1\u7406\u5668\uff0c\u5982\u679c\u6b64\u5904\u6ca1\u6709\u5b89\u88c5\u4e5f\u6ca1\u6709\u5173\u7cfb\uff0c\u6211\u4eec\u4f1a\u5728\u4e0b\u8282\u4e2d\u8be6\u7ec6\u89e3\u91ca\u8fd9\u4e2a\u95ee\u9898\u3002 Node.js \u8fd0\u884c \u00b6 Node.js \u7684\u8fd0\u884c\u4e0e Python \u5341\u5206\u76f8\u4f3c\uff0c\u53ef\u4ee5\u4f7f\u7528 REPL\uff08\u82f1\u6587\uff1aread-eval-print-loop\uff0c\u5373\u4ea4\u4e92\u5f0f\u547d\u4ee4\u884c\uff09\u6216\u8005\u811a\u672c\u7684\u65b9\u5f0f\uff0c\u751a\u81f3\u8fd8\u6709\u4eba\u641e\u8fc7\u5bf9\u6807 IPython \u7684 IJavaScript \uff08\u4e0d\u8fc7\u51c9\u4e86\uff09 \u3002 REPL\uff1a\u5728\u547d\u4ee4\u884c\u8f93\u5165 node \u5c31\u53ef\u4ee5\u6253\u5f00\u4e00\u4e2a\u4ea4\u4e92\u5f0f\u754c\u9762\uff0c\u5c31\u5982\u540c\u4f60\u5728\u5b66\u4e60 JavaScript \u65f6\u4f7f\u7528\u6d4f\u89c8\u5668\u8c03\u8bd5\u5de5\u5177\u90a3\u6837\uff0c\u4f46\u662f Node.js \u5e76\u4e0d\u80fd\u50cf\u5728\u6d4f\u89c8\u5668\u4e2d\u90a3\u6837\u5bf9\u6253\u5370\u51fa\u6765\u7684\u5bf9\u8c61\u505a\u590d\u6742\u7684\u64cd\u4f5c\uff0c\u5f53\u7136\u8003\u8651\u5230\u8fd9\u662f\u5728 CLI \u4e2d\uff0c\u7f3a\u5c11\u7c7b\u4f3c\u7684\u64cd\u4f5c\u5e76\u4e0d\u5947\u602a\u3002 \u4e0e\u6d4f\u89c8\u5668\u4e0d\u540c\u7684\u53e6\u4e00\u70b9\u662f\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u7c7b\u4f3c .exit \u7684\u8bed\u53e5\u8fdb\u884c\u4e00\u4e9b\u975e JavaScript \u7684\u64cd\u4f5c\uff0c\u5982\u9000\u51fa Node.js\uff08\u5f53\u7136\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4e24\u6b21 Ctrl+C \u6216\u8005\u4e00\u6b21 Ctrl+D \u6765\u9000\u51fa\uff09\u3002 \u811a\u672c\uff1a\u4e0e Python \u7c7b\u4f3c\uff0c\u4f7f\u7528 node xxx.js \u6765\u6267\u884c\u4e00\u4e2a\u811a\u672c\uff08\u4f46\u662f\u5b9e\u9645\u64cd\u4f5c\u4e2d\u8fd9\u4e2a\u884c\u4e3a\u4e5f\u4f1a\u88ab\u5c01\u88c5\uff0c\u540c\u6837\u4f1a\u5728\u4e0b\u4e00\u8282\u4e2d\u89e3\u91ca\uff09\u3002 Node.js \u6a21\u5757\u5316 \u00b6 \u5728\u4e4b\u524d\u7684 JavaScript \u57fa\u7840\u7ae0\u8282\u4e2d\u5e76\u6ca1\u6709\u63d0\u53ca JavaScript \u6709\u4ec0\u4e48\u6a21\u5757\u5316\u6216\u8005\u5305\u7ba1\u7406\u7684\u4e1c\u897f\uff0c\u8fd9\u662f\u56e0\u4e3a\u5728\u524d\u7aef\u5f00\u53d1\u4e2d\uff0c\u8981\u4e48\u5c06\u7528\u5230\u7684\u6a21\u5757\u5168\u90e8\u6253\u5305\uff08\u5173\u4e8e\u6253\u5305\u5c06\u5728\u540e\u7eed\u63d0\u53ca\uff09\uff0c\u8981\u4e48\u901a\u8fc7 CDN \u5f15\u5165\uff0c\u524d\u8005\u901a\u8fc7 Node.js \u5b9e\u73b0\uff0c\u800c\u540e\u8005\u5219\u76f4\u63a5\u5c06\u5bfc\u51fa\u7684\u6a21\u5757\u6302\u5728\u5728 window \u4e0b\uff0c\u4e5f\u5373\u6210\u4e3a\u5168\u5c40\u53d8\u91cf\uff0c\u8fd9\u4e5f\u5c31\u662f\u65e9\u671f JavaScript \u7684\u95ee\u9898\uff0c\u901a\u8fc7\u5168\u5c40\u53d8\u91cf\u89e3\u51b3\u4e00\u5207\u95ee\u9898\uff0c\u5927\u5bb6\u5728\u7a0b\u8bbe\u4e2d\u60f3\u5fc5 ~\u8fd9\u4e48\u505a\u8fc7 ~\u77e5\u9053\u8fd9\u6837\u505a\u662f\u4e0d\u597d\u7684\u3002 \u8fd9\u4e2a\u95ee\u9898\u65e9\u5728 ECMA \u5236\u5b9a ES6 \u6807\u51c6\u5f15\u5165 ES6 Module \u524d\u5c31\u5e7f\u6cdb\u5b58\u5728\u4e86\uff0c\u56e0\u6b64\u793e\u533a\u65e9\u5df2\u63d0\u51fa\u4e86\u591a\u79cd\u89e3\u51b3\u65b9\u6848\uff0c\u4e3b\u8981\u6709 CommonJS\u3001AMD\u3001CMD \u51e0\u79cd\u3002\u540e\u4e24\u79cd\u73b0\u5728\u5df2\u7ecf\u5f88\u5c11\u51fa\u73b0\uff0c\u800c CommonJS \u7684\u4e3b\u8981\u5b9e\u8df5\u8005\u6b63\u662f Node.js\u3002\u56e0\u6b64\u5f53\u8fd0\u884c Node.js \u9879\u76ee\u65f6\uff0c\u5982\u679c\u5728\u7248\u672c\u4f4e\u4e8e ES6 \u7684\u60c5\u51b5\u4e0b\u4f7f\u7528 ES6 Module\uff08\u5373\u4f7f\u7528 import \u3001 export \uff09\u65b9\u6cd5\u5c31\u4f1a\u62a5\u9519\u3002\u4e0d\u8fc7\u597d\u5728\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528 ES6 \u53ca\u4ee5\u4e0a\u7248\u672c\uff0c\u6216\u8005\u4f7f\u7528 Babel\uff08\u89c1\u8d44\u6e90\u94fe\u63a5\uff09\u5b9e\u73b0\u517c\u5bb9\uff0c\u56e0\u6b64\u6211\u4eec\u5c06\u4e3b\u8981\u4f7f\u7528 ES6 Module \u6765\u7ba1\u7406\u6a21\u5757\u3002 ES6 Module \u00b6 \u4ece\u4e00\u4e2a\u6587\u4ef6\u4e2d\u5bfc\u51fa\u53d8\u91cf\u3001\u51fd\u6570\u3001\u7c7b\u578b\u7b49\u5185\u5bb9\u7684\u65b9\u6cd5\u4e3a\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 // \u6587\u4ef6\u540d export.js // \u5bfc\u51fa\u503c value export { value }; // \u5bfc\u51fa\u503c value \u5e76\u91cd\u547d\u540d\u4e3a aliasNameOfValue export { value as aliasNameOfValue }; // \u4ee5\u4e0b\u4e24\u53e5\u7b49\u4ef7 export { value as default }; export default value ; // \u5bf9\u4e8e TypeScript\uff0c\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u5bfc\u51fa\u7c7b\u578b export type { type }; export { type }; \u5f15\u5165\u6a21\u5757\u7684\u65b9\u5f0f\u5219\u4e3a\uff1a 1 2 3 4 5 6 7 // \u6ce8\u610f\u8fd9\u91cc\u5e76\u4e0d\u9700\u8981\u6307\u5b9a\u540e\u7f00\u540d\uff0c\u66f4\u591a\u7684\u7ec6\u8282\u8bf7\u89c1\u4e0b\u8282 import { value } from './export' ; // \u5f15\u5165\u503c\u5e76\u8d77\u522b\u540d import { value as aliasNameOfValue } from './export' ; // \u4ee5\u4e0b\u4e24\u53e5\u7b49\u4ef7 import { default as value } from './export' ; import value from './export' ; \u5982\u679c\u9700\u8981\u5f15\u5165\u518d\u5bfc\u51fa\uff0c\u53ef\u4ee5\u7b80\u5199\u4e3a\uff1a 1 export { value } from './export' ; \u8d44\u6e90\u94fe\u63a5 \u00b6 nvm\uff1a https://github.com/nvm-sh/nvm Babel\uff1a https://babeljs.io/","title":"Node.js \u57fa\u7840"},{"location":"languages/node.js/#nodejs","text":"","title":"Node.js \u57fa\u7840"},{"location":"languages/node.js/#_1","text":"CLI \u57fa\u672c\u5e38\u8bc6 \u5bf9 JavaScript \u7684\u57fa\u672c\u4e86\u89e3 \u90e8\u5206\u5185\u5bb9\u6d89\u53ca TypeScript \u7684\u57fa\u672c\u4fe1\u606f","title":"\u524d\u7f6e\u77e5\u8bc6"},{"location":"languages/node.js/#nodejs_1","text":"\u6839\u636e\u524d\u9762\u4e00\u4e9b\u6587\u6863\u7684\u5185\u5bb9\uff0c\u6211\u4eec\u5927\u6982\u4e86\u89e3\u5230 JavaScript \u662f\u4e00\u79cd\u524d\u7aef\u8bed\u8a00\uff0c\u53ef\u4ee5\u8d4b\u4e88\u9759\u6001\u7684\u7f51\u9875\u4e30\u5bcc\u7684\u52a8\u6001\u6548\u679c\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0cJavaScript \u8fd0\u884c\u5728\u6d4f\u89c8\u5668\u4e2d\uff0c\u80fd\u591f\u8bbf\u95ee\u7684\u53ea\u6709\u4e00\u4e2a\u9875\u9762\u4e0a\u7684\u5185\u5bb9\uff0c\u4ee5\u53ca\u6d4f\u89c8\u5668\u63d0\u4f9b\u7684 API\u3002Node.js \u57fa\u4e8e V8 \u5f15\u64ce\u548c\u4e00\u4e9b\u7cfb\u7edf\u5e93\uff0c\u521b\u5efa\u4e86\u4e00\u4e2a JavaScript \u7684\u8fd0\u884c\u65f6\u73af\u5883\uff0c\u4f7f\u5f97 JavaScript \u80fd\u591f\u72ec\u7acb\u4e8e\u6d4f\u89c8\u5668\u5728\u7cfb\u7edf\u4e0a\u76f4\u63a5\u8fd0\u884c\uff0c\u5e76\u4e14\u8bbf\u95ee\u7cfb\u7edf\u7684\u591a\u79cd\u63a5\u53e3\u3002 V8 \u5f15\u64ce\u7684\u9ad8\u6548\u4f7f\u5f97\u57fa\u4e8e Node.js \u7684\u7a0b\u5e8f\u53ef\u4ee5\u6709\u6781\u9ad8\u7684\u8fd0\u884c\u6548\u7387\uff0c\u540c\u65f6 JavaScript \u7684\u4e00\u4e9b\u7279\u6027\u5728\u7f16\u5199\u90e8\u5206\u670d\u52a1\u7aef\u7a0b\u5e8f\u65f6\u6709\u72ec\u7279\u7684\u597d\u5904\u3002 Node.js \u7684\u8fd0\u884c\u673a\u5236\u4e0e\u6d4f\u89c8\u5668\u4e2d\u6781\u4e3a\u76f8\u4f3c\uff0c\u4e3b\u8981\u7684\u533a\u522b\u4f53\u73b0\u5728\u4e8e\u8fd0\u884c\u73af\u5883\u548c\u6240\u80fd\u8bbf\u95ee\u7684 API \u4e0d\u540c\uff0c\u56e0\u6b64\u4ee5\u4e0b\u5c06\u5c3d\u91cf \u4e0d\u4f1a \u6d89\u53ca\u8bed\u6cd5\u7ec6\u8282\u3002","title":"\u4ec0\u4e48\u662f Node.js"},{"location":"languages/node.js/#_2","text":"Node.js \u7248\u672c\u7684\u9009\u62e9 Node.js \u6709\u591a\u79cd\u7248\u672c\u53ef\u4ee5\u9009\u62e9\uff0c\u76ee\u524d\uff082021.12.16\uff09\u7684\u957f\u671f\u652f\u6301\uff08LTS\uff09\u7248\u672c\u4e3a v16(.13.1)\uff0c\u4e0a\u4e00\u4e2a\u7248\u672c\u5219\u4e3a v14\uff0c\u4e0d\u540c\u7684\u7248\u672c\u5728\u652f\u6301 JavaScript\uff08\u6216\u8005\u8bf4 ECMAScript\uff09\u65b0\u7279\u6027\u65b9\u9762\u6709\u6240\u533a\u522b\uff0c\u9047\u5230\u5177\u4f53\u95ee\u9898\u65f6\u53ef\u4ee5\u4f7f\u7528 nvm \u6765\u89e3\u51b3\uff0c\u8be6\u89c1\u8d44\u6e90\u94fe\u63a5\u3002 \u8bbf\u95ee Node.js\u5b98\u65b9\u7f51\u7ad9 \u53ef\u4ee5\u83b7\u53d6\u5404\u5e73\u53f0\u4e0b\u8f7d\u5730\u5740\uff0c\u4e5f\u53ef\u4ee5 \u901a\u8fc7\u5305\u7ba1\u7406\u5668\u5b89\u88c5 \u3002 \u5728\u4f7f\u7528\u5305\u7ba1\u7406\u5668\u5b89\u88c5\u65f6\u8bf7\u6ce8\u610f\uff0c\u4e0a\u8ff0\u7f51\u9875\u7ed9\u51fa\u7684\u547d\u4ee4\u4e2d\u53ef\u80fd\u5305\u542b npm \u5373 Node.js package manager \u662f Node.js \u9ed8\u8ba4\u7684\u5305\u7ba1\u7406\u5668\uff0c\u5982\u679c\u6b64\u5904\u6ca1\u6709\u5b89\u88c5\u4e5f\u6ca1\u6709\u5173\u7cfb\uff0c\u6211\u4eec\u4f1a\u5728\u4e0b\u8282\u4e2d\u8be6\u7ec6\u89e3\u91ca\u8fd9\u4e2a\u95ee\u9898\u3002","title":"\u5b89\u88c5"},{"location":"languages/node.js/#nodejs_2","text":"Node.js \u7684\u8fd0\u884c\u4e0e Python \u5341\u5206\u76f8\u4f3c\uff0c\u53ef\u4ee5\u4f7f\u7528 REPL\uff08\u82f1\u6587\uff1aread-eval-print-loop\uff0c\u5373\u4ea4\u4e92\u5f0f\u547d\u4ee4\u884c\uff09\u6216\u8005\u811a\u672c\u7684\u65b9\u5f0f\uff0c\u751a\u81f3\u8fd8\u6709\u4eba\u641e\u8fc7\u5bf9\u6807 IPython \u7684 IJavaScript \uff08\u4e0d\u8fc7\u51c9\u4e86\uff09 \u3002 REPL\uff1a\u5728\u547d\u4ee4\u884c\u8f93\u5165 node \u5c31\u53ef\u4ee5\u6253\u5f00\u4e00\u4e2a\u4ea4\u4e92\u5f0f\u754c\u9762\uff0c\u5c31\u5982\u540c\u4f60\u5728\u5b66\u4e60 JavaScript \u65f6\u4f7f\u7528\u6d4f\u89c8\u5668\u8c03\u8bd5\u5de5\u5177\u90a3\u6837\uff0c\u4f46\u662f Node.js \u5e76\u4e0d\u80fd\u50cf\u5728\u6d4f\u89c8\u5668\u4e2d\u90a3\u6837\u5bf9\u6253\u5370\u51fa\u6765\u7684\u5bf9\u8c61\u505a\u590d\u6742\u7684\u64cd\u4f5c\uff0c\u5f53\u7136\u8003\u8651\u5230\u8fd9\u662f\u5728 CLI \u4e2d\uff0c\u7f3a\u5c11\u7c7b\u4f3c\u7684\u64cd\u4f5c\u5e76\u4e0d\u5947\u602a\u3002 \u4e0e\u6d4f\u89c8\u5668\u4e0d\u540c\u7684\u53e6\u4e00\u70b9\u662f\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u7c7b\u4f3c .exit \u7684\u8bed\u53e5\u8fdb\u884c\u4e00\u4e9b\u975e JavaScript \u7684\u64cd\u4f5c\uff0c\u5982\u9000\u51fa Node.js\uff08\u5f53\u7136\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4e24\u6b21 Ctrl+C \u6216\u8005\u4e00\u6b21 Ctrl+D \u6765\u9000\u51fa\uff09\u3002 \u811a\u672c\uff1a\u4e0e Python \u7c7b\u4f3c\uff0c\u4f7f\u7528 node xxx.js \u6765\u6267\u884c\u4e00\u4e2a\u811a\u672c\uff08\u4f46\u662f\u5b9e\u9645\u64cd\u4f5c\u4e2d\u8fd9\u4e2a\u884c\u4e3a\u4e5f\u4f1a\u88ab\u5c01\u88c5\uff0c\u540c\u6837\u4f1a\u5728\u4e0b\u4e00\u8282\u4e2d\u89e3\u91ca\uff09\u3002","title":"Node.js \u8fd0\u884c"},{"location":"languages/node.js/#nodejs_3","text":"\u5728\u4e4b\u524d\u7684 JavaScript \u57fa\u7840\u7ae0\u8282\u4e2d\u5e76\u6ca1\u6709\u63d0\u53ca JavaScript \u6709\u4ec0\u4e48\u6a21\u5757\u5316\u6216\u8005\u5305\u7ba1\u7406\u7684\u4e1c\u897f\uff0c\u8fd9\u662f\u56e0\u4e3a\u5728\u524d\u7aef\u5f00\u53d1\u4e2d\uff0c\u8981\u4e48\u5c06\u7528\u5230\u7684\u6a21\u5757\u5168\u90e8\u6253\u5305\uff08\u5173\u4e8e\u6253\u5305\u5c06\u5728\u540e\u7eed\u63d0\u53ca\uff09\uff0c\u8981\u4e48\u901a\u8fc7 CDN \u5f15\u5165\uff0c\u524d\u8005\u901a\u8fc7 Node.js \u5b9e\u73b0\uff0c\u800c\u540e\u8005\u5219\u76f4\u63a5\u5c06\u5bfc\u51fa\u7684\u6a21\u5757\u6302\u5728\u5728 window \u4e0b\uff0c\u4e5f\u5373\u6210\u4e3a\u5168\u5c40\u53d8\u91cf\uff0c\u8fd9\u4e5f\u5c31\u662f\u65e9\u671f JavaScript \u7684\u95ee\u9898\uff0c\u901a\u8fc7\u5168\u5c40\u53d8\u91cf\u89e3\u51b3\u4e00\u5207\u95ee\u9898\uff0c\u5927\u5bb6\u5728\u7a0b\u8bbe\u4e2d\u60f3\u5fc5 ~\u8fd9\u4e48\u505a\u8fc7 ~\u77e5\u9053\u8fd9\u6837\u505a\u662f\u4e0d\u597d\u7684\u3002 \u8fd9\u4e2a\u95ee\u9898\u65e9\u5728 ECMA \u5236\u5b9a ES6 \u6807\u51c6\u5f15\u5165 ES6 Module \u524d\u5c31\u5e7f\u6cdb\u5b58\u5728\u4e86\uff0c\u56e0\u6b64\u793e\u533a\u65e9\u5df2\u63d0\u51fa\u4e86\u591a\u79cd\u89e3\u51b3\u65b9\u6848\uff0c\u4e3b\u8981\u6709 CommonJS\u3001AMD\u3001CMD \u51e0\u79cd\u3002\u540e\u4e24\u79cd\u73b0\u5728\u5df2\u7ecf\u5f88\u5c11\u51fa\u73b0\uff0c\u800c CommonJS \u7684\u4e3b\u8981\u5b9e\u8df5\u8005\u6b63\u662f Node.js\u3002\u56e0\u6b64\u5f53\u8fd0\u884c Node.js \u9879\u76ee\u65f6\uff0c\u5982\u679c\u5728\u7248\u672c\u4f4e\u4e8e ES6 \u7684\u60c5\u51b5\u4e0b\u4f7f\u7528 ES6 Module\uff08\u5373\u4f7f\u7528 import \u3001 export \uff09\u65b9\u6cd5\u5c31\u4f1a\u62a5\u9519\u3002\u4e0d\u8fc7\u597d\u5728\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528 ES6 \u53ca\u4ee5\u4e0a\u7248\u672c\uff0c\u6216\u8005\u4f7f\u7528 Babel\uff08\u89c1\u8d44\u6e90\u94fe\u63a5\uff09\u5b9e\u73b0\u517c\u5bb9\uff0c\u56e0\u6b64\u6211\u4eec\u5c06\u4e3b\u8981\u4f7f\u7528 ES6 Module \u6765\u7ba1\u7406\u6a21\u5757\u3002","title":"Node.js \u6a21\u5757\u5316"},{"location":"languages/node.js/#es6-module","text":"\u4ece\u4e00\u4e2a\u6587\u4ef6\u4e2d\u5bfc\u51fa\u53d8\u91cf\u3001\u51fd\u6570\u3001\u7c7b\u578b\u7b49\u5185\u5bb9\u7684\u65b9\u6cd5\u4e3a\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 // \u6587\u4ef6\u540d export.js // \u5bfc\u51fa\u503c value export { value }; // \u5bfc\u51fa\u503c value \u5e76\u91cd\u547d\u540d\u4e3a aliasNameOfValue export { value as aliasNameOfValue }; // \u4ee5\u4e0b\u4e24\u53e5\u7b49\u4ef7 export { value as default }; export default value ; // \u5bf9\u4e8e TypeScript\uff0c\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u5bfc\u51fa\u7c7b\u578b export type { type }; export { type }; \u5f15\u5165\u6a21\u5757\u7684\u65b9\u5f0f\u5219\u4e3a\uff1a 1 2 3 4 5 6 7 // \u6ce8\u610f\u8fd9\u91cc\u5e76\u4e0d\u9700\u8981\u6307\u5b9a\u540e\u7f00\u540d\uff0c\u66f4\u591a\u7684\u7ec6\u8282\u8bf7\u89c1\u4e0b\u8282 import { value } from './export' ; // \u5f15\u5165\u503c\u5e76\u8d77\u522b\u540d import { value as aliasNameOfValue } from './export' ; // \u4ee5\u4e0b\u4e24\u53e5\u7b49\u4ef7 import { default as value } from './export' ; import value from './export' ; \u5982\u679c\u9700\u8981\u5f15\u5165\u518d\u5bfc\u51fa\uff0c\u53ef\u4ee5\u7b80\u5199\u4e3a\uff1a 1 export { value } from './export' ;","title":"ES6 Module"},{"location":"languages/node.js/#_3","text":"nvm\uff1a https://github.com/nvm-sh/nvm Babel\uff1a https://babeljs.io/","title":"\u8d44\u6e90\u94fe\u63a5"},{"location":"languages/node.js/npm/","text":"Node.js \u5305\u7ba1\u7406 \u00b6 \u524d\u7f6e\u77e5\u8bc6 \u00b6 CLI \u57fa\u672c\u5e38\u8bc6 Node.js \u7684\u8fd0\u884c Node.js \u6a21\u5757\u5316 npm \u00b6 npm \u5373 Node.js package manager\uff0c\u662f Node.js \u9ed8\u8ba4\u7684\u5305\u7ba1\u7406\u5de5\u5177\uff0c\u6309\u7167\u4e0a\u8282\u6240\u8bf4\u7684\u65b9\u6cd5\u5b89\u88c5 Node.js \u65f6\uff0c\u5e94\u5f53\u5df2\u7ecf\u5b89\u88c5\u4e86 npm\uff0c\u53ef\u4ee5\u901a\u8fc7 npm -v \u6765\u68c0\u67e5 npm \u662f\u5426\u5df2\u5b89\u88c5\u6210\u529f\u3002 Node.js \u7684\u5305\u7ba1\u7406 \u00b6 \u65b0\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939\u5e76\u6267\u884c npm init \u547d\u4ee4\uff0c\u6839\u636e\u63d0\u793a\u586b\u5199\u5b57\u6bb5\u540e\uff0c\u6211\u4eec\u770b\u5230\u6587\u4ef6\u5939\u4e2d\u591a\u4e86\u4e00\u4e2a\u540d\u4e3a package.json \u7684\u6587\u4ef6\uff0c\u8fd9\u4e2a\u6587\u4ef6\u8bb0\u5f55\u4e86\u5f53\u524d\u9879\u76ee\u7684\u57fa\u672c\u4fe1\u606f\uff0c\u5982\u9879\u76ee\u540d\u79f0\u3001\u63cf\u8ff0\u3001\u7248\u672c\u3001\u8bc1\u4e66\uff0c\u4ee5\u53ca\u53ef\u80fd\u7528\u5230\u7684\u4e00\u4e9b\u64cd\u4f5c\uff0c\u8fd8\u6709\u5f53\u524d\u9879\u76ee\u7684\u4f9d\u8d56\u4fe1\u606f\uff0c\u8fd9\u4e9b\u4fe1\u606f\u7684\u4f5c\u7528\u5c06\u5728\u540e\u9762\u8bf4\u660e\u3002 Node.js \u7684\u6a21\u5757\u67e5\u627e \u00b6 \u4e0a\u8282\u8bf4\u5230\u4e86\u5982\u4f55\u5728 Node.js \u4e2d\u5f15\u7528\u5176\u4ed6\u6587\u4ef6\u5bfc\u51fa\u7684\u6a21\u5757\uff0c\u4f46\u662f\u4e0a\u8282\u7ed9\u51fa\u7684\u4f8b\u5b50\u90fd\u662f\u4ece\u76f8\u5bf9\u8def\u5f84\u4e2d\u5f15\u5165\uff0c\u5f15\u5165\u5185\u7f6e\u6216\u7b2c\u4e09\u65b9\u6a21\u5757\u65f6\uff0c\u5e94\u5f53\u6309\u7167\u5982\u4e0b\u65b9\u5f0f\uff1a 1 2 import fs from 'fs' ; // \u5185\u7f6e\u6587\u4ef6\u7cfb\u7edf\u6a21\u5757 import express from 'express' ; // \u4e00\u4e2a web \u670d\u52a1\u5668\u6a21\u5757 \u8fd9\u5e76\u4e0d\u662f\u76f8\u5bf9\u6216\u7edd\u5bf9\u7684\u8def\u5f84\uff0c\u8fd9\u5c31\u8981\u63d0\u5230 Node.js \u5bfb\u627e\u6a21\u5757\u7684\u903b\u8f91\u3002 \u5bf9\u4e8e\u5185\u7f6e\u6a21\u5757\uff0c\u5728\u7f16\u8bd1\u9636\u6bb5\u5df2\u7ecf\u786e\u5b9a\u4e86\u5b83\u4eec\u7684\u4f4d\u7f6e\uff0c\u56e0\u6b64\u6ca1\u6709\u5bfb\u5740\u7684\u95ee\u9898\uff1b \u5bf9\u4e8e\u6307\u5b9a\u8def\u5f84\u7684\u6a21\u5757\uff1a \u9996\u5148\u67e5\u627e\u8be5\u6587\u4ef6\uff0c\u7f3a\u7701\u7684\u540e\u7f00\u540d\u6309\u7167 .js , .node , .json \u7684\u987a\u5e8f\u5c1d\u8bd5\uff1b \u7136\u540e\u5c1d\u8bd5\u4f5c\u4e3a\u6587\u4ef6\u5939\u540d\u67e5\u627e\u8be5\u6587\u4ef6\u5939\u4e0b\u7684 package.json \u5e76\u5f15\u7528\u5176\u4e2d main \u5b57\u6bb5\u6307\u5b9a\u7684\u6587\u4ef6\uff1b \u6700\u540e\u5c1d\u8bd5\u4f5c\u4e3a\u6587\u4ef6\u5939\u540d\u67e5\u627e\u8be5\u6587\u4ef6\u5939\u4e0b\u7684 index \u6587\u4ef6\uff0c\u7f3a\u7701\u540e\u7f00\u540d\u903b\u8f91\u4e0e 1. \u76f8\u540c\u3002 \u5bf9\u4e8e\u5176\u4ed6\u6ca1\u6709\u6307\u5b9a\u8def\u5f84\u7684\u6a21\u5757\uff0c\u4e5f\u5373\u901a\u8fc7\u5305\u7ba1\u7406\u5668\u5b89\u88c5\u7684\u6a21\u5757\uff0c\u4f1a\u5c1d\u8bd5\u5728\u5f53\u524d\u6587\u4ef6\u5939\u4e0b\u7684 node_modules \u6587\u4ef6\u5939\u4e0b\u67e5\u627e\uff0c\u5982\u679c\u67e5\u627e\u5931\u8d25\uff0c\u5219\u4f9d\u6b21\u4ece\u4e0a\u7ea7\u6587\u4ef6\u5939\u4e2d\uff08\u53ef\u80fd\u7684\uff09 node_modules \u6587\u4ef6\u5939\u4e0b\u67e5\u627e\u3002 \u5176\u4ed6\u5305\u7ba1\u7406\u5668 \u00b6 \u4e0a\u4e00\u90e8\u5206\u5f15\u51fa\u4e86\u4e00\u4e2a\u91cd\u8981\u7684\u95ee\u9898\uff0c\u5f53\u6211\u4eec\u9700\u8981\u5f88\u591a\u4f9d\u8d56\u7684\u9879\u76ee\u65f6\uff0c\u5982\u4f55\u7ec4\u7ec7\u8fd9\u4e9b\u9879\u76ee\u5c31\u6210\u4e3a\u4e00\u4e2a\u95ee\u9898\uff0c\u56e0\u4e3a node_modules \u5f53\u4e2d\u7684\u6bcf\u4e00\u4e2a\u9879\u76ee\u90fd\u53ef\u80fd\u6709\u81ea\u5df1\u7684\u4f9d\u8d56\uff0c\u5982\u679c\u6240\u6709\u9879\u76ee\u7684\u4f9d\u8d56\u90fd\u5206\u522b\u5b89\u88c5\uff0c\u663e\u7136\u53ef\u80fd\u5b58\u5728\u8bb8\u591a\u91cd\u590d\uff0c\u4f46\u662f\u53c8\u5fc5\u987b\u5c3d\u91cf\u907f\u514d\u4e0d\u540c\u9879\u76ee\u7684\u4f9d\u8d56\u4e92\u76f8\u5e72\u6270\uff0c\u8fd9\u5c31\u6d89\u53ca\u5230\u5305\u7ba1\u7406\u5668\u7684\u7b56\u7565\u95ee\u9898\u3002 \u76ee\u524d\u5e38\u89c1\u7684\u5305\u7ba1\u7406\u5668\u4e3b\u8981\u6709 npm\u3001yarn\u3001pnpm\u3002\uff08cnpm \u672c\u8d28\u4e0a\u4e0d\u8fc7\u662f npm \u81ea\u52a8\u6362\u6e90\u7684\u5feb\u6377\u65b9\u5f0f\uff0c\u6ca1\u6709\u5fc5\u8981\u4f7f\u7528\uff0c\u540e\u9762\u4f1a\u7ed9\u51fa\u624b\u52a8\u6362\u6e90\u7684\u65b9\u5f0f\uff09 \u4ee5\u4e0b\u7b80\u5355\u4ecb\u7ecd\u51e0\u79cd\u5305\u7ba1\u7406\u5668\u7684\u7b56\u7565\u533a\u522b\uff1a \u5b89\u88c5 npm \u7684\u5b89\u88c5\u662f\u4e32\u884c\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ea\u6709\u5b89\u88c5\u5b8c\u4e00\u4e2a package.json \u4e2d\u58f0\u660e\u7684\u4f9d\u8d56\u540e\u624d\u4f1a\u5b89\u88c5\u4e0b\u4e00\u4e2a\uff0c\u800c\u4e14\u4f1a\u628a\u6240\u6709\u7684\u4fe1\u606f\u6253\u5728\u7ec8\u7aef\u4e0a\uff0c\u800c\u4e14\u6bcf\u6b21\u5b89\u88c5\u540c\u6837\u7684\u5185\u5bb9\u90fd\u662f\u91cd\u65b0\u4e0b\u8f7d\uff1b yarn \u548c pnpm \u4f1a\u540c\u65f6\u8fdb\u884c\u6240\u6709\u7684\u5b89\u88c5\uff0c\u540c\u65f6\u4f18\u5316\u4e86\u8f93\u51fa\u4fe1\u606f\uff0c\u53ef\u4ee5\u4f7f\u7528\u7f13\u5b58\u51cf\u5c11\u91cd\u590d\u4e0b\u8f7d\u3002 \u7ec4\u7ec7\u65b9\u5f0f \u65e9\u671f npm \u5b89\u88c5\u7684\u4f9d\u8d56\u662f\u9010\u5c42\u5d4c\u5957\u7684\uff0c\u5176\u7ed3\u679c\u5c31\u662f\u6587\u4ef6\u8def\u5f84\u6781\u957f\u800c\u4e14\u4e0d\u53ef\u5171\u4eab\uff08\u9996\u5148\u662f\u4f1a\u91cd\u590d\u5b89\u88c5\u540c\u6837\u7684\u4e1c\u897f\u6d6a\u8d39\u7a7a\u95f4\uff0c\u5176\u6b21\u662f\u4e0d\u540c\u7684\u6a21\u5757\u5206\u522b\u5f15\u7528\u4e24\u4efd\u6a21\u5757\u5e76\u4e0d\u80fd\u5171\u4eab\u5185\u5b58\u7a7a\u95f4\uff0c\u9020\u6210\u4e0d\u53ef\u9884\u77e5\u7684 bug\uff09\uff1b \u73b0\u5728\u7684 npm \u548c yarn \u90fd\u91c7\u7528\u6241\u5e73\u5316\u7ed3\u6784\uff0c\u628a\u6240\u6709\u9879\u76ee\u7684\u4f9d\u8d56\u90fd\u88c5\u5728\u6700\u4e0a\u5c42\u7684 node_modules \u4e2d\uff0c\u5f53\u9047\u5230\u7248\u672c\u51b2\u7a81\u65f6\u624d\u5355\u72ec\u5b89\u88c5\u5728\u5185\u5c42\uff1b pnpm \u5bf9\u4e8e\u540c\u4e00\u4e2a\u9879\u76ee\u7684\u540c\u4e00\u4e2a\u7248\u672c\u5168\u5c40\u53ea\u4fdd\u7559\u4e00\u4efd\uff0c\u5b58\u50a8\u5728\u81ea\u5df1\u7684\u76ee\u5f55\u4e2d\uff0c\u4efb\u4f55\u9879\u76ee\u5f15\u7528\u65f6\u90fd\u901a\u8fc7\u786c\u94fe\u63a5\u6307\u5411\u540c\u4e00\u4efd\u6587\u4ef6\uff0c\u4ecd\u7136\u4f7f\u7528\u5d4c\u5957\u7ed3\u6784\u3002 \u5b89\u88c5\u7684\u533a\u522b\u81ea\u7136\u4e0d\u7528\u8bf4\uff0cnpm \u6bd4 yarn \u548c pnpm \u6162\u5f88\u591a\uff0c\u503c\u5f97\u4e00\u63d0\u7684\u662f\u7b2c\u4e8c\u70b9\uff0c\u6241\u5e73\u5316\u5e26\u6765\u7684\u5f71\u54cd\u662f\u9879\u76ee\u53ef\u4ee5\u975e\u6cd5\u8bbf\u95ee\u6ca1\u6709\u58f0\u660e\u7684\u5305\uff08\u5982\u679c\u4f9d\u8d56 A \u58f0\u660e\u4e86\u4f9d\u8d56 B\uff0c\u90a3\u4e48\u4f9d\u8d56 C \u4e0d\u9700\u8981\u58f0\u660e B \u5c31\u53ef\u4ee5\u5728\u4e0a\u7ea7\u6587\u4ef6\u5939\u4e2d\u8bbf\u95ee\u5230 B\uff09\uff0c\u8fd9\u5c31\u9020\u6210\u4e86\u6f5c\u5728\u7684\u4e0d\u5b89\u5168\u6027\u3002\u5176\u4f59\u7684\u5dee\u522b\u53ef\u4ee5\u53c2\u8003 \u4e3a\u4ec0\u4e48\u73b0\u5728\u6211\u66f4\u63a8\u8350 pnpm \u800c\u4e0d\u662f npm/yarn? \u3002 \u56e0\u6b64\u4e09\u8005\u7684\u6392\u5e8f\u5e94\u5f53\u662f pnpm > yarn > npm\u3002pnpm \u5728\u4e00\u4e9b\u9879\u76ee\u4e2d\u4f1a\u5f15\u8d77\u9519\u8bef\uff0c\u5177\u4f53\u539f\u56e0\u6211\u6ca1\u6709\u7814\u7a76\u8fc7\uff0c\u5982\u679c\u9047\u5230\u8fd9\u79cd\u60c5\u51b5\uff0c\u5efa\u8bae\u6362\u7528 yarn\uff0c\u4ee5\u4e0b\u5c06\u4e3b\u8981\u4ee5 yarn \u4e3a\u4f8b\u4ecb\u7ecd\u3002 \u5b89\u88c5\u4e24\u79cd\u5305\u7ba1\u7406\u5668\u7684\u65b9\u6cd5\u662f\uff1a 1 2 npm install -g yarn npm install -g pnpm \u5305\u7ba1\u7406\u5668\u7684\u4f7f\u7528 \u00b6 \u4e09\u79cd\u5305\u7ba1\u7406\u5668\u652f\u6301\u7684\u529f\u80fd\u6bd4\u8f83\u7c7b\u4f3c\uff0c\u8bed\u6cd5\u4e5f\u6bd4\u8f83\u63a5\u8fd1\uff0c\u5e38\u7528\u7684\u6709\uff1a \u64cd\u4f5c npm yarn pnpm \u81ea\u52a8\u5b89\u88c5\u4f9d\u8d56 npm install yarn install / yarn pnpm install \u6dfb\u52a0\u4f9d\u8d56 npm install lodash yarn add lodash pnpm add lodash \u6dfb\u52a0\u5f00\u53d1\u4f9d\u8d56\uff08\u4e0d\u7528\u4e8e\u751f\u4ea7\u73af\u5883\uff09 npm install -D typescript yarn add -D typescript pnpm add -D typescript \u79fb\u9664\u4f9d\u8d56 npm uninstall lodash yarn remove lodash pnpm remove lodash \u6267\u884c start \u811a\u672c npm run start yarn start pnpm start \u6ce8\uff1a\u5728\u4e0d\u5f15\u8d77\u6b67\u4e49\u7684\u60c5\u51b5\u4e0b npm \u5141\u8bb8\u7b80\u5199\uff0c\u5982 npm i \u4ee3\u66ff npm install \u3002 Node.js \u811a\u672c \u00b6 \u524d\u9762\u63d0\u5230\u7684\u6267\u884c\u811a\u672c\uff0c\u662f\u6307\u5728 package.json \u4e2d\u58f0\u660e\u7684\u811a\u672c\uff0c\u5982 package.json \u4e2d\u6709\u5982\u4e0b\u5b57\u6bb5\uff1a 1 2 3 4 5 { \"scripts\" : { \"start\" : \"node dist/index.js\" , } } \u90a3\u4e48\u6267\u884c yarn start \u5c31\u76f8\u5f53\u4e8e\u6267\u884c node dist/index.js \u3002\u4f46\u811a\u672c\u7684\u529f\u80fd\u4e0d\u6b62\u4e8e\u6b64\uff0c\u4f8b\u5982 prettier \u662f\u4e00\u4e2a\u4ee3\u7801\u683c\u5f0f\u5316\u5de5\u5177\uff0c\u5b89\u88c5\u5728\u9879\u76ee\u4e2d\u540e\u5e76\u6ca1\u6709\u5b89\u88c5\u5728 $PATH \u4e2d\uff0c\u56e0\u6b64\u76f4\u63a5\u5728 Shell \u4e2d\u8fd0\u884c prettier \u4e0d\u4f1a\u5f97\u5230\u4efb\u4f55\u7ed3\u679c\uff0c\u6b64\u65f6\u5e94\u8be5\u6267\u884c yarn prettier --write src/**/*.js \uff0cyarn \u4f1a\u627e\u5230\u9002\u5f53\u7684\u53ef\u6267\u884c\u6587\u4ef6\u6765\u5b8c\u6210\u8fd9\u4e00\u547d\u4ee4\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 package.json \u4e2d\u5199\uff1a 1 2 3 4 5 { \"scripts\" : { \"lint\" : \"prettier --write src/**/*.js\" , } } \u90a3\u4e48 yarn lint \u5c31\u76f8\u5f53\u4e8e\u4e0a\u8ff0\u547d\u4ee4\u3002 npx \u5728\u53e6\u4e00\u4e9b\u60c5\u51b5\u4e0b\uff08\u6bd4\u5982\u521b\u5efa React \u9879\u76ee\uff09\uff0c\u6211\u4eec\u867d\u7136\u9700\u8981\u6267\u884c\u4e00\u4e9b\u7c7b\u4f3c\u4e8e prettier \u7684\u547d\u4ee4\uff0c\u4f46\u4ee5\u540e\u5e76\u4e0d\u9700\u8981\u5b89\u88c5\u8fd9\u4e2a\u6a21\u5757\uff0c\u66f4\u6ca1\u6709\u5fc5\u8981\u628a\u8fd9\u4e2a\u6a21\u5757\u5199\u5728 package.json \u4e2d\uff0c\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u6267\u884c npx create-react-app example-app \uff0cnpx \u4f1a\u81ea\u52a8\u4e0b\u8f7d\u8fd9\u4e00\u6a21\u5757\u5e76\u8fd0\u884c\uff0c\u4f46\u5e76\u4e0d\u4f1a\u4fdd\u7559\u5728\u5f53\u524d\u6587\u4ef6\u5939\u4e2d\uff0c\u4e5f\u4e0d\u4f1a\u5bf9 package.json \u9020\u6210\u5f71\u54cd\u3002 yarn \u548c pnpm \u4e5f\u652f\u6301\u8fd9\u4e00\u8bed\u6cd5\u3002 TypeScript \u76f8\u5173 \u00b6 \u524d\u9762\u5df2\u7ecf\u8bb2\u8fc7 TypeScript \u7684\u8bed\u6cd5\uff0c\u4f46 TypeScript \u5e76\u4e0d\u80fd\u76f4\u63a5\u5728\u6d4f\u89c8\u5668\u6216 Node.js \u4e2d\u89e3\u6790\uff08\u5012\u662f\u53ef\u4ee5\u5728 deno \u4e2d\u89e3\u6790\uff0c\u4f46\u662f\u6bd5\u7adf deno \u751f\u6001\u8fd8\u6ca1\u53d1\u5c55\u8d77\u6765\uff09\uff0c\u5b9e\u9645\u4e0a\u8981\u7f16\u5199 TypeScript \u7a0b\u5e8f\uff0c\u9700\u8981\u5b89\u88c5 Node.js \u6a21\u5757 typescript \u3002\u8fd9\u4e00\u6a21\u5757\u4e2d\u5305\u542b\u4e86\u547d\u4ee4 tsc \u53ef\u4ee5\u5bf9 TypeScript \u8bed\u6cd5\u8fdb\u884c\u68c0\u67e5\uff0c\u5e76\u4e14\u751f\u6210\u76f8\u5e94\u7684 JavaScript \u6587\u4ef6\u3002\u4f8b\u5982\u6267\u884c yarn add -D typescript \u540e\uff0c\u5728 package.json \u7684 script \u5b57\u6bb5\u4e2d\u6dfb\u52a0\u6dfb\u52a0\uff1a 1 2 3 { \"build\" : \"tsc\" } \u7136\u540e\u8fd0\u884c yarn build \u5373\u53ef\u5bf9 TypeScript \u4ee3\u7801\u8fdb\u884c\u7f16\u8bd1\uff0c\u66f4\u591a\u7684\u914d\u7f6e\u8be6\u89c1\u8d44\u6e90\u94fe\u63a5\u3002 TypeScript \u7684\u7c7b\u578b\u6807\u6ce8 \u6211\u4eec\u77e5\u9053 TypeScript \u901a\u8fc7\u9759\u6001\u7c7b\u578b\u68c0\u67e5\u63d0\u4f9b\u989d\u5916\u7684\u5b89\u5168\u6027\uff0c\u5728\u5305\u7ba1\u7406\u5668\u5b89\u88c5\u7b2c\u4e09\u65b9\u6a21\u5757\u65f6\uff0c\u901a\u5e38\u5df2\u7ecf\u5305\u542b\u4e86\u76f8\u5e94\u6a21\u5757\u7684\u7c7b\u578b\u6807\u6ce8\uff08\u5f62\u5982 index.d.ts \u7684\u6587\u4ef6\uff09\uff0c\u4f46\u4e5f\u6709\u90e8\u5206\u9879\u76ee\u5e76\u6ca1\u6709\u81ea\u5e26\u7c7b\u578b\u6807\u6ce8\uff0c\u8fd9\u90e8\u5206\u9879\u76ee\u8bb8\u591a\u90fd\u6709\u5355\u72ec\u7684\u7c7b\u578b\u6807\u6ce8\u6a21\u5757\uff0c\u8fd9\u4e9b\u6a21\u5757\u5f62\u5982 @types/name \uff0c\u4f8b\u5982 lodash \u5e76\u6ca1\u6709\u81ea\u5e26\u7c7b\u578b\u6807\u6ce8\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7 yarn add -D @types/lodash \u6765\u6dfb\u52a0\u7c7b\u578b\u6807\u6ce8\u3002 \u8d44\u6e90\u94fe\u63a5 \u00b6 tsconfig\u914d\u7f6e\uff1a https://typescript.bootcss.com/tsconfig-json.html","title":"npm \u7b80\u4ecb"},{"location":"languages/node.js/npm/#nodejs","text":"","title":"Node.js \u5305\u7ba1\u7406"},{"location":"languages/node.js/npm/#_1","text":"CLI \u57fa\u672c\u5e38\u8bc6 Node.js \u7684\u8fd0\u884c Node.js \u6a21\u5757\u5316","title":"\u524d\u7f6e\u77e5\u8bc6"},{"location":"languages/node.js/npm/#npm","text":"npm \u5373 Node.js package manager\uff0c\u662f Node.js \u9ed8\u8ba4\u7684\u5305\u7ba1\u7406\u5de5\u5177\uff0c\u6309\u7167\u4e0a\u8282\u6240\u8bf4\u7684\u65b9\u6cd5\u5b89\u88c5 Node.js \u65f6\uff0c\u5e94\u5f53\u5df2\u7ecf\u5b89\u88c5\u4e86 npm\uff0c\u53ef\u4ee5\u901a\u8fc7 npm -v \u6765\u68c0\u67e5 npm \u662f\u5426\u5df2\u5b89\u88c5\u6210\u529f\u3002","title":"npm"},{"location":"languages/node.js/npm/#nodejs_1","text":"\u65b0\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939\u5e76\u6267\u884c npm init \u547d\u4ee4\uff0c\u6839\u636e\u63d0\u793a\u586b\u5199\u5b57\u6bb5\u540e\uff0c\u6211\u4eec\u770b\u5230\u6587\u4ef6\u5939\u4e2d\u591a\u4e86\u4e00\u4e2a\u540d\u4e3a package.json \u7684\u6587\u4ef6\uff0c\u8fd9\u4e2a\u6587\u4ef6\u8bb0\u5f55\u4e86\u5f53\u524d\u9879\u76ee\u7684\u57fa\u672c\u4fe1\u606f\uff0c\u5982\u9879\u76ee\u540d\u79f0\u3001\u63cf\u8ff0\u3001\u7248\u672c\u3001\u8bc1\u4e66\uff0c\u4ee5\u53ca\u53ef\u80fd\u7528\u5230\u7684\u4e00\u4e9b\u64cd\u4f5c\uff0c\u8fd8\u6709\u5f53\u524d\u9879\u76ee\u7684\u4f9d\u8d56\u4fe1\u606f\uff0c\u8fd9\u4e9b\u4fe1\u606f\u7684\u4f5c\u7528\u5c06\u5728\u540e\u9762\u8bf4\u660e\u3002","title":"Node.js \u7684\u5305\u7ba1\u7406"},{"location":"languages/node.js/npm/#nodejs_2","text":"\u4e0a\u8282\u8bf4\u5230\u4e86\u5982\u4f55\u5728 Node.js \u4e2d\u5f15\u7528\u5176\u4ed6\u6587\u4ef6\u5bfc\u51fa\u7684\u6a21\u5757\uff0c\u4f46\u662f\u4e0a\u8282\u7ed9\u51fa\u7684\u4f8b\u5b50\u90fd\u662f\u4ece\u76f8\u5bf9\u8def\u5f84\u4e2d\u5f15\u5165\uff0c\u5f15\u5165\u5185\u7f6e\u6216\u7b2c\u4e09\u65b9\u6a21\u5757\u65f6\uff0c\u5e94\u5f53\u6309\u7167\u5982\u4e0b\u65b9\u5f0f\uff1a 1 2 import fs from 'fs' ; // \u5185\u7f6e\u6587\u4ef6\u7cfb\u7edf\u6a21\u5757 import express from 'express' ; // \u4e00\u4e2a web \u670d\u52a1\u5668\u6a21\u5757 \u8fd9\u5e76\u4e0d\u662f\u76f8\u5bf9\u6216\u7edd\u5bf9\u7684\u8def\u5f84\uff0c\u8fd9\u5c31\u8981\u63d0\u5230 Node.js \u5bfb\u627e\u6a21\u5757\u7684\u903b\u8f91\u3002 \u5bf9\u4e8e\u5185\u7f6e\u6a21\u5757\uff0c\u5728\u7f16\u8bd1\u9636\u6bb5\u5df2\u7ecf\u786e\u5b9a\u4e86\u5b83\u4eec\u7684\u4f4d\u7f6e\uff0c\u56e0\u6b64\u6ca1\u6709\u5bfb\u5740\u7684\u95ee\u9898\uff1b \u5bf9\u4e8e\u6307\u5b9a\u8def\u5f84\u7684\u6a21\u5757\uff1a \u9996\u5148\u67e5\u627e\u8be5\u6587\u4ef6\uff0c\u7f3a\u7701\u7684\u540e\u7f00\u540d\u6309\u7167 .js , .node , .json \u7684\u987a\u5e8f\u5c1d\u8bd5\uff1b \u7136\u540e\u5c1d\u8bd5\u4f5c\u4e3a\u6587\u4ef6\u5939\u540d\u67e5\u627e\u8be5\u6587\u4ef6\u5939\u4e0b\u7684 package.json \u5e76\u5f15\u7528\u5176\u4e2d main \u5b57\u6bb5\u6307\u5b9a\u7684\u6587\u4ef6\uff1b \u6700\u540e\u5c1d\u8bd5\u4f5c\u4e3a\u6587\u4ef6\u5939\u540d\u67e5\u627e\u8be5\u6587\u4ef6\u5939\u4e0b\u7684 index \u6587\u4ef6\uff0c\u7f3a\u7701\u540e\u7f00\u540d\u903b\u8f91\u4e0e 1. \u76f8\u540c\u3002 \u5bf9\u4e8e\u5176\u4ed6\u6ca1\u6709\u6307\u5b9a\u8def\u5f84\u7684\u6a21\u5757\uff0c\u4e5f\u5373\u901a\u8fc7\u5305\u7ba1\u7406\u5668\u5b89\u88c5\u7684\u6a21\u5757\uff0c\u4f1a\u5c1d\u8bd5\u5728\u5f53\u524d\u6587\u4ef6\u5939\u4e0b\u7684 node_modules \u6587\u4ef6\u5939\u4e0b\u67e5\u627e\uff0c\u5982\u679c\u67e5\u627e\u5931\u8d25\uff0c\u5219\u4f9d\u6b21\u4ece\u4e0a\u7ea7\u6587\u4ef6\u5939\u4e2d\uff08\u53ef\u80fd\u7684\uff09 node_modules \u6587\u4ef6\u5939\u4e0b\u67e5\u627e\u3002","title":"Node.js \u7684\u6a21\u5757\u67e5\u627e"},{"location":"languages/node.js/npm/#_2","text":"\u4e0a\u4e00\u90e8\u5206\u5f15\u51fa\u4e86\u4e00\u4e2a\u91cd\u8981\u7684\u95ee\u9898\uff0c\u5f53\u6211\u4eec\u9700\u8981\u5f88\u591a\u4f9d\u8d56\u7684\u9879\u76ee\u65f6\uff0c\u5982\u4f55\u7ec4\u7ec7\u8fd9\u4e9b\u9879\u76ee\u5c31\u6210\u4e3a\u4e00\u4e2a\u95ee\u9898\uff0c\u56e0\u4e3a node_modules \u5f53\u4e2d\u7684\u6bcf\u4e00\u4e2a\u9879\u76ee\u90fd\u53ef\u80fd\u6709\u81ea\u5df1\u7684\u4f9d\u8d56\uff0c\u5982\u679c\u6240\u6709\u9879\u76ee\u7684\u4f9d\u8d56\u90fd\u5206\u522b\u5b89\u88c5\uff0c\u663e\u7136\u53ef\u80fd\u5b58\u5728\u8bb8\u591a\u91cd\u590d\uff0c\u4f46\u662f\u53c8\u5fc5\u987b\u5c3d\u91cf\u907f\u514d\u4e0d\u540c\u9879\u76ee\u7684\u4f9d\u8d56\u4e92\u76f8\u5e72\u6270\uff0c\u8fd9\u5c31\u6d89\u53ca\u5230\u5305\u7ba1\u7406\u5668\u7684\u7b56\u7565\u95ee\u9898\u3002 \u76ee\u524d\u5e38\u89c1\u7684\u5305\u7ba1\u7406\u5668\u4e3b\u8981\u6709 npm\u3001yarn\u3001pnpm\u3002\uff08cnpm \u672c\u8d28\u4e0a\u4e0d\u8fc7\u662f npm \u81ea\u52a8\u6362\u6e90\u7684\u5feb\u6377\u65b9\u5f0f\uff0c\u6ca1\u6709\u5fc5\u8981\u4f7f\u7528\uff0c\u540e\u9762\u4f1a\u7ed9\u51fa\u624b\u52a8\u6362\u6e90\u7684\u65b9\u5f0f\uff09 \u4ee5\u4e0b\u7b80\u5355\u4ecb\u7ecd\u51e0\u79cd\u5305\u7ba1\u7406\u5668\u7684\u7b56\u7565\u533a\u522b\uff1a \u5b89\u88c5 npm \u7684\u5b89\u88c5\u662f\u4e32\u884c\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ea\u6709\u5b89\u88c5\u5b8c\u4e00\u4e2a package.json \u4e2d\u58f0\u660e\u7684\u4f9d\u8d56\u540e\u624d\u4f1a\u5b89\u88c5\u4e0b\u4e00\u4e2a\uff0c\u800c\u4e14\u4f1a\u628a\u6240\u6709\u7684\u4fe1\u606f\u6253\u5728\u7ec8\u7aef\u4e0a\uff0c\u800c\u4e14\u6bcf\u6b21\u5b89\u88c5\u540c\u6837\u7684\u5185\u5bb9\u90fd\u662f\u91cd\u65b0\u4e0b\u8f7d\uff1b yarn \u548c pnpm \u4f1a\u540c\u65f6\u8fdb\u884c\u6240\u6709\u7684\u5b89\u88c5\uff0c\u540c\u65f6\u4f18\u5316\u4e86\u8f93\u51fa\u4fe1\u606f\uff0c\u53ef\u4ee5\u4f7f\u7528\u7f13\u5b58\u51cf\u5c11\u91cd\u590d\u4e0b\u8f7d\u3002 \u7ec4\u7ec7\u65b9\u5f0f \u65e9\u671f npm \u5b89\u88c5\u7684\u4f9d\u8d56\u662f\u9010\u5c42\u5d4c\u5957\u7684\uff0c\u5176\u7ed3\u679c\u5c31\u662f\u6587\u4ef6\u8def\u5f84\u6781\u957f\u800c\u4e14\u4e0d\u53ef\u5171\u4eab\uff08\u9996\u5148\u662f\u4f1a\u91cd\u590d\u5b89\u88c5\u540c\u6837\u7684\u4e1c\u897f\u6d6a\u8d39\u7a7a\u95f4\uff0c\u5176\u6b21\u662f\u4e0d\u540c\u7684\u6a21\u5757\u5206\u522b\u5f15\u7528\u4e24\u4efd\u6a21\u5757\u5e76\u4e0d\u80fd\u5171\u4eab\u5185\u5b58\u7a7a\u95f4\uff0c\u9020\u6210\u4e0d\u53ef\u9884\u77e5\u7684 bug\uff09\uff1b \u73b0\u5728\u7684 npm \u548c yarn \u90fd\u91c7\u7528\u6241\u5e73\u5316\u7ed3\u6784\uff0c\u628a\u6240\u6709\u9879\u76ee\u7684\u4f9d\u8d56\u90fd\u88c5\u5728\u6700\u4e0a\u5c42\u7684 node_modules \u4e2d\uff0c\u5f53\u9047\u5230\u7248\u672c\u51b2\u7a81\u65f6\u624d\u5355\u72ec\u5b89\u88c5\u5728\u5185\u5c42\uff1b pnpm \u5bf9\u4e8e\u540c\u4e00\u4e2a\u9879\u76ee\u7684\u540c\u4e00\u4e2a\u7248\u672c\u5168\u5c40\u53ea\u4fdd\u7559\u4e00\u4efd\uff0c\u5b58\u50a8\u5728\u81ea\u5df1\u7684\u76ee\u5f55\u4e2d\uff0c\u4efb\u4f55\u9879\u76ee\u5f15\u7528\u65f6\u90fd\u901a\u8fc7\u786c\u94fe\u63a5\u6307\u5411\u540c\u4e00\u4efd\u6587\u4ef6\uff0c\u4ecd\u7136\u4f7f\u7528\u5d4c\u5957\u7ed3\u6784\u3002 \u5b89\u88c5\u7684\u533a\u522b\u81ea\u7136\u4e0d\u7528\u8bf4\uff0cnpm \u6bd4 yarn \u548c pnpm \u6162\u5f88\u591a\uff0c\u503c\u5f97\u4e00\u63d0\u7684\u662f\u7b2c\u4e8c\u70b9\uff0c\u6241\u5e73\u5316\u5e26\u6765\u7684\u5f71\u54cd\u662f\u9879\u76ee\u53ef\u4ee5\u975e\u6cd5\u8bbf\u95ee\u6ca1\u6709\u58f0\u660e\u7684\u5305\uff08\u5982\u679c\u4f9d\u8d56 A \u58f0\u660e\u4e86\u4f9d\u8d56 B\uff0c\u90a3\u4e48\u4f9d\u8d56 C \u4e0d\u9700\u8981\u58f0\u660e B \u5c31\u53ef\u4ee5\u5728\u4e0a\u7ea7\u6587\u4ef6\u5939\u4e2d\u8bbf\u95ee\u5230 B\uff09\uff0c\u8fd9\u5c31\u9020\u6210\u4e86\u6f5c\u5728\u7684\u4e0d\u5b89\u5168\u6027\u3002\u5176\u4f59\u7684\u5dee\u522b\u53ef\u4ee5\u53c2\u8003 \u4e3a\u4ec0\u4e48\u73b0\u5728\u6211\u66f4\u63a8\u8350 pnpm \u800c\u4e0d\u662f npm/yarn? \u3002 \u56e0\u6b64\u4e09\u8005\u7684\u6392\u5e8f\u5e94\u5f53\u662f pnpm > yarn > npm\u3002pnpm \u5728\u4e00\u4e9b\u9879\u76ee\u4e2d\u4f1a\u5f15\u8d77\u9519\u8bef\uff0c\u5177\u4f53\u539f\u56e0\u6211\u6ca1\u6709\u7814\u7a76\u8fc7\uff0c\u5982\u679c\u9047\u5230\u8fd9\u79cd\u60c5\u51b5\uff0c\u5efa\u8bae\u6362\u7528 yarn\uff0c\u4ee5\u4e0b\u5c06\u4e3b\u8981\u4ee5 yarn \u4e3a\u4f8b\u4ecb\u7ecd\u3002 \u5b89\u88c5\u4e24\u79cd\u5305\u7ba1\u7406\u5668\u7684\u65b9\u6cd5\u662f\uff1a 1 2 npm install -g yarn npm install -g pnpm","title":"\u5176\u4ed6\u5305\u7ba1\u7406\u5668"},{"location":"languages/node.js/npm/#_3","text":"\u4e09\u79cd\u5305\u7ba1\u7406\u5668\u652f\u6301\u7684\u529f\u80fd\u6bd4\u8f83\u7c7b\u4f3c\uff0c\u8bed\u6cd5\u4e5f\u6bd4\u8f83\u63a5\u8fd1\uff0c\u5e38\u7528\u7684\u6709\uff1a \u64cd\u4f5c npm yarn pnpm \u81ea\u52a8\u5b89\u88c5\u4f9d\u8d56 npm install yarn install / yarn pnpm install \u6dfb\u52a0\u4f9d\u8d56 npm install lodash yarn add lodash pnpm add lodash \u6dfb\u52a0\u5f00\u53d1\u4f9d\u8d56\uff08\u4e0d\u7528\u4e8e\u751f\u4ea7\u73af\u5883\uff09 npm install -D typescript yarn add -D typescript pnpm add -D typescript \u79fb\u9664\u4f9d\u8d56 npm uninstall lodash yarn remove lodash pnpm remove lodash \u6267\u884c start \u811a\u672c npm run start yarn start pnpm start \u6ce8\uff1a\u5728\u4e0d\u5f15\u8d77\u6b67\u4e49\u7684\u60c5\u51b5\u4e0b npm \u5141\u8bb8\u7b80\u5199\uff0c\u5982 npm i \u4ee3\u66ff npm install \u3002","title":"\u5305\u7ba1\u7406\u5668\u7684\u4f7f\u7528"},{"location":"languages/node.js/npm/#nodejs_3","text":"\u524d\u9762\u63d0\u5230\u7684\u6267\u884c\u811a\u672c\uff0c\u662f\u6307\u5728 package.json \u4e2d\u58f0\u660e\u7684\u811a\u672c\uff0c\u5982 package.json \u4e2d\u6709\u5982\u4e0b\u5b57\u6bb5\uff1a 1 2 3 4 5 { \"scripts\" : { \"start\" : \"node dist/index.js\" , } } \u90a3\u4e48\u6267\u884c yarn start \u5c31\u76f8\u5f53\u4e8e\u6267\u884c node dist/index.js \u3002\u4f46\u811a\u672c\u7684\u529f\u80fd\u4e0d\u6b62\u4e8e\u6b64\uff0c\u4f8b\u5982 prettier \u662f\u4e00\u4e2a\u4ee3\u7801\u683c\u5f0f\u5316\u5de5\u5177\uff0c\u5b89\u88c5\u5728\u9879\u76ee\u4e2d\u540e\u5e76\u6ca1\u6709\u5b89\u88c5\u5728 $PATH \u4e2d\uff0c\u56e0\u6b64\u76f4\u63a5\u5728 Shell \u4e2d\u8fd0\u884c prettier \u4e0d\u4f1a\u5f97\u5230\u4efb\u4f55\u7ed3\u679c\uff0c\u6b64\u65f6\u5e94\u8be5\u6267\u884c yarn prettier --write src/**/*.js \uff0cyarn \u4f1a\u627e\u5230\u9002\u5f53\u7684\u53ef\u6267\u884c\u6587\u4ef6\u6765\u5b8c\u6210\u8fd9\u4e00\u547d\u4ee4\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 package.json \u4e2d\u5199\uff1a 1 2 3 4 5 { \"scripts\" : { \"lint\" : \"prettier --write src/**/*.js\" , } } \u90a3\u4e48 yarn lint \u5c31\u76f8\u5f53\u4e8e\u4e0a\u8ff0\u547d\u4ee4\u3002 npx \u5728\u53e6\u4e00\u4e9b\u60c5\u51b5\u4e0b\uff08\u6bd4\u5982\u521b\u5efa React \u9879\u76ee\uff09\uff0c\u6211\u4eec\u867d\u7136\u9700\u8981\u6267\u884c\u4e00\u4e9b\u7c7b\u4f3c\u4e8e prettier \u7684\u547d\u4ee4\uff0c\u4f46\u4ee5\u540e\u5e76\u4e0d\u9700\u8981\u5b89\u88c5\u8fd9\u4e2a\u6a21\u5757\uff0c\u66f4\u6ca1\u6709\u5fc5\u8981\u628a\u8fd9\u4e2a\u6a21\u5757\u5199\u5728 package.json \u4e2d\uff0c\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u6267\u884c npx create-react-app example-app \uff0cnpx \u4f1a\u81ea\u52a8\u4e0b\u8f7d\u8fd9\u4e00\u6a21\u5757\u5e76\u8fd0\u884c\uff0c\u4f46\u5e76\u4e0d\u4f1a\u4fdd\u7559\u5728\u5f53\u524d\u6587\u4ef6\u5939\u4e2d\uff0c\u4e5f\u4e0d\u4f1a\u5bf9 package.json \u9020\u6210\u5f71\u54cd\u3002 yarn \u548c pnpm \u4e5f\u652f\u6301\u8fd9\u4e00\u8bed\u6cd5\u3002","title":"Node.js \u811a\u672c"},{"location":"languages/node.js/npm/#typescript","text":"\u524d\u9762\u5df2\u7ecf\u8bb2\u8fc7 TypeScript \u7684\u8bed\u6cd5\uff0c\u4f46 TypeScript \u5e76\u4e0d\u80fd\u76f4\u63a5\u5728\u6d4f\u89c8\u5668\u6216 Node.js \u4e2d\u89e3\u6790\uff08\u5012\u662f\u53ef\u4ee5\u5728 deno \u4e2d\u89e3\u6790\uff0c\u4f46\u662f\u6bd5\u7adf deno \u751f\u6001\u8fd8\u6ca1\u53d1\u5c55\u8d77\u6765\uff09\uff0c\u5b9e\u9645\u4e0a\u8981\u7f16\u5199 TypeScript \u7a0b\u5e8f\uff0c\u9700\u8981\u5b89\u88c5 Node.js \u6a21\u5757 typescript \u3002\u8fd9\u4e00\u6a21\u5757\u4e2d\u5305\u542b\u4e86\u547d\u4ee4 tsc \u53ef\u4ee5\u5bf9 TypeScript \u8bed\u6cd5\u8fdb\u884c\u68c0\u67e5\uff0c\u5e76\u4e14\u751f\u6210\u76f8\u5e94\u7684 JavaScript \u6587\u4ef6\u3002\u4f8b\u5982\u6267\u884c yarn add -D typescript \u540e\uff0c\u5728 package.json \u7684 script \u5b57\u6bb5\u4e2d\u6dfb\u52a0\u6dfb\u52a0\uff1a 1 2 3 { \"build\" : \"tsc\" } \u7136\u540e\u8fd0\u884c yarn build \u5373\u53ef\u5bf9 TypeScript \u4ee3\u7801\u8fdb\u884c\u7f16\u8bd1\uff0c\u66f4\u591a\u7684\u914d\u7f6e\u8be6\u89c1\u8d44\u6e90\u94fe\u63a5\u3002 TypeScript \u7684\u7c7b\u578b\u6807\u6ce8 \u6211\u4eec\u77e5\u9053 TypeScript \u901a\u8fc7\u9759\u6001\u7c7b\u578b\u68c0\u67e5\u63d0\u4f9b\u989d\u5916\u7684\u5b89\u5168\u6027\uff0c\u5728\u5305\u7ba1\u7406\u5668\u5b89\u88c5\u7b2c\u4e09\u65b9\u6a21\u5757\u65f6\uff0c\u901a\u5e38\u5df2\u7ecf\u5305\u542b\u4e86\u76f8\u5e94\u6a21\u5757\u7684\u7c7b\u578b\u6807\u6ce8\uff08\u5f62\u5982 index.d.ts \u7684\u6587\u4ef6\uff09\uff0c\u4f46\u4e5f\u6709\u90e8\u5206\u9879\u76ee\u5e76\u6ca1\u6709\u81ea\u5e26\u7c7b\u578b\u6807\u6ce8\uff0c\u8fd9\u90e8\u5206\u9879\u76ee\u8bb8\u591a\u90fd\u6709\u5355\u72ec\u7684\u7c7b\u578b\u6807\u6ce8\u6a21\u5757\uff0c\u8fd9\u4e9b\u6a21\u5757\u5f62\u5982 @types/name \uff0c\u4f8b\u5982 lodash \u5e76\u6ca1\u6709\u81ea\u5e26\u7c7b\u578b\u6807\u6ce8\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7 yarn add -D @types/lodash \u6765\u6dfb\u52a0\u7c7b\u578b\u6807\u6ce8\u3002","title":"TypeScript \u76f8\u5173"},{"location":"languages/node.js/npm/#_4","text":"tsconfig\u914d\u7f6e\uff1a https://typescript.bootcss.com/tsconfig-json.html","title":"\u8d44\u6e90\u94fe\u63a5"},{"location":"languages/python/","text":"Python \u8bed\u8a00\u57fa\u7840 \u00b6 \u5982\u4f55\u9ad8\u6548\u5730\u5b66\u4e60\u7f16\u7a0b\u8bed\u8a00 \u5f53\u6211\u4eec\u5728\u8bf4\u5b66\u4e60\u4e00\u95e8\u65b0\u7684\u7f16\u7a0b\u8bed\u8a00\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5230\u5e95\u5728\u8bf4\u4ec0\u4e48\uff1f C++, Java, Python, JavaScript, Typescript... \u4e00\u95e8\u53c8\u4e00\u95e8\u7684\u7f16\u7a0b\u8bed\u8a00\u540c\u4e2d\u6709\u5f02\uff0c\u5f02\u4e2d\u6709\u540c\u3002\u867d\u8bf4\u201c\u5b9e\u73b0\u76ee\u7684\u201d\u662f\u6211\u4eec\u5b66\u4e60\u65b0\u7684\u7f16\u7a0b\u8bed\u8a00\u7684\u76f4\u63a5\u9a71\u52a8\u529b\uff0c\u53ef\u5982\u4f55\u9ad8\u6548\u5730\u638c\u63e1\u4e00\u95e8\u7f16\u7a0b\u8bed\u8a00\uff0c\u4f7f\u5176\u4e3a\u6211\u6240\u7528\uff0c\u662f\u4e2a\u503c\u5f97\u6211\u4eec\u601d\u8003\u7684\u95ee\u9898\u3002 \u6211\u4eec\u5c1d\u8bd5\u7528\u8fc7\u5f80\u7684\u7ecf\u9a8c\u6765\u5bf9\u8fd9\u4e2a\u95ee\u9898\u7ed9\u51fa\u67d0\u79cd\u610f\u4e49\u4e0a\u7684\u89e3\u7b54\u3002\u4e5f\u8bb8\u4f60\u5df2\u7ecf\u4fee\u8fc7\u4e86\u300a\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u300b\u6216\u662f\u300a\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u300b\u7b49\u7b49\u8bfe\u7a0b\uff0c\u6211\u4eec\u4e0d\u59a8\u56de\u5fc6\u5728\u5165\u95e8\u7b2c\u4e00\u95e8\u7f16\u7a0b\u8bed\u8a00\u65f6\u7684\u6d41\u7a0b\u3002 \u6211\u4eec\u5148\u4ecb\u7ecd\u4e86\u4e00\u4e9b\u6700\u7b80\u5355\u7684 \u6570\u636e\u7c7b\u578b \uff0c\u7136\u540e\u5f15\u5165\u4e86\u4e00\u4e9b\u52a0\u52a0\u51cf\u51cf\u7684 \u64cd\u4f5c\u7b26 \u3002\u7136\u540e\uff0c\u6211\u4eec\u5b66\u4e60\u4e86\u57fa\u672c\u7684 \u7a0b\u5e8f\u6d41\u7a0b\u63a7\u5236\u8bed\u53e5 \uff0c\u5982 \u987a\u5e8f\u8bed\u53e5 \u3001 \u6761\u4ef6\u8bed\u53e5 \u548c \u5faa\u73af\u8bed\u53e5 \uff0c\u4ee5\u638c\u63e1\u7a0b\u5e8f\u6267\u884c\u7684\u5177\u4f53\u6d41\u7a0b\u3002\u7136\u540e\uff0c\u6211\u4eec\u5b66\u4e60\u4e86\u4e00\u4e9b\u8f83\u4e3a\u65b9\u4fbf\u7684 \u6570\u636e\u7ec4\u7ec7\u65b9\u5f0f \uff0c\u5982 C++ \u4e2d\u7684 \u6570\u7ec4 \u3001 \u7ed3\u6784\u4f53 \u3001 STL \u7b49\u7b49\uff0c\u8fdb\u800c\u7528 \u9762\u5411\u5bf9\u8c61 \u7684\u601d\u7ef4\u6765\u601d\u8003\u95ee\u9898\u3002\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u8981\u4e86\u89e3\u4f7f\u7528\u8fd9\u95e8\u7f16\u7a0b\u8bed\u8a00\u6240\u5177\u6709\u7684\u72ec\u7279\u7684\u4f18\u52bf\uff0c\u6bd4\u5982\u4e00\u95e8\u7f16\u7a0b\u8bed\u8a00\u7684 \u8bed\u6cd5\u7cd6 \uff0c\u6216\u662f\u4f7f\u7528\u8fd9\u95e8\u8bed\u8a00\u80fd\u8ba9\u6211\u4eec\u6781\u4e3a\u4fbf\u5229\u5730\u5b8c\u6210\u4ec0\u4e48\u529f\u80fd\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u5728\u5b66\u4e60\u4e00\u95e8\u65b0\u7684\u7f16\u7a0b\u8bed\u8a00\u65f6\uff0c\u4e0d\u59a8\u5c31\u4eff\u7167\u7740\u8fd9\u4e2a\u601d\u8def\uff0c\u5c06\u5b66\u5230\u7684\u5185\u5bb9\u6309\u7167\u4e0a\u8ff0\u4e3b\u9898\u8fdb\u884c\u5f52\u7c7b\u6574\u7406\u3002 \u4ec0\u4e48\u662f\u8bed\u6cd5\u7cd6\uff1f \u8bed\u6cd5\u7cd6\uff08\u82f1\u8bed\uff1aSyntactic sugar\uff09\u662f\u7531\u82f1\u56fd\u8ba1\u7b97\u673a\u79d1\u5b66\u5bb6\u5f7c\u5f97\u00b7\u5170\u4e01\u53d1\u660e\u7684\u4e00\u4e2a\u672f\u8bed\uff0c\u6307\u8ba1\u7b97\u673a\u8bed\u8a00\u4e2d\u6dfb\u52a0\u7684\u67d0\u79cd\u8bed\u6cd5\uff0c\u8fd9\u79cd\u8bed\u6cd5\u5bf9\u8bed\u8a00\u7684\u529f\u80fd\u6ca1\u6709\u5f71\u54cd\uff0c\u4f46\u662f\u66f4\u65b9\u4fbf\u7a0b\u5e8f\u5458\u4f7f\u7528\u3002\u8bed\u6cd5\u7cd6\u8ba9\u7a0b\u5e8f\u66f4\u52a0\u7b80\u6d01\uff0c\u6709\u66f4\u9ad8\u7684\u53ef\u8bfb\u6027\u3002 Excerpted from Wikipedia . Checkpoint! \u6211\u4eec\u63a8\u8350\u521d\u5b66 Python \u7684\u8bfb\u8005\u6309\u987a\u5e8f\u9605\u8bfb\u672c\u6587\u6863\u3002\u6587\u6863\u4e2d\u6709\u82e5\u5e72 Checkpoint\uff0c\u6bcf\u4e2a Checkpoint \u90fd\u662f\u4e00\u4e2a\u7b80\u5355\u7684 Python \u7f16\u7a0b\u4efb\u52a1\uff0c\u53ef\u4ee5\u5feb\u901f\u68c0\u9a8c\u4f60\u662f\u5426\u7406\u89e3\u4e86\u6587\u6863\u8bb2\u89e3\u7684\u77e5\u8bc6\u3002 \u524d\u7f6e\u77e5\u8bc6 \u00b6 \u57fa\u672c\u7684\u4ee3\u6570\u601d\u7ef4 \u4e00\u5b9a\u7684\u903b\u8f91\u80fd\u529b \u5148\u4fee\u7a0b\u5e8f\u8bbe\u8ba1\u8bfe\u7a0b\u7684\u7a0b\u5e8f\u903b\u8f91\uff0c\u5bf9\u6570\u636e\u7ec4\u7ec7\u5f62\u5f0f\u7684\u4e00\u5b9a\u7406\u89e3\u548c\u4e00\u5b9a\u7684\u9762\u5411\u5bf9\u8c61\u601d\u60f3 Python \u53ef\u4ee5\u7528\u6765\u505a\u4ec0\u4e48 \u00b6 \u5f00\u53d1\u7f51\u9875\u524d\u7aef\u4e0e\u540e\u7aef \u5728\u6570\u636e\u7edf\u8ba1\u4e0e\u5206\u6790\u4e2d\u6781\u5177\u4f18\u52bf \u5728\u673a\u5668\u5b66\u4e60\u9886\u57df\u6709\u6781\u4e3a\u91cd\u8981\u7684\u4f5c\u7528 \u80f6\u6c34\u578b\u8bed\u8a00\uff0c\u7b80\u6d01\u7075\u6d3b \u62ef\u6551\u4f60\u7684\u5927\u4e00\u5c0f\u5b66\u671f \u5b89\u88c5\u4e0e Hello World \u00b6 Python \u7684\u5b89\u88c5 \u00b6 Python \u7248\u672c\u7684\u9009\u62e9 Python \u73b0\u5728\u7684\u4e3b\u6d41\u7248\u672c\u662f Python3 \uff0c\u76ee\u524d\u7684\u6700\u65b0\u7248\u672c\u662f 3.10\uff0c\u5b98\u65b9\u4f1a\u5bf9\u8be5\u7248\u672c\u8fdb\u884c Bug \u4fee\u590d\uff0c\u800c\u8f83\u4e3a\u7a33\u5b9a\u7684\u7248\u672c\u662f 3.9 \u4e0e 3.8\uff0c\u9488\u5bf9\u5176\u4ec5\u4f1a\u63a8\u51fa\u5b89\u5168\u6027\u76f8\u5173\u7684\u4fee\u590d\u3002 \u76ee\u524d\u5728\u7f51\u7edc\u4e0a\u627e\u5230\u7684\u5f88\u591a\u6559\u7a0b\u90fd\u8fd8\u662f Python2 \u98ce\u683c\u7684\uff0c\u800c Python \u5b98\u65b9\u5728 2020/1/1 \u5df2\u7ecf\u505c\u6b62\u4e86\u5bf9 Python2 \u7684\u5b98\u65b9\u652f\u6301\u3002\u56e0\u6b64\uff0c\u5c3d\u5feb\u5347\u7ea7\u5e76\u719f\u6089 Python3 \u7684\u8bed\u6cd5\uff0c\u662f\u5f88\u6709\u5fc5\u8981\u7684\u3002 \u7f16\u8bd1\u578b\u8bed\u8a00\u4e0e\u89e3\u91ca\u578b\u8bed\u8a00 \u6211\u4eec\u5df2\u7ecf\u719f\u6089\u7684 C++ \u662f\u4e00\u79cd \u7f16\u8bd1\u578b\u8bed\u8a00 \u3002\u5bf9\u4e8e\u7f16\u8bd1\u578b\u8bed\u8a00\uff0c\u5f00\u53d1\u5b8c\u6210\u4ee5\u540e\u9700\u8981\u5c06\u6240\u6709\u7684 \u6e90\u4ee3\u7801 \u90fd\u8f6c\u6362\u6210 \u53ef\u6267\u884c\u7a0b\u5e8f \uff0c\u800c\u8fd9\u79cd\u8f6c\u6362\u4e00\u822c\u662f\u4e0d\u80fd\u8de8\u5e73\u53f0\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u8981\u9488\u5bf9\u4e0d\u540c\u7684\u5e73\u53f0\u751f\u6210\u4e0d\u540c\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002 \u800c\u6211\u4eec\u5c06\u8981\u4ecb\u7ecd\u7684 Python \u662f\u4e00\u79cd \u89e3\u91ca\u578b\u8bed\u8a00 \u3002\u6bcf\u6b21\u6267\u884c\u7a0b\u5e8f\u90fd\u9700\u8981\u4e00\u8fb9\u8f6c\u6362\u4e00\u8fb9\u6267\u884c\uff0c\u7528\u5230\u54ea\u4e9b\u6e90\u4ee3\u7801\u5c31\u5c06\u54ea\u4e9b\u6e90\u4ee3\u7801\u8f6c\u6362\u6210\u673a\u5668\u7801\uff0c\u7528\u4e0d\u5230\u7684\u4e0d\u8fdb\u884c\u4efb\u4f55\u5904\u7406\u3002\u6bcf\u6b21\u6267\u884c\u7a0b\u5e8f\u65f6\u53ef\u80fd\u4f7f\u7528\u4e0d\u540c\u7684\u529f\u80fd\uff0c\u8fd9\u4e2a\u65f6\u5019\u9700\u8981\u8f6c\u6362\u7684\u6e90\u4ee3\u7801\u4e5f\u4e0d\u4e00\u6837\u3002\u76f8\u6bd4\u4e8e\u7f16\u8bd1\u578b\u8bed\u8a00\uff0c\u89e3\u91ca\u578b\u8bed\u8a00\u51e0\u4e4e\u90fd\u80fd\u8de8\u5e73\u53f0\uff0c\u201c \u4e00\u6b21\u7f16\u5199\uff0c\u5230\u5904\u8fd0\u884c \u201d\u662f\u771f\u5b9e\u5b58\u5728\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u53ef\u4ee5\u8f7b\u677e\u5b9e\u73b0\u5728 Windows \u4e0a\u7f16\u5199 Python \u6e90\u4ee3\u7801\uff0c\u7136\u540e\u4e22\u5230 Linux \u4e0a\u53bb\u8fd0\u884c\uff0c\u53ea\u8981\u53cc\u65b9\u914d\u7f6e\u4e86\u76f8\u540c\u7684\u89e3\u91ca\u5668\u73af\u5883\u5373\u53ef\u3002 \u53c2\u8003\u81ea http://c.biancheng.net/view/4136.html . \u9488\u5bf9 Windows \u7528\u6237\uff0c\u8bf7\u8bbf\u95ee https://www.python.org/downloads/windows/ \u3002\u9488\u5bf9 macOS \u7528\u6237\uff0c\u8bf7\u8bbf\u95ee https://www.python.org/downloads/macos/ \u3002\u4e0b\u8f7d\u5bf9\u5e94\u7684\u5305\u7136\u540e\u5b89\u88c5\u5373\u53ef\u3002 \u5728\u5b89\u88c5\u65f6\u8bb0\u5f97\u52fe\u9009 Add To Path\uff0c\u5c06\u5b89\u88c5\u8def\u5f84\u4fdd\u5b58\u4e3a\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\u3002 \u4ec0\u4e48\u662f\u73af\u5883\u53d8\u91cf\uff1f \u53ef\u53c2\u8003 https://zhuanlan.zhihu.com/p/82011100 \uff0c\u5728\u4e86\u89e3\u73af\u5883\u53d8\u91cf\u7684\u57fa\u672c\u6982\u5ff5\u540e\uff0c\u5982\u679c\u4f60\u5fd8\u8bb0\u4e86\u5728\u5b89\u88c5\u65f6\u5c06 Python \u6240\u5728\u8def\u5f84\u6dfb\u52a0\u5230\u73af\u5883\u53d8\u91cf\u4e2d\uff0c\u53ef\u4ee5\u81ea\u884c\u5c1d\u8bd5\u5c06\u5176\u6dfb\u52a0\u5165 Path\u3002 \u4ea4\u4e92\u5f0f\u7a97\u53e3\u4e0e\u811a\u672c\u6587\u4ef6 \u00b6 \u57fa\u4e8e\u89e3\u91ca\u578b\u8bed\u8a00\u7684\u7279\u70b9\uff0cPython \u4ee3\u7801\u53ef\u4ee5\u5206\u4e3a \u4ea4\u4e92\u5f0f\u7a97\u53e3 \u548c \u811a\u672c\u6587\u4ef6 \u4e24\u79cd \u6267\u884c\u65b9\u5f0f \u3002 \u4ea4\u4e92\u5f0f\u7a97\u53e3\uff1a\u5982\u5728\u547d\u4ee4\u884c\u8f93\u5165 python \uff0c\u5373\u53ef\u8fdb\u5165\u4ea4\u4e92\u5f0f\u7a97\u53e3\uff0c\u6b64\u65f6\u5982\u540c\u201c\u95ee\u7b54\u201d\u4e00\u822c\uff0c\u8f93\u5165\u4e00\u884c\u4ee3\u7801\u540e\uff0cPython \u7acb\u523b\u6267\u884c\u8be5\u884c\u4ee3\u7801\u5e76\u7ed9\u51fa\u8fd4\u56de\u503c\u3002\u9000\u51fa\u754c\u9762\u7684\u65b9\u6cd5\u662f\u6309 Ctrl+D \u6216\u8005\u6267\u884c exit() \uff08Windows \u7528\u6237\u8bf7\u4f7f\u7528 Ctrl+Z \uff09\u3002 \u811a\u672c\uff1a\u7ecf\u5178\u8fd0\u884c\u65b9\u6cd5 python xxx.py \uff0cPython \u4f1a\u5c06\u6574\u4e2a\u811a\u672c\u6309\u7167\u8bed\u53e5\u7684\u987a\u5e8f\u4f9d\u6b21\u4ece\u5934\u5230\u5c3e\u6267\u884c\u3002 \u4ea4\u4e92\u5f0f\u7a97\u53e3\u7684\u4f8b\u5b50 \u811a\u672c\u6587\u4ef6\u7684\u4f8b\u5b50 \u5bf9\u4e8e\u5404\u79cd\u5de5\u7a0b\u9879\u76ee\u6765\u8bf4\uff0c\u6211\u4eec\u81ea\u7136\u662f\u9009\u62e9\u7528\u811a\u672c\u6587\u4ef6\u6765\u5b58\u50a8\u4ee3\u7801\uff0c\u65b9\u4fbf\u6211\u4eec\u8fdb\u884c\u6bcf\u4e00\u6b21\u8c03\u7528\u3002\u800c\u9488\u5bf9\u521d\u5b66\u8005\u6765\u8bf4\uff0c\u6211\u4eec\u5927\u53ef\u5c1d\u8bd5\u7528\u4ea4\u4e92\u5f0f\u7a97\u53e3\u6765\u5165\u95e8\u3002\u540e\u7eed\u9644\u4ee3\u7801\u7684\u90e8\u5206\uff0c\u5982\u679c\u51fa\u73b0\u4e86\u9876\u683c >>> \u7684\u60c5\u51b5\uff0c\u5219\u6697\u793a\u8fd9\u662f\u4e00\u4e2a\u4ea4\u4e92\u5f0f\u7a97\u53e3\uff0c\u6709 >>> \u7684\u662f\u4ee3\u7801\uff0c\u5176\u4ed6\u7684\u662f\u6267\u884c\u4ee3\u7801\u7684\u8f93\u51fa\u3002 Hello world \u00b6 [Checkpoint Python-01] Hello World \u597d\uff0c\u73b0\u5728\u4f60\u5df2\u7ecf\u7406\u89e3\u4e86 Python \u7a0b\u5e8f\u662f\u5982\u4f55\u8fd0\u884c\u7684 \u2014\u2014 \u8bd5\u8bd5\u770b\uff01 \u8bf7\u5c1d\u8bd5\u5728\u63a7\u5236\u53f0\u4f7f\u7528\u4ea4\u4e92\u5f0f\u7a97\u53e3\u65b9\u5f0f\uff0c\u4f7f\u7a0b\u5e8f\u8f93\u51fa\u6b22\u8fce\u4fe1\u606f\u3002\u5982 \"Hello, c7w!\" \u3002 \u8bf7\u5c1d\u8bd5\u7f16\u5199\u811a\u672c\u6587\u4ef6\u4f7f\u5176\u80fd\u6b63\u786e\u8f93\u51fa 1. \u4e2d\u7684\u6b22\u8fce\u4fe1\u606f\u3002\u5e76\u601d\u8003\uff0cC++ \u4e2d\u4f60\u662f\u600e\u6837\u5b9e\u73b0\u5bf9\u4e8e\u4e0d\u540c\u7684\u7528\u6237\uff0c\u53ef\u4ee5\u5448\u73b0\u4e0d\u540c\u7684\u6b22\u8fce\u4fe1\u606f\u7684\u5462\uff1f \u63d0\u793a\uff1a \u4f60\u53ef\u4ee5\u901a\u8fc7\u4ed4\u7ec6\u89c2\u5bdf\u4e0a\u9762\u7684\u56fe\u7247\u6765\u89e3\u51b3\u95ee\u9898 \u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u8bb2\u89e3\u53d8\u91cf\u7684\u5b9a\u4e49\u4e0e\u7a0b\u5e8f\u7684\u8f93\u5165\u8f93\u51fa \u53d8\u91cf\u7c7b\u578b\u4e0e\u8fd0\u7b97 \u00b6 \u4e0e C \u548c C++ \u5927\u81f4\u76f8\u540c\uff0c\u4e00\u4e9b\u9700\u8981\u7279\u522b\u6ce8\u610f\u4e4b\u5904\u6216\u6709\u533a\u522b\u4e4b\u5904 \u7528\u52a0\u7c97\u8868\u793a \u3002 \u57fa\u672c\u53d8\u91cf\u7c7b\u578b \u00b6 int \u3002\u53d8\u957f\u6574\u6570\uff0c\u9ed8\u8ba4\u662f 4 \u5b57\u8282\uff0c\u6709\u9700\u8981\u65f6\u81ea\u52a8\u589e\u957f\u3002\u6ce8\u610f \u6574\u9664\u8fd0\u7b97\u7b26\u662f // \uff0c\u800c\u666e\u901a\u9664\u6cd5 / \u4f1a\u5f97\u5230 float \u7c7b\u578b\uff08\u6ce8\u610f\u4e0e C \u7cfb\u8bed\u8a00\u533a\u5206\uff09\u3002\u9664\u4e86\u5341\u8fdb\u5236\u5916\uff0c\u8fd8\u652f\u6301\u5341\u516d\u8fdb\u5236\u3001\u516b\u8fdb\u5236\u3001\u4e8c\u8fdb\u5236\u7684\u8868\u793a\u3002 float \u30028 \u5b57\u8282\u6d6e\u70b9\u6570\uff0c\u76f8\u5f53\u4e8e C \u7cfb\u8bed\u8a00\u7684 double \u3002 bool \u3002\u5373\u4f17\u6240\u5468\u77e5\u7684 True \u4e0e False \uff0c\u6ce8\u610f \u9996\u5b57\u6bcd\u5927\u5199 \uff0c\u7528\u4f5c\u6570\u503c\u8ba1\u7b97\u65f6\u4e0e C \u7cfb\u8bed\u8a00\u4e00\u6837\u5206\u522b\u89c6\u4f5c 1 \u4e0e 0 \u3002 string \u3002\u5b57\u7b26\u4e32\u662f\u4ee5 \u5355\u5f15\u53f7 ' \u6216\u53cc\u5f15\u53f7 \" \u62ec\u8d77\u6765\u7684\u4efb\u610f\u6587\u672c\uff0c\u6bd4\u5982 'abc' \u3001 \"xyz\" \u3002 NoneType \u3002\u5373 None \u3001\u7a7a\u503c\u3002\u540e\u9762\u4f1a\u4ecb\u7ecd\u5230\u7528\u5904\uff0c\u5e38\u7528\u4e8e\u8fd4\u56de\u503c\u3001\u7279\u5224\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 >>> a = 124 >>> print ( a ) 124 >>> a = 'c7w' >>> print ( a ) c7w >>> a = None >>> print ( a ) None >>> if a : ... print ( a ) # Here a == None, do not print ... >>> a = 'c7w' >>> if a : ... print ( a ) # Here a == 'c7w', do print ... c7w Python \u662f\u4e00\u79cd\u52a8\u6001\u7c7b\u578b\u8bed\u8a00 \u6211\u4eec\u5c1d\u8bd5\u4e0e\u719f\u6089\u7684 C++ \u8bed\u8a00\u5bf9\u6bd4\uff0c\u89e3\u91ca\u9759\u6001\u7c7b\u578b\u8bed\u8a00\u4e0e\u52a8\u6001\u7c7b\u578b\u8bed\u8a00\u7684\u533a\u522b\u3002 \u9759\u6001\u7c7b\u578b\u8bed\u8a00 \u4e2d\uff0c\u6bcf\u4e2a\u53d8\u91cf\u90fd\u6709\u786e\u5b9a\u7684\u6570\u636e\u7c7b\u578b\u3002\u53d8\u91cf\u7684\u7c7b\u578b\u5728\u7f16\u8bd1\u671f\u5c31\u88ab\u5b8c\u5168\u786e\u5b9a\uff0c\u4e14\u6b64\u540e\u53d8\u91cf\u7684\u7c7b\u578b\u65e0\u6cd5\u6539\u53d8\u3002 \u4e0e\u5176\u76f8\u5bf9\u5e94\u7684\u662f \u52a8\u6001\u7c7b\u578b\u8bed\u8a00 \uff1a\u53d8\u91cf\u5e76\u6ca1\u6709\u786e\u5b9a\u7684\u6570\u636e\u7c7b\u578b\uff0c\u8fd9\u610f\u5473\u7740\u53d8\u91cf\u7684\u7c7b\u578b\u53ef\u4ee5\u5728\u8fd0\u884c\u671f\u6539\u53d8\u3002 \u6bd4\u5982\uff0c\u5728 C++ \u4e2d\uff1a 1 2 3 int c = 1 ; char m = 'x' ; std :: string a = \"\" ; \u6211\u4eec\u4e0d\u80fd\u5c1d\u8bd5\u4f7f\u7528 a = 1 \uff0c\u56e0\u4e3a\u6211\u4eec\u5df2\u7ecf\u89c4\u5b9a\u4e86 a \u662f std::string \u7c7b\u578b\u3002 \u800c\u5728 Python \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\uff1a 1 2 3 4 a = 123 a = 100.0 a = \"string\" a = [ 1 , 2 , 3 ] # List, would be explained later \u6211\u4eec\u5e76\u6ca1\u6709\u5bf9\u53d8\u91cf a \u8fdb\u884c\u8fc7\u58f0\u660e\uff0c\u800c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\uff0c\u5e76\u4e14\u5728\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u968f\u610f\u5730\u53d8\u6362\u5176\u7c7b\u578b\u3002 Reference: https://blog.csdn.net/alashan007/article/details/100742591 . Python \u662f\u4e00\u79cd\u5f3a\u7c7b\u578b\u8bed\u8a00 \u6ce8\u610f\u533a\u5206\u201c\u5f3a/\u5f31\u7c7b\u578b\u201d\u4e0e\u201c\u9759\u6001/\u52a8\u6001\u7c7b\u578b\u201d\uff0c\u8fd9\u662f\u4e00\u5bf9\u76f8\u4e92\u6b63\u4ea4\u7684\u6982\u5ff5\u3002 \u5f3a\u7c7b\u578b \u6307\u503c\u62e5\u6709\u786e\u5b9a\u7684\u7c7b\u578b\u4e14\u4e0d\u53ef\uff08\u9690\u5f0f\u5730\uff09\u76f8\u4e92\u8f6c\u6362\uff0c \u5f31\u7c7b\u578b \u5219\u6307\u4e0d\u540c\u7c7b\u578b\u7684\u503c\u4e4b\u95f4\u53ef\u4ee5\u9690\u5f0f\u8f6c\u6362\u3002 \u7c7b\u578b\u7cfb\u7edf\u7684\u5f3a/\u5f31\u5e76\u4e0d\u50cf\u52a8\u6001/\u9759\u6001\u90a3\u6837\u6709\u660e\u663e\u7684\u754c\u9650\u3002\u4e00\u822c\u8ba4\u4e3a\uff0cJavaScript\u3001Visual Basic \u7b49\u662f\u5178\u578b\u7684\u5f31\u7c7b\u578b\u8bed\u8a00\uff0c\u5141\u8bb8\u4e00\u90e8\u5206\u9690\u5f0f\u8f6c\u6362\u7684 C \u548c C++ \u4e5f\u88ab\u8ba4\u4e3a\u662f\u5f31\u7c7b\u578b\u8bed\u8a00\uff0c\u800c Java\u3001C#\u3001Python \u7b49\u5219\u662f\u5178\u578b\u7684\u5f3a\u7c7b\u578b\u8bed\u8a00\u3002 \u4f8b\u5982\uff0c\u5728 JavaScript \u4e2d\uff1a 1 2 3 4 5 6 7 var a = \"5\" ; var b = 4 ; var c = [ 3 ]; var d = null ; console . log ( a - b + c - d ); // Output: // 13 \u53ef\u4ee5\u770b\u5230\u5373\u4f7f\u8fd9\u4e9b\u53d8\u91cf\u7684\u7c7b\u578b\u5b8c\u5168\u4e0d\u540c\uff0c\u5b83\u4eec\u4e5f\u80fd\u8fdb\u884c\u8fd0\u7b97\u5e76\u4ea7\u51fa\u4e0d\u592a\u7b26\u5408\u76f4\u89c9\u7684\u7ed3\u679c\u3002 \u800c\u5728 Python \u4e2d\uff1a 1 2 3 4 5 6 7 8 9 10 a = \"5\" b = 4 print ( a + b ) // Output : // Traceback ( most recent call last ): // File \"<stdin>\" , line 1 , in < module > // TypeError : can only concatenate str ( not \"int\" ) to str print ( a + str ( b )) // Output : // 54 \u53ef\u89c1\u5c06\u4e0d\u540c\u7c7b\u578b\u7684\u503c\u76f4\u63a5\u8fdb\u884c\u8fd0\u7b97\u4f1a\u5bfc\u81f4\u9519\u8bef\uff0c\u5fc5\u987b\u5148\u5c06\u5176\u4e2d\u7684\u4e00\u4e9b\u503c\u663e\u5f0f\u8f6c\u6362\u4e3a\u6b63\u786e\u7c7b\u578b\u7684\u503c\u3002 \u8fd0\u7b97\u7b26 \u00b6 \u4e0b\u5217\u662f Python \u8bed\u8a00\u4e4b\u4e2d\u7684\u5408\u6cd5\u8fd0\u7b97\u7b26\uff0c\u5176\u542b\u4e49\u4e0e C/C++ \u8bed\u8a00\u57fa\u672c\u4e00\u81f4\u3002\u5176\u540e\u5217\u51fa\u4e86\u76f8\u5e94\u7684\u91cd\u8f7d\u51fd\u6570\uff0c\u8fd9\u4e9b\u91cd\u8f7d\u51fd\u6570\u7684\u7528\u6cd5\u5728\u540e\u7eed\u7684\u9762\u5411\u5bf9\u8c61\u7ae0\u8282\u4e4b\u4e2d\u518d\u8be6\u7ec6\u4ecb\u7ecd\u3002 \u7b97\u672f\u8fd0\u7b97\u7b26 \u52a0\u6cd5\u8fd0\u7b97\u7b26 + \uff1a __add__ \u51cf\u6cd5\u8fd0\u7b97\u7b26 - \uff1a __sub__ \u4e58\u6cd5\u8fd0\u7b97\u7b26 * \uff1a __mul__ \u771f\u9664\u8fd0\u7b97\u7b26 / \uff1a __trudiv__ \u6574\u9664\u8fd0\u7b97\u7b26 // \uff1a __floordiv__ \u6a21\u8fd0\u7b97\u7b26 % \uff1a __mod__ \u5e42\u8fd0\u7b97\u7b26 ** \uff1a __pow__ \u6bd4\u8f83\u8fd0\u7b97\u7b26 \u5c0f\u4e8e\u8fd0\u7b97\u7b26 < \uff1a __lt__ \u5c0f\u4e8e\u7b49\u4e8e\u8fd0\u7b97\u7b26 <= \uff1a __le__ \u5927\u4e8e\u8fd0\u7b97\u7b26 > \uff1a __gt__ \u5927\u4e8e\u7b49\u4e8e\u8fd0\u7b97\u7b26 >= \uff1a __ge__ \u76f8\u7b49\u8fd0\u7b97\u7b26 == \uff1a __eq__ \u4e0d\u7b49\u8fd0\u7b97\u7b26 != \uff1a __ne__ \u4f4d\u8fd0\u7b97\u7b26 \u6309\u4f4d\u4e0e\u8fd0\u7b97\u7b26 & \uff1a __and__ \u6309\u4f4d\u6216\u8fd0\u7b97\u7b26 | \uff1a __or__ \u6309\u4f4d\u5f02\u6216\u8fd0\u7b97\u7b26 ^ \uff1a __xor__ \u6309\u4f4d\u53d6\u53cd\u8fd0\u7b97\u7b26 ~ \uff1a __invert__ \u5de6\u79fb\u8fd0\u7b97\u7b26 << \uff1a __lshift__ \u53f3\u79fb\u8fd0\u7b97\u7b26 >> \uff1a __rshift__ \u903b\u8f91\u8fd0\u7b97\u7b26 \u903b\u8f91\u4e0e\u8fd0\u7b97\u7b26 and \u903b\u8f91\u6216\u8fd0\u7b97\u7b26 or \u903b\u8f91\u975e\u8fd0\u7b97\u7b26 not \u6ce8\u610f\uff0c\u5bf9\u4e8e and \u6216 or \uff0c\u5f97\u5230\u7684\u7ed3\u679c\u4e0d\u4f1a\u76f4\u63a5\u8f6c\u6362\u4e3a bool \uff0c\u800c\u662f\u80fd\u591f\u5f97\u51fa\u7ed3\u679c\u7684\u6700\u540e\u4e00\u4e2a\u53d8\u91cf\u3002 \u6ce8\u610f\uff0c\u6df7\u7528 and \u3001 or \u65f6\u9700\u8981\u8003\u8651 and \u7684\u4f18\u5148\u7ea7\u66f4\u9ad8\uff0c\u4e3a\u4e86\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u5efa\u8bae\u4e0d\u8981\u6df7\u7528\uff0c\u6216\u8005\u663e\u5f0f\u5730\u52a0\u4e0a\u5c0f\u62ec\u53f7\u3002 \u4e09\u76ee\u8fd0\u7b97\u7b26 \u4e09\u76ee\u8fd0\u7b97\u7b26 a if condition else b \u5982 abs_x = x if x >= 0 else -x \u3002 \u5176\u5b83\u8fd0\u7b97\u7b26 \u5305\u542b\u8fd0\u7b97\u7b26 in \uff0c\u7528\u4e8e\u5224\u5b9a\u67d0\u4e2a\u53d8\u91cf\u662f\u5426\u5305\u542b\u4e8e\u5bb9\u5668\u4e2d \u4e0d\u5305\u542b\u8fd0\u7b97\u7b26 not in \u540c\u5730\u5740\u8fd0\u7b97\u7b26 is \uff0c\u7528\u4e8e\u5224\u5b9a\u4e24\u4e2a\u53d8\u91cf\u7684\u5730\u5740\u662f\u5426\u76f8\u540c \u4e0d\u540c\u5730\u5740\u8fd0\u7b97\u7b26 is not [Checkpoint Python-02] Operators \u3010\u7cbe\u5ea6\u6d4b\u8bd5\u3011Python \u7684\u201c\u9ad8\u7cbe\u5ea6\u201d\u4f53\u73b0\u5728\u4f55\u5904\uff1f\u5c1d\u8bd5\u4f7f\u7528 Python \u8fdb\u884c\u4ee5\u4e0b\u8fd0\u7b97\uff0c\u5e76\u8f93\u51fa\u5176\u7ed3\u679c\u3002 a = 10^{2000} - 1 a = 10^{2000} - 1 a = 11451419198101919810114514 \\times 11451419198101919810114514 a = 11451419198101919810114514 \\times 11451419198101919810114514 a = 10^{-200} \\times 10^{-400} a = 10^{-200} \\times 10^{-400} \u3010\u63d0\u793a\u3011\u7a0b\u5e8f\u4e2d\u53ef\u4ee5\u4f7f\u7528\u79d1\u5b66\u8ba1\u6570\u6cd5\u8868\u793a\uff1a\u6211\u4eec\u53ef\u4ee5\u7528 1e-5 \u6765\u8868\u793a 10^{-5} 10^{-5} \u3002 \u8bf7\u5c1d\u8bd5\u89e3\u91ca\u4ee5\u4e0b\u8868\u8fbe\u5f0f\u7684\u8f93\u51fa\u7ed3\u679c\u3002 3 or 4 3 and 4 0 or 1 and 2 0 and 1 or 2 1 or 0 and 2 \u7a0b\u5e8f\u63a7\u5236\u8bed\u53e5 \u00b6 \u987a\u5e8f\u8bed\u53e5 \u00b6 \u4ee3\u7801\u5757\uff08\u82f1\u8bed\uff1aCode block\uff09\u662f\u4e2a\u6bd4\u8f83\u91cd\u8981\u7684\u5c42\u7ea7\u6982\u5ff5\uff0c\u4f17\u6240\u5468\u77e5 Python \u6ca1\u6709\u5927\u62ec\u53f7\u8fdb\u884c\u663e\u5f0f\u5730\u5206\u5757\uff0c\u56e0\u6b64\u5b83\u5206\u5757\u9700\u8981\u7279\u522b\u7684\u624b\u6bb5\uff1a \u5192\u53f7\u914d\u5408\u7f29\u8fdb \u3002 \u7f29\u8fdb\u6709\u4e00\u5957\u5f88\u5b8c\u5907\u7684\u89c4\u5219\uff0c\u63a8\u8350\u7edf\u4e00\u4f7f\u7528 Tab \u6216\u8005\u56db\u4e2a\u7a7a\u683c\u4f5c\u4e3a\u4e00\u7ea7\uff0c\u6bcf\u5f53\u591a\u4e00\u5c42\u5c42\u7ea7\u5d4c\u5957\u65f6\u4fbf\u4f1a\u591a\u4e00\u4e2a Tab \u6216\u8005\u56db\u4e2a\u7a7a\u683c\u3002\u800c\u4e0d\u8981\u6df7\u7528 Tab \u548c\u7a7a\u683c\uff0c\u4e0d\u7136\u4f1a\u51fa\u73b0\u9519\u8bef\u3002 \u6ce8\u91ca\u7684\u5199\u6cd5\uff1a \u5355\u884c\u6ce8\u91ca\u3002\u4ee3\u7801\u884c\u4ee5 # \u5f00\u5934 \u591a\u884c\u6ce8\u91ca\u3002\u4f7f\u7528\u4e09\u4e2a\u5355\u5f15\u53f7\uff0c\u6216\u8005\u4e09\u4e2a\u53cc\u5f15\u53f7\u5c06\u5176\u8981\u6ce8\u91ca\u7684\u5185\u5bb9\u6269\u8d77\u6765\uff08\u540e\u7eed\u6211\u4eec\u4f1a\u63d0\u5230\uff0c\u8fd9\u662f\u591a\u884c\u5b57\u7b26\u4e32\u7684\u5904\u7406\u65b9\u6cd5\uff09 \u6761\u4ef6\u8bed\u53e5 \u00b6 if-elif-else \u6761\u4ef6\u5224\u65ad\u7ed3\u6784\uff1a 1 2 3 4 5 6 7 age = 3 if age >= 18 : print ( 'adult' ) elif age >= 6 : print ( 'teenager' ) else : print ( 'kid' ) \u5faa\u73af\u8bed\u53e5 \u00b6 while \u5faa\u73af\uff1a 1 2 3 4 a = 1 while a <= 100 : print ( a ) a += 1 # \u6ce8\u610f\u6ca1\u6709 a++ \u7684\u5199\u6cd5 for \u5faa\u73af\uff1a 1 2 for i in range ( 0 , 100 ): # range(0, 100) = [0, 1, 2, ..., 99] print ( i ) # \u672c\u8d28\u4e0a\u662f\u5728\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e2d\u904d\u5386\u6240\u6709\u5143\u7d20 \u51fd\u6570\u7684\u5199\u6cd5 \u00b6 \u5b9a\u4e49\u51fd\u6570\u7684\u5199\u6cd5\uff1a 1 2 3 4 5 def my_abs ( x ): if x >= 0 : return x else : return - x \u6ce8\u610f\u7b2c\u4e00\u884c\u56fa\u5b9a\u683c\u5f0f def <func_name>(params, ...): \uff0c\u5176\u4ed6\u548c C/C++ \u5dee\u522b\u4e0d\u5927\u3002\u4f5c\u4e3a\u52a8\u6001\u7c7b\u578b\u8bed\u8a00\uff0c\u51fd\u6570\u8fd4\u56de\u7c7b\u578b\u4e0d\u56fa\u5b9a\uff0c\u53ef\u4ee5\u6709\u591a\u4e2a return \u4ee5\u5728\u4e0d\u540c\u60c5\u51b5\u4e0b\u8fd4\u56de\u4e0d\u540c\u5185\u5bb9\uff0c\u6216\u8005\u6ca1\u6709 return \uff08\u7b49\u4ef7\u4e8e return None \uff09\u3002 [Checkpoint Python-03] Runtime logic \u8bf7\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570 fib \uff0c\u63a5\u53d7\u4e00\u4e2a\u6574\u578b\u53d8\u91cf n \u4f5c\u4e3a\u8f93\u5165\uff0c\u8fd4\u56de\u6590\u6ce2\u90a3\u5951\u6570\u5217\u7684\u7b2c n \u9879\u3002 \u8bf7\u7ed9\u51fa\u95ee\u9898\u89e3\u6cd5\u7684\u9012\u5f52\u7248\u672c\u4e0e\u8fed\u4ee3\u7248\u672c\u3002 \u6570\u636e\u53ca\u5176\u7ec4\u7ec7\u5f62\u5f0f \u00b6 \u518d\u8c08\u5b57\u7b26\u4e32 \u00b6 \u4ec0\u4e48\u662f Unicode \u6700\u65e9\u53ea\u6709 127 \u4e2a\u5b57\u7b26\u88ab\u7f16\u7801\u5230\u8ba1\u7b97\u673a\u91cc\uff0c\u4e5f\u5c31\u662f\u5927\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u3001\u6570\u5b57\u548c\u4e00\u4e9b\u7b26\u53f7\uff0c\u8fd9\u4e2a\u7f16\u7801\u8868\u88ab\u79f0\u4e3a ASCII \u7f16\u7801\uff0c\u6bd4\u5982\u5927\u5199\u5b57\u6bcd A \u7684\u7f16\u7801\u662f 65 \uff0c\u5c0f\u5199\u5b57\u6bcd z \u7684\u7f16\u7801\u662f 122 \u3002 \u4f46\u662f\u8981\u5904\u7406\u4e2d\u6587\u663e\u7136\u4e00\u4e2a\u5b57\u8282\u662f\u4e0d\u591f\u7684\uff0c\u81f3\u5c11\u9700\u8981\u4e24\u4e2a\u5b57\u8282\uff0c\u800c\u4e14\u8fd8\u4e0d\u80fd\u548c ASCII \u7f16\u7801\u51b2\u7a81\u3002\u6240\u4ee5\uff0c\u4e2d\u56fd\u5236\u5b9a\u4e86 GB2312 \u7f16\u7801\uff0c\u7528\u6765\u628a\u4e2d\u6587\u7f16\u8fdb\u53bb\u3002 \u4f60\u53ef\u4ee5\u60f3\u5f97\u5230\u7684\u662f\uff0c\u5168\u4e16\u754c\u6709\u4e0a\u767e\u79cd\u8bed\u8a00\u3002\u65e5\u672c\u628a\u65e5\u6587\u7f16\u5230 Shift_JIS \u91cc\uff0c\u97e9\u56fd\u628a\u97e9\u6587\u7f16\u5230 Euc-kr \u91cc\uff0c\u5404\u56fd\u6709\u5404\u56fd\u7684\u6807\u51c6\uff0c\u5c31\u4f1a\u4e0d\u53ef\u907f\u514d\u5730\u51fa\u73b0\u51b2\u7a81\uff0c\u7ed3\u679c\u5c31\u662f\uff0c\u5728\u591a\u8bed\u8a00\u6df7\u5408\u7684\u6587\u672c\u4e2d\uff0c\u663e\u793a\u51fa\u6765\u4f1a\u6709\u4e71\u7801\u3002 \u56e0\u6b64\uff0cUnicode \u5b57\u7b26\u96c6\u5e94\u8fd0\u800c\u751f\u3002Unicode \u628a\u6240\u6709\u8bed\u8a00\u90fd\u7edf\u4e00\u5230\u4e00\u5957\u7f16\u7801\u91cc\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u518d\u6709\u4e71\u7801\u95ee\u9898\u4e86\u3002 \u65b0\u7684\u95ee\u9898\u53c8\u51fa\u73b0\u4e86\uff1a\u5982\u679c\u7edf\u4e00\u6210 Unicode \u7f16\u7801\uff0c\u4e71\u7801\u95ee\u9898\u4ece\u6b64\u6d88\u5931\u4e86\u3002\u4f46\u662f\uff0c\u5982\u679c\u4f60\u5199\u7684\u6587\u672c\u57fa\u672c\u4e0a\u5168\u90e8\u662f\u82f1\u6587\u7684\u8bdd\uff0c\u7528 Unicode \u7f16\u7801\u6bd4 ASCII \u7f16\u7801\u9700\u8981\u591a\u4e00\u500d\u7684\u5b58\u50a8\u7a7a\u95f4\uff0c\u5728\u5b58\u50a8\u548c\u4f20\u8f93\u4e0a\u5c31\u5341\u5206\u4e0d\u5212\u7b97\u3002 \u6240\u4ee5\uff0c\u672c\u7740\u8282\u7ea6\u7684\u7cbe\u795e\uff0c\u53c8\u51fa\u73b0\u4e86\u628a Unicode \u7f16\u7801\u8f6c\u5316\u4e3a\u201c\u53ef\u53d8\u957f\u7f16\u7801\u201d\u7684 UTF-8 \u7f16\u7801\u3002UTF-8 \u7f16\u7801\u628a\u4e00\u4e2a Unicode \u5b57\u7b26\u6839\u636e\u4e0d\u540c\u7684\u6570\u5b57\u5927\u5c0f\u7f16\u7801\u6210 1-6 \u4e2a\u5b57\u8282\uff0c\u5e38\u7528\u7684\u82f1\u6587\u5b57\u6bcd\u88ab\u7f16\u7801\u6210 1 \u4e2a\u5b57\u8282\uff0c\u6c49\u5b57\u901a\u5e38\u662f 3 \u4e2a\u5b57\u8282\uff0c\u53ea\u6709\u5f88\u751f\u50fb\u7684\u5b57\u7b26\u624d\u4f1a\u88ab\u7f16\u7801\u6210 4-6 \u4e2a\u5b57\u8282\u3002\u5982\u679c\u4f60\u8981\u4f20\u8f93\u7684\u6587\u672c\u5305\u542b\u5927\u91cf\u82f1\u6587\u5b57\u7b26\uff0c\u7528 UTF-8 \u7f16\u7801\u5c31\u80fd\u8282\u7701\u7a7a\u95f4\u3002 \u5355\u4e2a\u5143\u7d20\u662f Unicode \u5b57\u7b26\u3002\u5728\u6700\u65b0\u7684 Python 3 \u7248\u672c\u4e2d\uff0c\u5b57\u7b26\u4e32\u662f\u4ee5 Unicode \u7f16\u7801\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0cPython \u7684\u5b57\u7b26\u4e32\u652f\u6301\u591a\u8bed\u8a00\u3002 1 2 3 4 5 6 7 8 9 >>> a = \"\u4f60\u597d\u4e16\u754c\" >>> a [ 0 ] # \u53d6 a \u7684\u7b2c 0 \u4e2a\u5143\u7d20 '\u4f60' >>> a [ 1 ] '\u597d' >>> a [ 2 ] '\u4e16' >>> a [ 3 ] '\u754c' \u5b57\u7b26\u8f6c\u4e49\u3002\u5982\u679c\u5b57\u7b26\u4e32\u5185\u90e8\u65e2\u5305\u542b ' \u53c8\u5305\u542b \" \u600e\u4e48\u529e\uff1f\u53ef\u4ee5\u7528\u8f6c\u4e49\u5b57\u7b26 \\ \u6765\u6807\u8bc6\uff0c\u6bd4\u5982\uff1a 1 'I \\' m \\\" OK \\\" !' \u591a\u884c\u5b57\u7b26\u4e32\u3002\u5982\u679c\u5b57\u7b26\u4e32\u5185\u90e8\u6709\u5f88\u591a\u6362\u884c\uff0c\u7528 \\n \u5199\u5728\u4e00\u884c\u91cc\u4e0d\u597d\u9605\u8bfb\u3002\u4e3a\u4e86\u7b80\u5316\uff0cPython \u5141\u8bb8\u7528 '''...''' \u7684\u683c\u5f0f\u8868\u793a\u591a\u884c\u5185\u5bb9\u3002\u5f53\u7136\uff0c\u8fd9\u4e5f\u662f\u4e00\u79cd\u64b0\u5199\u4ee3\u7801\u6ce8\u91ca\u7684\u65b9\u5f0f\u3002 1 2 3 4 5 6 >>> print ( '''line1 ... line2 ... line3''' ) line1 line2 line3 \u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u3002\u4f7f\u7528 fstring \uff0c\u5176\u5728\u5f62\u5f0f\u4e0a\u662f\u4ee5 f \u6216 F \u4fee\u9970\u7b26\u4e3a\u4fee\u9970\u524d\u7f00\u7684\u5b57\u7b26\u4e32\uff08\u5373 f'xxx' \u6216 F'xxx' \uff09\uff0c\u4ee5\u5927\u62ec\u53f7 {} \u6807\u660e\u88ab\u66ff\u6362\u7684\u5b57\u6bb5\u3002 fstring \u5728\u672c\u8d28\u4e0a\u5e76\u4e0d\u662f\u5b57\u7b26\u4e32\u5e38\u91cf\uff0c\u800c\u662f\u4e00\u4e2a\u5728\u8fd0\u884c\u65f6\u8fd0\u7b97\u6c42\u503c\u7684\u8868\u8fbe\u5f0f\u3002 1 2 3 4 >>> r = 2.5 >>> s = 3.14 * r ** 2 >>> print ( f 'The area of a circle with radius { r } is { s : .2f } ' ) The area of a circle with radius 2.5 is 19.62 \u5b57\u7b26\u4e32\u8fd0\u7b97 1 2 3 4 5 6 7 >>> a = 'Hello' >>> a + a 'HelloHello' >>> a * 10 # \u91cd\u590d\u8f93\u51fa 'HelloHelloHelloHelloHelloHelloHelloHelloHelloHello' >>> a [ 1 : 3 ] # \u83b7\u53d6 index \u5728 [1, 3) \u4e2d\u7684\u5143\u7d20\u6784\u6210\u7684\u5b57\u7b26\u4e32 'el' \u5e38\u7528\u7279\u6b8a\u51fd\u6570 strip() \u53bb\u9664\u524d\u540e\u7684\u7a7a\u5b57\u7b26 1 2 3 >>> a = ' <-backspace-> ' >>> a . strip () '<-backspace->' replace(str1, str2, num) \u6279\u91cf\u66ff\u6362 1 2 3 >>> a = \"\u6211\u7231\u5317\u4eac\u5927\u5b66\uff0c\u5317\u4eac\u5927\u5b66\u662f\u4e16\u4e00\u5927\uff0c\u5317\u4eac\u5927\u5b66yyds\" >>> a . replace ( \"\u5317\u4eac\u5927\u5b66\" , \"\u6e05\u534e\u5927\u5b66\" ) '\u6211\u7231\u6e05\u534e\u5927\u5b66\uff0c\u6e05\u534e\u5927\u5b66\u662f\u4e16\u4e00\u5927\uff0c\u6e05\u534e\u5927\u5b66yyds' \u6269\u5c55\u6570\u636e\u7c7b\u578b \u00b6 \u5217\u8868 list Python \u5185\u7f6e\u7684\u4e00\u79cd\u6570\u636e\u7c7b\u578b\u662f\u5217\u8868\u3002 list \u662f\u4e00\u79cd\u7c7b\u4f3c\u4e8e\u5411\u91cf\u7684\u7ed3\u6784\uff0c\u53ef\u4ee5\u968f\u65f6\u6dfb\u52a0\u548c\u5220\u9664\u5176\u4e2d\u7684\u5143\u7d20\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 >>> a = [ 2 , 3 ] # Init a list >>> a . append ( 4 ) # Append elements to list >>> a [ 2 , 3 , 4 ] >>> b = [ 'a' , 'c' , 114514 ] >>> b [ 'a' , 'c' , 114514 ] >>> a + b # List \"plus\" [ 2 , 3 , 4 , 'a' , 'c' , 114514 ] >>> a [ 0 ] = \"c7w,yyds\" # Change value of elements >>> a [ 'c7w,yyds' , 3 , 4 ] >>> a [ - 1 ] # Find the last element 4 >>> a . reverse () # Reverse the list >>> a [ 4 , 3 , 'c7w,yyds' ] >>> p = [ 5 , 4 , 3 , 2 , 1 ] >>> p . sort () # Sort the list >>> p [ 1 , 2 , 3 , 4 , 5 ] \u5143\u7ec4 tuple Python \u7684\u5143\u7ec4\u4e0e\u5217\u8868\u7c7b\u4f3c\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u5143\u7ec4\u7684\u5143\u7d20\u4e0d\u80fd\u4fee\u6539\u3002\u5143\u7ec4\u4f7f\u7528\u5c0f\u62ec\u53f7\uff0c\u5217\u8868\u4f7f\u7528\u65b9\u62ec\u53f7\u3002 \u5143\u7ec4\u521b\u5efa\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u5728\u62ec\u53f7\u4e2d\u6dfb\u52a0\u5143\u7d20\uff0c\u5e76\u4f7f\u7528\u9017\u53f7\u9694\u5f00\u5373\u53ef\u3002 1 2 3 tup1 = () # \u7a7a\u5143\u7ec4 tup1 = ( 50 , ) # \u5143\u7ec4\u4e2d\u53ea\u5305\u542b\u4e00\u4e2a\u5143\u7d20\u65f6\uff0c\u9700\u8981\u5728\u5143\u7d20\u540e\u9762\u6dfb\u52a0\u9017\u53f7 tup1 [ 0 ] = 20 # Error! Elements of tuple cannot be changed. \u5b57\u5178 dict \u5b57\u5178\u662f\u53e6\u4e00\u79cd\u53ef\u53d8\u5bb9\u5668\u6a21\u578b\uff0c\u4e14\u53ef\u5b58\u50a8\u4efb\u610f\u7c7b\u578b\u5bf9\u8c61\uff0c\u91c7\u7528 \u952e\u503c\u5bf9 \u5b58\u50a8\u65b9\u5f0f\u3002 \u5b57\u5178\u7684\u6bcf\u4e2a\u952e\u503c\u5bf9\u7528\u5192\u53f7 : \u5206\u5272\uff0c\u6bcf\u4e2a\u952e\u503c\u5bf9\u4e4b\u95f4\u7528\u9017\u53f7 , \u5206\u5272\uff0c\u6574\u4e2a\u5b57\u5178\u5305\u62ec\u5728\u82b1\u62ec\u53f7 {} \u4e2d\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 >>> d = { 'name' : 'c7w' , 'gender' : 'M' , 'id' : 2020000000 } # Init the dict >>> d { 'name' : 'c7w' , 'gender' : 'M' , 'id' : 2020000000 } >>> d [ 'gender' ] # Get the value of certain key 'M' >>> d [ 'department' ] = 'CST' # New a key-value pair >>> d { 'name' : 'c7w' , 'gender' : 'M' , 'id' : 2020000000 , 'department' : 'CST' } >>> d [ 'girlfriend' ] # Would raise KeyError if key not found Traceback ( most recent call last ): File \"<stdin>\" , line 1 , in < module > KeyError : 'girlfriend' >>> d [ 'id' ] += 2 # Change value of certain key >>> d { 'name' : 'c7w' , 'gender' : 'M' , 'id' : 2020000002 , 'department' : 'CST' } \u53ef\u4ee5\u4f7f\u7528 in \u5173\u952e\u5b57\u5224\u65ad\u67d0\u4e2a\u7279\u5b9a\u7684 key \u662f\u5426\u5728\u5b57\u5178\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5185\u7f6e\u7684 dictObj.get() \u51fd\u6570\u5728 key \u4e0d\u5b58\u5728\u65f6\u63d0\u4f9b\u9ed8\u8ba4\u83b7\u53d6\u503c\u3002 \u96c6\u5408 set set \u548c dict \u7c7b\u4f3c\uff0c\u4e5f\u662f\u4e00\u7ec4 key \u7684\u96c6\u5408\uff0c\u4f46\u4e0d\u5b58\u50a8 value\u3002\u7531\u4e8e key \u4e0d\u80fd\u91cd\u590d\uff0c\u6240\u4ee5\uff0c\u5728 set \u4e2d\uff0c\u6ca1\u6709\u91cd\u590d\u7684 key\u3002 1 2 3 4 5 6 7 >>> myList = [ 1 , 1 , 1 , 2 , 3 , 3 , 3 , 3 , 4 ] >>> s = set ( myList ) >>> s { 1 , 2 , 3 , 4 } >>> s = list ( s ) >>> s [ 1 , 2 , 3 , 4 ] \u9762\u5411\u5bf9\u8c61\u8bed\u6cd5 \u5982\u679c\u91c7\u7528\u9762\u5411\u5bf9\u8c61\u5f0f\u7684\u601d\u7ef4\uff0c\u6211\u4eec\u5c06\u5177\u6709\u5171\u540c\u5c5e\u6027\u4e0e\u65b9\u6cd5\u7684\u4e00\u7ec4\u4e2a\u4f53\u62bd\u8c61\u6210\u4e00\u4e2a\u7c7b\uff0c\u5728 Python \u4e2d\u7684\u8868\u8fbe\u65b9\u5f0f\u4e3a\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 class Student ( object ): def __init__ ( self , name , score ): self . name = name self . score = score def get_grade ( self ): if self . score >= 90 : return 'A' elif self . score >= 60 : return 'B' else : return 'C' \u66f4\u591a\u6709\u5173 Python \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u77e5\u8bc6\u8bf7\u9605\u8bfb\uff1a https://www.liaoxuefeng.com/wiki/1016959663602400/1017495723838528 https://www.liaoxuefeng.com/wiki/1016959663602400/1017501628721248 \u6587\u4ef6\u8bfb\u5199 \u00b6 open() \u51fd\u6570 \u4f60\u5fc5\u987b\u5148\u7528 Python \u5185\u7f6e\u7684 open() \u51fd\u6570\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\uff0c\u521b\u5efa\u4e00\u4e2a file \u5bf9\u8c61\uff0c\u76f8\u5173\u7684\u65b9\u6cd5\u624d\u53ef\u4ee5\u8c03\u7528\u5b83\u8fdb\u884c\u8bfb\u5199\u3002 1 file object = open ( file_name [, access_mode ][, buffering ]) \u5176\u4e2d\u5e38\u7528\u7684\u8bfb\u53d6\u6a21\u5f0f\u6709 'r' \uff08\u53ea\u8bfb\uff09\u3001 'w+' \uff08\u6e05\u7a7a\u5e76\u91cd\u5199\uff09\u3001 'a+' \uff08\u8ffd\u52a0\u5199\u5165\uff09\u3002 read() \u51fd\u6570 read() \u65b9\u6cd5\u4ece\u4e00\u4e2a\u6253\u5f00\u7684\u6587\u4ef6\u4e2d\u8bfb\u53d6\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002 1 2 3 4 5 6 # \u6253\u5f00\u4e00\u4e2a\u6587\u4ef6 fo = open ( \"foo.txt\" , \"r\" ) str = fo . read () print ( \"\u8bfb\u53d6\u7684\u5b57\u7b26\u4e32\u662f: \" , str ) # \u5173\u95ed\u6253\u5f00\u7684\u6587\u4ef6 fo . close () write() \u51fd\u6570 write() \u65b9\u6cd5\u53ef\u5c06\u4efb\u4f55\u5b57\u7b26\u4e32\u5199\u5165\u4e00\u4e2a\u6253\u5f00\u7684\u6587\u4ef6\u3002\u9700\u8981\u91cd\u70b9\u6ce8\u610f\u7684\u662f\uff0cPython \u5b57\u7b26\u4e32\u53ef\u4ee5\u662f\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u800c\u4e0d\u662f\u4ec5\u4ec5\u662f\u6587\u5b57\u3002\u6ce8\u610f\uff0c write() \u65b9\u6cd5\u4e0d\u4f1a\u5728\u5b57\u7b26\u4e32\u7684\u7ed3\u5c3e\u6dfb\u52a0\u6362\u884c\u7b26\u5373 '\\n' \u3002 1 2 3 4 5 6 # \u6253\u5f00\u4e00\u4e2a\u6587\u4ef6 fo = open ( \"foo.txt\" , \"w\" ) fo . write ( \"www.runoob.com! \\n Very good site! \\n \" ) # \u5173\u95ed\u6253\u5f00\u7684\u6587\u4ef6 fo . close () [Checkpoint Python-04] Numbers \u3010\u6570\u636e\u7ed3\u6784\u3011 \u5206\u522b\u627e\u51fa 1 \\leq i \\leq 1000000 1 \\leq i \\leq 1000000 \u5185\u6240\u6709\u7684\u662f 2, 3, 5 2, 3, 5 \u7684\u500d\u6570\u7684\u6570\u7684\u5bf9\u5e94\u7684 list \u5c06\u8fd9\u4e9b\u5217\u8868\u8fde\u63a5\u8d77\u6765 \u5c06\u8fd9\u4e9b\u6570\u53bb\u91cd \u3010\u6587\u672c\u5199\u5165\u3011 \u5c06 1. \u4e2d\u7684\u7b54\u6848\uff0c\u8f93\u51fa\u4e3a ans.txt \u8bed\u6cd5\u7cd6 \u00b6 Python \u7684\u4e00\u5927\u7279\u8272\u5728\u4e8e\u5176\u4e30\u5bcc\u7684\u8bed\u6cd5\u7cd6\uff0c\u8fd9\u4e9b\u8bed\u6cd5\u7cd6\u8ba9 Python \u4ee3\u7801\u4e0e\u5176\u4ed6\u8bed\u8a00\u76f8\u6bd4\u5c55\u73b0\u51fa\u4e86\u5b8c\u5168\u4e0d\u4e00\u6837\u7684\u98ce\u683c\uff0c\u8fd9\u4e2a\u98ce\u683c\u4e5f\u79f0\u4f5c Pythonic\u3002\u719f\u7ec3\u8fd0\u7528\u8fd9\u4e9b\u8bed\u6cd5\u7cd6\uff0c\u53ef\u4ee5\u7b80\u5316\u4ee3\u7801\u7f16\u5199\u5e76\u63d0\u9ad8\u4ee3\u7801\u53ef\u8bfb\u6027\u3002 \u81ea\u52a8\u751f\u6210\u5143\u7ec4\u4e0e\u89e3\u5305 \u00b6 1 2 3 a = 1 b = 2 a , b = b , a # \u81ea\u52a8\u751f\u6210\u4e86 Tuple \u5e76\u4ea4\u6362\u6b21\u5e8f\uff0c\u4e0d\u9700\u4e2d\u95f4\u53d8\u91cf \u591a\u91cd\u6bd4\u8f83 \u00b6 1 2 3 a = 30 if 20 <= a <= 40 : print ( a ) \u53ef\u8fed\u4ee3\u5bf9\u8c61\u7684\u5207\u7247 \u00b6 1 2 3 4 5 6 7 8 9 10 >>> a = list ( range ( 0 , 100 )) >>> a [ 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 , 13 , 14 , 15 , 16 , 17 , 18 , 19 , 20 , 21 , 22 , 23 , 24 , 25 , 26 , 27 , 28 , 29 , 30 , 31 , 32 , 33 , 34 , 35 , 36 , 37 , 38 , 39 , 40 , 41 , 42 , 43 , 44 , 45 , 46 , 47 , 48 , 49 , 50 , 51 , 52 , 53 , 54 , 55 , 56 , 57 , 58 , 59 , 60 , 61 , 62 , 63 , 64 , 65 , 66 , 67 , 68 , 69 , 70 , 71 , 72 , 73 , 74 , 75 , 76 , 77 , 78 , 79 , 80 , 81 , 82 , 83 , 84 , 85 , 86 , 87 , 88 , 89 , 90 , 91 , 92 , 93 , 94 , 95 , 96 , 97 , 98 , 99 ] >>> a [ 10 : 19 ] # [10, 19) [ 10 , 11 , 12 , 13 , 14 , 15 , 16 , 17 , 18 ] >>> a [ - 10 : - 2 ] # [-10, -2) [ 90 , 91 , 92 , 93 , 94 , 95 , 96 , 97 ] >>> a [ - 1 ] 99 \u5217\u8868\u751f\u6210\u5f0f \u00b6 1 2 3 >>> L = [ x * x for x in range ( 100 ) if x % 10 == 0 ] >>> L [ 0 , 100 , 400 , 900 , 1600 , 2500 , 3600 , 4900 , 6400 , 8100 ] \u5305\u7ba1\u7406 \u00b6 \u591a\u6587\u4ef6\u9879\u76ee \u00b6 \u5728\u8ba1\u7b97\u673a\u7a0b\u5e8f\u7684\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u968f\u7740\u7a0b\u5e8f\u4ee3\u7801\u8d8a\u5199\u8d8a\u591a\uff0c\u5728\u4e00\u4e2a\u6587\u4ef6\u91cc\u4ee3\u7801\u5c31\u4f1a\u8d8a\u6765\u8d8a\u957f\uff0c\u8d8a\u6765\u8d8a\u4e0d\u5bb9\u6613\u7ef4\u62a4\u3002 \u4e3a\u4e86\u7f16\u5199\u53ef\u7ef4\u62a4\u7684\u4ee3\u7801\uff0c\u6211\u4eec\u628a\u5f88\u591a\u51fd\u6570\u5206\u7ec4\uff0c\u5206\u522b\u653e\u5230\u4e0d\u540c\u7684\u6587\u4ef6\u91cc\uff0c\u8fd9\u6837\uff0c\u6bcf\u4e2a\u6587\u4ef6\u5305\u542b\u7684\u4ee3\u7801\u5c31\u76f8\u5bf9\u8f83\u5c11\uff0c\u5f88\u591a\u7f16\u7a0b\u8bed\u8a00\u90fd\u91c7\u7528\u8fd9\u79cd\u7ec4\u7ec7\u4ee3\u7801\u7684\u65b9\u5f0f\u3002\u5728 Python \u4e2d\uff0c\u4e00\u4e2a .py \u6587\u4ef6\u5c31\u79f0\u4e4b\u4e3a\u4e00\u4e2a \u6a21\u5757 \uff08\u82f1\u8bed\uff1aModule\uff09\u3002 \u8bf7\u6ce8\u610f\uff0c\u6bcf\u4e00\u4e2a\u5305\u76ee\u5f55\u4e0b\u9762\u90fd\u4f1a\u6709\u4e00\u4e2a __init__.py \u7684\u6587\u4ef6\u3002\u8fd9\u4e2a\u6587\u4ef6\u662f\u5fc5\u987b\u5b58\u5728\u7684\uff0c\u5426\u5219\uff0cPython \u5c31\u628a\u8fd9\u4e2a\u76ee\u5f55\u5f53\u6210\u666e\u901a\u76ee\u5f55\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u5305\u3002 __init__.py \u53ef\u4ee5\u662f\u7a7a\u6587\u4ef6\uff0c\u4e5f\u53ef\u4ee5\u6709 Python \u4ee3\u7801\uff0c\u56e0\u4e3a __init__.py \u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u6a21\u5757\u3002\u5728\u4e0b\u5217\u6587\u4ef6\u6811\u4e2d\u5b83\u7684\u6a21\u5757\u540d\u5c31\u662f mycompany \u3002 1 2 3 4 5 6 7 8 mycompany \u251c\u2500 web \u2502 \u251c\u2500 __init__ . py \u2502 \u251c\u2500 utils . py \u2502 \u2514\u2500 www . py \u251c\u2500 __init__ . py \u251c\u2500 abc . py \u2514\u2500 utils . py \u5f15\u5165\u5916\u90e8\u5305 \u00b6 Python \u4e3a\u6211\u4eec\u81ea\u5e26\u4e86\u5f88\u591a\u5185\u7f6e\u6a21\u5757\uff0c\u6bd4\u5982 os \u3001 datetime \u3001 re \u7b49\u7b49\uff0c\u8fd9\u91cc\u4e0d\u5728\u8bed\u8a00\u5165\u95e8\u7bc7\u4e2d\u8d58\u8ff0\u3002\u5f53\u6709\u8fd0\u7528\u7684\u9700\u6c42\u65f6\uff0c\u57f9\u517b\u9762\u5411\u641c\u7d22\u5f15\u64ce\u7684\u95ee\u9898\u89e3\u51b3\u80fd\u529b\u662f\u5f88\u91cd\u8981\u7684\u3002 \u5b89\u88c5\u5916\u90e8\u5305 \u00b6 \u6b63\u662f\u7531\u4e8e\u5f00\u6e90\u793e\u533a\u7684\u5b58\u5728\uff0c\u624d\u4f7f\u5f97 Python \u80fd\u591f\u5982\u6b64\u4fbf\u6377\uff0c\u5982\u6b64\u5f3a\u5927\u3002Python \u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u6781\u4e3a\u65b9\u4fbf\u7684\u5305\u7ba1\u7406\u5668 pip \uff0c\u4f1a\u5728\u5b89\u88c5\u65f6\u9644\u5e26\u3002 Linux \u7528\u6237\u53ef\u4ee5\u4f7f\u7528 sudo apt update && sudo apt install pip3 \u6765\u5b89\u88c5\u3002 \u5728 Python \u4e2d\uff0c\u5b89\u88c5\u7b2c\u4e09\u65b9\u6a21\u5757\uff0c\u662f\u901a\u8fc7\u5305\u7ba1\u7406\u5de5\u5177 pip \u5b8c\u6210\u7684\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u8981\u5b89\u88c5\u4e00\u4e2a\u7b2c\u4e09\u65b9\u5e93 Pillow\uff0c\u5176\u662f\u4e00\u4e2a\u9ad8\u7ea7\u7684\u56fe\u50cf\u5904\u7406\u5de5\u5177\u3002\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7 pip install pillow \u6765\u5b89\u88c5\u3002 \u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528 anaconda \u3001 virtualenv \u7b49\u5305\u6765\u534f\u52a9\u6211\u4eec\u8fdb\u884c\u865a\u62df\u73af\u5883\u521b\u5efa\u6216\u8005\u5305\u7ba1\u7406\uff0c\u8fd9\u91cc\u6211\u4eec\u4e0d\u518d\u5c55\u5f00\u3002 \u62d3\u5c55\u5b66\u4e60 \u00b6 Python \u7684\u5f3a\u5927\u4e4b\u5904\u5728\u4e8e\u5176\u4e30\u5bcc\u7684\u7b2c\u4e09\u65b9\u5e93\uff0c\u4e3a\u4e86\u8fdb\u4e00\u6b65\u5b66\u4e60\u3001\u8fd0\u7528 Python \u8bed\u8a00\uff0c\u6211\u4eec\u63a8\u8350\u8bfb\u8005\u81ea\u884c\u641c\u7d22\u4e0b\u5217\u7b2c\u4e09\u65b9\u5e93\u7684\u4ecb\u7ecd\u3001\u6587\u6863\uff0c\u5e76\u5c1d\u8bd5\u5728\u81ea\u5df1\u7684\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u5b83\u4eec\u3002\u6709\u4f59\u529b\u7684\u8bfb\u8005\u751a\u81f3\u53ef\u4ee5\u53bb\u9605\u8bfb\u8fd9\u4e9b\u7b2c\u4e09\u65b9\u5e93\u7684\u6e90\u4ee3\u7801\u3002 \u56fe\u50cf\u5904\u7406 \u00b6 Pillow \u7f51\u7ad9\u5f00\u53d1 \u00b6 Django Flask \u6570\u636e\u6536\u96c6 \u00b6 requests beautifulsoup4 \u7edf\u8ba1\u5206\u6790 \u00b6 Numpy Matplotlib pandas \u673a\u5668\u5b66\u4e60 \u00b6 Tensorflow Pytorch \u8d44\u6e90\u94fe\u63a5 \u00b6 2020 \u6691\u57f9\u8bb2\u4e49 by rls Python Docs https://www.python.org/doc/ Runoob https://www.runoob.com/python3/python3-tutorial.html \u5ed6\u96ea\u5cf0 https://www.liaoxuefeng.com/wiki/1016959663602400/","title":"Python \u8bed\u8a00\u57fa\u7840"},{"location":"languages/python/#python","text":"\u5982\u4f55\u9ad8\u6548\u5730\u5b66\u4e60\u7f16\u7a0b\u8bed\u8a00 \u5f53\u6211\u4eec\u5728\u8bf4\u5b66\u4e60\u4e00\u95e8\u65b0\u7684\u7f16\u7a0b\u8bed\u8a00\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5230\u5e95\u5728\u8bf4\u4ec0\u4e48\uff1f C++, Java, Python, JavaScript, Typescript... \u4e00\u95e8\u53c8\u4e00\u95e8\u7684\u7f16\u7a0b\u8bed\u8a00\u540c\u4e2d\u6709\u5f02\uff0c\u5f02\u4e2d\u6709\u540c\u3002\u867d\u8bf4\u201c\u5b9e\u73b0\u76ee\u7684\u201d\u662f\u6211\u4eec\u5b66\u4e60\u65b0\u7684\u7f16\u7a0b\u8bed\u8a00\u7684\u76f4\u63a5\u9a71\u52a8\u529b\uff0c\u53ef\u5982\u4f55\u9ad8\u6548\u5730\u638c\u63e1\u4e00\u95e8\u7f16\u7a0b\u8bed\u8a00\uff0c\u4f7f\u5176\u4e3a\u6211\u6240\u7528\uff0c\u662f\u4e2a\u503c\u5f97\u6211\u4eec\u601d\u8003\u7684\u95ee\u9898\u3002 \u6211\u4eec\u5c1d\u8bd5\u7528\u8fc7\u5f80\u7684\u7ecf\u9a8c\u6765\u5bf9\u8fd9\u4e2a\u95ee\u9898\u7ed9\u51fa\u67d0\u79cd\u610f\u4e49\u4e0a\u7684\u89e3\u7b54\u3002\u4e5f\u8bb8\u4f60\u5df2\u7ecf\u4fee\u8fc7\u4e86\u300a\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u300b\u6216\u662f\u300a\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u300b\u7b49\u7b49\u8bfe\u7a0b\uff0c\u6211\u4eec\u4e0d\u59a8\u56de\u5fc6\u5728\u5165\u95e8\u7b2c\u4e00\u95e8\u7f16\u7a0b\u8bed\u8a00\u65f6\u7684\u6d41\u7a0b\u3002 \u6211\u4eec\u5148\u4ecb\u7ecd\u4e86\u4e00\u4e9b\u6700\u7b80\u5355\u7684 \u6570\u636e\u7c7b\u578b \uff0c\u7136\u540e\u5f15\u5165\u4e86\u4e00\u4e9b\u52a0\u52a0\u51cf\u51cf\u7684 \u64cd\u4f5c\u7b26 \u3002\u7136\u540e\uff0c\u6211\u4eec\u5b66\u4e60\u4e86\u57fa\u672c\u7684 \u7a0b\u5e8f\u6d41\u7a0b\u63a7\u5236\u8bed\u53e5 \uff0c\u5982 \u987a\u5e8f\u8bed\u53e5 \u3001 \u6761\u4ef6\u8bed\u53e5 \u548c \u5faa\u73af\u8bed\u53e5 \uff0c\u4ee5\u638c\u63e1\u7a0b\u5e8f\u6267\u884c\u7684\u5177\u4f53\u6d41\u7a0b\u3002\u7136\u540e\uff0c\u6211\u4eec\u5b66\u4e60\u4e86\u4e00\u4e9b\u8f83\u4e3a\u65b9\u4fbf\u7684 \u6570\u636e\u7ec4\u7ec7\u65b9\u5f0f \uff0c\u5982 C++ \u4e2d\u7684 \u6570\u7ec4 \u3001 \u7ed3\u6784\u4f53 \u3001 STL \u7b49\u7b49\uff0c\u8fdb\u800c\u7528 \u9762\u5411\u5bf9\u8c61 \u7684\u601d\u7ef4\u6765\u601d\u8003\u95ee\u9898\u3002\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u8981\u4e86\u89e3\u4f7f\u7528\u8fd9\u95e8\u7f16\u7a0b\u8bed\u8a00\u6240\u5177\u6709\u7684\u72ec\u7279\u7684\u4f18\u52bf\uff0c\u6bd4\u5982\u4e00\u95e8\u7f16\u7a0b\u8bed\u8a00\u7684 \u8bed\u6cd5\u7cd6 \uff0c\u6216\u662f\u4f7f\u7528\u8fd9\u95e8\u8bed\u8a00\u80fd\u8ba9\u6211\u4eec\u6781\u4e3a\u4fbf\u5229\u5730\u5b8c\u6210\u4ec0\u4e48\u529f\u80fd\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u5728\u5b66\u4e60\u4e00\u95e8\u65b0\u7684\u7f16\u7a0b\u8bed\u8a00\u65f6\uff0c\u4e0d\u59a8\u5c31\u4eff\u7167\u7740\u8fd9\u4e2a\u601d\u8def\uff0c\u5c06\u5b66\u5230\u7684\u5185\u5bb9\u6309\u7167\u4e0a\u8ff0\u4e3b\u9898\u8fdb\u884c\u5f52\u7c7b\u6574\u7406\u3002 \u4ec0\u4e48\u662f\u8bed\u6cd5\u7cd6\uff1f \u8bed\u6cd5\u7cd6\uff08\u82f1\u8bed\uff1aSyntactic sugar\uff09\u662f\u7531\u82f1\u56fd\u8ba1\u7b97\u673a\u79d1\u5b66\u5bb6\u5f7c\u5f97\u00b7\u5170\u4e01\u53d1\u660e\u7684\u4e00\u4e2a\u672f\u8bed\uff0c\u6307\u8ba1\u7b97\u673a\u8bed\u8a00\u4e2d\u6dfb\u52a0\u7684\u67d0\u79cd\u8bed\u6cd5\uff0c\u8fd9\u79cd\u8bed\u6cd5\u5bf9\u8bed\u8a00\u7684\u529f\u80fd\u6ca1\u6709\u5f71\u54cd\uff0c\u4f46\u662f\u66f4\u65b9\u4fbf\u7a0b\u5e8f\u5458\u4f7f\u7528\u3002\u8bed\u6cd5\u7cd6\u8ba9\u7a0b\u5e8f\u66f4\u52a0\u7b80\u6d01\uff0c\u6709\u66f4\u9ad8\u7684\u53ef\u8bfb\u6027\u3002 Excerpted from Wikipedia . Checkpoint! \u6211\u4eec\u63a8\u8350\u521d\u5b66 Python \u7684\u8bfb\u8005\u6309\u987a\u5e8f\u9605\u8bfb\u672c\u6587\u6863\u3002\u6587\u6863\u4e2d\u6709\u82e5\u5e72 Checkpoint\uff0c\u6bcf\u4e2a Checkpoint \u90fd\u662f\u4e00\u4e2a\u7b80\u5355\u7684 Python \u7f16\u7a0b\u4efb\u52a1\uff0c\u53ef\u4ee5\u5feb\u901f\u68c0\u9a8c\u4f60\u662f\u5426\u7406\u89e3\u4e86\u6587\u6863\u8bb2\u89e3\u7684\u77e5\u8bc6\u3002","title":"Python \u8bed\u8a00\u57fa\u7840"},{"location":"languages/python/#_1","text":"\u57fa\u672c\u7684\u4ee3\u6570\u601d\u7ef4 \u4e00\u5b9a\u7684\u903b\u8f91\u80fd\u529b \u5148\u4fee\u7a0b\u5e8f\u8bbe\u8ba1\u8bfe\u7a0b\u7684\u7a0b\u5e8f\u903b\u8f91\uff0c\u5bf9\u6570\u636e\u7ec4\u7ec7\u5f62\u5f0f\u7684\u4e00\u5b9a\u7406\u89e3\u548c\u4e00\u5b9a\u7684\u9762\u5411\u5bf9\u8c61\u601d\u60f3","title":"\u524d\u7f6e\u77e5\u8bc6"},{"location":"languages/python/#python_1","text":"\u5f00\u53d1\u7f51\u9875\u524d\u7aef\u4e0e\u540e\u7aef \u5728\u6570\u636e\u7edf\u8ba1\u4e0e\u5206\u6790\u4e2d\u6781\u5177\u4f18\u52bf \u5728\u673a\u5668\u5b66\u4e60\u9886\u57df\u6709\u6781\u4e3a\u91cd\u8981\u7684\u4f5c\u7528 \u80f6\u6c34\u578b\u8bed\u8a00\uff0c\u7b80\u6d01\u7075\u6d3b \u62ef\u6551\u4f60\u7684\u5927\u4e00\u5c0f\u5b66\u671f","title":"Python \u53ef\u4ee5\u7528\u6765\u505a\u4ec0\u4e48"},{"location":"languages/python/#hello-world","text":"","title":"\u5b89\u88c5\u4e0e Hello World"},{"location":"languages/python/#python_2","text":"Python \u7248\u672c\u7684\u9009\u62e9 Python \u73b0\u5728\u7684\u4e3b\u6d41\u7248\u672c\u662f Python3 \uff0c\u76ee\u524d\u7684\u6700\u65b0\u7248\u672c\u662f 3.10\uff0c\u5b98\u65b9\u4f1a\u5bf9\u8be5\u7248\u672c\u8fdb\u884c Bug \u4fee\u590d\uff0c\u800c\u8f83\u4e3a\u7a33\u5b9a\u7684\u7248\u672c\u662f 3.9 \u4e0e 3.8\uff0c\u9488\u5bf9\u5176\u4ec5\u4f1a\u63a8\u51fa\u5b89\u5168\u6027\u76f8\u5173\u7684\u4fee\u590d\u3002 \u76ee\u524d\u5728\u7f51\u7edc\u4e0a\u627e\u5230\u7684\u5f88\u591a\u6559\u7a0b\u90fd\u8fd8\u662f Python2 \u98ce\u683c\u7684\uff0c\u800c Python \u5b98\u65b9\u5728 2020/1/1 \u5df2\u7ecf\u505c\u6b62\u4e86\u5bf9 Python2 \u7684\u5b98\u65b9\u652f\u6301\u3002\u56e0\u6b64\uff0c\u5c3d\u5feb\u5347\u7ea7\u5e76\u719f\u6089 Python3 \u7684\u8bed\u6cd5\uff0c\u662f\u5f88\u6709\u5fc5\u8981\u7684\u3002 \u7f16\u8bd1\u578b\u8bed\u8a00\u4e0e\u89e3\u91ca\u578b\u8bed\u8a00 \u6211\u4eec\u5df2\u7ecf\u719f\u6089\u7684 C++ \u662f\u4e00\u79cd \u7f16\u8bd1\u578b\u8bed\u8a00 \u3002\u5bf9\u4e8e\u7f16\u8bd1\u578b\u8bed\u8a00\uff0c\u5f00\u53d1\u5b8c\u6210\u4ee5\u540e\u9700\u8981\u5c06\u6240\u6709\u7684 \u6e90\u4ee3\u7801 \u90fd\u8f6c\u6362\u6210 \u53ef\u6267\u884c\u7a0b\u5e8f \uff0c\u800c\u8fd9\u79cd\u8f6c\u6362\u4e00\u822c\u662f\u4e0d\u80fd\u8de8\u5e73\u53f0\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u8981\u9488\u5bf9\u4e0d\u540c\u7684\u5e73\u53f0\u751f\u6210\u4e0d\u540c\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002 \u800c\u6211\u4eec\u5c06\u8981\u4ecb\u7ecd\u7684 Python \u662f\u4e00\u79cd \u89e3\u91ca\u578b\u8bed\u8a00 \u3002\u6bcf\u6b21\u6267\u884c\u7a0b\u5e8f\u90fd\u9700\u8981\u4e00\u8fb9\u8f6c\u6362\u4e00\u8fb9\u6267\u884c\uff0c\u7528\u5230\u54ea\u4e9b\u6e90\u4ee3\u7801\u5c31\u5c06\u54ea\u4e9b\u6e90\u4ee3\u7801\u8f6c\u6362\u6210\u673a\u5668\u7801\uff0c\u7528\u4e0d\u5230\u7684\u4e0d\u8fdb\u884c\u4efb\u4f55\u5904\u7406\u3002\u6bcf\u6b21\u6267\u884c\u7a0b\u5e8f\u65f6\u53ef\u80fd\u4f7f\u7528\u4e0d\u540c\u7684\u529f\u80fd\uff0c\u8fd9\u4e2a\u65f6\u5019\u9700\u8981\u8f6c\u6362\u7684\u6e90\u4ee3\u7801\u4e5f\u4e0d\u4e00\u6837\u3002\u76f8\u6bd4\u4e8e\u7f16\u8bd1\u578b\u8bed\u8a00\uff0c\u89e3\u91ca\u578b\u8bed\u8a00\u51e0\u4e4e\u90fd\u80fd\u8de8\u5e73\u53f0\uff0c\u201c \u4e00\u6b21\u7f16\u5199\uff0c\u5230\u5904\u8fd0\u884c \u201d\u662f\u771f\u5b9e\u5b58\u5728\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u53ef\u4ee5\u8f7b\u677e\u5b9e\u73b0\u5728 Windows \u4e0a\u7f16\u5199 Python \u6e90\u4ee3\u7801\uff0c\u7136\u540e\u4e22\u5230 Linux \u4e0a\u53bb\u8fd0\u884c\uff0c\u53ea\u8981\u53cc\u65b9\u914d\u7f6e\u4e86\u76f8\u540c\u7684\u89e3\u91ca\u5668\u73af\u5883\u5373\u53ef\u3002 \u53c2\u8003\u81ea http://c.biancheng.net/view/4136.html . \u9488\u5bf9 Windows \u7528\u6237\uff0c\u8bf7\u8bbf\u95ee https://www.python.org/downloads/windows/ \u3002\u9488\u5bf9 macOS \u7528\u6237\uff0c\u8bf7\u8bbf\u95ee https://www.python.org/downloads/macos/ \u3002\u4e0b\u8f7d\u5bf9\u5e94\u7684\u5305\u7136\u540e\u5b89\u88c5\u5373\u53ef\u3002 \u5728\u5b89\u88c5\u65f6\u8bb0\u5f97\u52fe\u9009 Add To Path\uff0c\u5c06\u5b89\u88c5\u8def\u5f84\u4fdd\u5b58\u4e3a\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\u3002 \u4ec0\u4e48\u662f\u73af\u5883\u53d8\u91cf\uff1f \u53ef\u53c2\u8003 https://zhuanlan.zhihu.com/p/82011100 \uff0c\u5728\u4e86\u89e3\u73af\u5883\u53d8\u91cf\u7684\u57fa\u672c\u6982\u5ff5\u540e\uff0c\u5982\u679c\u4f60\u5fd8\u8bb0\u4e86\u5728\u5b89\u88c5\u65f6\u5c06 Python \u6240\u5728\u8def\u5f84\u6dfb\u52a0\u5230\u73af\u5883\u53d8\u91cf\u4e2d\uff0c\u53ef\u4ee5\u81ea\u884c\u5c1d\u8bd5\u5c06\u5176\u6dfb\u52a0\u5165 Path\u3002","title":"Python \u7684\u5b89\u88c5"},{"location":"languages/python/#_2","text":"\u57fa\u4e8e\u89e3\u91ca\u578b\u8bed\u8a00\u7684\u7279\u70b9\uff0cPython \u4ee3\u7801\u53ef\u4ee5\u5206\u4e3a \u4ea4\u4e92\u5f0f\u7a97\u53e3 \u548c \u811a\u672c\u6587\u4ef6 \u4e24\u79cd \u6267\u884c\u65b9\u5f0f \u3002 \u4ea4\u4e92\u5f0f\u7a97\u53e3\uff1a\u5982\u5728\u547d\u4ee4\u884c\u8f93\u5165 python \uff0c\u5373\u53ef\u8fdb\u5165\u4ea4\u4e92\u5f0f\u7a97\u53e3\uff0c\u6b64\u65f6\u5982\u540c\u201c\u95ee\u7b54\u201d\u4e00\u822c\uff0c\u8f93\u5165\u4e00\u884c\u4ee3\u7801\u540e\uff0cPython \u7acb\u523b\u6267\u884c\u8be5\u884c\u4ee3\u7801\u5e76\u7ed9\u51fa\u8fd4\u56de\u503c\u3002\u9000\u51fa\u754c\u9762\u7684\u65b9\u6cd5\u662f\u6309 Ctrl+D \u6216\u8005\u6267\u884c exit() \uff08Windows \u7528\u6237\u8bf7\u4f7f\u7528 Ctrl+Z \uff09\u3002 \u811a\u672c\uff1a\u7ecf\u5178\u8fd0\u884c\u65b9\u6cd5 python xxx.py \uff0cPython \u4f1a\u5c06\u6574\u4e2a\u811a\u672c\u6309\u7167\u8bed\u53e5\u7684\u987a\u5e8f\u4f9d\u6b21\u4ece\u5934\u5230\u5c3e\u6267\u884c\u3002 \u4ea4\u4e92\u5f0f\u7a97\u53e3\u7684\u4f8b\u5b50 \u811a\u672c\u6587\u4ef6\u7684\u4f8b\u5b50 \u5bf9\u4e8e\u5404\u79cd\u5de5\u7a0b\u9879\u76ee\u6765\u8bf4\uff0c\u6211\u4eec\u81ea\u7136\u662f\u9009\u62e9\u7528\u811a\u672c\u6587\u4ef6\u6765\u5b58\u50a8\u4ee3\u7801\uff0c\u65b9\u4fbf\u6211\u4eec\u8fdb\u884c\u6bcf\u4e00\u6b21\u8c03\u7528\u3002\u800c\u9488\u5bf9\u521d\u5b66\u8005\u6765\u8bf4\uff0c\u6211\u4eec\u5927\u53ef\u5c1d\u8bd5\u7528\u4ea4\u4e92\u5f0f\u7a97\u53e3\u6765\u5165\u95e8\u3002\u540e\u7eed\u9644\u4ee3\u7801\u7684\u90e8\u5206\uff0c\u5982\u679c\u51fa\u73b0\u4e86\u9876\u683c >>> \u7684\u60c5\u51b5\uff0c\u5219\u6697\u793a\u8fd9\u662f\u4e00\u4e2a\u4ea4\u4e92\u5f0f\u7a97\u53e3\uff0c\u6709 >>> \u7684\u662f\u4ee3\u7801\uff0c\u5176\u4ed6\u7684\u662f\u6267\u884c\u4ee3\u7801\u7684\u8f93\u51fa\u3002","title":"\u4ea4\u4e92\u5f0f\u7a97\u53e3\u4e0e\u811a\u672c\u6587\u4ef6"},{"location":"languages/python/#hello-world_1","text":"[Checkpoint Python-01] Hello World \u597d\uff0c\u73b0\u5728\u4f60\u5df2\u7ecf\u7406\u89e3\u4e86 Python \u7a0b\u5e8f\u662f\u5982\u4f55\u8fd0\u884c\u7684 \u2014\u2014 \u8bd5\u8bd5\u770b\uff01 \u8bf7\u5c1d\u8bd5\u5728\u63a7\u5236\u53f0\u4f7f\u7528\u4ea4\u4e92\u5f0f\u7a97\u53e3\u65b9\u5f0f\uff0c\u4f7f\u7a0b\u5e8f\u8f93\u51fa\u6b22\u8fce\u4fe1\u606f\u3002\u5982 \"Hello, c7w!\" \u3002 \u8bf7\u5c1d\u8bd5\u7f16\u5199\u811a\u672c\u6587\u4ef6\u4f7f\u5176\u80fd\u6b63\u786e\u8f93\u51fa 1. \u4e2d\u7684\u6b22\u8fce\u4fe1\u606f\u3002\u5e76\u601d\u8003\uff0cC++ \u4e2d\u4f60\u662f\u600e\u6837\u5b9e\u73b0\u5bf9\u4e8e\u4e0d\u540c\u7684\u7528\u6237\uff0c\u53ef\u4ee5\u5448\u73b0\u4e0d\u540c\u7684\u6b22\u8fce\u4fe1\u606f\u7684\u5462\uff1f \u63d0\u793a\uff1a \u4f60\u53ef\u4ee5\u901a\u8fc7\u4ed4\u7ec6\u89c2\u5bdf\u4e0a\u9762\u7684\u56fe\u7247\u6765\u89e3\u51b3\u95ee\u9898 \u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u8bb2\u89e3\u53d8\u91cf\u7684\u5b9a\u4e49\u4e0e\u7a0b\u5e8f\u7684\u8f93\u5165\u8f93\u51fa","title":"Hello world"},{"location":"languages/python/#_3","text":"\u4e0e C \u548c C++ \u5927\u81f4\u76f8\u540c\uff0c\u4e00\u4e9b\u9700\u8981\u7279\u522b\u6ce8\u610f\u4e4b\u5904\u6216\u6709\u533a\u522b\u4e4b\u5904 \u7528\u52a0\u7c97\u8868\u793a \u3002","title":"\u53d8\u91cf\u7c7b\u578b\u4e0e\u8fd0\u7b97"},{"location":"languages/python/#_4","text":"int \u3002\u53d8\u957f\u6574\u6570\uff0c\u9ed8\u8ba4\u662f 4 \u5b57\u8282\uff0c\u6709\u9700\u8981\u65f6\u81ea\u52a8\u589e\u957f\u3002\u6ce8\u610f \u6574\u9664\u8fd0\u7b97\u7b26\u662f // \uff0c\u800c\u666e\u901a\u9664\u6cd5 / \u4f1a\u5f97\u5230 float \u7c7b\u578b\uff08\u6ce8\u610f\u4e0e C \u7cfb\u8bed\u8a00\u533a\u5206\uff09\u3002\u9664\u4e86\u5341\u8fdb\u5236\u5916\uff0c\u8fd8\u652f\u6301\u5341\u516d\u8fdb\u5236\u3001\u516b\u8fdb\u5236\u3001\u4e8c\u8fdb\u5236\u7684\u8868\u793a\u3002 float \u30028 \u5b57\u8282\u6d6e\u70b9\u6570\uff0c\u76f8\u5f53\u4e8e C \u7cfb\u8bed\u8a00\u7684 double \u3002 bool \u3002\u5373\u4f17\u6240\u5468\u77e5\u7684 True \u4e0e False \uff0c\u6ce8\u610f \u9996\u5b57\u6bcd\u5927\u5199 \uff0c\u7528\u4f5c\u6570\u503c\u8ba1\u7b97\u65f6\u4e0e C \u7cfb\u8bed\u8a00\u4e00\u6837\u5206\u522b\u89c6\u4f5c 1 \u4e0e 0 \u3002 string \u3002\u5b57\u7b26\u4e32\u662f\u4ee5 \u5355\u5f15\u53f7 ' \u6216\u53cc\u5f15\u53f7 \" \u62ec\u8d77\u6765\u7684\u4efb\u610f\u6587\u672c\uff0c\u6bd4\u5982 'abc' \u3001 \"xyz\" \u3002 NoneType \u3002\u5373 None \u3001\u7a7a\u503c\u3002\u540e\u9762\u4f1a\u4ecb\u7ecd\u5230\u7528\u5904\uff0c\u5e38\u7528\u4e8e\u8fd4\u56de\u503c\u3001\u7279\u5224\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 >>> a = 124 >>> print ( a ) 124 >>> a = 'c7w' >>> print ( a ) c7w >>> a = None >>> print ( a ) None >>> if a : ... print ( a ) # Here a == None, do not print ... >>> a = 'c7w' >>> if a : ... print ( a ) # Here a == 'c7w', do print ... c7w Python \u662f\u4e00\u79cd\u52a8\u6001\u7c7b\u578b\u8bed\u8a00 \u6211\u4eec\u5c1d\u8bd5\u4e0e\u719f\u6089\u7684 C++ \u8bed\u8a00\u5bf9\u6bd4\uff0c\u89e3\u91ca\u9759\u6001\u7c7b\u578b\u8bed\u8a00\u4e0e\u52a8\u6001\u7c7b\u578b\u8bed\u8a00\u7684\u533a\u522b\u3002 \u9759\u6001\u7c7b\u578b\u8bed\u8a00 \u4e2d\uff0c\u6bcf\u4e2a\u53d8\u91cf\u90fd\u6709\u786e\u5b9a\u7684\u6570\u636e\u7c7b\u578b\u3002\u53d8\u91cf\u7684\u7c7b\u578b\u5728\u7f16\u8bd1\u671f\u5c31\u88ab\u5b8c\u5168\u786e\u5b9a\uff0c\u4e14\u6b64\u540e\u53d8\u91cf\u7684\u7c7b\u578b\u65e0\u6cd5\u6539\u53d8\u3002 \u4e0e\u5176\u76f8\u5bf9\u5e94\u7684\u662f \u52a8\u6001\u7c7b\u578b\u8bed\u8a00 \uff1a\u53d8\u91cf\u5e76\u6ca1\u6709\u786e\u5b9a\u7684\u6570\u636e\u7c7b\u578b\uff0c\u8fd9\u610f\u5473\u7740\u53d8\u91cf\u7684\u7c7b\u578b\u53ef\u4ee5\u5728\u8fd0\u884c\u671f\u6539\u53d8\u3002 \u6bd4\u5982\uff0c\u5728 C++ \u4e2d\uff1a 1 2 3 int c = 1 ; char m = 'x' ; std :: string a = \"\" ; \u6211\u4eec\u4e0d\u80fd\u5c1d\u8bd5\u4f7f\u7528 a = 1 \uff0c\u56e0\u4e3a\u6211\u4eec\u5df2\u7ecf\u89c4\u5b9a\u4e86 a \u662f std::string \u7c7b\u578b\u3002 \u800c\u5728 Python \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\uff1a 1 2 3 4 a = 123 a = 100.0 a = \"string\" a = [ 1 , 2 , 3 ] # List, would be explained later \u6211\u4eec\u5e76\u6ca1\u6709\u5bf9\u53d8\u91cf a \u8fdb\u884c\u8fc7\u58f0\u660e\uff0c\u800c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\uff0c\u5e76\u4e14\u5728\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u968f\u610f\u5730\u53d8\u6362\u5176\u7c7b\u578b\u3002 Reference: https://blog.csdn.net/alashan007/article/details/100742591 . Python \u662f\u4e00\u79cd\u5f3a\u7c7b\u578b\u8bed\u8a00 \u6ce8\u610f\u533a\u5206\u201c\u5f3a/\u5f31\u7c7b\u578b\u201d\u4e0e\u201c\u9759\u6001/\u52a8\u6001\u7c7b\u578b\u201d\uff0c\u8fd9\u662f\u4e00\u5bf9\u76f8\u4e92\u6b63\u4ea4\u7684\u6982\u5ff5\u3002 \u5f3a\u7c7b\u578b \u6307\u503c\u62e5\u6709\u786e\u5b9a\u7684\u7c7b\u578b\u4e14\u4e0d\u53ef\uff08\u9690\u5f0f\u5730\uff09\u76f8\u4e92\u8f6c\u6362\uff0c \u5f31\u7c7b\u578b \u5219\u6307\u4e0d\u540c\u7c7b\u578b\u7684\u503c\u4e4b\u95f4\u53ef\u4ee5\u9690\u5f0f\u8f6c\u6362\u3002 \u7c7b\u578b\u7cfb\u7edf\u7684\u5f3a/\u5f31\u5e76\u4e0d\u50cf\u52a8\u6001/\u9759\u6001\u90a3\u6837\u6709\u660e\u663e\u7684\u754c\u9650\u3002\u4e00\u822c\u8ba4\u4e3a\uff0cJavaScript\u3001Visual Basic \u7b49\u662f\u5178\u578b\u7684\u5f31\u7c7b\u578b\u8bed\u8a00\uff0c\u5141\u8bb8\u4e00\u90e8\u5206\u9690\u5f0f\u8f6c\u6362\u7684 C \u548c C++ \u4e5f\u88ab\u8ba4\u4e3a\u662f\u5f31\u7c7b\u578b\u8bed\u8a00\uff0c\u800c Java\u3001C#\u3001Python \u7b49\u5219\u662f\u5178\u578b\u7684\u5f3a\u7c7b\u578b\u8bed\u8a00\u3002 \u4f8b\u5982\uff0c\u5728 JavaScript \u4e2d\uff1a 1 2 3 4 5 6 7 var a = \"5\" ; var b = 4 ; var c = [ 3 ]; var d = null ; console . log ( a - b + c - d ); // Output: // 13 \u53ef\u4ee5\u770b\u5230\u5373\u4f7f\u8fd9\u4e9b\u53d8\u91cf\u7684\u7c7b\u578b\u5b8c\u5168\u4e0d\u540c\uff0c\u5b83\u4eec\u4e5f\u80fd\u8fdb\u884c\u8fd0\u7b97\u5e76\u4ea7\u51fa\u4e0d\u592a\u7b26\u5408\u76f4\u89c9\u7684\u7ed3\u679c\u3002 \u800c\u5728 Python \u4e2d\uff1a 1 2 3 4 5 6 7 8 9 10 a = \"5\" b = 4 print ( a + b ) // Output : // Traceback ( most recent call last ): // File \"<stdin>\" , line 1 , in < module > // TypeError : can only concatenate str ( not \"int\" ) to str print ( a + str ( b )) // Output : // 54 \u53ef\u89c1\u5c06\u4e0d\u540c\u7c7b\u578b\u7684\u503c\u76f4\u63a5\u8fdb\u884c\u8fd0\u7b97\u4f1a\u5bfc\u81f4\u9519\u8bef\uff0c\u5fc5\u987b\u5148\u5c06\u5176\u4e2d\u7684\u4e00\u4e9b\u503c\u663e\u5f0f\u8f6c\u6362\u4e3a\u6b63\u786e\u7c7b\u578b\u7684\u503c\u3002","title":"\u57fa\u672c\u53d8\u91cf\u7c7b\u578b"},{"location":"languages/python/#_5","text":"\u4e0b\u5217\u662f Python \u8bed\u8a00\u4e4b\u4e2d\u7684\u5408\u6cd5\u8fd0\u7b97\u7b26\uff0c\u5176\u542b\u4e49\u4e0e C/C++ \u8bed\u8a00\u57fa\u672c\u4e00\u81f4\u3002\u5176\u540e\u5217\u51fa\u4e86\u76f8\u5e94\u7684\u91cd\u8f7d\u51fd\u6570\uff0c\u8fd9\u4e9b\u91cd\u8f7d\u51fd\u6570\u7684\u7528\u6cd5\u5728\u540e\u7eed\u7684\u9762\u5411\u5bf9\u8c61\u7ae0\u8282\u4e4b\u4e2d\u518d\u8be6\u7ec6\u4ecb\u7ecd\u3002 \u7b97\u672f\u8fd0\u7b97\u7b26 \u52a0\u6cd5\u8fd0\u7b97\u7b26 + \uff1a __add__ \u51cf\u6cd5\u8fd0\u7b97\u7b26 - \uff1a __sub__ \u4e58\u6cd5\u8fd0\u7b97\u7b26 * \uff1a __mul__ \u771f\u9664\u8fd0\u7b97\u7b26 / \uff1a __trudiv__ \u6574\u9664\u8fd0\u7b97\u7b26 // \uff1a __floordiv__ \u6a21\u8fd0\u7b97\u7b26 % \uff1a __mod__ \u5e42\u8fd0\u7b97\u7b26 ** \uff1a __pow__ \u6bd4\u8f83\u8fd0\u7b97\u7b26 \u5c0f\u4e8e\u8fd0\u7b97\u7b26 < \uff1a __lt__ \u5c0f\u4e8e\u7b49\u4e8e\u8fd0\u7b97\u7b26 <= \uff1a __le__ \u5927\u4e8e\u8fd0\u7b97\u7b26 > \uff1a __gt__ \u5927\u4e8e\u7b49\u4e8e\u8fd0\u7b97\u7b26 >= \uff1a __ge__ \u76f8\u7b49\u8fd0\u7b97\u7b26 == \uff1a __eq__ \u4e0d\u7b49\u8fd0\u7b97\u7b26 != \uff1a __ne__ \u4f4d\u8fd0\u7b97\u7b26 \u6309\u4f4d\u4e0e\u8fd0\u7b97\u7b26 & \uff1a __and__ \u6309\u4f4d\u6216\u8fd0\u7b97\u7b26 | \uff1a __or__ \u6309\u4f4d\u5f02\u6216\u8fd0\u7b97\u7b26 ^ \uff1a __xor__ \u6309\u4f4d\u53d6\u53cd\u8fd0\u7b97\u7b26 ~ \uff1a __invert__ \u5de6\u79fb\u8fd0\u7b97\u7b26 << \uff1a __lshift__ \u53f3\u79fb\u8fd0\u7b97\u7b26 >> \uff1a __rshift__ \u903b\u8f91\u8fd0\u7b97\u7b26 \u903b\u8f91\u4e0e\u8fd0\u7b97\u7b26 and \u903b\u8f91\u6216\u8fd0\u7b97\u7b26 or \u903b\u8f91\u975e\u8fd0\u7b97\u7b26 not \u6ce8\u610f\uff0c\u5bf9\u4e8e and \u6216 or \uff0c\u5f97\u5230\u7684\u7ed3\u679c\u4e0d\u4f1a\u76f4\u63a5\u8f6c\u6362\u4e3a bool \uff0c\u800c\u662f\u80fd\u591f\u5f97\u51fa\u7ed3\u679c\u7684\u6700\u540e\u4e00\u4e2a\u53d8\u91cf\u3002 \u6ce8\u610f\uff0c\u6df7\u7528 and \u3001 or \u65f6\u9700\u8981\u8003\u8651 and \u7684\u4f18\u5148\u7ea7\u66f4\u9ad8\uff0c\u4e3a\u4e86\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u5efa\u8bae\u4e0d\u8981\u6df7\u7528\uff0c\u6216\u8005\u663e\u5f0f\u5730\u52a0\u4e0a\u5c0f\u62ec\u53f7\u3002 \u4e09\u76ee\u8fd0\u7b97\u7b26 \u4e09\u76ee\u8fd0\u7b97\u7b26 a if condition else b \u5982 abs_x = x if x >= 0 else -x \u3002 \u5176\u5b83\u8fd0\u7b97\u7b26 \u5305\u542b\u8fd0\u7b97\u7b26 in \uff0c\u7528\u4e8e\u5224\u5b9a\u67d0\u4e2a\u53d8\u91cf\u662f\u5426\u5305\u542b\u4e8e\u5bb9\u5668\u4e2d \u4e0d\u5305\u542b\u8fd0\u7b97\u7b26 not in \u540c\u5730\u5740\u8fd0\u7b97\u7b26 is \uff0c\u7528\u4e8e\u5224\u5b9a\u4e24\u4e2a\u53d8\u91cf\u7684\u5730\u5740\u662f\u5426\u76f8\u540c \u4e0d\u540c\u5730\u5740\u8fd0\u7b97\u7b26 is not [Checkpoint Python-02] Operators \u3010\u7cbe\u5ea6\u6d4b\u8bd5\u3011Python \u7684\u201c\u9ad8\u7cbe\u5ea6\u201d\u4f53\u73b0\u5728\u4f55\u5904\uff1f\u5c1d\u8bd5\u4f7f\u7528 Python \u8fdb\u884c\u4ee5\u4e0b\u8fd0\u7b97\uff0c\u5e76\u8f93\u51fa\u5176\u7ed3\u679c\u3002 a = 10^{2000} - 1 a = 10^{2000} - 1 a = 11451419198101919810114514 \\times 11451419198101919810114514 a = 11451419198101919810114514 \\times 11451419198101919810114514 a = 10^{-200} \\times 10^{-400} a = 10^{-200} \\times 10^{-400} \u3010\u63d0\u793a\u3011\u7a0b\u5e8f\u4e2d\u53ef\u4ee5\u4f7f\u7528\u79d1\u5b66\u8ba1\u6570\u6cd5\u8868\u793a\uff1a\u6211\u4eec\u53ef\u4ee5\u7528 1e-5 \u6765\u8868\u793a 10^{-5} 10^{-5} \u3002 \u8bf7\u5c1d\u8bd5\u89e3\u91ca\u4ee5\u4e0b\u8868\u8fbe\u5f0f\u7684\u8f93\u51fa\u7ed3\u679c\u3002 3 or 4 3 and 4 0 or 1 and 2 0 and 1 or 2 1 or 0 and 2","title":"\u8fd0\u7b97\u7b26"},{"location":"languages/python/#_6","text":"","title":"\u7a0b\u5e8f\u63a7\u5236\u8bed\u53e5"},{"location":"languages/python/#_7","text":"\u4ee3\u7801\u5757\uff08\u82f1\u8bed\uff1aCode block\uff09\u662f\u4e2a\u6bd4\u8f83\u91cd\u8981\u7684\u5c42\u7ea7\u6982\u5ff5\uff0c\u4f17\u6240\u5468\u77e5 Python \u6ca1\u6709\u5927\u62ec\u53f7\u8fdb\u884c\u663e\u5f0f\u5730\u5206\u5757\uff0c\u56e0\u6b64\u5b83\u5206\u5757\u9700\u8981\u7279\u522b\u7684\u624b\u6bb5\uff1a \u5192\u53f7\u914d\u5408\u7f29\u8fdb \u3002 \u7f29\u8fdb\u6709\u4e00\u5957\u5f88\u5b8c\u5907\u7684\u89c4\u5219\uff0c\u63a8\u8350\u7edf\u4e00\u4f7f\u7528 Tab \u6216\u8005\u56db\u4e2a\u7a7a\u683c\u4f5c\u4e3a\u4e00\u7ea7\uff0c\u6bcf\u5f53\u591a\u4e00\u5c42\u5c42\u7ea7\u5d4c\u5957\u65f6\u4fbf\u4f1a\u591a\u4e00\u4e2a Tab \u6216\u8005\u56db\u4e2a\u7a7a\u683c\u3002\u800c\u4e0d\u8981\u6df7\u7528 Tab \u548c\u7a7a\u683c\uff0c\u4e0d\u7136\u4f1a\u51fa\u73b0\u9519\u8bef\u3002 \u6ce8\u91ca\u7684\u5199\u6cd5\uff1a \u5355\u884c\u6ce8\u91ca\u3002\u4ee3\u7801\u884c\u4ee5 # \u5f00\u5934 \u591a\u884c\u6ce8\u91ca\u3002\u4f7f\u7528\u4e09\u4e2a\u5355\u5f15\u53f7\uff0c\u6216\u8005\u4e09\u4e2a\u53cc\u5f15\u53f7\u5c06\u5176\u8981\u6ce8\u91ca\u7684\u5185\u5bb9\u6269\u8d77\u6765\uff08\u540e\u7eed\u6211\u4eec\u4f1a\u63d0\u5230\uff0c\u8fd9\u662f\u591a\u884c\u5b57\u7b26\u4e32\u7684\u5904\u7406\u65b9\u6cd5\uff09","title":"\u987a\u5e8f\u8bed\u53e5"},{"location":"languages/python/#_8","text":"if-elif-else \u6761\u4ef6\u5224\u65ad\u7ed3\u6784\uff1a 1 2 3 4 5 6 7 age = 3 if age >= 18 : print ( 'adult' ) elif age >= 6 : print ( 'teenager' ) else : print ( 'kid' )","title":"\u6761\u4ef6\u8bed\u53e5"},{"location":"languages/python/#_9","text":"while \u5faa\u73af\uff1a 1 2 3 4 a = 1 while a <= 100 : print ( a ) a += 1 # \u6ce8\u610f\u6ca1\u6709 a++ \u7684\u5199\u6cd5 for \u5faa\u73af\uff1a 1 2 for i in range ( 0 , 100 ): # range(0, 100) = [0, 1, 2, ..., 99] print ( i ) # \u672c\u8d28\u4e0a\u662f\u5728\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e2d\u904d\u5386\u6240\u6709\u5143\u7d20","title":"\u5faa\u73af\u8bed\u53e5"},{"location":"languages/python/#_10","text":"\u5b9a\u4e49\u51fd\u6570\u7684\u5199\u6cd5\uff1a 1 2 3 4 5 def my_abs ( x ): if x >= 0 : return x else : return - x \u6ce8\u610f\u7b2c\u4e00\u884c\u56fa\u5b9a\u683c\u5f0f def <func_name>(params, ...): \uff0c\u5176\u4ed6\u548c C/C++ \u5dee\u522b\u4e0d\u5927\u3002\u4f5c\u4e3a\u52a8\u6001\u7c7b\u578b\u8bed\u8a00\uff0c\u51fd\u6570\u8fd4\u56de\u7c7b\u578b\u4e0d\u56fa\u5b9a\uff0c\u53ef\u4ee5\u6709\u591a\u4e2a return \u4ee5\u5728\u4e0d\u540c\u60c5\u51b5\u4e0b\u8fd4\u56de\u4e0d\u540c\u5185\u5bb9\uff0c\u6216\u8005\u6ca1\u6709 return \uff08\u7b49\u4ef7\u4e8e return None \uff09\u3002 [Checkpoint Python-03] Runtime logic \u8bf7\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570 fib \uff0c\u63a5\u53d7\u4e00\u4e2a\u6574\u578b\u53d8\u91cf n \u4f5c\u4e3a\u8f93\u5165\uff0c\u8fd4\u56de\u6590\u6ce2\u90a3\u5951\u6570\u5217\u7684\u7b2c n \u9879\u3002 \u8bf7\u7ed9\u51fa\u95ee\u9898\u89e3\u6cd5\u7684\u9012\u5f52\u7248\u672c\u4e0e\u8fed\u4ee3\u7248\u672c\u3002","title":"\u51fd\u6570\u7684\u5199\u6cd5"},{"location":"languages/python/#_11","text":"","title":"\u6570\u636e\u53ca\u5176\u7ec4\u7ec7\u5f62\u5f0f"},{"location":"languages/python/#_12","text":"\u4ec0\u4e48\u662f Unicode \u6700\u65e9\u53ea\u6709 127 \u4e2a\u5b57\u7b26\u88ab\u7f16\u7801\u5230\u8ba1\u7b97\u673a\u91cc\uff0c\u4e5f\u5c31\u662f\u5927\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u3001\u6570\u5b57\u548c\u4e00\u4e9b\u7b26\u53f7\uff0c\u8fd9\u4e2a\u7f16\u7801\u8868\u88ab\u79f0\u4e3a ASCII \u7f16\u7801\uff0c\u6bd4\u5982\u5927\u5199\u5b57\u6bcd A \u7684\u7f16\u7801\u662f 65 \uff0c\u5c0f\u5199\u5b57\u6bcd z \u7684\u7f16\u7801\u662f 122 \u3002 \u4f46\u662f\u8981\u5904\u7406\u4e2d\u6587\u663e\u7136\u4e00\u4e2a\u5b57\u8282\u662f\u4e0d\u591f\u7684\uff0c\u81f3\u5c11\u9700\u8981\u4e24\u4e2a\u5b57\u8282\uff0c\u800c\u4e14\u8fd8\u4e0d\u80fd\u548c ASCII \u7f16\u7801\u51b2\u7a81\u3002\u6240\u4ee5\uff0c\u4e2d\u56fd\u5236\u5b9a\u4e86 GB2312 \u7f16\u7801\uff0c\u7528\u6765\u628a\u4e2d\u6587\u7f16\u8fdb\u53bb\u3002 \u4f60\u53ef\u4ee5\u60f3\u5f97\u5230\u7684\u662f\uff0c\u5168\u4e16\u754c\u6709\u4e0a\u767e\u79cd\u8bed\u8a00\u3002\u65e5\u672c\u628a\u65e5\u6587\u7f16\u5230 Shift_JIS \u91cc\uff0c\u97e9\u56fd\u628a\u97e9\u6587\u7f16\u5230 Euc-kr \u91cc\uff0c\u5404\u56fd\u6709\u5404\u56fd\u7684\u6807\u51c6\uff0c\u5c31\u4f1a\u4e0d\u53ef\u907f\u514d\u5730\u51fa\u73b0\u51b2\u7a81\uff0c\u7ed3\u679c\u5c31\u662f\uff0c\u5728\u591a\u8bed\u8a00\u6df7\u5408\u7684\u6587\u672c\u4e2d\uff0c\u663e\u793a\u51fa\u6765\u4f1a\u6709\u4e71\u7801\u3002 \u56e0\u6b64\uff0cUnicode \u5b57\u7b26\u96c6\u5e94\u8fd0\u800c\u751f\u3002Unicode \u628a\u6240\u6709\u8bed\u8a00\u90fd\u7edf\u4e00\u5230\u4e00\u5957\u7f16\u7801\u91cc\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u518d\u6709\u4e71\u7801\u95ee\u9898\u4e86\u3002 \u65b0\u7684\u95ee\u9898\u53c8\u51fa\u73b0\u4e86\uff1a\u5982\u679c\u7edf\u4e00\u6210 Unicode \u7f16\u7801\uff0c\u4e71\u7801\u95ee\u9898\u4ece\u6b64\u6d88\u5931\u4e86\u3002\u4f46\u662f\uff0c\u5982\u679c\u4f60\u5199\u7684\u6587\u672c\u57fa\u672c\u4e0a\u5168\u90e8\u662f\u82f1\u6587\u7684\u8bdd\uff0c\u7528 Unicode \u7f16\u7801\u6bd4 ASCII \u7f16\u7801\u9700\u8981\u591a\u4e00\u500d\u7684\u5b58\u50a8\u7a7a\u95f4\uff0c\u5728\u5b58\u50a8\u548c\u4f20\u8f93\u4e0a\u5c31\u5341\u5206\u4e0d\u5212\u7b97\u3002 \u6240\u4ee5\uff0c\u672c\u7740\u8282\u7ea6\u7684\u7cbe\u795e\uff0c\u53c8\u51fa\u73b0\u4e86\u628a Unicode \u7f16\u7801\u8f6c\u5316\u4e3a\u201c\u53ef\u53d8\u957f\u7f16\u7801\u201d\u7684 UTF-8 \u7f16\u7801\u3002UTF-8 \u7f16\u7801\u628a\u4e00\u4e2a Unicode \u5b57\u7b26\u6839\u636e\u4e0d\u540c\u7684\u6570\u5b57\u5927\u5c0f\u7f16\u7801\u6210 1-6 \u4e2a\u5b57\u8282\uff0c\u5e38\u7528\u7684\u82f1\u6587\u5b57\u6bcd\u88ab\u7f16\u7801\u6210 1 \u4e2a\u5b57\u8282\uff0c\u6c49\u5b57\u901a\u5e38\u662f 3 \u4e2a\u5b57\u8282\uff0c\u53ea\u6709\u5f88\u751f\u50fb\u7684\u5b57\u7b26\u624d\u4f1a\u88ab\u7f16\u7801\u6210 4-6 \u4e2a\u5b57\u8282\u3002\u5982\u679c\u4f60\u8981\u4f20\u8f93\u7684\u6587\u672c\u5305\u542b\u5927\u91cf\u82f1\u6587\u5b57\u7b26\uff0c\u7528 UTF-8 \u7f16\u7801\u5c31\u80fd\u8282\u7701\u7a7a\u95f4\u3002 \u5355\u4e2a\u5143\u7d20\u662f Unicode \u5b57\u7b26\u3002\u5728\u6700\u65b0\u7684 Python 3 \u7248\u672c\u4e2d\uff0c\u5b57\u7b26\u4e32\u662f\u4ee5 Unicode \u7f16\u7801\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0cPython \u7684\u5b57\u7b26\u4e32\u652f\u6301\u591a\u8bed\u8a00\u3002 1 2 3 4 5 6 7 8 9 >>> a = \"\u4f60\u597d\u4e16\u754c\" >>> a [ 0 ] # \u53d6 a \u7684\u7b2c 0 \u4e2a\u5143\u7d20 '\u4f60' >>> a [ 1 ] '\u597d' >>> a [ 2 ] '\u4e16' >>> a [ 3 ] '\u754c' \u5b57\u7b26\u8f6c\u4e49\u3002\u5982\u679c\u5b57\u7b26\u4e32\u5185\u90e8\u65e2\u5305\u542b ' \u53c8\u5305\u542b \" \u600e\u4e48\u529e\uff1f\u53ef\u4ee5\u7528\u8f6c\u4e49\u5b57\u7b26 \\ \u6765\u6807\u8bc6\uff0c\u6bd4\u5982\uff1a 1 'I \\' m \\\" OK \\\" !' \u591a\u884c\u5b57\u7b26\u4e32\u3002\u5982\u679c\u5b57\u7b26\u4e32\u5185\u90e8\u6709\u5f88\u591a\u6362\u884c\uff0c\u7528 \\n \u5199\u5728\u4e00\u884c\u91cc\u4e0d\u597d\u9605\u8bfb\u3002\u4e3a\u4e86\u7b80\u5316\uff0cPython \u5141\u8bb8\u7528 '''...''' \u7684\u683c\u5f0f\u8868\u793a\u591a\u884c\u5185\u5bb9\u3002\u5f53\u7136\uff0c\u8fd9\u4e5f\u662f\u4e00\u79cd\u64b0\u5199\u4ee3\u7801\u6ce8\u91ca\u7684\u65b9\u5f0f\u3002 1 2 3 4 5 6 >>> print ( '''line1 ... line2 ... line3''' ) line1 line2 line3 \u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u3002\u4f7f\u7528 fstring \uff0c\u5176\u5728\u5f62\u5f0f\u4e0a\u662f\u4ee5 f \u6216 F \u4fee\u9970\u7b26\u4e3a\u4fee\u9970\u524d\u7f00\u7684\u5b57\u7b26\u4e32\uff08\u5373 f'xxx' \u6216 F'xxx' \uff09\uff0c\u4ee5\u5927\u62ec\u53f7 {} \u6807\u660e\u88ab\u66ff\u6362\u7684\u5b57\u6bb5\u3002 fstring \u5728\u672c\u8d28\u4e0a\u5e76\u4e0d\u662f\u5b57\u7b26\u4e32\u5e38\u91cf\uff0c\u800c\u662f\u4e00\u4e2a\u5728\u8fd0\u884c\u65f6\u8fd0\u7b97\u6c42\u503c\u7684\u8868\u8fbe\u5f0f\u3002 1 2 3 4 >>> r = 2.5 >>> s = 3.14 * r ** 2 >>> print ( f 'The area of a circle with radius { r } is { s : .2f } ' ) The area of a circle with radius 2.5 is 19.62 \u5b57\u7b26\u4e32\u8fd0\u7b97 1 2 3 4 5 6 7 >>> a = 'Hello' >>> a + a 'HelloHello' >>> a * 10 # \u91cd\u590d\u8f93\u51fa 'HelloHelloHelloHelloHelloHelloHelloHelloHelloHello' >>> a [ 1 : 3 ] # \u83b7\u53d6 index \u5728 [1, 3) \u4e2d\u7684\u5143\u7d20\u6784\u6210\u7684\u5b57\u7b26\u4e32 'el' \u5e38\u7528\u7279\u6b8a\u51fd\u6570 strip() \u53bb\u9664\u524d\u540e\u7684\u7a7a\u5b57\u7b26 1 2 3 >>> a = ' <-backspace-> ' >>> a . strip () '<-backspace->' replace(str1, str2, num) \u6279\u91cf\u66ff\u6362 1 2 3 >>> a = \"\u6211\u7231\u5317\u4eac\u5927\u5b66\uff0c\u5317\u4eac\u5927\u5b66\u662f\u4e16\u4e00\u5927\uff0c\u5317\u4eac\u5927\u5b66yyds\" >>> a . replace ( \"\u5317\u4eac\u5927\u5b66\" , \"\u6e05\u534e\u5927\u5b66\" ) '\u6211\u7231\u6e05\u534e\u5927\u5b66\uff0c\u6e05\u534e\u5927\u5b66\u662f\u4e16\u4e00\u5927\uff0c\u6e05\u534e\u5927\u5b66yyds'","title":"\u518d\u8c08\u5b57\u7b26\u4e32"},{"location":"languages/python/#_13","text":"\u5217\u8868 list Python \u5185\u7f6e\u7684\u4e00\u79cd\u6570\u636e\u7c7b\u578b\u662f\u5217\u8868\u3002 list \u662f\u4e00\u79cd\u7c7b\u4f3c\u4e8e\u5411\u91cf\u7684\u7ed3\u6784\uff0c\u53ef\u4ee5\u968f\u65f6\u6dfb\u52a0\u548c\u5220\u9664\u5176\u4e2d\u7684\u5143\u7d20\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 >>> a = [ 2 , 3 ] # Init a list >>> a . append ( 4 ) # Append elements to list >>> a [ 2 , 3 , 4 ] >>> b = [ 'a' , 'c' , 114514 ] >>> b [ 'a' , 'c' , 114514 ] >>> a + b # List \"plus\" [ 2 , 3 , 4 , 'a' , 'c' , 114514 ] >>> a [ 0 ] = \"c7w,yyds\" # Change value of elements >>> a [ 'c7w,yyds' , 3 , 4 ] >>> a [ - 1 ] # Find the last element 4 >>> a . reverse () # Reverse the list >>> a [ 4 , 3 , 'c7w,yyds' ] >>> p = [ 5 , 4 , 3 , 2 , 1 ] >>> p . sort () # Sort the list >>> p [ 1 , 2 , 3 , 4 , 5 ] \u5143\u7ec4 tuple Python \u7684\u5143\u7ec4\u4e0e\u5217\u8868\u7c7b\u4f3c\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u5143\u7ec4\u7684\u5143\u7d20\u4e0d\u80fd\u4fee\u6539\u3002\u5143\u7ec4\u4f7f\u7528\u5c0f\u62ec\u53f7\uff0c\u5217\u8868\u4f7f\u7528\u65b9\u62ec\u53f7\u3002 \u5143\u7ec4\u521b\u5efa\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u5728\u62ec\u53f7\u4e2d\u6dfb\u52a0\u5143\u7d20\uff0c\u5e76\u4f7f\u7528\u9017\u53f7\u9694\u5f00\u5373\u53ef\u3002 1 2 3 tup1 = () # \u7a7a\u5143\u7ec4 tup1 = ( 50 , ) # \u5143\u7ec4\u4e2d\u53ea\u5305\u542b\u4e00\u4e2a\u5143\u7d20\u65f6\uff0c\u9700\u8981\u5728\u5143\u7d20\u540e\u9762\u6dfb\u52a0\u9017\u53f7 tup1 [ 0 ] = 20 # Error! Elements of tuple cannot be changed. \u5b57\u5178 dict \u5b57\u5178\u662f\u53e6\u4e00\u79cd\u53ef\u53d8\u5bb9\u5668\u6a21\u578b\uff0c\u4e14\u53ef\u5b58\u50a8\u4efb\u610f\u7c7b\u578b\u5bf9\u8c61\uff0c\u91c7\u7528 \u952e\u503c\u5bf9 \u5b58\u50a8\u65b9\u5f0f\u3002 \u5b57\u5178\u7684\u6bcf\u4e2a\u952e\u503c\u5bf9\u7528\u5192\u53f7 : \u5206\u5272\uff0c\u6bcf\u4e2a\u952e\u503c\u5bf9\u4e4b\u95f4\u7528\u9017\u53f7 , \u5206\u5272\uff0c\u6574\u4e2a\u5b57\u5178\u5305\u62ec\u5728\u82b1\u62ec\u53f7 {} \u4e2d\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 >>> d = { 'name' : 'c7w' , 'gender' : 'M' , 'id' : 2020000000 } # Init the dict >>> d { 'name' : 'c7w' , 'gender' : 'M' , 'id' : 2020000000 } >>> d [ 'gender' ] # Get the value of certain key 'M' >>> d [ 'department' ] = 'CST' # New a key-value pair >>> d { 'name' : 'c7w' , 'gender' : 'M' , 'id' : 2020000000 , 'department' : 'CST' } >>> d [ 'girlfriend' ] # Would raise KeyError if key not found Traceback ( most recent call last ): File \"<stdin>\" , line 1 , in < module > KeyError : 'girlfriend' >>> d [ 'id' ] += 2 # Change value of certain key >>> d { 'name' : 'c7w' , 'gender' : 'M' , 'id' : 2020000002 , 'department' : 'CST' } \u53ef\u4ee5\u4f7f\u7528 in \u5173\u952e\u5b57\u5224\u65ad\u67d0\u4e2a\u7279\u5b9a\u7684 key \u662f\u5426\u5728\u5b57\u5178\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5185\u7f6e\u7684 dictObj.get() \u51fd\u6570\u5728 key \u4e0d\u5b58\u5728\u65f6\u63d0\u4f9b\u9ed8\u8ba4\u83b7\u53d6\u503c\u3002 \u96c6\u5408 set set \u548c dict \u7c7b\u4f3c\uff0c\u4e5f\u662f\u4e00\u7ec4 key \u7684\u96c6\u5408\uff0c\u4f46\u4e0d\u5b58\u50a8 value\u3002\u7531\u4e8e key \u4e0d\u80fd\u91cd\u590d\uff0c\u6240\u4ee5\uff0c\u5728 set \u4e2d\uff0c\u6ca1\u6709\u91cd\u590d\u7684 key\u3002 1 2 3 4 5 6 7 >>> myList = [ 1 , 1 , 1 , 2 , 3 , 3 , 3 , 3 , 4 ] >>> s = set ( myList ) >>> s { 1 , 2 , 3 , 4 } >>> s = list ( s ) >>> s [ 1 , 2 , 3 , 4 ] \u9762\u5411\u5bf9\u8c61\u8bed\u6cd5 \u5982\u679c\u91c7\u7528\u9762\u5411\u5bf9\u8c61\u5f0f\u7684\u601d\u7ef4\uff0c\u6211\u4eec\u5c06\u5177\u6709\u5171\u540c\u5c5e\u6027\u4e0e\u65b9\u6cd5\u7684\u4e00\u7ec4\u4e2a\u4f53\u62bd\u8c61\u6210\u4e00\u4e2a\u7c7b\uff0c\u5728 Python \u4e2d\u7684\u8868\u8fbe\u65b9\u5f0f\u4e3a\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 class Student ( object ): def __init__ ( self , name , score ): self . name = name self . score = score def get_grade ( self ): if self . score >= 90 : return 'A' elif self . score >= 60 : return 'B' else : return 'C' \u66f4\u591a\u6709\u5173 Python \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u77e5\u8bc6\u8bf7\u9605\u8bfb\uff1a https://www.liaoxuefeng.com/wiki/1016959663602400/1017495723838528 https://www.liaoxuefeng.com/wiki/1016959663602400/1017501628721248","title":"\u6269\u5c55\u6570\u636e\u7c7b\u578b"},{"location":"languages/python/#_14","text":"open() \u51fd\u6570 \u4f60\u5fc5\u987b\u5148\u7528 Python \u5185\u7f6e\u7684 open() \u51fd\u6570\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\uff0c\u521b\u5efa\u4e00\u4e2a file \u5bf9\u8c61\uff0c\u76f8\u5173\u7684\u65b9\u6cd5\u624d\u53ef\u4ee5\u8c03\u7528\u5b83\u8fdb\u884c\u8bfb\u5199\u3002 1 file object = open ( file_name [, access_mode ][, buffering ]) \u5176\u4e2d\u5e38\u7528\u7684\u8bfb\u53d6\u6a21\u5f0f\u6709 'r' \uff08\u53ea\u8bfb\uff09\u3001 'w+' \uff08\u6e05\u7a7a\u5e76\u91cd\u5199\uff09\u3001 'a+' \uff08\u8ffd\u52a0\u5199\u5165\uff09\u3002 read() \u51fd\u6570 read() \u65b9\u6cd5\u4ece\u4e00\u4e2a\u6253\u5f00\u7684\u6587\u4ef6\u4e2d\u8bfb\u53d6\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002 1 2 3 4 5 6 # \u6253\u5f00\u4e00\u4e2a\u6587\u4ef6 fo = open ( \"foo.txt\" , \"r\" ) str = fo . read () print ( \"\u8bfb\u53d6\u7684\u5b57\u7b26\u4e32\u662f: \" , str ) # \u5173\u95ed\u6253\u5f00\u7684\u6587\u4ef6 fo . close () write() \u51fd\u6570 write() \u65b9\u6cd5\u53ef\u5c06\u4efb\u4f55\u5b57\u7b26\u4e32\u5199\u5165\u4e00\u4e2a\u6253\u5f00\u7684\u6587\u4ef6\u3002\u9700\u8981\u91cd\u70b9\u6ce8\u610f\u7684\u662f\uff0cPython \u5b57\u7b26\u4e32\u53ef\u4ee5\u662f\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u800c\u4e0d\u662f\u4ec5\u4ec5\u662f\u6587\u5b57\u3002\u6ce8\u610f\uff0c write() \u65b9\u6cd5\u4e0d\u4f1a\u5728\u5b57\u7b26\u4e32\u7684\u7ed3\u5c3e\u6dfb\u52a0\u6362\u884c\u7b26\u5373 '\\n' \u3002 1 2 3 4 5 6 # \u6253\u5f00\u4e00\u4e2a\u6587\u4ef6 fo = open ( \"foo.txt\" , \"w\" ) fo . write ( \"www.runoob.com! \\n Very good site! \\n \" ) # \u5173\u95ed\u6253\u5f00\u7684\u6587\u4ef6 fo . close () [Checkpoint Python-04] Numbers \u3010\u6570\u636e\u7ed3\u6784\u3011 \u5206\u522b\u627e\u51fa 1 \\leq i \\leq 1000000 1 \\leq i \\leq 1000000 \u5185\u6240\u6709\u7684\u662f 2, 3, 5 2, 3, 5 \u7684\u500d\u6570\u7684\u6570\u7684\u5bf9\u5e94\u7684 list \u5c06\u8fd9\u4e9b\u5217\u8868\u8fde\u63a5\u8d77\u6765 \u5c06\u8fd9\u4e9b\u6570\u53bb\u91cd \u3010\u6587\u672c\u5199\u5165\u3011 \u5c06 1. \u4e2d\u7684\u7b54\u6848\uff0c\u8f93\u51fa\u4e3a ans.txt","title":"\u6587\u4ef6\u8bfb\u5199"},{"location":"languages/python/#_15","text":"Python \u7684\u4e00\u5927\u7279\u8272\u5728\u4e8e\u5176\u4e30\u5bcc\u7684\u8bed\u6cd5\u7cd6\uff0c\u8fd9\u4e9b\u8bed\u6cd5\u7cd6\u8ba9 Python \u4ee3\u7801\u4e0e\u5176\u4ed6\u8bed\u8a00\u76f8\u6bd4\u5c55\u73b0\u51fa\u4e86\u5b8c\u5168\u4e0d\u4e00\u6837\u7684\u98ce\u683c\uff0c\u8fd9\u4e2a\u98ce\u683c\u4e5f\u79f0\u4f5c Pythonic\u3002\u719f\u7ec3\u8fd0\u7528\u8fd9\u4e9b\u8bed\u6cd5\u7cd6\uff0c\u53ef\u4ee5\u7b80\u5316\u4ee3\u7801\u7f16\u5199\u5e76\u63d0\u9ad8\u4ee3\u7801\u53ef\u8bfb\u6027\u3002","title":"\u8bed\u6cd5\u7cd6"},{"location":"languages/python/#_16","text":"1 2 3 a = 1 b = 2 a , b = b , a # \u81ea\u52a8\u751f\u6210\u4e86 Tuple \u5e76\u4ea4\u6362\u6b21\u5e8f\uff0c\u4e0d\u9700\u4e2d\u95f4\u53d8\u91cf","title":"\u81ea\u52a8\u751f\u6210\u5143\u7ec4\u4e0e\u89e3\u5305"},{"location":"languages/python/#_17","text":"1 2 3 a = 30 if 20 <= a <= 40 : print ( a )","title":"\u591a\u91cd\u6bd4\u8f83"},{"location":"languages/python/#_18","text":"1 2 3 4 5 6 7 8 9 10 >>> a = list ( range ( 0 , 100 )) >>> a [ 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 , 13 , 14 , 15 , 16 , 17 , 18 , 19 , 20 , 21 , 22 , 23 , 24 , 25 , 26 , 27 , 28 , 29 , 30 , 31 , 32 , 33 , 34 , 35 , 36 , 37 , 38 , 39 , 40 , 41 , 42 , 43 , 44 , 45 , 46 , 47 , 48 , 49 , 50 , 51 , 52 , 53 , 54 , 55 , 56 , 57 , 58 , 59 , 60 , 61 , 62 , 63 , 64 , 65 , 66 , 67 , 68 , 69 , 70 , 71 , 72 , 73 , 74 , 75 , 76 , 77 , 78 , 79 , 80 , 81 , 82 , 83 , 84 , 85 , 86 , 87 , 88 , 89 , 90 , 91 , 92 , 93 , 94 , 95 , 96 , 97 , 98 , 99 ] >>> a [ 10 : 19 ] # [10, 19) [ 10 , 11 , 12 , 13 , 14 , 15 , 16 , 17 , 18 ] >>> a [ - 10 : - 2 ] # [-10, -2) [ 90 , 91 , 92 , 93 , 94 , 95 , 96 , 97 ] >>> a [ - 1 ] 99","title":"\u53ef\u8fed\u4ee3\u5bf9\u8c61\u7684\u5207\u7247"},{"location":"languages/python/#_19","text":"1 2 3 >>> L = [ x * x for x in range ( 100 ) if x % 10 == 0 ] >>> L [ 0 , 100 , 400 , 900 , 1600 , 2500 , 3600 , 4900 , 6400 , 8100 ]","title":"\u5217\u8868\u751f\u6210\u5f0f"},{"location":"languages/python/#_20","text":"","title":"\u5305\u7ba1\u7406"},{"location":"languages/python/#_21","text":"\u5728\u8ba1\u7b97\u673a\u7a0b\u5e8f\u7684\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u968f\u7740\u7a0b\u5e8f\u4ee3\u7801\u8d8a\u5199\u8d8a\u591a\uff0c\u5728\u4e00\u4e2a\u6587\u4ef6\u91cc\u4ee3\u7801\u5c31\u4f1a\u8d8a\u6765\u8d8a\u957f\uff0c\u8d8a\u6765\u8d8a\u4e0d\u5bb9\u6613\u7ef4\u62a4\u3002 \u4e3a\u4e86\u7f16\u5199\u53ef\u7ef4\u62a4\u7684\u4ee3\u7801\uff0c\u6211\u4eec\u628a\u5f88\u591a\u51fd\u6570\u5206\u7ec4\uff0c\u5206\u522b\u653e\u5230\u4e0d\u540c\u7684\u6587\u4ef6\u91cc\uff0c\u8fd9\u6837\uff0c\u6bcf\u4e2a\u6587\u4ef6\u5305\u542b\u7684\u4ee3\u7801\u5c31\u76f8\u5bf9\u8f83\u5c11\uff0c\u5f88\u591a\u7f16\u7a0b\u8bed\u8a00\u90fd\u91c7\u7528\u8fd9\u79cd\u7ec4\u7ec7\u4ee3\u7801\u7684\u65b9\u5f0f\u3002\u5728 Python \u4e2d\uff0c\u4e00\u4e2a .py \u6587\u4ef6\u5c31\u79f0\u4e4b\u4e3a\u4e00\u4e2a \u6a21\u5757 \uff08\u82f1\u8bed\uff1aModule\uff09\u3002 \u8bf7\u6ce8\u610f\uff0c\u6bcf\u4e00\u4e2a\u5305\u76ee\u5f55\u4e0b\u9762\u90fd\u4f1a\u6709\u4e00\u4e2a __init__.py \u7684\u6587\u4ef6\u3002\u8fd9\u4e2a\u6587\u4ef6\u662f\u5fc5\u987b\u5b58\u5728\u7684\uff0c\u5426\u5219\uff0cPython \u5c31\u628a\u8fd9\u4e2a\u76ee\u5f55\u5f53\u6210\u666e\u901a\u76ee\u5f55\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u5305\u3002 __init__.py \u53ef\u4ee5\u662f\u7a7a\u6587\u4ef6\uff0c\u4e5f\u53ef\u4ee5\u6709 Python \u4ee3\u7801\uff0c\u56e0\u4e3a __init__.py \u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u6a21\u5757\u3002\u5728\u4e0b\u5217\u6587\u4ef6\u6811\u4e2d\u5b83\u7684\u6a21\u5757\u540d\u5c31\u662f mycompany \u3002 1 2 3 4 5 6 7 8 mycompany \u251c\u2500 web \u2502 \u251c\u2500 __init__ . py \u2502 \u251c\u2500 utils . py \u2502 \u2514\u2500 www . py \u251c\u2500 __init__ . py \u251c\u2500 abc . py \u2514\u2500 utils . py","title":"\u591a\u6587\u4ef6\u9879\u76ee"},{"location":"languages/python/#_22","text":"Python \u4e3a\u6211\u4eec\u81ea\u5e26\u4e86\u5f88\u591a\u5185\u7f6e\u6a21\u5757\uff0c\u6bd4\u5982 os \u3001 datetime \u3001 re \u7b49\u7b49\uff0c\u8fd9\u91cc\u4e0d\u5728\u8bed\u8a00\u5165\u95e8\u7bc7\u4e2d\u8d58\u8ff0\u3002\u5f53\u6709\u8fd0\u7528\u7684\u9700\u6c42\u65f6\uff0c\u57f9\u517b\u9762\u5411\u641c\u7d22\u5f15\u64ce\u7684\u95ee\u9898\u89e3\u51b3\u80fd\u529b\u662f\u5f88\u91cd\u8981\u7684\u3002","title":"\u5f15\u5165\u5916\u90e8\u5305"},{"location":"languages/python/#_23","text":"\u6b63\u662f\u7531\u4e8e\u5f00\u6e90\u793e\u533a\u7684\u5b58\u5728\uff0c\u624d\u4f7f\u5f97 Python \u80fd\u591f\u5982\u6b64\u4fbf\u6377\uff0c\u5982\u6b64\u5f3a\u5927\u3002Python \u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u6781\u4e3a\u65b9\u4fbf\u7684\u5305\u7ba1\u7406\u5668 pip \uff0c\u4f1a\u5728\u5b89\u88c5\u65f6\u9644\u5e26\u3002 Linux \u7528\u6237\u53ef\u4ee5\u4f7f\u7528 sudo apt update && sudo apt install pip3 \u6765\u5b89\u88c5\u3002 \u5728 Python \u4e2d\uff0c\u5b89\u88c5\u7b2c\u4e09\u65b9\u6a21\u5757\uff0c\u662f\u901a\u8fc7\u5305\u7ba1\u7406\u5de5\u5177 pip \u5b8c\u6210\u7684\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u8981\u5b89\u88c5\u4e00\u4e2a\u7b2c\u4e09\u65b9\u5e93 Pillow\uff0c\u5176\u662f\u4e00\u4e2a\u9ad8\u7ea7\u7684\u56fe\u50cf\u5904\u7406\u5de5\u5177\u3002\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7 pip install pillow \u6765\u5b89\u88c5\u3002 \u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528 anaconda \u3001 virtualenv \u7b49\u5305\u6765\u534f\u52a9\u6211\u4eec\u8fdb\u884c\u865a\u62df\u73af\u5883\u521b\u5efa\u6216\u8005\u5305\u7ba1\u7406\uff0c\u8fd9\u91cc\u6211\u4eec\u4e0d\u518d\u5c55\u5f00\u3002","title":"\u5b89\u88c5\u5916\u90e8\u5305"},{"location":"languages/python/#_24","text":"Python \u7684\u5f3a\u5927\u4e4b\u5904\u5728\u4e8e\u5176\u4e30\u5bcc\u7684\u7b2c\u4e09\u65b9\u5e93\uff0c\u4e3a\u4e86\u8fdb\u4e00\u6b65\u5b66\u4e60\u3001\u8fd0\u7528 Python \u8bed\u8a00\uff0c\u6211\u4eec\u63a8\u8350\u8bfb\u8005\u81ea\u884c\u641c\u7d22\u4e0b\u5217\u7b2c\u4e09\u65b9\u5e93\u7684\u4ecb\u7ecd\u3001\u6587\u6863\uff0c\u5e76\u5c1d\u8bd5\u5728\u81ea\u5df1\u7684\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u5b83\u4eec\u3002\u6709\u4f59\u529b\u7684\u8bfb\u8005\u751a\u81f3\u53ef\u4ee5\u53bb\u9605\u8bfb\u8fd9\u4e9b\u7b2c\u4e09\u65b9\u5e93\u7684\u6e90\u4ee3\u7801\u3002","title":"\u62d3\u5c55\u5b66\u4e60"},{"location":"languages/python/#_25","text":"Pillow","title":"\u56fe\u50cf\u5904\u7406"},{"location":"languages/python/#_26","text":"Django Flask","title":"\u7f51\u7ad9\u5f00\u53d1"},{"location":"languages/python/#_27","text":"requests beautifulsoup4","title":"\u6570\u636e\u6536\u96c6"},{"location":"languages/python/#_28","text":"Numpy Matplotlib pandas","title":"\u7edf\u8ba1\u5206\u6790"},{"location":"languages/python/#_29","text":"Tensorflow Pytorch","title":"\u673a\u5668\u5b66\u4e60"},{"location":"languages/python/#_30","text":"2020 \u6691\u57f9\u8bb2\u4e49 by rls Python Docs https://www.python.org/doc/ Runoob https://www.runoob.com/python3/python3-tutorial.html \u5ed6\u96ea\u5cf0 https://www.liaoxuefeng.com/wiki/1016959663602400/","title":"\u8d44\u6e90\u94fe\u63a5"},{"location":"languages/python/crawler/","text":"Python \u722c\u866b \u00b6 \u524d\u7f6e\u77e5\u8bc6 \u00b6 \u61c2\u5f97 Python \u57fa\u672c\u8bed\u6cd5\uff0c\u77e5\u9053\u5982\u4f55\u4f7f\u7528 Python \u7b2c\u4e09\u65b9\u5e93 \u77e5\u9053 HTML \u7684\u57fa\u672c\u7ed3\u6784 \u4f1a\u4f7f\u7528 Chrome \u7b49\u73b0\u4ee3\u6d4f\u89c8\u5668\u7684\u5f00\u53d1\u8005\u5de5\u5177\u6765\u67e5\u770b\u7f51\u9875\u6e90\u4ee3\u7801\u548c\u7f51\u7edc\u8bf7\u6c42\u4fe1\u606f \u73af\u5883\u914d\u7f6e \u00b6 \u9700\u8981\u7528\u5230\u4ee5\u4e0b\u4e00\u4e9b\u5e93\uff1a IPython\uff1a\u7406\u8bba\u4e0a\u6ca1\u6709\u4e5f\u884c\uff0c\u4f46\u662f\u4f7f\u7528 IPython \u4f1a\u63d0\u9ad8\u5927\u5bb6\u6d4b\u8bd5\u7684\u6548\u7387 requests\uff1a\u6211\u88c5 Python \u7684\u65f6\u5019\u597d\u50cf\u81ea\u5e26\u4e86\u4f46\u662f\u8fd9\u4f3c\u4e4e\u4e0d\u662f\u6807\u51c6\u5e93 BeautifulSoup4\uff1a\u89e3\u6790 HTML \u7684\u5e93\uff0c\u6ce8\u610f \u4e0d\u8981 \u5c1d\u8bd5\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u6765\u5904\u7406 HTML\uff0c\u867d\u7136\u5c0f\u5b66\u671f\u53ef\u80fd\u4f1a\u8fd9\u6837\u505a\uff0c\u4f46\u662f\u6b63\u5219\u8868\u8fbe\u5f0f\u5e76\u4e0d\u9002\u4e8e\u89e3\u51b3 HTML \u8fd9\u79cd\u683c\u5f0f fake_useragent\uff1a\u751f\u6210 User-Agent \u7684\u5e93 \u5173\u4e8e fake_useragent \u8fd9\u4e2a\u5e93\u4f3c\u4e4e\u4f1a\u5c1d\u8bd5\u81ea\u52a8\u83b7\u53d6\u67d0\u4e9b\u5728\u7ebf\u8d44\u6e90\uff0c\u4f46\u662f\u597d\u50cf\u9700\u8981\u4ee3\u7406\uff0c\u5982\u679c\u4e0d\u80fd\u5f81\u7a0b\u8fd0\u884c\uff0c\u8bf7\u4e0b\u8f7d fake_useragent.json \u653e\u5728\u4e00\u4e2a\u4f60\u80fd\u627e\u5230\u7684\u5730\u65b9\uff0c\u6700\u597d\u653e\u5728\u6211\u4eec\u8981\u4f7f\u7528\u7684\u9879\u76ee\u6587\u4ef6\u7684\u76ee\u5f55\u4e0b \u5728\u4f7f\u7528\u65f6\u5e94\u5f53\u6dfb\u52a0\u53c2\u6570\u6307\u5b9a\u8d44\u6e90\u5730\u5740\u5982\u4e0b\uff1a 1 ua = UserAgent ( path = './fake_useragent.json' ) \u7f51\u7edc\u8bf7\u6c42 \u00b6 \u7ec8\u6781\u54f2\u5b66\u4e09\u5927\u95ee\uff08\u670d\u52a1\u5668\u89c6\u89d2\u4e0b\u7684\u7f51\u7edc\u8bf7\u6c42\uff09 \u722c\u866b\u4e3a\u4e86\uff08\u81ea\u52a8\u5316\u5730\u3001\u5e38\u5e38\u8fd8\u9700\u8981\u662f\u9ad8\u901f\u5730\uff09\u83b7\u53d6\u670d\u52a1\u5668\u8d44\u6e90\uff0c\u9996\u5148\u5e94\u5f53\u4e86\u89e3\u5411\u670d\u52a1\u5668\u53d1\u9001\u8bf7\u6c42\u65f6\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u901a\u5e38\u6765\u8bf4\u4e00\u6b21\u7f51\u7edc\u8bf7\u6c42\u7684\u4e3b\u8981\u5185\u5bb9\u5305\u62ec\uff1a \u4f60\u662f\u8c01\uff1aUser-Agent | Cookies \u4f60\u4ece\u54ea\u91cc\u6765\uff1aIP \u4f60\u6765\u8fd9\u91cc\u5e72\u4ec0\u4e48\uff1aMethod \u4e0e Parameter \uff08\u5982\u679c\u662f POST \u8bf7\u6c42\u7684\u8bdd\u8fd8\u4f1a\u6709\u66f4\u591a\u5185\u5bb9\uff0c\u4f46\u662f\u4f5c\u4e3a\u722c\u866b\u7684\u8bdd\u53ef\u4ee5\u7565\u5fae\u7b80\u5316\uff09 \u5728\u8fd9\u4e00\u8fc7\u7a0b\u4e2d\u670d\u52a1\u5668\u53ef\u80fd\u9762\u4e34\u4e00\u4e9b\u653b\u51fb\uff08\u722c\u866b\u53ef\u80fd\u65e0\u610f\u95f4\u5bfc\u81f4\u8fd9\u6837\u7684\u95ee\u9898\uff09\uff1a DoS (Denial of Service) attack\uff1a\u62d2\u7edd\u670d\u52a1\u653b\u51fb\uff0c\u901a\u8fc7\u6784\u9020\u5927\u91cf\u7684\uff08\u5c24\u5176\u662f\u7e41\u91cd\u7684\uff0c\u4e5f\u5c31\u662f CC \u653b\u51fb\uff09\u8bf7\u6c42\u4f7f\u5f97\u670d\u52a1\u5668\u201c\u5fd9\u4e0d\u8fc7\u6765\u201d\uff0c\u8ba9\u670d\u52a1\u5668\u65e0\u6cd5\u6b63\u5e38\u670d\u52a1\u3002 DDoS (Distributed Denial of Service) attack\uff1a\u5206\u5e03\u5f0f\u62d2\u7edd\u670d\u52a1\u653b\u51fb\uff0c\u5728 DoS \u653b\u51fb\u7684\u57fa\u7840\u4e0a\u6539\u4e3a\u591a\u4e2a\u5ba2\u6237\u7aef\uff08 \u8089\u9e21 \u7528\u6237\uff09\u540c\u65f6\u5bf9\u76ee\u6807\u7f51\u7ad9\u53d1\u8d77\u5927\u91cf\u8bf7\u6c42\u3002 \u5c3d\u7ba1\u8c08\u8bba\u653b\u51fb\u6709\u70b9\u9065\u8fdc\uff0c\u4f46\u662f\u4e0d\u59a8\u8003\u8651\u4ee5\u4e0b\u4e24\u4e2a\u60c5\u666f\uff1a \u5f53\u4f60\u51c6\u65f6\u5230\u8fbe\u67e5\u8be2\u9ad8\u8003\u6210\u7ee9\u65f6 \u5f53\u4f60\u53cc\u5341\u4e00\u5348\u591c\u5341\u4e8c\u70b9\u4e0b\u5355\u65f6 \u6240\u4ee5\u5199\u722c\u866b\u65f6\u5e94\u8be5\u5168\u529b\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\uff01 \u7f51\u7edc\u6293\u5305\u57fa\u672c\u529f \u4e00\u7ebf\u4e3b\u64ad\u7684\u540d\u8a00 \u6d4f\u89c8\u7f51\u9875\u7684\u672c\u8d28\u662f\u57fa\u4e8e HTTP \u534f\u8bae\u7684\u4e00\u6b21\u6216\u8005\u591a\u6b21\u7f51\u7edc\u8bf7\u6c42\uff0c\u8fd9\u4e9b\u8bf7\u6c42\u7528\u6237\u662f\u53ef\u4ee5\u76f4\u63a5\u67e5\u770b\u7684\uff0c\u6bd4\u5982\u6309\u4e0b F12 \u518d\u770b\u770b\u201c\u7f51\u7edc\u201d\u3002 \u7f51\u7edc\u6293\u5305\u901a\u5e38\u6709\u5982\u4e0b\u7528\u9014\uff1a \u67e5\u770b\u771f\u6b63\u7684\u6570\u636e\u6765\u6e90\uff08\u5e38\u4e3a XHR\uff09 \u67e5\u770b\u4e0b\u8f7d\u89c6\u9891\u7b49\u6570\u636e \u6a21\u62df\u8bf7\u6c42\u5b8c\u6210\u767b\u5f55 \u6d4b\u8bd5\u7f51\u7ad9\u5b89\u5168\u6027 \u5176\u5b9e\u5bf9\u4e8e\u5199\u722c\u866b\u6765\u8bf4\uff0c\u4e3b\u8981\u7528\u9014\u53ea\u6709\u4e00\u4e2a\uff0c\u5c31\u662f\u627e\u5230\u6211\u4eec\u9700\u8981\u7684\u6570\u636e\u7684\u771f\u6b63\u6765\u6e90\uff08\u5f53\u7136\u5982\u679c\u4f7f\u7528 selenium \u7b49\u65b9\u6cd5\u52a0\u8f7d\u7f51\u9875\u5185\u5bb9\u53ef\u4ee5\u4e0d\u7528\u5206\u6790\u6570\u636e\u6765\u6e90\uff0c\u4f46\u662f\u8fd9\u6837\u663e\u7136\u6d88\u8017\u66f4\u591a\u8d44\u6e90\u4e14\u6162\uff09\uff0c\u7a0d\u540e\u6211\u4eec\u5c06\u4f1a\u770b\u5230\u8fd9\u4e00\u70b9\u3002 \u722c\u866b\u521d\u6b65 \u00b6 \u4f55\u4e3a\u722c & \u4e3a\u4f55\u722c \u8fd9\u4e2a\u60f3\u5fc5\u5927\u5bb6\u90fd\u662f\u61c2\u7684\uff0c\u5199\u722c\u866b\u5f52\u6839\u7ed3\u5e95\u8fd8\u662f\u4e3a\u4e86\u66ff\u4ee3\u4eba\u5de5\u8fdb\u884c\u91cd\u590d\u5927\u91cf\u7684\u64cd\u4f5c\uff0c\u5982\u679c\u975e\u5e38\u4e0d\u719f\u6089\u722c\u866b\u8fd9\u79cd\u7a0b\u5e8f\u53ef\u4ee5\u53bb\u770b rls \u7684\u8bfe\u3002 \u5b70\u53ef\u722c \u8fd9\u90e8\u5206\u662f\u6211\u4eec\u6700\u91cd\u8981\u7684\u80cc\u666f\u77e5\u8bc6\uff0c\u722c\u7f51\u7ad9\u4e4b\u524d\u8bf7\u52a1\u5fc5\u5173\u6ce8 robots.txt \uff08\u5373\u57df\u540d\u540e\u63a5 /robots.txt \uff0c\u8981\u6ce8\u610f\u5b50\u57df\u540d\u7684\u8981\u6c42\u672a\u5fc5\u548c\u4e3b\u57df\u540d\u4e00\u6837\uff0c\u5207\u4e0d\u53ef\u770b\u5230\u4e3b\u57df\u540d\u53ef\u4ee5\u722c\u5c31\u968f\u4fbf\u641e\uff09\uff0c\u8fd9\u662f\u7f51\u7ad9\u4e0e\u722c\u866b\u4e4b\u95f4\u7684\u201c\u541b\u5b50\u534f\u8bae\u201d\uff0c\u6b64\u5904\u89c4\u5b9a\u4e86\u4ec0\u4e48\u53ef\u722c\u4ec0\u4e48\u4e0d\u53ef\u722c\uff0c\u4e0b\u9762\u662f\u51e0\u4e2a\u4f8b\u5b50\u3002 \u767e\u5ea6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 User-agent: Baiduspider Disallow: /baidu Disallow: /s? Disallow: /ulink? Disallow: /link? Disallow: /home/news/data/ Disallow: /bh User-agent: Googlebot Disallow: /baidu Disallow: /s? Disallow: /shifen/ Disallow: /homepage/ Disallow: /cpro Disallow: /ulink? Disallow: /link? Disallow: /home/news/data/ Disallow: /bh # \u4e2d\u95f4\u7565\u53bb\u82e5\u5e72\u5185\u5bb9 User-agent: * Disallow: / \u89e3\u8bfb\uff1a\u9664\u4e86\u6211\u94a6\u70b9\u7684\u722c\u866b\u4e4b\u5916\uff0c\u5176\u4ed6\u62d2\u4e0d\u63a5\u5f85\u3002 \u6dd8\u5b9d / \u5929\u732b 1 2 User-agent: * Disallow: / \u89e3\u8bfb\uff1a\u83ab\u6328\u8001\u5b50\u3002 \u864e\u6251 \u6ce8\u610f\u8fd9\u91cc\u5c31\u51fa\u73b0\u4e86\u6211\u4eec\u4e4b\u524d\u63d0\u5230\u8fc7\u7684\u95ee\u9898\uff0c https://www.hupu.com/robots.txt \u5982\u4e0b\uff1a 1 2 3 4 5 6 7 User-agent: * Allow: / Sitemap: https://bbs.hupu.com/sitemap_index.xml Sitemap: https://bbs.hupu.com/sitemap/sitemap_boards.xml Sitemap: https://voice.hupu.com/sitemap_index.xml Sitemap: https://nba.hupu.com/players/index.xml \u89e3\u8bfb\uff1a\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u4efb\u610f\u722c\uff0c\u8fd8\u63d0\u4f9b\u4e86\u7ad9\u70b9\u5730\u56fe\u4f9b\u53c2\u8003\u3002 \u4f46\u662f https://bbs.hupu.com/robots.txt \u5219\u662f\u8fd9\u6837\u7684\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 User-agent: * Request-rate: 50/1 Disallow: /api/ Disallow: /ajax/ Disallow: /profile.php?* Disallow: /hack/ Disallow: /template/ Disallow: /attachment/ Disallow: /gearfeedback/ Disallow: /*_*.html$ Sitemap: https://bbs.hupu.com/sitemap_index.xml Sitemap: https://bbs.hupu.com/sitemap/sitemap_boards.xml \u89e3\u8bfb\uff1a\u6cd5\u65e0\u7981\u6b62\u7686\u53ef\u4e3a\uff0c\u4f46\u662f\u901f\u5ea6\u4e0d\u8d85\u8fc7 50 \u6b21\u6bcf\u79d2\uff08\u6ce8\u610f\u4e0d\u540c\u7684\u722c\u866b\u5176\u5b9e\u5bf9\u4e8e\u4e00\u6b21\u722c\u53d6\u7684\u7406\u89e3\u662f\u4e0d\u540c\u7684\uff0c\u4f46\u662f\u8fd9\u662f\u541b\u5b50\u534f\u8bae\uff0c\u6240\u4ee5\u5bf9\u4e8e\u6211\u4eec\u81ea\u5df1\u5199\u7684\u722c\u866b\u4e5f\u6ca1\u6709\u5fc5\u8981\u90a3\u4e48\u7ea0\u7ed3\uff0c\u5982\u679c\u8981\u4ed4\u7ec6\u8003\u8651\u7684\u8bdd\uff0c\u53ef\u4ee5\u7814\u7a76\u4e00\u4e0b\u4e0d\u540c\u641c\u7d22\u5f15\u64ce\u7684\u722c\u866b\u5bf9\u4e8e\u8fd9\u4e00\u95ee\u9898\u7684\u7406\u89e3\uff0c\u53ef\u4ee5\u53c2\u8003 \u77e5\u4e4e\u7684 robots.txt \u4ee5\u53ca \u76f8\u5173\u63d0\u95ee \uff09\u3002 \u867d\u7136\u864e\u6251\u793e\u533a\u6bd4\u4e3b\u7ad9\u591a\u4e86\u4e00\u4e9b\u9650\u5236\uff0c\u4f46\u662f\u6211\u4eec\u770b\u5230\u8fd9\u4ecd\u7136\u662f\u9650\u5236\u6700\u5c11\u7684\uff08\u867d\u7136\u9650\u5236 *_*.html$ \u4f46\u662f\u65b0\u95fb\u9875\u5e76\u4e0d\u662f\u8fd9\u6837\uff0c\u800c\u4e14 50 \u6b21\u6bcf\u79d2\u5176\u5b9e\u4e5f\u4e0d\u5c11\uff09\uff0c\u52a0\u4e0a \u4f17\u6240\u5468\u77e5\u7684\u539f\u56e0 \u864e\u6251\u524d\u4e24\u5929\u5f88\u51fa\u5708\uff08\u81f3\u5c11\u5728\u6211\u5199\u6587\u6863\u7684\u65f6\u5019\u662f\u8fd9\u6837\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u4e3b\u8981\u722c\u53d6\u864e\u6251\u7684\u4f53\u80b2\u65b0\u95fb\u4f5c\u4e3a\u6f14\u793a\u3002 \u5982\u4f55\u722c \u7406\u60f3\u4e2d\u7684\u9ad8\u6027\u80fd\u722c\u866b\u67b6\u6784\uff1a \u672c\u6587\u7528\u7684\u5165\u95e8\u7248\u722c\u866b\u67b6\u6784\uff1a \u722c\u866b\u5b9e\u6218 \u00b6 \u81ea\u5b66\u5185\u5bb9 \u73af\u5883\u914d\u7f6e\u4e2d\u5199\u4e86\u6700\u91cd\u8981\u7684\u5de5\u5177\uff0c\u4e0b\u9762\u8fd8\u6709\u4e9b\u53ef\u80fd\u4f1a\u7528\u5230\u7684\u81ea\u5b66\u5185\u5bb9\uff1a js2py\uff1a\u5728 Python \u4e2d\u6267\u884c JavaScript \u811a\u672c pyppeteer\uff1a\u901a\u8fc7 headless \u7684\u65b9\u6cd5\u76f4\u63a5\u6e32\u67d3\u7f51\u9875 selenium\uff1a\u63a7\u5236\u6d4f\u89c8\u5668\u8fdb\u884c\u81ea\u52a8\u5316\u6d4b\u8bd5\u7684\u5de5\u5177 requests.Session\uff1a\u4fdd\u5b58\u4f1a\u8bdd\uff0c\u9002\u7528\u4e8e\u9700\u8981 Cookie \u7684\u573a\u666f requests \u6dfb\u52a0\u4ee3\u7406 IP scrapy\uff1a\u771f\u6b63\u7684\u9ad8\u6027\u80fd\u722c\u866b\u6846\u67b6 \u722c\u53d6\u6f14\u793a \u4ee5\u722c\u53d6 \u864e\u6251\u67d0\u677f\u5757\u65b0\u95fb\u5217\u8868 \u4e3a\u4f8b\uff1a \u5f15\u5165\u5fc5\u8981\u7684\u5e93 1 2 3 4 5 6 from requests import get , post from bs4 import BeautifulSoup from fake_useragent import UserAgent from urllib.request import urljoin from json import dump from time import sleep # \u5982\u679c\u7f51\u7ad9\u8981\u6c42\u4ee5\u5f88\u4f4e\u7684\u9891\u7387\u722c\uff0c\u90a3\u4e48\u5927\u6982\u7387\u4f1a\u9700\u8981 sleep Cookie? \u5982\u679c\u4f60\u70b9\u5f00\u4e86\u524d\u9762\u90a3\u4e2a\u94fe\u63a5\uff08\u800c\u4e14\u4f60\u6700\u8fd1\u6ca1\u6709\u770b\u8fc7\u864e\u6251\u7684\u8bdd\uff09\uff0c\u4f60\u5927\u6982\u7387\u4f1a\u53d1\u73b0\u62a5\u4e86\u4e2a\u9519\uff0c\u4e0d\u8981\u6000\u7591\uff0c\u6211\u6ca1\u6709\u5199\u9519 URL\uff0c\u9020\u6210\u8fd9\u6837\u95ee\u9898\u7684\u539f\u56e0\u5927\u6982\u662f\u864e\u6251\u5728\u5207\u6362\u65b0\u65e7\u7248\u9762\uff0c\u76f4\u63a5\u70b9\u8fdb\u53bb\u4f1a\u83ab\u540d\u88ab\u8f6c\u5165\u65e7\u7248\u7684\u9875\u9762\uff0c\u800c\u65e7\u7248\u9875\u9762\u7684 URL \u5927\u6982\u4e0d\u662f\u8fd9\u6837\u5199\u7684\u3002 \u90a3\u4e48\u8fd9\u5c31\u8981\u63d0\u5230\u4e4b\u524d\u7684\u4e00\u4e2a\u95ee\u9898\uff0c\u4e5f\u5c31\u662f\u201c\u4f60\u662f\u8c01\u201d\u7684\u95ee\u9898\uff0c\u864e\u6251\u4f1a\u6839\u636e Cookie \u6765\u5224\u65ad\u4f60\u662f\u5426\u5df2\u7ecf\u8fdb\u5165\u4e86\u65b0\u7248\u9875\u9762\uff0c\u800c\u8fd9\u4e2a Cookie \u663e\u7136\u662f\u5728\u9996\u9875\u88ab\u8bbe\u7f6e\u7684\uff0c\u56e0\u6b64\u76f4\u63a5\u8bbf\u95ee\u8fd9\u4e00\u677f\u5757\u662f\u884c\u4e0d\u901a\u7684\u3002 \u4ece\u6d4f\u89c8\u5668\u4e2d\u83b7\u53d6 Cookie \u4fe1\u606f\u5982\u4e0b\uff08\u56e0\u4e3a\u5185\u5bb9\u592a\u957f\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u4fdd\u5b58\u5728 Python \u53d8\u91cf\u4e2d\uff09\uff1a 1 Cookie = 'smidV2=20210720104859f6c99288e1bccb891e9ca9ce9d7bb6fe0055f24f4e677eec0; csrfToken=iGeSrk669wqQBcY5fKk2Diue; sensorsdata2015jssdkcross=%7B %22d istinct_id %22% 3A %2217a c1d102691c24-05465c49cc1a3d8-3e62684b-1296000-17ac1d1026a2685 %22% 2C %22% 24device_id %22% 3A %2217a c1d102691c24-05465c49cc1a3d8-3e62684b-1296000-17ac1d1026a2685 %22% 2C%22props %22% 3A%7B %22% 24latest_referrer %22% 3A %22% 22%2C %22% 24latest_traffic_source_type %22% 3A %22% E7%9B%B4 %E 6 %8E %A5 %E 6%B5 %81% E9 %87% 8F %22% 2C %22% 24latest_search_keyword %22% 3A %22% E6%9C%AA %E 5 %8F%96% E5 %88% B0 %E 5 %80% BC_ %E 7%9B%B4 %E 6 %8E %A5 %E 6 %89% 93 %E 5%BC %80% 22%7D%7D; acw_tc=2f624a6816268527794733860e071fa5c73b1f702b456ad494e04ecfb5dc53; bbs_2020=1' \u83b7\u53d6\u5e76\u89e3\u6790\u65b0\u95fb\u5217\u8868\u9875 \u6211\u4eec\u6ce8\u610f\u5230\uff0c\u864e\u6251\u7684\u65b0\u95fb\u5217\u8868\u9875 URL \u5927\u81f4\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a 1 https://bbs.hupu.com/502-{PAGE} \u6ce8\u610f\u5230\u5176\u4e2d\u6bcf\u4e00\u9879\u7684\u683c\u5f0f\u5927\u81f4\u5982\u4e0b\uff1a 1 < a href = \"/44314069.html\" target = \"_blank\" class = \"p-title\" > [\u6d41\u8a00\u677f]\u5b57\u6bcd\u54e5\uff1a\u8981\u76f8\u4fe1\uff01\u6211\u66fe\u7ecf\u4e0a\u987f\u4e0d\u63a5\u4e0b\u987f\uff0c\u5982\u4eca\u6211\u662f\u51a0\u519b </ a > \u90a3\u4e48\u5047\u5982\u6211\u4eec\u83b7\u53d6\u524d 10 \u9875\u7684\u65b0\u95fb\u8be6\u60c5\u94fe\u63a5\uff1a 1 2 3 4 5 6 7 8 9 10 url = 'https://bbs.hupu.com/' news_list = [] for i in range ( 1 , 11 ): response = get ( f 'https://bbs.hupu.com/502- { i } ' , headers = { 'Cookie' : Cookie }) soup = BeautifulSoup ( response . content . decode ( 'utf-8' ), 'lxml' ) news = soup . find_all ( 'a' , class_ = 'p-title' ) for n in news : news_list . append ( urljoin ( url , n . get ( 'href' ))) sleep ( 0.02 ) # \u6309\u7167 robots.txt \u8981\u6c42\u4f11\u606f 1/50 \u79d2 \u83b7\u53d6\u5e76\u89e3\u6790\u65b0\u95fb\u8be6\u60c5 \u66f4\u597d\u7684\u505a\u6cd5\u662f\u8fd9\u91cc\u5199\u4e00\u4e2a\u7c7b\uff0c\u4f46\u662f\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7c7b\u5199\u5165\u6587\u4ef6\u53c8\u6d89\u53ca\u5230\u8bb8\u591a\u95ee\u9898\uff0c\u6240\u4ee5\u6211\u4eec\u7b80\u5355\u7684\u7528\u5b57\u5178\u8868\u793a\uff0c\u7c7b\u4f3c\u7684\uff0c\u6211\u4eec\u83b7\u53d6\u5e76\u89e3\u6790\u7f51\u9875\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 news_content = [] for news_url in news_list : response = get ( news_url , headers = { 'Cookie' : Cookie }) soup = BeautifulSoup ( response . content . decode ( 'utf-8' ), 'lxml' ) title = soup . find ( 'h1' , class_ = 'name' ) . text . strip () content = soup . find ( 'div' , class_ = 'thread-content-detail' ) . text . strip () . replace ( ' \\r ' , ' \\n ' ) news_content . append ({ 'url' : news_url , 'title' : title , 'content' : content }) sleep ( 0.02 ) \u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u83b7\u53d6\u7684\u5185\u5bb9\u4fdd\u5b58\u4e3a JSON\uff1a 1 dump ( news_content , open ( './hupu.json' , 'w' ), ensure_ascii = False ) \u5173\u4e8e\u53cd\u722c \u63a5\u4e0b\u6765\u6211\u4eec\u6f14\u793a\u4e00\u4e2a\u7cdf\u7cd5\u7684\u53cd\u722c\u793a\u4f8b\uff0c \u5317\u4eac\u536b\u5065\u59d4 \u7f51\u7ad9\u3002 \u5982\u679c\u6211\u4eec\u76f4\u63a5\u6267\u884c\uff1a 1 response = get ( 'http://wjw.beijing.gov.cn/' ) \u6211\u4eec\u4f1a\u53d1\u73b0 response.text \u5f88\u4e0d\u5bf9\u52b2\uff0c\u800c\u4e14\u5176\u4e2d\u6bd4\u8f83\u660e\u663e\u80fd\u770b\u5230\u7684\u662f\uff08\u5f53\u7136\u6211\u7ecf\u8fc7\u4e86\u683c\u5f0f\u5316\uff09\uff1a 1 2 3 4 5 < div id = 'notice-jiasule' > < p > \u5f53\u524d\u7f51\u5740\uff1a < %- url %> </ p > < p > \u5ba2\u6237\u7aef\u7279\u5f81\uff1a < %- user_agent %> </ p > < p > \u62e6\u622a\u65f6\u95f4\uff1a < %- now %> &nbsp;&nbsp; \u672c\u6b21\u4e8b\u4ef6ID &nbsp; < %- rule_id %> </ p > </ div > \u8fd8\u6709\u4e0b\u9762\u7684\uff1a 1 2 3 4 5 6 7 8 9 10 var content = _ . template ( document . getElementById ( 'content_tpl' ). innerHTML )({ error_403 : '' || '\u5f53\u524d\u8bbf\u95ee\u7591\u4f3c\u9ed1\u5ba2\u653b\u51fb\uff0c\u5df2\u88ab\u7f51\u7ad9\u7ba1\u7406\u5458\u8bbe\u7f6e\u4e3a\u62e6\u622a' , url : document . URL . replace ( /\\</g , \"%3C\" ). replace ( /\\>/g , \"%3E\" ), user_agent : navigator . userAgent , now : new Date ( new Date () - - 8 * 3600000 ). toISOString (). substr ( 0 , 19 ). replace ( 'T' , ' ' ), rule_id : parseInt ( '[80001]' . replace ( /\\[|\\]/g , '' )) || '' , from : encodeURIComponent ( document . referrer . substr ( 0 , 1024 )), client_ip : '59.66.16.88' , ref : encodeURIComponent ( document . URL . substr ( 0 , 1024 )) }); \u4e0d\u96be\u53d1\u73b0\u8fd9\u4e2a\u7f51\u7ad9\u6240\u6258\u7ba1\u7684\u201c\u521b\u5b87\u4e91\u9632\u5fa1\u201d\u5c4f\u853d\u4e86\u6211\u4eec\u7684\u8bbf\u95ee\uff0c\u800c\u5f15\u8d77\u8fd9\u4e00\u95ee\u9898\u7684\u539f\u56e0\uff0c\u6211\u4eec\u53ef\u4ee5\u67e5\u770b\uff1a 1 2 >>> response . request . headers { 'User-Agent' : 'python-requests/2.25.1' , 'Accept-Encoding' : 'gzip, deflate' , 'Accept' : '*/*' , 'Connection' : 'keep-alive' } \u5176\u4e2d\u663e\u7136\u6709\u4e00\u6761 'User-Agent': 'python-requests/2.25.1' \uff0c\u4e0d\u6253\u81ea\u62db\u7684\u722c\u866b\u884c\u4e3a\uff0c\u88ab\u5c4f\u853d\u4e5f\u5e76\u4e0d\u5947\u602a\uff08\u9898\u5916\u8bdd\uff0c\u8fd9\u4e2a\u7f51\u7ad9\u5e76\u6ca1\u6709\u8bbe\u7f6e robots.txt \uff0c\u56e0\u6b64\u53cc\u65b9\u90fd\u5f88\u96be\u8bf4\u8c01\u5bf9\u8c01\u9519\uff09\u3002\u597d\u5728\u73b0\u5728\u8fd9\u4e2a\u7f51\u7ad9\u4e0d\u50cf\u53bb\u5e74\u4e00\u6837\u4f1a\u5c01 IP \u5730\u5740\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5148\u6f14\u793a\u9519\u8bef\u793a\u4f8b\u3002 \u6211\u4eec\u5f53\u7136\u53ef\u4ee5\u6a21\u4eff\u524d\u9762\u7684\u505a\u6cd5\uff0c\u4ece\u6d4f\u89c8\u5668\u4e2d\u6284\u4e00\u4e2a User-Agent \u8fc7\u6765\uff0c\u4f46\u662f\u5982\u679c\u6211\u4eec\u5feb\u901f\u722c\u5f88\u591a\u4e1c\u897f\uff0c\u6700\u597d\u8fd8\u662f\u6bcf\u6b21\u6362\u4e00\u4e2a\u65b0\u7684 User-Agent \u51cf\u5c11\u88ab\u5f53\u4f5c\u540c\u4e00\u4e2a\u7528\u6237\u7684\u6982\u7387\uff0c\u56e0\u6b64\u6211\u4eec\u4f7f\u7528\u5982\u4e0b\u65b9\u6cd5\uff1a 1 2 3 ua = UserAgent ( path = './fake_useragent.json' ) response = get ( 'http://wjw.beijing.gov.cn/' , headers = { 'User-Agent' : ua . random }) # \u6ca1\u9519\uff0cua.random \u867d\u7136\u662f\u6210\u5458\u53d8\u91cf\uff0c\u4f46\u662f\u6bcf\u6b21\u4f7f\u7528\u7684\u65f6\u5019\u4f1a\u6539\u53d8\u81ea\u5df1\uff0c\u800c\u4e0d\u662f\u7528\u6237\u8c03\u7528\u4e00\u4e2a\u7c7b\u4f3c\u4e8e ua.random() \u7684\u51fd\u6570\u624d\u4f1a\u6539\u53d8 \u9664\u6b64\u4e4b\u5916\u53ef\u80fd\u8fd8\u4f1a\u9700\u8981\u4f7f\u7528\u4ee3\u7406 IP\uff0c\u5982\u4f55\u83b7\u53d6\u4ee3\u7406\u5730\u5740\u8bf7\u81ea\u5b66\uff0c\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a 1 2 3 4 5 proxies = { \"http\" : \"http://10.10.1.10:3128\" , \"https\" : \"http://10.10.1.10:1080\" , } requests . get ( \"http://example.org\" , proxies = proxies ) \u4f7f\u7528\u8fd9\u4e24\u79cd\u65b9\u6cd5\u53ef\u4ee5\u907f\u514d\u5f88\u591a\u53cd\u722c\u7684\u7cfb\u7edf\uff08\u5f53\u7136\u5982\u679c\u68c0\u67e5 Cookie \u5927\u6982\u4f1a\u5f88\u7cdf\u7cd5\uff0c\u53ef\u80fd\u9700\u8981\u4f7f\u7528 Session \u6765\u89e3\u51b3\uff0c\u50cf\u4e0a\u8ff0\u76f4\u63a5\u8bbe\u7f6e Cookie \u5b9e\u9645\u4e0a\u5e76\u4e0d\u5f88\u901a\u7528\uff0c\u5728\u6b64\u4e0d\u505a\u5f88\u5177\u4f53\u7684\u8bf4\u660e\uff09\uff0c\u4f46\u662f\u8fd8\u6709\u66f4\u591a\u7684\u60c5\u51b5\u53ef\u80fd\u771f\u5b9e\u7684\u6570\u636e\u5e76\u4e0d\u80fd\u8f7b\u6613\u83b7\u53d6\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u8981\u5584\u7528\u6d4f\u89c8\u5668\u7684\u5f00\u53d1\u8005\u5de5\u5177\u5ba1\u67e5\u6240\u6709\u7684\u7f51\u7edc\u8bf7\u6c42\u3002 \u8d44\u6e90\u94fe\u63a5 \u00b6 2021 \u79d1\u534f\u6691\u57f9 https://www.xuetangx.com/course/THUSAST08091234567890/8571842?channel=i.area.manual_search","title":"Python \u7f51\u7edc\u8bf7\u6c42\u4e0e\u722c\u866b\u57fa\u7840"},{"location":"languages/python/crawler/#python","text":"","title":"Python \u722c\u866b"},{"location":"languages/python/crawler/#_1","text":"\u61c2\u5f97 Python \u57fa\u672c\u8bed\u6cd5\uff0c\u77e5\u9053\u5982\u4f55\u4f7f\u7528 Python \u7b2c\u4e09\u65b9\u5e93 \u77e5\u9053 HTML \u7684\u57fa\u672c\u7ed3\u6784 \u4f1a\u4f7f\u7528 Chrome \u7b49\u73b0\u4ee3\u6d4f\u89c8\u5668\u7684\u5f00\u53d1\u8005\u5de5\u5177\u6765\u67e5\u770b\u7f51\u9875\u6e90\u4ee3\u7801\u548c\u7f51\u7edc\u8bf7\u6c42\u4fe1\u606f","title":"\u524d\u7f6e\u77e5\u8bc6"},{"location":"languages/python/crawler/#_2","text":"\u9700\u8981\u7528\u5230\u4ee5\u4e0b\u4e00\u4e9b\u5e93\uff1a IPython\uff1a\u7406\u8bba\u4e0a\u6ca1\u6709\u4e5f\u884c\uff0c\u4f46\u662f\u4f7f\u7528 IPython \u4f1a\u63d0\u9ad8\u5927\u5bb6\u6d4b\u8bd5\u7684\u6548\u7387 requests\uff1a\u6211\u88c5 Python \u7684\u65f6\u5019\u597d\u50cf\u81ea\u5e26\u4e86\u4f46\u662f\u8fd9\u4f3c\u4e4e\u4e0d\u662f\u6807\u51c6\u5e93 BeautifulSoup4\uff1a\u89e3\u6790 HTML \u7684\u5e93\uff0c\u6ce8\u610f \u4e0d\u8981 \u5c1d\u8bd5\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u6765\u5904\u7406 HTML\uff0c\u867d\u7136\u5c0f\u5b66\u671f\u53ef\u80fd\u4f1a\u8fd9\u6837\u505a\uff0c\u4f46\u662f\u6b63\u5219\u8868\u8fbe\u5f0f\u5e76\u4e0d\u9002\u4e8e\u89e3\u51b3 HTML \u8fd9\u79cd\u683c\u5f0f fake_useragent\uff1a\u751f\u6210 User-Agent \u7684\u5e93 \u5173\u4e8e fake_useragent \u8fd9\u4e2a\u5e93\u4f3c\u4e4e\u4f1a\u5c1d\u8bd5\u81ea\u52a8\u83b7\u53d6\u67d0\u4e9b\u5728\u7ebf\u8d44\u6e90\uff0c\u4f46\u662f\u597d\u50cf\u9700\u8981\u4ee3\u7406\uff0c\u5982\u679c\u4e0d\u80fd\u5f81\u7a0b\u8fd0\u884c\uff0c\u8bf7\u4e0b\u8f7d fake_useragent.json \u653e\u5728\u4e00\u4e2a\u4f60\u80fd\u627e\u5230\u7684\u5730\u65b9\uff0c\u6700\u597d\u653e\u5728\u6211\u4eec\u8981\u4f7f\u7528\u7684\u9879\u76ee\u6587\u4ef6\u7684\u76ee\u5f55\u4e0b \u5728\u4f7f\u7528\u65f6\u5e94\u5f53\u6dfb\u52a0\u53c2\u6570\u6307\u5b9a\u8d44\u6e90\u5730\u5740\u5982\u4e0b\uff1a 1 ua = UserAgent ( path = './fake_useragent.json' )","title":"\u73af\u5883\u914d\u7f6e"},{"location":"languages/python/crawler/#_3","text":"\u7ec8\u6781\u54f2\u5b66\u4e09\u5927\u95ee\uff08\u670d\u52a1\u5668\u89c6\u89d2\u4e0b\u7684\u7f51\u7edc\u8bf7\u6c42\uff09 \u722c\u866b\u4e3a\u4e86\uff08\u81ea\u52a8\u5316\u5730\u3001\u5e38\u5e38\u8fd8\u9700\u8981\u662f\u9ad8\u901f\u5730\uff09\u83b7\u53d6\u670d\u52a1\u5668\u8d44\u6e90\uff0c\u9996\u5148\u5e94\u5f53\u4e86\u89e3\u5411\u670d\u52a1\u5668\u53d1\u9001\u8bf7\u6c42\u65f6\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u901a\u5e38\u6765\u8bf4\u4e00\u6b21\u7f51\u7edc\u8bf7\u6c42\u7684\u4e3b\u8981\u5185\u5bb9\u5305\u62ec\uff1a \u4f60\u662f\u8c01\uff1aUser-Agent | Cookies \u4f60\u4ece\u54ea\u91cc\u6765\uff1aIP \u4f60\u6765\u8fd9\u91cc\u5e72\u4ec0\u4e48\uff1aMethod \u4e0e Parameter \uff08\u5982\u679c\u662f POST \u8bf7\u6c42\u7684\u8bdd\u8fd8\u4f1a\u6709\u66f4\u591a\u5185\u5bb9\uff0c\u4f46\u662f\u4f5c\u4e3a\u722c\u866b\u7684\u8bdd\u53ef\u4ee5\u7565\u5fae\u7b80\u5316\uff09 \u5728\u8fd9\u4e00\u8fc7\u7a0b\u4e2d\u670d\u52a1\u5668\u53ef\u80fd\u9762\u4e34\u4e00\u4e9b\u653b\u51fb\uff08\u722c\u866b\u53ef\u80fd\u65e0\u610f\u95f4\u5bfc\u81f4\u8fd9\u6837\u7684\u95ee\u9898\uff09\uff1a DoS (Denial of Service) attack\uff1a\u62d2\u7edd\u670d\u52a1\u653b\u51fb\uff0c\u901a\u8fc7\u6784\u9020\u5927\u91cf\u7684\uff08\u5c24\u5176\u662f\u7e41\u91cd\u7684\uff0c\u4e5f\u5c31\u662f CC \u653b\u51fb\uff09\u8bf7\u6c42\u4f7f\u5f97\u670d\u52a1\u5668\u201c\u5fd9\u4e0d\u8fc7\u6765\u201d\uff0c\u8ba9\u670d\u52a1\u5668\u65e0\u6cd5\u6b63\u5e38\u670d\u52a1\u3002 DDoS (Distributed Denial of Service) attack\uff1a\u5206\u5e03\u5f0f\u62d2\u7edd\u670d\u52a1\u653b\u51fb\uff0c\u5728 DoS \u653b\u51fb\u7684\u57fa\u7840\u4e0a\u6539\u4e3a\u591a\u4e2a\u5ba2\u6237\u7aef\uff08 \u8089\u9e21 \u7528\u6237\uff09\u540c\u65f6\u5bf9\u76ee\u6807\u7f51\u7ad9\u53d1\u8d77\u5927\u91cf\u8bf7\u6c42\u3002 \u5c3d\u7ba1\u8c08\u8bba\u653b\u51fb\u6709\u70b9\u9065\u8fdc\uff0c\u4f46\u662f\u4e0d\u59a8\u8003\u8651\u4ee5\u4e0b\u4e24\u4e2a\u60c5\u666f\uff1a \u5f53\u4f60\u51c6\u65f6\u5230\u8fbe\u67e5\u8be2\u9ad8\u8003\u6210\u7ee9\u65f6 \u5f53\u4f60\u53cc\u5341\u4e00\u5348\u591c\u5341\u4e8c\u70b9\u4e0b\u5355\u65f6 \u6240\u4ee5\u5199\u722c\u866b\u65f6\u5e94\u8be5\u5168\u529b\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\uff01 \u7f51\u7edc\u6293\u5305\u57fa\u672c\u529f \u4e00\u7ebf\u4e3b\u64ad\u7684\u540d\u8a00 \u6d4f\u89c8\u7f51\u9875\u7684\u672c\u8d28\u662f\u57fa\u4e8e HTTP \u534f\u8bae\u7684\u4e00\u6b21\u6216\u8005\u591a\u6b21\u7f51\u7edc\u8bf7\u6c42\uff0c\u8fd9\u4e9b\u8bf7\u6c42\u7528\u6237\u662f\u53ef\u4ee5\u76f4\u63a5\u67e5\u770b\u7684\uff0c\u6bd4\u5982\u6309\u4e0b F12 \u518d\u770b\u770b\u201c\u7f51\u7edc\u201d\u3002 \u7f51\u7edc\u6293\u5305\u901a\u5e38\u6709\u5982\u4e0b\u7528\u9014\uff1a \u67e5\u770b\u771f\u6b63\u7684\u6570\u636e\u6765\u6e90\uff08\u5e38\u4e3a XHR\uff09 \u67e5\u770b\u4e0b\u8f7d\u89c6\u9891\u7b49\u6570\u636e \u6a21\u62df\u8bf7\u6c42\u5b8c\u6210\u767b\u5f55 \u6d4b\u8bd5\u7f51\u7ad9\u5b89\u5168\u6027 \u5176\u5b9e\u5bf9\u4e8e\u5199\u722c\u866b\u6765\u8bf4\uff0c\u4e3b\u8981\u7528\u9014\u53ea\u6709\u4e00\u4e2a\uff0c\u5c31\u662f\u627e\u5230\u6211\u4eec\u9700\u8981\u7684\u6570\u636e\u7684\u771f\u6b63\u6765\u6e90\uff08\u5f53\u7136\u5982\u679c\u4f7f\u7528 selenium \u7b49\u65b9\u6cd5\u52a0\u8f7d\u7f51\u9875\u5185\u5bb9\u53ef\u4ee5\u4e0d\u7528\u5206\u6790\u6570\u636e\u6765\u6e90\uff0c\u4f46\u662f\u8fd9\u6837\u663e\u7136\u6d88\u8017\u66f4\u591a\u8d44\u6e90\u4e14\u6162\uff09\uff0c\u7a0d\u540e\u6211\u4eec\u5c06\u4f1a\u770b\u5230\u8fd9\u4e00\u70b9\u3002","title":"\u7f51\u7edc\u8bf7\u6c42"},{"location":"languages/python/crawler/#_4","text":"\u4f55\u4e3a\u722c & \u4e3a\u4f55\u722c \u8fd9\u4e2a\u60f3\u5fc5\u5927\u5bb6\u90fd\u662f\u61c2\u7684\uff0c\u5199\u722c\u866b\u5f52\u6839\u7ed3\u5e95\u8fd8\u662f\u4e3a\u4e86\u66ff\u4ee3\u4eba\u5de5\u8fdb\u884c\u91cd\u590d\u5927\u91cf\u7684\u64cd\u4f5c\uff0c\u5982\u679c\u975e\u5e38\u4e0d\u719f\u6089\u722c\u866b\u8fd9\u79cd\u7a0b\u5e8f\u53ef\u4ee5\u53bb\u770b rls \u7684\u8bfe\u3002 \u5b70\u53ef\u722c \u8fd9\u90e8\u5206\u662f\u6211\u4eec\u6700\u91cd\u8981\u7684\u80cc\u666f\u77e5\u8bc6\uff0c\u722c\u7f51\u7ad9\u4e4b\u524d\u8bf7\u52a1\u5fc5\u5173\u6ce8 robots.txt \uff08\u5373\u57df\u540d\u540e\u63a5 /robots.txt \uff0c\u8981\u6ce8\u610f\u5b50\u57df\u540d\u7684\u8981\u6c42\u672a\u5fc5\u548c\u4e3b\u57df\u540d\u4e00\u6837\uff0c\u5207\u4e0d\u53ef\u770b\u5230\u4e3b\u57df\u540d\u53ef\u4ee5\u722c\u5c31\u968f\u4fbf\u641e\uff09\uff0c\u8fd9\u662f\u7f51\u7ad9\u4e0e\u722c\u866b\u4e4b\u95f4\u7684\u201c\u541b\u5b50\u534f\u8bae\u201d\uff0c\u6b64\u5904\u89c4\u5b9a\u4e86\u4ec0\u4e48\u53ef\u722c\u4ec0\u4e48\u4e0d\u53ef\u722c\uff0c\u4e0b\u9762\u662f\u51e0\u4e2a\u4f8b\u5b50\u3002 \u767e\u5ea6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 User-agent: Baiduspider Disallow: /baidu Disallow: /s? Disallow: /ulink? Disallow: /link? Disallow: /home/news/data/ Disallow: /bh User-agent: Googlebot Disallow: /baidu Disallow: /s? Disallow: /shifen/ Disallow: /homepage/ Disallow: /cpro Disallow: /ulink? Disallow: /link? Disallow: /home/news/data/ Disallow: /bh # \u4e2d\u95f4\u7565\u53bb\u82e5\u5e72\u5185\u5bb9 User-agent: * Disallow: / \u89e3\u8bfb\uff1a\u9664\u4e86\u6211\u94a6\u70b9\u7684\u722c\u866b\u4e4b\u5916\uff0c\u5176\u4ed6\u62d2\u4e0d\u63a5\u5f85\u3002 \u6dd8\u5b9d / \u5929\u732b 1 2 User-agent: * Disallow: / \u89e3\u8bfb\uff1a\u83ab\u6328\u8001\u5b50\u3002 \u864e\u6251 \u6ce8\u610f\u8fd9\u91cc\u5c31\u51fa\u73b0\u4e86\u6211\u4eec\u4e4b\u524d\u63d0\u5230\u8fc7\u7684\u95ee\u9898\uff0c https://www.hupu.com/robots.txt \u5982\u4e0b\uff1a 1 2 3 4 5 6 7 User-agent: * Allow: / Sitemap: https://bbs.hupu.com/sitemap_index.xml Sitemap: https://bbs.hupu.com/sitemap/sitemap_boards.xml Sitemap: https://voice.hupu.com/sitemap_index.xml Sitemap: https://nba.hupu.com/players/index.xml \u89e3\u8bfb\uff1a\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u4efb\u610f\u722c\uff0c\u8fd8\u63d0\u4f9b\u4e86\u7ad9\u70b9\u5730\u56fe\u4f9b\u53c2\u8003\u3002 \u4f46\u662f https://bbs.hupu.com/robots.txt \u5219\u662f\u8fd9\u6837\u7684\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 User-agent: * Request-rate: 50/1 Disallow: /api/ Disallow: /ajax/ Disallow: /profile.php?* Disallow: /hack/ Disallow: /template/ Disallow: /attachment/ Disallow: /gearfeedback/ Disallow: /*_*.html$ Sitemap: https://bbs.hupu.com/sitemap_index.xml Sitemap: https://bbs.hupu.com/sitemap/sitemap_boards.xml \u89e3\u8bfb\uff1a\u6cd5\u65e0\u7981\u6b62\u7686\u53ef\u4e3a\uff0c\u4f46\u662f\u901f\u5ea6\u4e0d\u8d85\u8fc7 50 \u6b21\u6bcf\u79d2\uff08\u6ce8\u610f\u4e0d\u540c\u7684\u722c\u866b\u5176\u5b9e\u5bf9\u4e8e\u4e00\u6b21\u722c\u53d6\u7684\u7406\u89e3\u662f\u4e0d\u540c\u7684\uff0c\u4f46\u662f\u8fd9\u662f\u541b\u5b50\u534f\u8bae\uff0c\u6240\u4ee5\u5bf9\u4e8e\u6211\u4eec\u81ea\u5df1\u5199\u7684\u722c\u866b\u4e5f\u6ca1\u6709\u5fc5\u8981\u90a3\u4e48\u7ea0\u7ed3\uff0c\u5982\u679c\u8981\u4ed4\u7ec6\u8003\u8651\u7684\u8bdd\uff0c\u53ef\u4ee5\u7814\u7a76\u4e00\u4e0b\u4e0d\u540c\u641c\u7d22\u5f15\u64ce\u7684\u722c\u866b\u5bf9\u4e8e\u8fd9\u4e00\u95ee\u9898\u7684\u7406\u89e3\uff0c\u53ef\u4ee5\u53c2\u8003 \u77e5\u4e4e\u7684 robots.txt \u4ee5\u53ca \u76f8\u5173\u63d0\u95ee \uff09\u3002 \u867d\u7136\u864e\u6251\u793e\u533a\u6bd4\u4e3b\u7ad9\u591a\u4e86\u4e00\u4e9b\u9650\u5236\uff0c\u4f46\u662f\u6211\u4eec\u770b\u5230\u8fd9\u4ecd\u7136\u662f\u9650\u5236\u6700\u5c11\u7684\uff08\u867d\u7136\u9650\u5236 *_*.html$ \u4f46\u662f\u65b0\u95fb\u9875\u5e76\u4e0d\u662f\u8fd9\u6837\uff0c\u800c\u4e14 50 \u6b21\u6bcf\u79d2\u5176\u5b9e\u4e5f\u4e0d\u5c11\uff09\uff0c\u52a0\u4e0a \u4f17\u6240\u5468\u77e5\u7684\u539f\u56e0 \u864e\u6251\u524d\u4e24\u5929\u5f88\u51fa\u5708\uff08\u81f3\u5c11\u5728\u6211\u5199\u6587\u6863\u7684\u65f6\u5019\u662f\u8fd9\u6837\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u4e3b\u8981\u722c\u53d6\u864e\u6251\u7684\u4f53\u80b2\u65b0\u95fb\u4f5c\u4e3a\u6f14\u793a\u3002 \u5982\u4f55\u722c \u7406\u60f3\u4e2d\u7684\u9ad8\u6027\u80fd\u722c\u866b\u67b6\u6784\uff1a \u672c\u6587\u7528\u7684\u5165\u95e8\u7248\u722c\u866b\u67b6\u6784\uff1a","title":"\u722c\u866b\u521d\u6b65"},{"location":"languages/python/crawler/#_5","text":"\u81ea\u5b66\u5185\u5bb9 \u73af\u5883\u914d\u7f6e\u4e2d\u5199\u4e86\u6700\u91cd\u8981\u7684\u5de5\u5177\uff0c\u4e0b\u9762\u8fd8\u6709\u4e9b\u53ef\u80fd\u4f1a\u7528\u5230\u7684\u81ea\u5b66\u5185\u5bb9\uff1a js2py\uff1a\u5728 Python \u4e2d\u6267\u884c JavaScript \u811a\u672c pyppeteer\uff1a\u901a\u8fc7 headless \u7684\u65b9\u6cd5\u76f4\u63a5\u6e32\u67d3\u7f51\u9875 selenium\uff1a\u63a7\u5236\u6d4f\u89c8\u5668\u8fdb\u884c\u81ea\u52a8\u5316\u6d4b\u8bd5\u7684\u5de5\u5177 requests.Session\uff1a\u4fdd\u5b58\u4f1a\u8bdd\uff0c\u9002\u7528\u4e8e\u9700\u8981 Cookie \u7684\u573a\u666f requests \u6dfb\u52a0\u4ee3\u7406 IP scrapy\uff1a\u771f\u6b63\u7684\u9ad8\u6027\u80fd\u722c\u866b\u6846\u67b6 \u722c\u53d6\u6f14\u793a \u4ee5\u722c\u53d6 \u864e\u6251\u67d0\u677f\u5757\u65b0\u95fb\u5217\u8868 \u4e3a\u4f8b\uff1a \u5f15\u5165\u5fc5\u8981\u7684\u5e93 1 2 3 4 5 6 from requests import get , post from bs4 import BeautifulSoup from fake_useragent import UserAgent from urllib.request import urljoin from json import dump from time import sleep # \u5982\u679c\u7f51\u7ad9\u8981\u6c42\u4ee5\u5f88\u4f4e\u7684\u9891\u7387\u722c\uff0c\u90a3\u4e48\u5927\u6982\u7387\u4f1a\u9700\u8981 sleep Cookie? \u5982\u679c\u4f60\u70b9\u5f00\u4e86\u524d\u9762\u90a3\u4e2a\u94fe\u63a5\uff08\u800c\u4e14\u4f60\u6700\u8fd1\u6ca1\u6709\u770b\u8fc7\u864e\u6251\u7684\u8bdd\uff09\uff0c\u4f60\u5927\u6982\u7387\u4f1a\u53d1\u73b0\u62a5\u4e86\u4e2a\u9519\uff0c\u4e0d\u8981\u6000\u7591\uff0c\u6211\u6ca1\u6709\u5199\u9519 URL\uff0c\u9020\u6210\u8fd9\u6837\u95ee\u9898\u7684\u539f\u56e0\u5927\u6982\u662f\u864e\u6251\u5728\u5207\u6362\u65b0\u65e7\u7248\u9762\uff0c\u76f4\u63a5\u70b9\u8fdb\u53bb\u4f1a\u83ab\u540d\u88ab\u8f6c\u5165\u65e7\u7248\u7684\u9875\u9762\uff0c\u800c\u65e7\u7248\u9875\u9762\u7684 URL \u5927\u6982\u4e0d\u662f\u8fd9\u6837\u5199\u7684\u3002 \u90a3\u4e48\u8fd9\u5c31\u8981\u63d0\u5230\u4e4b\u524d\u7684\u4e00\u4e2a\u95ee\u9898\uff0c\u4e5f\u5c31\u662f\u201c\u4f60\u662f\u8c01\u201d\u7684\u95ee\u9898\uff0c\u864e\u6251\u4f1a\u6839\u636e Cookie \u6765\u5224\u65ad\u4f60\u662f\u5426\u5df2\u7ecf\u8fdb\u5165\u4e86\u65b0\u7248\u9875\u9762\uff0c\u800c\u8fd9\u4e2a Cookie \u663e\u7136\u662f\u5728\u9996\u9875\u88ab\u8bbe\u7f6e\u7684\uff0c\u56e0\u6b64\u76f4\u63a5\u8bbf\u95ee\u8fd9\u4e00\u677f\u5757\u662f\u884c\u4e0d\u901a\u7684\u3002 \u4ece\u6d4f\u89c8\u5668\u4e2d\u83b7\u53d6 Cookie \u4fe1\u606f\u5982\u4e0b\uff08\u56e0\u4e3a\u5185\u5bb9\u592a\u957f\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u4fdd\u5b58\u5728 Python \u53d8\u91cf\u4e2d\uff09\uff1a 1 Cookie = 'smidV2=20210720104859f6c99288e1bccb891e9ca9ce9d7bb6fe0055f24f4e677eec0; csrfToken=iGeSrk669wqQBcY5fKk2Diue; sensorsdata2015jssdkcross=%7B %22d istinct_id %22% 3A %2217a c1d102691c24-05465c49cc1a3d8-3e62684b-1296000-17ac1d1026a2685 %22% 2C %22% 24device_id %22% 3A %2217a c1d102691c24-05465c49cc1a3d8-3e62684b-1296000-17ac1d1026a2685 %22% 2C%22props %22% 3A%7B %22% 24latest_referrer %22% 3A %22% 22%2C %22% 24latest_traffic_source_type %22% 3A %22% E7%9B%B4 %E 6 %8E %A5 %E 6%B5 %81% E9 %87% 8F %22% 2C %22% 24latest_search_keyword %22% 3A %22% E6%9C%AA %E 5 %8F%96% E5 %88% B0 %E 5 %80% BC_ %E 7%9B%B4 %E 6 %8E %A5 %E 6 %89% 93 %E 5%BC %80% 22%7D%7D; acw_tc=2f624a6816268527794733860e071fa5c73b1f702b456ad494e04ecfb5dc53; bbs_2020=1' \u83b7\u53d6\u5e76\u89e3\u6790\u65b0\u95fb\u5217\u8868\u9875 \u6211\u4eec\u6ce8\u610f\u5230\uff0c\u864e\u6251\u7684\u65b0\u95fb\u5217\u8868\u9875 URL \u5927\u81f4\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a 1 https://bbs.hupu.com/502-{PAGE} \u6ce8\u610f\u5230\u5176\u4e2d\u6bcf\u4e00\u9879\u7684\u683c\u5f0f\u5927\u81f4\u5982\u4e0b\uff1a 1 < a href = \"/44314069.html\" target = \"_blank\" class = \"p-title\" > [\u6d41\u8a00\u677f]\u5b57\u6bcd\u54e5\uff1a\u8981\u76f8\u4fe1\uff01\u6211\u66fe\u7ecf\u4e0a\u987f\u4e0d\u63a5\u4e0b\u987f\uff0c\u5982\u4eca\u6211\u662f\u51a0\u519b </ a > \u90a3\u4e48\u5047\u5982\u6211\u4eec\u83b7\u53d6\u524d 10 \u9875\u7684\u65b0\u95fb\u8be6\u60c5\u94fe\u63a5\uff1a 1 2 3 4 5 6 7 8 9 10 url = 'https://bbs.hupu.com/' news_list = [] for i in range ( 1 , 11 ): response = get ( f 'https://bbs.hupu.com/502- { i } ' , headers = { 'Cookie' : Cookie }) soup = BeautifulSoup ( response . content . decode ( 'utf-8' ), 'lxml' ) news = soup . find_all ( 'a' , class_ = 'p-title' ) for n in news : news_list . append ( urljoin ( url , n . get ( 'href' ))) sleep ( 0.02 ) # \u6309\u7167 robots.txt \u8981\u6c42\u4f11\u606f 1/50 \u79d2 \u83b7\u53d6\u5e76\u89e3\u6790\u65b0\u95fb\u8be6\u60c5 \u66f4\u597d\u7684\u505a\u6cd5\u662f\u8fd9\u91cc\u5199\u4e00\u4e2a\u7c7b\uff0c\u4f46\u662f\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7c7b\u5199\u5165\u6587\u4ef6\u53c8\u6d89\u53ca\u5230\u8bb8\u591a\u95ee\u9898\uff0c\u6240\u4ee5\u6211\u4eec\u7b80\u5355\u7684\u7528\u5b57\u5178\u8868\u793a\uff0c\u7c7b\u4f3c\u7684\uff0c\u6211\u4eec\u83b7\u53d6\u5e76\u89e3\u6790\u7f51\u9875\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 news_content = [] for news_url in news_list : response = get ( news_url , headers = { 'Cookie' : Cookie }) soup = BeautifulSoup ( response . content . decode ( 'utf-8' ), 'lxml' ) title = soup . find ( 'h1' , class_ = 'name' ) . text . strip () content = soup . find ( 'div' , class_ = 'thread-content-detail' ) . text . strip () . replace ( ' \\r ' , ' \\n ' ) news_content . append ({ 'url' : news_url , 'title' : title , 'content' : content }) sleep ( 0.02 ) \u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u83b7\u53d6\u7684\u5185\u5bb9\u4fdd\u5b58\u4e3a JSON\uff1a 1 dump ( news_content , open ( './hupu.json' , 'w' ), ensure_ascii = False ) \u5173\u4e8e\u53cd\u722c \u63a5\u4e0b\u6765\u6211\u4eec\u6f14\u793a\u4e00\u4e2a\u7cdf\u7cd5\u7684\u53cd\u722c\u793a\u4f8b\uff0c \u5317\u4eac\u536b\u5065\u59d4 \u7f51\u7ad9\u3002 \u5982\u679c\u6211\u4eec\u76f4\u63a5\u6267\u884c\uff1a 1 response = get ( 'http://wjw.beijing.gov.cn/' ) \u6211\u4eec\u4f1a\u53d1\u73b0 response.text \u5f88\u4e0d\u5bf9\u52b2\uff0c\u800c\u4e14\u5176\u4e2d\u6bd4\u8f83\u660e\u663e\u80fd\u770b\u5230\u7684\u662f\uff08\u5f53\u7136\u6211\u7ecf\u8fc7\u4e86\u683c\u5f0f\u5316\uff09\uff1a 1 2 3 4 5 < div id = 'notice-jiasule' > < p > \u5f53\u524d\u7f51\u5740\uff1a < %- url %> </ p > < p > \u5ba2\u6237\u7aef\u7279\u5f81\uff1a < %- user_agent %> </ p > < p > \u62e6\u622a\u65f6\u95f4\uff1a < %- now %> &nbsp;&nbsp; \u672c\u6b21\u4e8b\u4ef6ID &nbsp; < %- rule_id %> </ p > </ div > \u8fd8\u6709\u4e0b\u9762\u7684\uff1a 1 2 3 4 5 6 7 8 9 10 var content = _ . template ( document . getElementById ( 'content_tpl' ). innerHTML )({ error_403 : '' || '\u5f53\u524d\u8bbf\u95ee\u7591\u4f3c\u9ed1\u5ba2\u653b\u51fb\uff0c\u5df2\u88ab\u7f51\u7ad9\u7ba1\u7406\u5458\u8bbe\u7f6e\u4e3a\u62e6\u622a' , url : document . URL . replace ( /\\</g , \"%3C\" ). replace ( /\\>/g , \"%3E\" ), user_agent : navigator . userAgent , now : new Date ( new Date () - - 8 * 3600000 ). toISOString (). substr ( 0 , 19 ). replace ( 'T' , ' ' ), rule_id : parseInt ( '[80001]' . replace ( /\\[|\\]/g , '' )) || '' , from : encodeURIComponent ( document . referrer . substr ( 0 , 1024 )), client_ip : '59.66.16.88' , ref : encodeURIComponent ( document . URL . substr ( 0 , 1024 )) }); \u4e0d\u96be\u53d1\u73b0\u8fd9\u4e2a\u7f51\u7ad9\u6240\u6258\u7ba1\u7684\u201c\u521b\u5b87\u4e91\u9632\u5fa1\u201d\u5c4f\u853d\u4e86\u6211\u4eec\u7684\u8bbf\u95ee\uff0c\u800c\u5f15\u8d77\u8fd9\u4e00\u95ee\u9898\u7684\u539f\u56e0\uff0c\u6211\u4eec\u53ef\u4ee5\u67e5\u770b\uff1a 1 2 >>> response . request . headers { 'User-Agent' : 'python-requests/2.25.1' , 'Accept-Encoding' : 'gzip, deflate' , 'Accept' : '*/*' , 'Connection' : 'keep-alive' } \u5176\u4e2d\u663e\u7136\u6709\u4e00\u6761 'User-Agent': 'python-requests/2.25.1' \uff0c\u4e0d\u6253\u81ea\u62db\u7684\u722c\u866b\u884c\u4e3a\uff0c\u88ab\u5c4f\u853d\u4e5f\u5e76\u4e0d\u5947\u602a\uff08\u9898\u5916\u8bdd\uff0c\u8fd9\u4e2a\u7f51\u7ad9\u5e76\u6ca1\u6709\u8bbe\u7f6e robots.txt \uff0c\u56e0\u6b64\u53cc\u65b9\u90fd\u5f88\u96be\u8bf4\u8c01\u5bf9\u8c01\u9519\uff09\u3002\u597d\u5728\u73b0\u5728\u8fd9\u4e2a\u7f51\u7ad9\u4e0d\u50cf\u53bb\u5e74\u4e00\u6837\u4f1a\u5c01 IP \u5730\u5740\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5148\u6f14\u793a\u9519\u8bef\u793a\u4f8b\u3002 \u6211\u4eec\u5f53\u7136\u53ef\u4ee5\u6a21\u4eff\u524d\u9762\u7684\u505a\u6cd5\uff0c\u4ece\u6d4f\u89c8\u5668\u4e2d\u6284\u4e00\u4e2a User-Agent \u8fc7\u6765\uff0c\u4f46\u662f\u5982\u679c\u6211\u4eec\u5feb\u901f\u722c\u5f88\u591a\u4e1c\u897f\uff0c\u6700\u597d\u8fd8\u662f\u6bcf\u6b21\u6362\u4e00\u4e2a\u65b0\u7684 User-Agent \u51cf\u5c11\u88ab\u5f53\u4f5c\u540c\u4e00\u4e2a\u7528\u6237\u7684\u6982\u7387\uff0c\u56e0\u6b64\u6211\u4eec\u4f7f\u7528\u5982\u4e0b\u65b9\u6cd5\uff1a 1 2 3 ua = UserAgent ( path = './fake_useragent.json' ) response = get ( 'http://wjw.beijing.gov.cn/' , headers = { 'User-Agent' : ua . random }) # \u6ca1\u9519\uff0cua.random \u867d\u7136\u662f\u6210\u5458\u53d8\u91cf\uff0c\u4f46\u662f\u6bcf\u6b21\u4f7f\u7528\u7684\u65f6\u5019\u4f1a\u6539\u53d8\u81ea\u5df1\uff0c\u800c\u4e0d\u662f\u7528\u6237\u8c03\u7528\u4e00\u4e2a\u7c7b\u4f3c\u4e8e ua.random() \u7684\u51fd\u6570\u624d\u4f1a\u6539\u53d8 \u9664\u6b64\u4e4b\u5916\u53ef\u80fd\u8fd8\u4f1a\u9700\u8981\u4f7f\u7528\u4ee3\u7406 IP\uff0c\u5982\u4f55\u83b7\u53d6\u4ee3\u7406\u5730\u5740\u8bf7\u81ea\u5b66\uff0c\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a 1 2 3 4 5 proxies = { \"http\" : \"http://10.10.1.10:3128\" , \"https\" : \"http://10.10.1.10:1080\" , } requests . get ( \"http://example.org\" , proxies = proxies ) \u4f7f\u7528\u8fd9\u4e24\u79cd\u65b9\u6cd5\u53ef\u4ee5\u907f\u514d\u5f88\u591a\u53cd\u722c\u7684\u7cfb\u7edf\uff08\u5f53\u7136\u5982\u679c\u68c0\u67e5 Cookie \u5927\u6982\u4f1a\u5f88\u7cdf\u7cd5\uff0c\u53ef\u80fd\u9700\u8981\u4f7f\u7528 Session \u6765\u89e3\u51b3\uff0c\u50cf\u4e0a\u8ff0\u76f4\u63a5\u8bbe\u7f6e Cookie \u5b9e\u9645\u4e0a\u5e76\u4e0d\u5f88\u901a\u7528\uff0c\u5728\u6b64\u4e0d\u505a\u5f88\u5177\u4f53\u7684\u8bf4\u660e\uff09\uff0c\u4f46\u662f\u8fd8\u6709\u66f4\u591a\u7684\u60c5\u51b5\u53ef\u80fd\u771f\u5b9e\u7684\u6570\u636e\u5e76\u4e0d\u80fd\u8f7b\u6613\u83b7\u53d6\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u8981\u5584\u7528\u6d4f\u89c8\u5668\u7684\u5f00\u53d1\u8005\u5de5\u5177\u5ba1\u67e5\u6240\u6709\u7684\u7f51\u7edc\u8bf7\u6c42\u3002","title":"\u722c\u866b\u5b9e\u6218"},{"location":"languages/python/crawler/#_6","text":"2021 \u79d1\u534f\u6691\u57f9 https://www.xuetangx.com/course/THUSAST08091234567890/8571842?channel=i.area.manual_search","title":"\u8d44\u6e90\u94fe\u63a5"},{"location":"languages/python/pip/","text":"Python \u5305\u7ba1\u7406 \u00b6 \u524d\u7f6e\u77e5\u8bc6 \u00b6 \u4f60\u6240\u4f7f\u7528\u7684\u64cd\u4f5c\u7cfb\u7edf\u7684\u5e38\u7528\u547d\u4ee4\u884c\u64cd\u4f5c \u77e5\u9053 Python \u662f\u4ec0\u4e48\uff0c\u4ee5\u53ca Python \u5982\u4f55\u542f\u52a8 \u77e5\u9053 Python \u53ef\u4ee5\u5b89\u88c5\u4e0d\u540c\u7684\u7b2c\u4e09\u65b9\u5e93 \u5b89\u88c5\u5305\u7ba1\u7406\u5de5\u5177 \u00b6 pip pip \u662f\u7528\u4e8e\u7ba1\u7406 Python \u5e93\u7684\u5de5\u5177\uff0c\u4f46\u662f\u5b89\u88c5 Python \u65f6\u4e00\u822c\u5e76\u4e0d\u4f1a\u81ea\u52a8\u5b89\u88c5 pip\uff0c\u56e0\u6b64\u4f60\u770b\u9700\u8981\u624b\u52a8\u5b89\u88c5\u3002 \u4f60\u53ef\u4ee5\u4f7f\u7528\u5305\u7ba1\u7406\u5668\u5b89\u88c5 python3-pip \u6765\u5b89\u88c5 pip\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5b98\u65b9\u811a\u672c\uff1a 1 2 curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py python3 get-pip.py # \u6ce8\u610f\u8fd9\u4e2a\u5730\u65b9\u4f7f\u7528\u4ec0\u4e48\u7248\u672c\u7684 Python \u5c31\u4f1a\u5b89\u88c5\u4ec0\u4e48\u7248\u672c\u7684 pip Conda \u5c3d\u7ba1\u5728\u524d\u6587\u4e2d\u6211\u4eec\u5df2\u7ecf\u8bb2\u8fc7\u5982\u4f55\u5b89\u88c5 Python \u89e3\u91ca\u5668\uff0c\u4f46\u662f\u5728\u9700\u8981\u590d\u6742\u7684\u73af\u5883\u7ba1\u7406\uff08\u6216\u8005\u60f3\u8981\u66f4\u7b80\u5355\u5730\u5b89\u88c5\uff09\u65f6\uff0c\u6211\u4eec\u5e38\u5e38\u4f1a\u7528\u5230 Anaconda \u6216\u7cbe\u7b80\u7248 Miniconda\u3002Anaconda \u672c\u2f9d\u2f83\u5e26\u4e86 UI \u4ee5\u53ca\u2f00\u5806\u5305\uff0c\u4f53\u79ef\u5e9e\u2f24\uff0c\u5982\u679c\u4f60\u6709\u5174\u8da3\u53ef\u4ee5\u9009\u62e9\u5b89\u88c5\u5b83\uff0c\u6b64\u5904\u6211\u8981\u8bb2\u7684\u662f\u5b83\u7684\u7cbe\u7b80\u7248 Miniconda\uff0c\u5220\u6389\u4e86\u2f24\u91cf\u9884\u88c5\u5305\uff0c\u7559\u4e0b\u4e86\u5c11\u6570\u5305\u4e0e\u7ba1\u7406\u90e8\u5206\u3002\u4e0b\u2faf\u7684\u6559\u7a0b\u9488\u5bf9 Miniconda \u800c\u2f94\uff0c\u5982\u679c\u4f60\u9009\u62e9\u5b89\u88c5 Anaconda \u540c\u6837\u53ef\u4ee5\u53c2\u8003\u4e0b\u2faf\u7684\u6559\u7a0b\uff0c\u56e0\u4e3a Miniconda \u7684\u529f\u80fd\u662f\u5b83\u7684\u2f26\u96c6\uff0c\u5c11\u4e86\u56fe\u5f62\u754c\u2faf\u4e0e\u2f00\u4e9b\u9884\u88c5\u5305\u3002 \u4e0b\u8f7d\u6211\u63a8\u8350\u2f64 TUNA \u6e90\uff0c\u2fbc\u6548\u4fbf\u5229\uff1a Miniconda3-py39_4.9.2-Windows-x86_64.exe \uff1aMiniconda for Windows Miniconda3-py39_4.9.2-MacOSX-x86_64.sh \uff1aMiniconda for Mac Miniconda3-py39_4.9.2-Linux-x86_64.sh \uff1aMiniconda for Linux Anaconda3-2021.05-Windows-x86_64.exe \uff1aAnaconda for Windows Anaconda3-2021.05-MacOSX-x86_64.sh \uff1aAnaconda for Mac Anaconda3-2021.05-Linux-x86_64.sh \uff1aAnaconda for Linux \u6ce8\u610f\u8fd9\u91cc\u7684 Mac \u53ea\u6709 x86_64 \u7248\u672c\uff0c\u4f7f\u7528 M1 Mac \u7684\u540c\u5b66\u6682\u65f6\u65e0\u6cd5\u5b89\u88c5 Conda\u3002 \u6362\u6e90 \u00b6 \u5982\u679c\u7528\u8fc7\u5176\u4ed6\u4efb\u4f55\u4e00\u79cd\u5305\u7ba1\u7406\u5668\u7684\u8bdd\uff0c\u60f3\u5fc5\u5df2\u7ecf\u719f\u6089\u4e86\u6362\u6e90\u8fd9\u4e2a\u8bdd\u9898\uff0c\u5373\u4f7f\u6ca1\u6709\u53d7\u5230 \u4f17\u6240\u5468\u77e5 \u795e\u79d8\u539f\u56e0\u5f71\u54cd\u7684\u6e90\u670d\u52a1\u5668\uff0c\u4ecd\u7136\u53d7\u5230\u8ddd\u79bb\u539f\u56e0\u7684\u5f71\u54cd\uff0c\u6548\u679c\u6ca1\u6709\u90a3\u4e48\u7406\u60f3\u3002\u8fd9\u91cc\u5efa\u8bae\u4f7f\u7528\u7531 TUNA \u534f\u4f1a\u7ef4\u62a4\u7684 TUNA \u6e90\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e00\u952e\u914d\u7f6e\u811a\u672c oh-my-tuna \uff1a 1 2 wget https://tuna.moe/oh-my-tuna/oh-my-tuna.py python3 oh-my-tuna.py \u987a\u5229\u7684\u8bdd\uff0c\u4f60\u5c06\u770b\u5230\u7c7b\u4f3c\u5982\u4e0b\u7684\u8f93\u51fa\uff1a 1 2 3 4 [ pypi ] : Activating... [ pypi ] : Mirror has been activated [ Anaconda ] : Activating... [ Anaconda ] : Mirror has been activated \u518d\u6267\u2f8f\uff08\u5982\u679c\u4f7f\u7528 pip\uff09\uff1a 1 pip config list \u8fd9\u5c06\u5f97\u5230\uff08\u6216\u5305\u542b\uff09\u5982\u4e0b\u8f93\u51fa\uff1a 1 global.index-url = 'https://pypi.tuna.tsinghua.edu.cn/simple' \u6216\u8005\u518d\u6267\u2f8f\uff08\u5982\u679c\u4f7f\u7528 Conda\uff09\uff1a 1 conda config --show-sources \u8fd9\u5c06\u5f97\u5230\uff08\u6216\u5305\u542b\uff09\u5982\u4e0b\u8f93\u51fa\uff1a 1 2 3 4 channels: - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/ - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/ - defaults \u8fd9\u5206\u522b\u8868\u660e\u4f60\u7684 pip \u548c Conda \u5df2\u7ecf\u6210\u529f\u8bbe\u7f6e\u6210\u4e86 TUNA \u6e90\u3002 \u5982\u679c\u5728 Windows \u4e0a\u8fd0\u884c\u9047\u5230\u95ee\u9898 \u622a\u6b62\u5199\u8fd9\u53e5\u8bdd\u7684\u65f6\u5019 oh-my-tuna \u8fd8\u6709\u4e2a\u5c0f\u95ee\u9898\u6ca1\u6709\u4fee\uff0c\u5728 Windows \u4e0a\u5c1d\u8bd5\u5224\u65ad\u7cfb\u7edf\u7c7b\u578b\u7684\u65f6\u5019\u53ef\u80fd\u5f15\u53d1\u4e00\u4e2a\u672a\u88ab\u5904\u7406\u7684 exception\uff0c\u4ece\u800c\u5bfc\u81f4\u811a\u672c\u9000\u51fa\uff0c\u4f5c\u4e3a\u4e00\u79cd\u4e34\u65f6\u7684\u4fee\u8865\u65b9\u6848\uff0c\u4f60\u53ef\u4ee5\u5c06 622 \u884c\u6539\u4e3a if uname is None or any(map(lambda x: x in uname, no_suffix_list)): \u540e\u91cd\u65b0\u8fd0\u884c\u8be5\u811a\u672c\u3002 \u5b89\u88c5\u548c\u5378\u8f7d\u7b2c\u4e09\u65b9\u5e93 \u00b6 \u4f7f\u7528 pip \u6216 Conda \u53ef\u4ee5\u8f7b\u677e\u5730\u7ba1\u7406\u672c\u5730\u7684 Python \u5305\uff0c\u4f8b\u5982\u5b89\u88c5\u722c\u866b\u5e38\u7528\u7684 BeautifulSoup4 \u5e93\u5982\u4e0b\uff1a 1 2 pip install BeautifulSoup4 conda install BeautifulSoup4 \u800c\u5378\u8f7d\u53ea\u9700\uff1a 1 2 pip uninstall BeautifulSoup4 conda remove BeautifulSoup4 \u4f7f\u7528 IPython \u4f5c\u4e3a\u4e00\u4e2a\u65e0\u5173\u7d27\u8981\u4f46\u662f\u4f1a\u8ba9\u4f60\u5f88\u723d\u7684\u5efa\u8bae\uff0c\u5728\u4f7f\u7528\u4ea4\u4e92\u5f0f\u7a97\u53e3\u65f6\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528 IPython \u4ee3\u66ff\u539f\u751f\u7684 Python \u89e3\u91ca\u5668\u3002\u76f8\u8f83\u4e8e\u672c\u5730\u7684 Python Shell\uff0cIPython \u63d0\u4f9b\u4e86\u66f4\u4e3a\u5f3a\u5927\u7684\u7f16\u8f91\u548c\u4ea4\u4e92\u529f\u80fd\uff08\u5982\u679c\u4f60\u7528 Pycharm \u7684\u8bdd\u4f1a\u5f97\u5230\u66f4\u597d\u7684\u4f53\u9a8c\uff09\uff0c\u6211\u4eec\u4f7f\u7528 pip \u6765\u5b89\u88c5 IPython\uff1a 1 2 pip install ipython conda install ipython \u7136\u540e\u6267\u884c\uff1a 1 ipython \u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u66f4\u53cb\u597d\u7684 Python \u4ea4\u4e92\u5f0f\u7a97\u53e3\uff0c\u540c\u65f6 IPython \u652f\u6301\u4e00\u4e9b Shell \u547d\u4ee4\uff0c\u5982 cd \u3001 ls \u7b49\uff08\u975e\u5185\u7f6e\u7684 Shell \u547d\u4ee4\u53ef\u4ee5\u901a\u8fc7\u524d\u9762\u52a0 ! \u8f6c\u4e49\uff0c IPython \u5c06\u4f1a\u4f7f\u7528\u539f\u751f\u7684 Shell \u6267\u884c\u8fd9\u4e00\u884c\u547d\u4ee4\uff09\uff0c\u8fd9\u76f8\u6bd4\u4e8e\u901a\u5e38\u60c5\u51b5\u4e0b\u4f7f\u7528 os.listdir() \u663e\u7136\u4f1a\u65b9\u4fbf\u4e00\u4e9b\uff0c\u800c\u9000\u51fa IPython \u4e5f\u53ea\u9700\u8981 exit \uff08\u800c\u4e0d\u662f exit() \uff09\u3002 \u865a\u62df\u73af\u5883 \u00b6 \u6709\u4e9b\u65f6\u5019\u6211\u4eec\u53ef\u80fd\u5728\u4e0d\u540c\u7684\u573a\u5408\u9700\u8981\u4e0d\u540c\u7684\u4e00\u4e9b\u5e93\uff0c\u800c\u8fd9\u4e9b\u5e93\u4e4b\u95f4\u5e76\u6ca1\u6709\u5f88\u597d\u7684\u517c\u5bb9\u6027\uff0c\u6216\u8005\u6709\u4e9b\u65f6\u5019\u6211\u4eec\u4f1a \u9700\u8981\u4f7f\u7528\u65e7\u7248\u7684\u7279\u6027 \u6ca1\u6709\u9002\u914d\u65b0\u7248\u672c\u7684 Python\uff0c\u79cd\u79cd\u539f\u56e0\u53ef\u80fd\u5bfc\u81f4\u9700\u8981\u540c\u65f6\u5b89\u88c5\u591a\u4e2a\u4e0d\u540c\u7248\u672c\u7684 Python \u5e76\u4f7f\u7528\u597d\u51e0\u5957\u4e92\u65a5\u7684\u5e93\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u9700\u8981 \u53cd\u590d\u5b89\u88c5\u5378\u8f7d \u5bf9\u8fd9\u4e9b\u73af\u5883\u505a\u51fa\u9694\u79bb\uff0c\u53ef\u4ee5\u901a\u8fc7 Conda \u6765\u7ba1\u7406\u4e0d\u540c\u7684\u865a\u62df\u73af\u5883\u3002\u5b89\u88c5\u597d Conda \u540e\u53ef\u4ee5\u770b\u5230\u547d\u4ee4\u884c\u4e2d\u591a\u4e86\u4e00\u4e2a (base) \uff0c\u8fd9\u8868\u660e\u76ee\u524d Conda \u542f\u7528\u7684\u662f\u9ed8\u8ba4\u7684\u73af\u5883\u3002 \u8d44\u6e90\u94fe\u63a5 \u00b6 2020 / 2021 \u6691\u57f9 Python \u73af\u5883\u914d\u7f6e\u6587\u6863 Pip Docs: http://pip.pypa.io/ Conda Docs: https://docs.conda.io","title":"Python \u5305\u7ba1\u7406"},{"location":"languages/python/pip/#python","text":"","title":"Python \u5305\u7ba1\u7406"},{"location":"languages/python/pip/#_1","text":"\u4f60\u6240\u4f7f\u7528\u7684\u64cd\u4f5c\u7cfb\u7edf\u7684\u5e38\u7528\u547d\u4ee4\u884c\u64cd\u4f5c \u77e5\u9053 Python \u662f\u4ec0\u4e48\uff0c\u4ee5\u53ca Python \u5982\u4f55\u542f\u52a8 \u77e5\u9053 Python \u53ef\u4ee5\u5b89\u88c5\u4e0d\u540c\u7684\u7b2c\u4e09\u65b9\u5e93","title":"\u524d\u7f6e\u77e5\u8bc6"},{"location":"languages/python/pip/#_2","text":"pip pip \u662f\u7528\u4e8e\u7ba1\u7406 Python \u5e93\u7684\u5de5\u5177\uff0c\u4f46\u662f\u5b89\u88c5 Python \u65f6\u4e00\u822c\u5e76\u4e0d\u4f1a\u81ea\u52a8\u5b89\u88c5 pip\uff0c\u56e0\u6b64\u4f60\u770b\u9700\u8981\u624b\u52a8\u5b89\u88c5\u3002 \u4f60\u53ef\u4ee5\u4f7f\u7528\u5305\u7ba1\u7406\u5668\u5b89\u88c5 python3-pip \u6765\u5b89\u88c5 pip\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5b98\u65b9\u811a\u672c\uff1a 1 2 curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py python3 get-pip.py # \u6ce8\u610f\u8fd9\u4e2a\u5730\u65b9\u4f7f\u7528\u4ec0\u4e48\u7248\u672c\u7684 Python \u5c31\u4f1a\u5b89\u88c5\u4ec0\u4e48\u7248\u672c\u7684 pip Conda \u5c3d\u7ba1\u5728\u524d\u6587\u4e2d\u6211\u4eec\u5df2\u7ecf\u8bb2\u8fc7\u5982\u4f55\u5b89\u88c5 Python \u89e3\u91ca\u5668\uff0c\u4f46\u662f\u5728\u9700\u8981\u590d\u6742\u7684\u73af\u5883\u7ba1\u7406\uff08\u6216\u8005\u60f3\u8981\u66f4\u7b80\u5355\u5730\u5b89\u88c5\uff09\u65f6\uff0c\u6211\u4eec\u5e38\u5e38\u4f1a\u7528\u5230 Anaconda \u6216\u7cbe\u7b80\u7248 Miniconda\u3002Anaconda \u672c\u2f9d\u2f83\u5e26\u4e86 UI \u4ee5\u53ca\u2f00\u5806\u5305\uff0c\u4f53\u79ef\u5e9e\u2f24\uff0c\u5982\u679c\u4f60\u6709\u5174\u8da3\u53ef\u4ee5\u9009\u62e9\u5b89\u88c5\u5b83\uff0c\u6b64\u5904\u6211\u8981\u8bb2\u7684\u662f\u5b83\u7684\u7cbe\u7b80\u7248 Miniconda\uff0c\u5220\u6389\u4e86\u2f24\u91cf\u9884\u88c5\u5305\uff0c\u7559\u4e0b\u4e86\u5c11\u6570\u5305\u4e0e\u7ba1\u7406\u90e8\u5206\u3002\u4e0b\u2faf\u7684\u6559\u7a0b\u9488\u5bf9 Miniconda \u800c\u2f94\uff0c\u5982\u679c\u4f60\u9009\u62e9\u5b89\u88c5 Anaconda \u540c\u6837\u53ef\u4ee5\u53c2\u8003\u4e0b\u2faf\u7684\u6559\u7a0b\uff0c\u56e0\u4e3a Miniconda \u7684\u529f\u80fd\u662f\u5b83\u7684\u2f26\u96c6\uff0c\u5c11\u4e86\u56fe\u5f62\u754c\u2faf\u4e0e\u2f00\u4e9b\u9884\u88c5\u5305\u3002 \u4e0b\u8f7d\u6211\u63a8\u8350\u2f64 TUNA \u6e90\uff0c\u2fbc\u6548\u4fbf\u5229\uff1a Miniconda3-py39_4.9.2-Windows-x86_64.exe \uff1aMiniconda for Windows Miniconda3-py39_4.9.2-MacOSX-x86_64.sh \uff1aMiniconda for Mac Miniconda3-py39_4.9.2-Linux-x86_64.sh \uff1aMiniconda for Linux Anaconda3-2021.05-Windows-x86_64.exe \uff1aAnaconda for Windows Anaconda3-2021.05-MacOSX-x86_64.sh \uff1aAnaconda for Mac Anaconda3-2021.05-Linux-x86_64.sh \uff1aAnaconda for Linux \u6ce8\u610f\u8fd9\u91cc\u7684 Mac \u53ea\u6709 x86_64 \u7248\u672c\uff0c\u4f7f\u7528 M1 Mac \u7684\u540c\u5b66\u6682\u65f6\u65e0\u6cd5\u5b89\u88c5 Conda\u3002","title":"\u5b89\u88c5\u5305\u7ba1\u7406\u5de5\u5177"},{"location":"languages/python/pip/#_3","text":"\u5982\u679c\u7528\u8fc7\u5176\u4ed6\u4efb\u4f55\u4e00\u79cd\u5305\u7ba1\u7406\u5668\u7684\u8bdd\uff0c\u60f3\u5fc5\u5df2\u7ecf\u719f\u6089\u4e86\u6362\u6e90\u8fd9\u4e2a\u8bdd\u9898\uff0c\u5373\u4f7f\u6ca1\u6709\u53d7\u5230 \u4f17\u6240\u5468\u77e5 \u795e\u79d8\u539f\u56e0\u5f71\u54cd\u7684\u6e90\u670d\u52a1\u5668\uff0c\u4ecd\u7136\u53d7\u5230\u8ddd\u79bb\u539f\u56e0\u7684\u5f71\u54cd\uff0c\u6548\u679c\u6ca1\u6709\u90a3\u4e48\u7406\u60f3\u3002\u8fd9\u91cc\u5efa\u8bae\u4f7f\u7528\u7531 TUNA \u534f\u4f1a\u7ef4\u62a4\u7684 TUNA \u6e90\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e00\u952e\u914d\u7f6e\u811a\u672c oh-my-tuna \uff1a 1 2 wget https://tuna.moe/oh-my-tuna/oh-my-tuna.py python3 oh-my-tuna.py \u987a\u5229\u7684\u8bdd\uff0c\u4f60\u5c06\u770b\u5230\u7c7b\u4f3c\u5982\u4e0b\u7684\u8f93\u51fa\uff1a 1 2 3 4 [ pypi ] : Activating... [ pypi ] : Mirror has been activated [ Anaconda ] : Activating... [ Anaconda ] : Mirror has been activated \u518d\u6267\u2f8f\uff08\u5982\u679c\u4f7f\u7528 pip\uff09\uff1a 1 pip config list \u8fd9\u5c06\u5f97\u5230\uff08\u6216\u5305\u542b\uff09\u5982\u4e0b\u8f93\u51fa\uff1a 1 global.index-url = 'https://pypi.tuna.tsinghua.edu.cn/simple' \u6216\u8005\u518d\u6267\u2f8f\uff08\u5982\u679c\u4f7f\u7528 Conda\uff09\uff1a 1 conda config --show-sources \u8fd9\u5c06\u5f97\u5230\uff08\u6216\u5305\u542b\uff09\u5982\u4e0b\u8f93\u51fa\uff1a 1 2 3 4 channels: - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/ - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/ - defaults \u8fd9\u5206\u522b\u8868\u660e\u4f60\u7684 pip \u548c Conda \u5df2\u7ecf\u6210\u529f\u8bbe\u7f6e\u6210\u4e86 TUNA \u6e90\u3002 \u5982\u679c\u5728 Windows \u4e0a\u8fd0\u884c\u9047\u5230\u95ee\u9898 \u622a\u6b62\u5199\u8fd9\u53e5\u8bdd\u7684\u65f6\u5019 oh-my-tuna \u8fd8\u6709\u4e2a\u5c0f\u95ee\u9898\u6ca1\u6709\u4fee\uff0c\u5728 Windows \u4e0a\u5c1d\u8bd5\u5224\u65ad\u7cfb\u7edf\u7c7b\u578b\u7684\u65f6\u5019\u53ef\u80fd\u5f15\u53d1\u4e00\u4e2a\u672a\u88ab\u5904\u7406\u7684 exception\uff0c\u4ece\u800c\u5bfc\u81f4\u811a\u672c\u9000\u51fa\uff0c\u4f5c\u4e3a\u4e00\u79cd\u4e34\u65f6\u7684\u4fee\u8865\u65b9\u6848\uff0c\u4f60\u53ef\u4ee5\u5c06 622 \u884c\u6539\u4e3a if uname is None or any(map(lambda x: x in uname, no_suffix_list)): \u540e\u91cd\u65b0\u8fd0\u884c\u8be5\u811a\u672c\u3002","title":"\u6362\u6e90"},{"location":"languages/python/pip/#_4","text":"\u4f7f\u7528 pip \u6216 Conda \u53ef\u4ee5\u8f7b\u677e\u5730\u7ba1\u7406\u672c\u5730\u7684 Python \u5305\uff0c\u4f8b\u5982\u5b89\u88c5\u722c\u866b\u5e38\u7528\u7684 BeautifulSoup4 \u5e93\u5982\u4e0b\uff1a 1 2 pip install BeautifulSoup4 conda install BeautifulSoup4 \u800c\u5378\u8f7d\u53ea\u9700\uff1a 1 2 pip uninstall BeautifulSoup4 conda remove BeautifulSoup4 \u4f7f\u7528 IPython \u4f5c\u4e3a\u4e00\u4e2a\u65e0\u5173\u7d27\u8981\u4f46\u662f\u4f1a\u8ba9\u4f60\u5f88\u723d\u7684\u5efa\u8bae\uff0c\u5728\u4f7f\u7528\u4ea4\u4e92\u5f0f\u7a97\u53e3\u65f6\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528 IPython \u4ee3\u66ff\u539f\u751f\u7684 Python \u89e3\u91ca\u5668\u3002\u76f8\u8f83\u4e8e\u672c\u5730\u7684 Python Shell\uff0cIPython \u63d0\u4f9b\u4e86\u66f4\u4e3a\u5f3a\u5927\u7684\u7f16\u8f91\u548c\u4ea4\u4e92\u529f\u80fd\uff08\u5982\u679c\u4f60\u7528 Pycharm \u7684\u8bdd\u4f1a\u5f97\u5230\u66f4\u597d\u7684\u4f53\u9a8c\uff09\uff0c\u6211\u4eec\u4f7f\u7528 pip \u6765\u5b89\u88c5 IPython\uff1a 1 2 pip install ipython conda install ipython \u7136\u540e\u6267\u884c\uff1a 1 ipython \u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u66f4\u53cb\u597d\u7684 Python \u4ea4\u4e92\u5f0f\u7a97\u53e3\uff0c\u540c\u65f6 IPython \u652f\u6301\u4e00\u4e9b Shell \u547d\u4ee4\uff0c\u5982 cd \u3001 ls \u7b49\uff08\u975e\u5185\u7f6e\u7684 Shell \u547d\u4ee4\u53ef\u4ee5\u901a\u8fc7\u524d\u9762\u52a0 ! \u8f6c\u4e49\uff0c IPython \u5c06\u4f1a\u4f7f\u7528\u539f\u751f\u7684 Shell \u6267\u884c\u8fd9\u4e00\u884c\u547d\u4ee4\uff09\uff0c\u8fd9\u76f8\u6bd4\u4e8e\u901a\u5e38\u60c5\u51b5\u4e0b\u4f7f\u7528 os.listdir() \u663e\u7136\u4f1a\u65b9\u4fbf\u4e00\u4e9b\uff0c\u800c\u9000\u51fa IPython \u4e5f\u53ea\u9700\u8981 exit \uff08\u800c\u4e0d\u662f exit() \uff09\u3002","title":"\u5b89\u88c5\u548c\u5378\u8f7d\u7b2c\u4e09\u65b9\u5e93"},{"location":"languages/python/pip/#_5","text":"\u6709\u4e9b\u65f6\u5019\u6211\u4eec\u53ef\u80fd\u5728\u4e0d\u540c\u7684\u573a\u5408\u9700\u8981\u4e0d\u540c\u7684\u4e00\u4e9b\u5e93\uff0c\u800c\u8fd9\u4e9b\u5e93\u4e4b\u95f4\u5e76\u6ca1\u6709\u5f88\u597d\u7684\u517c\u5bb9\u6027\uff0c\u6216\u8005\u6709\u4e9b\u65f6\u5019\u6211\u4eec\u4f1a \u9700\u8981\u4f7f\u7528\u65e7\u7248\u7684\u7279\u6027 \u6ca1\u6709\u9002\u914d\u65b0\u7248\u672c\u7684 Python\uff0c\u79cd\u79cd\u539f\u56e0\u53ef\u80fd\u5bfc\u81f4\u9700\u8981\u540c\u65f6\u5b89\u88c5\u591a\u4e2a\u4e0d\u540c\u7248\u672c\u7684 Python \u5e76\u4f7f\u7528\u597d\u51e0\u5957\u4e92\u65a5\u7684\u5e93\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u9700\u8981 \u53cd\u590d\u5b89\u88c5\u5378\u8f7d \u5bf9\u8fd9\u4e9b\u73af\u5883\u505a\u51fa\u9694\u79bb\uff0c\u53ef\u4ee5\u901a\u8fc7 Conda \u6765\u7ba1\u7406\u4e0d\u540c\u7684\u865a\u62df\u73af\u5883\u3002\u5b89\u88c5\u597d Conda \u540e\u53ef\u4ee5\u770b\u5230\u547d\u4ee4\u884c\u4e2d\u591a\u4e86\u4e00\u4e2a (base) \uff0c\u8fd9\u8868\u660e\u76ee\u524d Conda \u542f\u7528\u7684\u662f\u9ed8\u8ba4\u7684\u73af\u5883\u3002","title":"\u865a\u62df\u73af\u5883"},{"location":"languages/python/pip/#_6","text":"2020 / 2021 \u6691\u57f9 Python \u73af\u5883\u914d\u7f6e\u6587\u6863 Pip Docs: http://pip.pypa.io/ Conda Docs: https://docs.conda.io","title":"\u8d44\u6e90\u94fe\u63a5"},{"location":"languages/rust/","text":"Rust\u8bed\u8a00\u57fa\u7840 \u00b6 \u524d\u7f6e\u77e5\u8bc6 \u00b6 \u5177\u6709 C/C++ \u8bed\u8a00\u57fa\u7840\uff0c\u80fd\u591f\u7f16\u5199\u57fa\u672c\u7684 C/C++ \u4ee3\u7801 \u5177\u6709\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u57fa\u7840 \uff08\u5982\u679c\u4f60\u5df2\u7ecf\u719f\u6089 C++ \u7684\u9762\u5411\u5bf9\u8c61\u6a21\u578b\uff0c\u90a3\u4e48\u4f60\u53ef\u80fd\u9700\u8981\u82b1\u4e00\u70b9\u65f6\u95f4\u6765\u9002\u5e94 Rust\uff09 \u540e\u7eed\u62d3\u5c55 \u00b6 \u76f4\u5230\u73b0\u5728\uff0cRust \u4ecd\u7136\u662f\u4e00\u95e8\u4e3b\u8981\u7531\u7231\u597d\u8005\u4f7f\u7528\u800c\u975e\u5de5\u4e1a\u4f7f\u7528\u7684\u8bed\u8a00\u3002\u5c3d\u7ba1\u5982\u6b64\uff0cRust \u5df2\u7ecf\u5728\u8bb8\u591a\u9886\u57df\u5d2d\u9732\u5934\u89d2\uff1aFirefox \u6d4f\u89c8\u5668\u3001Linux \u7cfb\u7edf\u7b49\u5927\u578b\u5de5\u7a0b\u4e2d\u90fd\u6709Rust \u7684\u53c2\u4e0e\u3002 \u5728\u64cd\u4f5c\u7cfb\u7edf\u8fd9\u95e8\u8bfe\u7a0b\u4e2d\uff0c\u540c\u5b66\u4eec\u53ef\u4ee5\u91c7\u7528 Rust\u6846\u67b6 \u6765\u8fdb\u884c\u5b9e\u9a8c\u3002 \u6ce8\u610f \u00b6 \u4e0d\u540c\u4e8e JavaScript \u548c Python \u7b49\u8bed\u8a00\uff0cRust \u8bed\u8a00\u4e0a\u624b\u76f8\u5bf9\u8f83\u4e3a\u56f0\u96be\u3002\u56e0\u6b64\uff0c\u7f16\u5199\u672c\u6587\u6863\u7684\u76ee\u7684\u66f4\u7c7b\u4f3c\u4e8e\u5728\u5047\u5b9a\u8bfb\u8005\u62e5\u6709\u4e00\u5b9a C++ \u57fa\u7840\u7684\u60c5\u51b5\u4e0b\uff0c\u5411\u8bfb\u8005\u63d0\u4f9b\u4e00\u4e9b\u5b66\u4e60 Rust \u7684\u5bf9\u7167\u6027\u5e2e\u52a9\uff0c\u800c\u975e\u4e00\u4e2a Rust \u5165\u95e8\u6559\u7a0b\u3002\u5982\u679c\u5e0c\u671b\u83b7\u5f97\u4e00\u4efd Rust \u5165\u95e8\u6559\u7a0b\uff0c\u8bf7\u53c2\u9605\u4e0b\u65b9\u8d44\u6e90\u94fe\u63a5\u4e2d\u7684 The Book\u3002 \u8d44\u6e90\u94fe\u63a5 \u00b6 The Rust Programming Language\uff08\u4e5f\u88ab\u79f0\u4e3a The Book\uff09\u3002Rust \u5b98\u65b9\u7f51\u7ad9\u63a8\u8350\u7684 Rust \u8bed\u8a00\u5165\u95e8\u4e66\u7c4d https://doc.rust-lang.org/book/ The Book \u7684\u4e2d\u6587\u793e\u533a\u7ffb\u8bd1\u7248\uff0c\u7248\u672c\u53ef\u80fd\u843d\u540e\u4e8e\u82f1\u6587\u539f\u7248 https://rustwiki.org/zh-CN/book/ Rustlings\u3002Rust \u5b98\u65b9\u63a8\u8350\u7684\u53e6\u4e00\u79cd\u5165\u95e8\u65b9\u5f0f\uff0c\u9002\u5408\u559c\u6b22\u8fb9\u5b66\u8fb9\u505a\u7684\u540c\u5b66 https://github.com/rust-lang/rustlings/","title":"Rust\u8bed\u8a00\u57fa\u7840"},{"location":"languages/rust/#rust","text":"","title":"Rust\u8bed\u8a00\u57fa\u7840"},{"location":"languages/rust/#_1","text":"\u5177\u6709 C/C++ \u8bed\u8a00\u57fa\u7840\uff0c\u80fd\u591f\u7f16\u5199\u57fa\u672c\u7684 C/C++ \u4ee3\u7801 \u5177\u6709\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u57fa\u7840 \uff08\u5982\u679c\u4f60\u5df2\u7ecf\u719f\u6089 C++ \u7684\u9762\u5411\u5bf9\u8c61\u6a21\u578b\uff0c\u90a3\u4e48\u4f60\u53ef\u80fd\u9700\u8981\u82b1\u4e00\u70b9\u65f6\u95f4\u6765\u9002\u5e94 Rust\uff09","title":"\u524d\u7f6e\u77e5\u8bc6"},{"location":"languages/rust/#_2","text":"\u76f4\u5230\u73b0\u5728\uff0cRust \u4ecd\u7136\u662f\u4e00\u95e8\u4e3b\u8981\u7531\u7231\u597d\u8005\u4f7f\u7528\u800c\u975e\u5de5\u4e1a\u4f7f\u7528\u7684\u8bed\u8a00\u3002\u5c3d\u7ba1\u5982\u6b64\uff0cRust \u5df2\u7ecf\u5728\u8bb8\u591a\u9886\u57df\u5d2d\u9732\u5934\u89d2\uff1aFirefox \u6d4f\u89c8\u5668\u3001Linux \u7cfb\u7edf\u7b49\u5927\u578b\u5de5\u7a0b\u4e2d\u90fd\u6709Rust \u7684\u53c2\u4e0e\u3002 \u5728\u64cd\u4f5c\u7cfb\u7edf\u8fd9\u95e8\u8bfe\u7a0b\u4e2d\uff0c\u540c\u5b66\u4eec\u53ef\u4ee5\u91c7\u7528 Rust\u6846\u67b6 \u6765\u8fdb\u884c\u5b9e\u9a8c\u3002","title":"\u540e\u7eed\u62d3\u5c55"},{"location":"languages/rust/#_3","text":"\u4e0d\u540c\u4e8e JavaScript \u548c Python \u7b49\u8bed\u8a00\uff0cRust \u8bed\u8a00\u4e0a\u624b\u76f8\u5bf9\u8f83\u4e3a\u56f0\u96be\u3002\u56e0\u6b64\uff0c\u7f16\u5199\u672c\u6587\u6863\u7684\u76ee\u7684\u66f4\u7c7b\u4f3c\u4e8e\u5728\u5047\u5b9a\u8bfb\u8005\u62e5\u6709\u4e00\u5b9a C++ \u57fa\u7840\u7684\u60c5\u51b5\u4e0b\uff0c\u5411\u8bfb\u8005\u63d0\u4f9b\u4e00\u4e9b\u5b66\u4e60 Rust \u7684\u5bf9\u7167\u6027\u5e2e\u52a9\uff0c\u800c\u975e\u4e00\u4e2a Rust \u5165\u95e8\u6559\u7a0b\u3002\u5982\u679c\u5e0c\u671b\u83b7\u5f97\u4e00\u4efd Rust \u5165\u95e8\u6559\u7a0b\uff0c\u8bf7\u53c2\u9605\u4e0b\u65b9\u8d44\u6e90\u94fe\u63a5\u4e2d\u7684 The Book\u3002","title":"\u6ce8\u610f"},{"location":"languages/rust/#_4","text":"The Rust Programming Language\uff08\u4e5f\u88ab\u79f0\u4e3a The Book\uff09\u3002Rust \u5b98\u65b9\u7f51\u7ad9\u63a8\u8350\u7684 Rust \u8bed\u8a00\u5165\u95e8\u4e66\u7c4d https://doc.rust-lang.org/book/ The Book \u7684\u4e2d\u6587\u793e\u533a\u7ffb\u8bd1\u7248\uff0c\u7248\u672c\u53ef\u80fd\u843d\u540e\u4e8e\u82f1\u6587\u539f\u7248 https://rustwiki.org/zh-CN/book/ Rustlings\u3002Rust \u5b98\u65b9\u63a8\u8350\u7684\u53e6\u4e00\u79cd\u5165\u95e8\u65b9\u5f0f\uff0c\u9002\u5408\u559c\u6b22\u8fb9\u5b66\u8fb9\u505a\u7684\u540c\u5b66 https://github.com/rust-lang/rustlings/","title":"\u8d44\u6e90\u94fe\u63a5"},{"location":"languages/rust/control/","text":"Rust \u4e2d\u7684\u6d41\u7a0b\u63a7\u5236 \u00b6 \u6761\u4ef6\u8868\u8fbe\u5f0f \u00b6 Rust \u4e2d\u7684\u6761\u4ef6\u8bed\u53e5\u7c7b\u4f3c C/C++\uff0c\u90fd\u662f\u901a\u8fc7 if \u548c else \u6765\u63a7\u5236\u3002 if \u540e\u9762\u7684\u6761\u4ef6\u53ef\u4ee5\u7701\u7565\u62ec\u53f7\uff0c\u7f16\u8bd1\u5668\u4e5f\u63a8\u8350\u8fd9\u6837\u505a\u3002 1 2 3 4 5 6 let age = 17 ; if age < 18 { println! ( \"\u60a8\u672a\u6210\u5e74\" ); } else { println! ( \"\u60a8\u6210\u5e74\u4e86\" ); } \u6ce8\u610f\uff0c if \u5b9e\u9645\u4e0a\u662f\u8868\u8fbe\u5f0f\u800c\u975e\u8bed\u53e5\uff0c\u56e0\u6b64\u53ef\u4ee5\u62e5\u6709\u503c\u3002 1 2 3 4 5 6 let age = 17 ; let adulthood = if age < 18 { false } else { true }; Rust \u662f\u4e00\u95e8\u57fa\u4e8e\u8868\u8fbe\u5f0f\u7684\u8bed\u8a00\uff0c\u8fd9\u4ec5\u4ec5\u662f\u51b0\u5c71\u4e00\u89d2\u3002\u8bfb\u8005\u5728\u5b9e\u9645\u91c7\u7528 Rust \u7f16\u7a0b\u65f6\u5c06\u4f1a\u5bf9\u8fd9\u4e00\u8bbe\u8ba1\u6709\u66f4\u6df1\u523b\u7684\u7406\u89e3\u3002 \u4e0e C++ \u7684\u5bf9\u7167 Rust \u4e2d\u6ca1\u6709 C/C++ \u4e2d\u5e38\u89c1\u7684\u4e09\u5143\u8868\u8fbe\u5f0f\uff0c\u4f46\u662f\u53ef\u4ee5\u7528 if-else \u8868\u8fbe\u5f0f\u6765\u5b9e\u73b0\u76f8\u540c\u7684\u529f\u80fd\u3002 \u5faa\u73af\u8bed\u53e5 \u00b6 for \u5faa\u73af \u00b6 for \u5faa\u73af\u7528\u4e8e\u904d\u5386\u5bb9\u5668\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\uff0c\u8fd9\u4e0e C \u98ce\u683c\u7684 for \u5faa\u73af\u5927\u4e3a\u4e0d\u540c\uff0c\u800c\u4e0e Python \u66f4\u52a0\u7c7b\u4f3c\u3002 1 2 3 4 5 let mut sum = 0 ; for i in ( 1 .. 10 ) { // (a .. b) \u521b\u5efa\u4e86\u4e00\u4e2a\u6570\u5b57\u5e8f\u5217 Range\uff0c\u8868\u793a\u534a\u5f00\u534a\u95ed\u533a\u95f4 [a, b) \u4e2d\u7684\u6240\u6709\u6574\u6570\u3002 sum += i ; } // \u5b9e\u9645\u4e0a\u8fd9\u91cc\u7684\u6c42\u548c\u53ef\u4ee5\u901a\u8fc7\u8fed\u4ee3\u5668\u7528\u66f4\u4f18\u96c5\u548c\u5feb\u901f\u7684\u65b9\u6cd5\u91cd\u5199\uff0c\u6b64\u5904\u4ec5\u4ec5\u4f5c\u4e3a\u6f14\u793a\u3002 while \u5faa\u73af \u00b6 while \u5faa\u73af\u4e0e C/C++ \u8f83\u4e3a\u7c7b\u4f3c\uff0c\u4ec5\u4ec5\u7ed9\u51fa\u4ee3\u7801\u6837\u4f8b\u3002 1 2 3 4 5 6 let mut sum = 0 ; let mut a = 1 ; while a < 10 { sum += a ; a += 1 ; } loop \u5faa\u73af \u00b6 loop \u5faa\u73af\u662f\u663e\u5f0f\u7684\u6b7b\u5faa\u73af\uff0c\u4f1a\u4e00\u76f4\u91cd\u590d\u6267\u884c\u76f4\u5230\u663e\u5f0f break \u4e3a\u6b62\u3002 1 2 3 4 5 6 7 8 9 let mut sum = 0 ; let mut a = 1 ; loop { sum += a ; a += 1 ; if a == 10 { break ; } } \u5b9e\u9645\u4e0a\uff0c\u4ee5\u4e0a\u7684\u4e09\u79cd\u5faa\u73af\u4e5f\u90fd\u662f\u8868\u8fbe\u5f0f\uff0c\u800c\u4e14 loop \u4e2d\u7684 break \u53ef\u4ee5\u8fd4\u56de\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c\u3002\u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e2a 3n + 1 \u95ee\u9898\u7684\u4ee3\u7801\u6765\u5c55\u793a\u5b83\u7684\u8868\u8fbe\u5f0f\u672c\u8d28\uff1a 1 2 3 4 5 6 7 8 9 10 11 let mut a = 19112021 ; // \u53ef\u4ee5\u662f\u8981\u9a8c\u8bc1\u7684\u4efb\u610f\u5927\u6574\u6570\uff0c\u53ea\u8981\u4e0d\u8d8a\u754c\u5373\u53ef let must_be_one = loop { if a == 1 { break a ; } else if a % 2 == 1 { a = 3 * a + 1 ; } else { a = a / 2 ; } }; // must_be_one \u7684\u503c\u5e94\u5f53\u4e3a 1 // \u5982\u679c\u4f60\u53d1\u73b0\u7a0b\u5e8f\u6ca1\u6709\u7ed3\u675f\uff0c\u8bf7\u591a\u7b49\u4e00\u4f1a","title":"Rust \u4e2d\u7684\u6d41\u7a0b\u63a7\u5236"},{"location":"languages/rust/control/#rust","text":"","title":"Rust \u4e2d\u7684\u6d41\u7a0b\u63a7\u5236"},{"location":"languages/rust/control/#_1","text":"Rust \u4e2d\u7684\u6761\u4ef6\u8bed\u53e5\u7c7b\u4f3c C/C++\uff0c\u90fd\u662f\u901a\u8fc7 if \u548c else \u6765\u63a7\u5236\u3002 if \u540e\u9762\u7684\u6761\u4ef6\u53ef\u4ee5\u7701\u7565\u62ec\u53f7\uff0c\u7f16\u8bd1\u5668\u4e5f\u63a8\u8350\u8fd9\u6837\u505a\u3002 1 2 3 4 5 6 let age = 17 ; if age < 18 { println! ( \"\u60a8\u672a\u6210\u5e74\" ); } else { println! ( \"\u60a8\u6210\u5e74\u4e86\" ); } \u6ce8\u610f\uff0c if \u5b9e\u9645\u4e0a\u662f\u8868\u8fbe\u5f0f\u800c\u975e\u8bed\u53e5\uff0c\u56e0\u6b64\u53ef\u4ee5\u62e5\u6709\u503c\u3002 1 2 3 4 5 6 let age = 17 ; let adulthood = if age < 18 { false } else { true }; Rust \u662f\u4e00\u95e8\u57fa\u4e8e\u8868\u8fbe\u5f0f\u7684\u8bed\u8a00\uff0c\u8fd9\u4ec5\u4ec5\u662f\u51b0\u5c71\u4e00\u89d2\u3002\u8bfb\u8005\u5728\u5b9e\u9645\u91c7\u7528 Rust \u7f16\u7a0b\u65f6\u5c06\u4f1a\u5bf9\u8fd9\u4e00\u8bbe\u8ba1\u6709\u66f4\u6df1\u523b\u7684\u7406\u89e3\u3002 \u4e0e C++ \u7684\u5bf9\u7167 Rust \u4e2d\u6ca1\u6709 C/C++ \u4e2d\u5e38\u89c1\u7684\u4e09\u5143\u8868\u8fbe\u5f0f\uff0c\u4f46\u662f\u53ef\u4ee5\u7528 if-else \u8868\u8fbe\u5f0f\u6765\u5b9e\u73b0\u76f8\u540c\u7684\u529f\u80fd\u3002","title":"\u6761\u4ef6\u8868\u8fbe\u5f0f"},{"location":"languages/rust/control/#_2","text":"","title":"\u5faa\u73af\u8bed\u53e5"},{"location":"languages/rust/control/#for","text":"for \u5faa\u73af\u7528\u4e8e\u904d\u5386\u5bb9\u5668\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\uff0c\u8fd9\u4e0e C \u98ce\u683c\u7684 for \u5faa\u73af\u5927\u4e3a\u4e0d\u540c\uff0c\u800c\u4e0e Python \u66f4\u52a0\u7c7b\u4f3c\u3002 1 2 3 4 5 let mut sum = 0 ; for i in ( 1 .. 10 ) { // (a .. b) \u521b\u5efa\u4e86\u4e00\u4e2a\u6570\u5b57\u5e8f\u5217 Range\uff0c\u8868\u793a\u534a\u5f00\u534a\u95ed\u533a\u95f4 [a, b) \u4e2d\u7684\u6240\u6709\u6574\u6570\u3002 sum += i ; } // \u5b9e\u9645\u4e0a\u8fd9\u91cc\u7684\u6c42\u548c\u53ef\u4ee5\u901a\u8fc7\u8fed\u4ee3\u5668\u7528\u66f4\u4f18\u96c5\u548c\u5feb\u901f\u7684\u65b9\u6cd5\u91cd\u5199\uff0c\u6b64\u5904\u4ec5\u4ec5\u4f5c\u4e3a\u6f14\u793a\u3002","title":"for \u5faa\u73af"},{"location":"languages/rust/control/#while","text":"while \u5faa\u73af\u4e0e C/C++ \u8f83\u4e3a\u7c7b\u4f3c\uff0c\u4ec5\u4ec5\u7ed9\u51fa\u4ee3\u7801\u6837\u4f8b\u3002 1 2 3 4 5 6 let mut sum = 0 ; let mut a = 1 ; while a < 10 { sum += a ; a += 1 ; }","title":"while \u5faa\u73af"},{"location":"languages/rust/control/#loop","text":"loop \u5faa\u73af\u662f\u663e\u5f0f\u7684\u6b7b\u5faa\u73af\uff0c\u4f1a\u4e00\u76f4\u91cd\u590d\u6267\u884c\u76f4\u5230\u663e\u5f0f break \u4e3a\u6b62\u3002 1 2 3 4 5 6 7 8 9 let mut sum = 0 ; let mut a = 1 ; loop { sum += a ; a += 1 ; if a == 10 { break ; } } \u5b9e\u9645\u4e0a\uff0c\u4ee5\u4e0a\u7684\u4e09\u79cd\u5faa\u73af\u4e5f\u90fd\u662f\u8868\u8fbe\u5f0f\uff0c\u800c\u4e14 loop \u4e2d\u7684 break \u53ef\u4ee5\u8fd4\u56de\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c\u3002\u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e2a 3n + 1 \u95ee\u9898\u7684\u4ee3\u7801\u6765\u5c55\u793a\u5b83\u7684\u8868\u8fbe\u5f0f\u672c\u8d28\uff1a 1 2 3 4 5 6 7 8 9 10 11 let mut a = 19112021 ; // \u53ef\u4ee5\u662f\u8981\u9a8c\u8bc1\u7684\u4efb\u610f\u5927\u6574\u6570\uff0c\u53ea\u8981\u4e0d\u8d8a\u754c\u5373\u53ef let must_be_one = loop { if a == 1 { break a ; } else if a % 2 == 1 { a = 3 * a + 1 ; } else { a = a / 2 ; } }; // must_be_one \u7684\u503c\u5e94\u5f53\u4e3a 1 // \u5982\u679c\u4f60\u53d1\u73b0\u7a0b\u5e8f\u6ca1\u6709\u7ed3\u675f\uff0c\u8bf7\u591a\u7b49\u4e00\u4f1a","title":"loop \u5faa\u73af"},{"location":"languages/rust/function/","text":"Rust \u4e2d\u7684\u51fd\u6570 \u00b6 \u51fd\u6570\u58f0\u660e \u00b6 Rust \u4e2d\u901a\u8fc7 fn \u5173\u952e\u5b57\u58f0\u660e\u51fd\u6570\uff0c\u5728\u51fd\u6570\u540d\u540e\u7684\u62ec\u53f7\u5185\u58f0\u660e\u53c2\u6570\uff08\u5fc5\u987b\u6307\u5b9a\u7c7b\u578b\uff09\uff0c\u5728 -> \u540e\u9762\u6307\u5b9a\u8fd4\u56de\u7c7b\u578b\uff08\u5982\u679c\u6ca1\u6709\uff0c\u53ef\u4ee5\u4e0d\u52a0\uff09\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 fn func_1 () { println! ( \"Hello\" ); } // \u65e0\u53c2\u6570\uff0c\u65e0\u8fd4\u56de\u503c\u7684\u51fd\u6570 fn func_with_param ( i : u32 , j : u32 ) { println! ( \"I love you {} times\" , i + j ); } // \u6709\u53c2\u6570\u7684\u51fd\u6570 fn func_with_return_value ( i : i32 , j : i32 ) -> i32 { return i + j ; } // \u6709\u8fd4\u56de\u503c\u7684\u51fd\u6570 fn func_with_return_value_mod ( i : i32 , j : i32 ) -> i32 { i + j } // \u5728\u6709\u8fd4\u56de\u503c\u7684\u51fd\u6570\u4e2d\uff0creturn \u8bed\u53e5\u5e76\u4e0d\u662f\u5fc5\u9700\u7684\u3002\u5728\u8fd9\u91cc // \u7531\u5927\u62ec\u53f7\u5305\u88f9\u7684\u4ee3\u7801\u5757\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0ci + j \u5c31\u662f\u8868\u8fbe\u5f0f\u7684\u503c\uff0c // \u540c\u6837\u4e5f\u5c31\u662f\u51fd\u6570\u7684\u8fd4\u56de\u503c\u3002 \u4e0e C++ \u7684\u5bf9\u7167 \u5728 C/C++ \u4e2d\uff0c\u51fd\u6570\u7684\u58f0\u660e\u7684\u7c7b\u578b\u5728\u524d\uff0c\u6ca1\u6709\u989d\u5916\u5173\u952e\u5b57\u3002\u8bfb\u8005\u53ef\u80fd\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\u6765\u9002\u5e94 Rust \u7684\u8bed\u6cd5\u3002 \u51fd\u6570\u8c03\u7528 \u00b6 Rust \u7684\u51fd\u6570\u8c03\u7528\u8bed\u6cd5\u4e0e C/C++ \u6ca1\u6709\u592a\u5927\u533a\u522b\u3002 1 2 3 let a = 1 ; let b = 2 ; let c = func_with_return_value ( a , b );","title":"Rust \u7684\u51fd\u6570"},{"location":"languages/rust/function/#rust","text":"","title":"Rust \u4e2d\u7684\u51fd\u6570"},{"location":"languages/rust/function/#_1","text":"Rust \u4e2d\u901a\u8fc7 fn \u5173\u952e\u5b57\u58f0\u660e\u51fd\u6570\uff0c\u5728\u51fd\u6570\u540d\u540e\u7684\u62ec\u53f7\u5185\u58f0\u660e\u53c2\u6570\uff08\u5fc5\u987b\u6307\u5b9a\u7c7b\u578b\uff09\uff0c\u5728 -> \u540e\u9762\u6307\u5b9a\u8fd4\u56de\u7c7b\u578b\uff08\u5982\u679c\u6ca1\u6709\uff0c\u53ef\u4ee5\u4e0d\u52a0\uff09\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 fn func_1 () { println! ( \"Hello\" ); } // \u65e0\u53c2\u6570\uff0c\u65e0\u8fd4\u56de\u503c\u7684\u51fd\u6570 fn func_with_param ( i : u32 , j : u32 ) { println! ( \"I love you {} times\" , i + j ); } // \u6709\u53c2\u6570\u7684\u51fd\u6570 fn func_with_return_value ( i : i32 , j : i32 ) -> i32 { return i + j ; } // \u6709\u8fd4\u56de\u503c\u7684\u51fd\u6570 fn func_with_return_value_mod ( i : i32 , j : i32 ) -> i32 { i + j } // \u5728\u6709\u8fd4\u56de\u503c\u7684\u51fd\u6570\u4e2d\uff0creturn \u8bed\u53e5\u5e76\u4e0d\u662f\u5fc5\u9700\u7684\u3002\u5728\u8fd9\u91cc // \u7531\u5927\u62ec\u53f7\u5305\u88f9\u7684\u4ee3\u7801\u5757\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0ci + j \u5c31\u662f\u8868\u8fbe\u5f0f\u7684\u503c\uff0c // \u540c\u6837\u4e5f\u5c31\u662f\u51fd\u6570\u7684\u8fd4\u56de\u503c\u3002 \u4e0e C++ \u7684\u5bf9\u7167 \u5728 C/C++ \u4e2d\uff0c\u51fd\u6570\u7684\u58f0\u660e\u7684\u7c7b\u578b\u5728\u524d\uff0c\u6ca1\u6709\u989d\u5916\u5173\u952e\u5b57\u3002\u8bfb\u8005\u53ef\u80fd\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\u6765\u9002\u5e94 Rust \u7684\u8bed\u6cd5\u3002","title":"\u51fd\u6570\u58f0\u660e"},{"location":"languages/rust/function/#_2","text":"Rust \u7684\u51fd\u6570\u8c03\u7528\u8bed\u6cd5\u4e0e C/C++ \u6ca1\u6709\u592a\u5927\u533a\u522b\u3002 1 2 3 let a = 1 ; let b = 2 ; let c = func_with_return_value ( a , b );","title":"\u51fd\u6570\u8c03\u7528"},{"location":"languages/rust/matching/","text":"Rust \u7684\u679a\u4e3e\u548c\u5339\u914d \u00b6 \u679a\u4e3e\u7c7b\u578b \u00b6 Rust \u7684\u679a\u4e3e\u901a\u8fc7\u5173\u952e\u5b57 enum \u5b9a\u4e49\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 enum CoinType { Dime , // \u4e00\u89d2 Half , // \u4e94\u89d2 Yuan , // \u4e00\u5143 } // \u8fd9\u4e2a\u679a\u4e3e\u91cf\u4ec5\u4ec5\u6807\u5b9a\u4e86\u786c\u5e01\u7684\u7c7b\u578b struct Coin { kind : CoinType , value : u32 } // \u8fd9\u4e2a\u7ed3\u6784\u4f53\u8bb0\u5f55\u4e86\u786c\u5e01\u7684\u7c7b\u578b\u548c\u5bf9\u5e94\u7684\u9762\u503c let coin = Coin { kind : CoinType :: Dime , value : 10 }; Rust \u7684\u679a\u4e3e\u91cf\u4e2d\u53ef\u4ee5\u4fdd\u5b58\u6570\u636e\u6210\u5458\uff0c\u5341\u5206\u5f3a\u5927\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 enum Coin { Dime ( u32 ), Half ( u32 ), Yuan ( u32 ) } // \u5728\u4e00\u4e2a\u679a\u4e3e\u7c7b\u578b\u4e2d\u5b8c\u6210\u7c7b\u578b\u548c\u9762\u503c\u7684\u8bb0\u5f55 let coin = Coin :: Dime ( 10 ); enum AnotherEnum { TypeA ( i32 ), TypeB ( u32 , f64 ), TypeC ( String ), TypeD } // \u679a\u4e3e\u7c7b\u578b\u7684\u6570\u636e\u6210\u5458\u53ef\u4ee5\u4e92\u4e0d\u76f8\u540c \u4e0e C++ \u7684\u5bf9\u7167 C/C++ \u7684\u679a\u4e3e\u7c7b\u578b\u5e95\u5c42\u662f\u6574\u6570\uff0c\u4e0d\u80fd\u62e5\u6709\u6570\u636e\u6210\u5458\u3002\u8fd9\u662f Rust \u548c C/C++ \u7684\u4e00\u4e2a\u5f88\u5927\u7684\u533a\u522b\u3002\u679a\u4e3e\u7c7b\u578b\u662f Rust \u63d0\u4f9b\u7ed9\u6211\u4eec\u7684\u6709\u529b\u6b66\u5668\u3002 \u5339\u914d \u00b6 match \u8868\u8fbe\u5f0f \u00b6 match \u8868\u8fbe\u5f0f\u53ef\u4ee5\u5bf9\u679a\u4e3e\u91cf\u8fdb\u884c\u5339\u914d\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 enum Operator { Add ( i32 , i32 ), Sub ( i32 , i32 ), Mul ( i32 , i32 ), Div ( i32 , i32 ), Rem ( i32 , i32 ) } let op = Operator :: Add ( 10 , 5 ); let value = match op { Operator :: Add ( a , b ) => a + b , Operator :: Sub ( a , b ) => a - b , Operator :: Mul ( a , b ) => a * b , Operator :: Div ( a , b ) => a / b , _ => a % b // _ \u5339\u914d\u4efb\u610f\u503c\uff0c\u7c7b\u4f3c default }; \u4e0e C++ \u7684\u5bf9\u7167 match \u8868\u8fbe\u5f0f\u4e0e C/C++ \u7684 switch-case \u6709\u7c7b\u4f3c\u4e4b\u5904\uff0c\u4f46\u8fdc\u6bd4\u540e\u8005\u5f3a\u5927\u3002\u8bfb\u8005\u53ef\u80fd\u9700\u8981\u82b1\u4e00\u70b9\u65f6\u95f4\u6765\u9002\u5e94 Rust \u7684 enum \u548c match \u8868\u8fbe\u5f0f\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u4eab\u53d7\u5b83\u7f8e\u5999\u7684\u6a21\u5f0f\u5339\u914d\u8bed\u6cd5\u4e86\u3002 if-let \u8868\u8fbe\u5f0f \u00b6 if-let \u63d0\u4f9b\u4e86\u4e00\u79cd\u7b80\u5316\u7684\u6a21\u5f0f\u5339\u914d\u673a\u5236\u3002 1 2 3 4 5 6 7 let op = Operator :: Add ( 10 , 5 ); let value = if let Operator :: Add ( a , b ) = op { a + b } else { - 1 };","title":"Rust \u6a21\u5f0f\u5339\u914d"},{"location":"languages/rust/matching/#rust","text":"","title":"Rust \u7684\u679a\u4e3e\u548c\u5339\u914d"},{"location":"languages/rust/matching/#_1","text":"Rust \u7684\u679a\u4e3e\u901a\u8fc7\u5173\u952e\u5b57 enum \u5b9a\u4e49\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 enum CoinType { Dime , // \u4e00\u89d2 Half , // \u4e94\u89d2 Yuan , // \u4e00\u5143 } // \u8fd9\u4e2a\u679a\u4e3e\u91cf\u4ec5\u4ec5\u6807\u5b9a\u4e86\u786c\u5e01\u7684\u7c7b\u578b struct Coin { kind : CoinType , value : u32 } // \u8fd9\u4e2a\u7ed3\u6784\u4f53\u8bb0\u5f55\u4e86\u786c\u5e01\u7684\u7c7b\u578b\u548c\u5bf9\u5e94\u7684\u9762\u503c let coin = Coin { kind : CoinType :: Dime , value : 10 }; Rust \u7684\u679a\u4e3e\u91cf\u4e2d\u53ef\u4ee5\u4fdd\u5b58\u6570\u636e\u6210\u5458\uff0c\u5341\u5206\u5f3a\u5927\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 enum Coin { Dime ( u32 ), Half ( u32 ), Yuan ( u32 ) } // \u5728\u4e00\u4e2a\u679a\u4e3e\u7c7b\u578b\u4e2d\u5b8c\u6210\u7c7b\u578b\u548c\u9762\u503c\u7684\u8bb0\u5f55 let coin = Coin :: Dime ( 10 ); enum AnotherEnum { TypeA ( i32 ), TypeB ( u32 , f64 ), TypeC ( String ), TypeD } // \u679a\u4e3e\u7c7b\u578b\u7684\u6570\u636e\u6210\u5458\u53ef\u4ee5\u4e92\u4e0d\u76f8\u540c \u4e0e C++ \u7684\u5bf9\u7167 C/C++ \u7684\u679a\u4e3e\u7c7b\u578b\u5e95\u5c42\u662f\u6574\u6570\uff0c\u4e0d\u80fd\u62e5\u6709\u6570\u636e\u6210\u5458\u3002\u8fd9\u662f Rust \u548c C/C++ \u7684\u4e00\u4e2a\u5f88\u5927\u7684\u533a\u522b\u3002\u679a\u4e3e\u7c7b\u578b\u662f Rust \u63d0\u4f9b\u7ed9\u6211\u4eec\u7684\u6709\u529b\u6b66\u5668\u3002","title":"\u679a\u4e3e\u7c7b\u578b"},{"location":"languages/rust/matching/#_2","text":"","title":"\u5339\u914d"},{"location":"languages/rust/matching/#match","text":"match \u8868\u8fbe\u5f0f\u53ef\u4ee5\u5bf9\u679a\u4e3e\u91cf\u8fdb\u884c\u5339\u914d\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 enum Operator { Add ( i32 , i32 ), Sub ( i32 , i32 ), Mul ( i32 , i32 ), Div ( i32 , i32 ), Rem ( i32 , i32 ) } let op = Operator :: Add ( 10 , 5 ); let value = match op { Operator :: Add ( a , b ) => a + b , Operator :: Sub ( a , b ) => a - b , Operator :: Mul ( a , b ) => a * b , Operator :: Div ( a , b ) => a / b , _ => a % b // _ \u5339\u914d\u4efb\u610f\u503c\uff0c\u7c7b\u4f3c default }; \u4e0e C++ \u7684\u5bf9\u7167 match \u8868\u8fbe\u5f0f\u4e0e C/C++ \u7684 switch-case \u6709\u7c7b\u4f3c\u4e4b\u5904\uff0c\u4f46\u8fdc\u6bd4\u540e\u8005\u5f3a\u5927\u3002\u8bfb\u8005\u53ef\u80fd\u9700\u8981\u82b1\u4e00\u70b9\u65f6\u95f4\u6765\u9002\u5e94 Rust \u7684 enum \u548c match \u8868\u8fbe\u5f0f\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u4eab\u53d7\u5b83\u7f8e\u5999\u7684\u6a21\u5f0f\u5339\u914d\u8bed\u6cd5\u4e86\u3002","title":"match \u8868\u8fbe\u5f0f"},{"location":"languages/rust/matching/#if-let","text":"if-let \u63d0\u4f9b\u4e86\u4e00\u79cd\u7b80\u5316\u7684\u6a21\u5f0f\u5339\u914d\u673a\u5236\u3002 1 2 3 4 5 6 7 let op = Operator :: Add ( 10 , 5 ); let value = if let Operator :: Add ( a , b ) = op { a + b } else { - 1 };","title":"if-let \u8868\u8fbe\u5f0f"},{"location":"languages/rust/reference/","text":"Rust \u4e2d\u7684\u5f15\u7528 \u00b6 \u53ef\u53d8\u4e0e\u4e0d\u53ef\u53d8\u5f15\u7528 \u00b6 Rust \u7528 & \u8fd0\u7b97\u7b26\u6765\u521b\u5efa\u53d8\u91cf\u7684\u5f15\u7528\uff0c\u7528 * \u8fd0\u7b97\u7b26\u6765\u89e3\u5f15\u7528 1 2 3 let a = 1 ; // a: i32 let b = & a ; // b: &i32 println! ( \"{}\" , * b ); // 1 \u4e0e\u58f0\u660e\u53d8\u91cf\u7c7b\u4f3c\uff0c\u5f15\u7528\u9ed8\u8ba4\u4e5f\u662f\u4e0d\u53ef\u53d8\u7684\uff0c\u7528 &mut \u6765\u521b\u5efa\u53ef\u53d8\u5f15\u7528\u3002 1 2 3 let mut a = 1 ; // a: i32 let b = & a ; // b: &i32 * b = 1 ; // b \u662f\u4e0d\u53ef\u53d8\u5f15\u7528\uff0c\u7f16\u8bd1\u4e0d\u901a\u8fc7 1 2 3 let mut a = 1 ; let b = & mut a ; // b: &mut i32 * b = 2 ; // b \u662f\u53ef\u53d8\u5f15\u7528\uff0c\u7f16\u8bd1\u901a\u8fc7","title":"Rust \u7684\u5f15\u7528\u4e0e\u501f\u7528"},{"location":"languages/rust/reference/#rust","text":"","title":"Rust \u4e2d\u7684\u5f15\u7528"},{"location":"languages/rust/reference/#_1","text":"Rust \u7528 & \u8fd0\u7b97\u7b26\u6765\u521b\u5efa\u53d8\u91cf\u7684\u5f15\u7528\uff0c\u7528 * \u8fd0\u7b97\u7b26\u6765\u89e3\u5f15\u7528 1 2 3 let a = 1 ; // a: i32 let b = & a ; // b: &i32 println! ( \"{}\" , * b ); // 1 \u4e0e\u58f0\u660e\u53d8\u91cf\u7c7b\u4f3c\uff0c\u5f15\u7528\u9ed8\u8ba4\u4e5f\u662f\u4e0d\u53ef\u53d8\u7684\uff0c\u7528 &mut \u6765\u521b\u5efa\u53ef\u53d8\u5f15\u7528\u3002 1 2 3 let mut a = 1 ; // a: i32 let b = & a ; // b: &i32 * b = 1 ; // b \u662f\u4e0d\u53ef\u53d8\u5f15\u7528\uff0c\u7f16\u8bd1\u4e0d\u901a\u8fc7 1 2 3 let mut a = 1 ; let b = & mut a ; // b: &mut i32 * b = 2 ; // b \u662f\u53ef\u53d8\u5f15\u7528\uff0c\u7f16\u8bd1\u901a\u8fc7","title":"\u53ef\u53d8\u4e0e\u4e0d\u53ef\u53d8\u5f15\u7528"},{"location":"languages/rust/struct/","text":"Rust \u7684\u7ed3\u6784\u4f53\u4e0e\u7279\u6027 \u00b6 \u4e0e C++ \u7684\u5bf9\u7167 C++ \u7684 struct \u672c\u8d28\u4e0a\u662f\u9ed8\u8ba4 public \u7684 class \uff0c\u56e0\u6b64\u6211\u4eec\u63a5\u4e0b\u6765\u4ec5\u8ba8\u8bba Rust struct \u548c C++ class \u7684\u533a\u522b\u3002 Rust \u4e2d\u6ca1\u6709\u201c\u7c7b\u201d\u7684\u6982\u5ff5\uff0c\u4f46\u662f\u4fdd\u7559\u4e86\u7ed3\u6784\u4f53\u3002 1 2 3 4 5 6 7 8 9 struct Person { age : u32 , name : String } let alice = Person { age : 20 , name : String :: from ( \"Alice\" ) } \u7ed3\u6784\u4f53\u53ef\u4ee5\u6709\u65b9\u6cd5\u548c\u5173\u8054\u51fd\u6570\uff0c\u5728 impl \u5757\u4e2d\u5b9e\u73b0\u3002\u5305\u542b self \u3001 &self \u6216 &mut self \u7684\u51fd\u6570\u4e3a\u65b9\u6cd5\uff0c\u7531 \u7ed3\u6784\u4f53.\u65b9\u6cd5\u540d() \u8c03\u7528\uff1b\u4e0d\u5305\u542b\u7684\u4e3a\u5173\u8054\u51fd\u6570\uff0c\u7528 \u7ed3\u6784\u4f53\u540d::\u5173\u8054\u51fd\u6570\u540d() \u7684\u65b9\u5f0f\u8c03\u7528\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 impl Person { fn new ( age : u32 , name : String ) -> Self { Self { age : age , name : name } } fn hello ( & self ) { println! ( \"Hello! My name is {}.\" , name ); } } let bob = Person :: new ( 19 , String :: from ( \"Bob\" )); bob . hello (); \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\u5c06\u8f93\u51fa\uff1a 1 Hello! My name is Bob. \u4e0e C++ \u7684\u5bf9\u7167 \u4e0a\u6587\u6240\u8ff0\u7684\u65b9\u6cd5\u548c\u5173\u8054\u51fd\u6570\u5206\u522b\u7c7b\u4f3c C++ \u4e2d\u7684\u65b9\u6cd5\u548c\u7c7b\u65b9\u6cd5\uff08\u5373\u5728\u7c7b\u4e2d\u7531 static \u4fee\u9970\u7684\u51fd\u6570\uff0c\u4e0d\u5173\u8054\u5b9e\u4f8b\u5bf9\u8c61\u800c\u5173\u8054\u7c7b\u672c\u8eab\uff09\u3002 \u5728\u6784\u9020\u548c\u6790\u6784\u65b9\u9762\uff0c\u7531\u4e8e C++ \u91c7\u7528 RAII \u8fdb\u884c\u5185\u5b58\u7ba1\u7406\uff0c\u6bcf\u4e00\u4e2a\u7c7b\u90fd\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a\u6784\u9020\u51fd\u6570\u4ee5\u53ca\u4e00\u4e2a\u6790\u6784\u51fd\u6570\u3002Rust \u6ca1\u6709\u6784\u9020\u51fd\u6570\uff0c\u4f46\u6211\u4eec\u5e38\u7528\u4e00\u4e2a\u5173\u8054\u51fd\u6570\u6765\u8fdb\u884c\u7ed3\u6784\u4f53\u5bf9\u8c61\u7684\u6784\u5efa\uff08\u5982\u4e0a\u6587\u7684 Person::new \uff09\u3002Rust \u91c7\u7528 Drop trait \u6765\u7ba1\u7406\u5bf9\u8c61\u7684\u9500\u6bc1\uff0c\u5173\u4e8e trait \u7684\u8ba8\u8bba\u5c06\u5728\u540e\u7eed\u5c55\u5f00\u3002 \u5bf9\u4e8e\u201c\u4e0d\u540c\u7c7b\u5171\u4eab\u76f8\u540c\u7684\u884c\u4e3a\u201d\u8fd9\u6837\u7684\u8981\u6c42\uff0cRust \u4f7f\u7528\u4e00\u4e2a\u53eb\u505a trait \u7684\u673a\u5236\u6765\u5b9e\u73b0\u3002 1 2 3 4 5 6 7 struct Cat {} struct Dog {} trait CanMakeSound { fn make_sound ( & self ) -> String ; } \u4e0a\u6587\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53eb\u505a CanMakeSound \u7684 trait \uff0c\u5728\u5176\u4e2d\u58f0\u660e\u4e86 make_sound \u65b9\u6cd5\u800c\u6ca1\u6709\u5b9e\u73b0\u3002\u5982\u679c\u8981\u4e3a\u4e00\u4e2a\u7c7b\u578b\u5b9e\u73b0 trait \uff0c\u5219\u9700\u8981\u5b9e\u73b0\u8be5 trait \u7684\u6240\u6709\u65b9\u6cd5\u3002\u5b9e\u73b0 trait \u7684\u8bed\u6cd5\u5f62\u5982 impl \u7279\u6027\u540d for \u7c7b\u578b\u540d \u3002 1 2 3 4 5 6 7 8 9 10 11 impl CanMakeSound for Cat { fn make_sound ( & self ) -> String { String :: from ( \"Meow\" ) } } impl CanMakeSound for Dog { fn make_sound ( & self ) -> String { String :: from ( \"Woof\" ) } } \u5728\u4e00\u4e2a\u7c7b\u578b\u5b9e\u73b0\u8be5 trait \u540e\uff0c\u8fd9\u4e2a\u7c7b\u578b\u7684\u53d8\u91cf\u5c31\u53ef\u4ee5\u4f7f\u7528\u5176\u65b9\u6cd5\u3002 1 2 3 4 let cat = Cat {}; let dog = Dog {}; println! ( \"{} \\n {}\" , cat . make_sound (), dog . make_sound ()); \u4e0e C++ \u7684\u5bf9\u7167 \u5728 C++ \u4e2d\uff0c\u4e0d\u540c\u7c7b\u8981\u60f3\u5171\u4eab\u884c\u4e3a\uff0c\u5219\u9700\u8981\u58f0\u660e\u4e00\u4e2a\u57fa\u7c7b\uff0c\u5c06\u5e0c\u671b\u5171\u4eab\u7684\u884c\u4e3a\u58f0\u660e\u4e3a\u57fa\u7c7b\u4e2d\u7684\u865a\u51fd\u6570\uff0c\u7136\u540e\u5206\u522b\u7ee7\u627f\u8be5\u57fa\u7c7b\u5e76\u91cd\u8f7d\u5e0c\u671b\u5171\u4eab\u7684\u51fd\u6570\u3002\u4f8b\u5982\uff0c\u5bf9\u4e0a\u6587\u7684 Cat \u548c Dog \uff0c\u5728 C++ \u4e2d\u4f1a\u8fd9\u6837\u5b9e\u73b0\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 class CanMakeSound { virtual std :: string make_sound () = 0 ; }; class Cat : public CanMakeSound { std :: string make_sound () override { return \"Meow\" ; } }; class Dog : public CanMakeSound { std :: string make_sound () override { return \"Woof\" ; } }; \u5982\u679c\u4ec5\u4ec5\u662f\u76f4\u63a5\u8fdb\u884c\u65b9\u6cd5\u8c03\u7528\uff0c\u90a3\u4e48\u4f7f\u7528\u6216\u4e0d\u4f7f\u7528 trait \u770b\u8d77\u6765\u5e76\u65e0\u592a\u5927\u533a\u522b\u3002\u4f46 trait \u8fd8\u53ef\u4ee5\u7528\u4e8e\u51fd\u6570\u53c2\u6570\u7684\u58f0\u660e\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5bf9\u53c2\u6570\u7c7b\u578b\u52a0\u4ee5\u9650\u5b9a\u800c\u4e0d\u9700\u8981\u5b8c\u5168\u786e\u5b9a\u7c7b\u578b\uff1a 1 2 3 fn animal_make_sound ( animal : impl CanMakeSound ) -> String { animal . make_sound () } \u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u662f Trait Bound \u8bed\u6cd5\u7684\u4e00\u4e2a\u8bed\u6cd5\u7cd6\u3002\u5982\u679c\u5c55\u5f00\u5199\u5219\u5f62\u5f0f\u5982\u4e0b\uff1a 1 2 3 fn animal_make_sound < T : CanMakeSound > ( animal : T ) -> String { animal . make_sound () } Trait Bound \u4e5f\u53ef\u4ee5\u4e0d\u4ec5\u5305\u542b\u4e00\u4e2a trait 1 2 fn some_function < T : Display + Clone , U : Clone + Debug > ( t : T , u : U ) -> i32 ; // \u6b64\u5904\u7684 Display\u3001Clone \u548c Debug \u90fd\u662f rust \u8bed\u8a00\u63d0\u4f9b\u7684 trait \u4e5f\u53ef\u4ee5\u91c7\u7528 where \u4ece\u53e5\u6765\u7b80\u5316\u8fc7\u957f\u7684 Trait Bound 1 2 fn some_function < T , U > ( t : T , u : U ) -> i32 where T : Display + Clone , U : Clone + Debug ;","title":"Rust \u7684\u7ed3\u6784\u4f53"},{"location":"languages/rust/struct/#rust","text":"\u4e0e C++ \u7684\u5bf9\u7167 C++ \u7684 struct \u672c\u8d28\u4e0a\u662f\u9ed8\u8ba4 public \u7684 class \uff0c\u56e0\u6b64\u6211\u4eec\u63a5\u4e0b\u6765\u4ec5\u8ba8\u8bba Rust struct \u548c C++ class \u7684\u533a\u522b\u3002 Rust \u4e2d\u6ca1\u6709\u201c\u7c7b\u201d\u7684\u6982\u5ff5\uff0c\u4f46\u662f\u4fdd\u7559\u4e86\u7ed3\u6784\u4f53\u3002 1 2 3 4 5 6 7 8 9 struct Person { age : u32 , name : String } let alice = Person { age : 20 , name : String :: from ( \"Alice\" ) } \u7ed3\u6784\u4f53\u53ef\u4ee5\u6709\u65b9\u6cd5\u548c\u5173\u8054\u51fd\u6570\uff0c\u5728 impl \u5757\u4e2d\u5b9e\u73b0\u3002\u5305\u542b self \u3001 &self \u6216 &mut self \u7684\u51fd\u6570\u4e3a\u65b9\u6cd5\uff0c\u7531 \u7ed3\u6784\u4f53.\u65b9\u6cd5\u540d() \u8c03\u7528\uff1b\u4e0d\u5305\u542b\u7684\u4e3a\u5173\u8054\u51fd\u6570\uff0c\u7528 \u7ed3\u6784\u4f53\u540d::\u5173\u8054\u51fd\u6570\u540d() \u7684\u65b9\u5f0f\u8c03\u7528\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 impl Person { fn new ( age : u32 , name : String ) -> Self { Self { age : age , name : name } } fn hello ( & self ) { println! ( \"Hello! My name is {}.\" , name ); } } let bob = Person :: new ( 19 , String :: from ( \"Bob\" )); bob . hello (); \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\u5c06\u8f93\u51fa\uff1a 1 Hello! My name is Bob. \u4e0e C++ \u7684\u5bf9\u7167 \u4e0a\u6587\u6240\u8ff0\u7684\u65b9\u6cd5\u548c\u5173\u8054\u51fd\u6570\u5206\u522b\u7c7b\u4f3c C++ \u4e2d\u7684\u65b9\u6cd5\u548c\u7c7b\u65b9\u6cd5\uff08\u5373\u5728\u7c7b\u4e2d\u7531 static \u4fee\u9970\u7684\u51fd\u6570\uff0c\u4e0d\u5173\u8054\u5b9e\u4f8b\u5bf9\u8c61\u800c\u5173\u8054\u7c7b\u672c\u8eab\uff09\u3002 \u5728\u6784\u9020\u548c\u6790\u6784\u65b9\u9762\uff0c\u7531\u4e8e C++ \u91c7\u7528 RAII \u8fdb\u884c\u5185\u5b58\u7ba1\u7406\uff0c\u6bcf\u4e00\u4e2a\u7c7b\u90fd\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a\u6784\u9020\u51fd\u6570\u4ee5\u53ca\u4e00\u4e2a\u6790\u6784\u51fd\u6570\u3002Rust \u6ca1\u6709\u6784\u9020\u51fd\u6570\uff0c\u4f46\u6211\u4eec\u5e38\u7528\u4e00\u4e2a\u5173\u8054\u51fd\u6570\u6765\u8fdb\u884c\u7ed3\u6784\u4f53\u5bf9\u8c61\u7684\u6784\u5efa\uff08\u5982\u4e0a\u6587\u7684 Person::new \uff09\u3002Rust \u91c7\u7528 Drop trait \u6765\u7ba1\u7406\u5bf9\u8c61\u7684\u9500\u6bc1\uff0c\u5173\u4e8e trait \u7684\u8ba8\u8bba\u5c06\u5728\u540e\u7eed\u5c55\u5f00\u3002 \u5bf9\u4e8e\u201c\u4e0d\u540c\u7c7b\u5171\u4eab\u76f8\u540c\u7684\u884c\u4e3a\u201d\u8fd9\u6837\u7684\u8981\u6c42\uff0cRust \u4f7f\u7528\u4e00\u4e2a\u53eb\u505a trait \u7684\u673a\u5236\u6765\u5b9e\u73b0\u3002 1 2 3 4 5 6 7 struct Cat {} struct Dog {} trait CanMakeSound { fn make_sound ( & self ) -> String ; } \u4e0a\u6587\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53eb\u505a CanMakeSound \u7684 trait \uff0c\u5728\u5176\u4e2d\u58f0\u660e\u4e86 make_sound \u65b9\u6cd5\u800c\u6ca1\u6709\u5b9e\u73b0\u3002\u5982\u679c\u8981\u4e3a\u4e00\u4e2a\u7c7b\u578b\u5b9e\u73b0 trait \uff0c\u5219\u9700\u8981\u5b9e\u73b0\u8be5 trait \u7684\u6240\u6709\u65b9\u6cd5\u3002\u5b9e\u73b0 trait \u7684\u8bed\u6cd5\u5f62\u5982 impl \u7279\u6027\u540d for \u7c7b\u578b\u540d \u3002 1 2 3 4 5 6 7 8 9 10 11 impl CanMakeSound for Cat { fn make_sound ( & self ) -> String { String :: from ( \"Meow\" ) } } impl CanMakeSound for Dog { fn make_sound ( & self ) -> String { String :: from ( \"Woof\" ) } } \u5728\u4e00\u4e2a\u7c7b\u578b\u5b9e\u73b0\u8be5 trait \u540e\uff0c\u8fd9\u4e2a\u7c7b\u578b\u7684\u53d8\u91cf\u5c31\u53ef\u4ee5\u4f7f\u7528\u5176\u65b9\u6cd5\u3002 1 2 3 4 let cat = Cat {}; let dog = Dog {}; println! ( \"{} \\n {}\" , cat . make_sound (), dog . make_sound ()); \u4e0e C++ \u7684\u5bf9\u7167 \u5728 C++ \u4e2d\uff0c\u4e0d\u540c\u7c7b\u8981\u60f3\u5171\u4eab\u884c\u4e3a\uff0c\u5219\u9700\u8981\u58f0\u660e\u4e00\u4e2a\u57fa\u7c7b\uff0c\u5c06\u5e0c\u671b\u5171\u4eab\u7684\u884c\u4e3a\u58f0\u660e\u4e3a\u57fa\u7c7b\u4e2d\u7684\u865a\u51fd\u6570\uff0c\u7136\u540e\u5206\u522b\u7ee7\u627f\u8be5\u57fa\u7c7b\u5e76\u91cd\u8f7d\u5e0c\u671b\u5171\u4eab\u7684\u51fd\u6570\u3002\u4f8b\u5982\uff0c\u5bf9\u4e0a\u6587\u7684 Cat \u548c Dog \uff0c\u5728 C++ \u4e2d\u4f1a\u8fd9\u6837\u5b9e\u73b0\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 class CanMakeSound { virtual std :: string make_sound () = 0 ; }; class Cat : public CanMakeSound { std :: string make_sound () override { return \"Meow\" ; } }; class Dog : public CanMakeSound { std :: string make_sound () override { return \"Woof\" ; } }; \u5982\u679c\u4ec5\u4ec5\u662f\u76f4\u63a5\u8fdb\u884c\u65b9\u6cd5\u8c03\u7528\uff0c\u90a3\u4e48\u4f7f\u7528\u6216\u4e0d\u4f7f\u7528 trait \u770b\u8d77\u6765\u5e76\u65e0\u592a\u5927\u533a\u522b\u3002\u4f46 trait \u8fd8\u53ef\u4ee5\u7528\u4e8e\u51fd\u6570\u53c2\u6570\u7684\u58f0\u660e\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5bf9\u53c2\u6570\u7c7b\u578b\u52a0\u4ee5\u9650\u5b9a\u800c\u4e0d\u9700\u8981\u5b8c\u5168\u786e\u5b9a\u7c7b\u578b\uff1a 1 2 3 fn animal_make_sound ( animal : impl CanMakeSound ) -> String { animal . make_sound () } \u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u662f Trait Bound \u8bed\u6cd5\u7684\u4e00\u4e2a\u8bed\u6cd5\u7cd6\u3002\u5982\u679c\u5c55\u5f00\u5199\u5219\u5f62\u5f0f\u5982\u4e0b\uff1a 1 2 3 fn animal_make_sound < T : CanMakeSound > ( animal : T ) -> String { animal . make_sound () } Trait Bound \u4e5f\u53ef\u4ee5\u4e0d\u4ec5\u5305\u542b\u4e00\u4e2a trait 1 2 fn some_function < T : Display + Clone , U : Clone + Debug > ( t : T , u : U ) -> i32 ; // \u6b64\u5904\u7684 Display\u3001Clone \u548c Debug \u90fd\u662f rust \u8bed\u8a00\u63d0\u4f9b\u7684 trait \u4e5f\u53ef\u4ee5\u91c7\u7528 where \u4ece\u53e5\u6765\u7b80\u5316\u8fc7\u957f\u7684 Trait Bound 1 2 fn some_function < T , U > ( t : T , u : U ) -> i32 where T : Display + Clone , U : Clone + Debug ;","title":"Rust \u7684\u7ed3\u6784\u4f53\u4e0e\u7279\u6027"},{"location":"languages/rust/variable/","text":"Rust \u7684\u53d8\u91cf\u4e0e\u7c7b\u578b \u00b6 Caution \u672c\u9875\u5c1a\u672a\u5b8c\u5de5 \u53d8\u91cf\u58f0\u660e \u00b6 Rust \u8bed\u8a00\u4e2d\u901a\u8fc7 let \u5173\u952e\u5b57\u6765\u58f0\u660e\u53d8\u91cf\u3002Rust \u662f\u4e00\u95e8\u9759\u6001\u5f3a\u7c7b\u578b\u8bed\u8a00\uff0c\u56e0\u6b64\u4efb\u4f55\u4e00\u4e2a\u53d8\u91cf\u90fd\u6709\u4e00\u4e2a\u786e\u5b9a\u3001\u4e0d\u53ef\u53d8\u7684\u7c7b\u578b\u3002\u5982\u679c\u5728\u58f0\u660e\u540c\u65f6\u521d\u59cb\u5316\uff0c\u5219\u53ef\u4ee5\u4f9d\u9760\u7f16\u8bd1\u5668\u7684\u7c7b\u578b\u63a8\u65ad\u6765\u5f97\u5230\u53d8\u91cf\u7c7b\u578b\uff0c\u4e0d\u4e00\u5b9a\u9700\u8981\u663e\u5f0f\u6307\u5b9a\u7c7b\u578b\u3002 1 2 3 4 let a : i32 = 1 ; // \u5b8c\u6574\u7684\u53d8\u91cf\u58f0\u660e\u548c\u521d\u59cb\u5316 let b : i32 ; // \u663e\u5f0f\u58f0\u660e\u7c7b\u578b\uff0c\u672a\u521d\u59cb\u5316 let c = 1 ; // \u58f0\u660e\u540c\u65f6\u521d\u59cb\u5316\uff0c\u7c7b\u578b\u7531\u7f16\u8bd1\u5668\u63a8\u65ad\u4e3a i32 // let d; // \u65e2\u6ca1\u6709\u521d\u59cb\u5316\u53c8\u6ca1\u6709\u6807\u6ce8\u7c7b\u578b\uff0c\u7f16\u8bd1\u5668\u65e0\u4ece\u5f97\u77e5\u7c7b\u578b\uff0c\u7f16\u8bd1\u65e0\u6cd5\u901a\u8fc7 \u4e0e C++ \u7684\u5bf9\u7167 Rust \u7684 let \u5173\u952e\u5b57\u4e0e C++11 \u4e2d\u5f15\u5165\u7684 auto \u5173\u952e\u5b57\u6709\u4e00\u4e9b\u7c7b\u4f3c\u4e4b\u5904\uff0c\u4f8b\u5982\u5728\u58f0\u660e\u65f6\u521d\u59cb\u5316\u7684\u53d8\u91cf\u53ef\u4ee5\u81ea\u884c\u63a8\u65ad\u7c7b\u578b\u3002 \u53ef\u53d8\u6027\u4e0e\u4e0d\u53ef\u53d8\u6027 \u00b6 Rust \u8bed\u8a00\u4e0e\u8bb8\u591a\u5176\u4ed6\u8bed\u8a00\u4e0d\u540c\u7684\u4e00\u70b9\u5728\u4e8e\u53d8\u91cf\u7684 \u9ed8\u8ba4\u4e0d\u53ef\u53d8\u6027 \uff0c\u5373\u53d8\u91cf\u7684\u503c\u9ed8\u8ba4\u662f\u4e0d\u53ef\u4fee\u6539\u7684\u3002 1 2 let a = 1 ; // a = 2; // \u53d8\u91cf a \u9ed8\u8ba4\u4e0d\u53ef\u53d8\uff0c\u7f16\u8bd1\u65e0\u6cd5\u901a\u8fc7 \u8981\u58f0\u660e\u4e00\u4e2a\u53ef\u53d8\u7684\u53d8\u91cf\uff0c\u9700\u8981\u52a0\u4e0a mut \u5173\u952e\u5b57\u3002 1 2 let mut a = 1 ; a = 2 ; // \u53d8\u91cf a \u53ef\u53d8\uff0cOK \u4e0e C++ \u7684\u5bf9\u7167 \u7b80\u5355\u5730\u770b\uff0c let \u58f0\u660e\u7684\u53d8\u91cf\u66f4\u7c7b\u4f3c\u4e8e C++ \u4e2d\u7528 const \u58f0\u660e\u7684\u5e38\u91cf\uff0c\u800c let mut \u58f0\u660e\u7684\u53d8\u91cf\u66f4\u7c7b\u4f3c\u4e8e\u201c\u666e\u901a\u201d\u7684 C++ \u53d8\u91cf\u3002 \u8fd9\u79cd\u8bf4\u6cd5\u662f\u4e0d\u4e25\u683c\u7684\uff0c\u4f46\u662f\u8fd9\u6837\u601d\u8003\u53ef\u4ee5\u5feb\u901f\u4e0a\u624b\u3002 \u5982\u4f55\u6253\u5370\u4e00\u4e2a\u53d8\u91cf 1 2 let a : i32 = 1 ; println! ( \"{}\" , a ); \u8fd9\u91cc\u7684 println! \u662f\u4e00\u4e2a\u5b8f\uff0c\u4f46\u4f7f\u7528\u8d77\u6765\u4e0e\u51fd\u6570\u5f88\u76f8\u4f3c\u3002 \u53d8\u91cf\u7c7b\u578b \u00b6 \u57fa\u672c\u7c7b\u578b \u00b6 \u6574\u6570 Rust \u4e2d\u7684\u6574\u6570\u6709\u8bb8\u591a\u79cd\uff0c\u6309\u7167\u957f\u5ea6\u4e0d\u540c\u3001\u6709\u65e0\u7b26\u53f7\u8fdb\u884c\u533a\u5206\u3002 Rust\u7684\u591a\u6570\u6574\u6570\u547d\u540d\u9075\u5faa\u201c\u5b57\u6bcd + \u6570\u5b57\u201d\u8fd9\u4e00\u7ed3\u6784\u3002\u5176\u4e2d\uff0c\u4ee5\u5b57\u6bcd i \u5f00\u5934\u7684\u7c7b\u578b\u8868\u793a\u5b83\u662f \u6709\u7b26\u53f7\u6574\u6570 \uff0c\u800c\u4ee5\u5b57\u6bcd u \u5f00\u5934\u7684\u7c7b\u578b\u8868\u793a\u5b83\u662f \u65e0\u7b26\u53f7\u6574\u6570 \uff0c\u5b57\u6bcd\u540e\u9762\u7684\u6570\u5b57\u5219\u8868\u793a\u8fd9\u4e00\u7c7b\u578b\u7684\u957f\u5ea6\uff0c\u4ece\u6700\u77ed\u7684 8 \u5b57\u8282\u5230\u6700\u957f\u7684 128 \u5b57\u8282\uff0c\u6709 i8, u8, i16, u16, i32, u32, i64, u64, i128, u128 \u8fd9\u4e00\u7cfb\u5217\u7c7b\u578b\u3002 \u7f16\u8bd1\u5668\u5c06\u6574\u5f62\u5b57\u9762\u91cf\u9ed8\u8ba4\u7c7b\u578b\u63a8\u5bfc\u4e3a i32 \u3002 1 2 let a = 1 ; // a \u7684\u7c7b\u578b\u4e3a\uff08\u9690\u5f0f\u63a8\u5bfc\u4e3a\uff09i32 let b : u32 = 1 ; // b \u7684\u7c7b\u578b\uff08\u663e\u5f0f\u58f0\u660e\u4e3a\uff09u32 \u4e0e C++ \u7684\u5bf9\u7167 C/C++ \u6570\u636e\u6a21\u578b \u5e76\u6ca1\u6709\u7ed9\u6574\u5f62\u89c4\u5b9a\u5177\u4f53\u957f\u5ea6\uff0c\u53ea\u89c4\u5b9a\u4e86\u4e0d\u540c\u6574\u5f62\u4e4b\u95f4\u957f\u5ea6\u7684\u6bd4\u8f83\u5173\u7cfb\u548c\u6700\u5c0f\u957f\u5ea6\u3002\u5728\u5e38\u89c1\u7684 64 \u4f4d\u673a\u5668\u4e0a\uff0c char, short, int, long long \u5206\u522b\u8868\u793a 8\u300116\u300132 \u548c 64 \u4f4d\u5e26\u7b26\u53f7\u6574\u6570\uff0c\u5206\u522b\u53ef\u4ee5\u5bf9\u5e94 Rust \u7684 i8, i16, i32, i64 \uff0c\u65e0\u7b26\u53f7\u6574\u6570\u7c7b\u4f3c\u3002 \u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u5982\u679c\u9700\u8981\u786e\u5b9a\u957f\u5ea6\u7684\u6574\u6570\uff0c\u53ef\u4ee5\u4f7f\u7528 cstdlib \u4e2d\u7684 int32_t \u7b49\u7c7b\u578b\uff0c\u5b83\u4eec\u5728\u4e0d\u540c\u5e73\u53f0\u4e0a\u6709\u4e0d\u540c\u7684 typedef \uff0c\u5bf9\u5e94\u4e0d\u540c\u7684\u5177\u4f53\u7c7b\u578b\u3002 C/C++ \u6ca1\u6709\u7edf\u4e00\u7684 128 \u4f4d\u6574\u6570\u6807\u51c6\u3002 \u540c\u65f6\uff0cRust \u8fd8\u63d0\u4f9b\u4e86\u4e24\u4e2a\u7279\u6b8a\u7684\u7c7b\u578b isize \u548c usize \uff0c\u8fd9\u4e24\u4e2a\u7c7b\u578b\u7684\u957f\u5ea6\u7531\u5e73\u53f0\u51b3\u5b9a\uff0c\u5728 32 \u4f4d\u5e73\u53f0\u4e0a\u662f 32 \u4f4d\uff0c\u5728 64 \u4f4d\u5e73\u53f0\u4e0a\u662f 64 \u4f4d\u3002\u8fd9\u4e00\u8bbe\u8ba1\u65b9\u4fbf\u4e86\u5185\u5b58\u4e2d\u7684\u5bfb\u5740\uff0c\u5982\u6570\u7ec4\u4e0b\u6807\u5c31\u63a5\u53d7 usize \u800c\u4e0d\u662f u32 \u7c7b\u578b\u3002 \u6d6e\u70b9\u6570 \u7c7b\u4f3c\u6574\u5f62\uff0cRust \u4e2d\u7684\u6d6e\u70b9\u578b\u4ee5\u5b57\u6bcd f \u5f00\u5934\uff0c\u540e\u9762\u662f\u5bf9\u5e94\u7684\u957f\u5ea6\uff0c\u4f46\u53ea\u6709 f32 \u548c f64 \u4e24\u79cd\u7c7b\u578b\u3002 \u7f16\u8bd1\u5668\u5c06\u6d6e\u70b9\u5b57\u9762\u91cf\u9ed8\u8ba4\u7c7b\u578b\u63a8\u5bfc\u4e3a f64 \u3002 1 2 let f : f32 = 1.0 ; let g = 2.0 ; // \u7c7b\u578b\u9ed8\u8ba4\u63a8\u5bfc\u4e3a f64 \u5e03\u5c14\u503c Rust \u4e2d\u7684\u5e03\u5c14\u578b\u4e3a bool \uff0c\u6709\u4e14\u4ec5\u6709\u4e24\u4e2a\u503c true \u548c false \u3002 \u5b57\u7b26\u7c7b\u578b Rust \u4e2d\u4e00\u4e2a\u5b57\u7b26\u7531\u5355\u5f15\u53f7\u5305\u88f9\uff0c\u8868\u793a\u4e00\u4e2a Unicode \u5b57\u7b26 \u800c\u975e\u4e00\u4e2a ASCII \u5b57\u7b26\u6216\u5b57\u8282 \u3002 1 2 let ascii_char_z = 'z' ; let heart_eyed_cat = '\ud83d\ude3b' ; \u4e0e C++ \u7684\u5bf9\u7167 Rust \u5728\u8bbe\u8ba1\u65f6\u5c31\u8003\u8651\u5230\u4e86\u591a\u8bed\u8a00\u652f\u6301\uff0c\u56e0\u6b64\u91c7\u53d6\u4e86\u8fd9\u6837\u7684\u8bbe\u8ba1\u3002\u5982\u679c\u5e0c\u671b\u4e0e C/C++ \u4e2d\u7684 unsigned char \u5bf9\u5e94\uff0c\u5373\u8868\u793a \u4e00\u4e2a\u5b57\u8282 \uff0c\u5e94\u5f53\u4f7f\u7528 Rust \u4e2d\u7684 u8 \u7c7b\u578b\u3002 \u590d\u5408\u7c7b\u578b \u00b6 \u5143\u7ec4 \u5143\u7ec4\u5c06\u51e0\u4e2a\u76f8\u540c\u6216\u4e0d\u540c\u7684\u7c7b\u578b\u7ec4\u5408\u4e3a\u4e00\u4e2a\u590d\u5408\u7c7b\u578b\u3002 1 2 let tuple_1 : ( i32 , f64 , bool ) = ( 1 , 2.0 , false ); // \u663e\u5f0f\u58f0\u660e\u7c7b\u578b let tuple_2 = ( 3 , 1.0 , true ); // \u9690\u5f0f\u63a8\u65ad\u7c7b\u578b \u5143\u7ec4\u652f\u6301\u901a\u8fc7\u6a21\u5f0f\u5339\u914d\u6765\u89e3\u6784\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u70b9 . \u6765\u8bbf\u95ee\u5176\u5143\u7d20\u3002 1 2 3 4 5 6 7 let tuple = ( 1 , 2.0 , false ); let ( x , y , z ) = tuple ; // \u4e0a\u9762\u7684 let \u8bed\u53e5\u521b\u5efa\u4e86 i32 \u7c7b\u578b\u7684\u53d8\u91cf x\u3001f64 \u7c7b\u578b\u7684\u53d8\u91cf y \u548c bool \u7c7b\u578b\u7684\u53d8\u91cf z let xx = tuple . 0 ; let yy = tuple . 1 ; let zz = tuple . 2 ; // xx, yy, zz \u5206\u522b\u5bf9\u5e94 x, y, z \u4e0e C++ \u7684\u5bf9\u7167 C++ \u8bed\u8a00\u6807\u51c6\u4e2d\u5e76\u6ca1\u6709\u5143\u7ec4\u7c7b\u578b\uff0c\u4f46\u6807\u51c6\u5e93\u4e2d\u63d0\u4f9b\u4e86\u529f\u80fd\u548c\u8bed\u4e49\u90fd\u76f8\u540c\u7684 std::tuple \u3002\u4f46\u603b\u7684\u6765\u8bf4\uff0cC++ \u7684\u5143\u7ec4\u4f7f\u7528\u8f83\u4e3a\u7e41\u7410\uff0c\u4e0d\u5982 Rust \u4e2d\u4f5c\u4e3a\u57fa\u672c\u7c7b\u578b\u7684\u5143\u7ec4\u65b9\u4fbf\u3002 \u6570\u7ec4 Rust\u7684\u6570\u7ec4\u5c06 \u56fa\u5b9a\u6570\u76ee \u7684 \u540c\u7c7b\u578b \u53d8\u91cf\u50a8\u5b58\u5728\u4e00\u8d77\u3002 1 2 3 4 5 6 let arr_1 : [ i32 ; 5 ] = [ 1 , 2 , 3 , 4 , 5 ]; // [i32; 5] \u8868\u793a\u5305\u542b5\u4e2a i32 \u7684\u6570\u7ec4 let arr_2 = [ 1.0 , 2.0 , 3.0 , 4.0 ]; // arr_2 \u7684\u7c7b\u578b\u88ab\u9690\u5f0f\u63a8\u65ad\u4e3a [f64; 4] let arr_long : [ i32 ; 100 ] = [ 0 ; 100 ]; // arr_long \u7684\u7c7b\u578b\u4e3a [i32; 100]\uff0c\u800c\u4e14\u8fd9 100 \u4e2a\u5143\u7d20\u90fd\u662f 0 \u5982\u679c\u9700\u8981\u4e00\u4e2a\u53ef\u53d8\u957f\u7684\u6570\u7ec4\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528 Vec \u3002 \u4e0e C++ \u7684\u5bf9\u7167 Rust \u7684\u6570\u7ec4\u53ef\u4ee5\u76f4\u63a5\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\uff0c\u8fd9\u4e00\u70b9\u4e0e C/C++ \u4e0d\u540c\uff08C++ \u4e2d\u7684 std::tuple \u4e0e Rust \u7684\u6570\u7ec4\u66f4\u52a0\u7c7b\u4f3c\uff09\u3002\u4e0e C/C++ \u7c7b\u4f3c\u7684\u662f\uff0c\u6570\u7ec4\u7684\u957f\u5ea6\u90fd\u662f\u4e0d\u53ef\u53d8\u7684\uff0c\u53d8\u957f\u7684\u7ebf\u6027\u5bb9\u5668\u5728\u4e24\u95e8\u8bed\u8a00\u4e2d\u5206\u522b\u53eb\u505a std::Vec \u548c std::vector \u3002 \u5355\u5143\u7c7b\u578b \u00b6 Rust \u4e2d\u6709\u4e00\u4e2a\u7279\u6b8a\u7684 \u5355\u5143\u7c7b\u578b \uff08Unit Type\uff09 \uff0c\u5b83\u7684\u7c7b\u578b\u662f () \uff0c\u800c\u4e14\u5b83\u552f\u4e00\u7684\u503c\u4e5f\u662f () \u3002\u4f8b\u5982\uff0c\u5f53\u4e00\u4e2a\u8868\u8fbe\u5f0f\u6216\u51fd\u6570\u4ec0\u4e48\u4e5f\u4e0d\u8fd4\u56de\u65f6\uff0c\u5b83\u7684\u8fd4\u56de\u7c7b\u578b\u548c\u8fd4\u56de\u503c\u5c31\u90fd\u662f () \u3002 1 2 3 fn some_func () { return 0 ; } \u5c1d\u8bd5\u7f16\u8bd1\u4e0a\u9762\u7684\u51fd\u6570\uff0c\u7f16\u8bd1\u5668\u5c06\u62a5\u544a\u7c7b\u578b\u4e0d\u5339\u914d\uff0c\u671f\u671b\u5f97\u5230 () \u800c\u5f97\u5230\u4e86\u6574\u6570\u3002\u8fd9\u8868\u660e\u65e0\u8fd4\u56de\u503c\u7684\u51fd\u6570\u5b9e\u8d28\u4e0a\u8fd4\u56de\u4e86 () \u3002 \u4e0e C++ \u7684\u5bf9\u7167 Rust \u7684 () \u7c7b\u4f3c C/C++ \u7684 void \uff0c\u4f46\u4e0e\u4e4b\u4e0d\u5b8c\u5168\u76f8\u540c\u3002\u5728\u5f00\u59cb\u7406\u89e3\u65f6\uff0c\u53ef\u4ee5\u8fd9\u6837\u5bf9\u7167\uff1b\u4f46\u8bf7\u5728\u8ba4\u771f\u63a2\u7a76 () \u7c7b\u578b\u7684\u8bbe\u8ba1\u65f6\u6beb\u4e0d\u7559\u60c5\u5730\u5c06\u6709\u5173 C/C++ \u4e2d\u7684 void \u7684\u5370\u8c61\u5168\u90e8\u629b\u5f03\u3002 \u5173\u4e8e Unit Type \u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u4e0d\u89e3\u91ca Unit Type \u4e3a\u4f55\u8bbe\u8ba1\u6210\u5982\u6b64\uff0c\u4e5f\u4e0d\u6df1\u7a76\u5b83\u5728 Rust \u7684\u5176\u4ed6\u5730\u65b9\u6709\u54ea\u4e9b\u7528\u5904\u3002\u5982\u679c\u5bf9 Unit Type \u7684\u7ec6\u8282\u611f\u5174\u8da3\uff0c\u53ef\u4ee5\u53c2\u8003 Rust \u5b98\u65b9\u6587\u6863\u6216\u8005\u67e5\u770b \u8fd9\u4e2a StackOverFlow \u95ee\u9898 \u3002","title":"Rust \u7684\u53d8\u91cf\u4e0e\u7c7b\u578b"},{"location":"languages/rust/variable/#rust","text":"Caution \u672c\u9875\u5c1a\u672a\u5b8c\u5de5","title":"Rust \u7684\u53d8\u91cf\u4e0e\u7c7b\u578b"},{"location":"languages/rust/variable/#_1","text":"Rust \u8bed\u8a00\u4e2d\u901a\u8fc7 let \u5173\u952e\u5b57\u6765\u58f0\u660e\u53d8\u91cf\u3002Rust \u662f\u4e00\u95e8\u9759\u6001\u5f3a\u7c7b\u578b\u8bed\u8a00\uff0c\u56e0\u6b64\u4efb\u4f55\u4e00\u4e2a\u53d8\u91cf\u90fd\u6709\u4e00\u4e2a\u786e\u5b9a\u3001\u4e0d\u53ef\u53d8\u7684\u7c7b\u578b\u3002\u5982\u679c\u5728\u58f0\u660e\u540c\u65f6\u521d\u59cb\u5316\uff0c\u5219\u53ef\u4ee5\u4f9d\u9760\u7f16\u8bd1\u5668\u7684\u7c7b\u578b\u63a8\u65ad\u6765\u5f97\u5230\u53d8\u91cf\u7c7b\u578b\uff0c\u4e0d\u4e00\u5b9a\u9700\u8981\u663e\u5f0f\u6307\u5b9a\u7c7b\u578b\u3002 1 2 3 4 let a : i32 = 1 ; // \u5b8c\u6574\u7684\u53d8\u91cf\u58f0\u660e\u548c\u521d\u59cb\u5316 let b : i32 ; // \u663e\u5f0f\u58f0\u660e\u7c7b\u578b\uff0c\u672a\u521d\u59cb\u5316 let c = 1 ; // \u58f0\u660e\u540c\u65f6\u521d\u59cb\u5316\uff0c\u7c7b\u578b\u7531\u7f16\u8bd1\u5668\u63a8\u65ad\u4e3a i32 // let d; // \u65e2\u6ca1\u6709\u521d\u59cb\u5316\u53c8\u6ca1\u6709\u6807\u6ce8\u7c7b\u578b\uff0c\u7f16\u8bd1\u5668\u65e0\u4ece\u5f97\u77e5\u7c7b\u578b\uff0c\u7f16\u8bd1\u65e0\u6cd5\u901a\u8fc7 \u4e0e C++ \u7684\u5bf9\u7167 Rust \u7684 let \u5173\u952e\u5b57\u4e0e C++11 \u4e2d\u5f15\u5165\u7684 auto \u5173\u952e\u5b57\u6709\u4e00\u4e9b\u7c7b\u4f3c\u4e4b\u5904\uff0c\u4f8b\u5982\u5728\u58f0\u660e\u65f6\u521d\u59cb\u5316\u7684\u53d8\u91cf\u53ef\u4ee5\u81ea\u884c\u63a8\u65ad\u7c7b\u578b\u3002","title":"\u53d8\u91cf\u58f0\u660e"},{"location":"languages/rust/variable/#_2","text":"Rust \u8bed\u8a00\u4e0e\u8bb8\u591a\u5176\u4ed6\u8bed\u8a00\u4e0d\u540c\u7684\u4e00\u70b9\u5728\u4e8e\u53d8\u91cf\u7684 \u9ed8\u8ba4\u4e0d\u53ef\u53d8\u6027 \uff0c\u5373\u53d8\u91cf\u7684\u503c\u9ed8\u8ba4\u662f\u4e0d\u53ef\u4fee\u6539\u7684\u3002 1 2 let a = 1 ; // a = 2; // \u53d8\u91cf a \u9ed8\u8ba4\u4e0d\u53ef\u53d8\uff0c\u7f16\u8bd1\u65e0\u6cd5\u901a\u8fc7 \u8981\u58f0\u660e\u4e00\u4e2a\u53ef\u53d8\u7684\u53d8\u91cf\uff0c\u9700\u8981\u52a0\u4e0a mut \u5173\u952e\u5b57\u3002 1 2 let mut a = 1 ; a = 2 ; // \u53d8\u91cf a \u53ef\u53d8\uff0cOK \u4e0e C++ \u7684\u5bf9\u7167 \u7b80\u5355\u5730\u770b\uff0c let \u58f0\u660e\u7684\u53d8\u91cf\u66f4\u7c7b\u4f3c\u4e8e C++ \u4e2d\u7528 const \u58f0\u660e\u7684\u5e38\u91cf\uff0c\u800c let mut \u58f0\u660e\u7684\u53d8\u91cf\u66f4\u7c7b\u4f3c\u4e8e\u201c\u666e\u901a\u201d\u7684 C++ \u53d8\u91cf\u3002 \u8fd9\u79cd\u8bf4\u6cd5\u662f\u4e0d\u4e25\u683c\u7684\uff0c\u4f46\u662f\u8fd9\u6837\u601d\u8003\u53ef\u4ee5\u5feb\u901f\u4e0a\u624b\u3002 \u5982\u4f55\u6253\u5370\u4e00\u4e2a\u53d8\u91cf 1 2 let a : i32 = 1 ; println! ( \"{}\" , a ); \u8fd9\u91cc\u7684 println! \u662f\u4e00\u4e2a\u5b8f\uff0c\u4f46\u4f7f\u7528\u8d77\u6765\u4e0e\u51fd\u6570\u5f88\u76f8\u4f3c\u3002","title":"\u53ef\u53d8\u6027\u4e0e\u4e0d\u53ef\u53d8\u6027"},{"location":"languages/rust/variable/#_3","text":"","title":"\u53d8\u91cf\u7c7b\u578b"},{"location":"languages/rust/variable/#_4","text":"\u6574\u6570 Rust \u4e2d\u7684\u6574\u6570\u6709\u8bb8\u591a\u79cd\uff0c\u6309\u7167\u957f\u5ea6\u4e0d\u540c\u3001\u6709\u65e0\u7b26\u53f7\u8fdb\u884c\u533a\u5206\u3002 Rust\u7684\u591a\u6570\u6574\u6570\u547d\u540d\u9075\u5faa\u201c\u5b57\u6bcd + \u6570\u5b57\u201d\u8fd9\u4e00\u7ed3\u6784\u3002\u5176\u4e2d\uff0c\u4ee5\u5b57\u6bcd i \u5f00\u5934\u7684\u7c7b\u578b\u8868\u793a\u5b83\u662f \u6709\u7b26\u53f7\u6574\u6570 \uff0c\u800c\u4ee5\u5b57\u6bcd u \u5f00\u5934\u7684\u7c7b\u578b\u8868\u793a\u5b83\u662f \u65e0\u7b26\u53f7\u6574\u6570 \uff0c\u5b57\u6bcd\u540e\u9762\u7684\u6570\u5b57\u5219\u8868\u793a\u8fd9\u4e00\u7c7b\u578b\u7684\u957f\u5ea6\uff0c\u4ece\u6700\u77ed\u7684 8 \u5b57\u8282\u5230\u6700\u957f\u7684 128 \u5b57\u8282\uff0c\u6709 i8, u8, i16, u16, i32, u32, i64, u64, i128, u128 \u8fd9\u4e00\u7cfb\u5217\u7c7b\u578b\u3002 \u7f16\u8bd1\u5668\u5c06\u6574\u5f62\u5b57\u9762\u91cf\u9ed8\u8ba4\u7c7b\u578b\u63a8\u5bfc\u4e3a i32 \u3002 1 2 let a = 1 ; // a \u7684\u7c7b\u578b\u4e3a\uff08\u9690\u5f0f\u63a8\u5bfc\u4e3a\uff09i32 let b : u32 = 1 ; // b \u7684\u7c7b\u578b\uff08\u663e\u5f0f\u58f0\u660e\u4e3a\uff09u32 \u4e0e C++ \u7684\u5bf9\u7167 C/C++ \u6570\u636e\u6a21\u578b \u5e76\u6ca1\u6709\u7ed9\u6574\u5f62\u89c4\u5b9a\u5177\u4f53\u957f\u5ea6\uff0c\u53ea\u89c4\u5b9a\u4e86\u4e0d\u540c\u6574\u5f62\u4e4b\u95f4\u957f\u5ea6\u7684\u6bd4\u8f83\u5173\u7cfb\u548c\u6700\u5c0f\u957f\u5ea6\u3002\u5728\u5e38\u89c1\u7684 64 \u4f4d\u673a\u5668\u4e0a\uff0c char, short, int, long long \u5206\u522b\u8868\u793a 8\u300116\u300132 \u548c 64 \u4f4d\u5e26\u7b26\u53f7\u6574\u6570\uff0c\u5206\u522b\u53ef\u4ee5\u5bf9\u5e94 Rust \u7684 i8, i16, i32, i64 \uff0c\u65e0\u7b26\u53f7\u6574\u6570\u7c7b\u4f3c\u3002 \u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u5982\u679c\u9700\u8981\u786e\u5b9a\u957f\u5ea6\u7684\u6574\u6570\uff0c\u53ef\u4ee5\u4f7f\u7528 cstdlib \u4e2d\u7684 int32_t \u7b49\u7c7b\u578b\uff0c\u5b83\u4eec\u5728\u4e0d\u540c\u5e73\u53f0\u4e0a\u6709\u4e0d\u540c\u7684 typedef \uff0c\u5bf9\u5e94\u4e0d\u540c\u7684\u5177\u4f53\u7c7b\u578b\u3002 C/C++ \u6ca1\u6709\u7edf\u4e00\u7684 128 \u4f4d\u6574\u6570\u6807\u51c6\u3002 \u540c\u65f6\uff0cRust \u8fd8\u63d0\u4f9b\u4e86\u4e24\u4e2a\u7279\u6b8a\u7684\u7c7b\u578b isize \u548c usize \uff0c\u8fd9\u4e24\u4e2a\u7c7b\u578b\u7684\u957f\u5ea6\u7531\u5e73\u53f0\u51b3\u5b9a\uff0c\u5728 32 \u4f4d\u5e73\u53f0\u4e0a\u662f 32 \u4f4d\uff0c\u5728 64 \u4f4d\u5e73\u53f0\u4e0a\u662f 64 \u4f4d\u3002\u8fd9\u4e00\u8bbe\u8ba1\u65b9\u4fbf\u4e86\u5185\u5b58\u4e2d\u7684\u5bfb\u5740\uff0c\u5982\u6570\u7ec4\u4e0b\u6807\u5c31\u63a5\u53d7 usize \u800c\u4e0d\u662f u32 \u7c7b\u578b\u3002 \u6d6e\u70b9\u6570 \u7c7b\u4f3c\u6574\u5f62\uff0cRust \u4e2d\u7684\u6d6e\u70b9\u578b\u4ee5\u5b57\u6bcd f \u5f00\u5934\uff0c\u540e\u9762\u662f\u5bf9\u5e94\u7684\u957f\u5ea6\uff0c\u4f46\u53ea\u6709 f32 \u548c f64 \u4e24\u79cd\u7c7b\u578b\u3002 \u7f16\u8bd1\u5668\u5c06\u6d6e\u70b9\u5b57\u9762\u91cf\u9ed8\u8ba4\u7c7b\u578b\u63a8\u5bfc\u4e3a f64 \u3002 1 2 let f : f32 = 1.0 ; let g = 2.0 ; // \u7c7b\u578b\u9ed8\u8ba4\u63a8\u5bfc\u4e3a f64 \u5e03\u5c14\u503c Rust \u4e2d\u7684\u5e03\u5c14\u578b\u4e3a bool \uff0c\u6709\u4e14\u4ec5\u6709\u4e24\u4e2a\u503c true \u548c false \u3002 \u5b57\u7b26\u7c7b\u578b Rust \u4e2d\u4e00\u4e2a\u5b57\u7b26\u7531\u5355\u5f15\u53f7\u5305\u88f9\uff0c\u8868\u793a\u4e00\u4e2a Unicode \u5b57\u7b26 \u800c\u975e\u4e00\u4e2a ASCII \u5b57\u7b26\u6216\u5b57\u8282 \u3002 1 2 let ascii_char_z = 'z' ; let heart_eyed_cat = '\ud83d\ude3b' ; \u4e0e C++ \u7684\u5bf9\u7167 Rust \u5728\u8bbe\u8ba1\u65f6\u5c31\u8003\u8651\u5230\u4e86\u591a\u8bed\u8a00\u652f\u6301\uff0c\u56e0\u6b64\u91c7\u53d6\u4e86\u8fd9\u6837\u7684\u8bbe\u8ba1\u3002\u5982\u679c\u5e0c\u671b\u4e0e C/C++ \u4e2d\u7684 unsigned char \u5bf9\u5e94\uff0c\u5373\u8868\u793a \u4e00\u4e2a\u5b57\u8282 \uff0c\u5e94\u5f53\u4f7f\u7528 Rust \u4e2d\u7684 u8 \u7c7b\u578b\u3002","title":"\u57fa\u672c\u7c7b\u578b"},{"location":"languages/rust/variable/#_5","text":"\u5143\u7ec4 \u5143\u7ec4\u5c06\u51e0\u4e2a\u76f8\u540c\u6216\u4e0d\u540c\u7684\u7c7b\u578b\u7ec4\u5408\u4e3a\u4e00\u4e2a\u590d\u5408\u7c7b\u578b\u3002 1 2 let tuple_1 : ( i32 , f64 , bool ) = ( 1 , 2.0 , false ); // \u663e\u5f0f\u58f0\u660e\u7c7b\u578b let tuple_2 = ( 3 , 1.0 , true ); // \u9690\u5f0f\u63a8\u65ad\u7c7b\u578b \u5143\u7ec4\u652f\u6301\u901a\u8fc7\u6a21\u5f0f\u5339\u914d\u6765\u89e3\u6784\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u70b9 . \u6765\u8bbf\u95ee\u5176\u5143\u7d20\u3002 1 2 3 4 5 6 7 let tuple = ( 1 , 2.0 , false ); let ( x , y , z ) = tuple ; // \u4e0a\u9762\u7684 let \u8bed\u53e5\u521b\u5efa\u4e86 i32 \u7c7b\u578b\u7684\u53d8\u91cf x\u3001f64 \u7c7b\u578b\u7684\u53d8\u91cf y \u548c bool \u7c7b\u578b\u7684\u53d8\u91cf z let xx = tuple . 0 ; let yy = tuple . 1 ; let zz = tuple . 2 ; // xx, yy, zz \u5206\u522b\u5bf9\u5e94 x, y, z \u4e0e C++ \u7684\u5bf9\u7167 C++ \u8bed\u8a00\u6807\u51c6\u4e2d\u5e76\u6ca1\u6709\u5143\u7ec4\u7c7b\u578b\uff0c\u4f46\u6807\u51c6\u5e93\u4e2d\u63d0\u4f9b\u4e86\u529f\u80fd\u548c\u8bed\u4e49\u90fd\u76f8\u540c\u7684 std::tuple \u3002\u4f46\u603b\u7684\u6765\u8bf4\uff0cC++ \u7684\u5143\u7ec4\u4f7f\u7528\u8f83\u4e3a\u7e41\u7410\uff0c\u4e0d\u5982 Rust \u4e2d\u4f5c\u4e3a\u57fa\u672c\u7c7b\u578b\u7684\u5143\u7ec4\u65b9\u4fbf\u3002 \u6570\u7ec4 Rust\u7684\u6570\u7ec4\u5c06 \u56fa\u5b9a\u6570\u76ee \u7684 \u540c\u7c7b\u578b \u53d8\u91cf\u50a8\u5b58\u5728\u4e00\u8d77\u3002 1 2 3 4 5 6 let arr_1 : [ i32 ; 5 ] = [ 1 , 2 , 3 , 4 , 5 ]; // [i32; 5] \u8868\u793a\u5305\u542b5\u4e2a i32 \u7684\u6570\u7ec4 let arr_2 = [ 1.0 , 2.0 , 3.0 , 4.0 ]; // arr_2 \u7684\u7c7b\u578b\u88ab\u9690\u5f0f\u63a8\u65ad\u4e3a [f64; 4] let arr_long : [ i32 ; 100 ] = [ 0 ; 100 ]; // arr_long \u7684\u7c7b\u578b\u4e3a [i32; 100]\uff0c\u800c\u4e14\u8fd9 100 \u4e2a\u5143\u7d20\u90fd\u662f 0 \u5982\u679c\u9700\u8981\u4e00\u4e2a\u53ef\u53d8\u957f\u7684\u6570\u7ec4\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528 Vec \u3002 \u4e0e C++ \u7684\u5bf9\u7167 Rust \u7684\u6570\u7ec4\u53ef\u4ee5\u76f4\u63a5\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\uff0c\u8fd9\u4e00\u70b9\u4e0e C/C++ \u4e0d\u540c\uff08C++ \u4e2d\u7684 std::tuple \u4e0e Rust \u7684\u6570\u7ec4\u66f4\u52a0\u7c7b\u4f3c\uff09\u3002\u4e0e C/C++ \u7c7b\u4f3c\u7684\u662f\uff0c\u6570\u7ec4\u7684\u957f\u5ea6\u90fd\u662f\u4e0d\u53ef\u53d8\u7684\uff0c\u53d8\u957f\u7684\u7ebf\u6027\u5bb9\u5668\u5728\u4e24\u95e8\u8bed\u8a00\u4e2d\u5206\u522b\u53eb\u505a std::Vec \u548c std::vector \u3002","title":"\u590d\u5408\u7c7b\u578b"},{"location":"languages/rust/variable/#_6","text":"Rust \u4e2d\u6709\u4e00\u4e2a\u7279\u6b8a\u7684 \u5355\u5143\u7c7b\u578b \uff08Unit Type\uff09 \uff0c\u5b83\u7684\u7c7b\u578b\u662f () \uff0c\u800c\u4e14\u5b83\u552f\u4e00\u7684\u503c\u4e5f\u662f () \u3002\u4f8b\u5982\uff0c\u5f53\u4e00\u4e2a\u8868\u8fbe\u5f0f\u6216\u51fd\u6570\u4ec0\u4e48\u4e5f\u4e0d\u8fd4\u56de\u65f6\uff0c\u5b83\u7684\u8fd4\u56de\u7c7b\u578b\u548c\u8fd4\u56de\u503c\u5c31\u90fd\u662f () \u3002 1 2 3 fn some_func () { return 0 ; } \u5c1d\u8bd5\u7f16\u8bd1\u4e0a\u9762\u7684\u51fd\u6570\uff0c\u7f16\u8bd1\u5668\u5c06\u62a5\u544a\u7c7b\u578b\u4e0d\u5339\u914d\uff0c\u671f\u671b\u5f97\u5230 () \u800c\u5f97\u5230\u4e86\u6574\u6570\u3002\u8fd9\u8868\u660e\u65e0\u8fd4\u56de\u503c\u7684\u51fd\u6570\u5b9e\u8d28\u4e0a\u8fd4\u56de\u4e86 () \u3002 \u4e0e C++ \u7684\u5bf9\u7167 Rust \u7684 () \u7c7b\u4f3c C/C++ \u7684 void \uff0c\u4f46\u4e0e\u4e4b\u4e0d\u5b8c\u5168\u76f8\u540c\u3002\u5728\u5f00\u59cb\u7406\u89e3\u65f6\uff0c\u53ef\u4ee5\u8fd9\u6837\u5bf9\u7167\uff1b\u4f46\u8bf7\u5728\u8ba4\u771f\u63a2\u7a76 () \u7c7b\u578b\u7684\u8bbe\u8ba1\u65f6\u6beb\u4e0d\u7559\u60c5\u5730\u5c06\u6709\u5173 C/C++ \u4e2d\u7684 void \u7684\u5370\u8c61\u5168\u90e8\u629b\u5f03\u3002 \u5173\u4e8e Unit Type \u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u4e0d\u89e3\u91ca Unit Type \u4e3a\u4f55\u8bbe\u8ba1\u6210\u5982\u6b64\uff0c\u4e5f\u4e0d\u6df1\u7a76\u5b83\u5728 Rust \u7684\u5176\u4ed6\u5730\u65b9\u6709\u54ea\u4e9b\u7528\u5904\u3002\u5982\u679c\u5bf9 Unit Type \u7684\u7ec6\u8282\u611f\u5174\u8da3\uff0c\u53ef\u4ee5\u53c2\u8003 Rust \u5b98\u65b9\u6587\u6863\u6216\u8005\u67e5\u770b \u8fd9\u4e2a StackOverFlow \u95ee\u9898 \u3002","title":"\u5355\u5143\u7c7b\u578b"},{"location":"languages/rust/whyrust/","text":"\u7ed9\u5165\u95e8 Rust \u4eba\u7684\u4e00\u70b9\u7ecf\u9a8c \u00b6 Warning \u672c\u8282\u5185\u5bb9\u5b8c\u5168\u662f\u4f5c\u8005\u7684\u4e2a\u4eba\u7ecf\u9a8c\uff0c\u8bf7\u8c28\u614e\u53c2\u8003\u3002 \u597d\u7684\u7f16\u7a0b\u73af\u5883\u5f88\u91cd\u8981 \u00b6 Visual Studio Code + Rust Analyzer \u53ef\u4ee5\u6784\u5efa\u8d77\u5f88\u597d\u7684 Rust \u7f16\u7a0b\u73af\u5883\u3002\u5982\u679c\u4f60\u6709 JetBrains License\uff0c\u4e5f\u53ef\u4ee5\u9009\u62e9 CLion + Rust \u63d2\u4ef6\u3002\u7406\u60f3\u7684\u60c5\u51b5\u4e0b\uff0c\u9759\u6001\u68c0\u67e5\u5de5\u5177\u53ef\u4ee5\u5b9e\u65f6\u63d0\u793a\u51fa\u4ee3\u7801\u91cc\u6240\u6709\u6ca1\u6709\u663e\u5f0f\u6807\u5b9a\u7c7b\u578b\u7684\u53d8\u91cf\u7684\u7c7b\u578b\uff0c\u6781\u5927\u63d0\u5347\u7f16\u7a0b\u4f53\u9a8c\u548c\u6548\u7387\u3002 \u591a\u7ec3\u4e60 \u00b6 Rust Playground \u63d0\u4f9b\u4e86\u5728\u7ebf\u7684 Rust \u7f16\u7a0b\u73af\u5883\uff0c\u8bf7\u4e0d\u8981\u541d\u60dc\u65f6\u95f4\uff0c\u591a\u5199\u591a\u5c1d\u8bd5\uff01 \u4e0d\u8981\u5bb3\u6015\u7f16\u8bd1\u9519\u8bef \u00b6 rustc \u662f\u4e00\u4e2a\u6781\u4e3a\u5f3a\u5927\u7684\u7f16\u8bd1\u5668\uff0c\u53ef\u4ee5\u5728\u7f16\u8bd1\u671f\u68c0\u67e5\u548c\u63d0\u793a\u51fa\u8bb8\u591a\u5176\u4ed6\u8bed\u8a00\u5728\u8fd0\u884c\u65f6\u624d\u4f1a\u53d1\u73b0\u7684\u9519\u8bef\u3002\u7136\u800c\uff0c\u8fd9\u4e5f\u4f7f\u5f97\u65b0\u624b\u5728\u7f16\u5199 Rust \u4ee3\u7801\u65f6\u66f4\u5bb9\u6613\u9047\u5230\u6d77\u91cf\u7684\u7f16\u8bd1\u9519\u8bef\u3002\u4e0d\u8981\u5bb3\u6015\uff0cRust \u7684\u7f16\u8bd1\u5668\u63d0\u793a\u6bd4 GCC \u8981\u53cb\u597d\u5f97\u591a\uff0c\u5b83\u751a\u81f3\u4f1a\u63d0\u51fa\u4e00\u4e9b\u4fee\u6539\u5efa\u8bae\uff08\u5c3d\u7ba1\u5e76\u4e0d\u4e00\u5b9a\u5bf9\uff09\uff01\u6700\u5f00\u59cb\u7684\u65f6\u5019\u4f60\u53ef\u80fd\u4f1a\u89c9\u5f97\u81ea\u5df1\u5728\u88ab\u7f16\u8bd1\u5668\u66b4\u6253\uff0c\u4f46\u968f\u7740\u7ecf\u9a8c\u589e\u52a0\uff0c\u4f60\u9010\u6e10\u5f00\u59cb\u548c\u7f16\u8bd1\u5668\u201c\u548c\u5e73\u5171\u5904\u201d\u7684\u65f6\u5019\uff0c\u4e5f\u5c31\u662f\u4f60\u5f00\u59cb\u9002\u5e94 Rust \u7684\u65f6\u5019\u3002 \u770b\u6587\u6863 \u00b6 \u6807\u51c6\u5e93\u6587\u6863 \u53ef\u4ee5\u89e3\u51b3\u5f88\u591a\u7f16\u7a0b\u65f6\u9047\u5230\u7684\u56f0\u96be\u3002\u800c\u4e14\u5373\u4f7f\u662f\u5728\u65ad\u7f51\u7684\u60c5\u51b5\u4e0b\uff0c\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7\u6267\u884c rustup doc \u6765\u6253\u5f00\u5b8c\u6574\u7684\u672c\u5730 Rust \u6587\u6863\u3002\u67e5\u9605\u6587\u6863\u662f\u975e\u5e38\u91cd\u8981\u7684\uff0c\u5bf9\u4e8e Rust \u80fd\u529b\u7684\u63d0\u5347\u4e5f\u5f88\u6709\u76ca\uff01 \u4f60\u7684\u6587\u6863\u8fd9\u91cc\u5199\u7684\u592a\u7b80\u7565\u4e86\uff01\u6211\u770b\u4e0d\u61c2\u600e\u4e48\u529e\uff01 \u00b6 Rust \u662f\u4e00\u95e8\u590d\u6742\u5e9e\u5927\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u7f16\u5199\u4e00\u672c\u5408\u9002\u7684 Rust \u5165\u95e8\u4e66\u7c4d\u8fdc\u8fdc\u8d85\u51fa\u6211\u7684\u80fd\u529b\uff0c\u800c\u4e14\u793e\u533a\u4e5f\u6709\u4e86\u66f4\u597d\u7684\u5165\u95e8\u65b9\u6848\u3002\u56e0\u6b64\uff0c\u8fd9\u4efd\u6587\u6863\u4ec5\u4ec5\u7ed9\u51fa \u6700\u7b80\u7565 \u7684\u4ecb\u7ecd\uff0c\u540c\u65f6\u63d0\u4f9b\u4e0e C/C++ \u7684\u5bf9\u7167\u3002\u5982\u679c\u6709\u4efb\u4f55\u5730\u65b9\u770b\u4e0d\u61c2\uff0c\u8bf7\u53c2\u8003 The Book \u4e2d\u7684\u5bf9\u5e94\u7ae0\u8282\u3002","title":"Rust \u5165\u95e8\u7684\u4e00\u70b9\u7ecf\u9a8c"},{"location":"languages/rust/whyrust/#rust","text":"Warning \u672c\u8282\u5185\u5bb9\u5b8c\u5168\u662f\u4f5c\u8005\u7684\u4e2a\u4eba\u7ecf\u9a8c\uff0c\u8bf7\u8c28\u614e\u53c2\u8003\u3002","title":"\u7ed9\u5165\u95e8 Rust \u4eba\u7684\u4e00\u70b9\u7ecf\u9a8c"},{"location":"languages/rust/whyrust/#_1","text":"Visual Studio Code + Rust Analyzer \u53ef\u4ee5\u6784\u5efa\u8d77\u5f88\u597d\u7684 Rust \u7f16\u7a0b\u73af\u5883\u3002\u5982\u679c\u4f60\u6709 JetBrains License\uff0c\u4e5f\u53ef\u4ee5\u9009\u62e9 CLion + Rust \u63d2\u4ef6\u3002\u7406\u60f3\u7684\u60c5\u51b5\u4e0b\uff0c\u9759\u6001\u68c0\u67e5\u5de5\u5177\u53ef\u4ee5\u5b9e\u65f6\u63d0\u793a\u51fa\u4ee3\u7801\u91cc\u6240\u6709\u6ca1\u6709\u663e\u5f0f\u6807\u5b9a\u7c7b\u578b\u7684\u53d8\u91cf\u7684\u7c7b\u578b\uff0c\u6781\u5927\u63d0\u5347\u7f16\u7a0b\u4f53\u9a8c\u548c\u6548\u7387\u3002","title":"\u597d\u7684\u7f16\u7a0b\u73af\u5883\u5f88\u91cd\u8981"},{"location":"languages/rust/whyrust/#_2","text":"Rust Playground \u63d0\u4f9b\u4e86\u5728\u7ebf\u7684 Rust \u7f16\u7a0b\u73af\u5883\uff0c\u8bf7\u4e0d\u8981\u541d\u60dc\u65f6\u95f4\uff0c\u591a\u5199\u591a\u5c1d\u8bd5\uff01","title":"\u591a\u7ec3\u4e60"},{"location":"languages/rust/whyrust/#_3","text":"rustc \u662f\u4e00\u4e2a\u6781\u4e3a\u5f3a\u5927\u7684\u7f16\u8bd1\u5668\uff0c\u53ef\u4ee5\u5728\u7f16\u8bd1\u671f\u68c0\u67e5\u548c\u63d0\u793a\u51fa\u8bb8\u591a\u5176\u4ed6\u8bed\u8a00\u5728\u8fd0\u884c\u65f6\u624d\u4f1a\u53d1\u73b0\u7684\u9519\u8bef\u3002\u7136\u800c\uff0c\u8fd9\u4e5f\u4f7f\u5f97\u65b0\u624b\u5728\u7f16\u5199 Rust \u4ee3\u7801\u65f6\u66f4\u5bb9\u6613\u9047\u5230\u6d77\u91cf\u7684\u7f16\u8bd1\u9519\u8bef\u3002\u4e0d\u8981\u5bb3\u6015\uff0cRust \u7684\u7f16\u8bd1\u5668\u63d0\u793a\u6bd4 GCC \u8981\u53cb\u597d\u5f97\u591a\uff0c\u5b83\u751a\u81f3\u4f1a\u63d0\u51fa\u4e00\u4e9b\u4fee\u6539\u5efa\u8bae\uff08\u5c3d\u7ba1\u5e76\u4e0d\u4e00\u5b9a\u5bf9\uff09\uff01\u6700\u5f00\u59cb\u7684\u65f6\u5019\u4f60\u53ef\u80fd\u4f1a\u89c9\u5f97\u81ea\u5df1\u5728\u88ab\u7f16\u8bd1\u5668\u66b4\u6253\uff0c\u4f46\u968f\u7740\u7ecf\u9a8c\u589e\u52a0\uff0c\u4f60\u9010\u6e10\u5f00\u59cb\u548c\u7f16\u8bd1\u5668\u201c\u548c\u5e73\u5171\u5904\u201d\u7684\u65f6\u5019\uff0c\u4e5f\u5c31\u662f\u4f60\u5f00\u59cb\u9002\u5e94 Rust \u7684\u65f6\u5019\u3002","title":"\u4e0d\u8981\u5bb3\u6015\u7f16\u8bd1\u9519\u8bef"},{"location":"languages/rust/whyrust/#_4","text":"\u6807\u51c6\u5e93\u6587\u6863 \u53ef\u4ee5\u89e3\u51b3\u5f88\u591a\u7f16\u7a0b\u65f6\u9047\u5230\u7684\u56f0\u96be\u3002\u800c\u4e14\u5373\u4f7f\u662f\u5728\u65ad\u7f51\u7684\u60c5\u51b5\u4e0b\uff0c\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7\u6267\u884c rustup doc \u6765\u6253\u5f00\u5b8c\u6574\u7684\u672c\u5730 Rust \u6587\u6863\u3002\u67e5\u9605\u6587\u6863\u662f\u975e\u5e38\u91cd\u8981\u7684\uff0c\u5bf9\u4e8e Rust \u80fd\u529b\u7684\u63d0\u5347\u4e5f\u5f88\u6709\u76ca\uff01","title":"\u770b\u6587\u6863"},{"location":"languages/rust/whyrust/#_5","text":"Rust \u662f\u4e00\u95e8\u590d\u6742\u5e9e\u5927\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u7f16\u5199\u4e00\u672c\u5408\u9002\u7684 Rust \u5165\u95e8\u4e66\u7c4d\u8fdc\u8fdc\u8d85\u51fa\u6211\u7684\u80fd\u529b\uff0c\u800c\u4e14\u793e\u533a\u4e5f\u6709\u4e86\u66f4\u597d\u7684\u5165\u95e8\u65b9\u6848\u3002\u56e0\u6b64\uff0c\u8fd9\u4efd\u6587\u6863\u4ec5\u4ec5\u7ed9\u51fa \u6700\u7b80\u7565 \u7684\u4ecb\u7ecd\uff0c\u540c\u65f6\u63d0\u4f9b\u4e0e C/C++ \u7684\u5bf9\u7167\u3002\u5982\u679c\u6709\u4efb\u4f55\u5730\u65b9\u770b\u4e0d\u61c2\uff0c\u8bf7\u53c2\u8003 The Book \u4e2d\u7684\u5bf9\u5e94\u7ae0\u8282\u3002","title":"\u4f60\u7684\u6587\u6863\u8fd9\u91cc\u5199\u7684\u592a\u7b80\u7565\u4e86\uff01\u6211\u770b\u4e0d\u61c2\u600e\u4e48\u529e\uff01"},{"location":"languages/swift/","text":"Swift \u8bed\u8a00\u662f\u82f9\u679c\u4e3b\u5bfc\u7684 \u5f00\u6e90 \u7f16\u7a0b\u8bed\u8a00\uff0c\u4e8e 2014 \u5e74\u53d1\u5e03\uff0c\u4e3b\u8981\u4f5c\u4e3a Objective-C \u7684\u66ff\u4ee3\u7528\u4e8e iOS\u3001macOS \u7b49\u5e73\u53f0\u8f6f\u4ef6\u7684\u5f00\u53d1\u3002Swift \u8bed\u6cd5\u7b80\u6d01\u7075\u6d3b\uff0c\u6027\u80fd\u63a5\u8fd1\u4e8e C \u8bed\u8a00\uff0c\u7c7b\u578b\u7cfb\u7edf\u4e25\u683c\uff0c\u5728\u63d0\u9ad8\u7f16\u7a0b\u6548\u7387\u7684\u540c\u65f6\u5927\u5927\u964d\u4f4e\u51fa\u73b0\u7f16\u7a0b\u9519\u8bef\u7684\u53ef\u80fd\uff0c\u76ee\u524d\u5df2\u6210\u4e3a\u82f9\u679c\u5e73\u53f0\u5f00\u53d1\u7684\u4e3b\u6d41\u8bed\u8a00\u3002 Info \u540e\u7eed\u5185\u5bb9\u9002\u7528\u4e8e Swift 5 \u4ee5\u4e0a\u7248\u672c\u3002\u90e8\u5206\u5185\u5bb9\u4f7f\u7528\u4e86 Swift \u6807\u51c6\u5e93\u4e4b\u5916\u7684 Foundation \u6846\u67b6\uff0c\u5728\u4ee3\u7801\u4e2d\u9700\u8981\u52a0\u4e0a import Foundation \u3002 \u7f16\u7a0b\u73af\u5883 \u00b6 \u63a8\u8350\u4f7f\u7528 macOS \u6216 iPadOS \u8fdb\u884c Swift \u5b66\u4e60\uff1a macOS \u547d\u4ee4\u884c\uff1a\u8f93\u5165 swift \u8fdb\u5165\u4ea4\u4e92\u5f0f\u7a97\u53e3 \u6700\u65b0\u7248 Xcode\uff1aFile - New - Playground... - Blank\uff0c\u70b9\u51fb\u5de6\u4fa7\u884c\u53f7\u7f16\u8bd1\u8fd0\u884c iPadOS Swift Playgrounds\uff1a\u65b0\u5efa Playground\uff0c\u70b9\u51fb\u8fd0\u884c \u524d\u7f6e\u77e5\u8bc6 \u00b6 \u65e0\u969c\u788d\u9605\u8bfb\u672c\u6587\u9700\u8981\uff1a \u6709\u4e00\u5b9a\u7684 C++ \u8bed\u8a00\u57fa\u7840 \u4e86\u89e3\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u601d\u60f3\u548c\u65b9\u6cd5 \u8d44\u6e90\u94fe\u63a5 \u00b6 Swift \u5b98\u65b9\u6559\u7a0b \u82f9\u679c\u5f00\u53d1\u8005\u6587\u6863","title":"Swift \u8bed\u8a00\u57fa\u7840"},{"location":"languages/swift/#_1","text":"\u63a8\u8350\u4f7f\u7528 macOS \u6216 iPadOS \u8fdb\u884c Swift \u5b66\u4e60\uff1a macOS \u547d\u4ee4\u884c\uff1a\u8f93\u5165 swift \u8fdb\u5165\u4ea4\u4e92\u5f0f\u7a97\u53e3 \u6700\u65b0\u7248 Xcode\uff1aFile - New - Playground... - Blank\uff0c\u70b9\u51fb\u5de6\u4fa7\u884c\u53f7\u7f16\u8bd1\u8fd0\u884c iPadOS Swift Playgrounds\uff1a\u65b0\u5efa Playground\uff0c\u70b9\u51fb\u8fd0\u884c","title":"\u7f16\u7a0b\u73af\u5883"},{"location":"languages/swift/#_2","text":"\u65e0\u969c\u788d\u9605\u8bfb\u672c\u6587\u9700\u8981\uff1a \u6709\u4e00\u5b9a\u7684 C++ \u8bed\u8a00\u57fa\u7840 \u4e86\u89e3\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u601d\u60f3\u548c\u65b9\u6cd5","title":"\u524d\u7f6e\u77e5\u8bc6"},{"location":"languages/swift/#_3","text":"Swift \u5b98\u65b9\u6559\u7a0b \u82f9\u679c\u5f00\u53d1\u8005\u6587\u6863","title":"\u8d44\u6e90\u94fe\u63a5"},{"location":"languages/swift/basic/","text":"\u4e3a\u4e86\u66f4\u597d\u5730\u7406\u89e3\u6b63\u6587\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u5217\u4e3e\u4e00\u4e9b\u4e0e\u6b63\u6587\u6709\u5173\u7684\u57fa\u7840\u6982\u5ff5/\u77e5\u8bc6\uff1a \u6982\u5ff5 \u00b6 Swift \u662f\u5f3a\u7c7b\u578b\u9759\u6001\u8bed\u8a00\uff0c\u4efb\u4f55\u53d8\u91cf\u90fd\u6709\u5728\u7f16\u8bd1\u671f\u786e\u5b9a\u7684\u3001\u4e0d\u53ef\u66f4\u6539\u7684\u7c7b\u578b Swift \u7c7b\u578b\u7cfb\u7edf\u5728\u660e\u786e\u7684\u4e0a\u4e0b\u6587\u4e2d\u53ef\u4ee5\u81ea\u52a8\u63a8\u65ad\u7c7b\u578b Swift \u4e0d\u5efa\u8bae\u624b\u52a8\u7ba1\u7406\u5185\u5b58\uff0c\u6ca1\u6709\u6307\u9488 Swift \u6ca1\u6709\u5934\u6587\u4ef6\uff0c\u5b9a\u4e49\u548c\u5b9e\u73b0\u5728\u540c\u4e00\u4e2a\u5730\u65b9 \u57fa\u672c\u8bed\u6cd5 \u00b6 Swift \u4f7f\u7528\u6362\u884c\u5206\u9694\u4e0d\u540c\u7684\u8bed\u53e5\uff0c\u4f7f\u7528 ; \u5206\u9694\u5904\u5728\u540c\u4e00\u884c\u7684\u4e0d\u540c\u8bed\u53e5\uff08\u4e0d\u5efa\u8bae\u4f7f\u7528\uff09 Swift \u4e2d\u4f7f\u7528 // \u6216 /* */ \u8fdb\u884c\u6ce8\u91ca Swift \u4e2d\u4f7f\u7528 /// \u8fdb\u884c\u6587\u6863\u7684\u6ce8\u91ca \u4ee3\u7801\u89c4\u8303 \u00b6 \u4f7f\u7528\u9a7c\u5cf0\u5f0f\u547d\u540d\uff0c\u53d8\u91cf\u548c\u51fd\u6570\u5c0f\u5199\u5f00\u5934\uff0c\u5982 myVariable \uff0c\u7c7b\u578b\u540d\u79f0\u5927\u5199\u5f00\u5934\uff0c\u5982 MyStructure \u5c3d\u91cf\u4f7f\u7528\u5355\u8bcd\u7684\u5168\u79f0\u800c\u975e\u7f29\u5199\u547d\u540d\uff0c\u65e0\u8bba\u540d\u79f0\u6709\u591a\u957f\uff0c\u5982 UIKit \u4e2d\u7684 UIAdaptivePresentationControllerDelegate","title":"\u57fa\u7840\u77e5\u8bc6"},{"location":"languages/swift/basic/#_1","text":"Swift \u662f\u5f3a\u7c7b\u578b\u9759\u6001\u8bed\u8a00\uff0c\u4efb\u4f55\u53d8\u91cf\u90fd\u6709\u5728\u7f16\u8bd1\u671f\u786e\u5b9a\u7684\u3001\u4e0d\u53ef\u66f4\u6539\u7684\u7c7b\u578b Swift \u7c7b\u578b\u7cfb\u7edf\u5728\u660e\u786e\u7684\u4e0a\u4e0b\u6587\u4e2d\u53ef\u4ee5\u81ea\u52a8\u63a8\u65ad\u7c7b\u578b Swift \u4e0d\u5efa\u8bae\u624b\u52a8\u7ba1\u7406\u5185\u5b58\uff0c\u6ca1\u6709\u6307\u9488 Swift \u6ca1\u6709\u5934\u6587\u4ef6\uff0c\u5b9a\u4e49\u548c\u5b9e\u73b0\u5728\u540c\u4e00\u4e2a\u5730\u65b9","title":"\u6982\u5ff5"},{"location":"languages/swift/basic/#_2","text":"Swift \u4f7f\u7528\u6362\u884c\u5206\u9694\u4e0d\u540c\u7684\u8bed\u53e5\uff0c\u4f7f\u7528 ; \u5206\u9694\u5904\u5728\u540c\u4e00\u884c\u7684\u4e0d\u540c\u8bed\u53e5\uff08\u4e0d\u5efa\u8bae\u4f7f\u7528\uff09 Swift \u4e2d\u4f7f\u7528 // \u6216 /* */ \u8fdb\u884c\u6ce8\u91ca Swift \u4e2d\u4f7f\u7528 /// \u8fdb\u884c\u6587\u6863\u7684\u6ce8\u91ca","title":"\u57fa\u672c\u8bed\u6cd5"},{"location":"languages/swift/basic/#_3","text":"\u4f7f\u7528\u9a7c\u5cf0\u5f0f\u547d\u540d\uff0c\u53d8\u91cf\u548c\u51fd\u6570\u5c0f\u5199\u5f00\u5934\uff0c\u5982 myVariable \uff0c\u7c7b\u578b\u540d\u79f0\u5927\u5199\u5f00\u5934\uff0c\u5982 MyStructure \u5c3d\u91cf\u4f7f\u7528\u5355\u8bcd\u7684\u5168\u79f0\u800c\u975e\u7f29\u5199\u547d\u540d\uff0c\u65e0\u8bba\u540d\u79f0\u6709\u591a\u957f\uff0c\u5982 UIKit \u4e2d\u7684 UIAdaptivePresentationControllerDelegate","title":"\u4ee3\u7801\u89c4\u8303"},{"location":"languages/swift/control-flow/","text":"if \u8bed\u53e5 \u00b6 \u4f7f\u7528 if \u8fdb\u884c\u6761\u4ef6\u5224\u65ad\uff0c\u4e0d\u9700\u8981\u52a0\u62ec\u53f7\uff0c\u503c\u5fc5\u987b\u4e3a Bool \u7c7b\u578b\uff1a 1 2 3 4 5 6 7 if condition { // statements } else if condition2 { // statements } else { // statements } \u591a\u4e2a\u9700\u8981\u540c\u65f6\u6ee1\u8db3\u7684\u6761\u4ef6\u53ef\u4ee5\u7528 , \u9694\u5f00\uff0c\u4e0e && \u6548\u679c\u76f8\u540c\uff1a 1 2 3 if condition1 , condition2 { // executed only if condition1 and condition2 are true } \u4e00\u4e2a\u6216\u591a\u4e2a if let \u53ef\u4ee5\u548c\u6761\u4ef6\u8bed\u53e5\u5229\u7528 , \u7ed3\u5408\uff0c\u53ea\u9700\u8981\u5199\u4e00\u4e2a if \uff1a 1 2 3 4 5 if let data = optionalData , let string = String ( data : data , encoding : . utf8 ), ! string . isEmpty { print ( string ) } \u7b49\u4ef7\u4e8e\uff1a 1 2 3 4 5 6 7 if let data = optionalData { if let string = String ( data : data , encoding : . utf8 ) { if ! string . isEmpty { print ( string ) } } } \u5982\u679c\u6210\u5458\u662f Optional\uff0c\u53ef\u4ee5\u5229\u7528\u4e00\u79cd\u53eb\u505a optional chaining \u7684\u8bed\u6cd5\u8fdb\u884c\u89e3\u5305\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 class A { var foo : String ? } class B { var a : A ? } // b \u662f B \u7c7b\u578b if let stringCount = b . a ?. foo ?. count { print ( stringCount ) } \u5728\u4e00\u6761\u201c\u94fe\u201d b.a?.foo?.count \u4e2d\uff0c a \u548c foo \u90fd\u6709\u53ef\u80fd\u4e3a\u7a7a\uff0c\u5f53\u5176\u4e2d\u4e4b\u4e00\u4e3a\u7a7a\u65f6\uff0c stringCount \u4e3a nil \uff1b\u5f53\u5747\u4e0d\u4e3a\u7a7a\u65f6\uff0c stringCount \u975e\u7a7a\u3002 guard \u8bed\u53e5 \u00b6 \u4f7f\u7528 guard...else \u6765\u5904\u7406\u9700\u8981\u8df3\u51fa\u5f53\u524d\u4f5c\u7528\u57df\u7684\u60c5\u5f62\u3002 guard \u540e\u53ef\u4ee5\u662f\u6761\u4ef6\u8868\u8fbe\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e0e if let \u7c7b\u4f3c\u7684\u5bf9 Optional \u7684\u89e3\u5305\uff1a 1 2 3 4 5 6 7 func iterate ( _ array : [ Int ]?) { guard let array = array else { return } // Proceed with a non-nil array for element in array { print ( element ) } } guard \u540e\u5fc5\u987b\u6709 else \u8bed\u53e5\uff0c\u8868\u793a\u6761\u4ef6\u4e0d\u6210\u7acb\uff08 guard let \u8bed\u53e5\u4e2d\u662f\u503c\u4e3a nil \uff09\u65f6\u5982\u4f55\u5904\u7406\u5e76\u9000\u51fa\u3002\u6ce8\u610f\uff0c else \u8bed\u53e5\u4e2d\u5fc5\u987b\u9000\u51fa\u5f53\u524d\u51fd\u6570\uff08 return \uff09\u3001\u629b\u51fa\u5f02\u5e38\u6216\u89e6\u53d1\u4e25\u91cd\u9519\u8bef\uff08 fatalError() \uff09\u3002\u603b\u4e4b\uff0c \u4e0d\u6210\u7acb\u65f6\uff0c\u51fd\u6570\u4e0d\u80fd\u591f\u7ee7\u7eed\u6267\u884c \u3002 \u4f55\u65f6\u4f7f\u7528 guard guard \u8bed\u53e5\u5176\u5b9e\u53ef\u4ee5\u7528 if \u8bed\u53e5\u66ff\u4ee3\uff1a 1 2 3 4 5 6 func iterate ( _ array : [ Int ]?) { if array == nil { return } for element in array ! { // ... } } \u90a3\u4e48\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u9700\u8981 guard \u8bed\u53e5\u5462\uff1f guard \u8bed\u53e5\u8981\u6c42\u4e0d\u6ee1\u8db3\u7684\u60c5\u51b5\u4e0d\u80fd\u7ee7\u7eed\u5411\u4e0b\u6267\u884c\uff0c\u5728 \u7f16\u8bd1\u671f \u907f\u514d\u4e86\u9700\u8981\u7acb\u5373\u8fd4\u56de\u4f46\u6ca1\u6709\u8fd4\u56de\u7684\u60c5\u51b5\uff0c\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 func unlockPaidItem () { let userSubscribed = getSubscriptionStatus () guard userSubscribed else { showAlert ( \"You have not subscribed yet!\" ) // Forget to return here! } paidItem . unlock () } // error: 'guard' body must not fall through, // consider using a 'return' or 'throw' to exit the scope \u5982\u679c\u4f7f\u7528 if \uff0c\u4e0a\u9762\u7684\u60c5\u51b5\u4e0d\u4f1a\u4ea7\u751f\u7f16\u8bd1\u9519\u8bef\uff0c\u53ef\u80fd\u8981\u5230\u8fd0\u884c\u671f\u95f4\u51fa\u73b0\u95ee\u9898\u624d\u80fd\u53d1\u73b0\u9519\u8bef\u3002 for \u5faa\u73af\u8bed\u53e5 \u00b6 \u5728 Swift 3 \u4e2d\uff0cC \u98ce\u683c for \u5faa\u73af\u88ab\u5220\u9664 \uff0c\u4ece\u6b64 Swift \u53ea\u652f\u6301 for ... in ... \u7c7b\u578b\u7684 for \u5faa\u73af\u3002 Swift \u4e2d\u8303\u56f4\u53ef\u4ee5\u7528 ... \u548c ..< \u8868\u793a\uff0c\u524d\u8005\u8868\u793a\u95ed\u533a\u95f4\uff0c\u540e\u8005\u8868\u793a\u524d\u95ed\u540e\u5f00\u533a\u95f4\uff1b\u4f7f\u7528 stride(from:to:by:) \u4ee5\u7279\u5b9a\u6b65\u957f\u8fdb\u884c\u904d\u5386\uff1a 1 2 3 4 5 6 7 8 9 10 11 for i in 0. .. 10 { // Iterate through 1, 2, ..., 10 } for i in 0. .< 10 { // Iterate through 1, 2, ..., 9 } for tickMark in stride ( from : 0 , to : 60 , by : 5 ) { // render the tick mark every 5 minutes (0, 5, 10, 15 ... 45, 50, 55) } \u53e6\u5916\uff0c\u6570\u7ec4\u7b49\u4e5f\u53ef\u4f7f\u7528 for \u5faa\u73af\u8fdb\u884c\u904d\u5386\uff1a 1 2 3 for value in [ 1 , 2 , 3 ] { print ( value ) } while \u548c repeat-while \u8bed\u53e5 \u00b6 while \u5faa\u73af\u548c C/C++ \u76f8\u540c\uff0c repeat-while \u5faa\u73af\u5bf9\u5e94 do-while \u5faa\u73af\uff1a 1 2 3 4 5 6 7 while condition { // statements } repeat { // statements } while condition switch \u8bed\u53e5 \u00b6 switch \u8bed\u53e5\u7528\u4e8e\u5339\u914d\u503c\uff0c\u53ef\u4ee5\u7528\u8303\u56f4\u8868\u8fbe\u5f0f\u8fdb\u884c\u8303\u56f4\u5339\u914d\u3002 \u4e0e C/C++ \u4e0d\u540c\uff0c\u5339\u914d\u540e\u8df3\u51fa switch \u4e0d\u9700\u8981 break \u8bed\u53e5\uff0c\u5982\u679c\u9700\u8981\u8df3\u5230\u4e0b\u4e00\u4e2a case \uff0c\u4f7f\u7528 fallthrough \u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 let age = 21 switch age { case 0 : print ( \"New born\" ) case 1. .< 10 : print ( \"Child\" ) case 1. .< 25 : print ( \"Young people\" ) default : print ( \"I don't care about it right now\" ) } // Young People Info Swift \u4e2d\u7684 switch \u8bed\u53e5\u6709\u975e\u5e38\u591a\u7528\u6cd5\uff0c\u8be6\u89c1 \u5b98\u65b9\u6587\u6863 \u3002 \u63a7\u5236\u8f6c\u79fb \u00b6 \u5728\u5faa\u73af\u4e2d\uff0c\u4f7f\u7528 continue \u8f6c\u5230\u4e0b\u4e00\u6b21\u5faa\u73af\uff1a 1 2 3 4 5 6 7 var characters = \"\" for character in \"Swift Programming Language\" { if character == \" \" { continue } characters . append ( character ) } \u4f7f\u7528 break \u9000\u51fa\u5faa\u73af\uff1a 1 2 3 4 5 6 for character in \"Swift Programming Language\" { if character == \" \" { print ( \"Blank character exists!\" ) break } } \u4f7f\u7528\u6807\u7b7e\u8de8\u8d8a\u591a\u5c42\u5faa\u73af\u8fdb\u884c\u63a7\u5236\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 let words = [ \"Swift\" , \"\u70eb\" , \"Programming\" , \"Language\" ] outerLoop : for word in words { // A stupid switch just to demostrate switch word . first { case \"S\" : print ( \"Swift\" ) case \"P\" : print ( \"Programming\" ) case \"L\" : print ( \"Language\" ) default : print ( \"Invalid word!\" ) break outerLoop } } // Swift // Invalid word!","title":"\u6d41\u7a0b\u63a7\u5236"},{"location":"languages/swift/control-flow/#if","text":"\u4f7f\u7528 if \u8fdb\u884c\u6761\u4ef6\u5224\u65ad\uff0c\u4e0d\u9700\u8981\u52a0\u62ec\u53f7\uff0c\u503c\u5fc5\u987b\u4e3a Bool \u7c7b\u578b\uff1a 1 2 3 4 5 6 7 if condition { // statements } else if condition2 { // statements } else { // statements } \u591a\u4e2a\u9700\u8981\u540c\u65f6\u6ee1\u8db3\u7684\u6761\u4ef6\u53ef\u4ee5\u7528 , \u9694\u5f00\uff0c\u4e0e && \u6548\u679c\u76f8\u540c\uff1a 1 2 3 if condition1 , condition2 { // executed only if condition1 and condition2 are true } \u4e00\u4e2a\u6216\u591a\u4e2a if let \u53ef\u4ee5\u548c\u6761\u4ef6\u8bed\u53e5\u5229\u7528 , \u7ed3\u5408\uff0c\u53ea\u9700\u8981\u5199\u4e00\u4e2a if \uff1a 1 2 3 4 5 if let data = optionalData , let string = String ( data : data , encoding : . utf8 ), ! string . isEmpty { print ( string ) } \u7b49\u4ef7\u4e8e\uff1a 1 2 3 4 5 6 7 if let data = optionalData { if let string = String ( data : data , encoding : . utf8 ) { if ! string . isEmpty { print ( string ) } } } \u5982\u679c\u6210\u5458\u662f Optional\uff0c\u53ef\u4ee5\u5229\u7528\u4e00\u79cd\u53eb\u505a optional chaining \u7684\u8bed\u6cd5\u8fdb\u884c\u89e3\u5305\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 class A { var foo : String ? } class B { var a : A ? } // b \u662f B \u7c7b\u578b if let stringCount = b . a ?. foo ?. count { print ( stringCount ) } \u5728\u4e00\u6761\u201c\u94fe\u201d b.a?.foo?.count \u4e2d\uff0c a \u548c foo \u90fd\u6709\u53ef\u80fd\u4e3a\u7a7a\uff0c\u5f53\u5176\u4e2d\u4e4b\u4e00\u4e3a\u7a7a\u65f6\uff0c stringCount \u4e3a nil \uff1b\u5f53\u5747\u4e0d\u4e3a\u7a7a\u65f6\uff0c stringCount \u975e\u7a7a\u3002","title":"if \u8bed\u53e5"},{"location":"languages/swift/control-flow/#guard","text":"\u4f7f\u7528 guard...else \u6765\u5904\u7406\u9700\u8981\u8df3\u51fa\u5f53\u524d\u4f5c\u7528\u57df\u7684\u60c5\u5f62\u3002 guard \u540e\u53ef\u4ee5\u662f\u6761\u4ef6\u8868\u8fbe\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e0e if let \u7c7b\u4f3c\u7684\u5bf9 Optional \u7684\u89e3\u5305\uff1a 1 2 3 4 5 6 7 func iterate ( _ array : [ Int ]?) { guard let array = array else { return } // Proceed with a non-nil array for element in array { print ( element ) } } guard \u540e\u5fc5\u987b\u6709 else \u8bed\u53e5\uff0c\u8868\u793a\u6761\u4ef6\u4e0d\u6210\u7acb\uff08 guard let \u8bed\u53e5\u4e2d\u662f\u503c\u4e3a nil \uff09\u65f6\u5982\u4f55\u5904\u7406\u5e76\u9000\u51fa\u3002\u6ce8\u610f\uff0c else \u8bed\u53e5\u4e2d\u5fc5\u987b\u9000\u51fa\u5f53\u524d\u51fd\u6570\uff08 return \uff09\u3001\u629b\u51fa\u5f02\u5e38\u6216\u89e6\u53d1\u4e25\u91cd\u9519\u8bef\uff08 fatalError() \uff09\u3002\u603b\u4e4b\uff0c \u4e0d\u6210\u7acb\u65f6\uff0c\u51fd\u6570\u4e0d\u80fd\u591f\u7ee7\u7eed\u6267\u884c \u3002 \u4f55\u65f6\u4f7f\u7528 guard guard \u8bed\u53e5\u5176\u5b9e\u53ef\u4ee5\u7528 if \u8bed\u53e5\u66ff\u4ee3\uff1a 1 2 3 4 5 6 func iterate ( _ array : [ Int ]?) { if array == nil { return } for element in array ! { // ... } } \u90a3\u4e48\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u9700\u8981 guard \u8bed\u53e5\u5462\uff1f guard \u8bed\u53e5\u8981\u6c42\u4e0d\u6ee1\u8db3\u7684\u60c5\u51b5\u4e0d\u80fd\u7ee7\u7eed\u5411\u4e0b\u6267\u884c\uff0c\u5728 \u7f16\u8bd1\u671f \u907f\u514d\u4e86\u9700\u8981\u7acb\u5373\u8fd4\u56de\u4f46\u6ca1\u6709\u8fd4\u56de\u7684\u60c5\u51b5\uff0c\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 func unlockPaidItem () { let userSubscribed = getSubscriptionStatus () guard userSubscribed else { showAlert ( \"You have not subscribed yet!\" ) // Forget to return here! } paidItem . unlock () } // error: 'guard' body must not fall through, // consider using a 'return' or 'throw' to exit the scope \u5982\u679c\u4f7f\u7528 if \uff0c\u4e0a\u9762\u7684\u60c5\u51b5\u4e0d\u4f1a\u4ea7\u751f\u7f16\u8bd1\u9519\u8bef\uff0c\u53ef\u80fd\u8981\u5230\u8fd0\u884c\u671f\u95f4\u51fa\u73b0\u95ee\u9898\u624d\u80fd\u53d1\u73b0\u9519\u8bef\u3002","title":"guard \u8bed\u53e5"},{"location":"languages/swift/control-flow/#for","text":"\u5728 Swift 3 \u4e2d\uff0cC \u98ce\u683c for \u5faa\u73af\u88ab\u5220\u9664 \uff0c\u4ece\u6b64 Swift \u53ea\u652f\u6301 for ... in ... \u7c7b\u578b\u7684 for \u5faa\u73af\u3002 Swift \u4e2d\u8303\u56f4\u53ef\u4ee5\u7528 ... \u548c ..< \u8868\u793a\uff0c\u524d\u8005\u8868\u793a\u95ed\u533a\u95f4\uff0c\u540e\u8005\u8868\u793a\u524d\u95ed\u540e\u5f00\u533a\u95f4\uff1b\u4f7f\u7528 stride(from:to:by:) \u4ee5\u7279\u5b9a\u6b65\u957f\u8fdb\u884c\u904d\u5386\uff1a 1 2 3 4 5 6 7 8 9 10 11 for i in 0. .. 10 { // Iterate through 1, 2, ..., 10 } for i in 0. .< 10 { // Iterate through 1, 2, ..., 9 } for tickMark in stride ( from : 0 , to : 60 , by : 5 ) { // render the tick mark every 5 minutes (0, 5, 10, 15 ... 45, 50, 55) } \u53e6\u5916\uff0c\u6570\u7ec4\u7b49\u4e5f\u53ef\u4f7f\u7528 for \u5faa\u73af\u8fdb\u884c\u904d\u5386\uff1a 1 2 3 for value in [ 1 , 2 , 3 ] { print ( value ) }","title":"for \u5faa\u73af\u8bed\u53e5"},{"location":"languages/swift/control-flow/#while-repeat-while","text":"while \u5faa\u73af\u548c C/C++ \u76f8\u540c\uff0c repeat-while \u5faa\u73af\u5bf9\u5e94 do-while \u5faa\u73af\uff1a 1 2 3 4 5 6 7 while condition { // statements } repeat { // statements } while condition","title":"while \u548c repeat-while \u8bed\u53e5"},{"location":"languages/swift/control-flow/#switch","text":"switch \u8bed\u53e5\u7528\u4e8e\u5339\u914d\u503c\uff0c\u53ef\u4ee5\u7528\u8303\u56f4\u8868\u8fbe\u5f0f\u8fdb\u884c\u8303\u56f4\u5339\u914d\u3002 \u4e0e C/C++ \u4e0d\u540c\uff0c\u5339\u914d\u540e\u8df3\u51fa switch \u4e0d\u9700\u8981 break \u8bed\u53e5\uff0c\u5982\u679c\u9700\u8981\u8df3\u5230\u4e0b\u4e00\u4e2a case \uff0c\u4f7f\u7528 fallthrough \u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 let age = 21 switch age { case 0 : print ( \"New born\" ) case 1. .< 10 : print ( \"Child\" ) case 1. .< 25 : print ( \"Young people\" ) default : print ( \"I don't care about it right now\" ) } // Young People Info Swift \u4e2d\u7684 switch \u8bed\u53e5\u6709\u975e\u5e38\u591a\u7528\u6cd5\uff0c\u8be6\u89c1 \u5b98\u65b9\u6587\u6863 \u3002","title":"switch \u8bed\u53e5"},{"location":"languages/swift/control-flow/#_1","text":"\u5728\u5faa\u73af\u4e2d\uff0c\u4f7f\u7528 continue \u8f6c\u5230\u4e0b\u4e00\u6b21\u5faa\u73af\uff1a 1 2 3 4 5 6 7 var characters = \"\" for character in \"Swift Programming Language\" { if character == \" \" { continue } characters . append ( character ) } \u4f7f\u7528 break \u9000\u51fa\u5faa\u73af\uff1a 1 2 3 4 5 6 for character in \"Swift Programming Language\" { if character == \" \" { print ( \"Blank character exists!\" ) break } } \u4f7f\u7528\u6807\u7b7e\u8de8\u8d8a\u591a\u5c42\u5faa\u73af\u8fdb\u884c\u63a7\u5236\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 let words = [ \"Swift\" , \"\u70eb\" , \"Programming\" , \"Language\" ] outerLoop : for word in words { // A stupid switch just to demostrate switch word . first { case \"S\" : print ( \"Swift\" ) case \"P\" : print ( \"Programming\" ) case \"L\" : print ( \"Language\" ) default : print ( \"Invalid word!\" ) break outerLoop } } // Swift // Invalid word!","title":"\u63a7\u5236\u8f6c\u79fb"},{"location":"languages/swift/extensions/","text":"\u8bed\u8a00\u8bbe\u8ba1\u76f8\u5173 \u00b6 \u4e0b\u9762\u662f\u4e00\u4e9b\u4e0e Swift \u8bed\u8a00\u8bbe\u8ba1\u7684\u53d1\u5c55\u53ca\u5176\u4e2d\u7684\u601d\u60f3\u76f8\u5173\u7684\u5185\u5bb9\uff1a Swift \u4e2d\u7684\u9762\u5411\u534f\u8bae\u7f16\u7a0b \uff1aWWDC \u4e2d\u5b98\u65b9\u5bf9\u4e8e Swift \u4e2d POP \u601d\u60f3\u7684\u4ecb\u7ecd Swift \u8bed\u8a00\u8fdb\u5316\u6587\u6863 \uff1a\u8bb0\u5f55\u4e86 Swift \u53d1\u5c55\u8fc7\u7a0b\u4e2d\u7684\u63d0\u8bae\u53ca\u5176\u80cc\u540e\u7684\u60f3\u6cd5 \u66f4\u591a\u8bed\u6cd5\u77e5\u8bc6 \u00b6 \u524d\u9762\u4ecb\u7ecd\u7684\u662f Swift \u7684\u4e3b\u8981\u8bed\u6cd5\u77e5\u8bc6\u3002\u4e0d\u8fc7\uff0c\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\u53ef\u80fd\u4f1a\u9047\u5230\u6216\u8005\u9700\u8981\u4f7f\u7528\u66f4\u52a0\u9ad8\u7ea7\u7684\u8bed\u6cd5\uff0c\u9650\u4e8e\u7bc7\u5e45\u65e0\u6cd5\u5c55\u5f00\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u8d44\u6e90\u8fdb\u884c\u5b66\u4e60\uff1a \u9519\u8bef\u5904\u7406 \u5e76\u53d1 \u4e0b\u6807\u91cd\u8f7d \u5f15\u7528\u8ba1\u6570 \u5185\u5b58\u5b89\u5168 \u9ad8\u7ea7\u8fd0\u7b97\u7b26 \u4ee5\u4e0b\u8bed\u6cd5\u77e5\u8bc6\u5728 SwiftUI \u4e2d\u975e\u5e38\u91cd\u8981\uff08\u57fa\u672c\u4e0a\u5c31\u662f\u4e3a\u4e86 SwiftUI \u800c\u8bbe\u8ba1\u7684\uff09\uff1a Property Wrapper Opaque Types Result Builder \u4ee5\u4e0a\u5185\u5bb9\u5747\u6765\u81ea\u4e8e Swift \u5b98\u65b9\u6559\u7a0b \u3002 \u4f5c\u4e3a\u4e3b\u8981\u7528\u4e8e iOS \u7b49\u5e73\u53f0\u5e94\u7528\u5f00\u53d1\u7684\u8bed\u8a00\uff0cSwift \u7684\u5f88\u591a\u8bed\u6cd5\u90fd\u662f\u4e3a\u4e86\u89e3\u51b3\u5f00\u53d1\u7684\u95ee\u9898\u800c\u8bbe\u8ba1\u7684\u3002\u56e0\u6b64\uff0c\u53ea\u6709\u771f\u6b63\u4e0a\u624b\u5e94\u7528\u5f00\u53d1\uff0c\u5728\u5f00\u53d1\u4e2d\u4e0d\u65ad\u9047\u5230\u95ee\u9898\u3001\u89e3\u51b3\u95ee\u9898\uff0c\u624d\u80fd\u771f\u6b63\u638c\u63e1 Swift \u8bed\u8a00\u3002","title":"\u540e\u7eed\u62d3\u5c55"},{"location":"languages/swift/extensions/#_1","text":"\u4e0b\u9762\u662f\u4e00\u4e9b\u4e0e Swift \u8bed\u8a00\u8bbe\u8ba1\u7684\u53d1\u5c55\u53ca\u5176\u4e2d\u7684\u601d\u60f3\u76f8\u5173\u7684\u5185\u5bb9\uff1a Swift \u4e2d\u7684\u9762\u5411\u534f\u8bae\u7f16\u7a0b \uff1aWWDC \u4e2d\u5b98\u65b9\u5bf9\u4e8e Swift \u4e2d POP \u601d\u60f3\u7684\u4ecb\u7ecd Swift \u8bed\u8a00\u8fdb\u5316\u6587\u6863 \uff1a\u8bb0\u5f55\u4e86 Swift \u53d1\u5c55\u8fc7\u7a0b\u4e2d\u7684\u63d0\u8bae\u53ca\u5176\u80cc\u540e\u7684\u60f3\u6cd5","title":"\u8bed\u8a00\u8bbe\u8ba1\u76f8\u5173"},{"location":"languages/swift/extensions/#_2","text":"\u524d\u9762\u4ecb\u7ecd\u7684\u662f Swift \u7684\u4e3b\u8981\u8bed\u6cd5\u77e5\u8bc6\u3002\u4e0d\u8fc7\uff0c\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\u53ef\u80fd\u4f1a\u9047\u5230\u6216\u8005\u9700\u8981\u4f7f\u7528\u66f4\u52a0\u9ad8\u7ea7\u7684\u8bed\u6cd5\uff0c\u9650\u4e8e\u7bc7\u5e45\u65e0\u6cd5\u5c55\u5f00\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u8d44\u6e90\u8fdb\u884c\u5b66\u4e60\uff1a \u9519\u8bef\u5904\u7406 \u5e76\u53d1 \u4e0b\u6807\u91cd\u8f7d \u5f15\u7528\u8ba1\u6570 \u5185\u5b58\u5b89\u5168 \u9ad8\u7ea7\u8fd0\u7b97\u7b26 \u4ee5\u4e0b\u8bed\u6cd5\u77e5\u8bc6\u5728 SwiftUI \u4e2d\u975e\u5e38\u91cd\u8981\uff08\u57fa\u672c\u4e0a\u5c31\u662f\u4e3a\u4e86 SwiftUI \u800c\u8bbe\u8ba1\u7684\uff09\uff1a Property Wrapper Opaque Types Result Builder \u4ee5\u4e0a\u5185\u5bb9\u5747\u6765\u81ea\u4e8e Swift \u5b98\u65b9\u6559\u7a0b \u3002 \u4f5c\u4e3a\u4e3b\u8981\u7528\u4e8e iOS \u7b49\u5e73\u53f0\u5e94\u7528\u5f00\u53d1\u7684\u8bed\u8a00\uff0cSwift \u7684\u5f88\u591a\u8bed\u6cd5\u90fd\u662f\u4e3a\u4e86\u89e3\u51b3\u5f00\u53d1\u7684\u95ee\u9898\u800c\u8bbe\u8ba1\u7684\u3002\u56e0\u6b64\uff0c\u53ea\u6709\u771f\u6b63\u4e0a\u624b\u5e94\u7528\u5f00\u53d1\uff0c\u5728\u5f00\u53d1\u4e2d\u4e0d\u65ad\u9047\u5230\u95ee\u9898\u3001\u89e3\u51b3\u95ee\u9898\uff0c\u624d\u80fd\u771f\u6b63\u638c\u63e1 Swift \u8bed\u8a00\u3002","title":"\u66f4\u591a\u8bed\u6cd5\u77e5\u8bc6"},{"location":"languages/swift/generics/","text":"\u6cdb\u578b\u5bf9\u5e94 C++ \u4e2d\u6a21\u7248\u7684\u6982\u5ff5\uff0c\u51fd\u6570\u3001\u7c7b\u578b\u548c\u534f\u8bae\u5747\u53ef\u8fdb\u884c\u6cdb\u578b\u7f16\u7a0b\uff1a 1 2 3 4 5 func swapTwoValues < T >( _ a : inout T , _ b : inout T ) struct Array < Element > {...} protocol View { associatedtype Body : View } \u51fd\u6570\u6cdb\u578b \u00b6 \u5728\u51fd\u6570\u540d\u540e\u52a0\u4e0a <\u7c7b\u578b\u53c2\u6570> \uff0c\u53c2\u6570\u53ef\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\uff1a 1 2 3 4 5 func swapTwoValues < T >( _ a : inout T , _ b : inout T ) { let temporaryA = a a = b b = temporaryA } Info inout \u5173\u952e\u5b57\u7528\u4e8e\u51fd\u6570\u53c2\u6570\uff0c\u8868\u793a\u4f20\u9012\u5f15\u7528\u800c\u975e\u503c\uff0c\u8be6\u89c1 \u5b98\u65b9\u6559\u7a0b \u3002 \u8c03\u7528\u65f6\uff0c\u7531\u4e8e Swift \u6709\u81ea\u52a8\u7c7b\u578b\u63a8\u65ad\uff0c\u4e0d\u9700\u8981\u663e\u5f0f\u5199\u51fa\u7c7b\u578b\uff1a 1 2 3 var a = 1 var b = 2 swapTwoValues (& a , & b ) \u7c7b\u578b\u6cdb\u578b \u00b6 \u5728\u7c7b\u578b\u540d\u540e\u52a0\u4e0a <\u7c7b\u578b\u53c2\u6570> \uff0c\u5982\u4e4b\u524d\u4ecb\u7ecd\u7684 Optional \uff1a 1 2 3 4 enum Optional < Wrapped > { case some ( Wrapped ) case none } \u518d\u5982\uff0c Array \u7b49\u5185\u7f6e\u7c7b\u578b\uff1a 1 2 3 struct Array < Element > { ... } \u534f\u8bae\u6cdb\u578b \u00b6 \u534f\u8bae\u7684\u6cdb\u578b\u4e0e\u524d\u4e24\u7c7b\u6709\u6240\u4e0d\u540c\uff0c\u9700\u8981\u5728\u534f\u8bae\u4f53\u5185\u7528 associatedtype \u58f0\u660e\uff1a 1 2 3 protocol Sequence { associatedtype Element } \u67d0\u4e2a\u7c7b\u578b\u9075\u5faa\u534f\u8bae\u65f6\uff0c\u7c7b\u578b\u58f0\u660e\u4e2d\u9700\u8981\u8bf4\u660e\u534f\u8bae\u5185\u6240\u6709 associatedtype \u7684\u771f\u5b9e\u7c7b\u578b\uff1a 1 2 3 struct MyIntArray : Sequence { typealias Element = Int } \u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u4f7f\u7528 typealias \u6307\u51fa\u4e86 Sequence \u4e2d Element \u7684\u7c7b\u578b\u4e3a Int \u3002 typealias typealias \u5173\u952e\u5b57\u7528\u6765\u7ed9\u7c7b\u578b\u8d4b\u4e88\u522b\u540d\uff0c\u7c7b\u4f3c\u4e8e C \u4e2d\u7684 typedef \u548c C++ \u4e2d\u7684 using \u3002 \u7c7b\u578b\u7ea6\u675f \u00b6 \u5b9a\u4e49\u6cdb\u578b\u65f6\uff0c\u53ef\u4ee5\u5bf9\u7c7b\u578b\u4f5c\u4e00\u5b9a\u7ea6\u675f\uff0c\u4f7f\u5f97\u6211\u4eec\u80fd\u591f\u83b7\u5f97\u5173\u4e8e\u6a21\u7248\u7c7b\u578b\u7684\u66f4\u591a\u4fe1\u606f\u3002\u6bd4\u5982\u4e4b\u524d\u63d0\u5230\u7684 Equatable \uff1a 1 2 3 4 5 6 7 8 9 10 func isEqual < T : Equatable >( lhs : T , rhs : T ) -> Bool { return lhs == rhs // equatable } struct EquatableArray < Element > where Element : Equatable {...} struct EquatableArray < Element : Equatable > {...} protocol EquatableSequence { typealias Element : Equatable } \u901a\u8fc7\u9650\u5236 T \u7684\u7c7b\u578b\u4e3a Equatable \uff0c\u6211\u4eec\u7684 isEqual \u5f97\u4ee5\u8c03\u7528 == \u8fd0\u7b97\u7b26\u5224\u65ad\u662f\u5426\u76f8\u7b49\u3002","title":"\u6cdb\u578b"},{"location":"languages/swift/generics/#_1","text":"\u5728\u51fd\u6570\u540d\u540e\u52a0\u4e0a <\u7c7b\u578b\u53c2\u6570> \uff0c\u53c2\u6570\u53ef\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\uff1a 1 2 3 4 5 func swapTwoValues < T >( _ a : inout T , _ b : inout T ) { let temporaryA = a a = b b = temporaryA } Info inout \u5173\u952e\u5b57\u7528\u4e8e\u51fd\u6570\u53c2\u6570\uff0c\u8868\u793a\u4f20\u9012\u5f15\u7528\u800c\u975e\u503c\uff0c\u8be6\u89c1 \u5b98\u65b9\u6559\u7a0b \u3002 \u8c03\u7528\u65f6\uff0c\u7531\u4e8e Swift \u6709\u81ea\u52a8\u7c7b\u578b\u63a8\u65ad\uff0c\u4e0d\u9700\u8981\u663e\u5f0f\u5199\u51fa\u7c7b\u578b\uff1a 1 2 3 var a = 1 var b = 2 swapTwoValues (& a , & b )","title":"\u51fd\u6570\u6cdb\u578b"},{"location":"languages/swift/generics/#_2","text":"\u5728\u7c7b\u578b\u540d\u540e\u52a0\u4e0a <\u7c7b\u578b\u53c2\u6570> \uff0c\u5982\u4e4b\u524d\u4ecb\u7ecd\u7684 Optional \uff1a 1 2 3 4 enum Optional < Wrapped > { case some ( Wrapped ) case none } \u518d\u5982\uff0c Array \u7b49\u5185\u7f6e\u7c7b\u578b\uff1a 1 2 3 struct Array < Element > { ... }","title":"\u7c7b\u578b\u6cdb\u578b"},{"location":"languages/swift/generics/#_3","text":"\u534f\u8bae\u7684\u6cdb\u578b\u4e0e\u524d\u4e24\u7c7b\u6709\u6240\u4e0d\u540c\uff0c\u9700\u8981\u5728\u534f\u8bae\u4f53\u5185\u7528 associatedtype \u58f0\u660e\uff1a 1 2 3 protocol Sequence { associatedtype Element } \u67d0\u4e2a\u7c7b\u578b\u9075\u5faa\u534f\u8bae\u65f6\uff0c\u7c7b\u578b\u58f0\u660e\u4e2d\u9700\u8981\u8bf4\u660e\u534f\u8bae\u5185\u6240\u6709 associatedtype \u7684\u771f\u5b9e\u7c7b\u578b\uff1a 1 2 3 struct MyIntArray : Sequence { typealias Element = Int } \u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u4f7f\u7528 typealias \u6307\u51fa\u4e86 Sequence \u4e2d Element \u7684\u7c7b\u578b\u4e3a Int \u3002 typealias typealias \u5173\u952e\u5b57\u7528\u6765\u7ed9\u7c7b\u578b\u8d4b\u4e88\u522b\u540d\uff0c\u7c7b\u4f3c\u4e8e C \u4e2d\u7684 typedef \u548c C++ \u4e2d\u7684 using \u3002","title":"\u534f\u8bae\u6cdb\u578b"},{"location":"languages/swift/generics/#_4","text":"\u5b9a\u4e49\u6cdb\u578b\u65f6\uff0c\u53ef\u4ee5\u5bf9\u7c7b\u578b\u4f5c\u4e00\u5b9a\u7ea6\u675f\uff0c\u4f7f\u5f97\u6211\u4eec\u80fd\u591f\u83b7\u5f97\u5173\u4e8e\u6a21\u7248\u7c7b\u578b\u7684\u66f4\u591a\u4fe1\u606f\u3002\u6bd4\u5982\u4e4b\u524d\u63d0\u5230\u7684 Equatable \uff1a 1 2 3 4 5 6 7 8 9 10 func isEqual < T : Equatable >( lhs : T , rhs : T ) -> Bool { return lhs == rhs // equatable } struct EquatableArray < Element > where Element : Equatable {...} struct EquatableArray < Element : Equatable > {...} protocol EquatableSequence { typealias Element : Equatable } \u901a\u8fc7\u9650\u5236 T \u7684\u7c7b\u578b\u4e3a Equatable \uff0c\u6211\u4eec\u7684 isEqual \u5f97\u4ee5\u8c03\u7528 == \u8fd0\u7b97\u7b26\u5224\u65ad\u662f\u5426\u76f8\u7b49\u3002","title":"\u7c7b\u578b\u7ea6\u675f"},{"location":"languages/swift/internal-types/","text":"\u8fd0\u7b97\u76f8\u5173 \u00b6 Int \u3002\u6574\u578b\uff0c\u5728 32 / 64 \u4f4d\u673a\u5668\u4e0a\u5206\u522b\u4e3a 32 / 64 \u4f4d\uff0c\u5982\u65e0\u7279\u6b8a\u9700\u6c42\u76f4\u63a5\u4f7f\u7528 Int \u5373\u53ef Double \u3002\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570 Float \u3002\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570 \u8fd9\u4e9b\u7c7b\u578b\u5747\u4e3a struct \uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u4eec\u662f\u503c\u7c7b\u578b\uff0c\u4f20\u9012\u526f\u672c\u3002 Int \u548c Double \u90fd\u6709\u5bf9\u5e94\u7684\u5b57\u9762\u503c\uff0c\u5b57\u9762\u503c\u4e0e\u53d8\u91cf\u662f\u7b49\u6548\u7684\uff0c\u53ef\u4ee5\u8c03\u7528\u7c7b\u578b\u7684\u65b9\u6cd5\uff1a 1 2 print ( 12. negate ()) // Int, -12 print ( 1.2 . isEqual ( to : 1.2 )) // Double, true Swift \u6ca1\u6709 ++ \u8fd0\u7b97\u7b26\uff0c\u4f7f\u7528 += 1 \u4ee3\u66ff\u3002 \u5b57\u7b26\u4e32 \u00b6 \u5b57\u7b26\u4e32\u4e0e\u5b57\u7b26\u4e32\u5b57\u9762\u503c \u00b6 Swift \u4e2d\uff0c\u5b57\u7b26\u4e32\u7c7b\u578b\u4e3a String \uff0c\u4e5f\u662f struct \u3002 \u5b57\u7b26\u4e32\u5b57\u9762\u503c\u3001\u5b57\u7b26\u5e38\u91cf\u5747\u4f7f\u7528\u4e24\u4e2a\u53cc\u5f15\u53f7\u8868\u793a\uff1a 1 2 let greeting = \"Hello, World!\" // String let myCharacter : Character = \"H\" // Character \u591a\u884c\u5b57\u7b26\u4e32\u4f7f\u7528\u524d\u540e\u4e09\u4e2a\u5f15\u53f7\u5305\u56f4\uff1a 1 2 3 4 5 6 7 let softWrappedQuotation = \"\"\" The White Rabbit put on his spectacles. \" Where shall I begin , \\ please your Majesty ? \" he asked. \" Begin at the beginning , \" the King said gravely, \" and go on \\ till you come to the end ; then stop . \" \"\"\" \u4ece\u884c\u5f00\u5934\u5230\u4e0e\u672b\u5c3e \"\"\" \u7684\u7b2c\u4e00\u4e2a\u5f15\u53f7\u4e4b\u95f4\u7684\u7a7a\u767d\u5b57\u7b26\u5c06\u88ab\u5ffd\u7565\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u539f\u59cb\u5b57\u7b26\u4e32\uff08raw string\uff09\u7528 #\" \"# \u6216 #\"\"\" \"\"\"# \u5305\u56f4\uff1a 1 let regex = # \"\\d{1,7}\" # \u5b57\u7b26\u4e32\u53d8\u91cf\u662f\u53ef\u4ee5\u66f4\u6539\u7684\uff1a 1 2 var myString = \"Swift\" myString += \" Programming Language\" \u5b57\u7b26\u4e32\u683c\u5f0f\u5316 \u00b6 Swift \u5b57\u7b26\u4e32\u6709\u4e00\u79cd\u4e0e Python \u4e2d\u7684 fstring \u7c7b\u4f3c\u7684\u5c06\u4efb\u610f\u7c7b\u578b\u53d8\u91cf\u63d2\u5165\u5b57\u7b26\u4e32\u7684\u65b9\u6cd5\uff1a 1 2 let name = \"Jack\" print ( \"Hello, \\( name ) !\" ) String \u8fd8\u63d0\u4f9b\u4e86 C \u98ce\u683c\u7684\u683c\u5f0f\u5316\u6784\u9020\u51fd\u6570\uff0c\u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u5176\u5360\u4f4d\u7b26\u4e0e C \u6709\u4e0d\u540c\uff1a 1 2 let name = \"Jack\" print ( String ( format : \"Hello, %@\" , name )) \u96c6\u5408\u7c7b\u578b \u00b6 \u53ef\u53d8\u6570\u7ec4 Array \u00b6 \u53ef\u53d8\u6570\u7ec4\uff0c\u76f8\u5f53\u4e8e std::vector \uff0c\u4e3a \u503c\u7c7b\u578b \u3002 Array \u7c7b\u578b\u6709\u4e24\u79cd\u7b49\u4ef7\u7684\u8868\u793a\u65b9\u6cd5\uff0c\u4e00\u822c\u4f7f\u7528\u7b2c\u4e00\u79cd\uff1a 1 2 var rectangles : [ Rectangle ] var rectangles : Array < Rectangle > Array \u6709\u4ee5\u4e0b\u51e0\u79cd\u5e38\u89c1\u7684\u6784\u9020\u65b9\u6cd5\uff1a 1 2 3 let values = [ Int ]() // \u7a7a\u6570\u7ec4 let values = [ 1 , 2 , 3 ] let values = [ Int ]( repeating : 0 , count : 3 ) // [0, 0, 0] \u4f7f\u7528 append \u3001\u52a0\u6cd5\u8fd0\u7b97\u7b26\u589e\u52a0\u5143\u7d20\uff1a 1 2 3 var values = [ Int ]() values . append ( 1 ) // [1] values += values // [1, 1] \u4f7f\u7528 remove(at:) \u5220\u9664\u5143\u7d20\uff1a 1 2 var values = [ 1 , 2 , 3 ] let removedValue = values . remove ( at : 0 ) // [2, 3], removedValue == 1 \u4f7f\u7528\u4e0b\u6807\u3001 first \u3001 last \u7b49\u6765\u7d22\u5f15\uff0c\u901a\u8fc7 count \u83b7\u53d6\u6570\u91cf\uff1a 1 2 3 4 5 let values = [ 1 , 2 , 3 ] print ( values [ 1 ]) // 2 print ( values . first ) // Optional(1) print ( values . last ) // Optional(3) print ( values . count ) // 3 \u4e00\u4e9b\u5e38\u7528\u7684\u5bf9\u6570\u7ec4\u8fdb\u884c\u904d\u5386\u6216\u8005\u8f6c\u6362\u7684\u51fd\u6570\uff1a 1 2 3 4 5 6 7 8 9 let values = [ 1 , 2 , 3 ] // \u904d\u5386 values . forEach { print ( $0 ) } // prints 1, 2, 3 // \u904d\u5386\uff0c\u5c06\u5176\u5143\u7d20\u4f9d\u6b21\u8f6c\u6362 let strings = values . map { String ( $0 ) } // [\"1\", \"2\", \"3\"] // \u901a\u8fc7\u89c4\u5219\u8fc7\u6ee4 let filteredValues = values . filter { $0 > 1 } // [2, 3] // \u904d\u5386\uff0c\u5c06\u7ed3\u679c\u7d2f\u79ef let sum = values . reduce ( 0 , { $0 + $1 }) // 0 + 1 + 2 + 3 = 6 \u5f53\u7136\uff0c\u53ef\u4ee5\u4f7f\u7528 for \u5faa\u73af\u8fdb\u884c\u904d\u5386\uff1a 1 2 3 4 5 6 7 for value in values { print ( value ) } for index in values . indices { print ( \"value at index \\( index ) is \\( values [ index ] ) \" ) } \u952e\u503c\u5bf9 Dictionary \u00b6 \u952e\u503c\u5bf9\uff0c\u5bf9\u5e94 std::map \uff0c\u503c\u7684\u7c7b\u578b\u5fc5\u987b\u76f8\u540c\u3002 Dictionary \u4e3a\u503c\u7c7b\u578b\uff0c\u4f20\u9012\u526f\u672c\u3002 \u4e24\u79cd\u7b49\u4ef7\u7684\u8868\u793a\u65b9\u6cd5\uff1a 1 2 var grades : [ String : Double ] var grades : Dictionary < String , Double > \u4e00\u4e9b\u5e38\u7528\u7684\u6784\u9020\u65b9\u6cd5\uff1a 1 2 3 let grades : [ String : Double ] = [:] // \u7a7a let grades = [ String : Double ]() // \u7a7a let grades = [ \"Alice\" : 4.0 , \"Bob\" : 3.9 ] \u901a\u8fc7\u952e\u83b7\u53d6\u5143\u7d20\uff0c\u7c7b\u578b\u4e3a Optional\uff1a 1 2 3 let grades = [ \"Alice\" : 4.0 , \"Bob\" : 3.9 ] grades [ \"Carol\" ] // nil grades [ \"Alice\" ] // Optional(4.0) \u901a\u8fc7\u952e\u589e\u52a0\u6216\u66f4\u6539\u5143\u7d20\uff1a 1 2 3 var grades = [ \"Alice\" : 4.0 , \"Bob\" : 3.9 ] grades [ \"Carol\" ] = 3.8 grades [ \"Alice\" ] = 3.99 \u4f7f\u7528 for \u5faa\u73af\u8fdb\u884c\u904d\u5386\uff1a 1 2 3 for ( name , grade ) in grades { print ( \" \\( name ) 's grade is \\( grade ) \" ) }","title":"\u90e8\u5206\u5185\u7f6e\u7c7b\u578b"},{"location":"languages/swift/internal-types/#_1","text":"Int \u3002\u6574\u578b\uff0c\u5728 32 / 64 \u4f4d\u673a\u5668\u4e0a\u5206\u522b\u4e3a 32 / 64 \u4f4d\uff0c\u5982\u65e0\u7279\u6b8a\u9700\u6c42\u76f4\u63a5\u4f7f\u7528 Int \u5373\u53ef Double \u3002\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570 Float \u3002\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570 \u8fd9\u4e9b\u7c7b\u578b\u5747\u4e3a struct \uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u4eec\u662f\u503c\u7c7b\u578b\uff0c\u4f20\u9012\u526f\u672c\u3002 Int \u548c Double \u90fd\u6709\u5bf9\u5e94\u7684\u5b57\u9762\u503c\uff0c\u5b57\u9762\u503c\u4e0e\u53d8\u91cf\u662f\u7b49\u6548\u7684\uff0c\u53ef\u4ee5\u8c03\u7528\u7c7b\u578b\u7684\u65b9\u6cd5\uff1a 1 2 print ( 12. negate ()) // Int, -12 print ( 1.2 . isEqual ( to : 1.2 )) // Double, true Swift \u6ca1\u6709 ++ \u8fd0\u7b97\u7b26\uff0c\u4f7f\u7528 += 1 \u4ee3\u66ff\u3002","title":"\u8fd0\u7b97\u76f8\u5173"},{"location":"languages/swift/internal-types/#_2","text":"","title":"\u5b57\u7b26\u4e32"},{"location":"languages/swift/internal-types/#_3","text":"Swift \u4e2d\uff0c\u5b57\u7b26\u4e32\u7c7b\u578b\u4e3a String \uff0c\u4e5f\u662f struct \u3002 \u5b57\u7b26\u4e32\u5b57\u9762\u503c\u3001\u5b57\u7b26\u5e38\u91cf\u5747\u4f7f\u7528\u4e24\u4e2a\u53cc\u5f15\u53f7\u8868\u793a\uff1a 1 2 let greeting = \"Hello, World!\" // String let myCharacter : Character = \"H\" // Character \u591a\u884c\u5b57\u7b26\u4e32\u4f7f\u7528\u524d\u540e\u4e09\u4e2a\u5f15\u53f7\u5305\u56f4\uff1a 1 2 3 4 5 6 7 let softWrappedQuotation = \"\"\" The White Rabbit put on his spectacles. \" Where shall I begin , \\ please your Majesty ? \" he asked. \" Begin at the beginning , \" the King said gravely, \" and go on \\ till you come to the end ; then stop . \" \"\"\" \u4ece\u884c\u5f00\u5934\u5230\u4e0e\u672b\u5c3e \"\"\" \u7684\u7b2c\u4e00\u4e2a\u5f15\u53f7\u4e4b\u95f4\u7684\u7a7a\u767d\u5b57\u7b26\u5c06\u88ab\u5ffd\u7565\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u539f\u59cb\u5b57\u7b26\u4e32\uff08raw string\uff09\u7528 #\" \"# \u6216 #\"\"\" \"\"\"# \u5305\u56f4\uff1a 1 let regex = # \"\\d{1,7}\" # \u5b57\u7b26\u4e32\u53d8\u91cf\u662f\u53ef\u4ee5\u66f4\u6539\u7684\uff1a 1 2 var myString = \"Swift\" myString += \" Programming Language\"","title":"\u5b57\u7b26\u4e32\u4e0e\u5b57\u7b26\u4e32\u5b57\u9762\u503c"},{"location":"languages/swift/internal-types/#_4","text":"Swift \u5b57\u7b26\u4e32\u6709\u4e00\u79cd\u4e0e Python \u4e2d\u7684 fstring \u7c7b\u4f3c\u7684\u5c06\u4efb\u610f\u7c7b\u578b\u53d8\u91cf\u63d2\u5165\u5b57\u7b26\u4e32\u7684\u65b9\u6cd5\uff1a 1 2 let name = \"Jack\" print ( \"Hello, \\( name ) !\" ) String \u8fd8\u63d0\u4f9b\u4e86 C \u98ce\u683c\u7684\u683c\u5f0f\u5316\u6784\u9020\u51fd\u6570\uff0c\u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u5176\u5360\u4f4d\u7b26\u4e0e C \u6709\u4e0d\u540c\uff1a 1 2 let name = \"Jack\" print ( String ( format : \"Hello, %@\" , name ))","title":"\u5b57\u7b26\u4e32\u683c\u5f0f\u5316"},{"location":"languages/swift/internal-types/#_5","text":"","title":"\u96c6\u5408\u7c7b\u578b"},{"location":"languages/swift/internal-types/#array","text":"\u53ef\u53d8\u6570\u7ec4\uff0c\u76f8\u5f53\u4e8e std::vector \uff0c\u4e3a \u503c\u7c7b\u578b \u3002 Array \u7c7b\u578b\u6709\u4e24\u79cd\u7b49\u4ef7\u7684\u8868\u793a\u65b9\u6cd5\uff0c\u4e00\u822c\u4f7f\u7528\u7b2c\u4e00\u79cd\uff1a 1 2 var rectangles : [ Rectangle ] var rectangles : Array < Rectangle > Array \u6709\u4ee5\u4e0b\u51e0\u79cd\u5e38\u89c1\u7684\u6784\u9020\u65b9\u6cd5\uff1a 1 2 3 let values = [ Int ]() // \u7a7a\u6570\u7ec4 let values = [ 1 , 2 , 3 ] let values = [ Int ]( repeating : 0 , count : 3 ) // [0, 0, 0] \u4f7f\u7528 append \u3001\u52a0\u6cd5\u8fd0\u7b97\u7b26\u589e\u52a0\u5143\u7d20\uff1a 1 2 3 var values = [ Int ]() values . append ( 1 ) // [1] values += values // [1, 1] \u4f7f\u7528 remove(at:) \u5220\u9664\u5143\u7d20\uff1a 1 2 var values = [ 1 , 2 , 3 ] let removedValue = values . remove ( at : 0 ) // [2, 3], removedValue == 1 \u4f7f\u7528\u4e0b\u6807\u3001 first \u3001 last \u7b49\u6765\u7d22\u5f15\uff0c\u901a\u8fc7 count \u83b7\u53d6\u6570\u91cf\uff1a 1 2 3 4 5 let values = [ 1 , 2 , 3 ] print ( values [ 1 ]) // 2 print ( values . first ) // Optional(1) print ( values . last ) // Optional(3) print ( values . count ) // 3 \u4e00\u4e9b\u5e38\u7528\u7684\u5bf9\u6570\u7ec4\u8fdb\u884c\u904d\u5386\u6216\u8005\u8f6c\u6362\u7684\u51fd\u6570\uff1a 1 2 3 4 5 6 7 8 9 let values = [ 1 , 2 , 3 ] // \u904d\u5386 values . forEach { print ( $0 ) } // prints 1, 2, 3 // \u904d\u5386\uff0c\u5c06\u5176\u5143\u7d20\u4f9d\u6b21\u8f6c\u6362 let strings = values . map { String ( $0 ) } // [\"1\", \"2\", \"3\"] // \u901a\u8fc7\u89c4\u5219\u8fc7\u6ee4 let filteredValues = values . filter { $0 > 1 } // [2, 3] // \u904d\u5386\uff0c\u5c06\u7ed3\u679c\u7d2f\u79ef let sum = values . reduce ( 0 , { $0 + $1 }) // 0 + 1 + 2 + 3 = 6 \u5f53\u7136\uff0c\u53ef\u4ee5\u4f7f\u7528 for \u5faa\u73af\u8fdb\u884c\u904d\u5386\uff1a 1 2 3 4 5 6 7 for value in values { print ( value ) } for index in values . indices { print ( \"value at index \\( index ) is \\( values [ index ] ) \" ) }","title":"\u53ef\u53d8\u6570\u7ec4 Array"},{"location":"languages/swift/internal-types/#dictionary","text":"\u952e\u503c\u5bf9\uff0c\u5bf9\u5e94 std::map \uff0c\u503c\u7684\u7c7b\u578b\u5fc5\u987b\u76f8\u540c\u3002 Dictionary \u4e3a\u503c\u7c7b\u578b\uff0c\u4f20\u9012\u526f\u672c\u3002 \u4e24\u79cd\u7b49\u4ef7\u7684\u8868\u793a\u65b9\u6cd5\uff1a 1 2 var grades : [ String : Double ] var grades : Dictionary < String , Double > \u4e00\u4e9b\u5e38\u7528\u7684\u6784\u9020\u65b9\u6cd5\uff1a 1 2 3 let grades : [ String : Double ] = [:] // \u7a7a let grades = [ String : Double ]() // \u7a7a let grades = [ \"Alice\" : 4.0 , \"Bob\" : 3.9 ] \u901a\u8fc7\u952e\u83b7\u53d6\u5143\u7d20\uff0c\u7c7b\u578b\u4e3a Optional\uff1a 1 2 3 let grades = [ \"Alice\" : 4.0 , \"Bob\" : 3.9 ] grades [ \"Carol\" ] // nil grades [ \"Alice\" ] // Optional(4.0) \u901a\u8fc7\u952e\u589e\u52a0\u6216\u66f4\u6539\u5143\u7d20\uff1a 1 2 3 var grades = [ \"Alice\" : 4.0 , \"Bob\" : 3.9 ] grades [ \"Carol\" ] = 3.8 grades [ \"Alice\" ] = 3.99 \u4f7f\u7528 for \u5faa\u73af\u8fdb\u884c\u904d\u5386\uff1a 1 2 3 for ( name , grade ) in grades { print ( \" \\( name ) 's grade is \\( grade ) \" ) }","title":"\u952e\u503c\u5bf9 Dictionary"},{"location":"languages/swift/types/","text":"Swift \u4e00\u4e2a\u91cd\u8981\u7684\u6982\u5ff5\u662f\u7c7b\u578b\u3002\u7c7b\u578b\u662f Swift \u4e2d\u5b9e\u73b0\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\uff08object-oriented programming\uff09\u3001\u9762\u5411\u534f\u8bae\u7f16\u7a0b\uff08protocol-oriented programming\uff09\u4ee5\u53ca\u6cdb\u578b\u7f16\u7a0b\uff08generic programming\uff09\u7684\u57fa\u7840\u3002 \u5728 Swift \u4e2d\uff0c\u6240\u6709\u53d8\u91cf\u7684\u7c7b\u578b\u8981\u4e48\u5c5e\u4e8e\uff1a class struct enum protocol \uff08\u4e00\u5b9a\u6761\u4ef6\u4e0b\uff09 \u8981\u4e48\u5c5e\u4e8e\uff1a tuple \u51fd\u6570 \u6211\u4eec\u5206\u522b\u4ecb\u7ecd\u4e0a\u9762\u7684\u51e0\u79cd\u7c7b\u578b\uff0c\u5728\u5176\u4e2d\u4f1a\u8ba8\u8bba\u5b83\u4eec\u4e4b\u95f4\u7684\u8054\u7cfb\u4e0e\u533a\u522b\u3002 \u7c7b class \u00b6 Swift \u4e2d\u7684 class \u4e0e C++ \u7c7b\u4f3c\u3002 1 2 3 4 5 6 7 8 9 10 11 12 class Counter { private ( set ) var count = 0 func increment () { count += 1 } func increment ( by amount : Int ) { count += amount } func reset () { count = 0 } } \u6210\u5458\u51fd\u6570\u3001\u6210\u5458\u53d8\u91cf\u53ca\u5176\u8bbf\u95ee\u63a7\u5236 \u00b6 Swift \u4e2d\u6210\u5458\u51fd\u6570\u548c\u6210\u5458\u53d8\u91cf\u7684\u6982\u5ff5\u4e0e C++ \u57fa\u672c\u4e00\u81f4\uff0c\u4e00\u4e2a\u7c7b\u5bf9\u8c61\u62e5\u6709\u72ec\u7acb\u7684\u6210\u5458\u53d8\u91cf\uff0c\u6210\u5458\u51fd\u6570\u53ef\u4ee5\u8bbf\u95ee\u6240\u6709\u7684\u6210\u5458\u53d8\u91cf\u3002 class \u7684\u8bbf\u95ee\u63a7\u5236\u901a\u8fc7\u5728\u6210\u5458\u58f0\u660e\u524d\u52a0\u4e0a\u4fee\u9970\u7b26\u5b9e\u73b0\uff0c\u5305\u62ec\uff1a public \uff1a \u9ed8\u8ba4 \uff0c\u5916\u754c\u53ef\u8bbf\u95ee\uff0c\u53ef\u5199 private \uff1a\u5916\u754c\u4e0d\u53ef\u8bbf\u95ee private(set) \uff08\u6210\u5458\u53d8\u91cf\uff09\uff1a\u5916\u754c\u53ef\u8bbf\u95ee\uff0c\u4e0d\u53ef\u5199 \u5728\u7c7b\u4e2d\u901a\u8fc7 self \u5f15\u7528\u81ea\u8eab\uff0c\u5982\u679c\u4e0d\u4f1a\u4ea7\u751f\u6b67\u4e49\uff0c\u53ef\u4ee5\u7701\u7565 self \u3002 \u5728\u7c7b\u4e2d\u65f6\u5e38\u4f1a\u7528\u5230\u4e00\u79cd\u7279\u6b8a\u7684\u53d8\u91cf\uff1a\u8ba1\u7b97\u53d8\u91cf\u3002\u8ba1\u7b97\u53d8\u91cf\u76f8\u5f53\u4e8e\u4e00\u4e2a \u6ca1\u6709\u53c2\u6570\u7684\u51fd\u6570 \uff0c\u6bcf\u6b21\u83b7\u53d6\u5176\u503c\u7684\u65f6\u5019\u90fd\u8981\u901a\u8fc7\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u6765\u8ba1\u7b97\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 class Rectangle { var width : Double var height : Double var area : Double { return width * height } ... } let rectangle = Rectangle (...) print ( rectangle . area ) \u8ba1\u7b97\u53d8\u91cf\u662f\u53ea\u8bfb\u7684\uff0c\u800c\u4e14\u4e0d\u4f1a\u5360\u7528\u50a8\u5b58\u7a7a\u95f4\u3002\u5982\u679c\u8ba1\u7b97\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u8d85\u8fc7 O(1) O(1) \uff0c\u90a3\u4e48\u5e94\u8be5\u4f7f\u7528\u666e\u901a\u7684\u51fd\u6570\uff0c\u800c\u4e0d\u662f\u8ba1\u7b97\u53d8\u91cf\u3002 \u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570 \u00b6 \u6784\u9020\u51fd\u6570\u4f7f\u7528\u5173\u952e\u5b57 init \u58f0\u660e\u3002\u7531\u4e8e Swift \u6ca1\u6709\u96f6\u503c\u521d\u59cb\u5316\uff0c\u6240\u6709\u6210\u5458\u53d8\u91cf\u90fd\u8981\u6709\u521d\u503c\uff0c\u8981\u4e48\u76f4\u63a5\u5728\u53d8\u91cf\u540e\u663e\u5f0f\u6307\u51fa\uff0c\u8981\u4e48\u5728\u6784\u9020\u51fd\u6570\u4e2d\u8bbe\u5b9a\u3002\u6784\u9020\u51fd\u6570\u7ed3\u675f\u65f6\uff0c\u6240\u6709\u6210\u5458\u53d8\u91cf\u90fd\u8981\u6709\u521d\u503c\uff0c\u5426\u5219\u4ea7\u751f\u7f16\u8bd1\u9519\u8bef\u3002 1 2 3 4 5 6 7 8 9 class A { var bar : Int var foo = \"Hello\" init ( bar : Int ) { self . bar = bar } } let a = A ( bar : 1 ) \u5982\u679c\u7c7b\u7684\u6bcf\u4e2a\u6210\u5458\u53d8\u91cf\u90fd\u6709\u9ed8\u8ba4\u503c\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff1a 1 2 3 4 5 class B { var bar = 1 var foo = \"Hello\" } let b = B () \u6790\u6784\u51fd\u6570\u4f7f\u7528\u5173\u952e\u5b57 deinit \u58f0\u660e\uff0c\u4e0d\u8fc7\u5728\u4e00\u822c\u7684\u5f00\u53d1\u4e2d\u5f88\u5c11\u7528\u5230\uff1a 1 2 3 deinit { ... } \u9759\u6001\u53d8\u91cf\u3001\u9759\u6001\u65b9\u6cd5 \u00b6 \u4f7f\u7528 static \u5b9a\u4e49\u9759\u6001\u53d8\u91cf\u548c\u65b9\u6cd5\uff1a 1 2 3 4 5 6 7 class A { static let shared = A () static func foo () {...} } let a = A . shared A . foo () \u7c7b\u662f\u5f15\u7528\u7c7b\u578b \u00b6 Swift \u4e2d\u7684\u7c7b\u662f\u5f15\u7528\u7c7b\u578b\uff0c\u4f20\u9012\u5f15\u7528\u800c\u975e\u526f\u672c\uff0c\u76f8\u5f53\u4e8e\u6307\u9488\u3002\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 9 class Counter { var count = 0 } let a = Counter () let b = a // b is a reference of a b . count += 1 print ( a . count ) // 1 Swift \u4e2d\u5bf9\u7c7b\u7684\u5b9e\u4f8b\u7684\u7ba1\u7406\u4f7f\u7528\u7c7b\u4f3c\u4e8e\u667a\u80fd\u6307\u9488\u7684\u65b9\u6cd5\uff0c\u5f53\u5f15\u7528\u8ba1\u6570\u4e3a 0 \u65f6\uff0c\u5b9e\u4f8b\u88ab\u9500\u6bc1\u3002\u53e6\u5916\uff0c\u53ef\u4ee5\u5728 var \u524d\u52a0\u4e0a weak \u58f0\u660e\u4e0d\u53c2\u4e0e\u8ba1\u6570\u7684 weak \u53d8\u91cf\u3002 \u7ee7\u627f \u00b6 Swift \u652f\u6301\u7c7b\u7684\u7ee7\u627f\uff0c\u4f46 \u4e0d\u652f\u6301\u591a\u91cd\u7ee7\u627f \u3002\u4e0e C++ \u4e0d\u540c\uff0cSwift \u7684\u7ee7\u627f\u6ca1\u6709 private \u3001 protected \u548c public \u4e4b\u5206\uff0c\u6240\u6709\u7ee7\u627f\u90fd\u76f8\u5f53\u4e8e C++ \u4e2d\u7684 public \u3002 \u53e6\u5916\uff0cSwift \u4e2d\u6240\u6709\u7684\u51fd\u6570\u90fd\u76f8\u5f53\u4e8e C++ \u4e2d\u7684\u865a\u51fd\u6570\uff0c\u5728\u6d3e\u751f\u7c7b\u4e2d\u4f7f\u7528 override \u5373\u53ef\u91cd\u5199\u57fa\u7c7b\u7684\u65b9\u6cd5\uff1b\u4f7f\u7528 super \u8c03\u7528\u57fa\u7c7b\u7684\u65b9\u6cd5\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 class Base { func foo () { print ( \"Base\" ) } } class Derived : Base { override func foo () { super . foo () // prints \"Base\" print ( \"Derived\" ) } } let derived = Derived () derived . foo () // \"Base Derived\" \u4f7f\u7528 as \u5411\u4e0b\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\uff0c\u4f7f\u7528 as? \u5411\u4e0a\u8fdb\u884c\u52a8\u6001\u7c7b\u578b\u8f6c\u6362\uff0c\u4f7f\u7528 as! \u8fdb\u884c\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff1a 1 2 3 4 5 6 var a : Base = Derived () let b = a as ? Derived // \u7c7b\u578b\u4e3a Optional<Derived> // \u6216 if let b = a as? Derived {...} let c = a as ! Derived // \u7c7b\u578b\u4e3a Derived\uff0c\u82e5\u8f6c\u6362\u5931\u8d25\u5219\u5bfc\u81f4\u5d29\u6e83 let d = c as Base // \u7c7b\u578b\u4e3a Base\uff0c\u5411\u4e0b\u8f6c\u6362\u5fc5\u7136\u6210\u529f \u7ed3\u6784\u4f53 struct \u00b6 \u4e0e C++ \u4e0d\u540c\uff0cSwift \u4e2d\u7684 struct \u548c class \u6709\u5171\u540c\u4e4b\u5904\uff0c\u4f46\u5e76\u4e0d\u80fd\u7b49\u540c\u3002 struct \u4e0e class \u7c7b\u4f3c\uff0c\u53ef\u4ee5\u5b9a\u4e49\u6210\u5458\u53d8\u91cf\u3001\u6210\u5458\u51fd\u6570\u3001\u9759\u6001\u6210\u5458\u3001\u6784\u9020\u51fd\u6570\uff0c\u8bbf\u95ee\u63a7\u5236\u4e0e\u7c7b\u76f8\u540c\u3002 \u5b83\u4eec\u4e4b\u95f4\u7684\u4e0d\u540c\u70b9\u6709\uff1a struct \u662f \u503c\u7c7b\u578b \u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4f20\u9012\u7684\u662f\u539f\u6709\u5b9e\u4f8b\u7684 \u526f\u672c \uff0c\u800c\u975e\u5f15\u7528 struct \u6ca1\u6709\u7ee7\u627f struct \u4e0d\u80fd\u5b9a\u4e49\u6790\u6784\u51fd\u6570 \u4e0e class \u8fdb\u884c\u5bf9\u7167 \u4f7f\u7528\u4e0a\u9762\u7684\u4f8b\u5b50\uff1a 1 2 3 4 5 6 7 8 9 struct Counter { var count = 0 } var a = Counter () var b = a // b is a copy of a b . count += 1 // b.count == 1 print ( a . count ) // 0 struct \u7531\u4e8e\u6ca1\u6709\u7ee7\u627f\uff0c\u56e0\u6b64\u5bf9\u6210\u5458\u7684\u6784\u9020\u51fd\u6570\uff08\u82f1\u8bed\uff1aMemberwise initializer\uff09\u80fd\u591f\u81ea\u52a8\u751f\u6210\uff0c\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u65e0\u9700\u624b\u52a8\u5199\u6784\u9020\u51fd\u6570\uff1a 1 2 3 4 5 6 struct A { var foo : Int var bar : String } let a = A ( foo : 1 , bar : \"Hello\" ) \u53e6\u5916\uff0c struct \u7684\u6210\u5458\u51fd\u6570\u9ed8\u8ba4\u4e0d\u53ef\u66f4\u6539\u6210\u5458\u53d8\u91cf\uff0c\u5982\u679c\u9700\u8981\u66f4\u6539\uff0c\u5219\u9700\u8981\u5728\u51fd\u6570\u524d\u52a0\u4e0a mutating \uff1a 1 2 3 4 5 6 struct Counter { var count = 0 mutating func increase () { count += 1 } } \u5173\u4e8e struct \u548c class \u7684\u4f7f\u7528 \u770b\u4e0a\u53bb struct \u6bd4 class \u529f\u80fd\u5f31\u4e86\u4e0d\u5c11\uff0c\u4f46 struct \u901a\u8fc7\u9075\u5faa\u534f\u8bae\uff08\u82f1\u8bed\uff1aprotocol\uff0c\u5728\u4e0b\u9762\u4ecb\u7ecd\uff09\u53ef\u4ee5\u5b9e\u73b0\u7ee7\u627f\u7684\u6548\u679c\uff0c\u540c\u65f6\u7531\u4e8e\u4f20\u9012\u7684\u4e0d\u662f\u5f15\u7528\uff0c\u56e0\u6b64\u5927\u5927\u964d\u4f4e\u4e86\u610f\u6599\u4e4b\u5916\u7684\u5bf9\u67d0\u4e2a\u5b9e\u4f8b\u66f4\u6539\u7684\u6982\u7387\u3002\u800c\u4e14\uff0c struct \u91c7\u7528 copy-on-write \u7684\u7b56\u7565\uff0c\u53ea\u6709\u5728\u66f4\u6539\u65f6\u624d\u4f1a\u771f\u6b63\u8fdb\u884c\u590d\u5236\uff0c\u56e0\u6b64\u6027\u80fd\u4e0a\u5e76\u6ca1\u6709\u592a\u591a\u7684\u635f\u5931\u3002 \u5b9e\u9645\u4e0a\uff0c\u73b0\u4ee3\u7684 Swift \u6846\u67b6\uff0c\u5982 SwiftUI\u3001Combine\uff0c\u5df2\u7ecf\u51e0\u4e4e\u5168\u90e8\u4f7f\u7528 struct \u8fdb\u884c\u9762\u5411\u5bf9\u8c61/\u9762\u5411\u534f\u8bae\u7684\u7f16\u7a0b\u3002\u5b98\u65b9\u7684\u5efa\u8bae\u662f\uff1a\u9664\u975e\u53ea\u80fd\u7528 class \uff0c\u6bd4\u5982\u8981\u5728\u591a\u4e2a\u5730\u65b9\u5f15\u7528\u540c\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u5426\u5219 \u4f18\u5148\u4f7f\u7528 struct \u3002 \u679a\u4e3e enum \u00b6 Swift \u7684 enum \u63d0\u4f9b\u4e86\u4e00\u79cd\u7c7b\u578b\u5b89\u5168\u7684\u679a\u4e3e\u65b9\u6cd5\u3002 1 2 3 4 5 enum CompassPoint { case north , south , east , west } var directionToHead = CompassPoint . north enum \u53ef\u4ee5\u4f7f\u7528 switch \u8bed\u53e5\u6765\u5339\u914d\uff1a 1 2 3 4 5 6 7 8 9 10 11 directionToHead = . south switch directionToHead { case . north : print ( \"Lots of planets have a north\" ) case . south : print ( \"Watch out for penguins\" ) case . east : print ( \"Where the sun rises\" ) case . west : print ( \"Where the skies are blue\" ) } \u6216\u8005\u7528 == \u5224\u65ad\uff1a 1 2 3 if directionToHead == . north { print ( \"\u6211\u98d8\u5411\u5317\u65b9\" ) } \u7c7b\u578b\u7701\u7565\u5199\u6cd5 \u4e0a\u9762 directionToHead \u7684\u7c7b\u578b\u5df2\u7ecf\u660e\u786e\uff0c\u56e0\u6b64\u53ef\u4ee5\u5c06 CompassPoint.south \u7f29\u5199\u4e3a .south \u3002\u8fd9\u79cd\u5199\u6cd5\u5bf9\u4e8e class \u548c struct \u7684\u9759\u6001\u6210\u5458\u548c\u65b9\u6cd5\u540c\u6837\u9002\u7528\u3002\u5982\uff1a 1 2 3 4 5 struct Color { static let yellow = Color (...) } let color : Color = . yellow \u8fed\u4ee3 \u00b6 \u53ef\u4ee5\u5728 enum \u540e\u9762\u52a0\u4e0a CaseIterable \u4f7f\u5f97\u53ef\u4ee5\u6309\u7167\u58f0\u660e\u987a\u5e8f\u679a\u4e3e\u6240\u6709\u7684\u7c7b\u578b\uff1a 1 2 3 4 5 6 7 enum CompassPoint : CaseIterable { case north , south , east , west } for point in CompassPoint . allCases { ... } \u539f\u59cb\u503c \u00b6 enum \u53ef\u4ee5\u6709\u4e00\u4e2a\u539f\u59cb\u503c\uff08raw value\uff09\u7c7b\u578b\uff0c\u53ef\u4ee5\u662f Int \uff0c String \u7b49\u7b49\uff0c\u53ef\u4ee5\u7528\u6765\u521d\u59cb\u5316 enum \u7c7b\u578b\u3002\u5982\u679c\u4e0d\u6307\u5b9a\u503c\uff0c\u7f16\u8bd1\u671f\u4f1a\u81ea\u52a8\u8bbe\u7f6e\u5bf9\u5e94\u7684\u503c\uff0c\u5982 Int \u662f\u4ece 0 \u5f00\u59cb\u8d4b\u503c\u5e76\u4f9d\u6b21\u9012\u589e\uff0c\u800c String \u5bf9\u5e94\u5404\u4e2a case \u7684\u540d\u79f0\u3002 1 2 3 4 5 6 7 8 9 enum Status : Int { case onVacation // 0 case atSchool = 10 case quit // 11 } print ( Status . onVacation . rawValue ) // 0 let status = Status ( rawValue : 5 ) // nil let status = Status ( rawValue : 10 ) // Optional(Status.atSchool) \u5173\u8054\u503c \u00b6 enum \u7684\u6bcf\u4e2a case \u53ef\u4ee5\u50a8\u5b58\u4e00\u4e2a\u6216\u591a\u4e2a\u5173\u8054\u503c\uff08associated value\uff09\u3002\u9700\u8981\u6ce8\u610f\uff0c\u4e00\u65e6\u50a8\u5b58\u4e86\u5173\u8054\u503c\uff0c\u5c31\u4e0d\u80fd\u591f\u6307\u5b9a raw value\uff0c\u4e5f\u4e0d\u80fd\u591f\u901a\u8fc7 == \u5224\u65ad\u662f\u5426\u76f8\u7b49\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 enum Food { case hamburger ( calories : Double ) case juice ( amount : Double ) } let breakfast = Food . hamburger ( calories : 294.9 ) switch breakfast { case . hamburger ( let calories ): print ( \"I ate a hamburger with \\( calories ) calories\" ) default : break } // or if case . hamburger ( let calories ) = breakfast { print ( \"I ate a hamburger with \\( calories ) calories\" ) } \u4f7f\u7528\u5173\u8054\u503c\u5904\u7406\u4e92\u65a5\u60c5\u51b5 enum \u5173\u8054\u503c\u7684\u4e00\u4e2a\u91cd\u8981\u7684\u4f5c\u7528\u662f\u5904\u7406\u82e5\u5e72\u4e92\u65a5\u60c5\u51b5\u3002 \u6bd4\u5982\uff0c Optional \u7c7b\u578b\u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u4e2a\u5e26\u6709 associated value \u7684 enum \uff08\u6cdb\u578b\u7a0d\u540e\u4ecb\u7ecd\uff09\uff1a 1 2 3 4 enum Optional < Wrapped > { case . some ( Wrapped ) // has value case . none // nil } \u518d\u5982\uff0c\u5305\u88c5\u7ed3\u679c\u548c\u9519\u8bef\u7684 Result \uff1a 1 2 3 4 enum Result < Success , Failure > where Failure : Error { case success ( Success ) case failure ( Failure ) } \u4e00\u4e2a\u8bf7\u6c42\u8981\u4e48\u6210\u529f\uff08\u6b64\u65f6\u8fd4\u56de\u6709\u6548\u7684\u7ed3\u679c\uff09\uff0c\u8981\u4e48\u5931\u8d25\uff08\u6b64\u65f6\u8fd4\u56de\u9519\u8bef\uff09\u3002\u4f7f\u7528 enum \u5c31\u53ef\u4ee5\u5728\u4e0d\u4f7f\u7528 Optional \u7684\u60c5\u51b5\u4e0b\u4ee5\u7c7b\u578b\u5b89\u5168\u7684\u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a\u552f\u4e00\u7684\u7ed3\u679c\uff1a 1 2 3 4 5 6 switch result { case . success ( let data ): print ( \"Request succeeded with data: \\( data ) \" ) case . failure ( let error ): print ( \"Request failed with error: \\( error ) \" ) } \u51fd\u6570\u3001\u6784\u9020\u51fd\u6570\u548c\u53d8\u91cf \u00b6 enum \u662f Swift \u7684\u4e00\u7b49\u7c7b\u578b\uff0c\u5b83\u53ef\u4ee5\u6709\u6210\u5458\u51fd\u6570\u3001\u6784\u9020\u51fd\u6570\u3001\u8ba1\u7b97\u53d8\u91cf\u3001\u9759\u6001\u51fd\u6570\u3001\u9759\u6001\u53d8\u91cf\uff0c\u4f46 \u4e0d\u80fd\u50a8\u5b58\u503c \uff0c\u5373\u4e0d\u80fd\u62e5\u6709\u6210\u5458\u53d8\u91cf\u3002 \u80fd\u591f\u7ed9 enum \u6dfb\u52a0\u51fd\u6570\u7b49\u7ed9\u7f16\u7a0b\u5e26\u6765\u4e86\u6781\u5927\u7684\u4fbf\u5229\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 enum HTTPError : Int { case unknown case badRequest = 400 case notFound = 404 case forbidden = 403 init ( code : Int ) { if let error = HTTPError ( rawValue : code ) { self = error } else { self = . unknown } } var description : String { switch self { case . badRequest : return \"Bad Request\" case . notFound : return \"Not Found\" ... } } } let error = HTTPError ( code : 404 ) print ( error . description ) // \"Not Found\" \u53e6\u5916\uff0c\u4e00\u822c\u4f7f\u7528 enum \u52a0\u4e0a\u9759\u6001\u53d8\u91cf\u6765\u9650\u5b9a\u547d\u540d\u7a7a\u95f4\uff1a 1 2 3 4 5 6 enum Constant { static let accentColor = Color . blue static let backgroundColor = Color . white } let color = Constant . accentColor \u534f\u8bae protocol \u00b6 Swift \u4e2d\u7684 protocol \uff08\u534f\u8bae\uff09\u4e0e C++ \u7684\u62bd\u8c61\u7c7b\u6982\u5ff5\u5bf9\u5e94\uff0c\u5176\u4f5c\u7528\u662f \u5b9a\u4e49\u4e00\u7ec4\u9700\u8981\u5b9e\u73b0\u7684\u63a5\u53e3 \u3002\u6bd4\u5982\uff0cSwift \u4e2d\u7684 Equatable \uff0c\u5176\u4f5c\u7528\u662f\u4e00\u4e2a\u5224\u7b49\u5668\uff1a 1 2 3 protocol Equatable { static func == ( lhs : Self , rhs : Self ) -> Bool } \u6ee1\u8db3\u534f\u8bae\u8981\u6c42\u7684\u7c7b\u578b\u79f0\u4e3a \u9075\u5faa \uff08conform to\uff09\u6b64\u534f\u8bae\u3002\u5982\u679c\u4e00\u4e2a\u7c7b\u578b\u60f3\u8981\u9075\u5faa Equatable \uff0c\u9700\u8981\uff1a \u5728\u7c7b\u578b\u540d\u79f0\u540e\u9762\u52a0\u4e0a Equatable \u5b9e\u73b0 == \u65b9\u6cd5 \u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 struct Rectangle : Equatable { var width : Double var height : Double static func == ( lhs : Rectangle , rhs : Rectangle ) -> Bool { return lhs . width == rhs . width && lhs . height == rhs . height } } let r1 = Rectangle ( width : 1 , height : 3 ) let r2 = Rectangle ( width : 1 , height : 2 ) print ( r1 == r2 ) // false let rectangles = [ r1 , r2 ] // An array of rectangles print ( rectangles . contains ( Rectangle ( width : 1 , height : 2 ))) // true \u5728\u8fd9\u91cc\uff0c Array \u672c\u8eab\u5e76\u4e0d\u77e5\u9053\u5982\u4f55\u5224\u65ad\u5b83\u5176\u4e2d\u662f\u5426\u6709\u5143\u7d20\u4e0e\u63d0\u4f9b\u7684 Rectangle \u76f8\u7b49\uff0c\u4f46\u7531\u4e8e Rectangle \u9075\u5faa\u4e86 Equatable \u534f\u8bae\uff0c\u4f7f\u5f97 Array \u53ef\u4ee5\u8c03\u7528 Equatable \u89c4\u5b9a\u7684\u5224\u7b49\u63a5\u53e3\u6765\u5b9e\u73b0\u5224\u65ad\u3002 Note \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u79cd\u63a5\u53e3\u7684\u89c4\u5b9a\u662f\u4e25\u683c\u7684\u3002 Array \u7684 contains \u65b9\u6cd5\u5f53\u4e14\u4ec5\u5f53\u5176\u5143\u7d20\u7c7b\u578b Element \u4e3a Equatable \u65f6\u624d\u5b58\u5728\uff1a 1 2 3 extension Array where Element : Equatable { func contains ( _ element : Element ) -> Bool {...} } \u6709\u5173\u6cdb\u578b\u548c extension \uff0c\u6211\u4eec\u5728\u540e\u9762\u4ecb\u7ecd\u3002 \u63a5\u53e3\u7684\u89c4\u5b9a\u65b9\u6cd5 \u00b6 protocol \u53ef\u4ee5\u89c4\u5b9a\u51e0\u7c7b\u63a5\u53e3\uff1a \u6210\u5458\u51fd\u6570 \u6210\u5458\u53d8\u91cf \u9759\u6001\u51fd\u6570 \u9759\u6001\u53d8\u91cf \u6784\u9020\u51fd\u6570 1 2 3 4 5 6 7 8 9 protocol SomeProtocol { var foo : Int { get set } var bar : Int { get } static var staticMember : Int { get } func someMethod ( a : Int ) -> Int static func staticMethod () -> Bool init ( code : Int ) } \u5176\u4e2d\uff0c\u89c4\u5b9a\u53d8\u91cf\u7684\u63a5\u53e3\u65f6\uff0c\u53ea\u80fd\u7528 var \uff0c\u800c\u4e14\u9700\u8981\u5728\u7c7b\u578b\u540d\u540e\u52a0\u4e0a { get } \u6216 { get set } \u4ee5\u6307\u5b9a \u9700\u8981\u6ee1\u8db3\u7684\u6700\u5c0f\u6743\u9650\u8981\u6c42 \u3002\u6bd4\u5982\uff0c\u67d0\u4e2a\u7c7b\u578b\u9075\u5faa SomeProtocol \u65f6\uff0c\u5b83\u7684 foo \u53d8\u91cf\u9700\u8981\u53ef\u8bfb\u5199\uff0c\u800c bar \u53d8\u91cf \u81f3\u5c11 \u53ef\u4ee5\u8bfb\uff0c\u4f46 \u4e0d\u80fd\u9650\u5236\u5176\u662f\u5426\u53ef\u5199 \u3002 \u534f\u8bae\u4f5c\u4e3a\u7c7b\u578b \u00b6 \u5f53\u6ca1\u6709 associated type\uff08\u7a0d\u540e\u4ecb\u7ecd\uff09\u65f6\uff0c\u534f\u8bae\u53ef\u4ee5\u4f5c\u4e3a\u7c7b\u578b\uff0c\u5e76\u4e14\u5176\u771f\u6b63\u7684\u7c7b\u578b\u53ef\u4ee5\u6539\u53d8\uff0c\u5982 Swift \u4e2d\u5185\u7f6e\u7684 Encodable \uff1a 1 2 var someEncodable : Encodable = 1 someEncodable = \"Hello\" \u534f\u8bae\u65b9\u6cd5\u7684\u9ed8\u8ba4\u5b9e\u73b0 \u00b6 \u5728\u89c4\u5b9a\u4e86\u534f\u8bae\u7684\u63a5\u53e3\u540e\uff0c\u53ef\u4ee5\u5728 extension \u4e2d\u5bf9\u9664\u4e86 init \u4ee5\u5916\u7684\u63a5\u53e3\u8fdb\u884c\u9ed8\u8ba4\u5b9e\u73b0\uff0c\u4f46\u4e0d\u80fd\u5728 extension \u4e2d\u5b9e\u73b0\u50a8\u5b58\u53d8\u91cf\uff1a 1 2 3 4 5 6 7 8 extension SomeProtocol { var bar : Int { return 1 } func someMethod ( a : Int ) -> Int { return a } } \u8fd9\u6837\uff0c\u5f53\u67d0\u4e2a\u7c7b\u578b\u9075\u5faa SomeProtocol \u65f6\uff0c\u53ef\u4ee5\u4e0d\u7528\u5b9e\u73b0\u8fd9\u4e9b\u5df2\u7ecf\u8fdb\u884c\u9ed8\u8ba4\u5b9e\u73b0\u7684\u63a5\u53e3\u3002 \u534f\u8bae\u7684\u7ec4\u5408\u4e0e\u7ee7\u627f \u00b6 \u4e00\u4e2a\u7c7b\u578b\u53ef\u4ee5\u9075\u5faa\u591a\u4e2a\u534f\u8bae\uff0c\u9700\u8981\u5b9e\u73b0\u6240\u6709\u534f\u8bae\u89c4\u5b9a\u7684\u63a5\u53e3\uff1a 1 2 3 4 5 6 7 8 9 10 11 protocol A { var foo : Int { get } } protocol B { func bar () } struct : SomeStructure : A , B { var foo : Int func bar () {...} } \u4e00\u4e2a\u534f\u8bae\u53ef\u4ee5\u7ee7\u627f\u591a\u4e2a\u534f\u8bae\uff0c\u5176\u4f5c\u7528\u4e3a\u6dfb\u52a0\u8fd9\u4e9b\u534f\u8bae\u7684\u89c4\u5b9a\u7684\u63a5\u53e3\u4f5c\u4e3a\u81ea\u8eab\u7684\u9650\u5236\u6761\u4ef6\uff0c\u9700\u8981\u5b9e\u73b0\u6240\u6709\u7684\u63a5\u53e3\uff1a 1 2 3 4 5 6 7 8 9 10 11 protocol A { var foo : Int { get } } protocol B : A { func bar () } struct : SomeStructure : B { var foo : Int func bar () {...} } Potocol-oriented Programming \u901a\u8fc7\u9075\u5faa\u534f\u8bae\u3001\u5bf9\u534f\u8bae\u8fdb\u884c\u9ed8\u8ba4\u7684\u5b9e\u73b0\u3001\u534f\u8bae\u7684\u7ee7\u627f\uff0c\u4f7f\u5f97 struct \u548c enum \u8fd9\u4e9b\u6ca1\u6709\u7ee7\u627f\u529f\u80fd\u7684\u7c7b\u578b\u53ef\u4ee5\u56e0\u6b64\u5b9e\u73b0\u7c7b\u4f3c\u4e8e\u7ee7\u627f\u7684\u6548\u679c\u3002 \u73b0\u4ee3 Swift \u6846\u67b6\u5927\u91cf\u4f7f\u7528 protocol \u8fdb\u884c\u9762\u5411\u534f\u8bae\u7684\u7f16\u7a0b\uff08potocol-oriented programming\uff09\u3002\u5176\u601d\u60f3\u7c7b\u4f3c\u4e8e OOP\uff0c\u4f46\u5728\u67d0\u4e9b\u95ee\u9898\u7684\u5904\u7406\u4e0a\u6bd4\u7c7b\u7ee7\u627f\u8981\u66f4\u52a0\u7b80\u6d01\uff0c\u4e14\u4e0d\u6613\u51fa\u9519\u3002 extension \u00b6 class \u3001 struct \u3001 enum \u548c protocol \u53ef\u4ee5\u901a\u8fc7 extension \u6dfb\u52a0\u65b9\u6cd5\uff08\u8ba1\u7b97\u53d8\u91cf\u6216\u51fd\u6570\uff09\uff0c\u5305\u62ec\u6240\u6709\u7684\u5185\u7f6e\u7c7b\u578b\uff1a 1 2 3 4 5 6 7 extension Int { var string : String { return \" \\( self ) \" } } print ( 1. string ) \u4f7f\u7528 extension \u53ef\u4ee5\u4ee5\u9762\u5411\u5bf9\u8c61\u7684\u65b9\u5f0f\u7ed9\u4efb\u4f55\u7c7b\u578b\u6dfb\u52a0\u65b9\u6cd5\u3002 \u53e6\u5916\uff0c\u4e00\u822c\u4e3a\u4e86\u533a\u5206\u4e0d\u540c\u7684 protocol \u7684\u63a5\u53e3\uff0c\u5728\u9075\u5faa\u4e0d\u540c\u7684\u534f\u8bae\u65f6\uff0c\u5f80\u5f80\u5c06\u5404\u4e2a\u534f\u8bae\u89c4\u5b9a\u7684\u63a5\u53e3\u5b9e\u73b0\u5728\u4e0d\u540c\u7684 extension \u4e2d\uff1a 1 2 3 4 5 6 7 8 9 struct A { // Original members } extension A : ProtocolA { // Implementation of ProtocolA } extension A : ProtocolB { // Implementation of ProtocolB } \u5143\u7ec4 \u00b6 \u5143\u7ec4\uff08tuple\uff09\u7528\u4e8e\u4f20\u9012\u590d\u5408\u503c\uff0c\u7528\u62ec\u53f7\u7ec4\u7ec7\uff0c\u53ef\u4ee5\u5e26\u6807\u7b7e\uff0c\u7528\u6807\u7b7e\u6216\u8005\u6210\u5458\uff08\u800c\u975e\u4e0b\u6807\uff090\u30011\u30012 \u7b49\u53d6\u51fa\u5176\u4e2d\u7684\u503c\uff1a 1 2 3 4 5 6 7 8 func getCurrentTime () -> ( hour : Int , minute : Int , second : Int ) { return ( 18 , 20 , 36 ) } let time = getCurrentTime () print ( time . hour ) // or print ( time . 0 ) // hour \u5143\u7ec4\u7684\u5143\u7d20\u6570\u91cf\u662f\u56fa\u5b9a\u7684\uff0c\u4e0d\u5b58\u5728\u8d8a\u754c\u7684\u60c5\u51b5\u3002 \u51fd\u6570 \u00b6 Swift \u4e2d\uff0c\u51fd\u6570\u4e5f\u662f\u4e00\u79cd\u7c7b\u578b\uff0c\u53ef\u4ee5\u50a8\u5b58\u5728\u53d8\u91cf\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u53c2\u6570/\u8fd4\u56de\u503c\u53c2\u4e0e\u53e6\u4e00\u4e2a\u51fd\u6570\u3002\u51fd\u6570\u7c7b\u578b\u7684\u58f0\u660e\u4e3a (\u53c2\u6570\u5217\u8868) -> \u8fd4\u56de\u7c7b\u578b \uff1a 1 2 var someHandler : ( Int , Int ) -> Void var optionalHandler : (( Int , Int ) -> Void )? // Optional \u4f7f\u7528\u5927\u62ec\u53f7\u6765\u751f\u6210\u533f\u540d\u51fd\u6570\uff08\u95ed\u5305\uff0cclosure\uff09\uff0c\u5728\u62ec\u53f7\u5185\u4f7f\u7528 \u53c2\u6570\u5217\u8868 -> \u8fd4\u56de\u7c7b\u578b in \u7ed9\u4f20\u5165\u7684\u5404\u4e2a\u53c2\u6570\u547d\u540d\uff1a 1 2 3 let incrementer : ( Int ) -> Int = { value -> Int in return value + 1 } \u8c03\u7528\u65b9\u6cd5\u4e0e\u51fd\u6570\u76f8\u540c\uff1a 1 let result = incrementer ( 1 ) // 2 \u4e0a\u4e0b\u6587\u660e\u786e\u65f6\uff0c\u53ef\u4ee5\u7701\u7565\u62ec\u53f7\u5185\u7684 -> Int \uff1a 1 2 3 let incrementer : ( Int ) -> Int = { value in return value + 1 } \u53e6\u5916\uff0c\u53ef\u4ee5\u7701\u7565\u53c2\u6570\u5217\u8868\uff0c\u7528 $0 \u3001 $1 \u7b49\u6307\u4ee3\u7b2c\u4e00\u3001\u7b2c\u4e8c\u4e2a\u5143\u7d20\uff1a 1 2 3 4 5 let incrementer : ( Int ) -> Int = { return $0 + 1 } [ 1 , 2 , 3 ]. removeAll ( where : { $0 < 2 }) // [2, 3] Note \u95ed\u5305\u7684\u4e00\u4e2a\u5178\u578b\u5e94\u7528\u573a\u666f\u662f\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u51fd\u6570\u4e2d\u4f5c\u4e3a\u56de\u8c03\u51fd\u6570\u3002\u5982\uff0c\u8fdb\u884c\u7f51\u7edc\u8bf7\u6c42\uff0c\u5f53\u8bf7\u6c42\u5b8c\u6210\u65f6\uff0c\u8c03\u7528\u4f20\u5165\u7684\u56de\u8c03\u51fd\u6570\u6765\u8fdb\u884c\u7ed3\u679c\u7684\u5904\u7406\uff1a 1 2 3 4 5 6 7 let task = session . dataTask ( with : url ) { data , response , error in if let data = data { let string = String ( data : data , encoding : . utf8 ) ! print ( string ) } } task . resume () \u4e0a\u9762\u7684\u4f8b\u5b50\u4f7f\u7528\u4e86\u4e00\u79cd\u53eb\u505a trailing closures \u7684\u8bed\u6cd5\uff0c\u4f7f\u5f97\u56de\u8c03\u51fd\u6570\u7684\u51fd\u6570\u4f53\u53ef\u4ee5\u5199\u5728\u51fd\u6570\u7684\u201c\u5916\u9762\u201d\uff0c\u8be6\u89c1 Swift \u5b98\u65b9\u6559\u7a0b \u3002","title":"\u7c7b\u578b"},{"location":"languages/swift/types/#class","text":"Swift \u4e2d\u7684 class \u4e0e C++ \u7c7b\u4f3c\u3002 1 2 3 4 5 6 7 8 9 10 11 12 class Counter { private ( set ) var count = 0 func increment () { count += 1 } func increment ( by amount : Int ) { count += amount } func reset () { count = 0 } }","title":"\u7c7b class"},{"location":"languages/swift/types/#_1","text":"Swift \u4e2d\u6210\u5458\u51fd\u6570\u548c\u6210\u5458\u53d8\u91cf\u7684\u6982\u5ff5\u4e0e C++ \u57fa\u672c\u4e00\u81f4\uff0c\u4e00\u4e2a\u7c7b\u5bf9\u8c61\u62e5\u6709\u72ec\u7acb\u7684\u6210\u5458\u53d8\u91cf\uff0c\u6210\u5458\u51fd\u6570\u53ef\u4ee5\u8bbf\u95ee\u6240\u6709\u7684\u6210\u5458\u53d8\u91cf\u3002 class \u7684\u8bbf\u95ee\u63a7\u5236\u901a\u8fc7\u5728\u6210\u5458\u58f0\u660e\u524d\u52a0\u4e0a\u4fee\u9970\u7b26\u5b9e\u73b0\uff0c\u5305\u62ec\uff1a public \uff1a \u9ed8\u8ba4 \uff0c\u5916\u754c\u53ef\u8bbf\u95ee\uff0c\u53ef\u5199 private \uff1a\u5916\u754c\u4e0d\u53ef\u8bbf\u95ee private(set) \uff08\u6210\u5458\u53d8\u91cf\uff09\uff1a\u5916\u754c\u53ef\u8bbf\u95ee\uff0c\u4e0d\u53ef\u5199 \u5728\u7c7b\u4e2d\u901a\u8fc7 self \u5f15\u7528\u81ea\u8eab\uff0c\u5982\u679c\u4e0d\u4f1a\u4ea7\u751f\u6b67\u4e49\uff0c\u53ef\u4ee5\u7701\u7565 self \u3002 \u5728\u7c7b\u4e2d\u65f6\u5e38\u4f1a\u7528\u5230\u4e00\u79cd\u7279\u6b8a\u7684\u53d8\u91cf\uff1a\u8ba1\u7b97\u53d8\u91cf\u3002\u8ba1\u7b97\u53d8\u91cf\u76f8\u5f53\u4e8e\u4e00\u4e2a \u6ca1\u6709\u53c2\u6570\u7684\u51fd\u6570 \uff0c\u6bcf\u6b21\u83b7\u53d6\u5176\u503c\u7684\u65f6\u5019\u90fd\u8981\u901a\u8fc7\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u6765\u8ba1\u7b97\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 class Rectangle { var width : Double var height : Double var area : Double { return width * height } ... } let rectangle = Rectangle (...) print ( rectangle . area ) \u8ba1\u7b97\u53d8\u91cf\u662f\u53ea\u8bfb\u7684\uff0c\u800c\u4e14\u4e0d\u4f1a\u5360\u7528\u50a8\u5b58\u7a7a\u95f4\u3002\u5982\u679c\u8ba1\u7b97\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u8d85\u8fc7 O(1) O(1) \uff0c\u90a3\u4e48\u5e94\u8be5\u4f7f\u7528\u666e\u901a\u7684\u51fd\u6570\uff0c\u800c\u4e0d\u662f\u8ba1\u7b97\u53d8\u91cf\u3002","title":"\u6210\u5458\u51fd\u6570\u3001\u6210\u5458\u53d8\u91cf\u53ca\u5176\u8bbf\u95ee\u63a7\u5236"},{"location":"languages/swift/types/#_2","text":"\u6784\u9020\u51fd\u6570\u4f7f\u7528\u5173\u952e\u5b57 init \u58f0\u660e\u3002\u7531\u4e8e Swift \u6ca1\u6709\u96f6\u503c\u521d\u59cb\u5316\uff0c\u6240\u6709\u6210\u5458\u53d8\u91cf\u90fd\u8981\u6709\u521d\u503c\uff0c\u8981\u4e48\u76f4\u63a5\u5728\u53d8\u91cf\u540e\u663e\u5f0f\u6307\u51fa\uff0c\u8981\u4e48\u5728\u6784\u9020\u51fd\u6570\u4e2d\u8bbe\u5b9a\u3002\u6784\u9020\u51fd\u6570\u7ed3\u675f\u65f6\uff0c\u6240\u6709\u6210\u5458\u53d8\u91cf\u90fd\u8981\u6709\u521d\u503c\uff0c\u5426\u5219\u4ea7\u751f\u7f16\u8bd1\u9519\u8bef\u3002 1 2 3 4 5 6 7 8 9 class A { var bar : Int var foo = \"Hello\" init ( bar : Int ) { self . bar = bar } } let a = A ( bar : 1 ) \u5982\u679c\u7c7b\u7684\u6bcf\u4e2a\u6210\u5458\u53d8\u91cf\u90fd\u6709\u9ed8\u8ba4\u503c\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff1a 1 2 3 4 5 class B { var bar = 1 var foo = \"Hello\" } let b = B () \u6790\u6784\u51fd\u6570\u4f7f\u7528\u5173\u952e\u5b57 deinit \u58f0\u660e\uff0c\u4e0d\u8fc7\u5728\u4e00\u822c\u7684\u5f00\u53d1\u4e2d\u5f88\u5c11\u7528\u5230\uff1a 1 2 3 deinit { ... }","title":"\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570"},{"location":"languages/swift/types/#_3","text":"\u4f7f\u7528 static \u5b9a\u4e49\u9759\u6001\u53d8\u91cf\u548c\u65b9\u6cd5\uff1a 1 2 3 4 5 6 7 class A { static let shared = A () static func foo () {...} } let a = A . shared A . foo ()","title":"\u9759\u6001\u53d8\u91cf\u3001\u9759\u6001\u65b9\u6cd5"},{"location":"languages/swift/types/#_4","text":"Swift \u4e2d\u7684\u7c7b\u662f\u5f15\u7528\u7c7b\u578b\uff0c\u4f20\u9012\u5f15\u7528\u800c\u975e\u526f\u672c\uff0c\u76f8\u5f53\u4e8e\u6307\u9488\u3002\u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 9 class Counter { var count = 0 } let a = Counter () let b = a // b is a reference of a b . count += 1 print ( a . count ) // 1 Swift \u4e2d\u5bf9\u7c7b\u7684\u5b9e\u4f8b\u7684\u7ba1\u7406\u4f7f\u7528\u7c7b\u4f3c\u4e8e\u667a\u80fd\u6307\u9488\u7684\u65b9\u6cd5\uff0c\u5f53\u5f15\u7528\u8ba1\u6570\u4e3a 0 \u65f6\uff0c\u5b9e\u4f8b\u88ab\u9500\u6bc1\u3002\u53e6\u5916\uff0c\u53ef\u4ee5\u5728 var \u524d\u52a0\u4e0a weak \u58f0\u660e\u4e0d\u53c2\u4e0e\u8ba1\u6570\u7684 weak \u53d8\u91cf\u3002","title":"\u7c7b\u662f\u5f15\u7528\u7c7b\u578b"},{"location":"languages/swift/types/#_5","text":"Swift \u652f\u6301\u7c7b\u7684\u7ee7\u627f\uff0c\u4f46 \u4e0d\u652f\u6301\u591a\u91cd\u7ee7\u627f \u3002\u4e0e C++ \u4e0d\u540c\uff0cSwift \u7684\u7ee7\u627f\u6ca1\u6709 private \u3001 protected \u548c public \u4e4b\u5206\uff0c\u6240\u6709\u7ee7\u627f\u90fd\u76f8\u5f53\u4e8e C++ \u4e2d\u7684 public \u3002 \u53e6\u5916\uff0cSwift \u4e2d\u6240\u6709\u7684\u51fd\u6570\u90fd\u76f8\u5f53\u4e8e C++ \u4e2d\u7684\u865a\u51fd\u6570\uff0c\u5728\u6d3e\u751f\u7c7b\u4e2d\u4f7f\u7528 override \u5373\u53ef\u91cd\u5199\u57fa\u7c7b\u7684\u65b9\u6cd5\uff1b\u4f7f\u7528 super \u8c03\u7528\u57fa\u7c7b\u7684\u65b9\u6cd5\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 class Base { func foo () { print ( \"Base\" ) } } class Derived : Base { override func foo () { super . foo () // prints \"Base\" print ( \"Derived\" ) } } let derived = Derived () derived . foo () // \"Base Derived\" \u4f7f\u7528 as \u5411\u4e0b\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\uff0c\u4f7f\u7528 as? \u5411\u4e0a\u8fdb\u884c\u52a8\u6001\u7c7b\u578b\u8f6c\u6362\uff0c\u4f7f\u7528 as! \u8fdb\u884c\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff1a 1 2 3 4 5 6 var a : Base = Derived () let b = a as ? Derived // \u7c7b\u578b\u4e3a Optional<Derived> // \u6216 if let b = a as? Derived {...} let c = a as ! Derived // \u7c7b\u578b\u4e3a Derived\uff0c\u82e5\u8f6c\u6362\u5931\u8d25\u5219\u5bfc\u81f4\u5d29\u6e83 let d = c as Base // \u7c7b\u578b\u4e3a Base\uff0c\u5411\u4e0b\u8f6c\u6362\u5fc5\u7136\u6210\u529f","title":"\u7ee7\u627f"},{"location":"languages/swift/types/#struct","text":"\u4e0e C++ \u4e0d\u540c\uff0cSwift \u4e2d\u7684 struct \u548c class \u6709\u5171\u540c\u4e4b\u5904\uff0c\u4f46\u5e76\u4e0d\u80fd\u7b49\u540c\u3002 struct \u4e0e class \u7c7b\u4f3c\uff0c\u53ef\u4ee5\u5b9a\u4e49\u6210\u5458\u53d8\u91cf\u3001\u6210\u5458\u51fd\u6570\u3001\u9759\u6001\u6210\u5458\u3001\u6784\u9020\u51fd\u6570\uff0c\u8bbf\u95ee\u63a7\u5236\u4e0e\u7c7b\u76f8\u540c\u3002 \u5b83\u4eec\u4e4b\u95f4\u7684\u4e0d\u540c\u70b9\u6709\uff1a struct \u662f \u503c\u7c7b\u578b \u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4f20\u9012\u7684\u662f\u539f\u6709\u5b9e\u4f8b\u7684 \u526f\u672c \uff0c\u800c\u975e\u5f15\u7528 struct \u6ca1\u6709\u7ee7\u627f struct \u4e0d\u80fd\u5b9a\u4e49\u6790\u6784\u51fd\u6570 \u4e0e class \u8fdb\u884c\u5bf9\u7167 \u4f7f\u7528\u4e0a\u9762\u7684\u4f8b\u5b50\uff1a 1 2 3 4 5 6 7 8 9 struct Counter { var count = 0 } var a = Counter () var b = a // b is a copy of a b . count += 1 // b.count == 1 print ( a . count ) // 0 struct \u7531\u4e8e\u6ca1\u6709\u7ee7\u627f\uff0c\u56e0\u6b64\u5bf9\u6210\u5458\u7684\u6784\u9020\u51fd\u6570\uff08\u82f1\u8bed\uff1aMemberwise initializer\uff09\u80fd\u591f\u81ea\u52a8\u751f\u6210\uff0c\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u65e0\u9700\u624b\u52a8\u5199\u6784\u9020\u51fd\u6570\uff1a 1 2 3 4 5 6 struct A { var foo : Int var bar : String } let a = A ( foo : 1 , bar : \"Hello\" ) \u53e6\u5916\uff0c struct \u7684\u6210\u5458\u51fd\u6570\u9ed8\u8ba4\u4e0d\u53ef\u66f4\u6539\u6210\u5458\u53d8\u91cf\uff0c\u5982\u679c\u9700\u8981\u66f4\u6539\uff0c\u5219\u9700\u8981\u5728\u51fd\u6570\u524d\u52a0\u4e0a mutating \uff1a 1 2 3 4 5 6 struct Counter { var count = 0 mutating func increase () { count += 1 } } \u5173\u4e8e struct \u548c class \u7684\u4f7f\u7528 \u770b\u4e0a\u53bb struct \u6bd4 class \u529f\u80fd\u5f31\u4e86\u4e0d\u5c11\uff0c\u4f46 struct \u901a\u8fc7\u9075\u5faa\u534f\u8bae\uff08\u82f1\u8bed\uff1aprotocol\uff0c\u5728\u4e0b\u9762\u4ecb\u7ecd\uff09\u53ef\u4ee5\u5b9e\u73b0\u7ee7\u627f\u7684\u6548\u679c\uff0c\u540c\u65f6\u7531\u4e8e\u4f20\u9012\u7684\u4e0d\u662f\u5f15\u7528\uff0c\u56e0\u6b64\u5927\u5927\u964d\u4f4e\u4e86\u610f\u6599\u4e4b\u5916\u7684\u5bf9\u67d0\u4e2a\u5b9e\u4f8b\u66f4\u6539\u7684\u6982\u7387\u3002\u800c\u4e14\uff0c struct \u91c7\u7528 copy-on-write \u7684\u7b56\u7565\uff0c\u53ea\u6709\u5728\u66f4\u6539\u65f6\u624d\u4f1a\u771f\u6b63\u8fdb\u884c\u590d\u5236\uff0c\u56e0\u6b64\u6027\u80fd\u4e0a\u5e76\u6ca1\u6709\u592a\u591a\u7684\u635f\u5931\u3002 \u5b9e\u9645\u4e0a\uff0c\u73b0\u4ee3\u7684 Swift \u6846\u67b6\uff0c\u5982 SwiftUI\u3001Combine\uff0c\u5df2\u7ecf\u51e0\u4e4e\u5168\u90e8\u4f7f\u7528 struct \u8fdb\u884c\u9762\u5411\u5bf9\u8c61/\u9762\u5411\u534f\u8bae\u7684\u7f16\u7a0b\u3002\u5b98\u65b9\u7684\u5efa\u8bae\u662f\uff1a\u9664\u975e\u53ea\u80fd\u7528 class \uff0c\u6bd4\u5982\u8981\u5728\u591a\u4e2a\u5730\u65b9\u5f15\u7528\u540c\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u5426\u5219 \u4f18\u5148\u4f7f\u7528 struct \u3002","title":"\u7ed3\u6784\u4f53 struct"},{"location":"languages/swift/types/#enum","text":"Swift \u7684 enum \u63d0\u4f9b\u4e86\u4e00\u79cd\u7c7b\u578b\u5b89\u5168\u7684\u679a\u4e3e\u65b9\u6cd5\u3002 1 2 3 4 5 enum CompassPoint { case north , south , east , west } var directionToHead = CompassPoint . north enum \u53ef\u4ee5\u4f7f\u7528 switch \u8bed\u53e5\u6765\u5339\u914d\uff1a 1 2 3 4 5 6 7 8 9 10 11 directionToHead = . south switch directionToHead { case . north : print ( \"Lots of planets have a north\" ) case . south : print ( \"Watch out for penguins\" ) case . east : print ( \"Where the sun rises\" ) case . west : print ( \"Where the skies are blue\" ) } \u6216\u8005\u7528 == \u5224\u65ad\uff1a 1 2 3 if directionToHead == . north { print ( \"\u6211\u98d8\u5411\u5317\u65b9\" ) } \u7c7b\u578b\u7701\u7565\u5199\u6cd5 \u4e0a\u9762 directionToHead \u7684\u7c7b\u578b\u5df2\u7ecf\u660e\u786e\uff0c\u56e0\u6b64\u53ef\u4ee5\u5c06 CompassPoint.south \u7f29\u5199\u4e3a .south \u3002\u8fd9\u79cd\u5199\u6cd5\u5bf9\u4e8e class \u548c struct \u7684\u9759\u6001\u6210\u5458\u548c\u65b9\u6cd5\u540c\u6837\u9002\u7528\u3002\u5982\uff1a 1 2 3 4 5 struct Color { static let yellow = Color (...) } let color : Color = . yellow","title":"\u679a\u4e3e enum"},{"location":"languages/swift/types/#_6","text":"\u53ef\u4ee5\u5728 enum \u540e\u9762\u52a0\u4e0a CaseIterable \u4f7f\u5f97\u53ef\u4ee5\u6309\u7167\u58f0\u660e\u987a\u5e8f\u679a\u4e3e\u6240\u6709\u7684\u7c7b\u578b\uff1a 1 2 3 4 5 6 7 enum CompassPoint : CaseIterable { case north , south , east , west } for point in CompassPoint . allCases { ... }","title":"\u8fed\u4ee3"},{"location":"languages/swift/types/#_7","text":"enum \u53ef\u4ee5\u6709\u4e00\u4e2a\u539f\u59cb\u503c\uff08raw value\uff09\u7c7b\u578b\uff0c\u53ef\u4ee5\u662f Int \uff0c String \u7b49\u7b49\uff0c\u53ef\u4ee5\u7528\u6765\u521d\u59cb\u5316 enum \u7c7b\u578b\u3002\u5982\u679c\u4e0d\u6307\u5b9a\u503c\uff0c\u7f16\u8bd1\u671f\u4f1a\u81ea\u52a8\u8bbe\u7f6e\u5bf9\u5e94\u7684\u503c\uff0c\u5982 Int \u662f\u4ece 0 \u5f00\u59cb\u8d4b\u503c\u5e76\u4f9d\u6b21\u9012\u589e\uff0c\u800c String \u5bf9\u5e94\u5404\u4e2a case \u7684\u540d\u79f0\u3002 1 2 3 4 5 6 7 8 9 enum Status : Int { case onVacation // 0 case atSchool = 10 case quit // 11 } print ( Status . onVacation . rawValue ) // 0 let status = Status ( rawValue : 5 ) // nil let status = Status ( rawValue : 10 ) // Optional(Status.atSchool)","title":"\u539f\u59cb\u503c"},{"location":"languages/swift/types/#_8","text":"enum \u7684\u6bcf\u4e2a case \u53ef\u4ee5\u50a8\u5b58\u4e00\u4e2a\u6216\u591a\u4e2a\u5173\u8054\u503c\uff08associated value\uff09\u3002\u9700\u8981\u6ce8\u610f\uff0c\u4e00\u65e6\u50a8\u5b58\u4e86\u5173\u8054\u503c\uff0c\u5c31\u4e0d\u80fd\u591f\u6307\u5b9a raw value\uff0c\u4e5f\u4e0d\u80fd\u591f\u901a\u8fc7 == \u5224\u65ad\u662f\u5426\u76f8\u7b49\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 enum Food { case hamburger ( calories : Double ) case juice ( amount : Double ) } let breakfast = Food . hamburger ( calories : 294.9 ) switch breakfast { case . hamburger ( let calories ): print ( \"I ate a hamburger with \\( calories ) calories\" ) default : break } // or if case . hamburger ( let calories ) = breakfast { print ( \"I ate a hamburger with \\( calories ) calories\" ) } \u4f7f\u7528\u5173\u8054\u503c\u5904\u7406\u4e92\u65a5\u60c5\u51b5 enum \u5173\u8054\u503c\u7684\u4e00\u4e2a\u91cd\u8981\u7684\u4f5c\u7528\u662f\u5904\u7406\u82e5\u5e72\u4e92\u65a5\u60c5\u51b5\u3002 \u6bd4\u5982\uff0c Optional \u7c7b\u578b\u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u4e2a\u5e26\u6709 associated value \u7684 enum \uff08\u6cdb\u578b\u7a0d\u540e\u4ecb\u7ecd\uff09\uff1a 1 2 3 4 enum Optional < Wrapped > { case . some ( Wrapped ) // has value case . none // nil } \u518d\u5982\uff0c\u5305\u88c5\u7ed3\u679c\u548c\u9519\u8bef\u7684 Result \uff1a 1 2 3 4 enum Result < Success , Failure > where Failure : Error { case success ( Success ) case failure ( Failure ) } \u4e00\u4e2a\u8bf7\u6c42\u8981\u4e48\u6210\u529f\uff08\u6b64\u65f6\u8fd4\u56de\u6709\u6548\u7684\u7ed3\u679c\uff09\uff0c\u8981\u4e48\u5931\u8d25\uff08\u6b64\u65f6\u8fd4\u56de\u9519\u8bef\uff09\u3002\u4f7f\u7528 enum \u5c31\u53ef\u4ee5\u5728\u4e0d\u4f7f\u7528 Optional \u7684\u60c5\u51b5\u4e0b\u4ee5\u7c7b\u578b\u5b89\u5168\u7684\u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a\u552f\u4e00\u7684\u7ed3\u679c\uff1a 1 2 3 4 5 6 switch result { case . success ( let data ): print ( \"Request succeeded with data: \\( data ) \" ) case . failure ( let error ): print ( \"Request failed with error: \\( error ) \" ) }","title":"\u5173\u8054\u503c"},{"location":"languages/swift/types/#_9","text":"enum \u662f Swift \u7684\u4e00\u7b49\u7c7b\u578b\uff0c\u5b83\u53ef\u4ee5\u6709\u6210\u5458\u51fd\u6570\u3001\u6784\u9020\u51fd\u6570\u3001\u8ba1\u7b97\u53d8\u91cf\u3001\u9759\u6001\u51fd\u6570\u3001\u9759\u6001\u53d8\u91cf\uff0c\u4f46 \u4e0d\u80fd\u50a8\u5b58\u503c \uff0c\u5373\u4e0d\u80fd\u62e5\u6709\u6210\u5458\u53d8\u91cf\u3002 \u80fd\u591f\u7ed9 enum \u6dfb\u52a0\u51fd\u6570\u7b49\u7ed9\u7f16\u7a0b\u5e26\u6765\u4e86\u6781\u5927\u7684\u4fbf\u5229\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 enum HTTPError : Int { case unknown case badRequest = 400 case notFound = 404 case forbidden = 403 init ( code : Int ) { if let error = HTTPError ( rawValue : code ) { self = error } else { self = . unknown } } var description : String { switch self { case . badRequest : return \"Bad Request\" case . notFound : return \"Not Found\" ... } } } let error = HTTPError ( code : 404 ) print ( error . description ) // \"Not Found\" \u53e6\u5916\uff0c\u4e00\u822c\u4f7f\u7528 enum \u52a0\u4e0a\u9759\u6001\u53d8\u91cf\u6765\u9650\u5b9a\u547d\u540d\u7a7a\u95f4\uff1a 1 2 3 4 5 6 enum Constant { static let accentColor = Color . blue static let backgroundColor = Color . white } let color = Constant . accentColor","title":"\u51fd\u6570\u3001\u6784\u9020\u51fd\u6570\u548c\u53d8\u91cf"},{"location":"languages/swift/types/#protocol","text":"Swift \u4e2d\u7684 protocol \uff08\u534f\u8bae\uff09\u4e0e C++ \u7684\u62bd\u8c61\u7c7b\u6982\u5ff5\u5bf9\u5e94\uff0c\u5176\u4f5c\u7528\u662f \u5b9a\u4e49\u4e00\u7ec4\u9700\u8981\u5b9e\u73b0\u7684\u63a5\u53e3 \u3002\u6bd4\u5982\uff0cSwift \u4e2d\u7684 Equatable \uff0c\u5176\u4f5c\u7528\u662f\u4e00\u4e2a\u5224\u7b49\u5668\uff1a 1 2 3 protocol Equatable { static func == ( lhs : Self , rhs : Self ) -> Bool } \u6ee1\u8db3\u534f\u8bae\u8981\u6c42\u7684\u7c7b\u578b\u79f0\u4e3a \u9075\u5faa \uff08conform to\uff09\u6b64\u534f\u8bae\u3002\u5982\u679c\u4e00\u4e2a\u7c7b\u578b\u60f3\u8981\u9075\u5faa Equatable \uff0c\u9700\u8981\uff1a \u5728\u7c7b\u578b\u540d\u79f0\u540e\u9762\u52a0\u4e0a Equatable \u5b9e\u73b0 == \u65b9\u6cd5 \u6bd4\u5982\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 struct Rectangle : Equatable { var width : Double var height : Double static func == ( lhs : Rectangle , rhs : Rectangle ) -> Bool { return lhs . width == rhs . width && lhs . height == rhs . height } } let r1 = Rectangle ( width : 1 , height : 3 ) let r2 = Rectangle ( width : 1 , height : 2 ) print ( r1 == r2 ) // false let rectangles = [ r1 , r2 ] // An array of rectangles print ( rectangles . contains ( Rectangle ( width : 1 , height : 2 ))) // true \u5728\u8fd9\u91cc\uff0c Array \u672c\u8eab\u5e76\u4e0d\u77e5\u9053\u5982\u4f55\u5224\u65ad\u5b83\u5176\u4e2d\u662f\u5426\u6709\u5143\u7d20\u4e0e\u63d0\u4f9b\u7684 Rectangle \u76f8\u7b49\uff0c\u4f46\u7531\u4e8e Rectangle \u9075\u5faa\u4e86 Equatable \u534f\u8bae\uff0c\u4f7f\u5f97 Array \u53ef\u4ee5\u8c03\u7528 Equatable \u89c4\u5b9a\u7684\u5224\u7b49\u63a5\u53e3\u6765\u5b9e\u73b0\u5224\u65ad\u3002 Note \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u79cd\u63a5\u53e3\u7684\u89c4\u5b9a\u662f\u4e25\u683c\u7684\u3002 Array \u7684 contains \u65b9\u6cd5\u5f53\u4e14\u4ec5\u5f53\u5176\u5143\u7d20\u7c7b\u578b Element \u4e3a Equatable \u65f6\u624d\u5b58\u5728\uff1a 1 2 3 extension Array where Element : Equatable { func contains ( _ element : Element ) -> Bool {...} } \u6709\u5173\u6cdb\u578b\u548c extension \uff0c\u6211\u4eec\u5728\u540e\u9762\u4ecb\u7ecd\u3002","title":"\u534f\u8bae protocol"},{"location":"languages/swift/types/#_10","text":"protocol \u53ef\u4ee5\u89c4\u5b9a\u51e0\u7c7b\u63a5\u53e3\uff1a \u6210\u5458\u51fd\u6570 \u6210\u5458\u53d8\u91cf \u9759\u6001\u51fd\u6570 \u9759\u6001\u53d8\u91cf \u6784\u9020\u51fd\u6570 1 2 3 4 5 6 7 8 9 protocol SomeProtocol { var foo : Int { get set } var bar : Int { get } static var staticMember : Int { get } func someMethod ( a : Int ) -> Int static func staticMethod () -> Bool init ( code : Int ) } \u5176\u4e2d\uff0c\u89c4\u5b9a\u53d8\u91cf\u7684\u63a5\u53e3\u65f6\uff0c\u53ea\u80fd\u7528 var \uff0c\u800c\u4e14\u9700\u8981\u5728\u7c7b\u578b\u540d\u540e\u52a0\u4e0a { get } \u6216 { get set } \u4ee5\u6307\u5b9a \u9700\u8981\u6ee1\u8db3\u7684\u6700\u5c0f\u6743\u9650\u8981\u6c42 \u3002\u6bd4\u5982\uff0c\u67d0\u4e2a\u7c7b\u578b\u9075\u5faa SomeProtocol \u65f6\uff0c\u5b83\u7684 foo \u53d8\u91cf\u9700\u8981\u53ef\u8bfb\u5199\uff0c\u800c bar \u53d8\u91cf \u81f3\u5c11 \u53ef\u4ee5\u8bfb\uff0c\u4f46 \u4e0d\u80fd\u9650\u5236\u5176\u662f\u5426\u53ef\u5199 \u3002","title":"\u63a5\u53e3\u7684\u89c4\u5b9a\u65b9\u6cd5"},{"location":"languages/swift/types/#_11","text":"\u5f53\u6ca1\u6709 associated type\uff08\u7a0d\u540e\u4ecb\u7ecd\uff09\u65f6\uff0c\u534f\u8bae\u53ef\u4ee5\u4f5c\u4e3a\u7c7b\u578b\uff0c\u5e76\u4e14\u5176\u771f\u6b63\u7684\u7c7b\u578b\u53ef\u4ee5\u6539\u53d8\uff0c\u5982 Swift \u4e2d\u5185\u7f6e\u7684 Encodable \uff1a 1 2 var someEncodable : Encodable = 1 someEncodable = \"Hello\"","title":"\u534f\u8bae\u4f5c\u4e3a\u7c7b\u578b"},{"location":"languages/swift/types/#_12","text":"\u5728\u89c4\u5b9a\u4e86\u534f\u8bae\u7684\u63a5\u53e3\u540e\uff0c\u53ef\u4ee5\u5728 extension \u4e2d\u5bf9\u9664\u4e86 init \u4ee5\u5916\u7684\u63a5\u53e3\u8fdb\u884c\u9ed8\u8ba4\u5b9e\u73b0\uff0c\u4f46\u4e0d\u80fd\u5728 extension \u4e2d\u5b9e\u73b0\u50a8\u5b58\u53d8\u91cf\uff1a 1 2 3 4 5 6 7 8 extension SomeProtocol { var bar : Int { return 1 } func someMethod ( a : Int ) -> Int { return a } } \u8fd9\u6837\uff0c\u5f53\u67d0\u4e2a\u7c7b\u578b\u9075\u5faa SomeProtocol \u65f6\uff0c\u53ef\u4ee5\u4e0d\u7528\u5b9e\u73b0\u8fd9\u4e9b\u5df2\u7ecf\u8fdb\u884c\u9ed8\u8ba4\u5b9e\u73b0\u7684\u63a5\u53e3\u3002","title":"\u534f\u8bae\u65b9\u6cd5\u7684\u9ed8\u8ba4\u5b9e\u73b0"},{"location":"languages/swift/types/#_13","text":"\u4e00\u4e2a\u7c7b\u578b\u53ef\u4ee5\u9075\u5faa\u591a\u4e2a\u534f\u8bae\uff0c\u9700\u8981\u5b9e\u73b0\u6240\u6709\u534f\u8bae\u89c4\u5b9a\u7684\u63a5\u53e3\uff1a 1 2 3 4 5 6 7 8 9 10 11 protocol A { var foo : Int { get } } protocol B { func bar () } struct : SomeStructure : A , B { var foo : Int func bar () {...} } \u4e00\u4e2a\u534f\u8bae\u53ef\u4ee5\u7ee7\u627f\u591a\u4e2a\u534f\u8bae\uff0c\u5176\u4f5c\u7528\u4e3a\u6dfb\u52a0\u8fd9\u4e9b\u534f\u8bae\u7684\u89c4\u5b9a\u7684\u63a5\u53e3\u4f5c\u4e3a\u81ea\u8eab\u7684\u9650\u5236\u6761\u4ef6\uff0c\u9700\u8981\u5b9e\u73b0\u6240\u6709\u7684\u63a5\u53e3\uff1a 1 2 3 4 5 6 7 8 9 10 11 protocol A { var foo : Int { get } } protocol B : A { func bar () } struct : SomeStructure : B { var foo : Int func bar () {...} } Potocol-oriented Programming \u901a\u8fc7\u9075\u5faa\u534f\u8bae\u3001\u5bf9\u534f\u8bae\u8fdb\u884c\u9ed8\u8ba4\u7684\u5b9e\u73b0\u3001\u534f\u8bae\u7684\u7ee7\u627f\uff0c\u4f7f\u5f97 struct \u548c enum \u8fd9\u4e9b\u6ca1\u6709\u7ee7\u627f\u529f\u80fd\u7684\u7c7b\u578b\u53ef\u4ee5\u56e0\u6b64\u5b9e\u73b0\u7c7b\u4f3c\u4e8e\u7ee7\u627f\u7684\u6548\u679c\u3002 \u73b0\u4ee3 Swift \u6846\u67b6\u5927\u91cf\u4f7f\u7528 protocol \u8fdb\u884c\u9762\u5411\u534f\u8bae\u7684\u7f16\u7a0b\uff08potocol-oriented programming\uff09\u3002\u5176\u601d\u60f3\u7c7b\u4f3c\u4e8e OOP\uff0c\u4f46\u5728\u67d0\u4e9b\u95ee\u9898\u7684\u5904\u7406\u4e0a\u6bd4\u7c7b\u7ee7\u627f\u8981\u66f4\u52a0\u7b80\u6d01\uff0c\u4e14\u4e0d\u6613\u51fa\u9519\u3002","title":"\u534f\u8bae\u7684\u7ec4\u5408\u4e0e\u7ee7\u627f"},{"location":"languages/swift/types/#extension","text":"class \u3001 struct \u3001 enum \u548c protocol \u53ef\u4ee5\u901a\u8fc7 extension \u6dfb\u52a0\u65b9\u6cd5\uff08\u8ba1\u7b97\u53d8\u91cf\u6216\u51fd\u6570\uff09\uff0c\u5305\u62ec\u6240\u6709\u7684\u5185\u7f6e\u7c7b\u578b\uff1a 1 2 3 4 5 6 7 extension Int { var string : String { return \" \\( self ) \" } } print ( 1. string ) \u4f7f\u7528 extension \u53ef\u4ee5\u4ee5\u9762\u5411\u5bf9\u8c61\u7684\u65b9\u5f0f\u7ed9\u4efb\u4f55\u7c7b\u578b\u6dfb\u52a0\u65b9\u6cd5\u3002 \u53e6\u5916\uff0c\u4e00\u822c\u4e3a\u4e86\u533a\u5206\u4e0d\u540c\u7684 protocol \u7684\u63a5\u53e3\uff0c\u5728\u9075\u5faa\u4e0d\u540c\u7684\u534f\u8bae\u65f6\uff0c\u5f80\u5f80\u5c06\u5404\u4e2a\u534f\u8bae\u89c4\u5b9a\u7684\u63a5\u53e3\u5b9e\u73b0\u5728\u4e0d\u540c\u7684 extension \u4e2d\uff1a 1 2 3 4 5 6 7 8 9 struct A { // Original members } extension A : ProtocolA { // Implementation of ProtocolA } extension A : ProtocolB { // Implementation of ProtocolB }","title":"extension"},{"location":"languages/swift/types/#_14","text":"\u5143\u7ec4\uff08tuple\uff09\u7528\u4e8e\u4f20\u9012\u590d\u5408\u503c\uff0c\u7528\u62ec\u53f7\u7ec4\u7ec7\uff0c\u53ef\u4ee5\u5e26\u6807\u7b7e\uff0c\u7528\u6807\u7b7e\u6216\u8005\u6210\u5458\uff08\u800c\u975e\u4e0b\u6807\uff090\u30011\u30012 \u7b49\u53d6\u51fa\u5176\u4e2d\u7684\u503c\uff1a 1 2 3 4 5 6 7 8 func getCurrentTime () -> ( hour : Int , minute : Int , second : Int ) { return ( 18 , 20 , 36 ) } let time = getCurrentTime () print ( time . hour ) // or print ( time . 0 ) // hour \u5143\u7ec4\u7684\u5143\u7d20\u6570\u91cf\u662f\u56fa\u5b9a\u7684\uff0c\u4e0d\u5b58\u5728\u8d8a\u754c\u7684\u60c5\u51b5\u3002","title":"\u5143\u7ec4"},{"location":"languages/swift/types/#_15","text":"Swift \u4e2d\uff0c\u51fd\u6570\u4e5f\u662f\u4e00\u79cd\u7c7b\u578b\uff0c\u53ef\u4ee5\u50a8\u5b58\u5728\u53d8\u91cf\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u53c2\u6570/\u8fd4\u56de\u503c\u53c2\u4e0e\u53e6\u4e00\u4e2a\u51fd\u6570\u3002\u51fd\u6570\u7c7b\u578b\u7684\u58f0\u660e\u4e3a (\u53c2\u6570\u5217\u8868) -> \u8fd4\u56de\u7c7b\u578b \uff1a 1 2 var someHandler : ( Int , Int ) -> Void var optionalHandler : (( Int , Int ) -> Void )? // Optional \u4f7f\u7528\u5927\u62ec\u53f7\u6765\u751f\u6210\u533f\u540d\u51fd\u6570\uff08\u95ed\u5305\uff0cclosure\uff09\uff0c\u5728\u62ec\u53f7\u5185\u4f7f\u7528 \u53c2\u6570\u5217\u8868 -> \u8fd4\u56de\u7c7b\u578b in \u7ed9\u4f20\u5165\u7684\u5404\u4e2a\u53c2\u6570\u547d\u540d\uff1a 1 2 3 let incrementer : ( Int ) -> Int = { value -> Int in return value + 1 } \u8c03\u7528\u65b9\u6cd5\u4e0e\u51fd\u6570\u76f8\u540c\uff1a 1 let result = incrementer ( 1 ) // 2 \u4e0a\u4e0b\u6587\u660e\u786e\u65f6\uff0c\u53ef\u4ee5\u7701\u7565\u62ec\u53f7\u5185\u7684 -> Int \uff1a 1 2 3 let incrementer : ( Int ) -> Int = { value in return value + 1 } \u53e6\u5916\uff0c\u53ef\u4ee5\u7701\u7565\u53c2\u6570\u5217\u8868\uff0c\u7528 $0 \u3001 $1 \u7b49\u6307\u4ee3\u7b2c\u4e00\u3001\u7b2c\u4e8c\u4e2a\u5143\u7d20\uff1a 1 2 3 4 5 let incrementer : ( Int ) -> Int = { return $0 + 1 } [ 1 , 2 , 3 ]. removeAll ( where : { $0 < 2 }) // [2, 3] Note \u95ed\u5305\u7684\u4e00\u4e2a\u5178\u578b\u5e94\u7528\u573a\u666f\u662f\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u51fd\u6570\u4e2d\u4f5c\u4e3a\u56de\u8c03\u51fd\u6570\u3002\u5982\uff0c\u8fdb\u884c\u7f51\u7edc\u8bf7\u6c42\uff0c\u5f53\u8bf7\u6c42\u5b8c\u6210\u65f6\uff0c\u8c03\u7528\u4f20\u5165\u7684\u56de\u8c03\u51fd\u6570\u6765\u8fdb\u884c\u7ed3\u679c\u7684\u5904\u7406\uff1a 1 2 3 4 5 6 7 let task = session . dataTask ( with : url ) { data , response , error in if let data = data { let string = String ( data : data , encoding : . utf8 ) ! print ( string ) } } task . resume () \u4e0a\u9762\u7684\u4f8b\u5b50\u4f7f\u7528\u4e86\u4e00\u79cd\u53eb\u505a trailing closures \u7684\u8bed\u6cd5\uff0c\u4f7f\u5f97\u56de\u8c03\u51fd\u6570\u7684\u51fd\u6570\u4f53\u53ef\u4ee5\u5199\u5728\u51fd\u6570\u7684\u201c\u5916\u9762\u201d\uff0c\u8be6\u89c1 Swift \u5b98\u65b9\u6559\u7a0b \u3002","title":"\u51fd\u6570"},{"location":"languages/swift/variable-function/","text":"\u53d8\u91cf \u00b6 \u7528 var \u58f0\u660e\u53ef\u66f4\u6539\u7684\u53d8\u91cf\uff0c let \u58f0\u660e\u4e0d\u53ef\u66f4\u6539\u7684\u53d8\u91cf\uff08\u5e38\u91cf\uff09\u3002 \u58f0\u660e\u53d8\u91cf\u65f6\uff0c\u5728\u53d8\u91cf\u540d\u540e\u7528 : Type \u58f0\u660e\u7c7b\u578b\uff1a 1 2 3 var myVariable : Int = 42 myVariable = 50 let myConstant : Int = 42 \u5982\u679c\u4e0a\u4e0b\u6587\u660e\u786e\uff0c\u7f16\u8bd1\u5668\u80fd\u591f\u81ea\u52a8\u786e\u5b9a\u53d8\u91cf\u7684\u7c7b\u578b\uff0c\u90a3\u4e48\u7c7b\u578b\u58f0\u660e\u53ef\u4ee5\u7701\u7565\uff08\u6bd4\u5982\uff0c 42 \u662f\u6574\u6570\u5b57\u9762\u503c\uff0c\u81ea\u52a8\u63a8\u65ad\u4e3a Int \u7c7b\u578b\uff09\uff1a 1 2 3 let myInt = 42 // Int let myString = \"Hello\" + \", World!\" // String let myDouble = 42.0 + 1 // Double \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cSwift \u4e0d\u5141\u8bb8\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\uff0c\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\u53ea\u80fd\u901a\u8fc7\u76ee\u6807\u7c7b\u578b\u7684\u6784\u9020\u51fd\u6570\u8fdb\u884c\uff1a 1 2 3 4 5 let intValue = 12 // \u7c7b\u578b\u4e3a Int let uint64Value = UInt64 ( intValue ) // \u7c7b\u578b\u4e3a UInt64 // let uint64Value: UInt64 = intValue // error: cannot convert value of type 'Int' to specified type 'UInt64' var \u548c let \u58f0\u660e\u7684\u53d8\u91cf\u5728\u4f7f\u7528\u4e4b\u524d \u5fc5\u987b\u521d\u59cb\u5316 \uff0c\u5426\u5219\u7f16\u8bd1\u4e0d\u901a\u8fc7\u3002\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0c var \u53ef\u4ee5\u591a\u6b21\u8d4b\u503c\uff0c\u800c let \u53ea\u80fd\u8d4b\u503c\u4e00\u6b21\u3002 Swift \u652f\u6301\u7a7a\u503c\uff08Optional\uff09\uff0c\u8868\u793a\u53d8\u91cf\u7684\u503c\u201c\u4e0d\u5b58\u5728\u201d\u3002\u5728\u7c7b\u578b\u540e\u52a0\u4e0a ? \u58f0\u660e\u53ef\u7a7a\u7684\u53d8\u91cf\uff0c\u5173\u952e\u5b57 nil \u8868\u793a\u503c\u4e3a\u7a7a\uff1a 1 2 3 4 5 var result : Int ? = nil print ( result ) // nil result = 1 print ( result ) // Optional(1) \u6ce8\u610f\u5230\uff0c\u5373\u4f7f Optional \u503c\u4e0d\u4e3a\u7a7a\uff0cOptional \u4e0e\u539f\u6765\u7684\u7c7b\u578b\u662f\u4e0d\u540c\u7684\u4e24\u4e2a\u7c7b\u578b\uff0c\u4e0d\u80fd\u76f4\u63a5\u83b7\u53d6\u5176\u503c\u3002 Optional \u7684\u503c\u6709\u4e24\u79cd\u8bfb\u53d6\u65b9\u6cd5\u3002\u7b2c\u4e00\u79cd\u662f\u5f53\u786e\u4fdd Optional \u4e0d\u4e3a\u7a7a\u65f6\uff0c\u5728\u53d8\u91cf\u540d\u540e\u52a0\u4e0a ! \u8868\u793a\u5f3a\u5236\u89e3\u9664\u5305\u88c5\u83b7\u53d6\u503c\u3002\u5f53\u503c\u4e3a\u7a7a\u65f6\uff0c\u4f7f\u7528 ! \u4f1a\u5bfc\u81f4\u8fd0\u884c\u9519\u8bef\uff0c\u7a0b\u5e8f\u76f4\u63a5\u5d29\u6e83\uff1a 1 2 3 4 5 6 7 if result != nil { print ( result !) } result = nil print ( result !) // Fatal error: Unexpectedly found nil while unwrapping an Optional value \u53e6\u4e00\u79cd\u662f\u5efa\u8bae\u4f7f\u7528\u7684\u65b9\u6cd5\uff0c\u901a\u8fc7 Swift \u7684\u4e00\u4e2a\u8bed\u6cd5\u7cd6 if let \uff08\u6216 if var \uff09\u5b9e\u73b0\uff1a 1 2 3 4 if let realResult = result { // \u6b64\u65f6 realResult \u7c7b\u578b\u4e3a Int\uff0c\u4e0d\u662f Optional<Int> print ( realResult ) } \u76f8\u5f53\u4e8e 1 2 3 4 if result != nil { let realResult = result ! print ( realResult ) } \u5982\u679c if let \u5927\u62ec\u53f7\u5185\u4e0d\u9700\u8981\u518d\u5f15\u7528\u539f\u6765\u7684 Optional\uff0c\u4e00\u822c if let \u8bed\u53e5 let \u540e\u9762\u65b0\u7684\u53d8\u91cf\u540d\u76f4\u63a5\u4f7f\u7528\u539f\u6709\u7684\u53d8\u91cf\u540d\uff0c\u7701\u53bb\u91cd\u590d\u547d\u540d\u7684\u56f0\u6270\uff1a 1 2 3 4 if let result = result { // \u6b64\u65f6 result \u7c7b\u578b\u4e3a Int\uff0c\u5b58\u5728\u4e8e\u62ec\u53f7\u4f5c\u7528\u57df\u4e2d print ( result ) } \u53e6\u5916\uff0c\u53ef\u4ee5\u4f7f\u7528 ?? \u7ed9 Optional \u63d0\u4f9b\u9ed8\u8ba4\u503c\uff0c\u5f53\u503c\u4e3a\u7a7a\u65f6\uff0c\u4f7f\u7528\u9ed8\u8ba4\u503c\uff1a 1 print ( result ?? 0 ) \u4e0e Optional \u6709\u5173\u7684\u66f4\u591a\u6761\u4ef6\u5224\u65ad\u8bed\u53e5\u5c06\u5728\u540e\u9762\u4ecb\u7ecd\u3002 \u51fd\u6570 \u00b6 \u4f7f\u7528\u5173\u952e\u5b57 func \u58f0\u660e\u51fd\u6570\u3002\u51fd\u6570\u53c2\u6570\u7684\u58f0\u660e\u4e0e\u53d8\u91cf\u58f0\u660e\u7c7b\u4f3c\uff0c\u9700\u8981\u663e\u5f0f\u6307\u51fa\u7c7b\u578b\uff1b\u8fd4\u56de\u503c\u7528 -> Type \u663e\u5f0f\u6307\u51fa\uff1b\u53ef\u4ee5\u4e3a\u53c2\u6570\u6307\u5b9a\u9ed8\u8ba4\u503c\uff1a 1 2 3 func add ( a : Int , b : Int = 2 ) -> Int { return a + b } \u5982\u679c\u51fd\u6570\u4f53\u53ea\u6709\u4e00\u884c\uff0c\u53ef\u4ee5\u7701\u7565 return \uff1a 1 2 3 func add ( a : Int , b : Int = 2 ) -> Int { a + b } \u8c03\u7528\u65f6\uff0c\u9700\u8981\u5199\u51fa\u6807\u7b7e\uff1a 1 add ( a : 1 , b : 1 ) Swift \u51fd\u6570\u58f0\u660e\u7684\u7279\u70b9\u662f\uff0c\u5176\u53c2\u6570\u6709\u4e24\u4e2a\u201c\u540d\u79f0\u201d\uff1a\u53c2\u6570\u540d\uff08\u51fd\u6570\u4f53\u5185\u90e8\u4f7f\u7528\uff09\u548c\u6807\u7b7e\uff08\u8c03\u7528\u65f6\u6307\u51fa\uff09\uff0c\u6309\u7167 \u6807\u7b7e \u53c2\u6570\u540d: \u7c7b\u578b \u7684\u5f62\u5f0f\u58f0\u660e\u3002\u5982\u679c\u4e0d\u533a\u5206\u6807\u7b7e\u548c\u51fd\u6570\u540d\uff0c\u5219\u4f7f\u7528 \u53c2\u6570\u540d: \u7c7b\u578b \u58f0\u660e\u3002 \u5bf9\u4e8e\u4e0a\u9762\u7684 add \uff0c\u53c2\u6570\u53ea\u6709\u540d\u79f0\uff0c a \u548c b \u65e2\u4f5c\u4e3a\u53c2\u6570\u540d\u79f0\uff0c\u53c8\u4f5c\u4e3a\u6807\u7b7e\u3002\u4e0e\u4e4b\u5bf9\u5e94\uff0c\u6709\u65f6\u5019\u6211\u4eec\u5c06\u6807\u7b7e\u548c\u53c2\u6570\u540d\u5206\u79bb\uff0c\u5982 Array \u7684 remove \u65b9\u6cd5\uff1a 1 2 func remove ( at index : Int ) -> Element {...} myArray . remove ( at : 0 ) // at \u4e3a\u6807\u7b7e\uff0c\u8c03\u7528\u65f6\u4f7f\u7528 \u8c03\u7528\u51fd\u6570\u65f6\uff0c\u5fc5\u987b\u5199\u51fa\u6807\u7b7e\uff0c\u56e0\u6b64\u4e0a\u9762\u7684\u8c03\u7528\u4e0d\u80fd\u5199\u6210 add(1, 1) \u3002\u5982\u679c\u9700\u8981\u7701\u7565\u6807\u7b7e\uff0c\u5728\u6807\u7b7e\u7684\u4f4d\u7f6e\u4f7f\u7528\u4e0b\u5212\u7ebf _ \u66ff\u4ee3\uff1a 1 2 func add ( _ a : Int , _ b : Int ) -> Int {...} add ( 1 , 2 ) Note Swift \u7684\u6807\u7b7e\u548c\u53c2\u6570\u540d\u7684\u8bbe\u8ba1\u6709\u4ee5\u4e0b\u51e0\u70b9\u597d\u5904\uff1a 1. \u9700\u8981\u660e\u786e\u5199\u51fa\u6807\u7b7e\uff0c\u4f7f\u5f97\u8c03\u7528\u65f6\u8bed\u4e49\u66f4\u52a0\u660e\u786e\u3002 C \u98ce\u683c\u51fd\u6570\u8c03\u7528\u65f6\u6ca1\u6709\u6807\u7b7e\uff0c\u5404\u53c2\u6570\u7684\u987a\u5e8f\u53ef\u80fd\u4f1a\u9020\u6210\u56f0\u6270\uff0c\u6bd4\u5982 memcpy(buf1, buf2) \uff0c\u7a76\u7adf\u54ea\u4e2a\u662f src \uff0c\u54ea\u4e2a\u662f dest \uff1f \u800c Swift \u4e2d\u53ef\u4ee5\u5229\u7528\u6807\u7b7e\u6765\u660e\u786e\uff1a 1 copyMemory ( source : buffer1 , dest : buffer2 ) 2. \u6807\u7b7e\u589e\u5f3a\u4ee3\u7801\u53ef\u8bfb\u6027\uff0c\u540c\u65f6\u53c2\u6570\u540d\u4fdd\u6301\u5e94\u6709\u7684\u542b\u4e49 \u8fd8\u662f\u4e0a\u9762\u7684\u4f8b\u5b50\u3002\u6211\u4eec\u53ef\u4ee5\u5c06 copyMemory \u7684\u6807\u7b7e\u548c\u53c2\u6570\u540d\u5206\u79bb\uff1a 1 2 3 4 5 6 func copyMemory ( from source : SomeType , to dest : SomeType ) { print ( \"Copying from \\( source ) to \\( dest ) \" ) ... } copyMemory ( from : buffer1 , to : buffer2 ) \u8fd9\u6837\u8c03\u6574\u4e4b\u540e\uff0c\u51fd\u6570\u8c03\u7528 copyMemory(from: buffer1, to: buffer2) \u5c31\u53ef\u4ee5\u7528\u82f1\u6587\u4ece\u5de6\u5f80\u53f3\u8bfb\u51fa\u6765\uff1a\u201cCopy memory from buffer 1 to buffer 2\u201d\u3002\u8fd9\u662f Swift \u7684 \u4e09\u4e2a\u7279\u70b9 \u4e4b\u4e00\uff1aexpressive\u3002 \u540c\u65f6\uff0c\u51fd\u6570\u4f53\u5185\u90e8\u5f15\u7528\u4e24\u4e2a\u53c2\u6570\u65f6\u4ecd\u7136\u4fdd\u6301 source \u548c dest \u7684\u8bed\u4e49\uff0c\u907f\u514d\u4e86 print(\"Copying from \\(from) to \\(to)\") \u8fd9\u6837\u7684\u60c5\u5f62\u3002 \u5173\u4e8e\u6807\u7b7e\u548c\u53c2\u6570\u540d\u7684\u4f7f\u7528\u89c4\u8303\uff0c\u8be6\u89c1 Swift \u7684 API Design Guidelines \u3002","title":"\u53d8\u91cf\u548c\u51fd\u6570"},{"location":"languages/swift/variable-function/#_1","text":"\u7528 var \u58f0\u660e\u53ef\u66f4\u6539\u7684\u53d8\u91cf\uff0c let \u58f0\u660e\u4e0d\u53ef\u66f4\u6539\u7684\u53d8\u91cf\uff08\u5e38\u91cf\uff09\u3002 \u58f0\u660e\u53d8\u91cf\u65f6\uff0c\u5728\u53d8\u91cf\u540d\u540e\u7528 : Type \u58f0\u660e\u7c7b\u578b\uff1a 1 2 3 var myVariable : Int = 42 myVariable = 50 let myConstant : Int = 42 \u5982\u679c\u4e0a\u4e0b\u6587\u660e\u786e\uff0c\u7f16\u8bd1\u5668\u80fd\u591f\u81ea\u52a8\u786e\u5b9a\u53d8\u91cf\u7684\u7c7b\u578b\uff0c\u90a3\u4e48\u7c7b\u578b\u58f0\u660e\u53ef\u4ee5\u7701\u7565\uff08\u6bd4\u5982\uff0c 42 \u662f\u6574\u6570\u5b57\u9762\u503c\uff0c\u81ea\u52a8\u63a8\u65ad\u4e3a Int \u7c7b\u578b\uff09\uff1a 1 2 3 let myInt = 42 // Int let myString = \"Hello\" + \", World!\" // String let myDouble = 42.0 + 1 // Double \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cSwift \u4e0d\u5141\u8bb8\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\uff0c\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\u53ea\u80fd\u901a\u8fc7\u76ee\u6807\u7c7b\u578b\u7684\u6784\u9020\u51fd\u6570\u8fdb\u884c\uff1a 1 2 3 4 5 let intValue = 12 // \u7c7b\u578b\u4e3a Int let uint64Value = UInt64 ( intValue ) // \u7c7b\u578b\u4e3a UInt64 // let uint64Value: UInt64 = intValue // error: cannot convert value of type 'Int' to specified type 'UInt64' var \u548c let \u58f0\u660e\u7684\u53d8\u91cf\u5728\u4f7f\u7528\u4e4b\u524d \u5fc5\u987b\u521d\u59cb\u5316 \uff0c\u5426\u5219\u7f16\u8bd1\u4e0d\u901a\u8fc7\u3002\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0c var \u53ef\u4ee5\u591a\u6b21\u8d4b\u503c\uff0c\u800c let \u53ea\u80fd\u8d4b\u503c\u4e00\u6b21\u3002 Swift \u652f\u6301\u7a7a\u503c\uff08Optional\uff09\uff0c\u8868\u793a\u53d8\u91cf\u7684\u503c\u201c\u4e0d\u5b58\u5728\u201d\u3002\u5728\u7c7b\u578b\u540e\u52a0\u4e0a ? \u58f0\u660e\u53ef\u7a7a\u7684\u53d8\u91cf\uff0c\u5173\u952e\u5b57 nil \u8868\u793a\u503c\u4e3a\u7a7a\uff1a 1 2 3 4 5 var result : Int ? = nil print ( result ) // nil result = 1 print ( result ) // Optional(1) \u6ce8\u610f\u5230\uff0c\u5373\u4f7f Optional \u503c\u4e0d\u4e3a\u7a7a\uff0cOptional \u4e0e\u539f\u6765\u7684\u7c7b\u578b\u662f\u4e0d\u540c\u7684\u4e24\u4e2a\u7c7b\u578b\uff0c\u4e0d\u80fd\u76f4\u63a5\u83b7\u53d6\u5176\u503c\u3002 Optional \u7684\u503c\u6709\u4e24\u79cd\u8bfb\u53d6\u65b9\u6cd5\u3002\u7b2c\u4e00\u79cd\u662f\u5f53\u786e\u4fdd Optional \u4e0d\u4e3a\u7a7a\u65f6\uff0c\u5728\u53d8\u91cf\u540d\u540e\u52a0\u4e0a ! \u8868\u793a\u5f3a\u5236\u89e3\u9664\u5305\u88c5\u83b7\u53d6\u503c\u3002\u5f53\u503c\u4e3a\u7a7a\u65f6\uff0c\u4f7f\u7528 ! \u4f1a\u5bfc\u81f4\u8fd0\u884c\u9519\u8bef\uff0c\u7a0b\u5e8f\u76f4\u63a5\u5d29\u6e83\uff1a 1 2 3 4 5 6 7 if result != nil { print ( result !) } result = nil print ( result !) // Fatal error: Unexpectedly found nil while unwrapping an Optional value \u53e6\u4e00\u79cd\u662f\u5efa\u8bae\u4f7f\u7528\u7684\u65b9\u6cd5\uff0c\u901a\u8fc7 Swift \u7684\u4e00\u4e2a\u8bed\u6cd5\u7cd6 if let \uff08\u6216 if var \uff09\u5b9e\u73b0\uff1a 1 2 3 4 if let realResult = result { // \u6b64\u65f6 realResult \u7c7b\u578b\u4e3a Int\uff0c\u4e0d\u662f Optional<Int> print ( realResult ) } \u76f8\u5f53\u4e8e 1 2 3 4 if result != nil { let realResult = result ! print ( realResult ) } \u5982\u679c if let \u5927\u62ec\u53f7\u5185\u4e0d\u9700\u8981\u518d\u5f15\u7528\u539f\u6765\u7684 Optional\uff0c\u4e00\u822c if let \u8bed\u53e5 let \u540e\u9762\u65b0\u7684\u53d8\u91cf\u540d\u76f4\u63a5\u4f7f\u7528\u539f\u6709\u7684\u53d8\u91cf\u540d\uff0c\u7701\u53bb\u91cd\u590d\u547d\u540d\u7684\u56f0\u6270\uff1a 1 2 3 4 if let result = result { // \u6b64\u65f6 result \u7c7b\u578b\u4e3a Int\uff0c\u5b58\u5728\u4e8e\u62ec\u53f7\u4f5c\u7528\u57df\u4e2d print ( result ) } \u53e6\u5916\uff0c\u53ef\u4ee5\u4f7f\u7528 ?? \u7ed9 Optional \u63d0\u4f9b\u9ed8\u8ba4\u503c\uff0c\u5f53\u503c\u4e3a\u7a7a\u65f6\uff0c\u4f7f\u7528\u9ed8\u8ba4\u503c\uff1a 1 print ( result ?? 0 ) \u4e0e Optional \u6709\u5173\u7684\u66f4\u591a\u6761\u4ef6\u5224\u65ad\u8bed\u53e5\u5c06\u5728\u540e\u9762\u4ecb\u7ecd\u3002","title":"\u53d8\u91cf"},{"location":"languages/swift/variable-function/#_2","text":"\u4f7f\u7528\u5173\u952e\u5b57 func \u58f0\u660e\u51fd\u6570\u3002\u51fd\u6570\u53c2\u6570\u7684\u58f0\u660e\u4e0e\u53d8\u91cf\u58f0\u660e\u7c7b\u4f3c\uff0c\u9700\u8981\u663e\u5f0f\u6307\u51fa\u7c7b\u578b\uff1b\u8fd4\u56de\u503c\u7528 -> Type \u663e\u5f0f\u6307\u51fa\uff1b\u53ef\u4ee5\u4e3a\u53c2\u6570\u6307\u5b9a\u9ed8\u8ba4\u503c\uff1a 1 2 3 func add ( a : Int , b : Int = 2 ) -> Int { return a + b } \u5982\u679c\u51fd\u6570\u4f53\u53ea\u6709\u4e00\u884c\uff0c\u53ef\u4ee5\u7701\u7565 return \uff1a 1 2 3 func add ( a : Int , b : Int = 2 ) -> Int { a + b } \u8c03\u7528\u65f6\uff0c\u9700\u8981\u5199\u51fa\u6807\u7b7e\uff1a 1 add ( a : 1 , b : 1 ) Swift \u51fd\u6570\u58f0\u660e\u7684\u7279\u70b9\u662f\uff0c\u5176\u53c2\u6570\u6709\u4e24\u4e2a\u201c\u540d\u79f0\u201d\uff1a\u53c2\u6570\u540d\uff08\u51fd\u6570\u4f53\u5185\u90e8\u4f7f\u7528\uff09\u548c\u6807\u7b7e\uff08\u8c03\u7528\u65f6\u6307\u51fa\uff09\uff0c\u6309\u7167 \u6807\u7b7e \u53c2\u6570\u540d: \u7c7b\u578b \u7684\u5f62\u5f0f\u58f0\u660e\u3002\u5982\u679c\u4e0d\u533a\u5206\u6807\u7b7e\u548c\u51fd\u6570\u540d\uff0c\u5219\u4f7f\u7528 \u53c2\u6570\u540d: \u7c7b\u578b \u58f0\u660e\u3002 \u5bf9\u4e8e\u4e0a\u9762\u7684 add \uff0c\u53c2\u6570\u53ea\u6709\u540d\u79f0\uff0c a \u548c b \u65e2\u4f5c\u4e3a\u53c2\u6570\u540d\u79f0\uff0c\u53c8\u4f5c\u4e3a\u6807\u7b7e\u3002\u4e0e\u4e4b\u5bf9\u5e94\uff0c\u6709\u65f6\u5019\u6211\u4eec\u5c06\u6807\u7b7e\u548c\u53c2\u6570\u540d\u5206\u79bb\uff0c\u5982 Array \u7684 remove \u65b9\u6cd5\uff1a 1 2 func remove ( at index : Int ) -> Element {...} myArray . remove ( at : 0 ) // at \u4e3a\u6807\u7b7e\uff0c\u8c03\u7528\u65f6\u4f7f\u7528 \u8c03\u7528\u51fd\u6570\u65f6\uff0c\u5fc5\u987b\u5199\u51fa\u6807\u7b7e\uff0c\u56e0\u6b64\u4e0a\u9762\u7684\u8c03\u7528\u4e0d\u80fd\u5199\u6210 add(1, 1) \u3002\u5982\u679c\u9700\u8981\u7701\u7565\u6807\u7b7e\uff0c\u5728\u6807\u7b7e\u7684\u4f4d\u7f6e\u4f7f\u7528\u4e0b\u5212\u7ebf _ \u66ff\u4ee3\uff1a 1 2 func add ( _ a : Int , _ b : Int ) -> Int {...} add ( 1 , 2 ) Note Swift \u7684\u6807\u7b7e\u548c\u53c2\u6570\u540d\u7684\u8bbe\u8ba1\u6709\u4ee5\u4e0b\u51e0\u70b9\u597d\u5904\uff1a 1. \u9700\u8981\u660e\u786e\u5199\u51fa\u6807\u7b7e\uff0c\u4f7f\u5f97\u8c03\u7528\u65f6\u8bed\u4e49\u66f4\u52a0\u660e\u786e\u3002 C \u98ce\u683c\u51fd\u6570\u8c03\u7528\u65f6\u6ca1\u6709\u6807\u7b7e\uff0c\u5404\u53c2\u6570\u7684\u987a\u5e8f\u53ef\u80fd\u4f1a\u9020\u6210\u56f0\u6270\uff0c\u6bd4\u5982 memcpy(buf1, buf2) \uff0c\u7a76\u7adf\u54ea\u4e2a\u662f src \uff0c\u54ea\u4e2a\u662f dest \uff1f \u800c Swift \u4e2d\u53ef\u4ee5\u5229\u7528\u6807\u7b7e\u6765\u660e\u786e\uff1a 1 copyMemory ( source : buffer1 , dest : buffer2 ) 2. \u6807\u7b7e\u589e\u5f3a\u4ee3\u7801\u53ef\u8bfb\u6027\uff0c\u540c\u65f6\u53c2\u6570\u540d\u4fdd\u6301\u5e94\u6709\u7684\u542b\u4e49 \u8fd8\u662f\u4e0a\u9762\u7684\u4f8b\u5b50\u3002\u6211\u4eec\u53ef\u4ee5\u5c06 copyMemory \u7684\u6807\u7b7e\u548c\u53c2\u6570\u540d\u5206\u79bb\uff1a 1 2 3 4 5 6 func copyMemory ( from source : SomeType , to dest : SomeType ) { print ( \"Copying from \\( source ) to \\( dest ) \" ) ... } copyMemory ( from : buffer1 , to : buffer2 ) \u8fd9\u6837\u8c03\u6574\u4e4b\u540e\uff0c\u51fd\u6570\u8c03\u7528 copyMemory(from: buffer1, to: buffer2) \u5c31\u53ef\u4ee5\u7528\u82f1\u6587\u4ece\u5de6\u5f80\u53f3\u8bfb\u51fa\u6765\uff1a\u201cCopy memory from buffer 1 to buffer 2\u201d\u3002\u8fd9\u662f Swift \u7684 \u4e09\u4e2a\u7279\u70b9 \u4e4b\u4e00\uff1aexpressive\u3002 \u540c\u65f6\uff0c\u51fd\u6570\u4f53\u5185\u90e8\u5f15\u7528\u4e24\u4e2a\u53c2\u6570\u65f6\u4ecd\u7136\u4fdd\u6301 source \u548c dest \u7684\u8bed\u4e49\uff0c\u907f\u514d\u4e86 print(\"Copying from \\(from) to \\(to)\") \u8fd9\u6837\u7684\u60c5\u5f62\u3002 \u5173\u4e8e\u6807\u7b7e\u548c\u53c2\u6570\u540d\u7684\u4f7f\u7528\u89c4\u8303\uff0c\u8be6\u89c1 Swift \u7684 API Design Guidelines \u3002","title":"\u51fd\u6570"},{"location":"notes/editor/","text":"\u7f16\u8f91\u8005\u987b\u77e5\uff08\u8349\u6848\uff09 \u00b6 \u8d21\u732e\u65b9\u5f0f \u00b6 \u6587\u6863\u76ee\u524d\u5b58\u50a8\u4e8e GitHub Repo \u4e0a\uff0c\u4f7f\u7528 GitHub Pages \u90e8\u7f72\u6210\u4e86\u76ee\u524d\u7684\u6280\u80fd\u5f15\u5bfc\u6587\u6863\u7f51\u7ad9\u3002\u5982\u679c\u60a8\u6709\u610f\u8d21\u732e\u5230\u672c\u9879\u76ee\uff0c\u8bf7\u60a8\uff1a \u68c0\u67e5\u81ea\u5df1\u60f3\u8981\u8d21\u732e\u7684\u90e8\u5206\u662f\u5426\u5728 Repo \u7684 Issue \u4e2d\u5df2\u7ecf\u63d0\u51fa\uff0c\u82e5\u5df2\u7ecf\u63d0\u51fa\u5219\u4e0d\u5fc5\u91cd\u590d PR\u3002 \u786e\u8ba4\u81ea\u5df1\u60f3\u8981\u8d21\u732e\u7684\u90e8\u5206\u6682\u672a\u5728 Issue \u4e2d\u63d0\u51fa\u65f6\uff0c\u63d0\u51fa Issue \u8868\u660e\u9700\u8981\u8d21\u732e\u54ea\u4e00\u90e8\u5206\u5185\u5bb9\u3002 \u4ed4\u7ec6\u9605\u8bfb\u672c\u7f16\u8f91\u8005\u987b\u77e5\u4e0b\u7684\u7f16\u8f91\u8981\u6c42\uff0c\u4e0d\u7b26\u5408\u4e0b\u8ff0\u7f16\u8f91\u8981\u6c42\u7684\u8d21\u732e\uff0c\u5ba1\u6838\u56e2\u961f\u53ef\u80fd\u4f1a\u62d2\u7edd\u5408\u5e76\u5e76\u8981\u6c42\u60a8\u4fee\u6539\u3002 \u5c06\u6587\u6863\u4ed3\u5e93 Fork \u5230\u4e2a\u4eba\u8d26\u6237\u3002 \u5728\u672c\u5730\u5bf9\u4e2a\u4eba\u4ed3\u5e93\u7684\u6587\u6863\u8fdb\u884c\u4fee\u6539\u540e\u8fdb\u884c Commit\u3002 \u63d0\u8bf7 Pull Request\uff0c\u5ba1\u6838\u56e2\u961f\u4f1a\u5c3d\u5feb\u5ba1\u6838\u60a8\u7684\u8d21\u732e\u5185\u5bb9\uff0c\u5ba1\u6838\u5b8c\u6bd5\u540e\u4f1a\u5173\u95ed\u60a8\u63d0\u51fa\u7684 Issue\u3002 \u672c\u5730\u6784\u5efa \u00b6 \u5728\u63d0\u8bf7 PR \u4e4b\u524d\uff0c\u60a8\u53ef\u4ee5\u9996\u5148\u5728\u672c\u5730\u6784\u5efa\u6587\u6863\u5e76\u5728\u6d4f\u89c8\u5668\u4e2d\u6d4f\u89c8\uff0c\u4ee5\u786e\u5b9a\u81ea\u5df1\u7684\u6587\u6863\u6e32\u67d3\u6b63\u786e\u4e14\u7b26\u5408\u683c\u5f0f\u8981\u6c42\u3002 \u6784\u5efa\u4e4b\u524d\uff0c\u9996\u5148\u901a\u8fc7\u4e0b\u8ff0\u547d\u4ee4\u786e\u4fdd\u60a8\u7684\u73af\u5883\u5177\u6709 Python \u548c pip\uff1a 1 2 python --version pip --version \u968f\u540e\u8fdb\u5165 Clone \u5230\u672c\u5730\u7684\u4ed3\u5e93\u7684\u6839\u76ee\u5f55\uff0c\u5b89\u88c5 Python \u4f9d\u8d56\uff1a 1 pip install -r requirements.txt \u968f\u540e\u8fd0\u884c\uff1a 1 mkdocs serve \u5e94\u5f53\u53ef\u4ee5\u770b\u5230\u7c7b\u4f3c\u8f93\u51fa\u4fe1\u606f\uff1a 1 2 3 4 INFO - Building documentation... INFO - Cleaning site directory INFO - Documentation built in 8 .75 seconds INFO - [ 17 :16:02 ] Serving on http://127.0.0.1:8000/ \u8fd9\u6837\u5c31\u53ef\u4ee5\u901a\u8fc7\u6d4f\u89c8\u5668\u8bbf\u95ee http://127.0.0.1:8000/ \u67e5\u770b\u672c\u5730\u6784\u5efa\u7684\u6587\u6863\u4e86\u3002 \u51c6\u786e\u6027 \u00b6 \u8bf7\u8bb0\u4f4f\uff0c\u7f16\u5199\u8005\u6709\u4e49\u52a1\u786e\u4fdd\u8d21\u732e\u7684\u6587\u6863\u6ca1\u6709\u4e8b\u5b9e\u9519\u8bef\u3002 \u5982\u679c\u65b0\u8d21\u732e\u7684\u6587\u6863\u8d85\u51fa\u4e86\u5ba1\u6838\u56e2\u961f\u7684\u4e13\u4e1a\u77e5\u8bc6\u8303\u56f4\uff0c\u5ba1\u6838\u56e2\u961f\u9700\u8981\u5bfb\u6c42\u5176\u4ed6\u4e13\u4e1a\u4eba\u5458\u7684\u5e2e\u52a9\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5ba1\u6838\u5468\u671f\u5ef6\u957f\u3002 \u6587\u7ae0\u7acb\u573a \u00b6 \u6211\u4eec\u5e0c\u671b\u7f16\u8f91\u8005\u5c3d\u91cf\u7ad9\u5728\u5ba2\u89c2\u7684\u89d2\u5ea6\u3001\u4ee5 \u521d\u5b66\u8005\u7684\u89c6\u89d2 \u7f16\u5199\u5f15\u5bfc\u6587\u6863\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u53ea\u8981\u9605\u8bfb\u8005\u5177\u6709\u4e86\u6587\u6863\u4e4b\u4e2d\u8981\u6c42\u7684\u524d\u7f6e\u77e5\u8bc6\uff0c\u5c31\u5e94\u5f53\u80fd\u591f\u65e0\u969c\u788d\u9605\u8bfb\u5b66\u4e60\u6587\u6863\u5185\u5bb9\u3002 \u793a\u4f8b \u4f8b\u5982\uff0c\u5bf9\u4e8e\u524d\u7f6e\u77e5\u8bc6\u4e2d\u5df2\u7ed9\u51fa\uff0c\u800c\u4e0d\u9700\u8981\u8be6\u7ec6\u8bb2\u89e3\u7684\u77e5\u8bc6\uff0c\u53ef\u4ee5\u5728\u524d\u7f6e\u77e5\u8bc6\u90e8\u5206\u58f0\u660e\u4e4b\u540e\u4f7f\u7528\u7c7b\u4f3c\u5982\u4e0b\u7684\u8868\u8ff0\uff1a TypeScript \u8bed\u8a00\u4e4b\u4e2d\u7684\u7c7b\u7c7b\u4f3c\u4e8e ES6 \u6807\u51c6\u4e2d JavaScript \u8bed\u8a00\u4e4b\u4e2d\u7684\u7c7b\uff0c\u6545\u6b64\u5904\u4ec5\u7ed9\u51fa\u6837\u4f8b\u7a0b\u5e8f\u800c\u4e0d\u8fdb\u884c\u8be6\u7ec6\u8bb2\u89e3\u3002\u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cTypeScript \u8bed\u8a00\u4e4b\u4e2d\u7684\u7c7b\u5141\u8bb8\u58f0\u660e\u7c7b\u6210\u5458\u548c\u65b9\u6cd5\u7684\u8bbf\u95ee\u6743\u9650\u3002 \u5bf9\u4e8e\u5176\u4ed6\u6587\u6863\u4e2d\u5df2\u7ed9\u51fa\uff0c\u800c\u4e0d\u9700\u8981\u8be6\u7ec6\u8bb2\u89e3\u7684\u77e5\u8bc6\uff0c\u4e5f\u53ef\u4ee5\u91c7\u7528\u8fd9\u7c7b\u8868\u8ff0\uff0c\u7136\u540e\u5728\u5bf9\u5e94\u524d\u7f6e\u77e5\u8bc6\u7684\u4f4d\u7f6e\u8fdb\u884c\u660e\u663e\u6807\u6ce8\uff0c\u5e76\u8bbe\u7f6e\u8df3\u8f6c\u94fe\u63a5\u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u6211\u4eec\u4e0d\u5e0c\u671b\u7f16\u8f91\u8005\u91c7\u7528\u7c7b\u4f3c\u5982\u4e0b\u7684\u8868\u8ff0\uff1a \u8bfb\u8005\u5e94\u5f53\u5df2\u7ecf\u5728\u300a\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u300b\u8bfe\u7a0b\u4e4b\u4e2d\u5b66\u4e60\u8fc7\u7c7b\u4f3c\u77e5\u8bc6\uff0c\u8fd9\u91cc\u4e0d\u8fdb\u884c\u8868\u8ff0\u3002 \u8fd9\u7c7b\u8868\u8ff0\u95ee\u9898\u5728\u4e8e\u5176\u5f15\u7528\u7684\u8d44\u6e90\uff08\u8bfe\u7a0b\u8d44\u6e90\uff09\u5e76\u4e0d\u80fd\u81ea\u7531\u83b7\u53d6\uff0c\u8fd9\u7c7b\u8868\u8ff0\u53ef\u80fd\u9020\u6210\u8bfb\u8005\u5b66\u4e60\u7684\u969c\u788d\u3002\u89e3\u51b3\u65b9\u5f0f\u662f\u7f16\u8f91\u8005\u5728\u6587\u6863\u4e2d\u505a\u51fa\u8be6\u7ec6\u89e3\u91ca\u6216\u5728\u8d44\u6e90\u94fe\u63a5\u90e8\u5206\u7ed9\u51fa\u76f8\u5173\u8d44\u6599\u3002 \u540c\u65f6\uff0c\u4f5c\u4e3a\u8ba1\u7b97\u673a\u7cfb\u5b66\u751f\u79d1\u534f\u7684\u4e00\u4efd\u6280\u80fd\u5f15\u5bfc\u6587\u6863\uff0c\u6211\u4eec\u4e0e\u7f51\u7edc\u4e0a\u7684\u5404\u79cd\u6280\u80fd\u6559\u7a0b\u6700\u5927\u7684\u533a\u522b\u5728\u4e8e\uff0c\u6211\u4eec\u7684\u76ee\u6807\u8bfb\u8005\u662f\u8ba1\u7b97\u673a\u7c7b\u4e0e\u8ba1\u7b97\u673a\u7cfb\u7684\u540c\u5b66\u3002\u7f16\u8f91\u8005\u53ef\u4ee5\u5c1d\u8bd5\u4ece\u81ea\u8eab\u7684\u5b66\u4e60\u7ecf\u5386\u51fa\u53d1\uff0c\u7701\u7565\u90e8\u5206\u5728\u8bfe\u7a0b\u6559\u6388\u4e2d\u57fa\u7840\u800c\u4e0d\u5fc5\u8981\u7684\u4ecb\u7ecd\uff08\u4f7f\u7528\u76f8\u5173\u7f51\u7edc\u8d44\u6599\u94fe\u63a5\u66ff\u4ee3\uff09\uff0c\u5e76\u544a\u77e5\u8bfb\u8005\u5982\u4f55\u5728\u8bfe\u7a0b\u4e2d\uff0c\u5728\u79d1\u7814\u4e2d\uff0c\u5728\u5b9e\u4e60\u4e2d\u5c06\u5c55\u793a\u7684\u77e5\u8bc6\u5e94\u7528\u5230\u5b9e\u8df5\u5f53\u4e2d\u3002 \u6587\u7ae0\u67b6\u6784 \u00b6 \u4e00\u4efd\u5b8c\u6574\u7684\u6280\u80fd\u5f15\u5bfc\u6587\u6863\u81f3\u5c11\u5e94\u5f53\u5305\u542b\u4ee5\u4e0b\u90e8\u5206\uff1a \u524d\u7f6e\u77e5\u8bc6 \u90e8\u5206\u3002\u5728\u8fd9\u4e00\u90e8\u5206\uff0c\u7f16\u8f91\u8005\u9700\u8981\u6307\u660e\u9605\u8bfb\u8fd9\u4e00\u4efd\u6587\u6863\u6240\u9700\u8981\u7684\u6240\u6709\u524d\u7f6e\u77e5\u8bc6\u3002\u6240\u6709\u7684\u524d\u7f6e\u77e5\u8bc6\u4f7f\u7528\u65e0\u5e8f\u5217\u8868\u7ed9\u51fa\u3002 \u5b66\u4e60\u8def\u5f84 \u90e8\u5206\u3002\u8be5\u90e8\u5206\u53ef\u9009\uff0c\u63a8\u8350\u6d89\u53ca\u8f83\u5e7f\u77e5\u8bc6\u9762\u7684\u6587\u6863\u5305\u542b\u8fd9\u4e00\u90e8\u5206\u3002\u5728\u8fd9\u4e00\u90e8\u5206\uff0c\u7f16\u8f91\u8005\u9700\u8981\u8bf4\u660e\u6709\u4e0d\u540c\u77e5\u8bc6\u9700\u6c42\u7684\u8bfb\u8005\u672c\u6587\u6863\u5e94\u8be5\u6309\u7167\u4f55\u79cd\u987a\u5e8f\u9605\u8bfb\u3001\u5b66\u4e60\u3002 \u77e5\u8bc6\u8bb2\u89e3 \u90e8\u5206\u3002\u5728\u8fd9\u4e00\u90e8\u5206\uff0c\u7f16\u8f91\u8005\u9700\u8981\u5bf9\u77e5\u8bc6\u70b9\u6709\u6761\u7406\u5730\u8fdb\u884c\u8bb2\u89e3\uff0c\u5e76\u4e14\u9002\u5f53\u5730\u5f15\u7528\u5916\u90e8\u8d44\u6e90\u4f5c\u4e3a\u8f85\u52a9\u3002 \u540e\u7eed\u62d3\u5c55 \u90e8\u5206\u3002\u5728\u8fd9\u4e00\u90e8\u5206\uff0c\u7f16\u8f91\u8005\u53ef\u4ee5\u6307\u51fa\u5b66\u4e60\u5b8c\u8fd9\u4e00\u90e8\u5206\u77e5\u8bc6\u540e\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5b66\u4e60\u7684\u9886\u57df\uff0c\u6216\u8005\u53ef\u4ee5\u5e94\u7528\u8fd9\u4e9b\u77e5\u8bc6\u7684\u8bfe\u7a0b\u3002\u6240\u6709\u7684\u540e\u7eed\u62d3\u5c55\u5b66\u4e60\u5185\u5bb9\u4f7f\u7528\u65e0\u5e8f\u5217\u8868\u7ed9\u51fa\u3002 \u8d44\u6e90\u94fe\u63a5 \u90e8\u5206\u3002\u5728\u8fd9\u4e00\u90e8\u5206\uff0c\u7f16\u8f91\u8005\u9700\u8981\u5c06\u6587\u6863\u4e2d\u6240\u5f15\u7528\u7684\u8d44\u6e90\u5217\u51fa\uff0c\u7f16\u8f91\u8005\u6709\u8d23\u4efb\u4fdd\u8bc1\u8d44\u6e90\u6709\u6548\u3001\u53ef\u8bbf\u95ee\u3002\u90e8\u5206\u7528\u4e8e\u77e5\u8bc6\u62d3\u5c55\u7684\u8d44\u6e90\u4e5f\u53ef\u4ee5\u653e\u7f6e\u5728\u8fd9\u4e00\u90e8\u5206\u3002\u6b64\u90e8\u5206\u5728\u7f57\u5217\u94fe\u63a5\u4e4b\u5916\uff0c\u5e94\u5f53\u5177\u4f53\u8bf4\u660e\u6bcf\u4e2a\u94fe\u63a5\u4e2d\u5927\u81f4\u6709\u4ec0\u4e48\u5185\u5bb9\u3002 \u6587\u6863\u5b58\u50a8 \u00b6 \u6587\u4ef6\u540d\u8bf7\u5168\u90e8\u4f7f\u7528\u5c0f\u5199\uff0c\u5206\u9694\u7b26\u8bf7\u4f7f\u7528 - \u3002 \u6587\u4ef6\u5e94\u89c6\u4e3b\u9898\uff0c\u653e\u4e8e\u5bf9\u5e94\u7684\u5206\u7c7b\u76ee\u5f55\u4e0b\u3002\u65b0\u5efa\u7684\u6587\u4ef6\u9700\u8981\u5728 mkdocs.yml \u4e2d\u58f0\u660e\uff0c\u4ee5\u8c03\u6574\u6587\u6863\u7684\u5c42\u7ea7\u7ed3\u6784\u3002 \u82e5\u591a\u4e2a\u6587\u6863\u540c\u65f6\u5f52\u5c5e\u67d0\u4e2a\u5927\u4e3b\u9898\uff0c\u5219\u53ef\u4e3a\u8be5\u5927\u4e3b\u9898\u65b0\u5efa\u6587\u4ef6\u5939\u5b58\u50a8\u3002 \u5173\u4e8e\u6587\u6863\u4e2d\u9700\u8981\u5c55\u793a\u7684\u56fe\u7247\uff0c\u8bf7\u5b58\u50a8\u5230 /static \u4e0b\u4e0e\u6587\u6863\u76f8\u5bf9 /docs \u76ee\u5f55\u540c\u540d\u7684\u6587\u4ef6\u5939\u4e2d\uff0c\u5e76\u547d\u540d\u4e3a \u5185\u5bb9\u6982\u8981.\u6587\u4ef6\u6269\u5c55\u540d \u3002\u5982 /docs/basic/git.md \u7684\u56fe\u7247\u6587\u4ef6\u8bf7\u5b58\u50a8\u4e3a /static/basic/git/logo.png \u3002 \u6587\u7ae0\u683c\u5f0f \u00b6 \u6362\u884c\u7b26 \u6362\u884c\u7b26\u7684\u95ee\u9898\u5c24\u5176\u91cd\u8981\uff0c\u4ee5\u81f3\u4e8e\u9700\u8981\u5728\u6587\u7ae0\u683c\u5f0f\u90e8\u5206\u7684\u4e00\u5f00\u59cb\u5c31\u6307\u51fa\u8fd9\u4e2a\u95ee\u9898\u3002 \u672c\u6587\u6863\u7684\u81ea\u52a8\u5316\u8d21\u732e\u8ba1\u7b97\u63d2\u4ef6\u57fa\u4e8e Git \u7684 Commit \u884c\u6570\uff0c\u800c\u4fee\u6539\u6362\u884c\u7b26\u4e5f\u4f1a\u8ba1\u7b97\u5230 Commit \u4fee\u6539\u4e4b\u4e2d\uff0c\u6240\u4ee5\u6362\u884c\u7b26\u4f1a\u5f71\u54cd\u5230\u6587\u6863\u6700\u540e\u7684\u8d21\u732e\u5ea6 Credit\u3002 \u5bf9\u4e8e\u5df2\u5b58\u5728\u7684\u6587\u7ae0\uff0c\u4e0d\u80fd\u66f4\u6539\u5176\u672a\u4fee\u6539\u7684\u884c\u7684\u6362\u884c\u7b26\uff0c\u5426\u5219 Pull Request \u5c06\u4f1a\u88ab\u76f4\u63a5\u5173\u95ed\uff1b \u5bf9\u4e8e\u65b0\u5efa\u7acb\u7684\u6587\u6863\uff0c\u53ef\u4ee5\u4f7f\u7528\u9ed8\u8ba4\u6362\u884c\u7b26\u3002 \u6807\u9898\u4e0e\u5c0f\u6807\u9898 \u00b6 \u6587\u7ae0\u4e2d\u5e94\u4ec5\u5b58\u5728\u4e00\u4e2a \u4e00\u7ea7\u6807\u9898 \uff0c\u4ee5\u6982\u62ec\u6587\u7ae0\u7684\u4e3b\u9898\u3002 \u6587\u7ae0\u91c7\u7528 \u4e8c\u7ea7\u6807\u9898 \u4f5c\u4e3a\u5206\u8282\u7b26\uff0c\u5982\u3010\u524d\u7f6e\u77e5\u8bc6\u3011\u3010\u540e\u7eed\u62d3\u5c55\u3011\u3010\u8d44\u6e90\u94fe\u63a5\u3011\u5747\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u5c0f\u8282\u3002\u6587\u7ae0\u7684\u4e3b\u9898\u5185\u5bb9\u5e94\u5206\u4e3a\u591a\u4e2a\u5c0f\u8282\u3002 \u4e09\u7ea7\u6807\u9898 \u5e94\u8d77\u5230\u5728\u4e00\u4e2a\u5c0f\u8282\u4e2d\u5206\u9694\u4e0d\u540c\u8ba8\u8bba\u5185\u5bb9\u7684\u4f5c\u7528\u3002\u5982\u4e8c\u7ea7\u6807\u9898 JavaScript \u7684\u51fd\u6570 \u4e0b\uff0c\u4e09\u7ea7\u6807\u9898\u53ef\u4ee5\u5305\u542b \u51fd\u6570\u58f0\u660e\u4e0e\u8c03\u7528 \u3001 \u56de\u8c03\u6a21\u5f0f \u3001 \u95ed\u5305 \u7b49\u7b49\u6574\u4f53\u4e0a\u4e0d\u76f8\u4ea4\u7684\u5185\u5bb9\u3002 \u4e0d\u8981\u6ee5\u7528\u6807\u9898\uff0c\u6211\u4eec\u63a8\u8350\u81f3\u591a\u4f7f\u7528\u81f3\u4e09\u7ea7\u6807\u9898\uff0c\u56db\u7ea7\u53ca\u4ee5\u4e0a\u6807\u9898\u53ef\u4ee5\u4f7f\u7528\u52a0\u7c97\u3001\u65e0\u5e8f\u5217\u8868\u4ee3\u66ff\u3002\u6ee5\u7528\u6807\u9898\u4f1a\u4f7f\u5f97\u6587\u7ae0\u7684\u76ee\u5f55\u7ed3\u6784\u53d8\u590d\u6742\uff0c\u4e5f\u4f1a\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u5f71\u54cd\u8bfb\u8005\u5bf9\u6240\u5b66\u4e60\u77e5\u8bc6\u7684\u7ed3\u6784\u7684\u6574\u4f53\u6027\u628a\u63e1\u3002\u5982\u679c\u60f3\u5f3a\u8c03\u5185\u5bb9\uff0c\u4f7f\u7528 **\u5f3a\u8c03\u5185\u5bb9** \u3002 \u6807\u9898\u4e2d\u5e94\u5f53\u5c3d\u91cf\u4e0d\u51fa\u73b0\u4ee3\u7801\u5757\u3002 \u6392\u7248\u8981\u6c42 \u00b6 \u6211\u4eec\u5e76\u4e0d\u4e25\u683c\u8981\u6c42\u6587\u6863\u7684\u6392\u7248\u98ce\u683c\uff0c\u4f46\u7f16\u8f91\u8005\u5e94\u5f53\u5c3d\u53ef\u80fd\u9075\u5b88\u4ee5\u4e0b\u57fa\u672c\u7684\u6587\u6863\u884c\u6587\u8981\u6c42\u3002 \u6b63\u786e\u4f7f\u7528\u6807\u70b9\u7b26\u53f7 \u6b63\u786e\u4f7f\u7528 \u5168\u89d2 \u6807\u70b9\u7b26\u53f7\u4e0e \u534a\u89d2 \u6807\u70b9\u7b26\u53f7\u3002\u6c49\u8bed\u8bf7\u4f7f\u7528\u5168\u89d2\u7b26\u53f7\uff0c\u82f1\u8bed\u8bf7\u4f7f\u7528\u534a\u89d2\u7b26\u53f7\u3002 \u8bf7\u5728\u6bcf\u53e5\u8bdd\u7684\u672b\u5c3e\u6dfb\u52a0 \u53e5\u53f7 \u3002 \u6b63\u786e\u4f7f\u7528 \u62ec\u53f7 \u3002\u62ec\u53f7\u5728\u53e5\u4e2d\u8868\u793a\u5bf9\u53e5\u4e2d\u524d\u4e00\u4e2a\u5143\u7d20\u7684\u89e3\u91ca\u8bf4\u660e\uff0c\u5982 \u8bed\u6cd5\u7cd6\uff08\u82f1\u8bed\uff1aSyntactic sugar\uff09 \u3002\u62ec\u53f7\u5728\u53e5\u5916\u8868\u793a\u5bf9\u524d\u9762\u6574\u4e2a\u53e5\u5b50\u7684\u89e3\u91ca\u8bf4\u660e\u3002 \u6b63\u786e\u4f7f\u7528 \u5206\u53f7 \uff0c\u53ef\u4ee5\u4f7f\u5f97\u884c\u6587\u7ed3\u6784\u66f4\u52a0\u6e05\u6670\u3002 \u6b63\u786e\u8fdb\u884c\u4e2d\u6587\u6392\u7248 \u4e2d\u82f1\u6587\u4e4b\u95f4\u3001\u4e2d\u6587\u548c\u6570\u5b57\u4e4b\u95f4\u9700\u8981\u589e\u52a0\u7a7a\u683c\uff0c\u6570\u5b57\u548c\u5355\u4f4d\u4e4b\u95f4\u4e0d\u9700\u8981\u589e\u52a0\u7a7a\u683c\u3002 \u884c\u6587\u4e2d\u6b63\u6587\u4e0e\u8d85\u94fe\u63a5\u4e4b\u95f4\u9700\u8981\u589e\u52a0\u7a7a\u683c\u3002 \u5168\u89d2\u5b57\u7b26\u548c\u5176\u4ed6\u5b57\u7b26\u4e4b\u95f4\u4e0d\u52a0\u7a7a\u683c\u3002 \u4e13\u6709\u540d\u8bcd\u4f7f\u7528\u6b63\u786e\u7684\u5927\u5c0f\u5199\u3002\u5982\u4f7f\u7528\u7f29\u5199\uff0c\u5219\u8be5\u7f29\u5199\u5e94\u5df2\u6210\u4e3a\u4e1a\u754c\u6807\u51c6\u3002 \u4f7f\u7528\u56fe\u7247 \u00b6 \u56fe\u7247\u662f\u91cd\u8981\u7684\u8f85\u52a9\u8bf4\u660e\u7684\u5de5\u5177\uff0c\u4f46\u662f\u7531\u4e8e Markdown \u7684\u56fe\u7247\u5de5\u5177\u5e76\u4e0d\u5b8c\u5584\uff0c\u6240\u4ee5\u8bf7\u6ce8\u610f\u4ee5\u4e0b\u8981\u6c42\u3002 Markdown \u7684\u56fe\u7247\u5c3a\u5bf8\u95ee\u9898 Markdown \u6ca1\u6709\u63a7\u5236\u56fe\u7247\u5c3a\u5bf8\u7684\u547d\u4ee4\uff0c\u5176\u9ed8\u8ba4\u7f29\u653e\u56fe\u7247\u4ee5\u586b\u6ee1\u5bbd\u5ea6\u3002\u4e3a\u4e86\u4fdd\u8bc1\u7f8e\u89c2\u6027\u548c\u9605\u8bfb\u4f53\u9a8c\uff0c\u7c7b\u4f3c Logo \u7b49\u5e76\u4e0d\u9700\u8981\u5360\u6ee1\u5bbd\u5ea6\u7684\u56fe\u7247\uff0c\u8bf7\u4f7f\u7528 HTML \u6807\u7b7e\u63a7\u5236\u5176\u5c3a\u5bf8\u3002\u4f8b\u5982\uff1a 1 2 3 < center > < img src = \"https://i.loli.net/2021/10/10/NHZOsPCBmazyWjh.png\" height = \"20%\" width = \"20%\" > </ center > \u5e26\u4e0b\u6807\u7684\u56fe\u7247 Markdown \u5e76\u4e0d\u652f\u6301\u5e26\u4e0b\u6807\u7684\u56fe\u7247\uff0c\u6240\u4ee5\u8bf7\u4f7f\u7528 HTML \u6807\u7b7e\u3002\u63a8\u8350\u4f7f\u7528\uff1a 1 2 3 4 5 < center > < img src = \"https://i.loli.net/2021/09/28/Ti2VR4DtbgcdlkM.png\" /> < img src = \"https://i.loli.net/2021/09/28/Dvpkbd7KjLTH2yl.png\" /> < p style = \"text-align: center; margin-top: 0px; color: gray; padding: 0px\" > \u811a\u672c\u6587\u4ef6\u7684\u4f8b\u5b50 </ p > </ center > \u4f7f\u7528\u6298\u53e0\u6846 \u00b6 \u6b63\u6587\u7684\u8bed\u8a00\u98ce\u683c\u5c3d\u91cf\u6b63\u5f0f\uff0c\u611f\u609f\u3001\u601d\u8003\u3001\u542f\u53d1\u3001\u524d\u8a00\u3001\u8865\u5145\u6027\u5185\u5bb9\u3001Checkpoint \u7b49\u975e\u6b63\u6587\u5185\u5bb9\u5c3d\u91cf\u7eb3\u5165\u6298\u53e0\u6846\u4e4b\u4e2d\u3002 \u9644\uff1a \u6298\u53e0\u6846\u4f7f\u7528\u6559\u7a0b \u4f7f\u7528\u516c\u5f0f \u00b6 \u5f53\u884c\u6587\u9047\u5230\u6570\u5b66\u516c\u5f0f\u65f6\uff0c\u4f7f\u7528\u884c\u5185\u516c\u5f0f $a \\times b$ \u548c\u884c\u95f4\u516c\u5f0f $$ ... $$ \u6765\u8fdb\u884c\u6570\u5b66\u5f62\u5f0f\u7684\u8bb2\u89e3\uff0c\u800c\u4e0d\u8981\u4f7f\u7528 x^2 \u8fd9\u79cd\u5f71\u54cd\u9605\u8bfb\u7f8e\u89c2\u7a0b\u5ea6\u7684\u5199\u6cd5\u3002\u6b63\u786e\u793a\u4f8b\uff1a x^2 x^2 \u3002 \u9644\uff1a Mathjax \u4ee3\u7801\u6559\u7a0b \u4f7f\u7528\u6570\u5b66\u516c\u5f0f\u7684\u6ce8\u610f\u4e8b\u9879 \u90e8\u5206\u5e38\u7528\u51fd\u6570\uff0c\u5982\u4e09\u89d2\u51fd\u6570\u3001\u5bf9\u6570\u51fd\u6570\u7b49\u7684 Roman \u4f53\u7b26\u53f7\u5df2\u7ecf\u5185\u7f6e\u4e8e LaTeX \u4e2d\u3002\u5982\u4f59\u5f26\u51fd\u6570\u5e94\u5f53\u4f7f\u7528 $\\cos$ \u8868\u793a\uff0c\u6e32\u67d3\u4e3a \\cos \\cos \u3002\u800c\u4e0d\u5e94\u5f53\u4f7f\u7528 $cos$ \u8868\u793a\uff0c\u6e32\u67d3\u4e3a cos cos \u3002 \u6e32\u67d3 Roman \u4f53\uff08\u6b63\u4f53\uff09\u7c97\u4f53\u8bf7\u4f7f\u7528 $\\mathbf{}$ \uff0c\u5982 \\mathbf{a} \\mathbf{a} \u3002\u6e32\u67d3 Italic \u4f53\uff08\u659c\u4f53\uff09\u7c97\u4f53\u8bf7\u4f7f\u7528 $\\boldsymbol{a}$ \uff0c\u5982 \\boldsymbol{a} \\boldsymbol{a} \u3002\u8bf7\u4e0d\u8981\u6df7\u6dc6\u4e24\u8005\u3002 \u884c\u5185\u516c\u5f0f\u6e32\u67d3\u5206\u6570\u65f6\uff0c\u8bf7\u4f7f\u7528 $\\dfrac{}{}$ \uff0c\u5982 \\dfrac{1}{2} \\dfrac{1}{2} \u3002\u800c\u4e0d\u5e94\u4f7f\u7528 $\\frac{}{}$ \uff0c\u5982 \\frac{1}{2} \\frac{1}{2} \u3002 \u884c\u5185\u516c\u5f0f\u5e94\u5c3d\u529b\u907f\u514d\u6c42\u548c\u3001\u6c42\u79ef\u3001\u79ef\u5206\u7b49\u5de8\u8fd0\u7b97\u7b26\uff0c\u5373 \\sum \\sum \u3001 \\int \\int \u7b49\u8fd0\u7b97\u7b26\u3002 \u7701\u7565\u53f7\u8bf7\u4f7f\u7528 $\\cdots$ \uff0c\u5982 a_1, a_2, \\cdots, a_n a_1, a_2, \\cdots, a_n \u3002\u800c\u4e0d\u5e94\u4f7f\u7528 $...$ \uff0c\u5982 a_1, a_2, ..., a_n a_1, a_2, ..., a_n \u3002 \u6ce8\u610f\u533a\u5206\u6570\u5b66\u8bed\u8a00\u4e0e\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u3002\u8bf7\u4e0d\u8981\u5728\u516c\u5f0f\u5757\u5185\u4f7f\u7528\u53cc\u7b49\u53f7 == == \u4e43\u81f3\u4e09\u7b49\u53f7 === === \u8868\u793a\u4e24\u4e2a\u91cf\u76f8\u7b49\uff0c\u8bf7\u4f7f\u7528\u6570\u5b66\u8bed\u8a00\u4e2d\u7684\u5355\u7b49\u53f7 = = \uff0c\u5982 a = b a = b \u3002\u6b64\u5916\uff0c\u8bf7\u4e0d\u8981\u4f7f\u7528\u4e2d\u62ec\u53f7\u8fde\u7f00\u8868\u8fbe\u9ad8\u7ef4\u6570\u7ec4\uff0c\u5982 a[i][j][k] a[i][j][k] \uff0c\u8bf7\u4f7f\u7528\u51fd\u6570\u8868\u793a\uff0c\u5982 f(i, j, k) f(i, j, k) \u3002 \u7279\u6b8a\u96c6\u5408\uff08\u5982\u81ea\u7136\u6570\u96c6\u3001\u5b9e\u6570\u96c6\uff09\u7684\u5b57\u4f53\u8bf7\u4f7f\u7528 $\\mathbb{}$ \uff0c\u5982 \\mathbb{R} \\mathbb{R} \u3001 \\mathbb{N} \\mathbb{N} \u3002 \u62ec\u53f7\u5185\u4e3a\u5206\u5f0f\u7b49\u5185\u5bb9\u65f6\uff0c\u8bf7\u4f7f\u7528\u81ea\u9002\u5e94\u9ad8\u5ea6\u62ec\u53f7 $\\left(\\right)$ \uff0c\u5982 \\left(\\dfrac{1}{2}\\right)^n \\left(\\dfrac{1}{2}\\right)^n \u3002\u8bf7\u4e0d\u8981\u76f4\u63a5\u4f7f\u7528 $()$ \uff0c\u5982 (\\dfrac{1}{2})^n (\\dfrac{1}{2})^n \u3002 \u516c\u5f0f\u5185\u8bf7\u4e0d\u8981\u51fa\u73b0\u6c49\u5b57\uff0c\u51fa\u73b0\u82f1\u6587\u5355\u8bcd\u65f6\u8bf7\u4f7f\u7528\u6b63\u4f53\u3002 \u4f7f\u7528\u4ee3\u7801\u5757 \u00b6 \u4ee3\u7801\u5757\u5728\u672c\u6280\u80fd\u5f15\u5bfc\u6587\u6863\u4e2d\u8d77\u5230\u4e86\u4e3e\u8db3\u8f7b\u91cd\u7684\u5730\u4f4d\u3002 \u6211\u4eec\u7edf\u4e00\u89c4\u5b9a\uff0c\u884c\u95f4\u4ee3\u7801\u4f7f\u7528 ` \u5305\u88f9\u3002\u884c\u95f4\u4ee3\u7801\u4f7f\u7528 ``` \u5305\u88f9\u5e76\u5728\u8d77\u59cb\u7684\u4e09\u4e2a\u53cd\u5f15\u53f7\u540e\u6807\u8bb0\u4ee3\u7801\u7684\u8bed\u8a00\uff0c\u4f8b\u5982\uff1a 1 2 3 4 5 6 7 8 ```cpp #include <iostream> using namespace std ; int main () { cout << \"Hello World\" ; return 0 ; } ``` \u884c\u5185\u4ee3\u7801\u548c\u6b63\u6587\u7684\u533a\u5206 \u63a8\u8350\u5c06\u6587\u4ef6\u540d\u3001\u6587\u4ef6\u8def\u5f84\u7b49\u4f7f\u7528\u884c\u5185\u4ee3\u7801\u8868\u793a\u3002 \u63a8\u8350\u7684\u4ee3\u7801\u98ce\u683c \u53d8\u91cf\u4f7f\u7528\u9a7c\u5cf0\u547d\u540d\u6cd5\u3001\u4e0b\u5212\u7ebf\u547d\u540d\u6cd5\u7b49\u5747\u53ef\uff0c\u4f46\u9700\u8981\u5c3d\u91cf\u4fdd\u8bc1\u540c\u4e00\u7bc7\u6587\u6863\u5185\u547d\u540d\u98ce\u683c\u7edf\u4e00\u3002 \u4e0b\u5217\u4ee3\u7801\u98ce\u683c\u60ef\u4f8b\u4ee5 C++ \u8bed\u8a00\u4e3a\u4f8b\uff1a \u5927\u62ec\u53f7\u6362\u884c\u4e0e\u4e0d\u6362\u884c\u5747\u53ef\uff0c\u4f46\u9700\u8981\u4fdd\u8bc1\u540c\u4e00\u7bc7\u6587\u6863\u5185\u683c\u5f0f\u7edf\u4e00\u3002\u4e0d\u6362\u884c\u65f6\uff0c\u5176\u4e0e\u5de6\u4fa7\u7684\u53f3\u62ec\u53f7\u4e4b\u95f4\u5e94\u5f53\u6709\u4e00\u4e2a\u7a7a\u683c\u3002 \u5173\u952e\u5b57 if \u3001 for \u7b49\u4e0e\u540e\u7eed\u5de6\u62ec\u53f7\u4e4b\u95f4\u5e94\u5f53\u6709\u4e00\u4e2a\u7a7a\u683c\u3002 \u8fd0\u7b97\u7b26 + \u3001 - \u7b49\u4e0e\u5de6\u53f3\u64cd\u4f5c\u6570\u4e4b\u95f4\u5e94\u5f53\u5404\u6709\u4e00\u4e2a\u7a7a\u683c\uff0c\u8fd0\u7b97\u7b26 . \u3001 -> \u4e24\u4fa7\u5747\u4e0d\u5e94\u5f53\u6709\u7a7a\u683c\uff0c\u9017\u53f7 , \u5de6\u4fa7\u4e0d\u5e94\u5f53\u6709\u7a7a\u683c\u800c\u53f3\u4fa7\u5e94\u5f53\u6709\u7a7a\u683c\u3002 \u884c\u5185\u6ce8\u91ca\u8d77\u59cb\u6807\u8bb0 // \u4e0e\u6ce8\u91ca\u6587\u5b57\u95f4\u5e94\u5f53\u6709\u4e00\u4e2a\u7a7a\u683c\u3002 \u4f7f\u7528 2 \u4e2a\u7a7a\u683c\u6216\u8005 4 \u4e2a\u7a7a\u683c\u8fdb\u884c\u7f29\u8fdb\u5747\u53ef\uff0c\u4f46\u9700\u8981\u4fdd\u8bc1\u540c\u4e00\u7bc7\u6587\u6863\u5185\u7edf\u4e00\u3002","title":"\u7f16\u8f91\u8005\u987b\u77e5"},{"location":"notes/editor/#_1","text":"","title":"\u7f16\u8f91\u8005\u987b\u77e5\uff08\u8349\u6848\uff09"},{"location":"notes/editor/#_2","text":"\u6587\u6863\u76ee\u524d\u5b58\u50a8\u4e8e GitHub Repo \u4e0a\uff0c\u4f7f\u7528 GitHub Pages \u90e8\u7f72\u6210\u4e86\u76ee\u524d\u7684\u6280\u80fd\u5f15\u5bfc\u6587\u6863\u7f51\u7ad9\u3002\u5982\u679c\u60a8\u6709\u610f\u8d21\u732e\u5230\u672c\u9879\u76ee\uff0c\u8bf7\u60a8\uff1a \u68c0\u67e5\u81ea\u5df1\u60f3\u8981\u8d21\u732e\u7684\u90e8\u5206\u662f\u5426\u5728 Repo \u7684 Issue \u4e2d\u5df2\u7ecf\u63d0\u51fa\uff0c\u82e5\u5df2\u7ecf\u63d0\u51fa\u5219\u4e0d\u5fc5\u91cd\u590d PR\u3002 \u786e\u8ba4\u81ea\u5df1\u60f3\u8981\u8d21\u732e\u7684\u90e8\u5206\u6682\u672a\u5728 Issue \u4e2d\u63d0\u51fa\u65f6\uff0c\u63d0\u51fa Issue \u8868\u660e\u9700\u8981\u8d21\u732e\u54ea\u4e00\u90e8\u5206\u5185\u5bb9\u3002 \u4ed4\u7ec6\u9605\u8bfb\u672c\u7f16\u8f91\u8005\u987b\u77e5\u4e0b\u7684\u7f16\u8f91\u8981\u6c42\uff0c\u4e0d\u7b26\u5408\u4e0b\u8ff0\u7f16\u8f91\u8981\u6c42\u7684\u8d21\u732e\uff0c\u5ba1\u6838\u56e2\u961f\u53ef\u80fd\u4f1a\u62d2\u7edd\u5408\u5e76\u5e76\u8981\u6c42\u60a8\u4fee\u6539\u3002 \u5c06\u6587\u6863\u4ed3\u5e93 Fork \u5230\u4e2a\u4eba\u8d26\u6237\u3002 \u5728\u672c\u5730\u5bf9\u4e2a\u4eba\u4ed3\u5e93\u7684\u6587\u6863\u8fdb\u884c\u4fee\u6539\u540e\u8fdb\u884c Commit\u3002 \u63d0\u8bf7 Pull Request\uff0c\u5ba1\u6838\u56e2\u961f\u4f1a\u5c3d\u5feb\u5ba1\u6838\u60a8\u7684\u8d21\u732e\u5185\u5bb9\uff0c\u5ba1\u6838\u5b8c\u6bd5\u540e\u4f1a\u5173\u95ed\u60a8\u63d0\u51fa\u7684 Issue\u3002","title":"\u8d21\u732e\u65b9\u5f0f"},{"location":"notes/editor/#_3","text":"\u5728\u63d0\u8bf7 PR \u4e4b\u524d\uff0c\u60a8\u53ef\u4ee5\u9996\u5148\u5728\u672c\u5730\u6784\u5efa\u6587\u6863\u5e76\u5728\u6d4f\u89c8\u5668\u4e2d\u6d4f\u89c8\uff0c\u4ee5\u786e\u5b9a\u81ea\u5df1\u7684\u6587\u6863\u6e32\u67d3\u6b63\u786e\u4e14\u7b26\u5408\u683c\u5f0f\u8981\u6c42\u3002 \u6784\u5efa\u4e4b\u524d\uff0c\u9996\u5148\u901a\u8fc7\u4e0b\u8ff0\u547d\u4ee4\u786e\u4fdd\u60a8\u7684\u73af\u5883\u5177\u6709 Python \u548c pip\uff1a 1 2 python --version pip --version \u968f\u540e\u8fdb\u5165 Clone \u5230\u672c\u5730\u7684\u4ed3\u5e93\u7684\u6839\u76ee\u5f55\uff0c\u5b89\u88c5 Python \u4f9d\u8d56\uff1a 1 pip install -r requirements.txt \u968f\u540e\u8fd0\u884c\uff1a 1 mkdocs serve \u5e94\u5f53\u53ef\u4ee5\u770b\u5230\u7c7b\u4f3c\u8f93\u51fa\u4fe1\u606f\uff1a 1 2 3 4 INFO - Building documentation... INFO - Cleaning site directory INFO - Documentation built in 8 .75 seconds INFO - [ 17 :16:02 ] Serving on http://127.0.0.1:8000/ \u8fd9\u6837\u5c31\u53ef\u4ee5\u901a\u8fc7\u6d4f\u89c8\u5668\u8bbf\u95ee http://127.0.0.1:8000/ \u67e5\u770b\u672c\u5730\u6784\u5efa\u7684\u6587\u6863\u4e86\u3002","title":"\u672c\u5730\u6784\u5efa"},{"location":"notes/editor/#_4","text":"\u8bf7\u8bb0\u4f4f\uff0c\u7f16\u5199\u8005\u6709\u4e49\u52a1\u786e\u4fdd\u8d21\u732e\u7684\u6587\u6863\u6ca1\u6709\u4e8b\u5b9e\u9519\u8bef\u3002 \u5982\u679c\u65b0\u8d21\u732e\u7684\u6587\u6863\u8d85\u51fa\u4e86\u5ba1\u6838\u56e2\u961f\u7684\u4e13\u4e1a\u77e5\u8bc6\u8303\u56f4\uff0c\u5ba1\u6838\u56e2\u961f\u9700\u8981\u5bfb\u6c42\u5176\u4ed6\u4e13\u4e1a\u4eba\u5458\u7684\u5e2e\u52a9\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5ba1\u6838\u5468\u671f\u5ef6\u957f\u3002","title":"\u51c6\u786e\u6027"},{"location":"notes/editor/#_5","text":"\u6211\u4eec\u5e0c\u671b\u7f16\u8f91\u8005\u5c3d\u91cf\u7ad9\u5728\u5ba2\u89c2\u7684\u89d2\u5ea6\u3001\u4ee5 \u521d\u5b66\u8005\u7684\u89c6\u89d2 \u7f16\u5199\u5f15\u5bfc\u6587\u6863\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u53ea\u8981\u9605\u8bfb\u8005\u5177\u6709\u4e86\u6587\u6863\u4e4b\u4e2d\u8981\u6c42\u7684\u524d\u7f6e\u77e5\u8bc6\uff0c\u5c31\u5e94\u5f53\u80fd\u591f\u65e0\u969c\u788d\u9605\u8bfb\u5b66\u4e60\u6587\u6863\u5185\u5bb9\u3002 \u793a\u4f8b \u4f8b\u5982\uff0c\u5bf9\u4e8e\u524d\u7f6e\u77e5\u8bc6\u4e2d\u5df2\u7ed9\u51fa\uff0c\u800c\u4e0d\u9700\u8981\u8be6\u7ec6\u8bb2\u89e3\u7684\u77e5\u8bc6\uff0c\u53ef\u4ee5\u5728\u524d\u7f6e\u77e5\u8bc6\u90e8\u5206\u58f0\u660e\u4e4b\u540e\u4f7f\u7528\u7c7b\u4f3c\u5982\u4e0b\u7684\u8868\u8ff0\uff1a TypeScript \u8bed\u8a00\u4e4b\u4e2d\u7684\u7c7b\u7c7b\u4f3c\u4e8e ES6 \u6807\u51c6\u4e2d JavaScript \u8bed\u8a00\u4e4b\u4e2d\u7684\u7c7b\uff0c\u6545\u6b64\u5904\u4ec5\u7ed9\u51fa\u6837\u4f8b\u7a0b\u5e8f\u800c\u4e0d\u8fdb\u884c\u8be6\u7ec6\u8bb2\u89e3\u3002\u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cTypeScript \u8bed\u8a00\u4e4b\u4e2d\u7684\u7c7b\u5141\u8bb8\u58f0\u660e\u7c7b\u6210\u5458\u548c\u65b9\u6cd5\u7684\u8bbf\u95ee\u6743\u9650\u3002 \u5bf9\u4e8e\u5176\u4ed6\u6587\u6863\u4e2d\u5df2\u7ed9\u51fa\uff0c\u800c\u4e0d\u9700\u8981\u8be6\u7ec6\u8bb2\u89e3\u7684\u77e5\u8bc6\uff0c\u4e5f\u53ef\u4ee5\u91c7\u7528\u8fd9\u7c7b\u8868\u8ff0\uff0c\u7136\u540e\u5728\u5bf9\u5e94\u524d\u7f6e\u77e5\u8bc6\u7684\u4f4d\u7f6e\u8fdb\u884c\u660e\u663e\u6807\u6ce8\uff0c\u5e76\u8bbe\u7f6e\u8df3\u8f6c\u94fe\u63a5\u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u6211\u4eec\u4e0d\u5e0c\u671b\u7f16\u8f91\u8005\u91c7\u7528\u7c7b\u4f3c\u5982\u4e0b\u7684\u8868\u8ff0\uff1a \u8bfb\u8005\u5e94\u5f53\u5df2\u7ecf\u5728\u300a\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u300b\u8bfe\u7a0b\u4e4b\u4e2d\u5b66\u4e60\u8fc7\u7c7b\u4f3c\u77e5\u8bc6\uff0c\u8fd9\u91cc\u4e0d\u8fdb\u884c\u8868\u8ff0\u3002 \u8fd9\u7c7b\u8868\u8ff0\u95ee\u9898\u5728\u4e8e\u5176\u5f15\u7528\u7684\u8d44\u6e90\uff08\u8bfe\u7a0b\u8d44\u6e90\uff09\u5e76\u4e0d\u80fd\u81ea\u7531\u83b7\u53d6\uff0c\u8fd9\u7c7b\u8868\u8ff0\u53ef\u80fd\u9020\u6210\u8bfb\u8005\u5b66\u4e60\u7684\u969c\u788d\u3002\u89e3\u51b3\u65b9\u5f0f\u662f\u7f16\u8f91\u8005\u5728\u6587\u6863\u4e2d\u505a\u51fa\u8be6\u7ec6\u89e3\u91ca\u6216\u5728\u8d44\u6e90\u94fe\u63a5\u90e8\u5206\u7ed9\u51fa\u76f8\u5173\u8d44\u6599\u3002 \u540c\u65f6\uff0c\u4f5c\u4e3a\u8ba1\u7b97\u673a\u7cfb\u5b66\u751f\u79d1\u534f\u7684\u4e00\u4efd\u6280\u80fd\u5f15\u5bfc\u6587\u6863\uff0c\u6211\u4eec\u4e0e\u7f51\u7edc\u4e0a\u7684\u5404\u79cd\u6280\u80fd\u6559\u7a0b\u6700\u5927\u7684\u533a\u522b\u5728\u4e8e\uff0c\u6211\u4eec\u7684\u76ee\u6807\u8bfb\u8005\u662f\u8ba1\u7b97\u673a\u7c7b\u4e0e\u8ba1\u7b97\u673a\u7cfb\u7684\u540c\u5b66\u3002\u7f16\u8f91\u8005\u53ef\u4ee5\u5c1d\u8bd5\u4ece\u81ea\u8eab\u7684\u5b66\u4e60\u7ecf\u5386\u51fa\u53d1\uff0c\u7701\u7565\u90e8\u5206\u5728\u8bfe\u7a0b\u6559\u6388\u4e2d\u57fa\u7840\u800c\u4e0d\u5fc5\u8981\u7684\u4ecb\u7ecd\uff08\u4f7f\u7528\u76f8\u5173\u7f51\u7edc\u8d44\u6599\u94fe\u63a5\u66ff\u4ee3\uff09\uff0c\u5e76\u544a\u77e5\u8bfb\u8005\u5982\u4f55\u5728\u8bfe\u7a0b\u4e2d\uff0c\u5728\u79d1\u7814\u4e2d\uff0c\u5728\u5b9e\u4e60\u4e2d\u5c06\u5c55\u793a\u7684\u77e5\u8bc6\u5e94\u7528\u5230\u5b9e\u8df5\u5f53\u4e2d\u3002","title":"\u6587\u7ae0\u7acb\u573a"},{"location":"notes/editor/#_6","text":"\u4e00\u4efd\u5b8c\u6574\u7684\u6280\u80fd\u5f15\u5bfc\u6587\u6863\u81f3\u5c11\u5e94\u5f53\u5305\u542b\u4ee5\u4e0b\u90e8\u5206\uff1a \u524d\u7f6e\u77e5\u8bc6 \u90e8\u5206\u3002\u5728\u8fd9\u4e00\u90e8\u5206\uff0c\u7f16\u8f91\u8005\u9700\u8981\u6307\u660e\u9605\u8bfb\u8fd9\u4e00\u4efd\u6587\u6863\u6240\u9700\u8981\u7684\u6240\u6709\u524d\u7f6e\u77e5\u8bc6\u3002\u6240\u6709\u7684\u524d\u7f6e\u77e5\u8bc6\u4f7f\u7528\u65e0\u5e8f\u5217\u8868\u7ed9\u51fa\u3002 \u5b66\u4e60\u8def\u5f84 \u90e8\u5206\u3002\u8be5\u90e8\u5206\u53ef\u9009\uff0c\u63a8\u8350\u6d89\u53ca\u8f83\u5e7f\u77e5\u8bc6\u9762\u7684\u6587\u6863\u5305\u542b\u8fd9\u4e00\u90e8\u5206\u3002\u5728\u8fd9\u4e00\u90e8\u5206\uff0c\u7f16\u8f91\u8005\u9700\u8981\u8bf4\u660e\u6709\u4e0d\u540c\u77e5\u8bc6\u9700\u6c42\u7684\u8bfb\u8005\u672c\u6587\u6863\u5e94\u8be5\u6309\u7167\u4f55\u79cd\u987a\u5e8f\u9605\u8bfb\u3001\u5b66\u4e60\u3002 \u77e5\u8bc6\u8bb2\u89e3 \u90e8\u5206\u3002\u5728\u8fd9\u4e00\u90e8\u5206\uff0c\u7f16\u8f91\u8005\u9700\u8981\u5bf9\u77e5\u8bc6\u70b9\u6709\u6761\u7406\u5730\u8fdb\u884c\u8bb2\u89e3\uff0c\u5e76\u4e14\u9002\u5f53\u5730\u5f15\u7528\u5916\u90e8\u8d44\u6e90\u4f5c\u4e3a\u8f85\u52a9\u3002 \u540e\u7eed\u62d3\u5c55 \u90e8\u5206\u3002\u5728\u8fd9\u4e00\u90e8\u5206\uff0c\u7f16\u8f91\u8005\u53ef\u4ee5\u6307\u51fa\u5b66\u4e60\u5b8c\u8fd9\u4e00\u90e8\u5206\u77e5\u8bc6\u540e\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5b66\u4e60\u7684\u9886\u57df\uff0c\u6216\u8005\u53ef\u4ee5\u5e94\u7528\u8fd9\u4e9b\u77e5\u8bc6\u7684\u8bfe\u7a0b\u3002\u6240\u6709\u7684\u540e\u7eed\u62d3\u5c55\u5b66\u4e60\u5185\u5bb9\u4f7f\u7528\u65e0\u5e8f\u5217\u8868\u7ed9\u51fa\u3002 \u8d44\u6e90\u94fe\u63a5 \u90e8\u5206\u3002\u5728\u8fd9\u4e00\u90e8\u5206\uff0c\u7f16\u8f91\u8005\u9700\u8981\u5c06\u6587\u6863\u4e2d\u6240\u5f15\u7528\u7684\u8d44\u6e90\u5217\u51fa\uff0c\u7f16\u8f91\u8005\u6709\u8d23\u4efb\u4fdd\u8bc1\u8d44\u6e90\u6709\u6548\u3001\u53ef\u8bbf\u95ee\u3002\u90e8\u5206\u7528\u4e8e\u77e5\u8bc6\u62d3\u5c55\u7684\u8d44\u6e90\u4e5f\u53ef\u4ee5\u653e\u7f6e\u5728\u8fd9\u4e00\u90e8\u5206\u3002\u6b64\u90e8\u5206\u5728\u7f57\u5217\u94fe\u63a5\u4e4b\u5916\uff0c\u5e94\u5f53\u5177\u4f53\u8bf4\u660e\u6bcf\u4e2a\u94fe\u63a5\u4e2d\u5927\u81f4\u6709\u4ec0\u4e48\u5185\u5bb9\u3002","title":"\u6587\u7ae0\u67b6\u6784"},{"location":"notes/editor/#_7","text":"\u6587\u4ef6\u540d\u8bf7\u5168\u90e8\u4f7f\u7528\u5c0f\u5199\uff0c\u5206\u9694\u7b26\u8bf7\u4f7f\u7528 - \u3002 \u6587\u4ef6\u5e94\u89c6\u4e3b\u9898\uff0c\u653e\u4e8e\u5bf9\u5e94\u7684\u5206\u7c7b\u76ee\u5f55\u4e0b\u3002\u65b0\u5efa\u7684\u6587\u4ef6\u9700\u8981\u5728 mkdocs.yml \u4e2d\u58f0\u660e\uff0c\u4ee5\u8c03\u6574\u6587\u6863\u7684\u5c42\u7ea7\u7ed3\u6784\u3002 \u82e5\u591a\u4e2a\u6587\u6863\u540c\u65f6\u5f52\u5c5e\u67d0\u4e2a\u5927\u4e3b\u9898\uff0c\u5219\u53ef\u4e3a\u8be5\u5927\u4e3b\u9898\u65b0\u5efa\u6587\u4ef6\u5939\u5b58\u50a8\u3002 \u5173\u4e8e\u6587\u6863\u4e2d\u9700\u8981\u5c55\u793a\u7684\u56fe\u7247\uff0c\u8bf7\u5b58\u50a8\u5230 /static \u4e0b\u4e0e\u6587\u6863\u76f8\u5bf9 /docs \u76ee\u5f55\u540c\u540d\u7684\u6587\u4ef6\u5939\u4e2d\uff0c\u5e76\u547d\u540d\u4e3a \u5185\u5bb9\u6982\u8981.\u6587\u4ef6\u6269\u5c55\u540d \u3002\u5982 /docs/basic/git.md \u7684\u56fe\u7247\u6587\u4ef6\u8bf7\u5b58\u50a8\u4e3a /static/basic/git/logo.png \u3002","title":"\u6587\u6863\u5b58\u50a8"},{"location":"notes/editor/#_8","text":"\u6362\u884c\u7b26 \u6362\u884c\u7b26\u7684\u95ee\u9898\u5c24\u5176\u91cd\u8981\uff0c\u4ee5\u81f3\u4e8e\u9700\u8981\u5728\u6587\u7ae0\u683c\u5f0f\u90e8\u5206\u7684\u4e00\u5f00\u59cb\u5c31\u6307\u51fa\u8fd9\u4e2a\u95ee\u9898\u3002 \u672c\u6587\u6863\u7684\u81ea\u52a8\u5316\u8d21\u732e\u8ba1\u7b97\u63d2\u4ef6\u57fa\u4e8e Git \u7684 Commit \u884c\u6570\uff0c\u800c\u4fee\u6539\u6362\u884c\u7b26\u4e5f\u4f1a\u8ba1\u7b97\u5230 Commit \u4fee\u6539\u4e4b\u4e2d\uff0c\u6240\u4ee5\u6362\u884c\u7b26\u4f1a\u5f71\u54cd\u5230\u6587\u6863\u6700\u540e\u7684\u8d21\u732e\u5ea6 Credit\u3002 \u5bf9\u4e8e\u5df2\u5b58\u5728\u7684\u6587\u7ae0\uff0c\u4e0d\u80fd\u66f4\u6539\u5176\u672a\u4fee\u6539\u7684\u884c\u7684\u6362\u884c\u7b26\uff0c\u5426\u5219 Pull Request \u5c06\u4f1a\u88ab\u76f4\u63a5\u5173\u95ed\uff1b \u5bf9\u4e8e\u65b0\u5efa\u7acb\u7684\u6587\u6863\uff0c\u53ef\u4ee5\u4f7f\u7528\u9ed8\u8ba4\u6362\u884c\u7b26\u3002","title":"\u6587\u7ae0\u683c\u5f0f"},{"location":"notes/editor/#_9","text":"\u6587\u7ae0\u4e2d\u5e94\u4ec5\u5b58\u5728\u4e00\u4e2a \u4e00\u7ea7\u6807\u9898 \uff0c\u4ee5\u6982\u62ec\u6587\u7ae0\u7684\u4e3b\u9898\u3002 \u6587\u7ae0\u91c7\u7528 \u4e8c\u7ea7\u6807\u9898 \u4f5c\u4e3a\u5206\u8282\u7b26\uff0c\u5982\u3010\u524d\u7f6e\u77e5\u8bc6\u3011\u3010\u540e\u7eed\u62d3\u5c55\u3011\u3010\u8d44\u6e90\u94fe\u63a5\u3011\u5747\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u5c0f\u8282\u3002\u6587\u7ae0\u7684\u4e3b\u9898\u5185\u5bb9\u5e94\u5206\u4e3a\u591a\u4e2a\u5c0f\u8282\u3002 \u4e09\u7ea7\u6807\u9898 \u5e94\u8d77\u5230\u5728\u4e00\u4e2a\u5c0f\u8282\u4e2d\u5206\u9694\u4e0d\u540c\u8ba8\u8bba\u5185\u5bb9\u7684\u4f5c\u7528\u3002\u5982\u4e8c\u7ea7\u6807\u9898 JavaScript \u7684\u51fd\u6570 \u4e0b\uff0c\u4e09\u7ea7\u6807\u9898\u53ef\u4ee5\u5305\u542b \u51fd\u6570\u58f0\u660e\u4e0e\u8c03\u7528 \u3001 \u56de\u8c03\u6a21\u5f0f \u3001 \u95ed\u5305 \u7b49\u7b49\u6574\u4f53\u4e0a\u4e0d\u76f8\u4ea4\u7684\u5185\u5bb9\u3002 \u4e0d\u8981\u6ee5\u7528\u6807\u9898\uff0c\u6211\u4eec\u63a8\u8350\u81f3\u591a\u4f7f\u7528\u81f3\u4e09\u7ea7\u6807\u9898\uff0c\u56db\u7ea7\u53ca\u4ee5\u4e0a\u6807\u9898\u53ef\u4ee5\u4f7f\u7528\u52a0\u7c97\u3001\u65e0\u5e8f\u5217\u8868\u4ee3\u66ff\u3002\u6ee5\u7528\u6807\u9898\u4f1a\u4f7f\u5f97\u6587\u7ae0\u7684\u76ee\u5f55\u7ed3\u6784\u53d8\u590d\u6742\uff0c\u4e5f\u4f1a\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u5f71\u54cd\u8bfb\u8005\u5bf9\u6240\u5b66\u4e60\u77e5\u8bc6\u7684\u7ed3\u6784\u7684\u6574\u4f53\u6027\u628a\u63e1\u3002\u5982\u679c\u60f3\u5f3a\u8c03\u5185\u5bb9\uff0c\u4f7f\u7528 **\u5f3a\u8c03\u5185\u5bb9** \u3002 \u6807\u9898\u4e2d\u5e94\u5f53\u5c3d\u91cf\u4e0d\u51fa\u73b0\u4ee3\u7801\u5757\u3002","title":"\u6807\u9898\u4e0e\u5c0f\u6807\u9898"},{"location":"notes/editor/#_10","text":"\u6211\u4eec\u5e76\u4e0d\u4e25\u683c\u8981\u6c42\u6587\u6863\u7684\u6392\u7248\u98ce\u683c\uff0c\u4f46\u7f16\u8f91\u8005\u5e94\u5f53\u5c3d\u53ef\u80fd\u9075\u5b88\u4ee5\u4e0b\u57fa\u672c\u7684\u6587\u6863\u884c\u6587\u8981\u6c42\u3002 \u6b63\u786e\u4f7f\u7528\u6807\u70b9\u7b26\u53f7 \u6b63\u786e\u4f7f\u7528 \u5168\u89d2 \u6807\u70b9\u7b26\u53f7\u4e0e \u534a\u89d2 \u6807\u70b9\u7b26\u53f7\u3002\u6c49\u8bed\u8bf7\u4f7f\u7528\u5168\u89d2\u7b26\u53f7\uff0c\u82f1\u8bed\u8bf7\u4f7f\u7528\u534a\u89d2\u7b26\u53f7\u3002 \u8bf7\u5728\u6bcf\u53e5\u8bdd\u7684\u672b\u5c3e\u6dfb\u52a0 \u53e5\u53f7 \u3002 \u6b63\u786e\u4f7f\u7528 \u62ec\u53f7 \u3002\u62ec\u53f7\u5728\u53e5\u4e2d\u8868\u793a\u5bf9\u53e5\u4e2d\u524d\u4e00\u4e2a\u5143\u7d20\u7684\u89e3\u91ca\u8bf4\u660e\uff0c\u5982 \u8bed\u6cd5\u7cd6\uff08\u82f1\u8bed\uff1aSyntactic sugar\uff09 \u3002\u62ec\u53f7\u5728\u53e5\u5916\u8868\u793a\u5bf9\u524d\u9762\u6574\u4e2a\u53e5\u5b50\u7684\u89e3\u91ca\u8bf4\u660e\u3002 \u6b63\u786e\u4f7f\u7528 \u5206\u53f7 \uff0c\u53ef\u4ee5\u4f7f\u5f97\u884c\u6587\u7ed3\u6784\u66f4\u52a0\u6e05\u6670\u3002 \u6b63\u786e\u8fdb\u884c\u4e2d\u6587\u6392\u7248 \u4e2d\u82f1\u6587\u4e4b\u95f4\u3001\u4e2d\u6587\u548c\u6570\u5b57\u4e4b\u95f4\u9700\u8981\u589e\u52a0\u7a7a\u683c\uff0c\u6570\u5b57\u548c\u5355\u4f4d\u4e4b\u95f4\u4e0d\u9700\u8981\u589e\u52a0\u7a7a\u683c\u3002 \u884c\u6587\u4e2d\u6b63\u6587\u4e0e\u8d85\u94fe\u63a5\u4e4b\u95f4\u9700\u8981\u589e\u52a0\u7a7a\u683c\u3002 \u5168\u89d2\u5b57\u7b26\u548c\u5176\u4ed6\u5b57\u7b26\u4e4b\u95f4\u4e0d\u52a0\u7a7a\u683c\u3002 \u4e13\u6709\u540d\u8bcd\u4f7f\u7528\u6b63\u786e\u7684\u5927\u5c0f\u5199\u3002\u5982\u4f7f\u7528\u7f29\u5199\uff0c\u5219\u8be5\u7f29\u5199\u5e94\u5df2\u6210\u4e3a\u4e1a\u754c\u6807\u51c6\u3002","title":"\u6392\u7248\u8981\u6c42"},{"location":"notes/editor/#_11","text":"\u56fe\u7247\u662f\u91cd\u8981\u7684\u8f85\u52a9\u8bf4\u660e\u7684\u5de5\u5177\uff0c\u4f46\u662f\u7531\u4e8e Markdown \u7684\u56fe\u7247\u5de5\u5177\u5e76\u4e0d\u5b8c\u5584\uff0c\u6240\u4ee5\u8bf7\u6ce8\u610f\u4ee5\u4e0b\u8981\u6c42\u3002 Markdown \u7684\u56fe\u7247\u5c3a\u5bf8\u95ee\u9898 Markdown \u6ca1\u6709\u63a7\u5236\u56fe\u7247\u5c3a\u5bf8\u7684\u547d\u4ee4\uff0c\u5176\u9ed8\u8ba4\u7f29\u653e\u56fe\u7247\u4ee5\u586b\u6ee1\u5bbd\u5ea6\u3002\u4e3a\u4e86\u4fdd\u8bc1\u7f8e\u89c2\u6027\u548c\u9605\u8bfb\u4f53\u9a8c\uff0c\u7c7b\u4f3c Logo \u7b49\u5e76\u4e0d\u9700\u8981\u5360\u6ee1\u5bbd\u5ea6\u7684\u56fe\u7247\uff0c\u8bf7\u4f7f\u7528 HTML \u6807\u7b7e\u63a7\u5236\u5176\u5c3a\u5bf8\u3002\u4f8b\u5982\uff1a 1 2 3 < center > < img src = \"https://i.loli.net/2021/10/10/NHZOsPCBmazyWjh.png\" height = \"20%\" width = \"20%\" > </ center > \u5e26\u4e0b\u6807\u7684\u56fe\u7247 Markdown \u5e76\u4e0d\u652f\u6301\u5e26\u4e0b\u6807\u7684\u56fe\u7247\uff0c\u6240\u4ee5\u8bf7\u4f7f\u7528 HTML \u6807\u7b7e\u3002\u63a8\u8350\u4f7f\u7528\uff1a 1 2 3 4 5 < center > < img src = \"https://i.loli.net/2021/09/28/Ti2VR4DtbgcdlkM.png\" /> < img src = \"https://i.loli.net/2021/09/28/Dvpkbd7KjLTH2yl.png\" /> < p style = \"text-align: center; margin-top: 0px; color: gray; padding: 0px\" > \u811a\u672c\u6587\u4ef6\u7684\u4f8b\u5b50 </ p > </ center >","title":"\u4f7f\u7528\u56fe\u7247"},{"location":"notes/editor/#_12","text":"\u6b63\u6587\u7684\u8bed\u8a00\u98ce\u683c\u5c3d\u91cf\u6b63\u5f0f\uff0c\u611f\u609f\u3001\u601d\u8003\u3001\u542f\u53d1\u3001\u524d\u8a00\u3001\u8865\u5145\u6027\u5185\u5bb9\u3001Checkpoint \u7b49\u975e\u6b63\u6587\u5185\u5bb9\u5c3d\u91cf\u7eb3\u5165\u6298\u53e0\u6846\u4e4b\u4e2d\u3002 \u9644\uff1a \u6298\u53e0\u6846\u4f7f\u7528\u6559\u7a0b","title":"\u4f7f\u7528\u6298\u53e0\u6846"},{"location":"notes/editor/#_13","text":"\u5f53\u884c\u6587\u9047\u5230\u6570\u5b66\u516c\u5f0f\u65f6\uff0c\u4f7f\u7528\u884c\u5185\u516c\u5f0f $a \\times b$ \u548c\u884c\u95f4\u516c\u5f0f $$ ... $$ \u6765\u8fdb\u884c\u6570\u5b66\u5f62\u5f0f\u7684\u8bb2\u89e3\uff0c\u800c\u4e0d\u8981\u4f7f\u7528 x^2 \u8fd9\u79cd\u5f71\u54cd\u9605\u8bfb\u7f8e\u89c2\u7a0b\u5ea6\u7684\u5199\u6cd5\u3002\u6b63\u786e\u793a\u4f8b\uff1a x^2 x^2 \u3002 \u9644\uff1a Mathjax \u4ee3\u7801\u6559\u7a0b \u4f7f\u7528\u6570\u5b66\u516c\u5f0f\u7684\u6ce8\u610f\u4e8b\u9879 \u90e8\u5206\u5e38\u7528\u51fd\u6570\uff0c\u5982\u4e09\u89d2\u51fd\u6570\u3001\u5bf9\u6570\u51fd\u6570\u7b49\u7684 Roman \u4f53\u7b26\u53f7\u5df2\u7ecf\u5185\u7f6e\u4e8e LaTeX \u4e2d\u3002\u5982\u4f59\u5f26\u51fd\u6570\u5e94\u5f53\u4f7f\u7528 $\\cos$ \u8868\u793a\uff0c\u6e32\u67d3\u4e3a \\cos \\cos \u3002\u800c\u4e0d\u5e94\u5f53\u4f7f\u7528 $cos$ \u8868\u793a\uff0c\u6e32\u67d3\u4e3a cos cos \u3002 \u6e32\u67d3 Roman \u4f53\uff08\u6b63\u4f53\uff09\u7c97\u4f53\u8bf7\u4f7f\u7528 $\\mathbf{}$ \uff0c\u5982 \\mathbf{a} \\mathbf{a} \u3002\u6e32\u67d3 Italic \u4f53\uff08\u659c\u4f53\uff09\u7c97\u4f53\u8bf7\u4f7f\u7528 $\\boldsymbol{a}$ \uff0c\u5982 \\boldsymbol{a} \\boldsymbol{a} \u3002\u8bf7\u4e0d\u8981\u6df7\u6dc6\u4e24\u8005\u3002 \u884c\u5185\u516c\u5f0f\u6e32\u67d3\u5206\u6570\u65f6\uff0c\u8bf7\u4f7f\u7528 $\\dfrac{}{}$ \uff0c\u5982 \\dfrac{1}{2} \\dfrac{1}{2} \u3002\u800c\u4e0d\u5e94\u4f7f\u7528 $\\frac{}{}$ \uff0c\u5982 \\frac{1}{2} \\frac{1}{2} \u3002 \u884c\u5185\u516c\u5f0f\u5e94\u5c3d\u529b\u907f\u514d\u6c42\u548c\u3001\u6c42\u79ef\u3001\u79ef\u5206\u7b49\u5de8\u8fd0\u7b97\u7b26\uff0c\u5373 \\sum \\sum \u3001 \\int \\int \u7b49\u8fd0\u7b97\u7b26\u3002 \u7701\u7565\u53f7\u8bf7\u4f7f\u7528 $\\cdots$ \uff0c\u5982 a_1, a_2, \\cdots, a_n a_1, a_2, \\cdots, a_n \u3002\u800c\u4e0d\u5e94\u4f7f\u7528 $...$ \uff0c\u5982 a_1, a_2, ..., a_n a_1, a_2, ..., a_n \u3002 \u6ce8\u610f\u533a\u5206\u6570\u5b66\u8bed\u8a00\u4e0e\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u3002\u8bf7\u4e0d\u8981\u5728\u516c\u5f0f\u5757\u5185\u4f7f\u7528\u53cc\u7b49\u53f7 == == \u4e43\u81f3\u4e09\u7b49\u53f7 === === \u8868\u793a\u4e24\u4e2a\u91cf\u76f8\u7b49\uff0c\u8bf7\u4f7f\u7528\u6570\u5b66\u8bed\u8a00\u4e2d\u7684\u5355\u7b49\u53f7 = = \uff0c\u5982 a = b a = b \u3002\u6b64\u5916\uff0c\u8bf7\u4e0d\u8981\u4f7f\u7528\u4e2d\u62ec\u53f7\u8fde\u7f00\u8868\u8fbe\u9ad8\u7ef4\u6570\u7ec4\uff0c\u5982 a[i][j][k] a[i][j][k] \uff0c\u8bf7\u4f7f\u7528\u51fd\u6570\u8868\u793a\uff0c\u5982 f(i, j, k) f(i, j, k) \u3002 \u7279\u6b8a\u96c6\u5408\uff08\u5982\u81ea\u7136\u6570\u96c6\u3001\u5b9e\u6570\u96c6\uff09\u7684\u5b57\u4f53\u8bf7\u4f7f\u7528 $\\mathbb{}$ \uff0c\u5982 \\mathbb{R} \\mathbb{R} \u3001 \\mathbb{N} \\mathbb{N} \u3002 \u62ec\u53f7\u5185\u4e3a\u5206\u5f0f\u7b49\u5185\u5bb9\u65f6\uff0c\u8bf7\u4f7f\u7528\u81ea\u9002\u5e94\u9ad8\u5ea6\u62ec\u53f7 $\\left(\\right)$ \uff0c\u5982 \\left(\\dfrac{1}{2}\\right)^n \\left(\\dfrac{1}{2}\\right)^n \u3002\u8bf7\u4e0d\u8981\u76f4\u63a5\u4f7f\u7528 $()$ \uff0c\u5982 (\\dfrac{1}{2})^n (\\dfrac{1}{2})^n \u3002 \u516c\u5f0f\u5185\u8bf7\u4e0d\u8981\u51fa\u73b0\u6c49\u5b57\uff0c\u51fa\u73b0\u82f1\u6587\u5355\u8bcd\u65f6\u8bf7\u4f7f\u7528\u6b63\u4f53\u3002","title":"\u4f7f\u7528\u516c\u5f0f"},{"location":"notes/editor/#_14","text":"\u4ee3\u7801\u5757\u5728\u672c\u6280\u80fd\u5f15\u5bfc\u6587\u6863\u4e2d\u8d77\u5230\u4e86\u4e3e\u8db3\u8f7b\u91cd\u7684\u5730\u4f4d\u3002 \u6211\u4eec\u7edf\u4e00\u89c4\u5b9a\uff0c\u884c\u95f4\u4ee3\u7801\u4f7f\u7528 ` \u5305\u88f9\u3002\u884c\u95f4\u4ee3\u7801\u4f7f\u7528 ``` \u5305\u88f9\u5e76\u5728\u8d77\u59cb\u7684\u4e09\u4e2a\u53cd\u5f15\u53f7\u540e\u6807\u8bb0\u4ee3\u7801\u7684\u8bed\u8a00\uff0c\u4f8b\u5982\uff1a 1 2 3 4 5 6 7 8 ```cpp #include <iostream> using namespace std ; int main () { cout << \"Hello World\" ; return 0 ; } ``` \u884c\u5185\u4ee3\u7801\u548c\u6b63\u6587\u7684\u533a\u5206 \u63a8\u8350\u5c06\u6587\u4ef6\u540d\u3001\u6587\u4ef6\u8def\u5f84\u7b49\u4f7f\u7528\u884c\u5185\u4ee3\u7801\u8868\u793a\u3002 \u63a8\u8350\u7684\u4ee3\u7801\u98ce\u683c \u53d8\u91cf\u4f7f\u7528\u9a7c\u5cf0\u547d\u540d\u6cd5\u3001\u4e0b\u5212\u7ebf\u547d\u540d\u6cd5\u7b49\u5747\u53ef\uff0c\u4f46\u9700\u8981\u5c3d\u91cf\u4fdd\u8bc1\u540c\u4e00\u7bc7\u6587\u6863\u5185\u547d\u540d\u98ce\u683c\u7edf\u4e00\u3002 \u4e0b\u5217\u4ee3\u7801\u98ce\u683c\u60ef\u4f8b\u4ee5 C++ \u8bed\u8a00\u4e3a\u4f8b\uff1a \u5927\u62ec\u53f7\u6362\u884c\u4e0e\u4e0d\u6362\u884c\u5747\u53ef\uff0c\u4f46\u9700\u8981\u4fdd\u8bc1\u540c\u4e00\u7bc7\u6587\u6863\u5185\u683c\u5f0f\u7edf\u4e00\u3002\u4e0d\u6362\u884c\u65f6\uff0c\u5176\u4e0e\u5de6\u4fa7\u7684\u53f3\u62ec\u53f7\u4e4b\u95f4\u5e94\u5f53\u6709\u4e00\u4e2a\u7a7a\u683c\u3002 \u5173\u952e\u5b57 if \u3001 for \u7b49\u4e0e\u540e\u7eed\u5de6\u62ec\u53f7\u4e4b\u95f4\u5e94\u5f53\u6709\u4e00\u4e2a\u7a7a\u683c\u3002 \u8fd0\u7b97\u7b26 + \u3001 - \u7b49\u4e0e\u5de6\u53f3\u64cd\u4f5c\u6570\u4e4b\u95f4\u5e94\u5f53\u5404\u6709\u4e00\u4e2a\u7a7a\u683c\uff0c\u8fd0\u7b97\u7b26 . \u3001 -> \u4e24\u4fa7\u5747\u4e0d\u5e94\u5f53\u6709\u7a7a\u683c\uff0c\u9017\u53f7 , \u5de6\u4fa7\u4e0d\u5e94\u5f53\u6709\u7a7a\u683c\u800c\u53f3\u4fa7\u5e94\u5f53\u6709\u7a7a\u683c\u3002 \u884c\u5185\u6ce8\u91ca\u8d77\u59cb\u6807\u8bb0 // \u4e0e\u6ce8\u91ca\u6587\u5b57\u95f4\u5e94\u5f53\u6709\u4e00\u4e2a\u7a7a\u683c\u3002 \u4f7f\u7528 2 \u4e2a\u7a7a\u683c\u6216\u8005 4 \u4e2a\u7a7a\u683c\u8fdb\u884c\u7f29\u8fdb\u5747\u53ef\uff0c\u4f46\u9700\u8981\u4fdd\u8bc1\u540c\u4e00\u7bc7\u6587\u6863\u5185\u7edf\u4e00\u3002","title":"\u4f7f\u7528\u4ee3\u7801\u5757"},{"location":"notes/reader/","text":"\u8bfb\u8005\u987b\u77e5 \u00b6 \u4f7f\u7528\u8bf4\u660e \u00b6 \u6587\u6863\u5c31\u662f\u6587\u6863 \u5982\u4f55\u4f7f\u7528\u8fd9\u4e00\u4efd\u6587\u6863\uff0c\u5176\u5b9e\u6ca1\u6709\u90a3\u4e48\u591a\u6761\u6761\u6846\u6846\u3002 \u6587\u6863\u7ef4\u62a4\u8005\u3001\u7f16\u5199\u8005\u4f1a\u5c3d\u529b\u4fdd\u8bc1\u6bcf\u4e00\u7bc7\u6587\u6863\u5177\u6709\u5b8c\u6574\u7684\u903b\u8f91\u94fe\u6761\uff0c\u5c3d\u529b\u4fdd\u8bc1\u8bfb\u8005\u53ef\u4ee5\u505a\u5230\u4ece\u5934\u5230\u5c3e\u901a\u8bfb\u3002\u6240\u4ee5\u5982\u679c\u60a8\u662f\u67d0\u4e2a\u9886\u57df\u3001\u6846\u67b6\u3001\u8bed\u8a00\u7684\u521d\u5b66\u8005\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u7740\u4ece\u6587\u6863\u7684\u6700\u5f00\u5934\u5f00\u59cb\uff0c\u8ddf\u968f\u7740\u6587\u6863\u7684\u903b\u8f91\u5b66\u4e60\u3002 \u6bcf\u7bc7\u6587\u6863\u90fd\u4f1a\u6709 \u524d\u7f6e\u77e5\u8bc6 \u90e8\u5206\uff08\u4f4d\u4e8e\u4f53\u91cf\u8f83\u5c0f\u7684\u6587\u6863\u7684\u5f00\u5934\u6216\u8005\u4f53\u91cf\u8f83\u5927\u7684\u6587\u6863\u7684 Index \u9875\u9762\uff09\uff0c\u6211\u4eec\u5e0c\u671b\u60a8\u5728\u901a\u8bfb\u6587\u6863\u4e4b\u524d\uff0c\u5148\u786e\u8ba4\u81ea\u5df1\u5df2\u7ecf\u638c\u63e1\u4e86\u8fd9\u4e00\u90e8\u5206\u8981\u6c42\u7684\u524d\u7f6e\u77e5\u8bc6\u3002 \u6bcf\u7bc7\u6587\u6863\u8fd8\u4f1a\u6709 \u540e\u7eed\u62d3\u5c55 \u6216\u8005 \u8d44\u6e90\u94fe\u63a5 \u90e8\u5206\uff08\u4f4d\u4e8e\u4f53\u91cf\u8f83\u5c0f\u7684\u6587\u6863\u7684\u672b\u5c3e\u6216\u8005\u4f53\u91cf\u8f83\u5927\u7684\u6587\u6863\u7684 Index \u9875\u9762\uff09\uff0c\u6211\u4eec\u5e0c\u671b\u60a8\u5728\u901a\u8bfb\u6587\u6863\u4e4b\u540e\uff0c\u6839\u636e\u81ea\u5df1\u7684\u77e5\u8bc6\u9700\u6c42\u7ee7\u7eed\u5b66\u4e60\u8fd9\u4e9b\u90e8\u5206\u7ed9\u51fa\u6765\u7684\u8d44\u6599\u3002 \u60a8\u4e5f\u53ef\u4ee5\u5c06\u8be5\u6587\u6863\u4f5c\u4e3a\u5de5\u5177\u4e66\uff0c\u5728\u9700\u8981\u7684\u65f6\u5019\u6839\u636e\u76ee\u5f55\u67e5\u8be2\u60f3\u8981\u4e86\u89e3\u7684\u77e5\u8bc6\u3002 \u8bfe\u7a0b\u6307\u5f15\u4e0e\u8d44\u6e90\u94fe\u63a5 \u00b6 \u5982\u679c\u60a8\u662f\u7531\u4e8e\u8bfe\u7a0b\u8981\u6c42\u9700\u8981\u5b66\u4e60\u65b0\u7684\u8bed\u8a00\u3001\u6846\u67b6\u7b49\u7b49\uff0c\u53ef\u4ee5\u5148\u8fdb\u5165\u8bfe\u7a0b\u6307\u5f15\u90e8\u5206\uff0c\u6839\u636e\u8bfe\u7a0b\u540d\u67e5\u627e\u53ef\u4ee5\u53c2\u8003\u7684\u6587\u6863\u5217\u8868\u3002 \u8d44\u6e90\u94fe\u63a5\u90e8\u5206\u5219\u5217\u4e3e\u51fa\u4e86\u53ef\u4f9b\u5927\u5bb6\u8bfe\u5916\u5b66\u4e60\u7684\u4e00\u4e9b\u7f51\u7ad9\u548c\u4e66\u76ee\u3002 \u5982\u4f55\u5411\u6211\u4eec\u53cd\u9988 \u00b6 \u672c\u6587\u6863\u4f9d\u7136\u662f\u4e00\u4efd\u8fd8\u4e0d\u6210\u719f\u7684\u6587\u6863\uff0c\u5185\u5bb9\u53ef\u80fd\u8fd8\u4e0d\u5b8c\u5907\uff0c\u4e00\u4e9b\u529f\u80fd\u53ef\u80fd\u4e5f\u5e76\u6ca1\u6709\u90a3\u4e48\u7a33\u5b9a\u3002\u6240\u4ee5\uff0c\u5982\u679c\u60a8\u5728\u9605\u8bfb\u4e2d\u9047\u5230\u4e86\u95ee\u9898\uff0c\u65e0\u8bba\u662f\u94fe\u63a5\u5931\u6548\u3001\u9875\u9762\u7f3a\u5931\u8fd9\u4e9b\u529f\u80fd\u95ee\u9898\uff0c\u8fd8\u662f\u6587\u4e0d\u5bf9\u9898\u3001\u8bb2\u89e3\u6a21\u7cca\u3001\u5185\u5bb9\u77db\u76fe\u8fd9\u4e9b\u5185\u5bb9\u95ee\u9898\uff0c\u90fd\u53ef\u4ee5\u5411\u6211\u4eec\u63d0\u51fa\uff0c\u6211\u4eec\u4f1a\u5c3d\u5feb\u7b54\u590d\u3002\u53e6\u5916\uff0c\u6240\u6709\u7684\u6539\u8fdb\u610f\u89c1\u3001\u4fee\u6539\u5efa\u8bae\u4e5f\u90fd\u53ef\u4ee5\u5411\u6211\u4eec\u63d0\u51fa\u3002 \u76ee\u524d\u6211\u4eec\u63a5\u53d7\u53cd\u9988\u7684\u65b9\u5f0f\u4e3a GitHub Issue\uff0c\u4e3a\u6b64\uff0c\u60a8\u9700\u8981\u6ce8\u518c\u4e00\u4e2a GitHub \u8d26\u53f7\u3002 \u9700\u8981\u53cd\u9988\u65f6\uff0c\u70b9\u51fb\u9875\u9762\u53f3\u4e0a\u65b9\u7684\u201cSAST skill docs\u201d\u8fdb\u5165\u6211\u4eec\u7684 GitHub Repo\uff0c\u70b9\u51fb Issue \u680f\u76ee\u540e\u70b9\u51fb\u53f3\u4fa7\u7684 New issue \u6309\u94ae\uff0c\u5728\u8f93\u5165\u6846\u5185\u8f93\u5165\u60a8\u60f3\u8981\u53cd\u9988\u7684\u95ee\u9898\u6216\u8005\u610f\u89c1\u5efa\u8bae\u540e\uff0c\u70b9\u51fb Submit new issue \u5373\u53ef\u3002 \u5982\u679c\u60a8\u60f3\u8981\u53cd\u9988\u529f\u80fd\u95ee\u9898\uff0c\u6211\u4eec\u5e0c\u671b\u60a8\u80fd\u591f\u5728 Issue \u4e2d\u8bf4\u660e\u8be5\u95ee\u9898\u7684\u5177\u4f53\u8868\u73b0\u3001\u5982\u4f55\u590d\u73b0\u8fd9\u4e00\u529f\u80fd\u95ee\u9898\u4ee5\u53ca\u8be5\u95ee\u9898\u662f\u5426\u53ef\u4ee5\u7a33\u5b9a\u51fa\u73b0\u3002 \u5982\u679c\u60a8\u60f3\u8981\u53cd\u9988\u5185\u5bb9\u95ee\u9898\uff0c\u6211\u4eec\u5e0c\u671b\u60a8\u80fd\u591f\u8bf4\u660e\u662f\u54ea\u4e00\u7bc7\u6587\u6863\u7684\u54ea\u4e00\u6bb5\u843d\u7684\u5185\u5bb9\u4e0d\u9002\u5f53\uff0c\u5982\u679c\u80fd\u591f\u63d0\u51fa\u4fee\u6539\u610f\u89c1\u5219\u66f4\u597d\u3002\u6211\u4eec\u4f1a\u5c3d\u5feb\u548c\u8fd9\u7bc7\u6587\u6863\u7684\u4e3b\u7f16\u5199\u8005\u8ba8\u8bba\u4fee\u6539\u3002 \u5982\u679c\u60a8\u60f3\u8981\u53cd\u9988\u6539\u8fdb\u610f\u89c1\uff0c\u6211\u4eec\u5e0c\u671b\u60a8\u80fd\u591f\u8bf4\u660e\u5982\u4f55\u6539\u8fdb\u4ee5\u53ca\u8fd9\u6837\u6539\u8fdb\u80fd\u5e26\u6765\u7684\u597d\u5904\u3002 \u5982\u679c\u4e0a\u8ff0\u53cd\u9988\u7c7b\u578b\u5747\u4e0d\u7b26\u5408\uff0c\u53ea\u9700\u8981\u5c06\u60a8\u60f3\u8981\u53cd\u9988\u7684\u5185\u5bb9\u5199\u660e\u767d\u5373\u53ef\u3002 \u6211\u4eec\u5e0c\u671b\u901a\u8fc7\u7f16\u5199\u8005\u3001\u8bfb\u8005\u3001\u7ef4\u62a4\u8005\u7684\u5171\u540c\u52aa\u529b\uff0c\u6253\u9020\u597d\u8fd9\u4e00\u4efd\u6280\u80fd\u5f15\u5bfc\u6587\u6863\uff0c\u5c06\u5927\u5bb6\u7684\u7ecf\u9a8c\u548c\u77e5\u8bc6\u4f20\u9012\u4e0b\u53bb\uff0c\u4e3a\u6253\u9020 user-friendly \u7684\u8ba1\u7b97\u673a\u7cfb\u800c\u52aa\u529b\u3002","title":"\u8bfb\u8005\u987b\u77e5"},{"location":"notes/reader/#_1","text":"","title":"\u8bfb\u8005\u987b\u77e5"},{"location":"notes/reader/#_2","text":"\u6587\u6863\u5c31\u662f\u6587\u6863 \u5982\u4f55\u4f7f\u7528\u8fd9\u4e00\u4efd\u6587\u6863\uff0c\u5176\u5b9e\u6ca1\u6709\u90a3\u4e48\u591a\u6761\u6761\u6846\u6846\u3002 \u6587\u6863\u7ef4\u62a4\u8005\u3001\u7f16\u5199\u8005\u4f1a\u5c3d\u529b\u4fdd\u8bc1\u6bcf\u4e00\u7bc7\u6587\u6863\u5177\u6709\u5b8c\u6574\u7684\u903b\u8f91\u94fe\u6761\uff0c\u5c3d\u529b\u4fdd\u8bc1\u8bfb\u8005\u53ef\u4ee5\u505a\u5230\u4ece\u5934\u5230\u5c3e\u901a\u8bfb\u3002\u6240\u4ee5\u5982\u679c\u60a8\u662f\u67d0\u4e2a\u9886\u57df\u3001\u6846\u67b6\u3001\u8bed\u8a00\u7684\u521d\u5b66\u8005\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u7740\u4ece\u6587\u6863\u7684\u6700\u5f00\u5934\u5f00\u59cb\uff0c\u8ddf\u968f\u7740\u6587\u6863\u7684\u903b\u8f91\u5b66\u4e60\u3002 \u6bcf\u7bc7\u6587\u6863\u90fd\u4f1a\u6709 \u524d\u7f6e\u77e5\u8bc6 \u90e8\u5206\uff08\u4f4d\u4e8e\u4f53\u91cf\u8f83\u5c0f\u7684\u6587\u6863\u7684\u5f00\u5934\u6216\u8005\u4f53\u91cf\u8f83\u5927\u7684\u6587\u6863\u7684 Index \u9875\u9762\uff09\uff0c\u6211\u4eec\u5e0c\u671b\u60a8\u5728\u901a\u8bfb\u6587\u6863\u4e4b\u524d\uff0c\u5148\u786e\u8ba4\u81ea\u5df1\u5df2\u7ecf\u638c\u63e1\u4e86\u8fd9\u4e00\u90e8\u5206\u8981\u6c42\u7684\u524d\u7f6e\u77e5\u8bc6\u3002 \u6bcf\u7bc7\u6587\u6863\u8fd8\u4f1a\u6709 \u540e\u7eed\u62d3\u5c55 \u6216\u8005 \u8d44\u6e90\u94fe\u63a5 \u90e8\u5206\uff08\u4f4d\u4e8e\u4f53\u91cf\u8f83\u5c0f\u7684\u6587\u6863\u7684\u672b\u5c3e\u6216\u8005\u4f53\u91cf\u8f83\u5927\u7684\u6587\u6863\u7684 Index \u9875\u9762\uff09\uff0c\u6211\u4eec\u5e0c\u671b\u60a8\u5728\u901a\u8bfb\u6587\u6863\u4e4b\u540e\uff0c\u6839\u636e\u81ea\u5df1\u7684\u77e5\u8bc6\u9700\u6c42\u7ee7\u7eed\u5b66\u4e60\u8fd9\u4e9b\u90e8\u5206\u7ed9\u51fa\u6765\u7684\u8d44\u6599\u3002 \u60a8\u4e5f\u53ef\u4ee5\u5c06\u8be5\u6587\u6863\u4f5c\u4e3a\u5de5\u5177\u4e66\uff0c\u5728\u9700\u8981\u7684\u65f6\u5019\u6839\u636e\u76ee\u5f55\u67e5\u8be2\u60f3\u8981\u4e86\u89e3\u7684\u77e5\u8bc6\u3002","title":"\u4f7f\u7528\u8bf4\u660e"},{"location":"notes/reader/#_3","text":"\u5982\u679c\u60a8\u662f\u7531\u4e8e\u8bfe\u7a0b\u8981\u6c42\u9700\u8981\u5b66\u4e60\u65b0\u7684\u8bed\u8a00\u3001\u6846\u67b6\u7b49\u7b49\uff0c\u53ef\u4ee5\u5148\u8fdb\u5165\u8bfe\u7a0b\u6307\u5f15\u90e8\u5206\uff0c\u6839\u636e\u8bfe\u7a0b\u540d\u67e5\u627e\u53ef\u4ee5\u53c2\u8003\u7684\u6587\u6863\u5217\u8868\u3002 \u8d44\u6e90\u94fe\u63a5\u90e8\u5206\u5219\u5217\u4e3e\u51fa\u4e86\u53ef\u4f9b\u5927\u5bb6\u8bfe\u5916\u5b66\u4e60\u7684\u4e00\u4e9b\u7f51\u7ad9\u548c\u4e66\u76ee\u3002","title":"\u8bfe\u7a0b\u6307\u5f15\u4e0e\u8d44\u6e90\u94fe\u63a5"},{"location":"notes/reader/#_4","text":"\u672c\u6587\u6863\u4f9d\u7136\u662f\u4e00\u4efd\u8fd8\u4e0d\u6210\u719f\u7684\u6587\u6863\uff0c\u5185\u5bb9\u53ef\u80fd\u8fd8\u4e0d\u5b8c\u5907\uff0c\u4e00\u4e9b\u529f\u80fd\u53ef\u80fd\u4e5f\u5e76\u6ca1\u6709\u90a3\u4e48\u7a33\u5b9a\u3002\u6240\u4ee5\uff0c\u5982\u679c\u60a8\u5728\u9605\u8bfb\u4e2d\u9047\u5230\u4e86\u95ee\u9898\uff0c\u65e0\u8bba\u662f\u94fe\u63a5\u5931\u6548\u3001\u9875\u9762\u7f3a\u5931\u8fd9\u4e9b\u529f\u80fd\u95ee\u9898\uff0c\u8fd8\u662f\u6587\u4e0d\u5bf9\u9898\u3001\u8bb2\u89e3\u6a21\u7cca\u3001\u5185\u5bb9\u77db\u76fe\u8fd9\u4e9b\u5185\u5bb9\u95ee\u9898\uff0c\u90fd\u53ef\u4ee5\u5411\u6211\u4eec\u63d0\u51fa\uff0c\u6211\u4eec\u4f1a\u5c3d\u5feb\u7b54\u590d\u3002\u53e6\u5916\uff0c\u6240\u6709\u7684\u6539\u8fdb\u610f\u89c1\u3001\u4fee\u6539\u5efa\u8bae\u4e5f\u90fd\u53ef\u4ee5\u5411\u6211\u4eec\u63d0\u51fa\u3002 \u76ee\u524d\u6211\u4eec\u63a5\u53d7\u53cd\u9988\u7684\u65b9\u5f0f\u4e3a GitHub Issue\uff0c\u4e3a\u6b64\uff0c\u60a8\u9700\u8981\u6ce8\u518c\u4e00\u4e2a GitHub \u8d26\u53f7\u3002 \u9700\u8981\u53cd\u9988\u65f6\uff0c\u70b9\u51fb\u9875\u9762\u53f3\u4e0a\u65b9\u7684\u201cSAST skill docs\u201d\u8fdb\u5165\u6211\u4eec\u7684 GitHub Repo\uff0c\u70b9\u51fb Issue \u680f\u76ee\u540e\u70b9\u51fb\u53f3\u4fa7\u7684 New issue \u6309\u94ae\uff0c\u5728\u8f93\u5165\u6846\u5185\u8f93\u5165\u60a8\u60f3\u8981\u53cd\u9988\u7684\u95ee\u9898\u6216\u8005\u610f\u89c1\u5efa\u8bae\u540e\uff0c\u70b9\u51fb Submit new issue \u5373\u53ef\u3002 \u5982\u679c\u60a8\u60f3\u8981\u53cd\u9988\u529f\u80fd\u95ee\u9898\uff0c\u6211\u4eec\u5e0c\u671b\u60a8\u80fd\u591f\u5728 Issue \u4e2d\u8bf4\u660e\u8be5\u95ee\u9898\u7684\u5177\u4f53\u8868\u73b0\u3001\u5982\u4f55\u590d\u73b0\u8fd9\u4e00\u529f\u80fd\u95ee\u9898\u4ee5\u53ca\u8be5\u95ee\u9898\u662f\u5426\u53ef\u4ee5\u7a33\u5b9a\u51fa\u73b0\u3002 \u5982\u679c\u60a8\u60f3\u8981\u53cd\u9988\u5185\u5bb9\u95ee\u9898\uff0c\u6211\u4eec\u5e0c\u671b\u60a8\u80fd\u591f\u8bf4\u660e\u662f\u54ea\u4e00\u7bc7\u6587\u6863\u7684\u54ea\u4e00\u6bb5\u843d\u7684\u5185\u5bb9\u4e0d\u9002\u5f53\uff0c\u5982\u679c\u80fd\u591f\u63d0\u51fa\u4fee\u6539\u610f\u89c1\u5219\u66f4\u597d\u3002\u6211\u4eec\u4f1a\u5c3d\u5feb\u548c\u8fd9\u7bc7\u6587\u6863\u7684\u4e3b\u7f16\u5199\u8005\u8ba8\u8bba\u4fee\u6539\u3002 \u5982\u679c\u60a8\u60f3\u8981\u53cd\u9988\u6539\u8fdb\u610f\u89c1\uff0c\u6211\u4eec\u5e0c\u671b\u60a8\u80fd\u591f\u8bf4\u660e\u5982\u4f55\u6539\u8fdb\u4ee5\u53ca\u8fd9\u6837\u6539\u8fdb\u80fd\u5e26\u6765\u7684\u597d\u5904\u3002 \u5982\u679c\u4e0a\u8ff0\u53cd\u9988\u7c7b\u578b\u5747\u4e0d\u7b26\u5408\uff0c\u53ea\u9700\u8981\u5c06\u60a8\u60f3\u8981\u53cd\u9988\u7684\u5185\u5bb9\u5199\u660e\u767d\u5373\u53ef\u3002 \u6211\u4eec\u5e0c\u671b\u901a\u8fc7\u7f16\u5199\u8005\u3001\u8bfb\u8005\u3001\u7ef4\u62a4\u8005\u7684\u5171\u540c\u52aa\u529b\uff0c\u6253\u9020\u597d\u8fd9\u4e00\u4efd\u6280\u80fd\u5f15\u5bfc\u6587\u6863\uff0c\u5c06\u5927\u5bb6\u7684\u7ecf\u9a8c\u548c\u77e5\u8bc6\u4f20\u9012\u4e0b\u53bb\uff0c\u4e3a\u6253\u9020 user-friendly \u7684\u8ba1\u7b97\u673a\u7cfb\u800c\u52aa\u529b\u3002","title":"\u5982\u4f55\u5411\u6211\u4eec\u53cd\u9988"},{"location":"source/","text":"\u8d44\u6e90\u94fe\u63a5 \u00b6 \u672c\u90e8\u5206\u6536\u96c6\u4e86\u82e5\u5e72\u7684\u8d44\u6e90\u94fe\u63a5\u3002 \u4e92\u8054\u7f51\u7684\u5b9d\u85cf \u6211\u4eec\u5e0c\u671b\u8bfb\u8005\u80fd\u4e3a\u6211\u4eec\u63d0\u4f9b\u9690\u85cf\u5728\u4e92\u8054\u7f51\u5404\u4e2a\u89d2\u843d\u7684\u4f18\u8d28\u8d44\u6e90\uff0c\u5206\u4eab\u7ed9\u5927\u5bb6\u5b66\u4e60\u3002","title":"\u8d44\u6e90\u94fe\u63a5"},{"location":"source/#_1","text":"\u672c\u90e8\u5206\u6536\u96c6\u4e86\u82e5\u5e72\u7684\u8d44\u6e90\u94fe\u63a5\u3002 \u4e92\u8054\u7f51\u7684\u5b9d\u85cf \u6211\u4eec\u5e0c\u671b\u8bfb\u8005\u80fd\u4e3a\u6211\u4eec\u63d0\u4f9b\u9690\u85cf\u5728\u4e92\u8054\u7f51\u5404\u4e2a\u89d2\u843d\u7684\u4f18\u8d28\u8d44\u6e90\uff0c\u5206\u4eab\u7ed9\u5927\u5bb6\u5b66\u4e60\u3002","title":"\u8d44\u6e90\u94fe\u63a5"},{"location":"source/book/","text":"\u4e66\u76ee\u63a8\u8350 \u00b6 \u672c\u9875\u9762\u5c06\u6839\u636e\u6e05\u534e\u5927\u5b66\u8ba1\u7b97\u673a\u79d1\u5b66\u4e0e\u6280\u672f\u7cfb\u57f9\u517b\u65b9\u6848\u4e2d\u7684\u8bfe\u7a0b\u9700\u8981\u53ca\u5bf9\u4e0d\u540c\u9636\u6bb5\u6240\u9700\u8865\u5145\u77e5\u8bc6\u7684\u8c03\u7814\uff0c\u6307\u51fa\u5404\u4e2a\u8bfe\u7a0b\u5b66\u4e60\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u8865\u5145\u5b66\u4e60\u7684\u7406\u8bba\u4e66\u7c4d\u3002 \u5927\u4e00\u5b66\u5e74 \u00b6 \u300a\u8ba1\u7b97\u673a\u79d1\u5b66\u6982\u8bba\uff08Computer Science: An Overview\uff09\u300b \u63a8\u8350\u7406\u7531\uff1a\u5bf9\u4e8e CS \u4e13\u4e1a\u8bbe\u8ba1\u7684\u6700\u57fa\u672c\u7684\u51e0\u4e2a\u65b9\u9762\u4ecb\u7ecd\u7684\u5341\u5206\u900f\u5f7b\uff0c\u6709\u52a9\u4e8e\u8bfb\u8005\u8fc5\u901f\u6784\u5efa\u8d77\u5bf9\u6574\u4e2a CS \u4e13\u4e1a\u7684\u8ba4\u77e5\u3002 \u300aC++ Primer\u300b \u63a8\u8350\u7406\u7531\uff1a\u300a\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u300b\u8bfe\u7a0b\u53c2\u8003\u4e66\u76ee\uff0c\u5bf9\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u601d\u60f3\u4ecb\u7ecd\u7684\u5341\u5206\u8be6\u7ec6\u3002 \u5927\u4e8c\u5b66\u5e74 \u00b6 \u300a\u6df1\u5165\u7406\u89e3\u8ba1\u7b97\u673a\u7cfb\u7edf\uff08CSAPP\uff09\u300b\uff08\u82f1\u6587\uff1aComputer Systems: A Programmer's Perspective\uff09 \u63a8\u8350\u7406\u7531\uff1a\u300a\u6c47\u7f16\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u300b\u300a\u8ba1\u7b97\u673a\u7ec4\u6210\u539f\u7406\u300b\u53c2\u8003\u4e66\u76ee\u3002\u4e3b\u8981\u4ecb\u7ecd\u4e86\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u57fa\u672c\u6982\u5ff5\uff0c\u5305\u62ec\u6700\u5e95\u5c42\u7684\u5185\u5b58\u4e2d\u7684\u6570\u636e\u8868\u793a\u3001\u6d41\u6c34\u7ebf\u6307\u4ee4\u7684\u6784\u6210\u3001\u865a\u62df\u5b58\u50a8\u5668\u3001\u7f16\u8bd1\u7cfb\u7edf\u3001\u52a8\u6001\u52a0\u8f7d\u5e93\u4ee5\u53ca\u7528\u6237\u5e94\u7528\u7b49\u3002\u4e66\u4e2d\u63d0\u4f9b\u4e86\u5927\u91cf\u5b9e\u9645\u64cd\u4f5c\uff0c\u53ef\u4ee5\u5e2e\u52a9\u8bfb\u8005\u66f4\u597d\u5730\u7406\u89e3\u7a0b\u5e8f\u6267\u884c\u7684\u65b9\u5f0f\uff0c\u6539\u8fdb\u7a0b\u5e8f\u7684\u6267\u884c\u6548\u7387\u3002","title":"\u4e66\u76ee\u63a8\u8350"},{"location":"source/book/#_1","text":"\u672c\u9875\u9762\u5c06\u6839\u636e\u6e05\u534e\u5927\u5b66\u8ba1\u7b97\u673a\u79d1\u5b66\u4e0e\u6280\u672f\u7cfb\u57f9\u517b\u65b9\u6848\u4e2d\u7684\u8bfe\u7a0b\u9700\u8981\u53ca\u5bf9\u4e0d\u540c\u9636\u6bb5\u6240\u9700\u8865\u5145\u77e5\u8bc6\u7684\u8c03\u7814\uff0c\u6307\u51fa\u5404\u4e2a\u8bfe\u7a0b\u5b66\u4e60\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u8865\u5145\u5b66\u4e60\u7684\u7406\u8bba\u4e66\u7c4d\u3002","title":"\u4e66\u76ee\u63a8\u8350"},{"location":"source/book/#_2","text":"\u300a\u8ba1\u7b97\u673a\u79d1\u5b66\u6982\u8bba\uff08Computer Science: An Overview\uff09\u300b \u63a8\u8350\u7406\u7531\uff1a\u5bf9\u4e8e CS \u4e13\u4e1a\u8bbe\u8ba1\u7684\u6700\u57fa\u672c\u7684\u51e0\u4e2a\u65b9\u9762\u4ecb\u7ecd\u7684\u5341\u5206\u900f\u5f7b\uff0c\u6709\u52a9\u4e8e\u8bfb\u8005\u8fc5\u901f\u6784\u5efa\u8d77\u5bf9\u6574\u4e2a CS \u4e13\u4e1a\u7684\u8ba4\u77e5\u3002 \u300aC++ Primer\u300b \u63a8\u8350\u7406\u7531\uff1a\u300a\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u300b\u8bfe\u7a0b\u53c2\u8003\u4e66\u76ee\uff0c\u5bf9\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u601d\u60f3\u4ecb\u7ecd\u7684\u5341\u5206\u8be6\u7ec6\u3002","title":"\u5927\u4e00\u5b66\u5e74"},{"location":"source/book/#_3","text":"\u300a\u6df1\u5165\u7406\u89e3\u8ba1\u7b97\u673a\u7cfb\u7edf\uff08CSAPP\uff09\u300b\uff08\u82f1\u6587\uff1aComputer Systems: A Programmer's Perspective\uff09 \u63a8\u8350\u7406\u7531\uff1a\u300a\u6c47\u7f16\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u300b\u300a\u8ba1\u7b97\u673a\u7ec4\u6210\u539f\u7406\u300b\u53c2\u8003\u4e66\u76ee\u3002\u4e3b\u8981\u4ecb\u7ecd\u4e86\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u57fa\u672c\u6982\u5ff5\uff0c\u5305\u62ec\u6700\u5e95\u5c42\u7684\u5185\u5b58\u4e2d\u7684\u6570\u636e\u8868\u793a\u3001\u6d41\u6c34\u7ebf\u6307\u4ee4\u7684\u6784\u6210\u3001\u865a\u62df\u5b58\u50a8\u5668\u3001\u7f16\u8bd1\u7cfb\u7edf\u3001\u52a8\u6001\u52a0\u8f7d\u5e93\u4ee5\u53ca\u7528\u6237\u5e94\u7528\u7b49\u3002\u4e66\u4e2d\u63d0\u4f9b\u4e86\u5927\u91cf\u5b9e\u9645\u64cd\u4f5c\uff0c\u53ef\u4ee5\u5e2e\u52a9\u8bfb\u8005\u66f4\u597d\u5730\u7406\u89e3\u7a0b\u5e8f\u6267\u884c\u7684\u65b9\u5f0f\uff0c\u6539\u8fdb\u7a0b\u5e8f\u7684\u6267\u884c\u6548\u7387\u3002","title":"\u5927\u4e8c\u5b66\u5e74"},{"location":"source/source/","text":"\u5916\u90e8\u94fe\u63a5 \u00b6 \u4e3a\u4e86\u8ba9\u8bfb\u8005\u66f4\u597d\u5730\u5b66\u4e60\u76f8\u5173\u77e5\u8bc6\uff0c\u672c\u9875\u9762\u63d0\u4f9b\u90e8\u5206\u5916\u90e8\u8d44\u6e90\u7684\u94fe\u63a5\uff0c\u8bfb\u8005\u53ef\u4ee5\u89c6\u81ea\u8eab\u60c5\u51b5\u4f7f\u7528\u3002 OI-Wiki https://oi-wiki.org \u7b97\u6cd5\u7ade\u8d5b\u4e0e\u8bfe\u7a0b OI-wiki \u4e3b\u8981\u9762\u5411\u7b97\u6cd5\u7ade\u8d5b\u53c2\u8d5b\u8005\uff0c\u800c\u7b97\u6cd5\u7ade\u8d5b\u4e2d\u90e8\u5206\u7b97\u6cd5\u7684\u5b9e\u73b0\u4e0e\u8bfe\u5185\u5b9e\u73b0\u6709\u4e00\u5b9a\u7684\u5dee\u5f02\uff0c\u8bf7\u52a1\u5fc5\u6ce8\u610f\u3002 CS \u81ea\u5b66\u6307\u5357 https://csdiy.wiki CS \u81ea\u5b66\u6307\u5357 \u4ece 0 \u5f00\u59cb\u7684 CS \u81ea\u5b66 Roadmap\uff0c\u6309\u77e5\u8bc6\u7c7b\u522b\u6574\u7406\u4e86\u76f8\u5f53\u591a\u7684\u4f18\u8d28\u8bfe\u7a0b\uff0c\u53ef\u4ee5\u5728\u81ea\u5b66\u65f6\u53c2\u8003\u3002","title":"\u5916\u90e8\u94fe\u63a5"},{"location":"source/source/#_1","text":"\u4e3a\u4e86\u8ba9\u8bfb\u8005\u66f4\u597d\u5730\u5b66\u4e60\u76f8\u5173\u77e5\u8bc6\uff0c\u672c\u9875\u9762\u63d0\u4f9b\u90e8\u5206\u5916\u90e8\u8d44\u6e90\u7684\u94fe\u63a5\uff0c\u8bfb\u8005\u53ef\u4ee5\u89c6\u81ea\u8eab\u60c5\u51b5\u4f7f\u7528\u3002 OI-Wiki https://oi-wiki.org \u7b97\u6cd5\u7ade\u8d5b\u4e0e\u8bfe\u7a0b OI-wiki \u4e3b\u8981\u9762\u5411\u7b97\u6cd5\u7ade\u8d5b\u53c2\u8d5b\u8005\uff0c\u800c\u7b97\u6cd5\u7ade\u8d5b\u4e2d\u90e8\u5206\u7b97\u6cd5\u7684\u5b9e\u73b0\u4e0e\u8bfe\u5185\u5b9e\u73b0\u6709\u4e00\u5b9a\u7684\u5dee\u5f02\uff0c\u8bf7\u52a1\u5fc5\u6ce8\u610f\u3002 CS \u81ea\u5b66\u6307\u5357 https://csdiy.wiki CS \u81ea\u5b66\u6307\u5357 \u4ece 0 \u5f00\u59cb\u7684 CS \u81ea\u5b66 Roadmap\uff0c\u6309\u77e5\u8bc6\u7c7b\u522b\u6574\u7406\u4e86\u76f8\u5f53\u591a\u7684\u4f18\u8d28\u8bfe\u7a0b\uff0c\u53ef\u4ee5\u5728\u81ea\u5b66\u65f6\u53c2\u8003\u3002","title":"\u5916\u90e8\u94fe\u63a5"}]}